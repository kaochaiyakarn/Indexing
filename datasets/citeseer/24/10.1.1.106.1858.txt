learning approach information release control claudio bettini university milan italy center secure information systems george mason university va bettini unimi sean wang department computer science university vermont vt center secure information systems george mason university va cs uvm edu sushil jajodia center secure information systems george mason university va jajodia gmu edu controlled release information organization important various considerations privacy competitive information protection strategic data control 
organizations data protection afforded access control 
argued access control suffers problems 
effective access control assumes perfect categorization information access increasingly difficult complex information system 
second access control effective insider attacks users legitimate access rights send sensitive information malicious intent accident 
information release control viewed complementary access control aims restricting outgoing information flow boundary information systems 
presents architectural view release control system 
system emphasizes role automated learning release control constraints 
resulted realization difficult task effective release control release control constraints specified 
learning system data mining machine learning techniques employed generate release control constraints samples provided security officer 
system applies continuous learning adjust release control constraints reduce mistakenly released mistakenly restricted documents 
provides specific example learn keyword release control constraints 
keywords data protection release control release control refers process checking output data generated user request determine information appropriate release security boundary 
nowadays organizations vast amounts information shared organizations general public 
sharing takes form public web pages financial reports technical white papers biographies personnel 
furthermore knowledge workers organizations send messages collaboration purposes 
information sharing needs done controlled fashion account security considerations 
information security number aspects considered literature 
aspects include secure communication perimeter control reliable authentication authorization information cells files relational tables columns tables xml nodes partitioning information cells 
wiederhold wie aspect emphasized requires highly reliable categorization information cells 
management categorization failures occur 
words information categorized highly complex organization possible sensitive information released unauthorized users 
serious threat sensitive information comes careless malicious insiders individuals organizational entities authorized access system 
type threats potentially damaging access control rules organizations rely heavily effective 
insider threats need countered different methods intrusion analysis information forensics 
important tool counter threats release control blocks information gate inside outside addition aforementioned security considerations legal concerns information release need addressed 
depending category information organization may wish append copyright legal notices watermarks 
release control address problem 
release control needs important component securing managing information organization 
tech learning approach release control nical perspective release control system best done separating release control constraints state need controlled checking algorithms monitor outgoing data constraints 
separation allows convenient management release control system fit changing organizational security legal needs allows opportunities new checking algorithms 
view aforementioned technical considerations effective efficient release control system issues need considered carefully 
release constraints established refined second checking outgoing information done efficiently meaningful way 
architectural view release control system focus issue 
relevant source coming release constraints clearly data store 
addition ability simply adding release constraints derived experience high level requirements security officers may query data store determine needs controlled release point 
call manual method 
example access control rules usually adopted restrict access data store 
data restricted access release data checked 
addition information inferred integrity constraints restricted data automatically added release constraints store 
furthermore data similar restricted data may need checked release point 
due involved complexity tasks automated tools necessary 
introduce automated learning approach help acquire release control constraints 
learning approach security office give initial sample set documents including cleared release documents restricted documents 
system try learn initial set release control constraints sample set 
time goes documents released restricted releasing restricting certified security officer learning process periodically adjust release control constraints better job reducing mistakenly released documents mistakenly restricted documents 
outline learning system architecture provide specific example learning release control constraints 
remainder organized follows 
section give formal foundation specifying release control constraints 
give language represent release control constraints xml documents 
section outline architecture release control emphasize role learning architecture 
section give specific example learning keyword release control constraints 
discuss related section conclude section 
formal framework uniform treatment assume data checked release xml format underlying data may table resulting database query semistructured data full text document 
data checked number release constraints 
release constraints release constraint rc pair ci matching rule ci set controlled items 
rc evaluated data released prevents release satisfied 
formally rc gives mapping assigns document label restrict release 
document released release constraint rc rc release data controlled items appear way corresponding matching rules 
set ci controlled items set tuples form 
ai variable symbols ai values 
values range simple domains including integer string boolean complex domains admitting single valued multi valued possibly structured attribute values 
variable symbols may denote attribute names paths document structure 
simplest case variable symbols omitted tuple list keywords 
syntactically attribute part pair specified xpath expression value part specified regular expression string denote word starting certain prefix case numerical value specified simple condition op op number denote values greater equal certain constant 
matching rule specifies document checked controlled items 
example data checked answers database query represented sequence tuples 
simple matching rule may check tuples contains attribute values specified tuples set controlled items 
case data containing unstructured text learning approach release control rule may specify example words tuple set controlled items appear words portion text parameter defined specific rule 
words set controlled items essentially lists pairs attributevalue involved release constraint matching rule specifies relationships 
example consider corporate database includes data employee salaries assume internal policy prohibits release salary woo 
administrator set rc ci employee oo salary equal simple rule relational query results checking query results released tuples containing attribute values specified ci 
case system check tuple returned part database query result making sure values woo appear 
note conceptual model rcs 
practice controlled items compact representations form sql queries general xquery expressions including predicates strings representations 
formal model easily extended represent overriding constraints allowing negative terms control items form 
example protection software documents rejected containing word chip occurrence chip part sequence chocolate chip released 
modeled extension 
language matching rules xml documents subsection focus problem representing matching rule data checked contained xml documents 
design language expressiveness properties consider necessary task 
language able express maximum distance pairs values pre determined upper bound 
terms xml may number edges xml tree separate nodes storing values 
language able express presence certain nodes particular labels semantic tagging degree type leaf root path pair nodes consider distance xml structure 
language able express relationships nodes 
example relationships include difference depth xml tree difference semantic tagging possibly attached nodes presence common ancestor specific tag relationships node attributes language able discriminate order values xml structure 
order may particularly relevant overriding 
chocolate chip example word chocolate appear word chip 
requirements represent matching rule conjunction cardinality rule node relation rules 
cardinality rule form positive integer language keyword denoting number different values specified controlled items observed document 
cardinality rule specifies number values considering negative terms controlled items representing overriding conditions 
cardinality rule default cardinality rule assumed conservative choice 
example set controlled items cardinality rule restrict document contain positive controlled items containing 
case xml documents containment mean presence node attribute identified having text value node relation rule nr 
ak ak represented boolean node formula 
node formula recursively defined set atomic distance formulas atomic node formulas applying standard conjunction negation operators quantification nodes 
existential quantification form exists node appearing path xml tree node formula 
paths defined explained atomic distance formulas 
negation allowed universal quantification disjunction implicitly part language 
atomic distance formula form op paths xml document tree op learning approach release control op path xml document tree non negative integer notation stands length path xml tree document 
example root node xml document easily characterized having path length 
paths pi 
ak denote paths root xml tree nodes associated subset values 
ak controlled items paths obtained applying operators path intersection path difference path prefix length path suffix length atomic node formula compares node property constant value property different node 
set atomic node formulas includes comparison attribute values alue attrname op alue attrname op applies attribute numeric value 
alue attrname op integer op applies attribute numeric value 
alue attrname rel alue attrname rel substr 
applies attribute string value 
alue attrname rel string string string rel substring 
applies attribute string value 
example conjunction check set nodes attribute value 
comparison node meta properties order order op order attribute function assigning unique value node xml tree specific order preorder 
may check certain word appears document 
tag rel string string string rel substring 
example conjunction check set nodes tag able 
degree op degree denotes number children tree non negative integer op 
example leaf node characterized having degree 
example matching rule suffix alue attrname superstring satisfied parent node parent parent node value attribute attrname contains string 
note identified having text values controlled items 
note paths atomic distance formulas considered constants specific xml document considered 
different nodes atomic node formulas constants variables 
constants nodes ones corresponding values 
ak controlled items variables 
variables appear node formula quantification 

release control architecture architecture proposing basic component flow documents going released ii data store documents extracted derived iii release control system monitored security officer 
illustrates components internal structure ignoring level machinery needed learning process 
basic components data store include different types data sources standard relational databases xml document type repositories 
documents asked released may obtained queries different data sources data store access internet intranet services 
databases data store learning approach release control internet accesses email ftp web data store access control rules query retrieval processes database general xml documents documents matching module checking release constraints store derivation module release control system ontologies thesauri add knowledge explicit constraints derived constraints derivation instructions 
general architecture release control released cleared documents restricted documents security officer sources assumed protected usual access control systems 
main modules release control system release constraints store matching module 
module repository release constraints includes constraints explicitly inserted security officer constraints derived data store processes guided security officer constraints derived examples restricted released documents learning process explained section 
example derivation constraints data store information access control rules order derive sensible associations terms directly indirectly bounded items access forbidden rules 
ontologies thesauri derive new release constraints identifying semantical similarities ones 
optimization modules depicted operate release constraints store 
example set release constraints reduced considering subsumption relationships hierarchies matching rules controlled items 
example rc says tuple outgoing data contain strings woo rc says string woo appear outgoing data rc disregarded 
set release constraints release constraints store matching module responsible checking outgoing documents blocking release constraints satisfied 
assume documents xml form module contain matching algorithm xml parsing component 
basic version algorithm may consider explicit listing controlled items release constraint perform keyword matching 
clearly appropriate indexing keywords appearing release constraints necessary applicable release constraints efficiently selected reading sensitive keyword outgoing data 
efficient techniques devised order keep track current position list controlled items release constraint 
sophisticated versions algorithm consider working compact representations controlled items possibly form queries 
integration learning module security officer cases may able explicitly provide controlled items associated matching rules believe large number documents restricted vague criteria available 
reason framework proposes integration architecture learning module main goal learning release constraints 
particular show learning component generate specific matching rules starting controlled items domain knowledge training set containing documents marked restricted released 
principle sufficiently large training set positive negative examples may ask learning algorithm derive controlled items matching rules accordingly syntax described 
practice realistic requirement learning process particular extraction features examples guided knowledge specific domain 
possibility start possible set critical correlated keywords security officer set parameterized matching rules 
example security officer may consider distance keywords document relevant criteria number occurrences keywords relevant 
case upper bound distance parameter tuned learning process 
main issue choose appropriate parameterized rules algorithm may minimize rate mistakenly released mistakenly restricted documents tuning parameters 
order illustrate general idea specific context matching rules learning approach release control give example considering cardinality rules 
observed section default conservative cardinality rule obtained 
value may parameter learning process 
example training set may observed correctly restricted documents contain terms controlled items mistakenly restricted ones contain 
value may raised 
course hypothesis document corpus learning algorithm including size training set hold preserve correct behavior system reducing mistakes 
context security may desirable implement learning process preserves conservativeness property documents certified restricted security officer restricted system 
preserving property implies derivation new rules refinement existing rules lead global set release constraints able correctly classify documents known restricted 
depicts learning module integration architecture including monitoring tool discussed 
learning module release constraint store training data log security officer monitoring tool potential mistakes 
learning module monitoring tool ontologies thesauri learning module 
learning module main functionalities derives release constraints initial set system 
mentioned performing task requires training set documents marked restricted released approved security officer requires domain knowledge possibly form controlled items parametric rules 
impose rules obtained learning algorithm preserve conservativeness property system rules correctly restrict documents marked restricted training set 
algorithms strategies involved task specific assumptions described section 
helps refining system behavior identification system operation mistakenly released mistakenly restricted documents 
task assumption security officer monitors system behavior provides feedback learning module dividing samples processed documents categories correctly restricted correctly released mistakenly restricted mistakenly released 
considered form online learning process may automatically start large set samples available 
essentially approaches perform task re applying learning process initial set considering training set new samples documents classification verified past security officer 
set large strategies possible including example sliding time window past strategy 
rules obtained process replace previous ones 
ii refining current rules new set documents 
potentially efficient approach details done dependent learning algorithm 
monitoring tool critical system huge number documents flowing specific strategies devised monitor behavior order provide feedback learning module 
trivial strategy consists periodically extracting samples forwarding security officer unsatisfactory significant frequency sampling involves amount security officer 
architecture propose introduce monitoring tool filters documents similarity metric drastically reduce number documents examined security officer 
learning approach release control note principle tool applied restricted documents identify potentially mistakenly restricted ones released documents identify potentially mistakenly released ones 
mistakenly restricted documents may ways recognized feedback users requests refused critical problem serious released ones 
restricted document associated release constraint controlled items matching rules prevented release 
security officer examines document association help recognizing reason sensitivity case mistaken restriction may lead drop explicitly modify rule 
released documents side attached information 
focus tools detect potentially mistakenly released documents 
monitoring tool considers similarity released documents restricted ones closeness document classification threshold 
technique learning details really depend specific learning algorithm intuitively works follows essential features documents restricted released represented numerical values dimensional boundary separates types documents 
document examined features computed closeness boundary evaluated 
intuitively documents close boundary similar restricted released ones 
monitoring tool rank documents closeness boundaries dynamically asynchronously examined security officer 
monitoring tool uses techniques identify potential documents ontologies thesauri substitute words structures ones appear controlled items 
explicit relaxation rules 
example increase distance distance condition decrease cardinality allow regular expression string literals dropping rules making satisfied indefinite order infinite distance intuitively application techniques learning guided goal identifying small fraction released documents 
required due limited resources importantly implicit assumption security officer policies quite conservative restricted documents incorrectly released 
components architecture operate asynchronously respect main release constraint system 

learning keyword release control constraints mentioned discussion release control system architecture section learning purpose obtaining specific release control constraints plays essential role 
mentioned learning guided domain experts security officers giving relevant features learning process focus 
section study detail feature learning keywords release control constraints considered 
general feature learning requires domain experts provide certain domain knowledge task learning 
domain knowledge specifies types features important task hand 
learning mechanism identify specific features types distinguish different sets documents 
believe approach useful practice 
information retrieval techniques features texts routinely deciding relevance documents 
example text appearing subject line title may important appearing body document 
features information retrieval usually hard coded information retrieval systems 
may reasonable documents structure 
document represented xml features various types need considered 
features important xml documents determined specific domains applications 
example applications documents structured hierarchical tree parts contain chapters chapters contain sections section contain paragraphs important talk contents belonging particular level hierarchy sections chapter 
important domain experts specify certain generic types features important domain 
release control discussion domain specific feature implies strategy generating release control rules 
step domain experts specify certain type features important 
step learning system discovers conditions features release control purpose 
illustrate approach keyword release control 
learning approach release control keyword features approach assume controlled items simply keywords feature specifies particular relationship particular ways appearance keywords document 
particular ways appearance type feature domain expert 
codify features notion feature function 
formally define feature function function xml document nodes returns tuple values 
nm 

note functions define nodes xml documents 
call keyword appearance keywords determine nodes xml document consider show 
example example features distance feature dist integer parameter dist defined ni stands path root xml document node ni 
feature extracts distance nodes document tree viewed graph 
common ancestor feature lca tag node defined suffix 
string ni path root node ni 
feature extracts tag value lowest terms node level common ancestor nodes 
ordering ocd order order 
relational comparison symbols 
feature gives order relationship nodes 
examples feature function returns value specifically tuple value 
feature functions naturally specifying conditions appearance keywords xml documents 
example keywords want talk appearance certain distance xml document 
need specify condition involving distance nodes contain respectively 
formally define notion occurrences keywords xml document follows set keywords 
kn document occurrence integer greater number elements partial mapping occ nodes occ ki contains ki 
occ ki defined number ki occ ki defined exactly contains means attribute occ ki value ki value occ ki exactly ki 
simplify presentation contains mean value node exactly keyword 
example xml document occurrences 
note tree representation xml document show node values xml tree 
information xml documents omitted 
labels nodes circle meant identify nodes presentation purpose part xml documents 

xml documents 
partial occurrence occ said maximum occ defined maximum number keywords partial occurrences 
ready extract keyword features xml documents 
assume feature function takes form 
nm 

features extracted document function set tuples follows 
tuple exists occurrence occ occ 
occ km 

example distance feature function set keywords set features extracted xml document 
distance features keywords extracted xml document 
set keywords controlled items boolean condition features extracted feature functions learning approach release control release control constraint 
specifically document extract features feature functions test boolean condition features 
specific features satisfies condition block release document 
example suppose release control constraint specifies distance keywords 
documents released contains occurrence distance 
suppose release control constraint specifies lowest common ancestor keywords value document released 
learning keyword release control constraints security officer certainly set set release control constraints giving set keywords condition features extracted set feature functions 
practical system system need learn set examples establish specific release control constraints 
subsection show may done keyword release control constraints 
mentioned earlier assume set feature extraction functions set domain experts types features concerned release control constraints security officer gives collection keyword sets controlled set documents provided learning samples documents cleared release restricted security officer 
task learning give set release control constraints specifying conditions feature values extracted feature functions 
outline method 
key issue convert learning problem traditional learning algorithms apply 
assume set keywords concerned 
feature function 
nm 
create attributes relational database schema 
subset 
km size get attribute name ai 
km 
relational schema attributes 
furthermore add document id extra attribute relational schema 
example consider keyword set features example 
attributes addition document id attribute dist lca ocd dist lca ocd dist lca ocd dist lca ocd dist lca ocd dist lca ocd course certain relationships parameters may lead reduction number attributes 
example value dist dist omit 
example know ocd implicitly know ocd omit attributes 
reasoning reduce number attributes example addition document id attribute 
training samples set feature tuples relational schema follows 
xml document maximum occurrence occ generate tuple follows attribute aj 
km gets null value number keywords occ defined attribute gets corresponding value occ 
occ km 
example consider keyword set xml document 
consider occurrence document mapped 
value dist value ocd 
method occurrence set keywords xml document sets feature tuple relational schema 
set documents set keywords set set feature tuples occurrence keywords document 
set documents need restricted determined security officer tuples obtained document form set restricted feature tuples 
set documents released tuples obtained document form set releasing feature tuples 
note apparent difference semantics feature tuples sets 
restricted set feature tuples document needs restricted tuple belong document dangerous 
learning approach release control example suppose want restrict document released keywords appear distance 
case xml documents restricted 
distance features satisfy restricting constraint 
reducing learning task sets feature tuples apply traditional learning algorithm mit qui 
general learning algorithm produce classification condition parameter values 
feature tuple relational schema classification condition gives restrict release 
document feature tuple results value restrict document restricted release 
classification condition matching rule release control constraint corresponding keywords controlled items 

related concept information release control explicitly introduced wie mon rw general formal framework currently exists 
form control outgoing data performed long time different contexts basic filtering tools heuristics directly coded programs 
attempt specify rules high level language represented felt swa features provides language statements identify words parts words documents drop substitute words 
restricting rules compiled program automatic matching 
despite aware structured formal framework release control proposing mention active research field information filtering includes publication subscription systems 
information filtering system information system designed unstructured semistructured data bc opposed typical database applications highly structured data 
respect general information retrieval paradigm large body data searched specific user search criteria information filtering usually case large number specifications information needs large number people tasks matched text data cases dynamically produced distributed data sources 
publication subscription systems see fjl ass instance information filtering applications 
example consider task sending user subscribing news service subset daily news specified profile 
analogy quite clear set release constraints considered set subscriptions matching outgoing data leads specific action usually preventing release data 
despite analogy goal deal heterogeneous set data includes structured data resulting database queries 
done specifically xml documents filtering publication subscription systems af pfj 
considering algorithms techniques proposed area adaptation implement matching module architecture 
clear algorithms adapted language matching rules compatible specific requirements security application imposes 
alternative approaches matching module represented continuous query techniques ccc mshr 
related commonly known internet filtering software 
filtering blocking software restricts access internet content variety means 
may scan web site content keywords phrases strings text 
may restrict access source information subjective ratings system assigned anonymous third party 
software focused blocking pornographic content considered successful blocking internet content 
partly due way blocking criteria devised partly inherent complexity task 
despite aspects related considering issues treatment structured semi structured data data considered systems usually unstructured structure totally unknown 
regarding learning approach general techniques learn release constraints training set positive negative examples known qui mit 
learning extensively applied text categorization text filtering seb efforts study apply learning techniques categorization filtering xml documents just started pose open questions 
plan investigate problem learning release learning approach release control constraints refining constraints considering particular statistical learning approaches cst 
regarding intention integrating keyword techniques text categorization algorithms take account results genoa technology integration experiment mon performed part darpa project boundary control 
experiment keyword nlp natural language processing techniques compared accuracy concrete experimental scenario experiment involved corpus heterogeneous documents controlled release potentially sensitive information terrorist attacks 
scenario referred particular japanese cult bombed japanese metro system pathogen 
large amount done past decade word sense disambiguation see les ontology reasoning see gl important issues content document management application particular accurate release control 
example word sense disambiguation natural language processing boundary control limited text documents genoa technology integration experiment mon performed part darpa project boundary control 
case ontologybased reasoning add relevant rules feature functions xml documents 

architecture controlled information release 
emphasized automated learning release control constraints infrastructure release control 
formalized release control constraints learning strategy keyword release control constraints 
release control system useful traditional data system database system ftp directories web sites 
applications web services benefit release control 
web services new emerging paradigm internet computing heavily xml soap protocol 
web services network standard way interfacing backend software systems dbms net ee corba objects adapters erp packages 
standards currently definition authentication authorization encryption controlling information released web service general internet restricted subset cooperating pro cesses major issues probably affect success new paradigm 
major objectives proposed project develop specific technology web services envision interesting integration technologies may emerge results web service architecture 
content firewall interesting application release control system 
current firewall systems selecting incoming outgoing packets source destination ip port numbers 
filtering software dirty word checking virus identification cases integrated 
content analysis quite primitive definition filtering criteria matching algorithms 
advocate approach incorporates release control firewall systems allow advanced monitoring contents released firewall 
supported nsf iis 
bettini partly supported italian web minds project 
wang partly supported nsf career award 
authors nicol cesa bianchi university milan insightful discussions computational learning techniques 
af mehmet michael franklin 
efficient filtering xml documents selective dissemination information 
proceedings th international conference large data bases pages los altos ca usa 
morgan kaufmann publishers 
ass marcos aguilera robert strom daniel sturman mark tushar chandra 
matching events content subscription system 
proceedings eighteenth annual acm symposium principles distributed computing podc pages new york may 
association computing machinery 
bc belkin croft 
information filtering information retrieval sides coin 
communications acm december 
ccc don carney cetintemel mitch cherniack christian convey lee greg michael stonebraker tatbul stan zdonik 
monitoring streams new class data management applications 
proceedings th international conference large databases vldb pages 
chen david dewitt feng tian yuan wang 
niagaracq scalable continuous query system internet databases 
proceedings acm sigmod international conference management data may dallas texas pages new york ny usa 
acm press 
cst cristianini shawe taylor 
cambridge university press cambridge uk 
peter fischer michael franklin raymond 
yfilter efficient scalable filtering xml documents 
proceedings international conference data engineering icde pages washington brussels tokyo 
ieee 
fjl fran fabret arno jacobsen fran ois llirbat jo pereira kenneth ross dennis shasha 
filtering algorithms implementation fast publish subscribe systems 
proceedings acm international conference management data sigmod pages 
gl michael gruninger lee 
ontology applications design 
communications acm february 
sushil jajodia samarati maria subrahmanian 
flexible support multiple access control policies 
acm transactions database systems june 
les michael lesk 
automated sense disambiguation machinereadable dictionaries tell pine cone ice cream cone 
proceedings conference 
mit tom mitchell 
machine learning 
mcgraw hill 
mon eric 
genoa tie advanced boundary controller experiment 
th annual computer security applications conference 
acm 
mshr samuel madden shah joseph hellerstein raman 
continuously adaptive continuous queries streams 
proceedings acm sigmod international conference management data sigmod pages new york 
acm press 
new eric newcomer 
understanding web services 
addison wesley 
pfj jo pereira fran fabret arno jacobsen fran ois llirbat dennis shasha 
high throughput xml publish subscribe system 
proceedings th international conference large data bases vldb pages orlando september 
morgan kaufmann 
qui quinlan 
learning decision tree classifiers 
acm computing surveys march 
rw rosenthal gio wiederhold 
document release versus data access controls sides coin 
ling liu david grossman editors proceedings tenth international conference information knowledge management cikm pages new york november 
acm press 
seb fabrizio sebastiani 
machine learning automated text categorization 
acm computing surveys 
swa swarup 
automatic generation high assurance security guard filters 
proc 
th nist ncsc national computer security conference pages 
wie gio wiederhold 
protecting information access granted collaboration 
proc 
data application security development directions ifip tc wg fourteenth annual working conference database security pages 
