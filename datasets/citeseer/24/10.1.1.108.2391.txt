multi agent peer peer information retrieval systems concurrent search sessions zhang victor lesser dept computer science university massachusetts amherst ma cs umass edu lesser cs umass edu cooperative peer peer information retrieval systems node considered intelligent agent agents collectively provide information retrieval service 
order effectively support multiple concurrent search sessions network propose traffic engineering techniques minimize processing communication bottlenecks 
novel agent control mechanism elements include resource selection local search scheduling feedback load control 
new phase query routing algorithm organizational knowledge 
experimental results show framework reduce congestion situations increase system throughput improve considerably system utility 
categories subject descriptors information systems applications miscellaneous general terms algorithms keywords peer peer information retrieval agents control 
years peer peer information retrieval ir systems begun receive considerable attention 
peer peer information retrieval system consists set nodes connected peer peer fashion 
node hosts document collection share nodes nodes provide information retrieval service users 
consider information retrieval task search session nodes forward queries neighbors perform ir operations return search results 
lack complete date information states nodes network republish 
aamas may japan 
copyright acm 
requires sophisticated coordination strategies 
addition presence concurrent search sessions adds level complication due bandwidth processing capacity limitations nodes may able complete forwarding local searches timely fashion queries received 
nodes decide actions take search session order execute actions order maximize system utility 
local decisions place agent collectively determine way concurrent queries distributed processed network 
extend multi agent infrastructure developed single search session handle multiple concurrent search sessions 
extensions required development new agent control mechanism novel query routing algorithm queueing theory analysis 
mechanisms control flow information different perspectives network exploit available resources reducing occurrence congestion situations 
purpose local control mechanism agents local observations neighboring agents improve average effective propagation speed search sessions concept introduced sections 
elements control mechanism include resource selection local search scheduling feedback load control 
coordinated search algorithm modified version previously developed phase query routing algorithm exploits static agent organizational knowledge locate relevant documents quickly time minimizing hot spots caused concurrent search sessions 
experimental results show framework reduce frequency congestion situations increase system throughput improve system quality 
contributions include novel agent control mechanism queueing theoretical analysis simple feedback probabilistic load control component avoid congestion situations dynamically exploiting available communication processing bandwidth distributed phase query routing algorithm hierarchical structure agents balances search traffic network 
assumptions 
agent maintains independent index ir search engine local document collection 
introduce restrictions local search engines network populated agents having different local search engines 
second experimental results local search engines perfect return relevant documents collection query 
third assume third party protocol place merge returned results 
protocol deal merging returned lists 
fourth assume document collections hosted agents disjoint total number relevant documents certain query sum relevant documents returned agent 
lastly assume agents cooperative agree protocols propagating resource descriptions accepting queries peers returning search results originators queries remainder organized follows section discusses related research sections introduce system architecture information retrieval system individual agent structure respectively 
section presents local scheduling algorithm agent 
section introduces phase search algorithm hierarchical agent organization section provides experimental settings explains results section discusses section summarizes major contributions 

related related lines research query routing algorithms peer peer information retrieval systems traffic engineering techniques ip level application level network research 
line relevant research includes studies pure peer peer information retrieval systems hierarchical peer peer systems 
lu proposed framework including resource selection resource representation result merging hierarchical environment 
particular language model search algorithm employed top fashion 
query routing process considered distributed search process natural study system multiagent framework 
research efforts consider situations multiple concurrent search sessions focus 
second line relevant research network traffic engineering 
traffic engineering concerned ip level routing problems involves adapting routing traffic network conditions joint goals user performance efficient network resources 
studied line congestion control attempts minimize delays internet routing 
query routing information retrieval differs considerably ip level routing problems similarities exploited query routing algorithms 

problem description agents peer peer information retrieval system constitute graph 
set set agents system set includes connections agents 
search session si starts agent aj receives user time tl 
search process receipt query agents conduct local searches forward query neighbors return search results agent aj 
agent aj keeps set result tuples tm si am qs am element set specifying fact agent contributes certain amount quality qs am case search session si time search conducted agent am evaluated line considering ratio number relevant documents returned agent am total number relevant documents network 
notice size result tuple set may keep growing search results returned agents 
cumulative quality search session time sum quality fields result set tk obtained time formally defined qs qs tk ak search process agents discard queries previously processed preventing queries looping system forever 
search session ends agents receive query drop 
define period query entering system leaving system duration search session maximal quantity search session defined 
duration search session depends factors including connectivity agent organization query routing algorithm local scheduling algorithms agents 
general long search session duration indicates occurrence hot spots network 
hot spots usually characterized communication congestion long query queue length agents 
focus open information retrieval systems meaning queries enter network agent outside users forming multiple concurrent search sessions system 
model define arrival rate jobs outside ith node network 
distribution incoming queries single agent conforms poisson distribution arrival rate outside open network presence multiple concurrent search sessions define system utility gq sum cumulative utility search sessions including outstanding search sessions finished search sessions assumption search sessions considered equally important gq qs 
agent internal structure section describe internal structure local scheduling algorithms individual agent 
illustrates components agent architecture document collection associated collection descriptor search engine agent view structure control unit 
section describes components section describes control unit 
document collection hosted agent includes set documents share peers 
local search engine allows agent conduct local searches return agent internal structure agent control unit search engine collection agent view internal agent structure relevant documents receiving user requests 
collection described collection descriptor considered signature collection 
distributing collection descriptors agents gain knowledge content distributed agent network 
collection descriptor characterizes distribution vocabulary collection 
language model concept proved effective various previous studies distributed ir field 
language model interesting properties easily exploitable peer peer network system 
importantly lightweight concise accurate descriptor document collection 
additionally size collection model independent size document collection 
agent view structure agent restricted view network determines underlying topology agent virtual organization 
agent view structure contains collection descriptors set agents collections addresses agents related information connection type 
design agent view structure depends underlying topological agent organization 
power law flat agent organization connection type needed agents play role 
hand multiple connection types hierarchical peer topeer agent organization including links connecting upper level agents lower level agents lower level agents upper level agents agents level 
specifics connection type information deciding route queries 
information agent view structure role plays search process detailed 

agent local control mechanisms information retrieval performance concurrent search sessions depends resources allocated search sessions 
lack centralized control concurrent searches lead uneven distribution query load agents uneven load cause situation agents flooded incoming queries agents largely idle 
mitigating problem requires agents able control message flow local perspective prevent congestion speed propagation speed search sessions network 
addition congestion prevention order maximize system utility agents disseminate queries relevant agents exploit bandwidth efficiently reduce communication processing load 
section analytical model queueing theory agent control 
particular control unit agent decisions regarding queries process locally order process local search queries forwarded resource selection 
resource selection algorithms resource selection algorithm chooses subset neighboring agents may contain relevant documents information location relevant documents forward query processing 
resource selection algorithms characterized ir calculation overhead communication load induce focused search existing resource selection algorithms include broadcast routing algorithms probabilistic random routing algorithms language model algorithms 
resource selection algorithm incurs certain amount cost depending specific operations 
instance broadcast algorithm needs calculation incurs minimal selection overhead easily saturate network messages probabilistic random approach saves communication load increases local computation load 
language model approach different trade 
requires relatively expensive comparison operations significantly reduce number messages propagating system 
expensive computation operations reduce agents throughput described sections 
presence concurrent search sessions preferable resource selection algorithm generates minimal communication load requires expensive comparison operations 
trade message number amount computation analyzed sections 
local scheduling mechanism individual agent control unit maintains queues including message queues contain messages forwarded specific agents local query queue contain queries waiting local processing 
set agent control units network constitutes queueing network system 
section approaches organizing queueing network introduced compared utilization rate throughput 
assumptions order simplify analysis 
service times queue including resource selection local search scheduling message forwarding exponentially distributed 
inter arrival times queries random poisson distribution 
channel capacity arbitrary agents ai aj fixed denoted cij 
length queries system constant 
assumption simplifies calculation throughput communication channels 
shows agent control unit indicates resource selection local searches forwarding parallel queries related 
model consists qrs contains queries forwarded neighboring agents qls queue contains queries waiting local search operations message forwarding queues agent aj agent view structure 
queues considered queues assumptions 
arrival rate queue qrs qls agent ai calculated departure rate ji upstream agent aj arrival rate users agent ai ji practical system agents discard queries processed previously ensure communication 
assume arrival rate non redundant queries resource selection time spent query denoted trs service time local search tls 
service times satisfy exponential distribution 
queue qrs qls arrival rate specified trs equation 
throughput qrs qls note separating queue queues tls local search operation longer bottleneck 
incoming rate higher service rate qls agent buffer incoming queries processing 
arrival rate message queue qij ij number messages departing qs time unit ij utilization rate message queue qij throughput qij ij ij qi ij cij agent contributes system utility finished local search performance scheduling algorithm local search queue determines fast utility accumulated 
selection query expense executing search sessions time algorithm affects fairness network search process 
worth mentioning local fairness necessarily lead global fairness 
simple scheduling algorithm local query queue come serve fcfs agents process queries enter system earliest 
fcfs algorithm fair agent local perspective cause significant delay queries enter system time 
alternative scheduling approach greedy algorithm aims maximize utility agent local perspective 
gq qs qa qa si qs defined local accrued utility agent ai 
order maximize utility agent selects relevant subset queries process 
order maximize local utility heuristic sorting algorithm order queries queue kullback leibler kl distance query model local collection model 
kl distance metric evaluate distance distributions 
calculation detail introduced 
resource selection qs local search load balancing unit agent internal structure parallel control mechanism feedback probabilistic load control unit section analyzed behavior queueing network stable 
query arrival rate service rate queue length expanding 
section analyze cause hot spots model feedback probabilistic load control mechanism order avoid mitigate congestion situations 
creation hot spots model cases create congestion situation arrival rate message queues service rate ij cij arrival rate queue qrs service rate trs equation equivalent ji section propose load control mechanism avoid situations improving system performance 
probabilistic load control algorithm order control communication load limited observations network agents employ probabilistic algorithm 
specifically agent forwards queries neighboring agents considers capacity communication channels takes account neighboring agents service rates acquired dynamically analyzing feedback information sent neighboring agents periodically 
query set resource selection algorithm agent ai selects forward agent aj trs query set agent ai receives processed previously certain time period assume certain period queue qs receives non redundant query set load control mechanism randomly selects pij query set qij set 
notice ij agent ai determines probability pij qij way qij pij 
pij min qij determined ij fij qij min fij cij fij determined agent aj forwarded agent ai feedback control number messages forwarded agent aj agent ai 
fij determined fij tij ij tij trs recall arrival rate queries outside users agents 
tij characterizes overload situation agent aj specifies agents selected resource selection algorithm higher priority agents 
agent ai forward query agents utilization rate communication channel lower 
prevents situation queries scheduled communication channel ai aj 
inparticular maximal capacity communication channel maximal number queries agent aj process timely fashion agent ai 
decides query arrival rate low load control unit increase utilization communication channel attempt increase speed search sessions propagate system forwarding queries agent aj set selected resource selection algorithm 
describes feedback information generated 
agent aj requests upstream agents reduce communication load tij order prevent congestion situations 

balanced phase query routing algorithm control mechanism described engineers traffic flow distributed information retrieval system local perspective 
effect mechanism phase query routing algorithm hierarchical ir system limited fact agents possess narrowly defined non local view content network traffic 
section introduce query routing algorithm exploits encompassing static view network topology route queries 
interaction mechanisms key approach 
previous proposed hierarchical agent topology phase search algorithm routing queries 
section extend suitable concurrent query processing network 
hierarchical agent society agents roles query processor 
non leaf agents organization take roles leaf agents take role query processor 
mediator manages group agents takes central role group management including decisions new agent added group reorganize group selection group members handle query propagation queries non group members 
take advantage hierarchical agent organization phase hierarchical search algorithm developed 
protocol illustrated agents phase forward queries top level mediators find appropriate starting points search 
second phase concurrent search initiated starting points 
intention algorithm conduct searches focused fashion reduce communication messages 
notice load may unbalanced network 
arrival rate top level mediator ai denote set direct indirect members agent ai 
equation query arrival rate users query arrival rate coming member set agent ai query arrival rate coming neighbors set 
resource selection algorithms expensive selection algorithm top level mediators perform comparisons query model collection model agent 
algorithm balanced approach tends increase dramatically burden top level mediators creating hot spots network 
resolve problem propose improved phase search algorithm demonstrated 
balanced phase query routing algorithm phase query routing algorithm primarily conducted direction 
starts initiator query forwards query similarity probe messages certain ttl time live value lateral links agents level locate relevant clusters 
receipt probe messages agents return back similarity values collections queries question 
ttl value expires agent forward query stopping search path 
comparing similarity returned agents initiator selects similar agents proceed second phase search 
second search phase primarily conducted inside group information flows vertical direction 
particular agents forward query upward links downward links second phase 
evaluation purposes explicit recognition individual agents query longer processed agent network 
process continues network agents receiving query drop message agents forward 
reality phase controlled ttl value limit search efforts 
way traffic load evenly distributed various levels hierarchy entry points queries randomly distributed network 
new search strategy mitigates hot spot problem encountered previous algorithm 

experimental settings results analysis testbed task routing agent network organization multi agent information retrieval testbed 
built top farm simulator provides data dissemination framework large scale distributed multiagent organizations 
supports importation agent organization profiles including topological connections features 
agent composed agent view structure control unit 
simulation agent pulsed regularly agent checks incoming message queues performs local operations forwards messages agents experimental settings results analysis experiment trec vlc dataset contains sub collections simulate collections hosted agents 
trec vlc originally split trec vlc collection data sources order create testbed distributed information retrieval research 
trec vlc part trec collections distributed national institute standards technology nist testing comparing current text retrieval techniques 
trec vlc large collection includes documents different data sources news patents web 
formation hierarchical agent organization achieved hierarchical clustering algorithm mentioned 
assumption global information content distribution available topology formation 
absence global information proposed distributed hierarchical clustering algorithm form hierarchical organization exploited 
topology generation process degree information agent estimated algorithm introduced parameters 
experiments estimate upward limit downward degree limit linear discount factors 
topology built queries randomly selected query set trec vlc injected system poisson distribution 
addition assume agents equal chance getting queries environment agent 
experiments set mean incoming queries environment agent network time unit 
service time communication queue qs qrs trs time unit 
service time local search queue tls time units 
kl divergence measure distance collection models collection models query models 
formula log approximation approach speed calculation kl distance convert similarity measure 
calculation details 
performance measures measures compare different search strategies propagation speed search session si isdefined ratio number agents visited time size agent society average propagation speed defined average propagation speed search sessions network 
notice amount time search session starts 
maximal proportion agents message visits 
effective propagation speed search session si defined ratio number relevant documents hosted visited agents time table experimental results various search strategies name topology rs lc gu gq pbn powerlaw broadcast powerlaw broadcast htn hierarchical twophase hierarchical twophase hierarchical balanced hierarchical balanced powerlaw powerlaw lc hi hi lc search strategies gq versus message number total number relevant documents network note ratio equal recall ratio local searches may scheduled finished time average effective propagation speed defined average effective propagation speed search sessions network 
maximal proportion agents message visits session si 
global utilization ratio gu defined average utilization rates agents network 
utilization ratio agent defined probability agent busy queue nonempty 
low global utilization ratio attributed low query arrival rate poorly designed resource selection process agent search topology creates unbalanced data flow network leaving agents queue entries flooding 
results analysis evaluation table lists experimental results different search strategies time units 
strategies explore importance different topological agent organizations powerlaw topology hierarchical topology search strategies broadcast phase hierarchical balanced hierarchical search strategy 
fig 
depicts global quality system function number messages transmitted 
hi lc curve hierarchical balanced phase search local balancing techniques powerlaw lc shows performance broadcast search algorithm running powerlaw topology 
paragraphs analyze experimental results results shown fig 
indicate hi lc hi lc hi lc hi lc various arrival rates vs utility utility increase overtime various arrival rates specific search strategy affected different arrival rates external queries 
load balance mechanism results balanced hierarchical details table achieved highest utility limiting amount communication relative broadcast approach 
additionally findings revealed experimental results phase search algorithm designed take advantage hierarchical agent organizations way queries forwarded system easy form hot spots slow propagation queries network 
table phase search algorithm produces low search quality 
hand balanced hierarchical algorithm advantage lateral links achieves best search quality tested approaches terms number communication messages utility 
due fact queries largely forwarded inside relevant groups immediately forwarded top level mediators phase search 
avoids top level mediators hot spots 
secondly load balancing mechanism tends improve system performance reducing number messages query arrival rate increases congestion situations occur increasing number messages network service load utilization communication channel low 
experimental results load balancing mechanism improves phase search algorithm 
attributed fact routing phase search algorithm unbalanced query arrival rate experiments 
preliminary experimental results demon strate contribution load balancing depends local computational capacity 
particularly traffic engineering techniques contribute performance local searching bottleneck 
local search queue size increases certain level optimizing traffic significantly improve search performance 
remains discover correlation traffic flow global search performance 
thirdly fig 
shows system performance increases steadily increase query arrival rates 
demonstrates system stable 
broadcast approach surprise performs quite 
generates lot extraneous messages filtered locally language model greedy local search scheduling algorithm 
large number messages distract agents local searches 

discussion directions pursue provide differentiated service search sessions selectively different search engines parameters trade likelihood finding relevant documents time required search 
want able specify search sessions important expand model utility function search session may necessarily linear quality accrued time 
assume utility functions increase faster increase slows certain amount quality accrued 
qs objective measure reflects recall ratio time search session si 
measure user utility defined capture preferences users number relevant documents returned different periods search process 
qs system utility gu defined sum utility search session certain time period gu qs selecting appropriate function users specify preferences search session si prefer quick response relative low recall ratio vice versa 
take consider user satisfaction linearly increases relevant documents returned 

cooperative peer peer information retrieval systems node considered intelligent agent agents collectively provide information retrieval service 
order effectively support multiple concurrent search sessions network propose traffic engineering techniques minimize processing communication bottlenecks 
novel agent control mechanism elements include resource selection local search scheduling feedback load control new phase query routing algorithm organizational knowledge 
experimental results show framework reduce congestion situations increase system throughput improve considerably system utility 

callan 
distributed information retrieval 
kluwer academic publishers reading massachusetts 
french powell callan viles prey mou 
comparing performance database selection algorithms 
research development information retrieval pages 
gallager 
minimum delay routing algorithm distributed computation 
ieee transactions communications pages jan 
hawking craswell thistlewaite 
overview trec large collection track 
proceedings tenth text retrieval conference trec pages 

modeling designing multi agent systems explicit organizational design 
phd thesis university massachusetts amherst amherst massachusetts 
bryan lesser 
farm scalable environment multi agent development evaluation 
lu callan 
federated search text digital libraries hierarchical peer peer networks 
proceedings seventh european conference information retrieval research ecir 
palmer 
generating network topologies obey power laws 
proceedings globecom november 
ponte croft 
language modeling approach information retrieval 
proceedings st annual international acm sigir conference research development information retrieval pages 
acm press 
callan 
robustness content search hierarchical peer peer networks 
cikm proceedings thirteenth acm conference information knowledge management pages new york ny usa 
acm press 
zhang croft levine lesser 
multi agent approach peer peer information retrieval 
proceedings third international joint conference autonomous agents multi agent systems july 
zhang lesser 
dynamically formed hierarchical agent organization distributed content sharing system 
ieee wic acm international conference intelligent agent technology iat september beijing china pages 
ieee computer society 
