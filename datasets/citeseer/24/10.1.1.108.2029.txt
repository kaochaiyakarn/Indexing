ieee 
th asia pacific software engineering conference taipei taiwan 
december model driven semantic web service composition roy gr sintef information communication technology box blindern oslo norway roy sintef number available web services increases growing demand realise complex business processes combining reusing available web services 
reuse combination services results composition web services may involve services provided internet 
semantically described web services automated matchmaking capabilities help identify suitable services 
address need semantically defined web services owl wsml proposed competing semantic web service languages 
show proposed semantic web service languages utilized model driven methodology building composite web services 
addition combine semantic discovery support processing qos requirements apply ranking selection candidates 
methodology describes process guides developer phases starting initial modelling new composite service deployed published consumed users 
growing number web services implemented available internally enterprise externally users consume 
web services reused composed order realise larger complex business processes 
define web services services available internet protocols xml data formats description invocation 
web service registries allows web services published discovered 
web service composition description web services interoperate order perform complex task 
web service proposals description wsdl invocation soap composition bpel ws commonly lack proper semantic descriptions 
hard search appropriate services large number syntactically described services michael jaeger tu berlin sek fr berlin germany cs tu berlin de need manually investigated see perform desired task 
cases necessary additional manual communication service requester service provider determine provided service requester 
semantically described web services possible improve precision search existing services automate parts service composition process 
proposals gained lot attention american owl web services modelling language wsml 
emerging specifications overlap parts complementary parts 
leading organization object oriented programming object management group omg defined unified modelling language uml standard graphical language expressing software models 
omg promotes model driven architecture mda approach analysis design implementation software systems 
model driven development process models describe business concerns user requirements information structures components component interactions 
models govern system development transformed executable code 
described adopts mda strategy develop compositions web services 
propose methodology modelling semantic web service compositions 
important question addressed new semantic web service proposals utilized model driven web service composition methodology 
identified requirements methodology 
shall enable developer higher level graphical models lower level verbose lexical counterparts models primary artefact 
aim automate large parts process identifying model driven transformations automatic steps note wsml referred wsmo defined wsmo working group wsml published 
implemented tools automation 
utilize possibilities semantic web service languages support powerful matchmaking requirements capabilities semantic support 
utilize quality service qos described web services process additional criteria ranking selection services 
qos support 
structured follows section introduces methodology basic principles relates model open distributed processing rm odp web services architecture sections elaborate phases methodology section describes automation iterative aspects methodology 
section discusses methodology satisfies mentioned requirements section covers related section concludes 
methodology discovering selecting services fundamental principle specifying composite service decomposition main task set identified tasks complexity 
composition developer discover appropriate web services may perform identified tasks 
methodology considers semantic qos descriptions requested provided services may identifying suitable candidates identified tasks 
describe process discovery selection methodology provide brief discussion basic phases 
consider web service architecture trading specification part rm odp iso establishing defined set activities form trading process 
service provider creates description advertised service 
submits service registry discovery service 

service requester queries discovery service service submitting requirement description 
discovery service compares requirements available services returns locations matched services 
phase focus determining services comply functional requirements 

phase requester selects services set candidates selection criteria 
methodology regard qos candidate selection criteria 
non functional requirements organisational limitations service provider requester serve criteria 
qos requirements rank exclude services 
example constraint define services chosen execution time 
final result ordered subset discovered services phase 
successful case subset contains appropriate service identified task 

requester processes set matching service candidates comply selection criteria 
case requester setup service composition 
service requester turns service provider advertises provides composed service 
methodology adopted basic principle web service discovery selection 
approach enhances available discovery methods web services domain 
service registries facilitate discovery main proposal web services domain provides centralised repository specification called universal description discovery integration uddi 
uddi specification reached third revision service discovery commonly web service developers 
currently satisfactory products development methodologies fully utilize discovery services internet web service composition 
see motivation clarifying improving discovery web services 
promising proposals target fully automatic discovery configuration execution service compositions 
theoretically possible computer reasoning semantics service elements expect mainstream reality years 
methodology shall useful services limited semantic descriptions provide syntactic description interface 
hand propose service composition methodology futuristic sense full potential met time writing 
largest benefit achieved large number services available sufficiently described semantics qos 
furthermore propose registry infrastructure better support methodology 
distinguish conceptual types registries ontology registry qos registry general service registry 
ontology registry contains ontology concepts qos registry provides information available qos characteristics 
main registry service registry contains published services syntactic information metadata uddi proposal 
addition services may semantically annotated provide qos information 
important invariants maintained ontology concepts associated published services synchronized available ontology registry qos characteristics associated published services synchronized qos registry contains upto date information 
idea providing semantic qos information web service registry introduced authors 
proposals extend uddi specification support semantic descriptions 
uddi repository proposals exist process qos additional criteria service discovery 
phases modelling discovery service developer performs modelling new composite service shown 
service developer search ontology registry find appropriate ontology concepts semantic types tasks 
result search expected lexical document owl wsml recommend build transformation tools automatically imports lexical representation graphical model 
service developer search qos registry identify qos concepts specify qos requirements 
de facto standard representing qos characteristics recommend build transformation tools automatically imports qos characteristics graphical model 
representation qos characteristics uml follow omg uml profile qos 
lexical representation qos propose consider existing proposals 
specific application case requires coverage extend current proposed languages design new language 
shows uml design composition model 
uml activity models capture control data flow composition class models model ontology concepts qos characteristics 
composition model sense concrete web services chosen 
composition modelled tasks represented uml activities suitable web services perform tasks identified 
simple example tasks executed sequence 
task search book providing author title 
identified book buy book second task 
second task requires credit card information input returns receipt 
uml activity models support modelling boundary composite task 
surrounding boundary input output parameters comprises new operation signature name composite task 
candidate capturing domain ontologies uml uml profile defined 
ontology concepts grouped packages package represents domain ontology 
tagged value shown provides uri link domain ontology 
ontology concept stereotyped class 
uml profile represent owl ontology fully uml meaning ontology concepts precisely defined attributes relationships 
ontology concepts specifying parameter types performing annotation data objects semantically defined types 
cases suitable domain concepts data object modeller alternatives 
alternative associate data object syntactic type xml schema built types string integer 
example done title parameter composite service search book task 
alternative define new ontology concept entirely new subtype existing domain concept 
concept defined relate existing classification system taxonomy developer expect find published services match concept 
new subtype allows reasoning utilized matchmaking process 
task example assigned category note stereotype category 
note predefined variables identifies classification system chosen category system 
example tasks share category 
qos requirements may captured note stereotyped qos requirements 
example qos requirements note attached specific task meaning requirements apply aggregated values web service composition 
qos requirement examples states total monthly subscription price services euros 
described express qos requirements uml models detail preceding 
semantic annotation qos requirement model subsequent phases search candidate services select concrete services realize task composition 
outcome phase composition model contains needed information performing service discovery selection 
second phase handles discovery suitable web services 
discovery process matchmaking semantic descriptions 
assume web service registry available information provided web service service interface description qos characteristics registry search search service developer ontology registry export owl owl time owl export transform qos characteristics qos requirements context price design composition model transform author author start title xsd string imported owl ontology author book author author xsd string ask search book book book ontology imported qos characteristics receipt search buy book ontology time date book book price real unit euro direction decreasing real unit euro direction decreasing el level enum direction increasing task buy book category taxonomy naics www naics com value book stores code receipt receipt type date cardholder string string 
composition model tasks phase semantic description matchmaking process 
composition model produced phase automatically transformed lexical document parsed search matchmaking algorithm 
generated documents represent semantic descriptions requested tasks need identify candidate services 
propose matchmaking deals semantic matching inputs outputs categories 
matching algorithm identifies clear matches aspects guarantee perfect match 
aspect reasoning necessary take preconditions postconditions effects account 
topic requires lot research tools adoption techniques user community expect services discovered fully near 
matchmaking inputs outputs categories improve precision search remove need manual investigation discovered web services determine suitable 
anticipate candidates provide semantic description capabilities 
leading proposals semantic descriptions owl wsml 
low level verbose owl wsml receipt receipt files time consuming demanding comprehend developers 
ease manual investigation process propose reverse engineer owl wsml highlevel uml models 
benefit importing semantic description uml imported services directly uml elements composition model 
investigation services graphical model user selects appropriate services ideally chosen service assigned task 
list candidate services task outcome phase 
phases selection deployment phase narrow set web services rank services qos requirements 
adopting strategy preceding qos requirements contain parts part covers absolute qos constraints composition second part covers optimisation criteria rank services 
preceding explained aggregate qos individual services apply selection algorithms optimize qos compositions qos categories selection criteria 
qos sort selection return assignment ranked list price author author start title xsd string webservice new composite service author author title xsd string webservice imaginary book lookup service wsdl operation book book price imported owl qos offered doc 
isbn category taxonomy naics www naics com value book stores code price xsd decimal webservice output wsdl operation xsd receipt receipt output service registry transform interface description wsdl transform semantic description transform qos offered transform executable specification bpel ws 
concrete composition model chosen web services phase candidate services task 
assume realizing service task 
shows concrete composition model service tasks example taken 
presume existence tools perform automated reverse engineering semantic description qos offered documents graphical model 
transformations directly insert imported web services place corresponding tasks composition model 
goal fully automate step 
example shows import reuse semantically described web service composition model 
web service identified set tagged values uniquely identifies operation inside wsdl file 
sufficient able invoke service operation shown 
expected promised qos offerings concrete service expressed qos offered stereotyped note attached activity 
category description service attached activity note stereotyped category 
category description example attached atomic services composition congo example owl home page www daml org services owl examples html 
deploy internet server publish definition applies 
data objects types represented exact manner model 
may expect outputs web service perfectly match required input service 
cases need introduce intermediate data transformation steps services 
step requires adjustments developer tools assist process 
details needed data transformations example shown 
example deal copying relevant parts transformation input relevant parts transformation output 
new composite service needs handled web service need assign explicit input output parameters category qos offerings composite activity 
compared model input added composite service information required discovered service 
outcome phase finalized concrete composition model 
fourth phase concrete composition model generate different descriptions composed service wsdl document describing syntactic interface technical bindings description offered aggregated qos semantic description composed service execution specification execute composition execution engine 
generated items submitted web service registry 
third parties discover composed service 
additional aspects methodology methodology identifies eleven model transformation steps automated table 
transformation specify phase belongs source target transformation exist proof transformations tools described literature 
referenced proof concept approach needed transformation exists proposals transformations 
included proof concept evaluated better worse existing alternative proposals 
mentioned uml context graphical languages 
outside scope recommend graphical language best supports methodology 
desired transformations discovered prototype tools 
holds look uml graphical language 
candidate lexical languages de facto industry standards promising proposals 
consider wsdl bpel ws defacto industry standards lexical languages table emerging languages proposals potential methodology 
unified service query language express semantically annotated tasks perform searches matching services 
design creation processes engineering computer sciences design composition iterative heuristic process presumes go back forth different tasks methodology 
different scenarios result iterative heuristic methodology subsequent paragraphs 
matched services 
discovery process matching result suitable service candidates 
case developer alternatives implement required service modify composition design order find services previously excluded 
terms methodology means returning phase modify composition 
restrictive qos 
may prevent successful selection services 
matched candidates satisfy qos requirements provide information desired qos category 
case loosening qos requirements necessary 
second case developer consider drop previously defined constraint 
cases developer needs return phase modify qos requirements 
candidates 
opposed previous scenarios large selection suitable services 
case developer may define stricter qos requirements optimise service composition 
methodology inspiration 
matchmaking reengineering process composition developer discover composition reflect optimal design 
developer discover assessing set suitable service candidates 
process starts phase 
issues show developer continuously need optimise composition order approach optimal setup points possible iterations 
reason iterate due continous change available services 
services unavailable new changed qos offerings iteration 
discussion section discusses methodology satisfies requirements section 
requirements discussed subsequent paragraphs 
models primary artefact 
methodology satisfies models primary artefact requirement enables service developer model level 
existing specifications relevant documents imported models reverse engineering tools 
manually updated models generate lexical specifications needed search select services 
addition tools shall enable semi automatically produced concrete models automatically generate specifications needed deploy publish information new service 
automation 
methodology automated large parts steps needed process developing composite services identifying model transformations 
implies methodology large extent satisfies automation requirement 
semantic support 
methodology proposes semantically annotate input output types category precondition postcondition effect atomic composite web services lexical documents 
allows service developer completely define new semantically annotated web services graphically generate lexical documents semantic web service languages 
mentioned support common owl wsml 
wsml consists goals mediators addition 
concept goals supported methodology candidate lexical document generated model 
mediators table 
overview automated transformations phase transformation source target proof concept import domain ontologies owl wsml ontology uml owl uml import qos characteristics ws qos uml export semantically annotated tasks uml wsml goals import semantic web service owl wsml webservice uml owl uml export qos requirements uml ws qos import qos offered ws qos uml import web service interface wsdl uml wsdl uml export web service interface uml wsdl uml wsdl export semantic web service uml owl wsml webservice uml owl export qos offered uml ws qos export executable specification uml bpel ws uml bpel ws supported data transformations methodology kinds mediators supported 
conclude methodology satisfies semantic support requirement large extent 
qos support 
methodology utilizes qos requirements order qos sort selection phase 
automated component performing task capable computing aggregated qos value new composite service phase generate qos offerings document new service 
chosen perform semantic discovery phase independently qos selection phase 
result qos selection considers selected narrowed set service candidates perform quicker 
adopting omg qos profile standard representing relevant qos information uml 
omg profile adjusted extensions graphical languages 
qos support requirement satisfied part methodology furthest realized proof concept tools 
related illustrated uml graphical language methodology 
model driven service composition promising proposals including petri net models business process modelling notation bpmn 
outside scope evaluate suitability graphical languages methodology 
application languages needed extensions express semantics qos 
omg profile modelling qos starting point uml shown examples 
proposals semantic web service language including owl wsml wsdl 
specialized graphical languages tools support development respective languages owl editor wsmo studio 
multiple candidates semantic web service languages reached final ized state recommend independent graphical language 
allow graphical language integration platform web services described multiple semantic web service languages 
web service offerings language ws qos represents xml language expressing qos associated web services 
designed complementary wsdl express qos characteristics offerings 
ws qos addition express qos requirements 
graphical counterpart omg profile modelling qos express qos aspects need methodology characteristics requirements offerings 
pointed need graphical language defined transformations lexical qos languages 
proposals exist perform transformations graphical languages semantic web service languages including owl uml uml owl owl uml 
transformations defined graphical languages semantic web service languages 
presents model driven methodology designing composite web services 
methodology considers syntactic semantic description interfaces service candidates 
processes qos requirements developer offerings service providers 
addition identified parts automate require interactive handling developer 
proposed steps automation model driven transformations transform models lexical descriptions web services forward reverse engineering 
resulting benefit methodology provides better documentation composition form graphical models 
ability generate semantically described executable compositions graphical model represents valuable gain service developers write lot low level xml code 
approach independent lexical languages representing semantics qos services 
assume service developers anticipate flexibility cover different semantic description languages qos representations 
methodology covers steps core idea building composite service final deployment publication 
furthermore identified models primary artefact defining characteristics required models corresponding model transformations 
methodology covers lot aspects investigate fully single 
issues need prove methodology valid 
need test emerging lexical proposals semantically annotated tasks wsml goals see provide anticipated level expressive power perform efficient search matchmaking service offerings 
need investigate suitable graphical service composition languages accompanying tool supported transformations lexical web service documents 
acknowledgments 
roy gr partially funded european ist fp project sodium service oriented development unified framework 
bpmi org 
business process modeling notation bpmn version may 
daniel owl editor tool semantic web services 
proceedings nd european semantic web conference heraklion crete greece may 
daniela berardi automatic composition web services 
proceedings th italian symposium advanced database systems alto june 
david martin bringing semantics web services owl approach 
revised selected papers intl workshop semantic web services web process composition san diego california usa 

mda ontology infrastructure 
computer science information systems february 
gr jaeger 
model driven methodology building qos optimised web service compositions 
th ifip intl conference distributed applications interoperable systems athens greece june 
gr jaeger hoff 
transformations uml owl 
european conference model driven architecture foundations applications germany november 
accepted publication 
gr 
model driven web service development 
intl journal web services research oct dec 
benatallah 
petri net model web service composition 
proceedings fourteenth australasian database conference database technologies adelaide australia 
iso iec 
itu ts recommendation iso iec trading function specification august 
jaeger hl 
qos aggregation service composition workflow patterns 
proceedings th intl enterprise distributed object computing conference edoc monterey california september 
jaeger hl 
ranked matching service descriptions owl 
kommunikation verteilten systemen kaiserslautern germany february 
lausen 
architecture ontology web service modelling studio 
proceedings workshop wsmo implementations frankfurt germany september 
omg 
uml profile modelling quality service fault tolerance characteristics mechanisms omg draft adopted specification 
omg document ptc june 
paolucci kawamura payne sycara 
revised papers intl workshop web services business semantic web toronto canada may peer 
pddl tool automatic web service composition 
proceedings second intl workshop principles practice semantic web reasoning pp swr st malo france september 
rajasekaran miller verma sheth 
enhancing web services description discovery facilitate composition 
revised selected papers intl workshop semantic web services web process composition san diego california usa 
ran 
model web services discovery qos 
exch 
gr 
web service composition uml 
proceedings th ieee intl enterprise distributed object computing conf edoc monterey california september 
tian ritter schiller 
efficient selection monitoring qos aware web services ws qos framework 
proc 
ieee wic acm intl conference web intelligence wi washington dc usa september 
timm 
model driven approach specifying semantic web services 
proceedings ieee intl conference web services orlando florida usa july 
patel pagurek 
web service offerings language 
revised papers intl workshop web services business semantic web caise wes 

sodium deliverable specification unified service query language june 
uddi spec technical committee 
uddi version 
uddi org pubs uddi pdf 

web services architecture working group note february 
www org tr ws arch 
wsmo working group 
web service modeling language wsml march 
