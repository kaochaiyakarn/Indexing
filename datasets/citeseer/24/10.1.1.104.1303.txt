extended gcd hermite normal form algorithms lattice basis reduction george havas school information technology university queensland queensland australia url www uq edu au personal havas department computer science software engineering university newcastle callaghan nsw australia url newcastle edu au staff keith matthews department mathematics university queensland queensland australia url www maths uq edu au extended gcd calculation long history plays important role computational number theory linear algebra 
results shown finding optimal multipliers extended gcd calculations difficult 
algorithm uses lattice basis reduction produce small integer multipliers 
xm equation gcd 
dm 
dm integers 
method generalises produce small unimodular transformation matrices computing hermite normal form integer matrix 

dm integers gcd 
dm 
easy find integer multipliers 
xm easy find multiplier vectors small euclidean length see 
multipliers may performing example euclid algorithm get gcd 
corresponding sequence integer row operations performed identity matrix im result unimodular matrix 

dm implicit jacobi pages 
variations theme see ford havas guarantee xi max 
dm havas sorting gcd algorithm 
see pages older 
little matrix algebra equation 
tells rows 
pm form lattice basis dimensional lattice formed vectors 
xm 
xm satisfying 
words expressed integer linear combination zm pm 
general multiplier vector pm zm pm 
zm lattice basis reduction find multipliers 
approach dates back rosser small examples 
particularly effective algorithm lattice basis reduction due lenstra lenstra lov sz 
descriptions lll algorithm see section gr tschel pages sims pages cohen pages pages 
importance lll algorithm parameter range 
complexity algorithm increases quality guarantee basis vectors 
approach extended gcd problem proposed babai page sims page perform lll algorithm 
pm produce lattice basis short vectors 
size reduce pm adding suitable multiples short vectors pm reducing entries practice small size 
call algorithm 
drawback initial unimodular transforming matrix calculated 
approach problem apply lll algorithm lattice spanned rows matrix im positive integer 
difficult show reduced basis 
cm cm cm 
cmm practice small multiplier vector similar size produced algorithm 
call algorithm 
algorithm works reasons 
consists vectors 
xm 
xm belong 
lemma page implies 
bm form reduced basis 
xm linearly independent vectors vectors 
xm bj max 
xm 


dm 
linearly independent vectors xi max 
xm 
follows inequalities rows reduced basis form bj 

vector reduced basis form bm 
bmm equations unimodular matrix imply respectively experimentally finds large algorithm settle sequence row operations 
difficult identify operations perform matrix im 
justified section 
limiting algorithm called algorithm described explicitly section 
section show smallest multiplier numbers values multiplier lattice basis produced algorithm 
computer evidence suggests result true 
derive upper estimate general case numbers length multiplier produced algorithm 
section describe lll hermite normal form algorithm arrive limiting considerations 
finishes examples show algorithms perform practice 
lll algorithm order analyse algorithm need briefly outline lll algorithm 
matrix integers linearly independent rows 
cm 
gram schmidt basis denoted 
ck kj ck say 
cm reduced kj 

say ck size reduced kj inductive step follows partial size reduction ck ck ck nearest integer symbol half integer 
inequality holds size reduce ck completely performing ck ck kj cj 
increment swap ck ck decrement analysis algorithm justify earlier assertion sufficiently large lll algorithm performed im sequence operations independent 
ci ai initially im assume 
ak examine inductive step lll 
equation cr 

equation ak 
kj ck 
equation give kj mq jq mq jq mq jq akc mq jq 

gram schmidt coefficient column ignored 
mq mq ak ak 
ak ak ak ak odd multiple 
times row subtracted row discuss possible interchange rows takes place inequality fails hold 
note ak ak condition standard lll condition involving 
ak ak ak condition satisfied large interchange rows takes place 
ak ck see 
limiting form ak ak 
consequently satisfied large interchange rows takes place 
kj large rational functions constant tend limit strictly monotonically resulting limiting sequence row operations 
large lll algorithm perform version remainder gcd algorithm lra arrives gcd shortest multiplier vector gcd 
eventually performs version lra punctuated updating rows till arrives gcd short multiplier vector gcd 
algorithm led final lll extended gcd algorithm pseudocode 
implementation modification de lll algorithm pages added simplification initial construction gram schmidt basis necessary start identity matrix im 
de works terms integers writes di di ij dj ij 
multiplier estimates 
lll gcd algorithm produce shortest multiplier example lll produces multiplier shortest 
numerical experiment led result theorem 
unimodular integer matrix rows form lll reduced basis lattice size reduced multiplier vector smallest multiplier vectors 
computer evidence strongly suggests theorem true 
proof 
ij recalling xb yb general multiplier expression square length xb yb de notation working integers write ij ij dj ij dj 
det 
see equation 
gcd 
xd 
input positive integers 
dm im di 
ai di 
reduce ak ak ak dk dk swap reduce 
am am am bm bm output am gcd 
dm small multipliers bm 
bm reduce swap ai ak ak ak ai bk bk 
ki di kj ki di 
dk ik dk ik dk dk dk dk dk ak ak bk bk qbi ki ki 
kj kj ij pseudocode algorithm lll condition gives assume 
prove 
equation successively deduce xd 
inequality inequality 
expanding gives implies 


xd 
xd 

specific optimum multipliers signs optimum multiplier corollary 
lll extended gcd algorithm basis practical polynomial time algorithm finding optimal solution extended gcd problem numbers 
proof 
apply algorithm check possibilities optimal 
theorem 
unimodular integer matrix rows form lll reduced basis lattice bm size reduced multiplier vector 
dm 
proof 
bm bm vector orthogonal 
bm see bd 
bi 
bm mj 

bm bj 
lemma page implies 
bm form reduced basis bj max 
xm 
xm linearly independent vectors 
vectors 
xm 


dm 
linearly independent vectors xi max 
xm 
bj 
inequality gives required 
bm ym lll hermite normal form algorithm integer matrix said hermite normal form rows nonzero ii nonzero entry row jr iii iv integer matrix 
various algorithms finding unimodular matrix row hermite normal form 
include kannan pages havas attempt reduce coefficient explosion execution 
considering limiting behaviour lll algorithm matrix im gn gi ith column led lll hermite normal form algorithm generalizing earlier gcd case 
omitted swap unchanged new interpretation ai 
easy generalization argument section show large lll reducing columns form matrix rows starting bottom row echelon form corresponding indices 
jr row multiplied necessary adjustment ij 
function minus 
denote submatrix formed nonzero rows write rows respectively 
qb rb rows form basis short vectors sublattice formed vectors satisfying xg 
rows size reduced respect short lattice basis vectors 
give examples section 
examples applied methods described numerous examples excellent performance 
note papers study explicit input sets extended gcd problem number listed 
illustrate algorithm performance small selection interesting examples performance comparisons 
note parameters affect performance lll lattice basis reduction algorithms observed including 
foremost value 
smaller values tend give faster execution times worse multipliers means uniform 
order input may effect 
input integer matrix im di 
reduce col col col col col dk dk swap reduce 
output hermite normal form corresponding transformation matrix reduce minus col ai 
ai col 
minus bi bi rs rs col col ak ak col minus bk bk col col ak col ai col ki di ki di ak ak bk bk qbi ki ki 
kj kj ij lll hermite normal form algorithm input extended gcd algorithm take 
algorithm produces final matrix multiplier vector unique multiplier vector length 
fact lll methods give optimal multiplier vector 
earlier algorithms aim improve multipliers fare particularly 
algorithm gives multiplier vector 
algorithm due bradley gives 
shows bradley definition minimal useful 
take 

algorithm gives multiplier vectors various values 
give length squared vector 
multiplier vector unique shortest multiplier vector length squared 
methods give results jacobi length squared recursive gcd kannan bradley 
example involving fibonacci lucas numbers see theoretical significance 
take 
dm fibonacci numbers fn fn 
odd ii fn fn 

identity fm fm shown multipliers ln ln 
odd ii ln ln 

denote lucas numbers 
multipliers unique vectors length 
special case general result third author fn 
fn treated 
length squared multipliers cases 
practice lll algorithms compute minimal multipliers 
results give bounds extended gcd multipliers terms euclidean norms 
follows general upper bound euclidean norm multiplier vector terms initial numbers di max di 
length vector fn fn 
order magnitude general upper bound length multipliers terms euclidean length input say 
range random type extended gcd examples 
hermite normal form example take gij matrix defined gij hermite normal form nonzero rows unimodular matrix provided kannan algorithm supplied algorithm interesting family matrices arises 
ideal class group matrices arise rows columns ranging steps 
designate matrix rows mk 
maximal magnitude entry mk order needs compute hermite normal form transforming matrix 
tabulate maximal magnitude entry matrix includes entries size algorithm comparison kannan 
kannan lll hnf new algorithms extended gcd calculation compute multipliers 
provided analyses performance 
examples show dramatically outperforming earlier methods 
related algorithms compute hermite normal form integer examples showing excellent performance 

implementations algorithms available third author number theory calculator program calc www maths uq edu au 
variants algorithms available gap magma 
acknowledgments authors supported australian research council 
grateful jean pierre seifert helpful discussions 
new version euclidean algorithm amer 
math 
mon 

cannon handbook magma functions department pure mathematics sydney university 
bradley algorithm bound greatest common divisor integers communications acm 
multi dimensional continued fraction algorithms mathematisch centrum amsterdam 
cohen course computational number theory graduate text springer 
die der dissertation tech 
univ berlin berlin 
rosser generalization euclid algorithm duke math 

ford havas new algorithm refined bounds extended gcd computation algorithmic number theory lecture notes computer science springer de solving exponential diophantine equations lattice basis reduction number theory 
gr tschel lov sz schrijver geometric algorithms combinatorial optimization springer verlag berlin 
havas hermite normal form computation integer matrices congressus numerantium 
havas extended gcd calculation congressus numerantium 
jr fibonacci lucas numbers houghton mifflin boston 
jacobi ber die sung der nxn reine angew 
math 

linear diophantine equation amer 
math 
monthly 
lenstra lenstra jr lov sz 
factoring polynomials rational coefficients math 
ann 

havas complexity greatest common divisor computations algorithmic number theory lecture notes computer science springer 
george havas solution extended gcd problem issac proc 
international symposium symbolic algebraic computation acm press 
matthews minimal multipliers consecutive fibonacci numbers acta arith 

algorithmic algebraic number theory cambridge university press 
barkley rosser note linear diophantine equation amer 
math 
monthly 
seifert complexity approximate optima greatest common divisor computations algorithmic number theory lecture notes computer science springer schnorr lattice basis reduction improved practical algorithms solving subset sum problems lecture notes computer science 
sch gap groups algorithms programming lehrstuhl mathematik rwth aachen 
sims computing finitely groups cambridge university press 

