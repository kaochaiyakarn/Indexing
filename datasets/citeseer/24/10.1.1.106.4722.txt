active storage large scale data mining multimedia erik riedel garth gibson electrical computer engineering school computer science carnegie mellon university carnegie mellon university pittsburgh pa pittsburgh pa riedel cs cmu edu garth cs cmu edu increasing performance decreasing cost processors memory causing system intelligence move peripherals cpu 
storage system designers trend excess compute power perform complex processing optimizations inside storage devices 
date optimiza tions relatively low levels stor age protocol 
time trends storage density mechanics electronics ing bottleneck moving data media putting pressure interconnects host processors move data efficiently 
pro pose system called active disks takes advantage processing power individual disk drives run application level code 
moving por tions application processing execute directly disk drives dramatically reduce data traffic take advantage storage par large systems today 
discuss types applications benefit capability focus areas database data mining dia 
develop analytical model speed ups possible scan intensive applications active disk system 
experiment prototype active disk system relatively low powered processors comparison data base server system single fast processor 
experiments validate intuition model demonstrate speedups disks scan applications 
model promises linear speedups disk arrays hundreds disks provided application data large 
research sponsored order issued indian head division contract 
additional support nsf eec iri nsf arpa nasa nsf agreement iri 
indebted generous contributions member companies parallel data consortium hewlett packard laboratories logic data general 
compaq intel quantum 
seagate wind river systems views contained document authors interpreted representing official policies expressed implied supporting organization government 
permission copy fee part material granted provided copies direct commercial advantage 
vldb copy notice title publication date appear notice copying ts permission large data base endowment 
copy 
requires fee special permission endowment 
proceedings th vldb conference new york usa christos faloutsos school computer science carnegie mellon university pittsburgh pa christos cs cmu edu evaluate performance advantages exploiting processors embedded individual storage device data intensive applications common data mining multimedia databases 
system architecturally similar processor disk database machines dismissed literature years ago sive unnecessary 
intervening years technology trends possible commodity storage devices excess general purpose computational power applica tion trends creating massive complex data sets com processed scans 
soon possible collections commodity storage devices couple paral lel processing high selectivity filtering dramatically reduce execution time applications 
general purpose microcontrollers mhz processing speeds common disk array controllers incorporated high ity disk drives 
vendors storage devices welcome new uses largely underutilized processing power allowed products compete metrics simple capacity cost mb 
propose storage device called active disk combines field software research safe remote execution code execution application level functions directly device 
emulate active disk year old workstation contrast host resident active disk assisted processing applications nearest neighbor search high dimensionality database fre quent set counting discover association rules edge detection images image registration medical database 
applications process large volumes data ensuring substantial storage parallelism simply accommodate volume data operate relatively small number instructions byte storage accessed 
processing applications scan intensive due nature application data high dimensionality queries pro cessed accelerated traditional indices 
active disks benefit bound scans principle ways parallelism massive amounts data partitioned disks allows embarrassingly parallel scans convert group active disks programmable par scan database machine bandwidth reduction scans filter data high degree selectivity compute summary statistics transfer small frac tion data disks host 
highly selec tive scans group active disks process data aggregate disk rate machine interconnect band width designed applications demanding bandwidth 
section compares past research database processing performed storage database machines discusses trends storage systems brought point motivates areas data mining multimedia fertile ground applica tions active disks 
section provides analytical model illustrate potential benefit active disks give intuition speedups possible 
section outlines representative applications chosen detailed study 
section describes experimental setup compares performance existing server system prototype system active disks 
section explores issues performance characteristics applications suc active disks 
section discusses related area 
section concludes briefly dis areas 
bat prevailing counter arguments database machines significant fraction database operations sorts joins simple select filters hardware provide significant bene fits special purpose hardware increased design time cost machine single general purpose host processor sufficient execute select full data rate single disk dewitt boral 
boral dewitt concluded aggregate storage bandwidth principle limitation database machines 
fortunately shown table inter years aggregate storage bandwidth dramatically improved 
improvement comes disk array hard ware software enable individual database opera tions exploit disk parallelism livny patterson databases large justify hun disks 
high disk rates mb sustained seagate continue grow year 
place raw disk band width limitations modern systems limited eral interconnect bandwidth seen system bus column table 
see mb read memory large collection disk controllers delivered host processor 
case power host irrelevant bandwidth limitation large scans 
consider objection cost com plexity special purpose hardware database machines technology trends change trade offs 
increas ing transistor count possible inexpensive cmos micro chips today driving microprocessors increasingly simple inexpensive devices 
network interfaces peripheral adapters digital cameras graphics adapters array controllers disk drives micro controllers processing power exceeds host pro cessors years ago 
example quantum high disk drives today contain mhz motorola controller manages high level functions drive 
system component processor disk processing system bus storage throughput compaq tpc compaq mhz mhz mb mb mhz pc mhz disks gb mhz mb table estimate current disk drives equivalent mhz host processing speed available large database systems today contain processing power combined disks server processors 
assuming reasonable mb sequential scans see aggregate storage bandwidth twice backplane bandwidth machine case 
data tpc barclay 
trend drive electronics higher higher levels integration 
drive left contains separate chips servo control scsi processing ecc control microprocessor 
trident chip center combined individual specialized chips single ask generation silicon possible integrate control processor provide significantly powerful embedded core continuing reduce total chip count cost 
show effects increasing transistor counts disk electronics 
la reminds electronics disk drive include components simple computer microcontroller amount ram communications subsystem scsi addi tion specialized hardware drive control 
lb shows special control hardware largely integrated single chip cur rent generation disks 
extrapolating generation technology micron micron cmos asic specialized drive hardware occupy quarter chip leaving sufficient area include mhz digital strongarm microprocessor example 
commodity disk chip pursuing processor asic technol ogy 
siemens announced chip offers mhz bit microcontroller mb chip ram mb bandwidth external dram dma controllers customer specific logic die area functions lb micron process 
fundamentally vlsi technology evolved point significant additional computational power comes negligible cost 
processing power inside drives storage sub systems successfully optimize functions standardized interfaces scsi 
includes innovative optimizations storage parallelism bandwidth access time patterson wilkes cao dis tributed file system scalability lee gibson 
active disks excess computation power storage devices available directly application spe cific function addition supporting existing stor age specific optimizations 
etching database functions silicon envisioned years ago active disks programmed software general purpose microprocessors 
downloading application code directly devices significant implications language safety resource management riedel 
block oriented application codes efficient exploit standard mem ory management hardware drive provide pro address spaces applications standard multiprogrammed systems today 
cases effi ciency space cost constraints require application code located core drive code research offers range efficient safe remote execution ties provide innovative ways ensure proper execu tion code safeguard integrity drive gosling necula romer bershad sma wahbe 
mechanisms promise degree control resource usage remote func tions aid balancing utilization drive demand requests opportunistic optimizations read ahead demand requests 
third objection database machines lim utility full scan operations 
variety emerging applications require sequential scanning large amounts data 
focus sets applica tions multimedia data mining 
multimedia applica parameters system parameters active disk parameters number bytes processed number bytes produced cycles byte run time traditional system run time active disk system tions searching content flickner virage particularly candidates 
user provides able image requests set similar images 
gen eral approach search extract feature vectors image search feature vectors nearest neighbors faloutsos 
dimensionality vectors may high moments inertia shapes faloutsos colors histograms color matching fourier coefficients 
known yao highlighted database liter berchtold high dimensionalities tial scanning competitive indexing methods dimensionality curse conventional database wis dom indices improve performance scan ning 
true low dimensionalities queries attributes 
high dimensionality data nearest neighbor queries lot room address space data points far 
major indexing methods grid tree suffer high dimensionality data 
grid methods require exponentially cells tree methods group similar points resulting groups highly overlapping bounds 
way nearest neighbor query visit large percentage database effectively reducing prob lem sequential scanning 
exactly idea high dimensionality indexing methods trees berchtold deliberately revert sequential scanning high dimensionalities 
data mining algorithms association discov ery classification require repeated scans data agrawal 
addition supporting complex scan queries trends larger larger database sizes 
hour video requires approximately gb storage video databases daily news broadcasts easily contain tb data wactlar 
databases searched content video text audio utilize feature extraction combination searching algorithms mentioned 
medical image databases impose similarly heavy data requirements arya 
data mining applications point sale data collected months years grows continually 
tele cpu speed host cpu cpu speed disk rd disk raw read rate active disk raw read rate disk interconnect rate active disk interconnect rate traditional vs active disk ratios ni cid rd rn ur communication companies maintain tens tb cal call data 
large databases mean disks highly parallel active disk systems 
basic approach basic characteristics successful remote functions active disks leverage parallelism available systems large numbers disks oper ate small amount state processing data streams past disk execute relatively small number instructions byte 
section develop analytical model performance applications 
purpose model develop intuition behavior active disk systems relative traditional server 
keep model simple assume appli cations characteristics mentioned disk transfer disk computation interconnect transfer host computation pipelined overlapped negligible startup post processing costs interconnect transfer rates exceed single disk rates 
starting traditional server run time largest individual pipeline stages disk read time disk interconnect transfer time server processing time gives throughput min pu rd active disks system comparable times disk read interconnect transfer disk processing mux throughput equations minimum limiting factors aggregate disk bandwidth storage interconnect bandwidth aggregate computation bandwidth 
number disks active disks rewrite equation throughput active disks terms parameters traditional server ratios traditional active disk parame ters total data moved selectivity disk bandwidth ad interconnect band width relative cpu power min ad rd 
st 
equation captures basic advantages active disks 
applications high selectivity large restrictive interconnect limitations rations disks achieve effective parallel processing 
estimating system ratios kinds applications discuss exhibit ties lo providing throughput pos sible effectively infinite interconnect bandwidth traditional system 
practically allows system cost reduced lower bandwidth interconnects maintaining high throughput 
allow slower active disk interconnects order 
active disk processors slower traditional server cpus 
experiments genera tion active disk cpus scan data disk rates 
final critical system parameter ratio active disk server processor speed 
expect mhz microcontrollers near term high drives individual server cpus mhz time frame ratio may prac tical 
case aggregate active disk processing power exceeds server processing power disks working parallel 
implications model illustrates basic trade offs active disk sys tems 
slope line represents raw disk limitation systems 
expect active disks simple model throughput application running active disk system compared traditional single server system 
regions interest depending characteristics application underlying system configuration 
raw media rate disks cases plotted line raw computation rate active disk system line varies application 
line shows saturation interconnect active disks host varies selectivity application processing 
line represents saturation server cpu interconnect traditional system gain possible additional disks added 
left point traditional system disk bound 
crossover point active disk system slower server system due powerful cpu 
point active disk system network improvement possible 
able keep disk transfer rates applications ru aggregate throughput somewhat lower slope shown line chart 
active disks saturate interconnects line min ri min interconnect bandwidth assumed greater single disk bandwidth num ber disks larger selectivity appli cation rn rn limit sets 
shown right point 
large selectivities applications discussed expect perfect overlap assumption fail amdahl law point reached 
traditional server systems exhibit interconnect server cpu bottlenecks represented line 
point active disk throughput exceeds traditional server sys tem determined ru min xi combine analysis define speedup active disk throughput server throughput find traditional server faster 
speedup min rn scp max max generations active disks 
consider slowdown active disks area left point condition independent application parameters query optimizer determine prefer traditional execution scan par ticular system configuration executing scan drives 
consider prevailing technology trends know processor performance improves year disk bandwidth year 
cause ratio processing power disk bandwidth systems increase year narrowing gap line bringing active disks closer ideal total storage bandwidth 
look greater detail specific applica tions benefit active disks 
applications study examine real world data intensive data mining multimedia applications meet assumptions active disks model 
database nearest neighbor search application variation standard database search determines items database attributes closest particular input item 
synthetic data quest data mining group ibm almaden quest contains records individuals applying loans includes information inde pendent attributes age education salary commission zip code car cost house loan amount years owned 
searches large number attributes shown scan entire database effi cient building extensive indices berchtold 
fore active disk scan appropriate 
basic application uses target record input processes records database keeping list closest matches far adding current record list closer list 
distance purpose comparison sum simple carte sian distance range attribute 
cate attributes hamming distance distance assigned values match exactly assigned 
active disks system disk assigned integral number records comparisons formed directly drives 
central server sends target record disks determine closest records portions database 
lists returned server combines deter mine closest records 
applica tion reduces records database arbitrary size constant sized list records selectivity arbitrarily large 
state required disk simply storage list closest records 
data mining frequent sets second application implementation apriori algorithm discovering association rules sales transac tions agrawal 
synthetic data generated tool quest group create databases con taining transactions hypothetical point sale infor mation 
record contains transaction id customer id list items purchased 
purpose application extract rules form customer purchases item purchase item store lay inventory decisions 
computation done sev eral passes determining items occur transactions itemsets information generate pairs items occur itemsets larger groupings itemsets 
threshold called support particular itemset input parameter application requiring sup port rule means transactions database contain particular itemset 
itemsets determined successive scans data phase result itemset counts create list candidate itemsets itemsets desired support 
active disks system counting portion phase performed directly drives 
central server produces list candidate itemsets pro vides list disks 
disk counts por tion transactions locally returns counts server 
server combines counts pro duces list candidate itemsets sent back disks 
application reduces arbitrarily large number transactions database single sized set summary statistics itemset counts determine relationships database 
state required disk storage candidate itemsets counts state 
multimedia edge detection image processing looked application detects edges corners set grayscale images smith 
real images almaden almaden attempt detect cows landscape san jose 
application processes set kb images returns edges data fixed pixel mask 
intent model class image processing applications particular set fea tures edges image important entire image 
includes tracking feature extraction positioning applications operate small subset original images data 
application sig computation intensive sons counting applications 
active disks system edge detection image performed directly drives edges returned central server 
request raw image returns data right represented compactly 
application reduces amount data transferred server large fraction kb kb particular image 
state required disk storage single image buffered processed 
multimedia image registration second image processing application performs image registration portion processing mri brain scan analysis welling 
image registration deter mines set parameters necessary register rotate translate image respect image order compensate movement subject scanning 
application processes set kb images returns set registration parameters image 
application computationally inten sive ones studied 
algorithm performs fast fourier transform fft determines parameters fourier space computes inverse fft result ing parameters 
addition algorithm may require variable amount computation solving optimization problem variable number itera tions converge correct parameters 
applications byte cost algorithm varies significantly data processed 
average computation cost algorithms discussed section shown table section 
active disks system application operates similarly edge detection 
image pro vided drives registration computation processed image performed directly drives final parameters kb image returned central server 
application reduces amount data transferred server large fixed fraction 
state required disk storage image current image 
prototype experiments experimental testbed contains prototype active disks year old dec alpha mhz mb digital unix gb seagate st disks 
server case single dec alphastation mhz mb digital unix gb seagate st cheetah disks ultra wide scsi busses bandwidth server 
machines connected ethernet switch mb oc atm switch 
experiments compare performance single server machine directly attached scsi disks machine network attached active disks workstation directly attached scsi disks prototype 
active disk experi ments increase number disks increase total amount data processed results report throughputs mb systems 
results show significant improvements active disks con firm intuition provided mode section 
database nearest neighbor search compares performance single server system system active disks number disks increased 
predicted model see small number disks single server system performs better 
server processor times powerful single active disk processor perform computation full disk rate 
see server system cpu saturates mb disks performance improve additional disks added active disks system continues scale linearly mb disks 
prototype system limited active disks amount hardware available traditional disks length limitations ultra scsi extrapolate data prototype larger system 
iii search throughput number disks frequent sets throughput active disks server number disks disks smallest systems table expect throughput near mb model pre dicts configuration 
data mining frequent sets show results passes frequent sets application itemsets item sets 
see crossover point drives server system bottlenecks mb formance longer improves active disks sys tem continues scale mb illustrates important property frequent sets appli cation affects particular analysis appropriate running active disks 
chart shows memory requirements range input support values different databases 
lower support value itemsets generated successive phases edge detection throughput number disks search application shows linear scaling number disks mb server system bottlenecks mb high selectivity search active disks saturate disks 
frequent sets application shows linear scaling mb active disks server system bottlenecks mb amount memory necessary frequent sets application increases level support required particular rule decreases 
low support values may require multiple megabytes memory active disk 
search scaling active disks server number disks frequent sets memory minimum support algorithm larger state held disk 
expect support tend higher values difficult deal large num ber rules lower support compelling generated rules 
low values sup port limited memory active disk may issue 
modern disk drives today contain mb mb cache memory expect mb active disks available 
means care taken designing algorithms choosing take advantage execution disks 
multimedia shows results image processing appli cations 
see table image processing appli cations require cpu time search edge detection application shows linear scaling number disks server system bottlenecks mb image registration application scales linearly requires factor cpu cycles reducing throughput systems 
image registration throughput number disks search throughput number disks frequent sets throughput number disks edge detection throughput number disks image registration throughput validation analytical model prototype measurements 
values predicted model system application parameters 

section superimposed dashed lines measurements prototype systems 
differences search frequent sets 
edge detection image registration precisely tit assumptions model 
applications suffer additional unmodelled stall time read disks image sized chunks streaming sequential accesses search frequent sets able 
means disk access time overlapped computation reducing throughput 
serial overhead applications 
largely amortized large size io databases search frequent sets shows image processing applications process total data 
gray lines figures estimate expected performance factors accounted 
estimated number disks performance 
frequent sets leading lower throughputs systems 
edge detection bottlenecks server cpu mb active disk system scales mb disks 
image registration cpu intensive applications considered 
achieves kb server system scales kb active disks 
model validation graphs confirm shape model section 
confirm values need specific parameters testbed 
cx estimated directly clock rates processors basic chip code identical cases 
ideally tests possible testbed 
rd mb rd mb rn mb rn mb estimating applications selectivity straight forward exercise counting bytes shown table 
estimating number cycles byte straightforward 
began instrumenting server implementation application determine total number cycles spent entire computation code data locally cached dividing total number bytes processed 
ignores cost forming issuing completing physical scsi disk operations measured previous study mhz alpha cycles byte patterson 
add hot cache numbers report resulting estimate cycles byte required application table 
combines results applications predictions model system application parameters 
search frequent sets applications show strong agreement model measurements 
largest error table parameters applications text computation time byte data memory required active disk selectivity factor network 
disagreement server model implementa tion search may reflect overestimate cycles byte devoted disk processing estimate older machine aggressive lar processor 
applications differ significantly model predictions 
problem applications overlap disk accesses computation model assumes 
example edge detection application reads kb images single request operating system read ahead deep causes additional stall time image fetched 
asynchronous requests aggressive prefetching application cor rect inefficiency 
additional contributor error serial portion applications affects image processing applications seriously process total data 
estimate performance applications overlapping improved estimated total stall time experi application subtracted appli cation run time report improved prototype estimates additional lines modification model predicts performance applications 
goal model develop intuition performance active disks applications strong results 
discussion largest single benefit active disks principle effect experiments parallelism avail able large storage systems 
processing power disk drives top line server cpus aggregate cpu power disks server 
applications partitioned take advantage parallelism split server drive cpus avail able higher total computational power appli cations running server 
large benefit active disks ability dramatically reduce interconnect bandwidth filtering disks 
systems today interconnect band width premium compared computational power significant bottleneck 
applica tion scanning large objects order select spe cific records fields gather summary statistics large fraction data moved simply discarded dramatically reducing bottleneck 
advantages focus promise orders magnitude potential improvements 
storage systems research common application specific optimizations scheduling batching prefetching disk operations bitton ruemmler 
active disks expected execute types remote functions 
particu lar expect active disks participate part disk directed model scatter gather accesses optimized local information disks kotz 
prefetching systems disks provided hints accesses patterson 
promising variant common optimizations interconnect transfer scheduling 
network schedul ing expected yield benefits seen integral part active disk computations complex operations hash join kitsuregawa dewitt variants sort salzberg dewitt 
key observation data going move network read disk may possible send right place active disks control reducing network traffic scheduling disk sending wrong place communicating processing nodes 
consider parallel sample sort algorithm running network workstations similar setup arpaci dusseau 
algorithm composed sample phase sort phase blelloch 
sample phase subset total data read histogram created allowing key space divided buckets roughly equal size 
parallel server cluster version sort entire data set read nodes local disks exchanged network key space distribution sorted locally node written back assigned disks 
network scheduling active disks system remove need step having drives form read distribution operations time 
sending data particular node drive key ranges determined sample phase responds request client data belonging client portion key space 
means data destined particular node get node soon possible need exchanged nodes 
reduces number tran sits data network 
systems network bottleneck resource improve performance algorithm third 
related basic idea executing functions processing ele ments directly attached individual disks explored extensively context database machines su rap numerous oth ers dewitt 
machines fell favor due limited performance disks time complex ity building programming special purpose hardware handle limited functions 
database research developed large scale shared data base servers commodity processing elements 
suggested logical extension form database processing inside programmable smart system peripherals gray 
active disks follows prior network attached secure disks nasd exploit computational power storage parallel network file system functions traditional storage optimizations gibson gibson 
initial dis cussed classes applications benefit active disks including filters multimedia batching storage management enumerated challenges providing execution environment commodity disk drives riedel 
santa maryland applied active disk ideas set similar applications including database select external sort image pro cessing extended firmware model gener ation scsi disks acharya 
similarly group berkeley independently estimated benefit active intelligent terminology disks improving performance large smp systems running scan hash join sort operations database context keeton 
commodity disks drives excess computational power visible horizon 
active disks take advan tage trend provide execution environment application specific code inside individual disk drives 
allows applications take advantage parallel ism storage greatly increasing total computational power available circumventing limited interconnect bandwidth greatly increasing apparent storage data rate 
demonstrated important class applica tions see significant gains linear scaling number devices added system active disks 
provided analytical model estimating traditional server active disk perfor mance 
prototype active disk system realizes speed ups comparable single server system disks 
system easily scale speedups reasonably sized systems similar large databases today 
emerging applications data mining dia feature extraction approximate searching involve huge data sets order gb tb justi fying large numbers active disks 
appli cations small cpu memory requirements attractive execution active disks 
variety areas explored benefits put practice 
providing safe environment application code inside drive order protect integrity data drive ensure proper function presence misbehaved application code critical 
issue resource manage ment considerably complex computa tion distributed 
active disks need complex scheduling decisions disk drives today open new areas optimiza tion exploiting richer interfaces provide 
acharya acharya saltz active disks technical report march 
agrawal agrawal srikant fast algorithms mining association rules vldb september 
agrawal agrawal schafer parallel mining association rules ieee transactions knowledge data engineering 
december 
almaden almaden ibm almaden research cen ter www almaden ibm com january 
arpaci dusseau arpaci dusseau arpaci dusseau culler hellerstein patterson high performance sorting networks workstations acm sigmod june 
arya arya cody faloutsos richardson toga extending dbms support medical images international conference data engineering february 
barclay barclay spatial database www research microsoft com november 
berchtold berchtold keim kriegel tree index structure high dimensional data vldb 
berchtold berchtold boehm keim kriegel cost model nearest neighbor search high dimen sional data space acm pods may 
bershad bershad savage pardyak sirer fiuczynski becker chambers eggers extensibility safety performance spin operating system sosp december 
bitton bitton gray disk shadowing vldb 
blelloch blelloch leiserson maggs ton smith zagha experimental analysis parallel sorting algorithms theory computing systems march 
boral boral dewitt database machines idea time passed international workshop database machines september 
cao cao lim venkataraman wilkes parallel raid architecture acm transac tions computer systems august 
dewitt dewitt performance eval uation database machine architectures vldb september 
dewitt dewitt gerber multiprocessor hash join algorithms vldb august 
dewitt dewitt naughton schneider parallel sorting shared architecture proba splitting pdis 
dewitt dewitt gray parallel database systems high performance database processing commu acm june 
shirriff hartman miller katz lutz patterson lee gibson raid ii high bandwidth net file server isca 
faloutsos faloutsos barber flickner hafner niblack petkovic equitz efficient effective querying image content journal intelligent information systems july 
faloutsos faloutsos searching multimedia databases content kluwer academic 
flickner sawhney niblack ashley huang dom gorkani hafner lee petkovic steele yanker query image video con tent qbic system ieee computer september 
gibson gibson nagle amiri chang berg gobioff lee riedel zelenka file server scaling network attached secure disks acm sigmetrics june 
gibson gibson nagle amiri butler chang gobioff hardin riedel zelenka cost effective high bandwidth storage architecture technical report cmu cs march 
gosling gosling joy steele java lan guage specification 
addison wesley 
gray gray happens processing storage bandwidth free infinite keynote address november 
trends hard disk drives ieee transactions may 
hsiao hsiao database machines coming data base machines coming ieee computer march 
keeton keeton patterson hellerstein intelligent disk revolutionary approach database computing infrastructure white university california berkeley may 
kitsuregawa kitsuregawa tanaka oka application hash data base machine architec ture new generation computing 
kotz kotz disk directed mimd sors osdi november 
lee lee thekkath ca petal distributed vir tual disks asplos october 
livny livny multi disk management algorithms acm sigmetrics may 
necula necula lee safe kernel extensions run time checking osdi october 
schuster smith kc 
rap associative processor database management afips conference 
patterson patterson gibson katz case redundant arrays inexpensive disks acm sig mod june 
patterson patterson gibson zelenka informed prefetching caching sosp 
quest quest project ibm almaden research center quest data mining project www almaden ibm com cs quest december 
riedel riedel gibson active disks remote execution network attached storage technical report cmu cs december 
romer romer lee voelker wolman wong baer bershad levy struc ture performance interpreters asplos october 
ruemmler ruemmler wilkes disk shuffling hp labs technical report hpl csp seagate seagate technology cheetah industry leading performance demanding applications www seagate com 
small small seltzer comparison os exten sion technologies usenix technical conference january 
smith smith smith relational database machines ieee computer march 
smith smith brady susan new approach low level image processing technical report tr oxford university 
storage technology iceberg storage system stk part number 
su su cellular system large data bases vldb 
tpc transaction processing performance council tpc executive summaries www tpc org february 
news release siemens new bit embedded chip architecture enables level performance real time electronics design www tri core com september 
arm grabs embedded speed lead microprocessor reports lo february 
van meter finn derived virtual devices secure distributed file system mechanism fifth nasa goddard conference mass storage systems technologies september 
virage virage media management solutions www virage com february 
wactlar wactlar kanade smith stevens intelligent access digital video informedia project ieee computer may 
wahbe wahbe lucco anderson graham efficient software fault isolation sosp december 
welling welling fiasco package fmr analysis www stat cmu edu fiasco january 
wilkes wilkes golding staelin sullivan hp autoraid hierarchical storage system sosp december 
yao yao ac 
yao general approach dimensional geometric queries acm stoc may 
