survey tcp performance evaluation modeling michele dipartimento di ingegneria dell informazione universit di pisa pisa mail michele iet unipi iet unipi advances performance evaluation modeling internet congestion control 
particular focuses class analytic models tcp explicitly consider interaction transport network layer 
analytic models determine impact certain parameter settings protocol performance suggest way modify standard congestion control mechanism improve performance 
models tcp described essentially fluid ignore discrete nature packet transmission describe behaviour tcp compact differential equations 
fluid models roughly grouped classes 
class composed models describing performance single tcp source respect conditions imposed network packet loss probability round trip time 
second class addresses interaction aggregate tcp connections ip network order capture essential characteristics tcp behaviour 
derive accurate expressions throughput bulk tcp transfer tcp performance wide area networks 
subsequently develop framework study influence active queue management congestion control 
set equations perform linear analysis system determine sufficient condition stability network employing red gateways 
spite complexity tcp congestion control decade considerable number analytic studies carried evaluate performance model behaviour contexts 
reason great interest essentially tcp drives performance internet 
nearly internet connections total delivered data tcp transport protocol 
availability accurate model tcp needed design internet segments large corporate intranets 
simulating internet generally hard task immense number nodes links particularly global network mixes networking technologies 
approaches typically simplistic topologies respect complexity global network give rise questions validity results larger scale networks 
context performance evaluation analytic models helpful describing essential characteristics congestion control allow manage larger networks produce accurate results faster 
attempts model nature internet traffic models try reproduce characteristics traffic regardless role sources 
models explained self similarity long range dependence flows traversing internet nodes wide area local area networks 
arguments observation aggregate traffic thought superposition flows arriving random carrying different amount packets rate 
postulate number packets delivered heavy tail distribution resulting random process characteristics close wide area traffic shows selfsimilarity time scales 
associating model internet traffic equivalent studying queue model originally proposed cox input poisson process represents process generation new connections service time models lifetime connection having heavy tail distribution 
model similar generative models essential allocate resources network devices buffer size capacity nodes explain model behaviour sources wide area networks relate congestion control 
fluid models analytically characterize throughput tcp connections examine various aspects tcp 
grouped broad classes 
class models assume known characteristics network mean round trip time rtt loss probability try evaluate throughput delay connections see instance :10.1.1.143.9137
class divided models bulk file transfer short lived connections 
subclass tries predict throughput long lived connection simplifying subtle aspects tcp connection start loss recovery phase minimal impact long term performance tcp 
contrary models short lived connections focus phase connection describe carefully connection establishment slow start phase 
models second class try derive performance tcp statistics ip network introducing submodel tcp protocol submodel ip network searching closed form solution set equations solving numerically fixed point procedures see 
providing better understanding sensitivity tcp performance network parameters models helped design active queue management aqm schemes tcp friendly protocols 
details models elaborated sections 
modelling approach introduced literature tcp models interpret steady state behaviour population tcp sources solution large convex optimization problem 
idea consider tcp connection trying maximize utility function aggregate connections converges global optimality point 
pioneer kelly started new branch research modelling researchers see example addressed problems related bandwidth sharing tcp connections distributed optimization problem 
particular low identified corresponding utility function tcp reno tcp reno red tcp vegas catalogued various utility functions allow achieve fairness minimize delay maximize throughput proving techniques successful directing design congestion control 
better clarify discussion indicate bandwidth allocated th tcp connection corresponding utility function generally increasing concave set flows sharing common link bandwidth available connection converges unique solution maximization problem capacity shared link 
spite tremendous progress understanding bandwidth shared tcp connections type models drawbacks exist 
order determine closed form expression utility function dynamic tcp needs extremely simplified discrete nature congestion feedbacks packet dropping marking considered 
models consider steady state behaviour system internet connections short lived terminate far reaching steady state 
psfrag replacements periodic evolution tcp window organized follows 
section models describe steadystate behaviour tcp connection respect operating conditions 
part relationship tcp behaviour characteristics path investigated 
section focus attention determining interaction tcp algorithm congestion control mechanisms deployed network aqm policies 
section ends 
single connection models section formulate models single connection analytical derivation tcp throughput 
consider models wide area traffic implications analysis 
rough representation refine 
consider tcp source running lossy path sufficient bandwidth sufficiently low competing traffic assume negligible queuing delay contribution rtt 
ease derivation assume link introduces drop successful delivery consecutive packets 
gross assumptions congestion window indicated cwnd periodic evolution depicted 
indicating maximum value cwnd reached equilibrium cwnd backed loss starting new congestion avoidance phase 
cwnd opens congestion avoidance depends way receiver acknowledging packets 
standard implementation requires tcp receivers acknowledge reception packet 
implementations adopt delayed ack consists transmitting cumulative ack packets received matter fact halving number acks transmitted round 
duration cycle rounds constant assumes value depending delayed ack enabled disabled respectively 
duration cycle turns cycle total number segments delivered cycle equivalent area period sawtooth packets cycle 
hypothesis packets delivered cycle solve obtaining throughput achieved connection ratio total amount data delivered cycle cycle duration cycle cycle 
substituting equation get mean throughput cycle cycle expression shows throughput proportional packet size inversely proportional square root loss probability rtt 
constant proportionality calculation turns general function tcp implementation loss model 
slightly different values derived interpolated empirical data 
formulation optimistic estimate throughput accurate lower frequency losses 
main reason inaccuracy account timeouts occuring high loss rates 
tcp meets multiple packet drops window data fast recovery algorithm triggered number duplicated acks sufficient 
sender looses self clocking capability timeout expires 
throughput tcp quite lower predicted previous expression 
models tcp throughput refinement previous formulation accounts retransmission timeouts 
provides accurate expression long term throughput tcp reno focusing congestion avoidance phase 
congestion avoidance described terms rounds starting back back transmission burst packets equal congestion window reception ack burst packets delivered 
ack reception cwnd incremented cwnd packets ack acknowledges exactly packets transmission packet batch value cwnd cwnd congestion avoidance absence losses window size increases linearly slope congestion window assumption indirectly previous analysis 
tcp algorithm stops increasing cwnd slows transmission detects packet loss associates drops congestion 
order emulate loss behaviour induced drop tail queuing discipline adopted internet routers assume losses packets round correlated 
reasonably assume packet losses round independent loss round justified fact packets different rounds separated rtt encounter buffer states independent 
assumption possible losses round 
fact confirmed studies drops packets tend grouped bursts drop tail buffer congested 
suppose packet may dropped probability simplify analysis duration round supposed independent previous packet lost packets loss round lost 
loss detection sender side occur reception duplicate acks timeout expires 
case lost segments retransmitted sender resumes transmission cwnd set half value loss event 
contrary loss detected timeout expiration cwnd reset packet sent round timeout 
case timeout expires retransmitting packets lost timeout length timeout doubled 
doubling timeout repeated unsuccessful retransmission reached timeout remains constant 
indicate duration sequence psfrag replacements cwnd cycle consecutive timeouts tcp cycle timeout tcp evolution mean length timeouts easily calculated assuming geometric distribution drops packets assumed independent consecutive rounds timeout illustrates example evolution cwnd 
th tcp cycle consists sequence periods cwnd increases referred cwnd cycle terminated detection congestion duplicate acks timeout timeout period 
timeout regenerative state throughput connection calculated ratio mean number packets delivered cycle mean length cycle 
assume sequence random variables mean independent amount data delivered cwnd cycle period duration period write throughput cycle cycle timeout denotes probability loss indication detected timeout 
order complete formula derive closed form expressions cycle cycle cycle substituted mean value steady state window size expression formally identical equation cycle cycle timeout formal proof assertion 
concentrate deriving expression consider round transmission loss indication occurs represent respectively cwnd number packets successfully delivered round 
loss model packet lost packets follow burst 
probability round successful transmissions packets round acked packets delivered round round cwnd cycle 
round transmission may losses lost packets transmitted burst 
indicating number packets successfully transmitted round distribution expressed acks round delayed responding duplicate th packet previous round 
sender receives duplicate acks cwnd cycle ends timeout probability event timeout occurs number packets transmitted second round number packets successfully delivered round 
algebraic manipulations previous expression rewritten observing tends zero get numerical approximation write probability loss indication timeout approximate evaluated expression 
concentrate evaluating cycle considering th cwnd cycle 
indicate packet lost th cwnd cycle 
previously observed packet sent additional round loss detected sender 
total packets sent th cycle 
follows cycle assumption packet loss random process sequence random variables distribution probability equal probability exactly packets successfully acknowledged loss occurs 
replacing mean cycle 
substituting achieve accurate estimate throughput packets seconds tcp connection simplifications known expression tcp bandwidth notice holds long throughput max max maximum buffer advertised receiver max packets transferred rtt 
observe model capture subtleties fast retransmit algorithm disregard slow start phase 
anyway impact omissions quite low measurements collected validate model indirectly validate assumptions 
live experiments suggest model able predict throughput wider range loss rates 
bottleneck bandwidth small congestion window open real traces contain timeout events fast retransmit indicates fast retransmit unable detect loss events throughput significantly lower expected 
tcp high bandwidth delay product networks understand behaviour tcp reno simple analysis tcp source running single link proposed 
suppose capacity link packets seconds round trip propagation delay connection 
minimum observed round trip time sum propagation delay transmission delay product known bandwidth delay product expresses ideal amount data tcp connection keep unacknowledged achieve optimal path utilization 
bandwidth delay product generally play significant role congestion control local area network wide area networks wan important parameter round trip delay order magnitude buffering delay bottleneck 
authors pointed sender may experience problems keep pipe full high bandwidth delay product networks especially addition losses buffer overflow connection suffers occasional random losses due transient congestion 
assume instant bottleneck buffer empty 
packets forwarded rate link server acks generated destination rate new packets released source seconds 
maximum possible number unacknowledged packets sum packets transit path equal packets buffer size window exceeds max buffer overflow occurs 
packet loss occurs exact size window difficult evaluate depends link capacity rtt 
approximation assume tcp reno retransmitting lost packet resumes congestion avoidance cwnd set derive differential equation describe evolution cwnd fluid approximation 
denote number acks received source units time congestion avoidance phase 
express derivative cwnd function ack reception rate window size large keep server continuously busy rate acks received ack reception rate equal sending rate min recalling congestion avoidance phase cwnd increased means congestion avoidance phase consists sub phase corresponding respectively 
able evaluate duration phase number packets successfully transmitted phase max ack received max max queue increasing increases cwnd opens slowly 
integrating second phase get evaluating expression number packets delivered obtain duration phase max link fully utilized phase 
having amount packets delivered phase duration phase evaluate throughput function ratio bottleneck buffer bandwidth delay product previous expression holds points performance long lived connection suffers presence small buffers bottleneck compared bandwidth delay product 
shows order fully exploit capacity path buffer size equal bandwidth delay product 
analysis proceeds considering scenario addition buffer overflows packet lost successful transmission bottleneck link probability independently packets 
case possible exactly compute throughput markov chain analysis 
sketch method 
absence random losses evolution cwnd tcp reno wholly determined window size cycle half cwnd previous cycle 
evolution cwnd described introducing defined functions window size successful packet transmissions 
time required complete transmission packets 
cycle terminates losses due buffer overflow represents number packets max transmitted period cycle terminate random loss successfully transmitting max packets 
random loss model distribution max max max window size cycle terminates duration th cycle denote respectively cwnd congestion avoidance phase number successful transmissions cycle duration cycle 
evolution expressed recursive equations equations define transition probabilities continuous time markov chain solution gives stationary distribution long run throughput exact solution markov chain computationally expensive approximation previous method 
key result analysis presence random losses leads significant throughput deterioration bandwidth delay product high 
particular throughput strongly dependent product loss probability square bandwidth delay product decrease sharply quantity larger units 
phenomenon roughly explained fact relatively earlier drops cycle lead small initial values cwnd implies rounds transmission fill pipe 
consequence tcp suitable run path introducing sporadic losses flow real time traffic wireless links 
order prevent random losses countermeasures flow isolation ad hoc link layer protocols 
tcp interaction aqm red previous section various ways relate performance tcp connection parameters network 
major drawback approaches independence packet loss process data flow 
section get issue modeling complete system couples tcp sending rate loss rate set stochastic differential equations 
approach gives opportunity understand role aqm congestion control tune parameters related aqm schemes 
application modeling technique consider psfrag replacements max min max red drop function red random early detection popular aqm schemes designed address problem arising tcp networks 
red scheme showed improve performance network reacting earlier incipient congestion introducing proactive form congestion control 
red scheme allows prevent global synchronization sources associated drop tail buffers 
drop tail buffer congested packets flows discarded simultaneously inducing multiple sources slowdown leading sudden fall instantaneous link utilization 
red similarly aqm schemes discards packets arriving queue randomly probability depends mean queue length 
words new packet arrival red draws random variable see packets admitted service computes dropping probability basis averaged value queue length 
noteworthy red introduces concept fairness flow management simpler drop tail discipline 
flow achieving bandwidth packets dropped signals congestion 
tcp source decrease rate quickly 
red implementations mark flag packet header dropping packet 
status flag copied returning ack receiver explicitly notify sender presence congestion direct path 
mechanism potentially prevents flow suffer losses requires cooperation parties connection intermediate routers places serious problems compatibility existing internet 
modeling point view marking scheme treated manner dropping impact loss packets relevant throughput 
variants red proposed objective gradually increase dropping probability mean queue size increases 
shows dropping profile analysis 
linear function lower min upper max threshold discontinuity max 
model network max min min max min max network modeled set links capacities sources indexed links shared set subset links 
sets define min max routing matrix binary matrix th row indicate sources share link th column represent link crossed source source associated congestion window packets time link associated packet loss probability scalar congestion measure queue size bits 
average round trip time th tcp source time approximated sum round trip delay associated connection total queuing delay path 
considering losses different queues independent suitable assumption modeling red policy express packet loss probability experienced source corresponds congestion measure th source 
equation differential version equation describing dynamic th queue derivative instantaneous queue length sum terms 
models decreasing queue length long greater zero due service packets constant rate 
second term corresponds increasing queue length due arrival packets tcp flows share th queue 
interested mean value analysis take expectation sides equation derivation approximation strictly correct cause errors 
observe equilibrium system reaches quasi periodic evolution suggested results detailed simulations random component state variables instantaneous queue size smaller smaller contribution respect deterministic number flows increases 
system dominated deterministic evolution extent fluctuations small previous approximation justified 
order approximate term consider bottleneck queues probability close non queues typically means section indicate mean value bar sign probability close zero 
basis observation approximate having knowledge mean queue length allows red evaluate drop probability 
assume red estimates average queue length exponential weighted moving average samples taken seconds 
smoothing filter weight described useful convert equation differential equation 
equation order difference equation natural candidate recalling sampled data system comparing coefficients obtain ln interval kt rewrite expression describing behaviour expected value sides model source ln step build model tcp source 
model assumption packet losses flow described poisson counting process time varying rate rationale assumption model losses flow moving network sources assuming packets transit network discarded probability 
poisson process suitable model independent marking scheme commonly aqm red 
denotes number losses detected source time differential equation describes evolution congestion window equation models additive increase multiplicative decrease aimd behaviour tcp 
term corresponds ai part increases window size packet round trip time 
second term corresponds md part halves congestion window immediately drop detected sender case 
expectation obtain rate loss indication sender 
note assumed terms independent order split term product factors exact especially proportional marking schemes change fundamental nature tcp mechanism allows capture dynamic aimd evolution 
proportional marking schemes red rate marking dropping indications proportional share bandwidth connection 
bandwidth achieved source expected value drop rate link note drops occur node round trip time detected sender 
order take account latency feedbacks shift rate congestion signals forward time seconds 
evolution cwnd governed coupled equations unknowns solved numerically 
solution yields estimate average transient behaviour system providing directly window size connection queue size node loss rate average rtt 
time needed get accurate results model order magnitude needed simulations gain increases topology complex 
idea advantage consider solution system consisting connections takes seconds corresponding detailed simulation take hours complete 
linear analysis single link case accomplish task linearizing previous set equations case single link topology 
linearized system suitable studied classic tools linear control theory gives suggestions way modify algorithm fulfil requirements stability robustness system case red deemed difficult task 
consider identical tcp reno rtt sharing common link capacity rewrite equation generic tcp flow defining evolution mean value cwnd equation concerning dynamic queue term represents round trip time connections 
writing equation assumed server queue transmitting packets reasonable assumption studying dynamic bottleneck 
complete system equations need specify relationship queue size dropping probability depends employed aqm strategy 
borrowing terminology control system language refer aqm control block controller rest system plant 
determine linear form plant case consists tcp flows queue dynamics loss probability input queue size output 
concentrate design aqm controller support linear control theory 
ease notation omit sign expectation main goal aqm provide stable closed loop system 
stability issues concerning control design 
feasible controller possess acceptable transient response sensitive variations model parameters disturbance factors 
instance presence short lived connection queue noisy effect greedy connections 
small signal analysis step linearize system find operating point defined operating point state space point system converge system globally stable 
desirable behaviour equilibrium flow allocated exactly fraction available bandwidth delay product 
note equation ignores timeouts long term throughput connection follows square root law claimed inaccurate high values case term related timeouts added right hand side equation done introducing strong assumptions instance packet dropped round model tractable case small signal analysis quite complicated goes goal 
introducing difference variables linearize neighborhood operating point yielding previous calculation equalities provided evaluate partial derivative term 
determine simple form eigenvalues linearized system approximate delay term constant condition holds case response time aggregate tcp flows dominated term claim interval mean window size vary significantly respect absolute value window size approximate system equations merging terms obtain previous equations straightforward get block representation system terms laplace transform shown tcp queue defined follows tcp queue frag replacements tcp queue red linearized block diagram laplace representation plant relating packet marking probability queue length tcp queue formulate remarks expression static gain proportional round trip time capacity link inversely proportional number active flows 
influences directly gain margin factor open loop gain stable system multiplied system unstable 
surprise small number tcp flows increases static gain leads oscillatory response 
tcp flows competing bottleneck extent rate variation due multiplicative decrease larger case flows abrupt variation impacts stability system 
increase rtt corresponds decrease controllability system confirmed negative influence gain margin phase margin 
context aqm roughly interpret phase margin amount uncertainty round trip delay system tolerate unstable 
gain phase margins readily deduced bode plot relative frequency response open loop system 
gain margin equal magnitude response point phase response phase margin defined phase response magnitude response db 
designing aqm red majority internet routers implements drop tail queues 
control point view drop tail discipline control strategy 
known mechanisms called literature feedback systems lead strong oscillations complex behaviour system 
oscillations lead alternate state queue emptiness overflow 
hand buffer overflow results waste bandwidth due retransmission lost packets hand empty queues cause inactivity server underutilization links 
extreme cases avoided reason red introduced 
objective red controller reduce possible mean queuing delays delay variations 
smaller queue size time packet spends queue delay connection 
forcing small queues may lead link underutilization 
aqm design operate tradeoff acceptable queuing delay utilization 
queue management robust variation network parameters 
conditions include variation number tcp session sharing bottleneck variation round trip delay presence uncontrolled disturb traffic direct path 
give condition guarantees stability independently working conditions 
find laplace representation aqm red controller think red cascade smoothing filter dropping function 
operating point min max exists direct linear dependence small variation dropping probability small variation averaged queue size aqm red control block described transfer function 
red ln max max min note red acts proportional controller static gain defined slope red dropping profile 
designing red stabilize aqm control system variations number tcp sessions round trip time taken account 
case variations due propagation variable assume number tcp sessions larger threshold min round trip time max 
goal select red parameters stabilize system included intervals 
closed loop control system stable response bounded input bounded output 
case input system stable response initial condition converges exponentially zero 
proposition 
proposition satisfy condition linear system max min min max max controller stable red proof consider frequency response open loop system red expression red min max max min min max 
follows min max 
unit gain cross frequency upper bounded establish closed loop stability invoke nyquist criterion 
states open loop system unstable roots closed loop system stable number clockwise complex number trajectory equal zero 
obtain max min stable proposition example linear model build robust design system red accounts variation number flows round trip time rationale design force controller dominate closed loop behaviour 
done choosing closed loop time constant close decade higher tcp time constant queue 
expression leaves degree freedom choosing parameters set 
determine parameters constraints placed 
boundary chosen multiplicative factor larger 
lead faster response time system produce controller lower stability margins 
order increase bandwidth system strategies introduced instance classical proportional integral pi discussed 
summarized advances field analytical modeling internet congestion control years 
subject congestion control modeling wide presumption fully exhaustive 
concentrated fluid models describe behaviour tcp source single entity part feedback system 
study single connection obtain expressions bandwidth achieved tcp connection response network conditions 
analysis requires independence network state state single source models interesting study network loaded large number connections 
results source asymptotic approach show correlation state connections decreases number connection increases 
expression bandwidth achieved source sufficiently accurate practical issues address important aspect tcp slow start phase 
pointed jacobson congestion control design slow start phase seen mechanism approach equilibrium point congestion avoidance mechanism asymptotic stability 
mentioned internet flows short complete far reaching equilibrium 
performance study short lived connection important lot works topic appeared literature 
second part faced problem analytically describing interaction tcp aqm mechanisms 
particular focused attention networks aqm red policy 
derived analytical results allows qualitative understanding transient behaviour tcp red networks 
achieved results stability robustness network system 
final result discussion addressed allows engineering approach select network protocols parameters lead stable operation linear feedback control system 
vern paxson sally floyd 
don know simulate internet 
proceedings th conference winter simulation pages 
acm press 
park walter willinger 
self similar network traffic performance evaluation 
wiley interscience 
vern paxson sally floyd 
wide area traffic failure poisson modeling 
proceedings conference communications architectures protocols applications pages 
acm press 
leland murad taqqu walter willinger daniel wilson 
self similar nature ethernet traffic extended version 
ieee acm trans 
netw 
mark crovella azer bestavros 
self similarity world wide web traffic evidence possible causes 
proceedings sigmetrics philadelphia pennsylvania may 

chaotic nature tcp congestion control 
infocom pages 
vern paxson 
empirically derived analytic models wide area tcp connections 
ieee acm trans 
netw 
padhye firoiu towsley kurose 
modeling tcp throughput simple model empirical validation 
proceedings acm sigcomm pages 
baccelli hong 
interaction tcp flows 
technical report inria rocquencourt april 
sally floyd 
connections multiple congested gateways packet switched networks part oneway traffic 
acm computer communication review october 
mathis semke mahdavi ott 
macroscopic behaviour tcp congestion avoidance algorithm 
computer communication review 
lakshman madhow 
performance tcp ip networks high bandwidth delay products random loss 
ieee acm transactions networking vol 
pp 
july 
anurag kumar 
comparative performance analysis versions tcp local network lossy link 
ieee acm transactions networking 
misra ott 
window distribution idealized tcp congestion avoidance variable packet loss 
proceedings infocom pages 
claudio meo 
new approach model stationary behavior tcp connections 
proceedings infocom pages 
john heidemann katia obraczka joe touch 
modeling performance transport protocols 
ieee acm trans 
netw 
neal cardwell stefan savage thomas anderson 
modeling tcp latency 
proceedings infocom pages 
stoica zhang 
tcp model short lived flows 
ieee communications letters vol 
pp 

eitan altman konstantin avrachenkov barakat 
stochastic model tcp ip stationary random losses 
proceedings conference applications technologies architectures protocols computer communication pages 
acm press 
misra wei bo gong donald towsley 
fluid analysis network aqm routers supporting tcp flows application red 
proceedings sigcomm pages 
misra donald towsley gong 
control theoretic analysis red 
proceedings infocom pages 
michele renato lo meo marco ajmone marsan 
closed queueing network models interacting long lived tcp flows 
ieee acm trans 
netw 
sally floyd kevin fall 
promoting congestion control internet 
ieee acm transactions networking 
ott lakshman larry wong 
stabilized red 
proceedings infocom volume pages 
jean bolot thierry turletti 
experience rate control mechanism packet video internet 
computer communication review 
kelly 
charging rate control elastic traffic 
proceedings european transactions telecommunications january 
srikant 
congestion control schemes utility functions random losses ecn marks 
proceedings infocom pages 
steven low 
duality model tcp queue management algorithms 
ieee acm trans 
netw 
roberts 
bandwidth sharing objectives algorithms 
proceedings info com 
mo jean 
fair window congestion control 
ieee acm transactions networking 
liang guo ibrahim matta 
war mice elephants 
technical report 
kevin fall sally floyd 
simulation comparisons tahoe reno sack tcp 
computer communication review july 
stevens 
tcp ip illustrated vol protocols 
addison wesley 
sally floyd van jacobson 
random early detection gateways congestion avoidance 
ieee acm transactions networking 
dong lin robert morris 
dynamics random early detection 
proceedings acm sigcomm pages 
acm press 
wu chang feng dilip kandlur saha kang shin 
self configuring red gateway 
proceedings infocom volume pages 
christiansen kevin david ott smith 
tuning red web traffic 
proceedings sigcomm pages 
thomas martin may jean bolot 
analytic evaluation red performance 
proceedings infocom pages 
misra donald towsley gong 
designing improved controllers aqm routers supporting tcp flows 
infocom pages 

tcp traffic modeling limit theorems 
technical report institute systems research university maryland 
la 
characterization general tcp traffic large number flows regime 
ieee infocom san francisco april 
jacobson 
congestion avoidance control 
acm computer communication review proceedings sigcomm symposium stanford ca august 

