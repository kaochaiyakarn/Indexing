low distortion embeddings edit distance ostrovsky yuval rabani december show endowed edit distance embeds distortion log log log show efficient implementations embedding yield solutions various computational problems involving edit distance 
include sketching communication complexity nearest neighbor search 
problems improve previous bounds 
metric spaces embedding distortion distances preserved factor uniform scaling 
easy compute low distortion embeddings extremely useful computer science 
simply put applications embed small distortion metric space understand metric space efficient algorithms embedding provides efficient algorithm original metric space 
fundamental level studying embeddings different metric spaces way learn structure metric spaces numerous implications combinatorial optimization discrete mathematics functional analysis areas 
study edit distance metric strings finite character alphabet edit distance known levenshtein distance measures minimum number character insertions deletions substitutions needed transform string 
edit distance plays central role genomics text processing web applications areas 
particular fast estimation edit distance efficient search preliminary version appeared proc 
th ann 
acm symp 
theory computing may pages 
computer science department university california los angeles usa 
email cs ucla edu 
part done institute pure applied mathematics ipam 
supported part gift teradata intel equipment nsf research award john foundation 
computer science department technion israel institute technology haifa israel 
email rabani cs technion ac il 
part done visiting institute pure applied mathematics ipam ucla 
supported part israel science foundation number united states israel binational science foundation number 
edit distance investigated algorithms computational biology 
show edit distance embeds relatively small distortion 
specifically show endowed edit distance embeds distortion log log log note edit distance defined strings larger alphabet strings varying length 
results trivially extend larger alphabet applied variable length strings standard padding arguments 
omit discussion extensions extended 
furthermore show embedding fact efficient implying improved algorithms number problems including sketching approximate nearest neighbor search 
bit strings best known running time compute exact edit distance due paterson log easy quadratic time dynamic programming algorithm 
approximating edit distance show algorithm runs time max distinguish edit distance edit distance 
best approximation achieved nearly linear time algorithm result bar yossef 
edit distance metric modified allow block operations swapping arbitrarily large blocks single operation resulting block edit metric embedded distortion log log 
showed edit distance embedded distortion 
lower bound known prior publication preliminary version 
naor showed lower bound nearly log distortion embedding edit distance 
lower bound improved log rabani 
mentioned show embedding distortion log log log 
notice distortion trivial 
worth pointing provides theoretical foundation experimentally successful idea broder estimating similarity documents web pages looking sets shingles substrings covering document 
methods constructions results considered refinement original approach 
notion related embedding sketching model 
model compute string sketch small fingerprint far smaller length estimate distance strings examining sketches 
sketching related multi scale dimension reduction methods approximate nearest neighbor search streaming algorithms communication complexity document exchange :10.1.1.38.249
sketching model understood hamming distance implicitly see 
edit distance bar yossef show compute constant size sketch distinguish edit distance edit distance kd embedding results produce constant size sketches distinguish edit distance edit distance log log log feasible values important problem approximate nearest neighbor search algorithms 
database points underlying metric space want pre process database provide search algorithm query point finds database point close query point 
vast literature subject 
restrict attention theoretical pre processing cost polynomial input size high dimensional data bit strings input size nd search cost polynomial size query log kushilevitz indyk motwani consider databases hamming cube :10.1.1.38.249
search algorithms retrieve database point distance times minimum 
muthukrishnan show extend result block edit distance 
indyk gives solution edit distance search return point distance times minimum 
bar yossef gives similar bounds better pre processing performance 
embedding results imply solution search returns point distance log log log times minimum 
preliminaries denote set 
denote set 
empty set 
denote length notice string corresponds vector denote string vector 
denote xi th character alternatively th coordinate 
define xi 
xj 
empty string 


ik define xi xi xi xik abuse notation denote multiset strings multiple copies string listed elements counted different elements set 
simplified notation 
xn set put shifts 
notice multiset containing exactly elements 
denote xy concatenation followed denote ed edit distance minimum number insert delete substitute operations needed convert vice versa 
denote hamming distance number positions xi yi 
set denote set subsets cardinality consider optimal sequence edit operations converting sequence equivalent function fx properties 

fx fx 
fx 

fx fx holds fx fx 
interpretation fx sequence edit operations follows 
having fx corresponds deleting xi 
fx corresponds inserting yj 
fx xi yj corresponds substituting yj xi 
extension fx useful calculations 
notice may put fy facts trivial 
fact 
ed 
fx 
fact 
ed fx fact 
fx 
fact 
satisfy conditions fx fx 
ed ed ed 
ed estimated roughly comparing substrings lemmas quantify 
lemma 

exists injection ed ed ed 
proof fx 
put fact imax max fx fx 
ed ed imax ed imax 
fx imax fx imax imax inequality follows fact 
fact fx fx fx fx fx ed imax ed 
put fx extend arbitrarily 
show ed ed 
max max fx max max fx 
notice 
ed ed 
clearly ed ed 
ed ed ed required 
lemma 
exists sequence 
kd satisfying ki ed exists bijection shifts ib shifts ib shifts ib ed ki ed 
proof 
put max max fx min ib min fx ib max max fact min ib min ib ed ed ed axi ed 
fact ed ax ed assume loss generality notice shifts ib shifts ib 
lemma exists injection bx ax number indices bx ax ed ay ed axi ed ax bx 
ax set ay extend rest shifts ib arbitrarily set ki ed shifts ib ed ki ed max axi ib min ed ed 
ed axi ed ki ed ed 
completes proof 
embedding section prove main result upper bound distortion embedding edit distance 
embedding section ignores computational efficiency 
section efficient implementation embedding 

theorem 
exists universal constant exists embedding ed distortion log log log informal description embedding 
string 
partition log log log disjoint substrings approximately length 
refer substrings blocks 

denote blocks 
consider multisets shifts ranging non negative integer powers log block length 
define distance shifts shifts minimum cost perfect matching multisets cost edge elements minimum edit distance metric multisets strings shorter 
fact viewed transportation metric distributions strings frequency string proportional number times appears multiset 
ideally embed metric 
edit distance preserving embedding consist concatenating scaled embeddings shifts blocks values embedding shifts strong inductive hypothesis 
inductively embed strings shifts redefine edge costs matching minimum distance embedded strings embed metric sets strings 
embedding necessarily low distortion 
lemma may independent interest states properties embedding 
lemma 
satisfy ln mapping element multisets min min ln minimum taken bijections furthermore proof put ln consider function defined follows 

set generate coordinate sequence string set 
put sd 
notice invariant permuting elements 
bijection minimizes min ln 
pr denote uniform distribution sd ib pr xi pr min xij bh ij ln ln min ln 
hand consider assuming min pr xi ln 
ln sd pr xi pr xi pr xi pr xi completing proof 
values denote embedding lemma 
proof theorem 
proof induction clearly claim true sufficiently small 
assume claim holds strings length denote embedding constructed strings sj log put imax log log log put jmax min sj imax log jmax put dj imax sj 
imax jmax put ai shifts imax id imax sj put bi dj ai define vector coordinates indexed follows 
dj sj bi 
notice simplicity assume imax divides partition imax blocks length imax 
assumption removed increasing length blocks 
proof amended easily handle blocks lengths varying 
consider strings lemma sequence 
satisfying imax ki ed imax jmax exists bijection ai ai ai ed ki ed 
sj ed trivially lemma dj sj bi dj sj bi sj 
sj ed equation induction hypothesis bi dj lip ki ed 
lemma dj sj bi dj sj bi sj sj min bi bi min sj ln sj min sj ln sj ed sj sj ln sj sj ed dj lip ki ln sj 
summing equations condition get imax jmax dj sj bi dj sj bi imax sj ed lip imax obtain recurrence relation lip lip sj imax jmax ed log imax log log log log log lip ki log log log imax log log log log ed 
log log lip function satisfies conditions lemma appendix recurrence solves lip log log log proceed bound lip 
define sequence 
follows 
imax imax id imax imax id imax put ji put ji max jmax ai ai ed dj lip sj 
put imax imax ji 
clearly ed dj lip sji 
hand consider ai ai 
ed dj lip sj induction hypothesis sj 
lemma dj sj bi ji dj sj bi ji get recurrence log sji sji lip ed 
log lip imax lip log log solves lip log log log lemma 
implementation applications embedding described previous section computationally inefficient 
efficient implementation embedding derived algorithmic version lemma 
lemma 
exists probabilistic polynomial time algorithm satisfy ln computes log holds probability min min ln minimum taken bijections furthermore ln proof put positive integer specified 

ir samples uniform distribution distribution hash functions 
pr 
hr samples require 
ir 
hr mutually independent 
embedding coordinate 
iu 
ib 

coordinate indexed 
hu iu bijection minimizes min ln pr denote product distribution uniform distribution pr xi pr xi bh ln ln min min ln px denote expression 
clearly px nx denote number hu hu iu 
pr xi clearly pr nx 
notice nx 
standard chernoff bounds pr nx notice nx 
pr px se hand consider assuming min pr yi xi pr yi xi nx denote number hu hu 
standard chernoff bounds give nx pr nx bound holds ny number hu hu 
obviously nx ny 
pr se complete proof choose log 
lemma implies algorithmic version theorem 
theorem 
exists polynomial time algorithm log computes probability log log log ed log log log ed 
proof theorem follows closely proof theorem omitted 
notice order embed need take ensure distances preserved high probability 
theorem solve data processing problems involve edit distance embedding data applying previous results data 
discuss examples illustrate issue 
example sketching algorithm basic building block tasks 
theorem 
universal constants holds 
probabilistic polynomial time algorithm computes sketch log probability holds 
ed log ed log log log log 
proof compute theorem embed sketching algorithm implied 
corollary 
round public coin probabilistic party communication protocol input exchanges log bits probability outputs ed ed log log log cases 
comparison done outcome algorithm coin tosses proof suppose alice gets bob gets alice computes bob computes random string exchange bits 
output log 
theorem protocol succeeds probability 
obvious application approximate nearest neighbor search 
nearest neighbor search problem database consisting points ambient distance space pre processed search algorithm find database point closest input point pre processed database 
approximation version search algorithm may return database point distance somewhat larger minimum 
approximate nearest neighbor algorithms points get theorem :10.1.1.38.249
theorem 
probabilistic pre processing algorithm search algorithm satisfy conditions high probability 
input pre processing algorithm computes polynomial time pre processed database 
input search algorithm finds time polynomial log database point ed log log log ed 
proof algorithm theorem 
embeds ed pre process database apply pre processing algorithm database 
search query apply search algorithm 
gupta indyk 
lower bounds embedding edit distance normed spaces 
proc 
soda pages 
bar yossef jayram kumar 
approximating edit distance efficiently 
proc 
focs 
kilian rubinfeld sami 
sublinear algorithm weakly approximating edit distance 
proc 
stoc 
broder glassman manasse zweig 
syntactic clustering web 
proc 
th int world wide web conf pages 
cormode muthukrishnan 
string edit distance matching problem moves 
proc 
soda pages 
cormode paterson vishkin 
communication complexity document exchange 
proc 
soda 
indyk 
approximate nearest neighbor edit distance product metrics 
proc 
soda pages 
indyk motwani :10.1.1.38.249
approximate nearest neighbors removing curse dimensionality 
proc 
stoc pages 
naor 
theorems fourier analysis 
proc 
focs 
rabani 
improved lower bounds embeddings 
appear proc 
soda 
kushilevitz ostrovsky rabani 
efficient search approximate nearest neighbor high dimensional spaces 
siam journal computing 
preliminary version appeared proc 
stoc 
levenshtein 
binary codes capable correcting deletions insertions reversals 
doklady nauk sssr russian 
english translation soviet physics doklady 
paterson 
faster algorithm computing string edit 
journal computer systems sciences 
muthukrishnan 
approximate nearest neighbors sequence comparison block operations 
proc 
stoc pages 
appendix lemma 
consider non negative function satisfies 
exist constants log log log log log log log exists constant log log log proof proof induction base case take sufficiently large constants log log log log log log log log log log log log log assume claim holds log log log log log log log log log log log log log log log log log log log log log log log log log log log log log log log log log log log log log log log log log log log log log log log log log log log log log log log log log log log log log log log provided sufficiently large 

