book title book editors ios press discovery patterns learner actions andreas michael vetter stefan th jens institut informatik und systeme universit duisburg essen 
describes approach analysis computer supported learning processes utilizing logfiles learners actions 
provide help researchers teachers finding insightful patterns learning process ways patterns specified explicitly searched logfiles automatic extraction patterns complying configurable parameters initiated find typical sequences logfile 
support features implemented stand tool accepts generic logfiles usable potentially wide variety different learning systems 
years importance additional functionality active support people involved cscl learning students teachers researchers grown 
learning protocols readily available cscl systems simply logging activities take place collaborative environment 
logfiles various ways related goals aied area 
manual inspection interpretation exploration mis tutor support construction tutors real data 
logfiles usually low abstraction level little teachers learners 
want help users cscl systems better understand learning processes providing tool enables user analyse logfiles different kind cscl systems 

extraction patterns logfiles typical sequences user actions indicate phases collaboration situations learning process turn learners communication breakdowns 
support find visualize sequences helps teacher evaluating process researcher understanding learning student reflecting activities 
sequences searched matching specific pattern term pattern typical sequence user actions 
logfiles collaborative learning sessions usually actions coordination level chat messages interspersed domain related actions creating uml class 
issue find patterns strictly cohesive logfile addressed tool supporting user logfile analysis 
topic consider designing tool logfile analysis researcher hypothesis clearly hypothesis manifests low level computer generated logfile 
desirable automatically compute frequently occuring patterns specified query 
discovery patterns learner actions 
extraction specified patterns specified patterns standard algorithms query engines case patterns cohesive logfile 
complexity finding patterns increased incomplete instances patterns continued parts logfiles 
offer filter activities relevant interspersed specified pattern choosing type action logfile action target type action shall considered 
done specific users 
specification patterns done user different ways rule specification action types rule composition tool shows list action types combination object types respective actions occur logfile 
user chooses action types list desired sequence 
dependencies elements rule search uml class object created renamed specified identical variables slot object slot 
rules components new rules compose complex rules 
specification example user option define rule informal way selecting directly actions logfile pattern searched 
tool abstracts concrete values different slots actions keeps dependencies variables identical values 
direct editing rules query language expert user option directly edit modify rules created rule specification example level query language tool prolog 
allows user add constraints rule manually requires expertise methods hide implementation level user 
regardless method chosen specification rules rules compiled rule sets stored re 
researcher load previously defined rule set compiles standard rules logfile analysis choose rules pattern search 

finding unspecified patterns task providing typical patterns specified demands different algorithmic solution 
chose sawtooth algorithm scans string longest re occuring substring starting position 
un supervised run produce lot potential patterns unspecified length frequency additionally algorithm considers directly succeeding patterns 
produce better results provide options user guided pattern mining defines general properties patterns searched comply 
options filtering objects users action types user review actions conducted specific object user type choose considered pattern discovery run 
object context cscl system producing logfile allows relations objects colab possible consider semantic context objects expressed related objects 
configuring maximally considered relational distance object size context varied choosing distance means objects connected relations object 
discovery patterns learner actions pattern length frequency patterns minimum length surpassing specified number occurrences produced search run 
combining options user guides pattern discovery process direction patterns interested 
pattern discovery produces rules characterizing pattern schema fulfilling option criteria specified user directly cf 
previous subsection 
concept implemented tool put practical logfiles student pairs modelling environment 
proof concept unspecified discovery produced typical sequences collaboration chat message exchange followed construction phase logfiles analysed manually 
results encouraging see rules unspecified patterns fine tuned user parameterization find characteristic patterns 

visualization timeline middle pattern instance left chat exchange construction 
pattern produced unspecified discovery named user meaning 
analysis tool designed accept logfiles provides generic logfile format transformation functionality format suitable xsl script map logfiles arbitrary learning systems generic format 
plan tool analysis lab classroom experiments mainly manually previous studies 
de vries lund baker 
computer mediated epistemic dialogue explanation argumentation vehicles scientific notions 
journal learning sciences pp 

baker corbett koedinger 
detecting student misuse intelligent tutoring systems 
proc 

lester 
koedinger schneider bollen 
bootstrapping novice data semi automated tutor authoring student log files 
proc 
workshop analyzing student tutor interaction logs improve educational outcomes 
hoppe pl 
inductive knowledge acquisition unix coach 
informatics psychology workshop pages 
