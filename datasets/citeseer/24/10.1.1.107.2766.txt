incorporating contextual information recommender systems multidimensional approach department information decision sciences carlson school management university minnesota umn edu ramesh department information operations management sciences stern school business new york university stern nyu edu sen marketing department college business dickinson university sen edu alexander tuzhilin department information operations management sciences stern school business new york university stern nyu edu presents multidimensional md approach recommender systems provide recommendations additional contextual information typical information users items current recommender systems 
approach supports multiple dimensions extensive profiling hierarchical aggregation recommendations 
presents multidimensional rating estimation method capable selecting dimensional segments ratings pertinent recommendation context applying standard collaborative filtering traditional dimensional rating estimation techniques segments 
comparison multidimensional dimensional rating estimation approaches tradeoffs studied 
introduces combined rating estimation method identifies situations md approach outperforms standard dimensional approach uses md approach situations standard dimensional approach 
presents pilot empirical study combined approach multidimensional movie recommender system developed implementing approach testing performance 

motivation done area recommender systems past decade papers subject resnick hill shardanand maes 
focused developing new methods recommending items users vice versa recommending movies web site visitors recommending customers books 
recommendation methods usually classified collaborative content hybrid methods balabanovic shoham described detail section 
applications recommending vacation package personalized content web site various products online store movie may sufficient consider users items important incorporate contextual information recommendation process 
example case personalized content delivery web site important determine content needs delivered recommended customer 
specifically weekdays user prefer read world news logs morning stock market report evening weekends read movie reviews shopping 
example need contextual information smart shopping cart providing real time recommendations shoppers wireless technologies wade needs take account information products customers contextual information shopping date time store accompanies primary shopper children products placed shopping cart location store 
example recommender system may recommend user different movie depending going see boyfriend saturday night parents weekday 
observations consistent findings behavioral research consumer decision making marketing established decision making invariant contingent context decision making 
particular consumer may different decision making strategies prefer different products brands different contexts klein 
accurate prediction consumer preferences undoubtedly depends degree incorporated relevant contextual information recommendation method 
provide recommendations contextual information multidimensional recommendation model md model recommendations multiple dimensions extends classical dimensional users items paradigm 
md model introduced earlier workshop tuzhilin preliminary ideas md model described 
md model significantly greater depth describe various additional aspects including formulation md recommendation problem analysis rating aggregation capabilities md model 
particular rating estimation method md model algorithm combines md approaches provides rating estimations combined approach 
case study implementing testing methods movie recommendation application takes consideration contextual multidimensional information movie seen 
traditional collaborative filtering systems assume homogeneity context usually utilize collected ratings data determine appropriate recommendations 
contrast main rating estimation method utilizes reduction approach uses ratings pertain context user specified criteria recommendation 
example recommend movie person wants see movie theater saturday night method ratings movies seen movie weekends determined data place time week dimensions affect behavior 
method combines multi strategy local machine learning methods atkeson fan li hand sections line analytical processing olap kimball chaudhuri dayal marketing segmentation methods predict unknown ratings 
show tradeoff having relevant data calculating unknown rating having fewer data points calculation ratings similar context tradeoff greater relevance vs lower sparsity 
show achieve better recommendations tradeoff 
contributions lie presenting multidimensional recommendation model studying properties capabilities 
proposing multidimensional rating estimation method approach segments ratings user specified criteria applies collaborative filtering dimensional rating estimation method resulting dimensional segment 
demonstrating context matters multidimensional approach produce better rating estimations reduction approach situations 
furthermore demonstrated context matter cases reduction approach outperforms approach situations contextual segments data 
proposing combined approach identifies contextual segments reduction approach outperforms approach approach situations standard approach rest 
implementing combined approach empirically demonstrating combined approach outperforms standard collaborative filtering approach multidimensional rating data collected designing web site purpose 
proposing machine learning perspective apply local machine learning methods combine olap market segmentation methods identify local regions local models predicting unknown ratings built 
multi strategy machine learning method combine local global models achieve better predictions unknown ratings 
discussing various alternative approaches multidimensional rating estimation heuristic model approaches various extensions proposed reduction approach 
presenting md approach section md rating estimation method section review prior recommender systems section 
prior recommender systems traditionally recommender systems deal applications types entities users items 
recommendation process starts specification initial set ratings explicitly provided users implicitly inferred system 
example case movie recommender system john doe may assign rating movie set john doe 
initial ratings specified recommender system tries estimate rating function users items ratings user item pairs rated users 
conceptually function estimated users items domain recommender system select item highest rating set items user recommend item user users arg max items practice unknown ratings estimated users items space expensive task large domains users items 
various methods developed finding efficient solutions requiring smaller computational efforts described goldberg sarwar 
balabanovic shoham approaches recommender systems usually classified content collaborative hybrid review rest section 
content recommender systems 
content recommendation methods rating item user typically estimated ratings assigned user items items similar item terms content 
example movie recommendation application order recommend movies user content recommender system tries understand user preferences analyzing commonalities content movies user rated highly past 
movies high degree similarity customer preferences get recommended 
formally content set attributes characterizing item usually computed extracting set features item content determine appropriateness item recommendation purposes 
content systems designed recommending text items including web pages usenet news messages content systems usually described keywords done fab balabanovic shoham syskill webert pazzani billsus recommender systems 
importance keyword determined weighting measure defined various measures information retrieval salton baeza yates ribeiro neto term frequency inverse document frequency tf idf measure salton 
addition need define profile user content systems deal recommending text items user profiles defined terms weights important keywords 
words user defined vector weights wu weight denotes importance keyword ki user specified various information retrieval metrics including tf idf measure lang pazzani billsus 
content recommender systems rating function usually defined score content case content defined vectors keyword weights wu usually done recommending web pages usenet messages kinds textual documents rating function usually represented information retrieval literature scoring heuristic defined terms vectors cosine similarity measure salton baeza yates ribeiro neto 
traditional heuristics information retrieval methods techniques content recommendations bayesian classifiers pazzani billsus mooney various machine learning techniques including clustering decision trees artificial neural networks pazzani billsus 
techniques differ information retrieval approaches calculate estimated ratings heuristic formula cosine similarity measure model learned underlying data statistical learning machine learning techniques 
example set web pages rated relevant irrelevant user pazzani billsus na bayesian classifier duda classify unrated web pages 
observed shardanand maes balabanovic shoham contentbased recommender systems limitations 
specifically content recommender systems limited content analysis capabilities shardanand maes 
recommender systems useful domains content information extracted automatically various feature extraction methods textual data provided manually information movies 
difficult systems recommend say multimedia items audio video streams manually annotated context information 
content recommender systems suffer 
design user recommended items similar ones rated highly past 
certain cases items recommended similar user seen different news article describing event 
content recommender systems billsus pazzani filter items similar user seen 
user rate sufficient number items content recommender system really understand preferences reliable recommendations 
referred new user problem new user having ratings able get accurate recommendations 
address issues collaborative filtering approach resnick hill shardanand maes recommender systems 
collaborative recommender systems 
traditionally collaborative recommender systems try predict rating item particular customer customers previously rated item 
formally rating item user estimated ratings assigned item users similar user collaborative systems developed academia industry development systems grouplens resnick konstan video recommender hill ringo shardanand maes collaborative filtering algorithms automate recommendation process 
examples collaborative recommender systems include book recommendation system amazon com moviecritic recommends movies web phoaks system helps people find relevant information www terveen jester system recommends jokes goldberg 
breese algorithms collaborative recommendations grouped general classes memory heuristic model 
memory algorithms resnick shardanand maes breese nakamura abe delgado ishii heuristics rating predictions entire collection previously rated items users 
value unknown rating ru user item usually computed aggregate ratings similar users item aggr ui denotes set users similar user rated item range number users 
examples aggregation function sim sim ui ui ui multiplier serves normalizing factor usually selected sim average rating user defined similarity measure users sim determines distance users weight ratings similar users weight rating carry prediction ui various approaches compute similarity measure sim users collaborative recommender systems 
approaches sim ratings items users rated 
popular approaches correlation resnick shardanand maes rx ry sxy sim xs ys sxy sxy cosine breese sarwar sim cos sxy xs ys sxy sxy rx ry ratings item assigned users respectively sxy items rx ry set items rated customers denotes dot product vectors performance improving modifications default voting inverse user frequency case amplification breese weighted majority prediction nakamura abe delgado ishii proposed extensions standard correlation cosine techniques 
aggarwal propose graph theoretic approach collaborative filtering similarities users calculated advance stored directed graph 
techniques traditionally compute similarities users sarwar proposed correlation cosine techniques compute similarities items obtain ratings 
furthermore sarwar argue item algorithms provide better computational performance traditional user collaborative methods time providing better quality best available user algorithms 
notation indicate item rated user 
contrast memory methods model algorithms breese billsus pazzani ungar foster chien george getoor sahami goldberg collection ratings learn model rating predictions 
comparison model methods memory algorithms thought lazy learning methods sense build model perform heuristic computations time recommendations sought 
example model recommendation techniques breese probabilistic approach collaborative filtering proposed unknown ratings calculated pr ui ui ui ui assumed rating values integers probability expression probability user give particular rating item previous ratings items rated user estimate probability breese proposes alternative probabilistic models cluster models bayesian networks 
billsus pazzani proposed collaborative filtering method machine learning framework various machine learning techniques artificial neural networks coupled feature extraction techniques singular value decomposition algebraic technique reducing dimensionality matrices 
dimensionality reduction techniques recommender systems studied sarwar 
furthermore breese billsus pazzani compare respective model approaches standard memorybased approaches report model methods instances outperform memory approaches terms accuracy recommendations 
model collaborative recommendation approaches proposed literature 
statistical model collaborative filtering proposed ungar foster different algorithms estimating model parameters compared including means clustering gibbs sampling 
methods collaborative filtering include bayesian model chien george probabilistic relational model getoor sahami linear regression sarwar 
method combining memory model approaches proposed pennock horvitz empirically demonstrated combined approach provide better recommendations pure memory model approaches 
furthermore kumar simple probabilistic model collaborative filtering demonstrate recommender systems valuable little data user simple algorithms effective best possible ones terms utility 
pure collaborative recommender systems shortcomings content systems described earlier limited content analysis specialization limitations balabanovic shoham lee 
addition new user problem issue content systems collaborative recommender systems tend suffer new item problem rely solely ratings data recommendations 
recommender system able recommend new item rated substantial number users 
sparsity ratings important problem collaborative recommender systems frequently face number user specified ratings usually small compared number ratings need predicted 
example movie recommendation system may movies rated people movies recommended rarely users gave high ratings 
user tastes unusual compared rest population users particularly similar leading poor recommendations balabanovic shoham 
address problems researchers proposed combine contentbased collaborative approaches hybrid approach 
hybrid recommender systems 
content collaborative methods combined hybrid approach different ways balabanovic shoham basu ungar foster claypool nicholas pazzani tran cohen 
hybrid recommender systems including fab balabanovic shoham collaboration content approach described pazzani combine collaborative content approaches learning maintaining user profiles content analysis various information retrieval methods content techniques directly comparing resulting profiles determine similar users order collaborative recommendations 
means users recommended items items score highly user profile rated highly user similar profile 
basu follow similar approach propose additional sources information age gender users genre movies aid collaborative filtering predictions 
amounts adding content elements collaborative filtering method 
nicholas proposes implement hybrid approach incorporating elements collaborative filtering latent semantic indexing content recommendation framework 
approach building hybrid recommender systems implement separate collaborative content recommender systems 
different scenarios 
combine outputs ratings obtained individual recommender systems final recommendation linear combination ratings claypool voting scheme pazzani 
alternatively individual recommender systems moment choosing better recommendation quality metric 
example system billsus pazzani selects recommender system give recommendation higher level confidence tran cohen chooses recommendation consistent past ratings user 
hybrid approach recommendations ansari combining collaborative content methods authors propose information users items single recommendation model 
ansari bayesian mixed effects regression models employ markov chain monte carlo methods parameter estimation prediction 
describe approach detail appendix 
demonstrated balabanovic shoham pazzani hybrid methods provide accurate recommendations pure collaborative content approaches 
approaches described section focus recommending items users users items take consideration additional contextual information time place people factors described section affecting recommendation experiences 
recommendation methods hard wired recommendation systems provide particular types recommendations 
address issues tuzhilin proposed multidimensional approach recommendations traditional dimensional user item paradigm extended support additional dimensions capturing context recommendations 
multidimensional approach multidimensional data model data warehousing line analytical processing olap applications databases kimball chaudhuri dayal hierarchical aggregation capabilities user item profiles defined dimensions 
tuzhilin describes standard multidimensional olap model adjusted applied recommender systems 
provide extensive flexible types recommendations requested user demand tuzhilin recommendation query language rql allows users express complex recommendations take account multiple dimensions aggregation hierarchies extensive profiling information 
usage contextual information recommender systems traced herlocker konstan argued inclusion knowledge user task recommendation algorithm certain applications lead better recommendations 
example want recommend books gifts child herlocker konstan want books child likes information calculating new recommendations 
approach dimensional uses user item dimensions task specification consists list sample items additional contextual dimensions 
approach successful illustrating value incorporating additional information standard collaborative filtering paradigm 
proposal incorporate dimensions recommender systems line research consumer decision making behavioral researchers established decision making invariant contingent context decision making 
consumer may different decision making strategies prefer different products brands different contexts 
consumers vary decision making rules usage situation service family gift self purchase situation catalog sale store shelf selection salesperson aided purchase accurate prediction consumer preference undoubtedly depends degree incorporated relevant contextual information usage situation purchase situation recommender system 

multidimensional recommendation model md model section describe multidimensional md model consisting main components multiple dimensions profiles dimension rating aggregation capabilities 
describe components 
multiple dimensions stated md model provides recommendations user item dimensions classical recommender systems dimensions user item time place considering multiple dimensions follow multidimensional data model data warehousing olap applications databases kimball chaudhuri dayal 
formally dn dimensions dimension di subset cartesian product attributes fields aij ki di ai ai aik attribute defines domain set values 
attributes form key uniquely define rest attributes ramakrishnan gehrke 
cases dimension defined single attribute ki cases dimensions dn define recommendation space dimensions cartesian product dn 
ratings rating domain representing ordered set possible rating values 
rating function defined space ratings example 
consider dimensional recommendation space user item time user dimension defined user uname address income age simplify presentation distinguish dimension attribute single attribute dimensions terms interchangeably clear context 
consists set users having certain names addresses incomes certain age 
similarly items dimension defined item type price consists set items defined names types price 
time dimension defined time year month day consists list days starting date january december 
define rating function recommendation space user item time specifying user user liked item item time time 
example john doe rated vacation took resort club january 
visually ratings dn recommendation space dn stored multidimensional cube shown 
example cube stores ratings recommendation space user item time tables define sets users items times associated user item time dimensions respectively 
example rating means user user id item item id rating specified weekday 
user id name age john bob alice mary ab ab xy zz ratings item time 
multidimensional model user item time recommendation space 
rating function usually defined partial function initial set ratings explicitly specified user inferred application konstan oard kim 
central id name cost id name weekday weekend holiday problems recommender systems estimate unknown ratings rating function total 
multidimensional model recommender systems rating estimation problem caveats described section parts multidimensional model 
rest section assume unknown values rating function estimated total function defined recommendation space 
recommendation space dn rating function recommendation problem defined selecting certain dimensions di dik overlap certain dimensions jl recommending tuple ik jl jl dj tuple di dik di dik maximizes rating arg max jl jl ik di dik di dik jl jl example consider application recommends movies users dimensions movie represents movies recommended application defined attributes movie name studio director year genre 
person represents people movies recommended application defined attributes person userid name address age occupation 
place represents places movie seen 
place consists single attribute defining listing movie choices home tv vcr dvd 
time represents time movie seen defined attributes time month year 
companion represents person group persons see movie 
companion consists single attribute having values friends girlfriend boyfriend family workers rating assigned movie person depends movie seen time 
example type movie recommend college student jane doe differ significantly depending planning see saturday night boyfriend vs weekday parents 
additional applications multidimensional recommendations useful mentioned section include personalized web content presentation having recommendation space user content time smart shopping cart having recommendation space customer product time store location 
important question dimensions included multidimensional recommendation model 
issue related problem feature selection extensively addressed data mining liu motoda statistics chatterjee 
understand issues involved consider simple case dimension having possible values distributions ratings dimension matter recommendation purposes 
example assume single attribute place dimension values theater home 
assume ratings movies watched movie theater place theater distribution ratings movies watched home place home 
means place movies watched home movie theater affect movie watching experiences place dimension removed md model 
rich body statistics tests distributions moment generating functions equal applied case determine dimensions kept md model equivalent determining features keep drop data mining statistical models 
example easily extended situations attribute dimension data types binary 
traditional recommender systems provide recommendations particular type recommend top items user multidimensional recommender systems offer possibilities including recommending dimension expressed 
example personalized web content application described ask best user time combinations recommend item best items recommend user time combination best times recommend user item combination similarly movie recommender system recommend movie place see person certain time tomorrow joe see harry potter movie theater 
alternatively recommend place time see movie person companion jane boyfriend see schmidt dvd home weekend 
examples demonstrate recommendations multidimensional case significantly complex classical case 
need special language able express recommendations tuzhilin proposed recommendation query language rql purposes expressing different types multidimensional recommendations 
coverage rql language outside scope reader referred tuzhilin learn 
profiling capabilities stated section dimension di defined set attributes aij ki attributes provide recommendations 
idea new explored pazzani demographic information users provide better recommendations 
content approaches keywords providing recommendations mooney pazzani billsus keywords viewed attributes describing document 
ansari proposed hybrid approach rating estimation uses attributes describing users items provide recommendations 
attributes comprise simple profile set keywords defining document user define profile document user respectively 
propose extend idea incorporate general profiling capabilities multidimensional recommendation model 
simple case attributes aij constitute part profile dimension di 
example attributes userid name address age occupation part user profile movies application considered section 
concept profile dimension general set attributes defining dimension include derived attributes including statistics average number movies person sees month largest average purchases customer commerce web site 
sets rules 
consider person dimension movies application 
may store rule john doe prefers see action movies weekends name john doe action weekend part john doe profile describes movie viewing behavior 
similarly movie dimension may store rule movie seen weekdays predominately empty segment customers weekday empty part profile movie 
sets sequences sequences web browsing activities movie watching sequences 
example may store jim profile popular web browsing sequences jim visits book web site xyz usually accesses home page goes home gardening section site browses gardening section leaves web site xyz home gardening gardening exit 
sequences learned transactional histories consumers frequent episodes sequence learning methods hand extensively web usage mining literature mobasher mobasher spiliopoulou 
signatures data structures capture evolving behavior learned large data streams simple transactions cortes 
profiles useful reasons 
provide richer recommendations 
providing standard recommendation top items user available profiling information provide targeted recommendations recommending top action movies sylvester arnold released years second profiles recommendation algorithms provide targeted recommendations 
example recommending movie college student want college students collaborative filtering algorithm result targeted recommendations 
advanced profiling methods described provide capabilities focus recommendations run time example assume want identify people want recommend saturday 
rule weekday empty part movie profile restrict considerations empty segment population run time wednesday provide targeted recommendations 
aggregation capabilities key characteristics multidimensional databases ability store measurements sales numbers multidimensional cubes support aggregation hierarchies different dimensions hierarchical classification products time hierarchy provide capabilities aggregate measurements different levels hierarchy kimball chaudhuri dayal 
example aggregate individual sales beverages category major soft drink distributor northwest region month 
multidimensional recommendation model supports aggregation capability multidimensional data model 
certain idiosyncrasies pertaining model different classical olap models databases kimball chaudhuri dayal 
describe aggregation capabilities rest section 
starting point assume dimensions di multidimensional recommendation model hierarchies associated dimensions products dimension standard industrial product hierarchy north american industry classification system naics see www naics com time dimension temporal hierarchies minutes hours days months seasons example movie recommendation application described section movies grouped sub genres sub genres grouped genres 
person dimension grouped age occupation standard marketing classifications 
movie place dimension grouped movie theater category categories tv home vcr home dvd home remain intact 
companion dimension aggregation hierarchy associated 
mentioned dimensions time hierarchy associated 
example time aggregated days weeks months years days hierarchies 
selecting appropriate hierarchies standard olap problem user specify specific hierarchy hierarchies learned data han kamber ch 

assume particular hierarchy selected learned dimension multidimensional model 
aggregation hierarchies enhanced dimensional recommendation model consists profiles describing item dimensions described section 
example movie dimension store profiles movies including movie title studio director year release genre database 
aggregation hierarchies associated dimension described previously section 
multidimensional cube ratings dimension defined key dimension storing available rating information cells cube 
example multidimensional cube ratings recommendation space users items time discussed section 
enhanced multidimensional recommendation model defined dimensional profiles hierarchies ratings cube recommender system provide complex recommendations deal individual items groups items 
example may want know individual users individual movies john doe may categories genres movies john doe action movies 
similarly may want group users dimensions 
example may want know graduate students graduate students 
generally individual ratings multidimensional cube may want hierarchies compute aggregated ratings 
example assume movies grouped genres assume know john doe likes action movie individually 
shown compute rating john doe likes action movies genre aggregating individual action movie ratings john doe action genre action john doe traditional olap systems similar aggregation operation known roll simple summation underlying elements kimball chaudhuri dayal 
approach applicable recommender systems ratings usually additive quantities 
example john doe saw action movies rated respectively rating action movies sum ratings 
appropriate aggregation functions aggr recommender systems avg avg top complicated mathematical special user defined functions implemented software programs 
example cumulative rating action movies computed john doe john doe action genre action john doe central issues recommender systems obtain ratings multidimensional cube described section section 
standard twodimensional case start initial set user specified ratings subset dn 
initial set ratings obtained explicitly user various implicit rating elicitation methods konstan oard kim 
initial set ratings specified bottom level hierarchy 
fact initial ratings specified higher levels cube 
example get rating john doe likes action movies 
need determine missing ratings levels entire multidimensional cube section describes done 
comedy action drama users 
aggregation capabilities recommender systems aggregating ratings 

rating estimation multidimensional recommender systems users john doe important research question estimate unknown ratings multidimensional recommendation space 
traditional recommender systems key problem multidimensional systems extrapolation rating function usually small subset ratings specified users different levels aggregation hierarchies multidimensional cube ratings 
example ratings specified bottom level individual ratings john doe assigned rating jd specified aggregate ratings john doe assigned rating action movies jd action 
general rating estimation problem formulated follows multi level multidimensional rating estimation problem initial small set user assigned ratings specified different levels multidimensional cube ratings task estimate ratings cube levels olap hierarchies 
rating estimation problem formulated general case ratings specified estimated multiple levels olap hierarchies 
methods proposed estimating ratings traditional dimensional recommender systems described section methods directly extended multidimensional case extra dimensions profiles aggregation hierarchies complicate problem 
discuss concepts problem different 
aggregation hierarchy 
context multidimensional recommender systems ratings estimated lowest level aggregation hierarchy individual ratings various levels hierarchy 
example individual ratings multidimensional cube may want hierarchies compute aggregated ratings described section 
hand estimate unknown individual ratings terms known aggregate known individual ratings 
example assume john doe provided ratings action movies genre specific action movies seen jd action jd jd matrix 
cumulative rating action movies jd action estimate ratings individual action movies john seen 
generally leverage knowledge aggregate ratings provided user different levels aggregation hierarchy estimate unknown individual ratings 
complex problem general solution lies outside scope 
focus estimation individual ratings 
specifically consider aggregation hierarchies restrict consideration problem predicting unknown individual ratings terms known individual ratings multidimensional case 
aspects general rating estimation problem discussed appendix 
comprehensive profiles 
section described comprehensive profiling methods recommendation methods described section 
profiling information provide richer recommendations mentioned section rating estimation purposes 
instance rule profiles users recommender system discovered rules reduce recommendation space demonstrated example 
assume john doe profile contains rule time week weekend movie type action recommender system action movie ratings provide movie recommendations john doe weekends 
multiple dimensions 
stated section rating estimation approaches classical dimensional collaborative filtering systems classified memory model breese 
shown appendix dimensional techniques directly extended multidimensional case 
addition propose consider reduction estimation method describe section 
gives rise multidimensional rating estimation approaches reduction heuristic model 
approaches applicable estimating ratings level hierarchy need extended multi level case 
rest focus special case multi level multidimensional rating estimation problem having olap hierarchies simple profiles individual multidimensional ratings estimated reduction approach 
various issues pertaining general multi level multidimensional rating estimation problem discussed appendix 
rest section organized follows 
section basics reduction approach show useful outperform traditional dimensional techniques collaborative filtering 
discuss section combined traditional techniques achieve better performance 
overview reduction approach reduction approach reduces problem multidimensional recommendations traditional dimensional user item recommendation space 
advantages reduction approach previous research dimensional recommender systems directly applicable multidimensional case methods described section applied reduction done 
see reduction done consider content presentation system discussed section 
furthermore assume content rating dimensional rating estimation function existing ratings contains records user content rating user specified ratings calculate prediction rating content john dimensional rating prediction function supporting time defined similarly content time rating contains records user content time rating user specified ratings 
dimensional prediction function expressed dimensional prediction function follows time user content rating uct content time uct content uc time user content rating denotes rating set obtained selecting records time dimension value keeping values user content dimensions value rating 
words treat set dimensional ratings relation time user content rating simply relation obtained performing relational operations selection subsequently projection 
note cases relation time user content rating may contain ratings dimensional recommender algorithm accurately predict uc general approach reducing multidimensional recommendation space dimensions exact context rating contextual segment typically denotes superset context example predict john doe see movie monday predict rating content time monday may want userspecified monday ratings prediction weekday ratings general 
words uct weekday predict rating follows uct uc time weekday user content aggr rating user content time user content generally order estimate rating uct specific contextual segment follows uct uc time st user content aggr rating user content time user content note aggr rating notation expressions may user specified ratings user content values different time instances dataset different ratings monday tuesday 
aggregate values aggregation function avg reducing dimensionality recommendation space 
dimensional reduction approach extended general method reducing arbitrary dimensional recommendation space dimensional 
applications traditional recommendation algorithms designed dimensional case described section 
assume rest 
refer dimensions ratings projected main dimensions 
usually user item dimensions 
remaining dimensions time called contextual dimensions identify context recommendations specific time 
follow standard marketing terminology refer reduced relations defined fixing values contextual dimensions time segments 
instance refer time related segment previous example ratings restricted specific time reiterate segments define arbitrary subsets set ratings subsets ratings selected values attributes contextual dimensions combinations values 
example weekend segment contains ratings movies watched weekends weekend time 
weekend similarly theater weekend segment contains movie ratings watched theater weekends theater weekend location 
place theater time 
weekend illustrate reduction approach works example 
assume want predict john dow jones report morning 
order calculate content time john morning approach proceed follows 
eliminate time dimension selecting morning ratings set ratings result problem reduced standard users items case set morning ratings 
rating estimation techniques described section calculate john likes dow jones report set morning ratings 
time morning user content rating words approach dimensional function content time estimate ratings user content domain morning segment 
intuition approach simple want predict morning rating certain user certain content item consider previously specified morning ratings rating estimation purposes morning segment ratings 
pointed previous example reduction approach rating estimation methods described section focus collaborative filtering cf rest cf constitutes main methods recommender systems 
words assume cf method estimate ratings segments produced reduction approach 
reduction approach related problems building local models machine learning data mining atkeson fan li hand sections 
building global rating estimation cf model utilizing available ratings reduction approach builds local rating estimation cf model uses ratings pertaining user specified criteria recommendation morning 
important know local model generated reduction approach outperforms global model standard collaborative filtering cf approach information associated contextual dimensions simply ignored 
central questions addressed remaining part 
example demonstrates reduction cf approach outperforms standard cf approach cases 
example 
consider dimensional recommendation space user item dimension consisting single binary attribute having possible values assume user specified rating values 
denote rating values respectively 
assume nt nh 
assumptions reduction approach estimates unknown ratings correctly 
easy see mentioned section traditional cf approach computes rating item user sim ui contextual information item rated sum ratings case segment ratings regardless similarity measure 
similarly segment ui get rui nh estimated rating coincides actual rating reduction approach 
contrast general dimensional collaborative filtering approach able predict ratings precisely uses mixture ratings 
depending distribution ratings particular rating predicted estimation error vary correct incorrect ratings estimation 
ratings reason reduction cf outperformed traditional cf approach example dimension clearly separates ratings distinct groups ratings nt ratings nh nt nh 
nt nh dimension separate ratings conditions dimension matter recommendation purposes discussed section 
case reduction cf approach outperform standard cf reduces number ratings estimation purpose carrying predictive information 
easy see example generalized arbitrary dimensions single binary attribute associated 
summary reduction cf approach outperform traditional approach certain situations may case situations 
possible segments ratings data reduction cf dominates traditional cf method segments way 
example represent single attribute place dimension values theater home 
example possible better reduction approach recommend movies see movie weekends traditional cf approach movies see home vcrs 
case approach hand focuses recommendations particular segment builds local prediction model segment hand computes recommendations smaller number points limited considered segment 
tradeoff having relevant data calculating unknown rating ratings similar context having fewer data points calculation belonging particular segment sparsity effect explains reduction cf method outperform traditional cf segments 
trends dominates particular segment may depend application domain specifics available data 
solution problem combine reduction traditional cf approaches explained section 
combined reduction traditional cf approaches describing combined method preliminary concepts 
order combine methods need performance metric determine method outperforms various segments 
performance metrics traditionally evaluate performance recommender systems mean absolute error mae mean squared error mse correlation predictions actual ratings precision recall measure roc characteristics mooney herlocker 
herlocker classifies metrics statistical accuracy decision support accuracy metrics 
statistical accuracy metrics compare predicted ratings actual user ratings test data 
mae measure representative example statistical accuracy measure 
decision support accuracy metrics measure recommender system predict unknown items highly rated 
measure representative example decision support accuracy metric herlocker 
types measures important argued literature herlocker decision support metrics better suited recommender systems focus recommending high quality items primary target recommender systems 
section performance metric ax recommendation algorithm trained set known ratings evaluated set known ratings proceeding introduce notation 
actual user specified rating data point dr rating predicted algorithm trained dataset applied point defined statistic sets ax ratings dr dr ax example mean absolute error mae measure defined ax rax mentioned earlier discussing performance measure ax imply training testing data kept separate 
practice researchers multiple pairs disjoint training test sets obtained initial data employing various model evaluation techniques fold cross validation resampling bootstrapping mitchell hastie techniques extensively experiments described section 
specifically set known ratings cross validation resampling techniques obtain training test data sets xi yi actual prediction rating dr computed average predictions individual models dr dr 
cross validation resampling case keep notation simple denote performance measure note mean testing performed data set training simply happens combination training testing sets pair disjoint mentioned reflects initial data set note algorithm definition arbitrary dimensional rating estimation method including collaborative filtering heuristic model methods discussed section 
illustrate reduction approach works assume traditional collaborative filtering method remainder section case study section 
introducing preliminary concepts ready combined approach consists phases 
known user specified ratings training data determine contextual segments outperform traditional cf method 
second order predict rating choose best contextual segment particular rating dimensional recommendation algorithm contextual segment 
describe phases 
phase pre processing phase usually performed offline consists steps described 
step determines large contextual segments segments number user specified known ratings belonging segment exceeds predetermined threshold recommendation space small number dimensions ranges attributes dimension straightforwardly obtain large segments exhaustive search space possible segments 
search space large exhaustive search standard heuristic search methods winston help domain expert marketing manager determine set important segments application test largeness inputs set pre specified ratings multidimensional recommendation space 
rating estimation function algorithm training data performance metric function 
threshold defining minimal number ratings large segment 
outputs segm set contextual segments reduction approach algorithm significantly outperforms pure algorithm algorithm 
segm initially set large contextual segments set ratings 
segment segm compute keep segments segm better 
segments remaining segm step discard segment exists different segment aq better remaining segments form segm 
algorithm determining high performing contextual segments 
step large segment determined step run algorithm segment determine performance cross validation resampling techniques 
run algorithm data set compute performance test set compare results determine method outperforms data segment 
keep segments performance reduction algorithm exceeds performance pure algorithm segment 
step remove segm segments exist strictly general segment reduction approach performs better 
seen rating estimation algorithm practice term better mean difference performances statistically significant 
amounts performing statistical test dependent specific metric discussed section 
segments rating estimation purposes removed segm result algorithm produces set contextual segments segm reduction algorithm outperforms pure algorithm set high performance contextual segments segm perform second phase combined approach determine method real time need produce actual recommendation 
actual algorithm 
data point want estimate rating go contextual segments segm sk ordered decreasing order performance select best performing segment point belongs 
belong segment pure algorithm trained training data rating prediction return estimated rating rat take best performing segment sj point belongs reduction algorithm segment return estimated rating inputs segm sk segments arranged decreasing order respect data point want estimate rating 
outputs dr estimated rating data point algorithm 

point compute min 
dr rat belong segment si dr 
combined approach rating estimation 
note combined method uses reduction approach contextual segments outperforms pure dimensional algorithm 
reverts pure dimensional approach predict ratings fall advantageous contextual segments 
construction combined approach expected perform equally better pure twodimensional approach 
extent combined approach outperforms twodimensional approach depends different factors application domain quality data performance metric adding contextual information recommender systems may improve metrics significantly shown 
main advantage combined reduction approach described section uses reduction approach contextual situations method outperforms standard recommendation algorithm continues improvement 
illustrate combined approach figures performs practice evaluated real world data set compared performance traditional dimensional cf method 
describe study section 

implementation evaluation multidimensional approach multidimensional movie recommender system order compare multidimensional recommendation approach traditional approaches decided test md recommender system movie recommendation application 
traditional movie recommender systems movielens movielens umn edu wanted take consideration contextual information viewing recommending movie movie seen 
data available existing systems able publicly available data 
built web site asked users enter ratings movies seen relevant contextual information 
main goal compare md models show contextual information matter extensive profiling aggregation capabilities md model required purpose 
web site limited profiling hierarchical aggregation capabilities 
particular built simple profiles simple rating cubes builtin single level hierarchies movie seen movie theater home 
see sufficient purpose comparing md models 
set data collection web site way users select movies rate memory choose list available movies obtained internet movie database site imdb com 
help users process rating movie data collection web site provided access information movie internet movie data base 
users selected movie rate prompted information event watching movie addition asked rate movie time movie seen choices weekday weekend don remember furthermore seen weekend opening weekend movie choices don remember place movie seen choices movie theater home don remember companion movie seen choices friends boyfriend girlfriend family 
considered contextual dimensions time place companion addition traditional person movie dimensions 
decided coarse granularity contextual dimensions partition time dimension weekend vs weekday reasons 
coarse granularities partitioned data meaningful way consumer perspective 
second having coarse granularities helped sparsity problem led data points segment 
third ratings movies users saw past tradeoff recalling specifics viewing context memory accuracy data recalled 
note dimensions multiple aggregations overlapping dimension time aggregations weekdays weekends spring summer fall winter 
case understanding consumer behavior chose aggregations weekends weekdays 
participants rated movies scale sensitive scale comparison scales applications eachmovie movielens amazon com 
scale anchors absolutely absolutely loved midpoint loved movie 
scale form drop menu rating choices point depicted numerically graphically showing number stars ensure understood subjects 
participants study college students 
ratings entered students period months may april 
students rated movies decided drop fewer movies purpose analysis 
result movies rated students dropped 
initial list students movies list students movies total ratings 
pointed section important understand dimensions really matter terms making significant difference rating estimations 
example time dimension really affect movie watching experiences really matter see movie weekday weekend dropped consideration multidimensional cube ratings 
designing web survey came specific list contextual dimensions brainstorming coming significant contextual dimensions attributes pre testing students similar participating survey 
data collected tested dimension see significantly affected ratings ideas discussed section 
test related problem feature selection studied data mining liu motoda statistics chatterjee determines contextual dimensions really matter rating estimation purposes kept dimensions safely dropped 
particular applied statistical test 
dimension partitioned ratings values categories dimension 
example time dimension partitioned ratings categories weekend weekday 
student computed average ratings category applied paired comparison test set users determine significant difference average ratings categories 
binary dimensions time place application paired test straightforward showed differences ratings weekend weekday theater home opening values significant 
companion dimension values applied paired test various pairs values 
tests concluded contextual dimensions affected ratings significant way eliminated considerations implemented algorithms described figures section tested movie data described 
applied fold cross validation dataset ratings splitting set ratings ratio doing split times 
splits designated part initial dataset ratings evaluation dataset 
dataset evaluate recommendation approach real time estimation ratings described contextual segment selection procedures described 
remaining initial dataset ratings designated modeling dataset contextual segment selection purposes described section 
definition de de dm measure predictive performance measure see section movie considered rated point scale bad precision recall measures defined standard way definitions bad performed evaluation times fold cross validation evaluation datasets pairwise non overlapping 
detailed description evaluation procedure section 
evaluation results evaluation procedures fold cross validation process provided section 
evaluating reduction approach available recommendation algorithm combined approach described section decided compare dropped respondents seen certain minimum number movies category movies weekdays weekends study 
method eliminating dimensions features speeding process identifying segments estimate features various dimensions drop correlated features 
deploy method project 
terms collaborative filtering cf cf constitutes widely algorithms recommender systems purpose analysis implemented traditionally versions cf computes ratings adjusted weighted sum described equation section 
cosine similarity measure measure similarity users see section 
initially ran standard cf method dataset bootstrapping method mitchell hastie random re samples 
re sample th training remaining th dm testing 
combining predictions re samples described section obtained results predictive performance standard cf method reported table 
performance metric value cf mae precision recall measure table 
performance results dimensional cf 
table dm denotes set ratings cf able predict 
case cf able predict ratings sparsity related limitations data 
name size description home movies watched home friends movies watched friends movies watched st weekend release weekend movies watched weekends theater movies watched movie theater weekday movies watched weekdays movies watched girlfriend boyfriend theater weekend movies watched movie theater weekends theater friends movies watched movie theater friends table 
large contextual segments generated step segment selection algorithm 
stress order fair evaluation compare combined reduction approach standard approach terms dimensional recommendation algorithm cf case 
ran segment selection algorithm dataset step algorithm performed exhaustive search contextual space obtained large contextual segments subsets user specified ratings original dataset 
segments table 
segment method cf precision recall measure home segment segment size data predicted values friends segment segment size data predicted values segment segment size data predicted values weekend segment segment size data predicted values theater segment segment size data predicted values weekday segment segment size data predicted values segment segment size data predicted values theater weekend segment segment size data predicted values theater friends segment segment size data predicted values table 
performance reduction approach large segments 
step segment selection algorithm contrasted performance cf algorithm trained contextual segments performance cf algorithm trained dataset 
bootstrapping method 
comparisons approaches done segment test sets terms mae representative example search space relatively small obtain resulting segments exhaustive search 
explained section various standard ai search methods larger search spaces 
statistical accuracy metric herlocker measure representative example decision support accuracy metric herlocker 
explained section decision support metrics measure better suited recommender systems statistical accuracy metrics mae recommender systems mainly focus recommending high quality items decision support metrics appropriate 
focused primarily measure study measure results reported table statistically significant results precision recall confidence level highlighted boldface significant differences measure indicated boldface symbol 
standard significant difference definitions measure defined difference measure significant actual difference measures difference components precision recall statistically significantly different determined test proportions significance level 
table shows differences measure turned significant segments segments reduction cf approach significantly outperformed standard cf method terms measure 
segments table decreasing order measure 
segment segment measure data measure theater weekend theater theater friends weekend table 
large contextual segments reduction approach significantly outperformed standard cf method terms measure 
step segment selection algorithm identified segments passed performance test step sub segments general segments worse performance results 
case segment theater friends ratings submitted people saw movie movie theater friends subset theater segment 
theater segment provided performance sake completeness performed paired test mae test proportions precision recall identify segments reduction cf approach significantly outperformed standard cf method 
different statistical tests mae precision recall different nature evaluation metrics 
paired test mae measure absolute error combined reduction cf method traditional cf method predicted rating 
hand precision recall measure accuracy classifying ratings bad deal numeric mae binary outcomes rating 
test proportions appropriate evaluate statistical difference measurement 
turned differences statistically significant mae segments 
improvement terms measure compared theater friends segment 
segment selection algorithm discarded smaller segment lower performance theater friends obtained set segm theater weekend theater weekend constituted final result algorithm 
provides graphical illustrations theater weekend segments cube contextual dimensions cube companion place time 
theater weekend segment simply intersection segments 

examples high performing contextual segments 
evaluation combined approach segments segm produced section combined recommendation algorithm described real time recommendations 
tested performance combined reduction cf approach comparison standard cf fold cross validation method described section 
particular performed evaluation procedure different splits initial dataset non overlapping datasets ratings respectively 
evaluation datasets obtained fold cross validation process pairwise non overlapping 
summary evaluation results table 
seen table cases standard dimensional cf slightly outperforms combined reduction cf approach majority cases combined reduction cf approach outperformed standard cf terms fmeasure 
omitted user item dimensions sake clarity visualization 
test measure standard combined dimensional cf reduction cf difference measures avg table 
comparison combined reduction cf standard cf methods fold cross validation 
furthermore evaluation datasets non overlapping simply calculate measure combining different prediction results set 
results table 
ratings cf combined reduction cf approaches able predict 
note ratings predicted sparsity related limitations data 
expected measure values approaches close respective average measure values fold cross validation procedure table 
furthermore combined cf approach significantly outperformed traditional cf 
note combined reduction cf approach incorporates standard cf approach discussed earlier see 
specifically combined approach standard cf predict value rating belong discovered high performing contextual segments segm theater weekend theater weekend 
consequently application predictions approaches identical ratings belong segments segm ratings outside segm contribute differentiation approaches important determine approaches ratings segm case ratings ratings predicted approaches difference performance approaches ratings segm shown table significant terms measure previously described ratings case 
defined section means difference measures difference precision recall components statistically significant 
measure difference comparison standard combined dimensional cf reduction cf measures predictions ratings predictions ratings segm ratings note denotes significance definition section 
table 
comparison measure 
case study shows combined reduction cf approach outperform standard dimensional cf method real world problems statistically significant ways 
actual performance results substantially depend application hand 
example section illustrates cases reduction cf approach outperform standard cf method rating difference recommendation accuracy substantial 
similarly argued section extra dimensions may difference terms recommendation performance applications 
case indicated approach automatically morph underlying recommendation algorithm contextual segments 
degree performance combined reduction approach depends critically application hand proposed combined approach adapts situation 

multidimensional recommendation model incorporates contextual information recommendation process recommendations multiple dimensions profiles aggregation hierarchies 
proposed reduction approach rating estimation uses traditional collaborative filtering technique contextual segments 
demonstrated situations context matters multidimensional recommender systems provide better recommendations situations consideration additional contextual information 
situations contextual information provides better performance worse performance segments 
address problem proposed combined reduction method tested standard dimensional collaborative filtering algorithm 
demonstrated empirically combined reduction collaborative filtering approach significantly outperformed standard collaborative filtering method terms measure 
plan continue rating estimation problem 
particular plan development heuristic reduction approaches multidimensional rating estimation discussed appendix 
plan better understanding pros cons rating estimation approaches reduction heuristic model 
interesting research problem understand approaches provides better performance conditions performances compare performance traditional dimensional rating estimation methods collaborative filtering described section 
plan general multilevel multidimensional rating estimation problem described section explore relationship recommender systems olap technologies context problem 
tuzhilin 
multidimensional recommender systems data warehousing approach 
proceedings second international workshop electronic commerce 
lecture notes computer science vol 
springer 
aggarwal wolf 
wu yu 
hatches egg new graph theoretic approach collaborative filtering 
proceedings fifth acm sigkdd international conference knowledge discovery data mining 
ansari 
internet recommendations systems 
journal marketing research pages 
atkeson moore schaal 
locally weighted learning 
artificial intelligence review vol 
pp 

baeza yates ribeiro neto 
modern information retrieval 
addison wesley 
balabanovic shoham 
fab content collaborative recommendation 
communications acm 
basu hirsh cohen 
recommendation classification social content information recommendation 
recommender systems 
papers workshop 
technical report ws 
aaai press 
johnson payne 
consumer decision making 
robertson eds handbook consumer behavior pp 

prentice hall 
billsus pazzani 
learning collaborative information filters 
international conference machine learning morgan kaufmann publishers 
billsus pazzani 
user modeling adaptive news access 
user modeling user adapted interaction 
breese heckerman kadie 
empirical analysis predictive algorithms collaborative filtering 
proceedings fourteenth conference uncertainty artificial intelligence madison wi 
jones kumar 
learn sesame learning agent engine 
applied artificial intelligence 
chatterjee price 
regression analysis example 
john wiley sons chaudhuri dayal 
overview data warehousing olap technology 
acm sigmod record 
chien 
george 
bayesian model collaborative filtering 
proceedings th international workshop artificial intelligence statistics 
claypool gokhale miranda 
combining content collaborative filters online newspaper 
acm sigir 
workshop recommender systems algorithms evaluation 
lewis madigan 
bayesian mixed effects models recommender systems 
acm sigir workshop recommender systems algorithms evaluation 
cortes fisher pregibon rogers smith 
hancock language extracting signatures data streams 
proceedings sixth acm sigkdd international conference knowledge discovery data mining 
delgado ishii 
memory weighted majority prediction recommender systems 
acm sigir workshop recommender systems algorithms evaluation 
duda hart stork 
pattern classification john wiley sons fan li 
local modeling density estimation nonparametric regression 
advanced medical statistics fang lu eds world scientific pp 

getoor sahami 
probabilistic relational models collaborative filtering 
workshop web usage analysis user profiling webkdd 
goldberg roeder gupta perkins 
eigentaste constant time collaborative filtering algorithm 
information retrieval journal 
han kamber 
data mining concepts techniques morgan kaufmann 
hand mannila smyth 
principles data mining mit press 
hastie tibshirani friedman 
elements statistical learning springer 
herlocker konstan 
content independent task focused recommendation 
ieee internet computing 
herlocker konstan borchers riedl 
algorithmic framework performing collaborative filtering 
proceedings nd annual international acm sigir conference research development information retrieval sigir pp 

hill stead rosenstein furnas 
recommending evaluating choices virtual community 
proceedings chi 

statistical analysis 
radius press 
kimball 
data warehouse toolkit 
john wiley sons klein 
context effects effort accuracy choice inquiry adaptive decision making 
journal consumer research 
koller sahami 
optimal feature selection 
proceedings thirteenth international conference machine learning morgan kaufmann 
konstan miller maltz herlocker gordon riedl 
grouplens applying collaborative filtering usenet news 
communications acm 

marketing management 
th ed 
prentice hall 
kumar raghavan rajagopalan tomkins 
recommendation systems probabilistic analysis 
journal computer system sciences 
lang 
newsweeder learning filter netnews 
proceedings th international conference machine learning 
lee 
collaborative learning recommender systems 
proccedings international conference machine learning 

marketing models pp 

prentice hall 
liu motoda 
feature selection knowledge discovery data mining 
kluwer academic publishers 

task complexity contingent processing brand choice 
journal consumer research 
mitchell 
machine learning mcgraw hill 
mobasher dai luo sung nakagawa 
discovery aggregate usage profiles web personalization 
proceedings web mining commerce workshop webkdd boston august 
mobasher dai luo nakagawa 
sequential non sequential patterns predictive web usage mining tasks 
proceedings ieee international conference data mining icdm city japan december 
mood 
theory statistics rd ed mcgraw hill 
mooney bennett roy 
book recommending text categorization extracted information 
recommender systems 
papers workshop 
technical report ws 
aaai press 
mooney 
content book recommending learning text categorization 
acm sigir 
workshop recommender systems algorithms evaluation 
nakamura abe 
collaborative filtering weighted majority prediction algorithms 
proceedings th international conference machine learning 
oard kim 
implicit feedback recommender systems 
recommender systems 
papers workshop 
technical report ws 
aaai press 
pazzani 
framework collaborative content demographic filtering 
artificial intelligence review pages 
pazzani billsus 
learning revising user profiles identification interesting web sites 
machine learning 
pennock horvitz 
collaborative filtering personality diagnosis hybrid memory model approach 
ijcai workshop machine learning information filtering 
ramakrishnan gehrke 
database management systems 
mcgraw hill 
resnick bergstrom riedl 
grouplens open architecture collaborative filtering netnews 
proceedings computer supported cooperative conference 
rossi mcculloch 
value purchase history target marketing 
marketing science 
salton 
automatic text processing 
addison wesley 
sarwar karypis konstan riedl 
application dimensionality reduction recommender systems case study 
proc 
acm webkdd workshop 
sarwar karypis konstan riedl 
item collaborative filtering recommendation algorithms 
proc 
th international www conference 
shardanand maes 
social information filtering algorithms automating word mouth 
proceedings conference human factors computing systems 
nicholas 
combining content collaboration text filtering 
ijcai workshop machine learning information filtering 
spiliopoulou mobasher berendt nakagawa 
framework evaluation session reconstruction heuristics web usage analysis 
informs journal computing special issue mining web data business applications 
terveen hill amento mcdonald 
phoaks system sharing recommendations 
communications acm 
tran cohen 
hybrid recommender systems electronic commerce 
knowledge electronic markets papers aaai workshop technical report ws aaai press 
ungar foster 
clustering methods collaborative filtering 
recommender systems 
papers workshop 
technical report ws 
aaai press 
wade 
grocery cart holds bread butter preferences 
new york times jan 
winston 
artificial intelligence rd ed 
addison wesley 
appendix multidimensional rating estimation problem multidimensional rating estimation problem formulated general case section contains issues subsequently omitted section focused specific case reduction approach 
appendix review important research issues covered section 
space limitation limit discussion general concepts leaving development ideas topics research 
particular section discuss extensions reduction approach rating estimation non reduction approaches multidimensional rating estimation including heuristic model approaches aggregation hierarchies multi level rating estimation 
extensions combined reduction algorithm combined reduction algorithm figures uses fixed twodimensional recommendation method selects segments version trained ratings data segment dominates pure version trained ratings data data 
idea extended incorporate dimensional recommendation methods including various collaborative content hybrid approaches described section potentially different methods perform best different segments 
specifically step segment selection algorithm run candidate rating estimation methods segments segm determine method outperforms particular method combined reduction algorithm estimate ratings points implementation details extension straightforward skip 
extend reduction approach considering contextual segments various segments time place dimensions segments defined slicing main dimensions user item 
example segment frequent consisting users usually watch lot movies interesting marketing perspective deserve special treatment 
strictly contextual segment defined terms user characteristics terms contextual dimensions time place 
consider segment section list segments table 
segments straightforwardly added list segments extended method described section 
heuristic approaches multidimensional rating estimation mentioned reduction approach estimating multidimensional ratings 
fact dimensional recommendation methods discussed section directly extended multidimensional case 
rating estimation approaches classical dimensional collaborative filtering systems classified heuristic memory model breese follow classification consider heuristic model multidimensional rating estimation approaches reduction approach discussed 
sections provide general overview approaches 
large number commonly techniques perform traditional dimensional collaborative filtering heuristic resnick hill shardanand maes breese nakamura abe pennock horwitz sarwar may extended multiple dimensions 
mentioned section traditional collaborative filtering methods prediction rating ui rating user item computed weighted sum ratings item similar users sim ui words constitutes nearest neighbors problem need discover closest neighbors rated item 
furthermore look traditional dimensional content recommender systems heuristic algorithms systems employ nearest neighbor approach different manner 
particular mentioned section prediction rating ui computed aggregation weighted sum ratings user similar items balabanovic shoham pazzani billsus mooney 
prediction particular rating ui heuristic approaches dimensional recommender systems collaborative content represented diagram 
interpreted follows 
assume want predict rating ui depicted origin point 
horizontal axis represents users arranged similarity user distance measure vertical axis depicts items similarity item known data user item pairs known rating described points resulting dimensional space 
furthermore mentioned earlier dimensional heuristic collaborative filtering systems ratings horizontal axis users similar rated item predict rating ui similarly content systems usually ratings vertical axis items similar item rated user predict rating ui hybrid heuristic approaches described section combine collaborative contentbased ideas 
virtually combination information represented axes 
user specified ratings lying outside axes usually prediction ui weighted sum traditional heuristic recommendation approaches 
contentbased systems items similarity ui ui collaborative systems data point rating estimated users similarity 
data nearest neighbor approaches traditional twodimensional recommender systems 
discussion generalize dimensional heuristic approach multiple dimensions follows 
generalize approach introducing dimensional distance metric arbitrary rating points entire user item space 
entire dimensional space prediction process just data axes shown able incorporate collaborative content approaches special cases identify additional nearest neighbors lie outside user item axes considered collaborative content approaches 
arguably identifying extra nearest neighbors considered increase predictive accuracy recommendations 
choice specific distance metric euclidian depends largely specific application domain 
example metric may better recommending movies metric news articles 
identification appropriate metrics different applications constitutes interesting problem research 
second extend dimensional nearest neighbor approach described multidimensional recommendation spaces straightforward manner ndimensional distance metric dimensional metric mentioned 
see done consider example user item time recommendation space 
collaborative filtering systems may computing similarity distance different users usually absent weighted sum ratings represents predicted rating 
traditional nearest neighbor heuristic weighted sum example expressed prediction specific rating uit describes weight rating uit normalizing factor 
weight related distance points uit dist carries prediction typically inversely multidimensional space words closer points smaller distance weight carries weighted sum 
example relationship uit alternative specifications possible 
choice specific distance metric dist depend specific application 
distance function dist defined various ways 
simplest ways define multidimensional dist function reduction approach similar described section account points contextual information dist dist distance function ru depend ratings segment points having values time case reduced standard dimensional rating estimation segment ratings having context point 
furthermore refine function dist depends distance users obtain method similar reduction cf approach described section 
approach easily extends arbitrary dimensional case setting distance rating points dist contexts points 
ways define distance function weighted manhattan distance metric dist uit wd uu wd ii wd tt weighted euclidean distance metric dist uit wd uu wd ii wd tt distance functions defined dimensions user item time respectively weights assigned dimensions 
defined different ways constitutes interesting research problem identify various ways define distance compare different ways terms predictive performance 
summary distance function dist model approaches multidimensional rating estimation mentioned section model recommendation techniques proposed recommender systems literature traditional twodimensional recommendation model 
methods directly extended multidimensional case method proposed ansari show technique outperforms previously known collaborative filtering methods 
method proposed ansari combines information users items single hierarchical regression bayesian preference model uses markov chain monte carlo mcmc techniques exact estimation prediction 
particular bayesian preference model allows statistical integration types information useful making recommendations items users person expressed preferences ratings preferences consumers expert evaluations item characteristics characteristics individuals 
example recommending movies information may include known movie ratings gender age users movie genres movie reviews critics 
formally ansari propose linear model rating estimation ui ui ui rui represents rating th user movie th item interchangeably movie 
vector represents observed parameters th user th item interactions 
observed parameters parameters explicitly recorded profiles users gender age movie preferences profiles items genre year expert ratings movie 
interaction terms represent second order interaction effects observed user item attributes 
example interaction term representing second order effects gender genre romantic movies appear get higher ratings action movies men rate action movies higher romantic movies 
coefficient represents fixed effects regression 
term zu contains observed attributes user gender age movie preferences wi represents observed attributes item genre year expert ratings 
unobserved effects movies explicitly recorded movie profiles direction music acting captured vector random variables normally distributed 
unobserved user effects represented 
error term belongs normal distribution mean zero standard deviation 
ui denote transposes corresponding vectors 
parameters model estimated data known ratings mcmc methods 
approach ansari described context traditional dimensional recommender systems directly extended combine dimensions addition users items 
example assume third dimension time defined attributes variables boolean variable weekend specifying movie seen weekend positive integer variable indicating number days release movie seen 
case ansari model extended third time dimension uit ui tu tu ui tu ui 
model encompasses effects observed unobserved user item temporal variables interactions rating user movie seen time variables zu wi yt stand observed attributes users demographics movies genre time dimension weekend 
vector represents observed parameters users movies time interaction effects coefficient represents fixed effects regression 
vectors random effects stand unobserved sources heterogeneity users ethnic background movies story temporal effects movies seen holiday season released 
vector pui represents interaction observed user item variables likewise qit 
vector ui represents interaction unobserved user item attributes likewise tu 
parameters model estimated data known ratings markov chain monte carlo mcmc methods done 
ansari assume features attributes vectors zu wi yt specified 
general cases features need selected various machine learning methods ones described koller sahami purpose 
method utilizing similar model approach modeling direct marketing activities reported marketing rossi 
adopts similar approach problem recommending brands households panel data household purchases various brands certain period time 
framework dimensional approach product attributes price product features conjunction user household attributes observable demographic characteristics unobservable components recommend brands households 
methodology similar ansari sophisticated incorporates observed product variables observed unobservable user variables unobserved product characteristics 
significantly rossi discusses prospect utilizing store causal environment variables variables store displays frequent buyer programs constitute third dimension framework propose 
multi level estimation multidimensional ratings discussed section aggregate higher level ratings useful recommendation purposes 
example shown certain assumptions estimated aggregate rating accurate individual estimated ratings 
important research problem understand case 
example estimate rating john doe assign action movies john doe action accurate estimate ratings assign individual movies john doe obviously answer depends various factors including rating estimation function rating aggregation function avg avg top accuracy measure mean absolute error mean squared error measure model 
rating estimation aggregation functions accuracy measures certain assumptions estimations aggregate ratings accurate estimations individual ratings 
see consider twodimensional case user item rating estimation function modeled rui rui true rating item user ui estimated value error term represented random variable having unspecified distribution mean variance distribution users items 
assume aggregation function average avg function 
aggregated rating group items ui rui loss generality assume ratings items estimated ui rui ratings explicitly defined actual estimates carry argument 
aggregate estimation error rui rui rui rui equality follows know theorem see section mood mean variance average independent identically distributed random variables 
fact large values distribution converges normal distribution central limit theorem 
special case error rate normally distributed case aggregate estimation error normally distributed summarize discussion assumptions considered estimation error aggregate rating smaller estimation error individual ratings 
easy see hold levels aggregation hierarchy 
methods proposed estimating ratings traditional dimensional recommender systems described section 
similarly different approaches multidimensional rating estimation including reduction approach proposed heuristic model approaches discussed sections 
methods explicitly designed handle aggregation hierarchies readily aggregate ratings rating prediction process 
discussion important applications olap aggregation hierarchies lies role estimating individual ratings aggregate ratings 
example assume know john doe ratings jd action jd jd matrix 
cumulative rating action movies john doe estimate individual action movies john rated 
problem addressed follows 
ra jd action actual aggregate rating john assigned action movies case 
rc jd action aggregate rating computed individual ratings jd assigned action movies set action expression particular aggregation function aggr 
xr set action movies john rated action movies rated ratings try estimate note action 
way assign ratings action movies nr john rated minimize difference actual rating ra jd action computed rating rc jd action formally min jd action jd action min jd action aggr jd jd nr words want assign ratings movies yield computed aggregated rating closest rating ra jd action assigned john 
issues minimization problem infinite number solutions situations 
see assume function aggr average function avg nr yk optimization problem reduced problem finding jd jd yk jd jd jd action jd nr xr case knowledge aggregate rating ra jd action reduced linear constraint set ratings unseen action movies yk 
rating estimation methods discussed section adopted multidimensional case discussed section estimate ratings jd jd yk unseen action movies 
explained additional constraint jd jd yk interesting research problem incorporate constraints methods described section 
aggregation functions avg optimization problem take different forms 
idea converting solution optimization problem set constraints generalizable aggregation functions finding efficient solutions problem constitutes interesting topic research 
note difference depends assignment ratings movies 

