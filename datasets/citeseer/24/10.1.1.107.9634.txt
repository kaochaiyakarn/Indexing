applying mspace interfaces semantic web nicholas gibbins stephen harris alan dix schraefel school electronics computer science university southampton southampton united kingdom ecs soton ac uk computing department university lancaster lancaster united kingdom 
ontologies represent large multidimensional spaces classical music research computer science uk health care breast cancer examples rich domains 
easy ways represent meaningful slices multidimensional spaces privilege parts domain interest user 
mspace interaction model describe particularly suited ontology interaction designed expose support exploration relations domain 
propose formalism interaction model support mapping kind interaction high dimensional space represented ontology 
model provides semantic web designers means rapidly prototyping interrogating data represented ontology 
provides fast effective ui alternative keyword search browsing users explore domain space maintaining domain context 
popular method searching web keyword search proven effective way retrieve information web 
effectiveness technique improves precision keywords 
keyword searches rely domain expertise retrieve appropriate information 
domain expertise certain category resources yahoo internet project search subject subcategories subject narrow search way 
advantage category search communicates sense range data available domain 
numbers category labels help communicate scope instances part domain 
efforts apply categorization keyword search results alert users categories fact results retrieved information 
limitations popular web representations category searches usually rely fixed hierarchies categories 
order number subcategories tree fixed 
means user reorient space support focus 
approach domain organizational bias designers 
semantic web ontologies structure domains presents new opportunities represent domains users interaction domain space 
means users greater options engage web information affording diverse approaches keyword category search building knowledge information discover 
semantics ontologies instance privilege relationships ontologies afford multiple paths view data instance multiple perspectives 
exposing relationships paths provides knowledge seekers additional information inform knowledge building tasks 
semantic web community little research date exploit ontologies formalize automate interaction design opportunities 
closest space information visualization 
understandably case emphasized extant visualization techniques applied semantic web interaction issues understandably secondary 
interest specifically interaction affordances enhanced leveraging properties semantic web 
formal representation interaction model informed semantic web 
visualization describe model interaction characteristics model visualization agnostic 
designers whichever visualization choose tree maps self organizing maps lists 
interest formalize behaviours data set interactions defined 
propose formalism mspace interaction model leverages advantages semantic web order facilitate user determined exploration domain 
brief model lets users arrange dimensional information space determine slice space scope orientation arrangement attributes slice 
slice determined selection attributes effectively class expressions ontology 
selection acts projection dimensional space flattened 
result hierarchical representation dependencies attributes hierarchy ordering selections 
attribute order represents query instances matching attribute expression 
selection instances listing act constraint populating instances attribute hierarchy 
model supports levels user interaction manipulation ontology representation selection instances data associated configurations 
logic model provides automatic reasoning domain ensure meaningful attribute orderings selections occur 
affordances interaction model system designer wishes implement designer 
key advantages interaction model domain interaction 
mspace provides system designers way support fast visual data inspection domain numerous perspectives 
gives designers automatic way leverage ontologies domain user users readily perceive scope relations domain available attributes second explore domain orientation information suits interests 
section describe mspace interaction model terms interaction design 
situate related discussion 
describe formal model behaviours associated interaction 
follow service level characterization model 
conclude plans including brief sketch api instantiating mspace model 
interaction design mspace model goal mspace support users exploration domain 
exploration mean web sense browsing surfing 
surfing browsing web pages suggests moving discrete web pages potentially loose associations 
association pages may common instance user visited page past seconds 
exploration mean user making information selections structured information domain ontological associations parts 
interaction design exploration provide mechanisms user take advantage associations exploring domain 
exploration context availability contextual information support users exploration critical component interaction design 
mspace designed support exploration privileges associations contexts domain interaction representation 
mspace initially designed interface model exploring information domains particularly suited semantic web semantics foreground relations domain ontology 
relations interaction design turn provides users alternative method interrogating information source keyword searches focus retrieving set matching instances information source exploration focuses representing context information 
human computer interaction community dichotomy instance relations generally referred focus context 
web emphasis keyword searches far privileged focus part equation reason unstructured nature web data best searched keyword indexing returns list discrete instances web pages 
affordances semantic web raise possibility facilitating context side interaction equation 
mspace designed leverage semantic affordances 
remainder section describes specific interaction affordances mspace 
mspace representation interaction ontology represent vast multidimensional domain support ways focusing data 
mspace facilitates representation space interaction representation variety ways 
slices projections dimensional space context spatial temporal layout slice dimensional sorting organization attributes slice organization constrains data associated attribute 
substitution revision slice changing attribute slice previously slice expansion contraction addition new attribute slice removal previous attribute slice 
sections example classical music domain ground description features 
slices columns context described slices represent projections dimensional space flattened 
flattened projection results hierarchical ordering attributes slice 
slices mean certain views domain privileged 
example classical music domain may sliced privilege information compositions variety ways 
approach foreground information compositions attributes period romantic baroque composer mozart bach form symphony arrangement solo instrument orchestra composition 
likewise domain sliced privilege information compositions recordings record orchestra conductor artist year recorded composition 
refer attributes columns label column attribute name body column list instances associated column depending hierarchical location slice rationale flattened projections uncommon treatments managing representations dimensional spaces 
making dimensional space representationally manageable flattened projections offer benefits visualizations attempting approximate dimensions 
resulting hierarchies readily represented variety dimensional views easily mapped native affordance computer screen 
dimensions best simulated screens 
research shown population conceptualize information dimensions 
study showed users performed significantly better information retrieval tasks navigating text hierarchies map views information clusters hierarchies representations clusters 
research challenged claims value greater dimensional views information organization access 
representations slices dimensional spaces provide accessibility performance benefits complex dimensional simulations 
hierarchies represented variety visualizations default visualization spatial view 
example spatial view classical music slice shown 
fig 

spatial view classical music slice spatial view general means associated context information persistently maintained interface 
complement spatial views temporal views context maintained memory 
instance standard web representation information temporal click link generally replaces originating page new page browser window erasing previously visible information 
visualization neutral strongly recommend mspace visualizations support spatial context previous shown supporting spatial temporal context results better navigation performance users 
study temporal interfaces significant negative correlation age 
simple default view get variety benefits low implementation cost little overhead rendering effectively contiguous list views data space 
dimensional sorting 
slices organization slice imposes ordering hierarchy 
domain slice arrangement attributes slice act constraints information associated attributes 
slice composer placed form selected form determine composers listed set works selected form listed composer 
putting composer period allows see quickly period associated composer 
arrangement slice turns interesting opportunity learning single association period composer certain cases composer associated multiple periods bach classic baroque instance 
selection retrieves requested information potentially reveals meta information construction classical music domain 
hierarchical rearrangement confused sorting order fixed hierarchy 
fixed hierarchy period composer form arrangement composition choose sort composer column alphabetically date birth 
sorting effect current instances associated attribute 
reordering attributes hierarchy explain detail formal model description causes instances associated attribute terms data associated attribute rearrangement effects neighbours side dimensional sort rearrangement attributes hierarchy effectively creates new query slice 
rationale dimensional sorting lets user organize domain manner suits current interests knowledge 
providing multiple perspectives information space long valued hypertext researchers access value learning domain building knowledge seeing associations apparent 
lets explorer move domain locus familiarity 
familiar domain domain naive user dimensional sorting may provide approach domain available 
knows little classical music took piano lessons may find easier access domain instrument attribute hierarchical slice 
supporting dimensional sorting improve access multiple perspectives explicitly modelling users particular version domain letting users determine domain version needs tasks 
domain substitution expansion contraction substitution expansion contraction variations dimensional sorting 
key difference conceptually dimensional sorting techniques alter slice space 
substitution fundamentally alter slice potentially replacing attribute domain 
expansion contraction considerable effect slice increasing decreasing scope slice 
rationale refinements substitution expansion contraction provide lightweight mechanisms users explore domain 
substitution provides ways engage scenarios domain space user extends slice period composer form arrangement composition recording instrumentation 
exploring extended version data users may learn period instrumentation bach keyboard include popular form representation piano 
similarly substituting dimensional values gradually reformulate slice support new perspectives attribute 
translating historical slice gradually recordings slice see familiar works bach solo cello rearranged variety instruments repeatedly centuries latest string electric bass frequently recorded arrangement beethoven fifth symphony countless 
words facilitating manipulation slices substitution expansion contraction facilitate ways explore provide ways understand domain inter relations biases informing organization 
related largely informed human computer interaction direct manipulation interfaces query previews 
direct manipulation interfaces support immediate feedback manipulations interface 
moving slider onscreen volume control hearing volume level increase example direct manipulation 
changing attribute mspace column immediately seeing change effect example direct manipulation 
style interaction design contrast user interfaces change inferences user interactions 
adaptive interfaces instance adjust ordering elements menu frequency 
evaluations adaptive models rarely positive 
query previews branch direct manipulation user interfaces specifically designed query formulation 
allow users construct queries visually textually 
interface recipes instance may variety sliders values associated select degree dish dish fish meat vegetarian long takes prepare 
constraints search engine returns list appropriate recipes 
design available query attributes values eliminates possibility returning empty set 
way users gain easy method quickly construct potentially complex queries keyword search allow equally evaluate results tweak parameters query run revised query just quickly query previews direct manipulation visual queries 
instantiations queries extent preview query space foreground domain manipulation affordances 
users determine attributes domain query organize privilege evolving explorations domain 
direct manipulation interfaces hand crafted application application adopts heuristics direct manipulation preview queries creates implementation support approach 
section formal model interaction design described 
goal doing provide semantic web designers interaction model formally evaluate instantiate rapidly provide described interaction affordances 
description mspace semantic web technologies bears similarity formal concept analysis community particularly area ontology aware browser interfaces information retrieval discovery 
systems construct concept lattice provide support navigation information space concept lattice represents different hierarchies result ordering entities attributes 
mspace provides hierarchical view entities system structured manner affords user greater control exploration information space 
cs cas semantic web application won semantic web challenge best semantic web application informed interaction design expressed 
goal application support user determined exploration domain computer science research uk 
underneath ui application exploits wide range semantically heterogeneous distributed content 
content currently comprises rdf triples information constantly harvested updated 
content application mediated ontology constructed application domain akt ontology incorporates components published ontologies 
challenge ui mspace approach addressed space support meaningful interrogation users 
ui afford users ability explore domain readily compare instance areas domain researched different areas country top rated researchers domain researchers published 
results queries complex potentially cumbersome construct facilitate real time shifting formation query 
modeling cas ui mspace model able hide complexity queries user support real time query manipulation ontology exploration data instances revealed context 
large goal mspace formalize interaction model order create model semantically informed information spaces 
cas application mspace model mapped semantic web back 
development process implementing mspace affordances slices dimensional sorting akt ontology better able determine issues formalizing model general application deployment 
effort deploy mspace interaction design reinforced value formalizing model 
building mspace informed applications cas principled 
important practical level demonstrations challenge semanticweb org fig 

cs example mspace interface cas approached design cas inspired applications granting councils engine manufacturers space agency name 
touch ways formal mspace model improve mspace informed application development 
query generation query generation performed cas application programmatic query constructions performed application logic program 
extracting debugging queries unnecessarily complex constraint matrix suggested model described provide cleaner general abstraction query generation algorithm 
inter column constraints current version cas application adjacent constraints consequence columns rearranged common interactions semantics column positions changes causing undesirable confusing changes contents columns 
benefit model see privileged column constraints appropriate application user attempting narrow selections approaching target group individuals 
approach advantage re arranging columns affect semantics column selection 
section describe formal representation interaction model described 
modelling mspace interfaces described previous section mspace interface consists series user interface controls call columns presents selection objects user choose 
user interaction column progresses left right 
selection column affects selections offered subsequent columns lie right 
selection offered column collection objects conceptual type list people institutions publications example 
columns represents facet objects searched selection column thought specifying dimension sparse multidimensional space knowledge base class treated dimension 
respect interface resembles menu interfaces exploring databases user chooses lists options lead user formulation query 
mspace method differs context column layout may dynamically reconfigured place dimension higher importance 
basic approach constructing model consider column representing class objects 
column ti complete set instances class associated column di set instances displayed moment si set instances selected user 
ti di si set ti extension class associated column specified class expression description logic language owl daml oil vary simple named class complex class expression example higher education institutions uk rated research assessment exercise 
relationships columns described terms constraints determine displayed instances column effect selection columns 
example constraint column column ti tj constraints relate classes associated column expressed class expressions description logic language 
case class expressions take form restriction property relates classes associated columns 
restrictions typically owl hasvalue restrictions written description logic terms selected value relating property 
multiple selections column handled forming union constraints individual selections adding selections enumerated class 
set constraints layout provide means relate column column directly indirectly chaining constraint 
layout columns basis set constraints contains constraints 
possible construct systems minimum number basic constraints raises possibility inconsistency way relate column possibly chaining constraints relations incompatible different meanings 
restrict basis sets constraints common approaches forming constraints mspace systems advantages disadvantages 
distinguished column constraints approach layout contains distinguished results column columns constrained 
shown constraints approach star 
period piece arrangement composer genre fig 

distinguished column constraints instances displayed results column satisfy constraints selections columns sic res ranges columns notation sic mean set values tj correspond values si constraint sic tj si approach constructing basis sets constraints allows suppress display dead selections 
dead selection column produce options choose final column 
example column containing list countries includes city final column contains list computer science researchers information state computer science research remove city choice country column 
effect limiting system way user answer questions answer 
instances displayed column members value set di instances satisfy constraint res adjacent column constraints di res second approach column provides constraint call adjacent column constraint immediate successor layout 
country institution project fig 

adjacent column constraints si di sic ci cn tn person number columns type constraint denoted column selection constraint derived constraint applied column 
constraint set basis determine pairwise effect selection column composing basis constraints 
example constraint column column ca practice composed constraints implementations constraints evaluated column column left right describe order illustrate parallels approaches building basis set 
constraint example example constraint schemes consider mspace interface exploring countries institutions located countries projects institutions involved people fig 

mspace column constraints projects 
choose initial layout consists column institutions projects people shown 
ontology interface defines named classes country institution project person type constraint relevant column 
institutions related projects contributes property people projects works property people institutions works property institutions countries located property people countries born property 
country sc institution project person located sc contributes si works sp born sc si works si sp fig 

mspace example works sp adjacent selection basis constraint countries institutions form located country institutions projects contributes institution projects people works project initially constraints applied column type constraints initial forms selection constraints 
selections columns selection constraints modified named class local range restriction replaced enumerated class members selected instances refer post selection constraints concrete selection constraints 
distinguished column selection constraint basis set consists works institution runs institution person works project runs project person born country runs country person 
adjacent case constraints modified selections 
concrete selection constraint institution project columns takes account existence people satisfy selections columns works works individuals selected project column 
example selection constraints straightforward owl hasvalue restrictions single properties pairwise selection constraint owl hasvalue restriction composition properties inverse 
works works 
far described layouts owl hasvalue restrictions selection constraint class expressions possibility 
form constraints form 
owl terms owl allvaluesfrom restriction enumerated class defined owl oneof incorporate restrictions parameterised selections 
layout operations description intra inter column constraints assumes fixed layout columns mspace interface allows user modify layout 
define primitive operations layout addition column layout removal column layout 
primitive operations supported mspace interface low level fit paradigm dimensional exploration introduced mspace 
define distinct types higher level operation expressed composition primitive operations mspace interface expected support illustrated expansion new column may added right existing columns substitution column layout may switched column different type transposition positions columns layout may exchanged 
specific example dimensional sorting operation 
operations may performed column affect constraints layout greater lesser extent depending selection constraint scheme 
turn change constraint set caused operation may affect selections user affecting substitution transposition expansion fig 

mspace operations set options selection turn may change instantiated constraints 
describe operations cause invalidation selections disruptive 
example selection column column substituted different kind selection lost affects options selections subsequent columns 
similar behaviour expected event columns transposed may possible retain selections columns provided violate new selection constraints 
general case easily characterise disruptive propagation changes determine change constraint set response initial operation selection constraint schemes 
describe changes brought operation fashion counting number selection constraints changed 
listed table indicates constraints added set removed changed 
adjacent distinguished column distinguished add remove expand transpose substitute table 
operation cost column constraint scheme observed flow information mspace interface runs left right operation changes column layout adjacent selection constraints change columns lie right 
example expansion existing layout adjacent scheme addition new final column non disruptive operation involve removal replacement existing constraints shown table 
conversely distinguished column scheme final column distinguished column selection constraints replaced ones suitable new final column 
case change type final column leads new set selection constraints may violated existing selections 
constraints applied pairwise manner scheme going column pair distinguished column back column pair change type distinguished column affects selection constraints raises prospect selections existing columns may invalidated shown table 
similar behaviours exist operations transposition substitution constraint schemes described 
general adjacent selection constraints yield disruptive operations small layouts columns distinguished columns cost constant columns layout columns obvious exception 
contrast distinguished column selection constraints designate column special express selection constraints terms column 
operations columns distinguished column disruptive counterparts adjacent selection constraints note values transposition table 
operations distinguished column significantly expensive change entire constraint set 
rule thumb informs designer choice selection constraint scheme 
interfaces dead suppression considered essential layouts fewer columns expansion operation supported distinguished column selection constraints appropriate approach adjacent selection constraints chosen 
proviso expansion distinguished column constraints final column distinguished column expensive expansion adjacent constraints 
permitted layouts certain circumstances arrangement columns may sense 
example column required user pick list university departments followed column requires user pick list universities dependency types columns second column irrelevant 
particularly true layouts adjacent selection constraint scheme column directly depends predecessor 
express behaviour successor matrix relates column type column types may appear column types matrix type constraint class expressions described previous section 
user layout set permissible operations may rearrange layout constructed consulting matrix 
example user list column types may expand current layout generated set possible column types removing prohibited columns layout 
similarly transposition columns part operation 
user selects columns transposed columns column may swapped yield permissible layout swapped indicated 
user selects second column indicated layout rearranged 
column presentation model mspace outlined concerns primarily generation choices offered user column propagation effects making selection system concern 
column represents set objects user choice manner set rendered presentation user importance 
prototype mspace system cs implemented column view selecting uk higher education institutions rendered map uk showing geographical distribution 
column need rendered fashion shown simple widget containing names institutions 
case information required render column obtained knowledge base human readable labels latitude longitude coordinates 
design mspace interface include set column types permitted combinations constraints relate alternate rendering styles column 
cs system illustrates ordering limiting constraints columns 
final column contains list people filtered preceding columns may ordered various criteria allow ordering total income research rating institution 
similarly number people shown column may limited behaviour separate selection behaviour described earlier section largely presentational issue implement set filters apply column application inter column constraints 
treat issue column presentation level column model direct bearing 
respect mspace interfaces fit model view controller paradigm model effectively decoupled view controller pairs adoption clean api view interacts model 
detail view presentation column presentation consider generation detail view provides user contextual information interact system purely presentational issue little impact interactions columns described formal model 
detail view provides information fairly coarse granularity entity focus user attention selection column 
implementation characterisation mspace user interface terms description logic expressions considered description user interface detailed specification implementation 
prototype semantic web application cs chose limit class expressions selection constraints owl hasvalue restrictions 
chose implement constraints na manner require recourse dl reasoner constraints represented triple patterns containing variables bound selections 
example constraint works institution distinguished column selection constraint example replaced triple patterns person works institution institution rdf type institution 
triple patterns expressed rdql language queries generate values panels populated 
approach advantage simplicity constraint inverse exactly form 
triple patterns assume constraint read direction relation reverse reading constraint depends variable bound selection free generates potential selection column populated 
addition rdql query language supported number rdf stores inference engines including store built cs space application sesame jena providing flexibility choice infrastructure 
disadvantage approach permits particular type constraint construction composition disjunctive query patterns case multiple selections column clumsy rdql 
treatment mspace style user interfaces builds semantic web technologies 
doing open possibilities strongly correlating interaction behaviours semantics inherent information represented system 
plans include development framework facilitate construction mspace systems drawing experiences implementing prototype cs system investigation techniques automating development mspace systems ontologies 
intend develop api toolset deploying mspace owl semantic web applications plug play operation 
part goal generate discussion feedback model better inform development api 
supported advanced knowledge technologies akt interdisciplinary research collaboration irc 
akt irc sponsored uk engineering physical sciences research council number gr comprises universities aberdeen edinburgh sheffield southampton open university 
authors nigel shadbolt comments 

vivisimo vivisimo document clustering engine 
www vivisimo com 
chen eds visualizing semantic web 
springer 
bederson shneiderman wattenberg ordered quantum treemaps making effective space display hierarchies 
acm trans 
graph 

chen dumais bringing order web automatically categorizing search results 
proceedings acm sigchi conference human factors computing systems chi 

robertson cameron czerwinski robbins visualization visualizing multiple intersecting hierarchies 
proceedings sigchi conference human factors computing systems acm press 
schraefel zhao mspace interaction design adaptable domain exploration hypermedia 
proceedings ah workshop adaptive hypermedia adaptive web systems nottingham uk 
czerwinski munzner cook initial examination ease information visualizations web content 

schaffer greenberg bartram dill roseman navigating hierarchically clustered networks fisheye full zoom methods 
acm transactions computer human interaction tochi 
effects desktop world design user navigation search performance 
proceedings information visualization ieee 
cockburn mckenzie evaluating effectiveness spatial memory physical virtual environments 
proceedings sigchi conference human factors computing systems acm press 
schraefel zhao preview cues exploring domain hierarchies 
proceedings interact switzerland 
chimera notes program hypertext application writing source texts 
proceeding acm conference hypertext 

shipman moore hsieh spatial hypertext semantics happen knowledge building spatial hypertext 
proceedings thirteenth conference hypertext hypermedia 

chimera shneiderman exploratory evaluation interfaces browsing large hierarchical tables contents 
acm transactions information systems tois 
plaisant shneiderman doan bruns interface data architecture query preview networked information systems 
acm transactions information systems tois 
sukaviriya foley supporting adaptive interfaces knowledge user interface environment 
proceedings st international conference intelligent user interfaces acm press 
baecker booth evaluation multiple interface design solution software 
proceedings sigchi conference human factors computing systems acm press 
kim compton web browsing conceptual structures 
conceptual structures extracting representing semantics contributions th international conference conceptual structures iccs 

eklund cole structured ontology information retrieval email search discovery 
foundations intelligent systems th international symposium ismis 

shadbolt monica schraefel gibbins glaser harris cs representing computer science semantic web 
triplestore 
org tmp www cas pdf 
akt ontology 
www org publications ontology 
mcguinness van harmelen owl web ontology language overview 
candidate recommendation world wide web consortium www 
org tr owl features 

connolly van harmelen horrocks mcguinness patel schneider stein daml oil march description 
note world wide web consortium 
harris gibbins store efficient bulk rdf storage 
proceedings international workshop practical scalable semantic systems sanibel island florida usa 
broekstra kampman van harmelen sesame architecture storing querying rdf data schema information 
spinning semantic web 
mit press 
labs jena semantic web toolkit 
web page hewlett packard labs www hpl hp com semweb jena htm 
