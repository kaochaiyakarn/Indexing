understanding interactions genetic algorithm parameters kalyanmoy deb samir agrawal kanpur genetic algorithms laboratory indian institute technology kanpur kanpur pin india mail ac genetic algorithms gas multi dimensional stochastic search methods involving complex interactions parameters 
decades researchers trying understand mechanics ga parameter interactions various techniques careful functional decomposition parameter interactions empirical studies markov chain analysis 
complexities interactions getting clearer analyses remains open question mind new comer eld ga practitioner values ga parameters population size choice ga operators operator probabilities arbitrary problem 
investigate performance simple tripartite gas number simple complex test problems practical standpoint 
real world situation time run ga dominated time consumed objective function evaluations compare di erent gas xed number function evaluations 
probability calculations simulation results observed solving simple problems unimodal small modality problems mutation operator plays important role gas crossover operator solve problems 
operators applied di erent working zones population size 
complex problems involving massive multi modality deception crossover operator key search operator 
studies recommended doubt crossover operator adequate population size reliable approach 
keywords population sizing multi modal functions deceptive functions crossover gas mutation gas 
exists plethora studies investigating interactions di erent genetic algorithm ga parameters successful application gas 
rightly ga parameters population size choice ga operators operator probabilities representation decision variables interact complex way 
importantly interactions largely dependent function optimized hart belew 
interactions complex complete analysis interactions di cult achieve researchers di erent analysis tools 
studies carefully isolated interactions important parameters understand pair wise effect ga performance 
isolated studies worthwhile provided useful guidelines choosing ga parameters population size goldberg deb clark harik control maps operator probabilities goldberg deb thierens thierens goldberg 
order observe various ga parameters empirical studies de jong eshelman scha er scha er wu lindsay riolo 
study dynamics interactions sophisticated stochastic models markov chains developed analyzed chakraborty deb chakraborty nix vose suzuki vose 
studies salient observations 
optimal mutation probability dependent representation tate smith 
similar arguments crossover operator highlighted optimal operator largely dependent underlying coding represent decision variables battle vose kargupta deb goldberg 

ect crossover mutation interchanged suitable coding transformation culberson 
study mention cost terms function evaluations needed nd suitable coding transformation 
argument right sake help terms deciding operator give importance practical standpoint 

crossover useful problems building block exchange necessary eshelman scha er goldberg deb clark spears 
mutation may destroy information may suitable problems 
mind suggested gas large crossover probability small mutation probability goldberg scha er investigate ect ga parameters population size crossover probability probability ga performance practical standpoint 
real world search optimization problems time consuming task evaluation function values 
practical standpoint view ga solve search optimization problem follows 
problem time frame obtain solution ga parameter settings get solution hopefully true optimum solution near true optimal solution 
time run ga proportional number function evaluations set number function evaluations xed competing gas 
bound function evaluations desired comparing di erent gas earlier ga parameter studies applicable cases gas run till solution close true optimal solution till population members converge small neighborhood xed prede ned number generations irrespective population size elapsed 
feel study comparing performance di erent gas xed number function evaluations practical useful ga applicability real world scenarios 
ga performance parameter setting depends function solved consider di erent test functions involving unimodal functions peaked function massively multi modal function deceptive function 
performance di erent gas obtained simulation results explained probability calculations 
various levels mathematical rigor borrowing results published literature resorting markov chain analysis adopted 
analysis supports simulation results obtained shows insights complex working mechanism simple genetic algorithm 
gas practice common problem faced ga practitioners xation ga parameters 
lack sound theoretical studies specifying control maps successful ga run researchers eld resort parametric studies determine suitable ga parameters problem hand 
studies xed representation scheme xed set operators chosen parametric study performed parameters population size crossover probability pc mutation probability pm 
important note ga performance largely ected representation scheme code decision variables 
due lack knowledge representation scheme arbitrary problem great deal ort spent exible representation scheme gas evolve cient representation goldberg korb deb kargupta harik 
study address called linkage problem tight representation scheme solving test problems 
parametric studies important di erent gas allocated number total points search 
total number function evaluations allocated ga population size run maximum number generations generation functions evaluated take special care count individual appearing single population temporally subsequent generations 
minimum number function evaluations assigned successful application gas depends function solved 
intuitive noteworthy properly implemented ga crossover probability pc zero mutation changes pcn strings generation increasing total number generations pcn 
similarly ga zero crossover probability mutation probability locus expected number generations pm 
ignore special implementations study 
function di cult gas solve gas allowed number points search 
exists clear study specifying cause ga di culty factors suggested goldberg horn goldberg deb 
multi modality 
deception 
isolation 
collateral noise multi modality causes di culty search optimization method presence number false attractors 
algorithms gradient descent methods modalities may cause di culty 
algorithms di culty arises number modalities huge refer problems massively multi modal problems study 
deception causes di culty gas functions lower order schema information misleading causing ga get attracted sub optimal solutions 
isolation needle haystack problem causes di culty forany search optimization algorithm problems information usually available search proceed direction 
collateral noise functions hides presence sub solution solution causing search optimization algorithm smaller sample sizes detect emphasize correct building blocks needed solve problem global optimality rudnick goldberg 
clear di culties related may arbitrary problem 
test functions chosen study explicitly introduce rst di culties functions 
test functions unimodal functions choose unimodal functions having optimum solution 
rst function unimodal hamming space second function unimodal decoded parameter space 
max function unimodal function hamming space 
choose variable unimodal function function test function optimization literature deb ravindran 
search space considered range function single minimum point function value equal zero 
function easy search algorithms gradient descent methods function deb 
peaked function function previous ranges extended 
function total minima quadrant 
function values equal zero 
order global minimum term function causes point global minimum function value equal zero function causes di culty classical search methods including gradient descent methods performance largely depends chosen initial solution deb 
massively multi modal function choose variable rastrigin function studied extensively ga literature cos xi xi lies range 
function global xi function value equal zero 
function minimum point cosine term 
total minima minima close global minimum point 
function tests algorithm performance handling massive multi modality di culties search algorithm encounters 
deceptive function bit trap functions construct bit problem follows function function unitation shown ui function total local maxima solution string global maximum function value equal 
function di cult solve low order building blocks corresponding deceptive attractor string better global attractor 
ga operators performance measure test problems attempted solve binary coded gas 
simulations binary tournament selection replacement individuals picked shu ed population better copied mating pool goldberg deb 
standard single point crossover operator probability pc 
clock operator goldberg 
operator mutation performed bit mutated decided unitation measure number bit string 
exponential distribution having mean pm 
implementation drastically reduces random number generations factor equal pm expectation 
chosen small mutation probability leverage time complexity signi cant studies 
test functions global optimal solution known priori 
success ga simulation measured solution neighborhood global optimal solution pre speci ed number function evaluations important outcome ga simulation depends choice function evaluations small assigned gas may function evaluations gas perform poorly 
large number function evaluations large comparable search space assigned gas perform equally 
really compare di erent gas reasonable amount ofs chosen 
problem choose theoretical limits literature choose gas reasonable chance nding solution neighborhood optimal solution 
done choosing appropriate value 
order reduce bias initial population simulate gas di erent initial populations observe thenumber occasions ga true optimal solution maximum function evaluations 
performance measure de ned proportion successful ga simulations 
ga run population size terminated criteria satis ed 
solution neighborhood global optimal solution 
maximum number generations elapsed 
maximum function evaluations allowed run gas may require fewer function evaluations problem 
order investigate utilization allowed function evaluations de ned factor follows ga nd true optimal solution function evaluations set equal zero 
plot factor versus generation justify choice problem 
unimodal functions onemax function take bit onemax problem 
muhlenbein showed greedy selection operator bit wise mutation operator log function evaluations required solve bit onemax problem 
estimates goldberg deb solution variable xi global optimal solution solution de ned neighborhood global optimal solution 
performance measure factor shows ga run successful felt runs adequate case 
performance population size performance gas di erent ga parameter settings onemax problem 
clark problem requires function evaluations recommended till population members convergence identical solution crossover tournament selection 
study wehave chosen 
choice estimates 
shows performance gas di erent ga parameter settings 
rst investigate performance gas selection mutation operators 
gas di erent pm values show works better pm values 
clear performance characteristics performance gas poor low large population sizes 
discuss way extreme population sizes observe di erent gas utilized allocated function evaluations 
shows mean factor runs di erent ga simulations 
clear successful gas factor large meaning smaller function evaluations required solve problem 
unsuccessful gas allowed function evaluations spent 
large populations population large diversity initial random population large best solution population expected close hamming decoded parameter space optimal solution 
onemax function de ned hamming space consider hamming distance string optimal string measure distance 
hamming distance best string population gives rough estimate minimum number generations needed reach optimum string mutation probability locus 
number allowed generations smallest hamming distance initial population gas obviously 
important nd expected hamming distance say best string population varies population size 
unused factor population size mean factor versus population size 
denote hamming distance best string optimal string initial random population 
probability string hamming distance optimal string probability string distance greater probability strings hamming distance rest strings hamming distances larger follows summing probabilities wehave best strings hamming distance optimal string population size nx expected value hamming distance best strings population calculated follows kp value di cult calculate exactly 
calculate numerically 
shows di erent population sizes 
expected population size expected value shortest hamming distance optimal string random population di erent sizes 
time time time time muhlenbein hamming distance optimum mean absorption time estimates di erent hamming distances 
shortest hamming distance exactly population size increases value reduces depends string length 
string lengths values respectively 
number generations allowed ga run varies reduces higher rate estimate 
large population sizes adequate generations allowed ga performance drops 
shows variation allowed number generations plot predicts population sizes mutation gas perform 
veri es fact showing mutation gas nd true optimum run population size 
gas perform small populations 
small populations discussed muhlenbein onemax problems di cult task move strings having hamming distances optimal string 
transition probability single string small 
cumulative probability strings large 
intuitive exists minimum threshold population size smaller gas di culty reaching optimum string 
rst calculate transition optimal string string estimate expected transition time markov chain analysis 
show transition probability reduces population size giving rise concept minimum population size gas expected 
probability transition string having hamming distance optimal string string hamming distance optimal string written follows pk min max pm possibilities di erent mutations considered bits mutated genes optimal string bits mutated genes dissimilar optimal string 
equation valid varying 
forming complete transition matrix equation estimate mean absorption time mean time required move hamming distance standard procedures 
shows mean time di erent values 
important note time estimates mutation operator 
correspond genetic drift 
values large important point mean transfer time required move strings hamming distance zero marginally larger strings hamming distance 
evident time gure shows mean transition times move strings strings mutation gure shows transition time returning optimal string muhlenbein hc algorithm uses greedy selection scheme give smaller estimates gas tournament selection bit wise mutation 
drift estimates muhlenbein estimates show transition strings hamming distance optimum di cult task 
example consider di erent scenarios transition time strings hamming distance optimal string reach optimal string reach string having hamming distance optimal string 
rst case mean time generations second case generations generations trying reach optimal string string just bit di erent optimal string 
di cult transition tok calculate probability transition bit mutated rest bits unchanged follows equation andk pm pm population size probability transition string follows assumption strings hamming distance optimal string interesting note probability small small large large small population size probability optima generation small 
means mutation operator small population small chance step right direction 
wrong step taken requires transition time come back optima causing gas spend considerable number function evaluations visiting states returning optimum string 
verify argument nding number generations function evaluations needed reach optimal string population initialized strings plot generated redoing markov chain analysis assuming absorbing state 
algorithm works solution 
random mutation probability pm successful mutated string accepted new parent original string retained 
algorithm supposed onemax problem may cient complex problems study muhlenbein showed deceptive problems 
number generations hamming distance optimal string bit onemax problem 
run gas di erent initial populations strings hamming distance optimal string continue run till copy optimal string 
shows gas require large number generations return optimum string smaller population sizes 
small population size number function evaluations generation shows exists minimum population size gas require smallest total number function evaluations nd optimum string 
xed function evaluations gas perform poorly small population sizes 
worthwhile mention argument population size number generations needed nd optimal string onemax problem 
number function evaluations population size number function evaluations needed nd optimal string onemax problem 
explain micro ga applications krishnakumar perform small populations perform simpler problems population sizes 
subsections suggest gas mutation selection operators small large population size perform poorly 
observe behavior gas simulation runs onemax problem 
crossover ga performance selection crossover mutation operators starts improve critical population size 
gas crossover search operator require adequate population size allow correct schema processing take place 
population sizes correct schema processing derived goldberg deb clark harik experimental veri cation population sizing shown 
cue earlier explain performance starts improve population increased critical population size 
considering schema competition competing schemata goldberg deb clark showed minimum population size ns necessary trigger correct building block processing ns tail gaussian distribution relating permissible error rate number competing schemata inverse signal noise underlying problem 
factor varies exp study showed population sized error rate gas performance related argued population size smaller ns ns ective factor performance measure follows exp normalization constant adjust performance measure ns 
equation suggests population size increases performance measure asymptotically approaches 
equation required population size onemax problem 
con dence level required population size 
population estimate gives adequate population size needed gas decisions rst generation 
allow gas run till complete population converges shows gas best 
function bits code variable 
complete string bits long 
total 
successful ga run choose 
requires random search method compute function evaluations nd solution neighborhood minimum solution 
allow amount ga nd solution neighborhood entire search space 
shows gas mutation search operator nd nearoptimal solution simulations 
performance degrades smaller performance population size performance measure versus population size unimodal function 
mutation probability 
onemax problem gas perform poorly small large population sizes 
gas crossover operator search operator pc start perform larger population sizes adequate schema processing possible favor optimum solution 
gas operators perform better gas 
factor function plotted 
gure shows lesser number function evaluations needed gas worked successfully runs 
figures suggest gas operators perform best perform highest ciency terms utilizing allocated number function evaluations 
factor population size factor unimodal function 
peaked function bits code variable making total string length equal 
termination criterion choose 
set maximum number function evaluations equal random search take entire search space 
shows performance various gas di erent population sizes 
observe selection mutation operators ga performance similar unimodal function 
small large population sizes gas perform poorly 
selection crossover operators mutation operator performance similar unimodal function 
gas perform adequate population size 
performance improves steadily 
population size large performance degrades due small number generations allowed 
investigate population size adequate schema processing point view equation important order schema partitions 
versus performance population size performance measure gas peaked function 

versus 
terms string coding rst competition schemata calculate mean variance function values sampling points regions 
population sizing wehave ns con dence level required population size 
similarly second schema competition considered required population sizing 
suggests population size gas correct decisions schema partitions gas may problem proceeding right optimum 
population size gas mistakes decisions may able converge true optimum 
shows gas crossover operator needed population size time 
population sizes greater ga performance drops due lack adequate number generations 
gas crossover mutation operators search operators performance improves wider range population sizes 
shows variation factor population size 
gas require allocated number function evaluations successfully 
simulation plots gas applied simpler problems interesting feature mutation gas observed 
distinct ranges population sizes dip performance measure intermediate population sizes factor population size factor peaked function 
gas best 
similar performance trends observed researchers oates corne 
exact reason peak performance distinct ranges population sizes mutation gas studied conjectured peak performance smaller population size purely due hill climbing nature mutation gas peak performance comparatively larger population size due population ect having size adequate allow needed diversity chosen mutation rate 
similarity performances gas functions onemax unimodal peaked function predicts performance gas generic unimodal simple function 
gas selection mutation operators may perform appropriate mutation probability correct population size 

gas selection crossover operators perform larger population size needed gas selection mutation 

ga applicability increases wider range population sizes operators 

general mutation gas better crossover gas problems 
presence crossover operator enhances performance gas 
study performance gas complex problems involving massive multimodality deception 
massively multi modal function variable rastrigin function bits code variable making complete string equal bits 
study weuse local optimum lies global optimal solution 
solution range average random search method require function evaluations nd global optimum 
simulations maximum function evaluations 
shows performance measure various ga parameter combinations 
performance population size performance measure gas rastrigin massively multi modal function 
observe gas mutation perform miserably gas crossover operator nds global optimal solution runs 
mutation operator added small probability ga performance degrades 
problem local optima fact total local optimal solutions global optimum mutation cases destroys solution 
hand crossover operator combine partial solutions form optimal solution 
interesting note random initial population size expected copy optimal solution true optimum subfunction 
population size copies correct sub solution population average 
task selection operator detect sub solutions midst noise subfunctions 
requires population size computed equation 
assuming stage population converges best peaks nd squared noise signal ratio 
noting subfunctions noise come population sizing 
con dence limit sizing amounts 
allow generations population size population sizing conservative estimate mentioned original study performance population size 
shows factor di erent ga runs 
clear massively multi modal function solved assumption particularly bad rastrigin function parabolic structure minimum xi competition happens best minima function value di erence minima 
factor population size factor versus population size massively multi modal function 
mutation ga fact bit wise mutation operator detrimental study 
problems reliably adequate population size crossover operator necessary 
muhlenbein schlierkamp voosen shown breeder ga bga solve function log number variables function evaluations bga real coded implementation uses line search implemented binary strings 
crossover operator explicitly exploits linear separability subfunctions 
approach may perform generic function rotated version problem discussed paragraph 
identical experiments conducted rotated rastrigin function variable vector mapped variable vector random orthonormal matrix calculating objective function value similar scenario emerged 
performance population size performance measure gas rotated rastrigin massively multi modal function 
problem di cult solve compared function simply variables related 
variable adjusted time reach optimum variables adjusted simultaneously 
order get reasonable performance measures experiments 
performance gas crossover operator similar 
performance gas mutation operator mutation probabilities locus equal nd solution near global optimum run performance gas crossover mutation operators somewhat better 
deceptive function function desire gas nd global optimal solution 
shows performance gas di erent ga parameter values 
observed performance population size performance gas di erent ga parameters 
maximum function evaluations case 
mutation gas nd optimal string di erent mutation probabilities ranging pm 
crossover gas nd correct solution runs wide range population sizes 
population sizing estimate equation 
con dence level size 
shows ga performance best population size 
crossover aided mutation operator performance improve marginally 
large mutation probability pm ga performance degrades drastically 
large mutation destroys building blocks population 
fall ga performance muhlenbein showed order ga deceptive functions length solved hc algorithm log function evaluations 
exact form equation require function evaluations solve problem 
coding small fraction requirement 
large population due smaller number allowed generations 
factor plot similar previous functions observed 
results show function di cult solve gas require suitable population size solve problem 
population size adequate crossover reliable approach approach 
small compared muhlenbein estimate observe signi cant success gas mutation operator 
muhlenbein estimate valid kind linkage coding subfunctions population sizing estimate described goldberg deb clark valid tight coding subfunctions 
studied ect various parameters performance gas point view xed computational cost 
order investigate performance gas di erent tness landscapes chosen unimodal functions hamming space decoded parameter space peaked simple function massively multi modal function deceptive function 
study simulation results show unimodal simple functions mutation approaches performed better crossover approaches 
xed number function evaluations mutation ga performs best moderate population size 
small large population sizes detrimental 
small population size required number generations large solve problem comparable number function evaluations needed moderate population size 
explains micro gas nicely simpler problems population size smaller population sizes 
ga large population size number allowed generations nd optimum 
gas crossover mutation operators performed better crossover mutation gas simpler problems onemax functions 
important aspect observed study 
simpler problems mutation crossover approaches nd optimal nearoptimal solution working range population size approaches quite di erent 
mutation approaches require smaller population sizes compared crossover approaches 
factor graphs shown approaches required number function evaluations 
gas applied complex problems involving massive multi modality deception completely di erent scenario emerged 
gas failed miserably solve problems crossover gas able solve problems 
observed order achieve performance approach correct population size needed 
crossover gas able explain match simulation results required population sizes population sizing estimate developed goldberg deb clark 
mutation approaches theoretical population sizing exist 
analysis supports existence optimal population sizing approaches 
case correct population size depend function 
limited simulation results simple tripartite gas binary tournament selection single point crossover bit wise mutation operators concluded doubt complexity problem hand better crossover operator adequate population size 
crossover gas reliable nding near optimal solution mutation gas arbitrary problem 
correct population size crucial factor successful ga applications strongly feel orts need spent nding correct population sizing estimates 
estimate subfunction decomposable problems 
need ready population sizing estimate generic problems 
interesting study ect ga operators elitism point crossover operator performance gas point view xed computational cost 
battle vose 

isomorphisms genetic algorithms 
foundations genetic algorithms 

chakraborty deb chakraborty 

analysis selection algorithms markov chain approach 
evolutionary computation 

culberson 

mutation crossover isomorphisms construction discriminating functions 
evolutionary computation 

de jong 

analysis behavior class genetic adaptive systems 
doctoral dissertation university michigan 
dissertation abstracts international 
deb 

optimization engineering design algorithms examples 
new delhi prentice hall 
eshelman scha er 

crossover niche 
proceedings fifth international conference genetic algorithms 
pp 

goldberg 

genetic algorithms search optimization machine learning 
new york addison wesley 
goldberg 

making genetic algorithms lesson wright brothers 
advanced technology developers 

goldberg deb clark 


genetic algorithms noise sizing populations 
complex systems 

goldberg deb horn 

massive multimodality deception genetic algorithms 
parallel problem solving nature 

goldberg deb thierens 

better understanding mixing genetic algorithms 
journal 
proceedings fourth international conference genetic algorithms 
pp 

goldberg korb deb 


messy genetic algorithms motivation analysis rst results complex systems 

harik 

learning gene linkage ciently solve problems bounded di culty genetic algorithms 
doctoral dissertation 
urbana illinois genetic algorithms laboratory university illinois urbana champaign 
harik cantu paz goldberg miller 

gambler ruin problem genetic algorithms sizing populations 
proceedings ieee international conference evolutionary computation 
pp 

hart belew 

optimizing arbitrary function hard genetic algorithm 
proceedings fourth international conference genetic algorithms 
pp 

horn goldberg deb 

long path problems 
parallel problem solving nature iii 
pp 

kargupta 

gene expression messy genetic algorithm 
proceedings ieee conference evolutionary computation 
pp 

kargupta deb goldberg 

ordering genetic algorithms deception 
parallel problem solving nature 

krishnakumar 

algorithms stationary nonstationary function optimization 
spie proceedings intelligent control adaptive systems 
muhlenbein 

genetic algorithms really mutation hillclimbing 
manner manderick eds 
foundations genetic algorithms ii 
amsterdam north holland 
pp 

muhlenbein schlierkamp voosen 

predictive models breeder genetic algorithm continuous parameter optimization 
journal evolutionary computation 

nix vose 

modelling genetic algorithms markov chains 
annals mathematics arti cial intelligence 

oates corne 

investigating evolutionary approaches adaptive database management various quality service metrics 
parallel problem solving nature 


formal analysis random recombination 
proceedings fourth international conference genetic algorithms 
pp 

ravindran 

engineering optimization methods applications 
new york wiley 
rudnick goldberg 

signal noise genetic algorithms 
illigal report 
urbana il university illinois urbana champaign 
scha er caruana eshelman das 

study control parameters ecting online performance genetic algorithms function optimization 
proceedings third international conference genetic algorithms 
pp 

suzuki 

markov chain analysis genetic algorithm 
proceedings fifth international conference genetic algorithms 
pp 

spears 

crossover mutation 
foundation genetic algorithms 

tate smith 

expected allele coverage role mutation genetic algorithms 
proceedings fifth international conference genetic algorithms 
pp 
thierens goldberg 

mixing genetic algorithms 
proceedings fourth international conference genetic algorithms 
pp 

vose 

modeling simple genetic algorithms 
foundations genetic algorithms 

wu 
lindsay riolo 

empirical observation roles crossover mutation 
proceedings seventh international conference genetic algorithms 
pp 

