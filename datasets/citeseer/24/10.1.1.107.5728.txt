journal artificial intelligence research submitted published unifying class representation formalisms diego calvanese calvanese dis uniroma maurizio lenzerini lenzerini dis uniroma daniele nardi nardi dis uniroma dipartimento di informatica sistemistica universit di roma la sapienza salaria roma italy notion class ubiquitous computer science central formalisms representation structured knowledge knowledge representation databases 
study basic issues underlying representation formalisms single common characteristics distinguishing features 
investigation leads propose unifying framework able capture fundamental aspects representation languages different contexts 
proposed formalism expressed style description logics introduced knowledge representation means provide semantically founded basis structural aspects knowledge representation systems 
description logic considered subset order logic nice computational characteristics 
quite expressive features novel combination constructs studied 
distinguishing constructs number restrictions generalize existence functional dependencies inverse roles allow refer inverse relationship possibly cyclic assertions necessary capturing real world domains 
able show precisely combination constructs logic powerful model essential set features defining class structures common frame systems object oriented database languages semantic data models 
consequence established correspondences significant extensions formalisms available 
high expressiveness logic propose need capturing reasoning different contexts forces distinguish unrestricted finite model reasoning 
notable feature proposal reasoning cases decidable 
argue virtue high expressive power associated reasoning capabilities unrestricted finite models logic provides common core class representation formalisms 

fields computer science find formalisms representation objects classes 
generally speaking object denotes element domain interest class denotes set objects common characteristics 
term class representation formalism refer formalism allows express kinds relationships constraints subclass constraints holding classes meaningful set applications 
class formalisms aim advantage class structure order provide various information class consistent admits object class subclass class generally constraint ai access foundation morgan kaufmann publishers 
rights reserved 
calvanese lenzerini nardi holds set classes 
characterization clear formalisms referred deal structural aspects objects classes include features specification behavioral properties objects 
main families class formalisms identified 
comes knowledge representation particular semantic networks frames see example lehmann sowa 
second originates field databases particular semantic data models see example hull king 
third arises types programming languages object oriented systems see example kim lochovsky 
past attempts establish relationships various families class formalisms see section brief survey 
proposed solutions fully general formalism capturing modeling constructs reasoning techniques families missing 
address problem proposing class representation formalism description logics brachman levesque schmidt schau smolka donini lenzerini nardi schaerf comparing formalisms :10.1.1.126.8320
description logics structured knowledge described means called concepts roles denote unary binary predicates respectively 
starting set atomic symbols build complex concept role expressions applying suitable constructors characterize description logic 
formally concepts interpreted subsets domain roles binary relations domain constructs equipped precise set theoretic semantics 
common constructs include boolean operations concepts quantification roles 
example concept person child male denotes set individuals instances concept person connected role child instances concept male concept child denotes individuals connected role child individual 
constructs considered important include general forms quantification number restrictions allow state limits number connections individual may certain role constructs roles intersection concatenation inverse 
description logic knowledge base expressing intensional knowledge modeled domain built stating inclusion assertions concepts satisfied models knowledge base 
assertions specify necessary necessary sufficient conditions individuals instances certain concepts 
reasoning knowledge bases includes detection inconsistencies knowledge base determining concept populated model knowledge base checking subsumption instances concept necessarily instances concept models knowledge base 
propose description logic called aluni quite expressive includes novel combination constructs including number restrictions inverse roles inclusion assertions restrictions cycles 
features aluni powerful provide unified framework frame systems object oriented languages semantic data models 
show establishing precise correspondence language style proposed fikes kehler unifying class representation formalisms entity relationship model chen object oriented language style introduced abiteboul kanellakis 
specifically identify relevant features model classes cited settings show specification class formalisms equivalently expressed knowledge base aluni 
way able identify commonalities families specificities family 
specific features family addressed aluni able show formalism proposed provides important features currently missing family relevance stressed 
sense unifying framework points possible developments languages belonging families 
fundamental reason regarding aluni unifying framework class representation formalisms reasoning aluni hard decidable shown calvanese lenzerini nardi calvanese 
consequently language features arising different frameworks build class representations just common semantic account combined expressive setting retains capability solving reasoning tasks 
combination constructs included language necessary distinguish reasoning respect finite models models finite domain reasoning respect unrestricted models 
calvanese suitable techniques unrestricted finite model reasoning enable reasoning different contexts arising assuming finite domain case field databases assuming domain infinite 
discuss results reasoning aluni compare results reasoning class representation formalisms 
summarizing framework provides adequate expressive power account significant features major families class formalisms 
equipped suitable techniques reasoning finite unrestricted models 
believe aluni captures essential core class representation formalisms belonging families mentioned 
organized follows 
section formalism sections discuss families class formalisms frame languages semantic data models object oriented data models showing basic features captured knowledge bases aluni 
final sections contain review related including discussion reasoning aluni class formalism concluding remarks 

unifying class representation language section aluni class formalism style description logics dls brachman levesque schmidt schau smolka donini donini lenzerini nardi nutt 
dls domain interest modeled means concepts roles denote classes binary relations respectively 
generally speaking dl formed basic components description language specifies construct complex concept role expressions called simply concepts roles starting set atomic calvanese lenzerini nardi construct syntax semantics atomic concept atomic negation conjunction ci disjunction ci universal quantification 
number restrictions atomic role inverse role table syntax semantics symbols applying suitable constructors 
set allowed constructs characterizes description language 
knowledge specification mechanism specifies construct dl knowledge base properties concepts roles asserted 
set basic reasoning tasks provided dl 
rest section describe specific form components assume aluni 
description language aluni description language aluni called concepts roles formed syntax shown table denotes atomic concept atomic role arbitrary concept expression arbitrary role expression nonnegative integer 
increase readability concept expressions introduce abbreviations atomic concept atomic concept concepts interpreted subsets domain roles binary relations domain 
intuitively represents negation atomic concept interpreted complement respect domain interpretation 
represents conjunction concepts interpreted set intersection represents disjunction interpreted set union 
consequently represents domain 
denotes cardinality set unifying class representation formalisms empty set 
called universal quantification roles denote elements interpretation domain connected role instances concept called number restrictions impose instances restrictions minimum maximum number objects connected role called inverse role represents inverse binary relation denoted formally interpretation consists interpretation domain interpretation function maps concept subset role subset semantic rules specified table 
sets called extensions respectively 
example consider concept expression enrolls student enrolls enrolls teaches professor gradstudent teaches specifying constraints object university course 
expression reflects fact course enrolls students restrictions minimum maximum number enrolled students 
role teaches inverse constructor state property course taught exactly individual professor graduate student 
negation express disjointness concept denoting advanced courses 
knowledge bases aluni aluni knowledge base expresses knowledge classes relations modeled domain formally defined triple finite set atomic concepts finite set atomic roles finite set called inclusion assertions 
assertion form atomic concept arbitrary concept expression 
inclusion assertion states means concept necessary properties element domain order instance atomic concept formally interpretation satisfies inclusion assertion interpretation model knowledge base satisfies inclusion assertions finite model model finite domain 
example cont 
assertion course enrolls student enrolls enrolls teaches professor gradstudent teaches complex concept expression state necessary conditions object instance concept course 
calvanese lenzerini nardi aluni restrictions imposed form inclusion assertions may assume 
particular rule cyclic assertions assertions concept expression right hand side refers directly indirectly assertions atomic concept left hand side 
presence cyclic assertions different semantics may adopted nebel 
defined called descriptive semantics accepts interpretations satisfy assertions knowledge base interprets assertions constraints domain modeled 
inclusion assertions descriptive semantics claimed provide intuitive results buchheit donini nutt schaerf 
alternative semantics proposed fixpoint constructions nebel schild de giacomo lenzerini allow define unique way interpretation concepts 
general cycles knowledge base increase complexity reasoning nebel baader calvanese require special treatment reasoning procedures baader buchheit donini schaerf 
reason dl systems assume knowledge base acyclic brachman mcguinness patel schneider resnick borgida franconi tessaris 
assumption unrealistic practice cycles definitely necessary correct modeling application domains 
cycles allowed data models databases shown sections order capture semantics aluni possibility cyclic assertions fundamental 
inclusion assertions dl systems equivalence assertions buchheit express necessary sufficient conditions object instance concept 
possibility ruled aluni limit ability capturing frame systems database models constraints expressed correspond naturally inclusion assertions 
reasoning aluni basic tasks consider reasoning aluni knowledge base concept consistency concept subsumption concept consistency problem deciding concept consistent knowledge base written admits model 
concept subsumption problem deciding concept subsumed concept knowledge base written ci model inclusion number restrictions inverse roles ability aluni arbitrary possibly cyclic inclusion assertions allows construct knowledge base certain concept consistent necessarily empty extension finite models knowledge base 
similarly subsumption relation concepts may hold infinite models knowledge base ruled finite models considered 
number doubles unifying class representation formalisms set assertions consists number doubles doubles number doubles doubles number aluni knowledge base concepts equivalent finite models example knowledge base shown 
intuitively assertions state number number doubles numbers double 
number number doubles number doubles numbers 
observe model universal quantifications functionality doubles assertions imply number direct inclusion assertion number implies number concepts cardinality sub concept domain finite extensions coincide 
necessarily hold infinite domains 
fact names chosen suggest infinite model knowledge base number interpreted differently 
model obtained natural numbers domain interpreting number domain numbers doubles set 
example shows aluni finite model property states concept consistent knowledge base knowledge base admits finite model concept nonempty extension 
important distinguish reasoning respect unrestricted models reasoning respect finite models 
call unrestricted concept consistency written unrestricted concept subsumption written reasoning tasks described carried restricting attention finite models 
corresponding reasoning tasks carried considering finite models called finite concept consistency written finite concept subsumption written 
example cont 
summing previous considerations say number subsumed number finitely subsumed number 
equivalently number consistent number finitely consistent number 
distinguishing feature aluni reasoning finite unrestricted case decidable 
particular unrestricted concept satisfiability concept subsumption decidable deterministic exponential time de giacomo lenzerini calvanese lenzerini nardi calvanese reasoning strict sublanguages aluni exptime hard calvanese known algorithms computationally optimal 
finite concept consistency aluni decidable deterministic exponential time finite concept subsumption general case decidable deterministic double exponential time calvanese 
precise discussion methods reasoning aluni provided section detailed account adopted algorithms analysis computational complexity calvanese 
sections show forms reasoning respect unrestricted finite models capture reasoning tasks typically considered different formalisms structured representation knowledge 

frame systems frame languages idea expressing knowledge means frames structures representing classes objects terms properties instances satisfy 
properties defined frame slots constitute items frame definition 
large number frame systems developed different goals different features 
dls bear close relationship kl family frame systems woods schmolze 
consider frame systems general perspective discussed example karp karp myers gruber establish correspondence aluni knowledge bases context 
restricting attention aspects related taxonomic structure 
discussed consider assertional knowledge bases intensional knowledge characterized terms inclusion assertions definitions 
addition consider features captured order framework default values slots attached procedures specification overriding inheritance policies 
issues concerning modeling aspects dls addressed donini lenzerini nardi nutt schaerf donini nardi rosati modal nonmonotonic extension dls 
syntax frame systems correspondence precise need fix syntax semantics frame systems consider 
unfortunately accepted standard chosen basically notation adopted fikes kehler kee system 
definition frame knowledge base denoted formed set frame slot names constituted set frame definitions form frame kb 
kee trademark 
note kee user directly specify knowledge base notation allowed define frames interactively graphical system interface 
unifying class representation formalisms frame course kb university enrolls student cardinality min cardinality max union gradstudent professor cardinality min cardinality max frame kb university superclasses course enrolls intersection gradstudent undergrad cardinality max frame kb university superclasses course professor frame professor kb university frame student kb university frame gradstudent kb university superclasses student degree string cardinality min cardinality max frame undergrad kb university superclasses student kee knowledge base frame expression expression formed syntax superclasses 
fh cardinality min cardinality max sk hk cardinality min mk cardinality max nk denote frame slot names respectively denote positive integers denotes slot constraint specified follows intersection union readers familiar kee system point omit specification sub classes frame kee directly derived specification super classes 
example shows simple example knowledge base modeling situation university expressed frame language 
frame course calvanese lenzerini nardi represents courses enroll students taught graduate students professors 
cardinality restrictions impose minimum maximum number students may enrolled course express course taught exactly individual 
frame represents courses enroll graduate students students degree 
basic courses hand may taught professors 
semantics frame systems give semantics set frame definitions resort interpretation terms order predicate calculus hayes 
interpretation frame names treated unary predicates slots considered binary predicates 
frame expression interpreted predicate logic formula free variable consists conjunction sentences obtained super class specification slot specification 
particular super classes 
fh 
fh slot specification cardinality min cardinality max 

ym 
yi yj ym 
yn 
yn yi yj assumption frame definition occurrences refer free variable 
constraints slots interpreted conjunction disjunction negation respectively frame definition intersection interpreted union interpreted interpreted frame kb considered universally quantified sentence form 
frame knowledge base considered conjunction order sentences corresponding frame definitions regard frame definitions necessary conditions commonplace frame systems known assertional frame systems opposed definitional systems frame definitions interpreted necessary sufficient conditions 
unifying class representation formalisms order enable comparison formalisms representing structured knowledge restrict attention reasoning tasks involve frame knowledge base independently assertional knowledge frames instances 
fikes kehler mention reasoning services associated frames consistency checking amounts verifying frame satisfiable knowledge base 
particular involves reasoning cardinalities checking filler slot belongs certain frame 
inheritance case amounts ability identifying frames general frame called super karp 
properties general frames inherited specific 
reasoning general ability check mutual frame descriptions knowledge base 
reasoning services formalized order semantics follows 
definition frame knowledge base frame say consistent order sentence satisfiable 
say frame description general 
relationship frame systems aluni order semantics allows establish straightforward relationship frame languages aluni 
translation frame knowledge bases aluni knowledge bases 
define function maps frame expression concept expression follows frame name mapped atomic concept 
slot name mapped atomic role 
slot constraint mapped follows union mapped 
intersection mapped 
mapped 
frame expression form superclasses 
fh cardinality min cardinality max sk hk cardinality min mk cardinality max nk calvanese lenzerini nardi course professor student gradstudent undergrad string enrolls degree set assertions consists course enrolls student enrolls enrolls professor gradstudent course enrolls gradstudent undergrad enrolls course professor gradstudent student degree string degree undergrad student aluni knowledge base corresponding kee knowledge base mapped class expression fh sk hk mk sk nk sk 
mapping allows translate frame knowledge base aluni knowledge base specified definition 
definition aluni knowledge base corresponding frame knowledge base obtained follows consists atomic concept frame name consists atomic role slot name consists inclusion assertion frame definition frame kb example cont 
illustrate translation frame knowledge base 
corresponding aluni knowledge base shown 
unifying class representation formalisms correctness translation follows correspondence settheoretic semantics aluni order interpretation frames see example hayes borgida donini 
observe inverse roles fact necessary formalization frames 
possibility referring inverse slot rarely considered frame knowledge representation systems exceptions reported karp 
due absence inverse roles distinction reasoning finite unrestricted models necessary consequently mentioned forms reasoning captured unrestricted concept consistency concept subsumption aluni knowledge bases 
summarized theorem 
theorem frame knowledge base frame frame description translations aluni 
hold consistent 
general 
proof 
claim directly follows semantics frame knowledge bases translation dls adopted 
theorem possible exploit methods unrestricted reasoning aluni knowledge bases order reason frame knowledge bases 
problem reasoning kee exptime complete pay terms computational complexity expressiveness added constructs aluni 
fact resorting correspondence aluni possible add frame systems useful features possibility specifying inverse slot karp retain ability reason exptime 

semantic data models semantic data models introduced primarily formalisms database schema design 
provide means model databases richer way traditional data models supported database management systems important adopted database design methodologies computer aided software engineering tools 
widespread semantic data model entity relationship er model introduced chen 
standard extensively design phase commercial applications 
commonly accepted er notation classes called entities represented boxes relationships entities represented diamonds 
arrows entities called isa relationships represent inclusion assertions 
links entities relationships represent er roles number restrictions associated 
dashed links restrictions refined specific entities 
elementary properties entities modeled attributes 
eliminate inverse roles resulting dl finite model property 
calvanese lenzerini nardi values belong predefined domains integer string boolean 
er model provide constructs expressing explicit disjointness disjunction entities extensions model allow generalization hierarchies represent combination constructs 
order keep presentation simple consider generalization hierarchies formalization provide addition straightforward 
similarly omit attributes relations 
show relevant aspects er model captured aluni reasoning er schema reduced reasoning corresponding aluni knowledge base 
aluni equipped capabilities reason knowledge bases respect finite unrestricted models see section reduction shows reasoning er model generally semantic data models decidable 
case frame systems restrict attention aspects constitute core er model 
reason consider features keys weak entities introduced literature chen appear formalizations er model methodologies conceptual modeling model 
proposal treatment keys description logics borgida 
order establish correspondence er model aluni formal syntax semantics er schemata 
syntax entity relationship model er model industrial standard variants extensions introduced differ minor aspects expressiveness notation chen batini ceri navathe thalheim 
er schemata usually defined graphical notation particularly useful easy visualization data dependencies suited purposes 
chosen formalization er model abstracts respect important characteristics allows develop correspondence aluni 
finite sets call function subset labeled tuple labeled tuple maps xi yi 
denoted 
xk yk 
write xi denote yi 
definition er schema tuple ls att rel card ls finite alphabet partitioned set es entity symbols set attribute symbols set role symbols set rs relationship symbols set ds domain symbols domain symbol associated predefined basic domain bd assume various basic domains pairwise disjoint 
es es binary relation es 
att function maps entity symbol es labeled tuple ds 
unifying class representation formalisms rel function maps relationship symbol rs labeled tuple es 
assume loss generality role specific exactly relationship relationships rs rel 
uk ek rel 

uk 
disjoint 
role relationship entity rel 

card function es rs satisfies condition relationship rs rel 
uk ek card defined ui 
ei denotes reflexive transitive closure 
component card denoted second component cmax 
stated assumed cmax assumed 
specifying formal semantics er schemata give intuitive description components schema 
relation models isa relationship entities 
need special assumption form acyclicity injectivity 
function att model attributes entities 
example att associates labeled tuple integer string entity attributes values integers strings respectively 
simplicity assume attributes single valued mandatory easily handle multivalued attributes associated cardinalities 
function rel associates set roles relationship symbol determining implicitly arity role set distinguished entity called primary entity database satisfying schema instances primary entity allowed participate relationship role function card specifies cardinality constraints constraints minimum maximum number times instance entity may participate relationship role 
constraints meaningful entity effectively participate relationship function defined sub entities primary entity 
special value restriction posed maximum cardinality 
constraints specify existence dependencies functionality relations cosmadakis kanellakis 
restricted form minimum cardinality maximum cardinality 
cardinality constraints form considered introduced abrial subsequently studied minker lenzerini ye parent spaccapietra thalheim 
example shows simple er schema modeling state affairs similar represented kee knowledge base 
standard graphic notation er schemata dashed link represents refinement cardinality constraint participation sub entity case relationship case 
calvanese lenzerini nardi tof teaching degree string teacher ein eof course student er schema semantics entity relationship model gradstudent semantics er schema specifying database states consistent information structure represented schema 
formally database state corresponding er schema ls att rel card constituted nonempty finite set assumed disjoint basic domains function maps domain symbol ds corresponding basic domain bd entity es subset attribute set ds relationship rs set labeled tuples elements called instances respectively 
database state considered acceptable satisfies integrity constraints part schema 
captured definition legal database state 
definition database state said legal er schema ls att rel card satisfies conditions pair entities es holds eb entity es att 
ah dh instance 
holds exactly element ai second component ai element bd component relationship rs rel 
uk ek instances form 
uk ek ei eb 

unifying class representation formalisms number doubles er schema corresponding example relationship rs rel 
uk ek 
entity es ei instance holds ui ui cmax ui 
notice definition database state reflects usual assumption databases database states finite structures see cosmadakis kanellakis vardi 
fact basic domains required finite legal database state schema finite set values basic domains interest 
define active domain act database state set elements basic domains bd ds effectively appear values attributes formally act bd ds 

finite contains finite number attributes functional definition act finite 
reasoning er model includes verifying entity satisfiability deducing inheritance 
entity satisfiability amounts checking entity populated legal database state atzeni parker jr lenzerini di battista lenzerini corresponds notion concept consistency dls 
deducing inheritance amounts verifying databases legal schema instance entity instance entity 
implied isa relationships arise different reasons 
trivially transitive closure explicit isa relationships schema subtle ways specific patterns cardinality restrictions cycles schema requirement database state finite lenzerini cosmadakis 
example shows er schema modeling situation knowledge base example 
arguing exactly example conclude entities number denote set elements finite database legal schema isa relation number stated explicitly 
implied due cycle involving relationship entities due particular form cardinality constraints 
calvanese lenzerini nardi relationship entity relationship schemata aluni show different forms reasoning er schemata captured finite concept consistency finite concept subsumption aluni 
correspondence formalisms established defining translation er schemata aluni knowledge bases proving correspondence legal database states finite models derived knowledge base 
definition ls att rel card er schema 
aluni knowledge base defined follows set atomic concepts contains elements domain symbol ds atomic concept entity es atomic concept relationship rs atomic concept 
set atomic roles contains elements attribute atomic role relationship rs rel 
uk ek atomic roles 
uk 
set assertions contains elements pair entities es assertion entity es att 
ah dh assertion ah dh ah relationship rs rel 
uk ek assertions uk ek uk ei ui 
relationship rs rel 
uk ek 
entity es ei ui assertion cmax ui assertion ui 
ui 
pair symbols es rs ds rs ds assertion 
unifying class representation formalisms course teacher student gradstudent teaching string tof ein eof degree set assertions consists teaching tof course tof teacher ein course ein eof student eof course tof teaching tof ein ein ein course ein teacher teaching student eof eof eof gradstudent student degree string degree 
aluni knowledge base corresponding er schema example cont 
illustrate translation er schema 
aluni knowledge base captures exactly semantics shown brevity disjointness assertions omitted assertions concept left hand side collapsed 
translation inverse attributes number restrictions capture semantics er schemata 
observe means inverse constructor binary relationship treated simpler way choosing traversal direction mapping relationship directly role 
notice assumption acyclicity resulting knowledge base unrealistic case order exploit correspondence reasoning er model need techniques deal inverse attributes number restrictions cycles 
shown example combination factors causes finite model property fail hold need resort reasoning methods finite models 
fact reduce reasoning er model finite model reasoning aluni knowledge bases 
purpose define mapping database states corresponding er schema finite interpretations knowledge base derived 
due possible presence relations arity greater mapping need characterize interpretations knowledge base directly correspond database states 
definition ls att rel card er schema defined 
interpretation relation descriptive relationship rs rel 
uk ek 
ui ui 
calvanese lenzerini nardi intuitively extension relationship database state set labeled tuples set contain element twice 
implicit semantics er model labeled tuples connected roles relationship exactly elements domain 
model aluni knowledge base corresponding er schema hand tuple represented new individual condition implicit anymore 
imposed aluni suitable assertions 
lemma shows need explicit condition interested reasoning aluni knowledge base corresponding er schema 
due fact restrict considering relation descriptive models 
lemma er schema aluni knowledge base obtained definition concept expression 
finitely consistent finite relation descriptive model 
proof 
finite model 
build finite model starting applying construction relationship rs 
model obtained previous step rs rel 
uk ek relationship apply construction 
construct model ir condition satisfied relationship individual denote ui 
unique individual ui ei ei 
define uk ek ui ei 

call conflict set set uk ek element 
conflict set uk ek randomly choose individual say induce conflict 
uk ek 
call conf finite set objects inducing conflict 
uk ek 
define interpretation conf disjoint union conf copies copy denoted iz set conf denote dz copy iz individual disjoint union models aluni knowledge base model conf model 
iz iz copies conf call exchanging uk rz uk rz operation iz conf consisting replacing uk pair rz uk rz rz uk rz time replacing uk iz pair rz uk rz rz uk rz 
intuitively exchanging uk rz uk rz individuals rz rz induce conflicts anymore 
construct conf interpretation ir follows conf conf exchange uk rz uk rz 
possible show conflicts eliminated new conflict created 
ir condition satisfied 
show ir model cir 
straightforward check induction concept expression appearing conf dz ir 
assertions satisfied ir cir 
unifying class representation formalisms result correspondence legal database states er schema relation descriptive models resulting aluni knowledge base established 
proposition er schema ls att rel card exist mappings database states corresponding finite interpretations translation finite relation descriptive interpretations database states corresponding 
legal database state finite model symbol es rs ds 
finite relation descriptive model legal database state entity es symbol rs ds proof 
database state define interpretation follows act rs rb symbol es rs ds 
relationship rs rel 
uk ek ui ui 

legal database state 
prove claim sufficient show satisfies assertion 
assertions satisfied satisfies set inclusion extensions corresponding entities 
respect assertions es entity att 
ah dh consider instance show 
exactly element ei ei ai ei di eb definition legal database state exactly element ai ab ai component second component ei ai element bd di respect assertions rs relationship rel 
uk ek consider instance show 
exactly element ei ei ui ei ei rb definition legal database state labeled tuple form 
uk eb 

function defined 
uk ei unique equal ei ei eb assertions satisfied component element ui element rb respect assertions rs relationship rel 
uk ek es entity ei 
ui 
calvanese lenzerini nardi consider instance show pairs ui second component 
assertions satisfied know component pairs instance 
definition legal database state labeled tuples ui component equal ui contains pairs second component equal respect assertions proceed similar way 
assertions satisfied definition basic domains pairwise disjoint disjoint set labeled tuples second element labeled tuple third labeled tuples corresponding different relationships equal defined different sets roles 
finite relation descriptive interpretation 
basic domain ds function bd 
finite basic domain contains countable number elements function exists 
order define specify mapping associates individual element follows entity es relationship rs rel 
uk ek individuals 
dk di ui 

uk dk 
basic domain ds 
pair individuals set 
model rules define assertions instance atomic concept corresponding relationship basic domain case instance atomic concept corresponding entity 
relationship rs rel 
uk ek assertions 
exactly element di di ui model uniquely determined choose nondeterministically possible value 
define database state corresponding rs ds 
symbol es rs ds 
difficult see model defined way legal database state active domain ds unifying class representation formalisms theorem allows reduce reasoning er schemata finite model reasoning aluni knowledge bases 
theorem er schema entities translation holds 
satisfiable 

inherits 
proof 
legal database state 
part proposition finite model 
finitely consistent 
lemma finite model 
part proposition database state legal 

finitely consistent 
lemma finite relation descriptive model part proposition database state legal inherit assume inherit database state legal instance part proposition finite model 
theorem allows effectively exploit reasoning methods developed aluni order reason er schemas 
complexity resulting method reasoning er schemata exponential 
observe known algorithms reasoning er schemata exponential calvanese lenzerini precise computational complexity problem open 
exploiting correspondence aluni possible add er model general semantic data models features modeling primitives currently missing considered important fully take account reasoning schemata 
additional features include example possibility specify arbitrary boolean combinations entities refine properties entities isa hierarchies 

object oriented data models object oriented data models proposed goal devising database formalisms integrated object oriented programming systems kim 
subject active area research database field features rely notion object identifier extensional level opposed traditional data models value oriented notion class intensional level 
calvanese lenzerini nardi structure classes specified means typing inheritance 
previous section common basis object oriented data models class formalisms introducing language specifying object oriented schemata show schemata correctly represented aluni knowledge bases 
analysis concentrate attention structural aspects objectoriented data models 
characteristics object oriented approach provide mechanisms specifying dynamic properties classes objects typically definition methods associated classes 
aspects outside scope investigations 
argue general techniques schema level reasoning particular type consistency type inference profitably exploited restricted forms reasoning methods abiteboul kanellakis ramaswamy waller 
syntax object oriented model define simple object oriented language style popular models featuring complex objects object identity 
refer specific formalism model inspired ones abiteboul kanellakis hull king 
definition object oriented schema tuple cs ds cs finite set class names denoted letter finite set attribute names denoted letter ds finite set class declarations form class 
ck type denotes type expression built syntax union 
tk set record 
ak tk 
ds contains exactly declaration class cs 
example shows fragment object oriented schema corresponding kee knowledge base 
class declaration imposes constraints instances class refers 
part class declaration allows specify inclusion sets instances involved classes type part specifies type expression structure assigned objects instances class 
unifying class representation formalisms class teacher type union professor gradstudent class gradstudent student type record degree string object oriented schema semantics object oriented model class course type record enrolls set student teacher meaning object oriented schema specifying characteristics instance schema 
definition instance notions object identifier value 
characterize set values constructed set symbols called object identifiers 
finite set symbols denoting real world objects set vo values inductively defined follows vo 

vk vo 
vk vo 

vk vo 
ak vk vo 
vo 
database instance schema cs ds constituted finite set object identifiers mapping assigning class cs subset mapping assigning value object set values constructed set object identifiers infinite database instance needs consider finite subset definition object oriented schema instance set vj active values respect constituted set object identifiers 
set values assigned elements including values explicitly associated object identifiers form values 
interpretation type expressions defined interpretation function assigns type expression subset conditions satisfied calvanese lenzerini nardi union 
tk set 
vk vi 
record 
ak tk 
ah vh vi 
vj 

notice instances type record may components specified type class 
open semantics records typical object oriented data models abiteboul kanellakis 
order characterize object oriented data models consider instances admissible schema 
definition cs ds object oriented schema 
database instance said legal respect declaration class 
cn type ds holds 
legal database instance type expressions schema determine finite set active values considered 
construction values limited depth type expressions 
relationship object oriented schemata aluni establish relationship aluni object oriented language 
done providing mapping object oriented schemata aluni knowledge bases 
interpretation domain aluni knowledge bases consists atomic objects instance object oriented schema assigned possibly structured value see definition vo need explicitly represent notions underlie object oriented language 
particular correspondence concepts classes explicitly account type structure class 
accomplished introducing aluni concepts abstractclass represent classes rectype settype represent corresponding types 
associations classes types induced class declarations basic characteristics types modeled means roles functional role value models association classes types role member specifying type elements set 
concepts representing types assumed mutually disjoint disjoint concepts representing classes 
constraints expressed adequate inclusion assertions part knowledge base going define 
define function maps type expression concept expression follows class mapped atomic concept 
type expression union 
tk mapped tk 
unifying class representation formalisms type expression set mapped settype member 
attribute mapped atomic role type expression record 
ak tk mapped rectype ak tk ak 
define aluni knowledge base corresponding object oriented schema 
definition aluni knowledge base corresponding objectoriented schema cs ds obtained follows abstractclass rectype settype cs 
value member 
consists assertions class declaration ds inclusion assertion abstractclass value rectype value settype value rectype class 
cn type abstractclass cn value 
translation observe inverse roles necessary formalization object oriented data models 
possibility referring inverse attribute generally ruled models 
strongly limits expressive power data model pointed papers see example albano ghelli orsini cattell 
note number restrictions limited value corresponds existence constraints functionality union general form example kee system 
example cont 
illustrate translation fragment object oriented schema 
corresponding aluni knowledge base shown 
calvanese lenzerini nardi abstractclass rectype settype string course teacher professor student gradstudent value member enrolls degree set assertions consists course abstractclass value rectype enrolls enrolls settype member student teacher teacher abstractclass value gradstudent professor gradstudent abstractclass student value rectype degree string degree abstractclass value rectype value settype value rectype aluni knowledge base corresponding object oriented schema discuss effectiveness translation 
observe aluni knowledge base resulting translation object oriented schema may admit models direct counterpart legal database instances precisely interpretation database instance viewed directed labeled graph case interpretation nodes domain individuals arcs labeled roles 
case database instance nodes object identifiers active values arc connects object identifier associated value case labeled value part sub structure representing set record value case labeled member attribute accordance type value 
legal database instance value represented sub structure form finite tree root set record values intermediate nodes objects identifiers leaves 
clearly substructure contain cycles 
conversely model may cycles involving nodes instances settype rectype roles different value 
call cycles bad 
model containing bad cycles put directly correspondence legal database instance 
due open semantics records adopt different translation bad cycles model ruled 
example consider object oriented schema containing single class declaration class type record record record unifying class representation formalisms translated value rectype rectype value rectype rectype rectype model containing cycles abstractclass value rectype rectype rectype 
shows model represented graph 
clarity named instances abstractclass instances rectype observe different types cycles graph 
cycle involving individuals cause problems contains arc labeled value part structure constituting complex value 
fact represents record value 
hand due bad cycle involving individual represents connected record infinite depth 
establish correspondence finite models possibly containing bad cycles legal instances object oriented schema achieved unfolding bad cycles model infinite trees 
obviously unfolding cycle infinite tree generates infinite number nodes correspond infinite database state 
restrict duplication individuals represent set record values instances settype rectype 
instances abstractclass duplicated process unfolding number remains finite 
set possible active values associated object identifier bound depth schema fact block unfolding bad cycles finite tree depth equal depth schema 
formally define depth object oriented schema definition type expression define depth inductively follows max depth ti union 
tk 
depth depth set max depth ti record 
ak tk 
depth object oriented schema defined maximum depth type expression value rectype calvanese lenzerini nardi rectype value rectype rectype rectype rectype rectype rectype unfolded version model introduce notion unfolding aluni interpretation 
definition object oriented schema translation aluni finite interpretation 
call unfolded version interpretation obtained follows individual part bad cycle unfold bad cycle infinite tree having root generating new individuals instances rectype settype 
nonnegative integer call unfolded version denoted interpretation obtained truncating depth infinite tree generated process unfolding 
example cont 
shows unfolded version model 
notice bad cycle unfolded infinite tree arcs labeled lead instance abstractclass duplicated 
correctness sanctioned proposition 
proposition object oriented schema depth exist mappings 
instances finite interpretations active values instances domain elements finite interpretations legal instance finite model type expression vj 
finite interpretations instances domain elements unfolded versions finite interpretations active values instances finite model legal instance concept translation type expression proof 
database instance define interpretation follows 
unifying class representation formalisms function mapping element vj distinct element defined set elements vj denote id rec set elements corresponding object identifiers record set values respectively 
interpretation atomic concepts defined follows corresponding class name abstractclass id rectype rec settype set interpretation atomic roles defined follows rec 
corresponding attribute name member set 
value prove type vj part thesis follows definition 
proof induction structure type expression 
base case class name 
vice versa cj inductive case record 
ak tk rectype ak tk ak 
assume iff ti 
show iff suppose 
ah vh vi 

induction hypothesis vi ti 
definition rectype vi ai 
roles corresponding attribute names functional 
conversely suppose 
exactly di di ai di ti definition 
ah vh vi di 

induction hypothesis vi 
record 
ak tk cases union 
tk set treated analogously 
finite model depth define legal database instance follows function mapping element distinct element conditions satisfied set elements abstractclass calvanese lenzerini nardi rectype di ai 
individual attribute 
ak dk 
settype di member 
individual member 
dk 
class name 
value 
prove concept translation type expression proof induction structure concept expression 
inductive part restrict attention case record types 
base case atomic concept 
vice versa inductive case rectype ak tk ak record 
ak tk 
assume ti iff 
show iff suppose rectype 
individual di di ti di ai construction 
ah vh induction hypothesis di conversely suppose 
ah vh vi 

induction hypothesis di vi ti 
definition rectype di ai 

roles corresponding attribute names functional remains show declaration ds class 
cn type 

follows fact contains assertion cn definition 
follows shown fact satisfies assertion abstractclass value 
fact unique individual value model argue part bad cycle coincide sub structure rooted formed individuals reached member roles corresponding attributes done 
sub structure expanded finite tree 
construction depth tree depth connections individuals preserved follows unifying class representation formalisms basic reasoning services considered object oriented databases subtyping check type denotes subset type legal instance type consistency check type consistent legal instance 
proposition show forms reasoning fully captured finite concept consistency finite concept subsumption aluni knowledge bases 
theorem object oriented schema type expressions translation holds 
consistent 

subtype 
proof 
proof analogous proof theorem proposition proposition 
correspondence aluni established theorem allows reasoning techniques developed aluni reason object oriented schemas 
observe reasoning object oriented models pspace hard bergamaschi nebel known algorithms exponential 
resorting aluni possible take account reasoning various extensions object oriented formalism 
extensions useful conceptual modeling proposed literature cattell barry 
considerations developed er model regard arbitrary boolean constructs classes applied object oriented setting provides disjunction admit form negation 
additional features added object oriented models inverses attributes cardinality constraints set valued attributes general forms restrictions values attributes 

related section briefly discuss results correspondence class formalisms techniques reasoning aluni class representation formalisms 
relationships class formalisms past attempts establish relationships class formalisms 
bl sius ck lenzerini nardi simi carry comparative analysis class languages attempt provide unified view 
analysis clear difficulties arise identifying common framework formalisms developed different areas 
papers address problem 
example analysis relationships frame languages types programming languages carried borgida bergamaschi schewe schmidt frame languages enrich deductive capabilities semantic object oriented data models 
calvanese lenzerini nardi soda study reasoning object oriented data models presenting translation dls style discussed section 
proposed translation applicable case contains recursive class declarations 
limitation bergamaschi nebel formalism derived dls model complex objects algorithm computing subsumption classes provided 
survey application dls problem data management borgida application task data modeling reasoning techniques derived correspondences sections discussed detail calvanese lenzerini nardi 
proposals integrate object oriented logic programming paradigms kifer wu kifer lausen wu 
proposals directly related aim providing mechanisms computing structured objects means reasoning conceptual object oriented representation domain interest 
reasoning aluni class representation formalisms aluni equipped techniques reason respect unrestricted respect finite models 
briefly sketch main ideas underlying reasoning contexts 
detailed account reasoning techniques carried calvanese 
unrestricted model reasoning remind reasoning knowledge base respect unrestricted models amounts check concept consistency determine knowledge base admits possibly infinite model concept nonempty extension concept subsumption determine extension concept contained extension concept model including infinite ones knowledge base 
method reason aluni respect unrestricted models exploits known correspondence dls propositional dynamic logics kozen tiuryn class logics specifically designed reason programs 
correspondence pointed schild relies substantial similarity interpretative structures formalisms allows exploit reasoning techniques developed reason corresponding dls 
particular description language aluni includes construct inverse roles correspondence resort converse pdl variant pdl includes converse programs kozen tiuryn 
presence number restrictions direct correspondence rely traditional techniques reasoning 
encoding techniques developed allow eliminate number restrictions knowledge base preserving concept consistency concept subsumption de giacomo lenzerini 
encoding applicable knowledge bases formulated expressive variants dls particular reduce unrestricted model reasoning aluni knowledge unifying class representation formalisms bases concept consistency concept subsumption deciding satisfiability formula converse pdl 
reasoning converse pdl decidable exptime kozen tiuryn encoding polynomial de giacomo lenzerini obtain exptime decision procedure unrestricted concept consistency concept subsumption aluni knowledge bases 
simplified form encoding applied decide unrestricted concept consistency aluni calvanese 

finite model reasoning remind reasoning knowledge base respect finite models amounts check finite concept consistency finite concept subsumption finite models knowledge base considered 
finite model reasoning techniques reduction reasoning applicable 
pdl formula corresponding aluni knowledge base contains constructs converse programs corresponding inverse roles functionality direct inverse programs formula variant pdl finite model property vardi 
encoding functionality obtains converse pdl formula converse pdl finite model property fischer ladner formula satisfiable finitely satisfiable 
shows encoding number restrictions particular encoding functionality preserving unrestricted satisfiability preserve finite satisfiability de giacomo lenzerini 
finite model reasoning aluni adopt different technique idea separating reasoning process distinct phases see calvanese full details 
phase deals constructs number restrictions builds expanded knowledge base constructs embedded implicitly concepts roles 
second phase assertions involving number restrictions derive expanded knowledge base system linear inequalities 
system defined way solutions certain type acceptable solutions directly related finite models original knowledge base 
particular acceptable solution directly deduce cardinalities extensions concepts roles possible finite model 
proposed method allows establish aluni exptime decidability finite concept consistency special cases finite concept subsumption 
resorting complicated encoding obtain exptime decision procedure finite concept subsumption aluni general calvanese 
reasoning respect finite models investigated context dependency theory databases 
shown casanova fagin papadimitriou relational model functional inclusion dependencies interact dependency implication problem finite case differs unrestricted case 
implication problem arbitrary functional inclusion dependencies undecidable chandra vardi mitchell functional unary inclusion dependencies solvable polynomial time finite unrestricted case cosmadakis 
calvanese lenzerini nardi consistency respect finite models schemata expressed enriched entity relationship model cardinality constraints shown decidable polynomial time lenzerini 
calvanese lenzerini extend decidability result include isa relationships calvanese lenzerini show exptime decidability reasoning expressive object oriented model 
algorithm computing refinement ordering types analogue concept hierarchy framework object oriented model discussed richard 
reasoning strict sublanguage aluni obtained omitting inverse roles number restrictions exptime hard calvanese 
known algorithms deciding unrestricted concept consistency subsumption finite concept consistency essentially optimal 

unified framework representing information class structures reasoning 
pursued goal looking various class formalisms proposed different fields computer science frame systems knowledge representation semantic object oriented data models databases rephrasing framework description logics 
resulting description logic called aluni includes combination constructs addressed constructs previously considered separately 
major achievement demonstration class formalisms precise characterization means powerful fragment order logic regarded essential core class representation formalisms belonging families mentioned 
consequences 
formalisms considered enriched constructs originating formalisms treated general framework 
sense reported provides common powerful representation formalism may contribute significant developments languages belonging families 
example usage inverse roles concept languages greatly enhances expressivity roles combination isa number restrictions union enriches reasoning capabilities available semantic data models 
secondly comparison class formalisms fields knowledge representation conceptual data modeling feasible address development reasoning tools support conceptual modeling calvanese 
fact reasoning capabilities especially important complex scenarios arising heterogenous database applications data warehousing 
line motivations developing systems expressive description logics horrocks horrocks patel schneider lead extending language description logics support information integration specifically conceptual modeling data warehouses calvanese de giacomo lenzerini nardi rosati 
unifying class representation formalisms abiteboul kanellakis ramaswamy waller 

method schemas 
tech 
rep cs brown university 
earlier version appeared proc 
th symp 
principles database systems pods 
abiteboul kanellakis 

object identity query language primitive 
proceedings acm sigmod international conference management data pp 

abrial 

data semantics 

eds data base management pp 

north holland publ 
amsterdam 
albano ghelli orsini 

relationship mechanism strongly typed object oriented database programming languages 
proceedings seventeenth international conference large data bases vldb pp 
barcelona 
soda 

describing database objects concept language environment 
ieee transactions knowledge data engineering 
atzeni parker jr 

formal properties net knowledge representation schemes 
proceedings second ieee international conference data engineering icde pp 
los angeles 
baader 

augmenting concept languages transitive closure roles alternative terminological cycles 
proceedings twelfth international joint conference artificial intelligence ijcai sydney australia 
baader 

automata theory characterizing semantics terminological cycles 
annals mathematics artificial intelligence 
batini ceri navathe 

conceptual database design entity relationship approach 
benjamin cummings publ 
menlo park california 
bergamaschi nebel 

acquisition validation complex object database schemata supporting multiple inheritance 
applied intelligence 
bergamaschi 

taxonomic reasoning conceptual design 
acm transactions database systems 
bl sius ck 
eds 

sorts types artificial intelligence vol 
lecture notes artificial intelligence 
springer verlag 
borgida 

type systems knowledge representation natural semantics specifications description logics 
journal intelligent cooperative information systems 
borgida 

description logics data management 
ieee transactions knowledge data engineering 
calvanese lenzerini nardi borgida 

relative expressiveness description logics predicate logics 
artificial intelligence 
borgida 

adding functional dependencies description logics 
proceedings fifth international conference deductive object oriented databases dood 
brachman levesque 

tractability subsumption frame description languages 
proceedings fourth national conference artificial intelligence aaai pp 

brachman levesque 
eds 

readings knowledge representation 
morgan kaufmann los altos 
brachman mcguinness patel schneider resnick borgida 

living classic kl language 
sowa 
ed principles semantic networks pp 

morgan kaufmann los altos 
franconi tessaris 

implementing testing expressive description logics preliminary report 
borgida lenzerini nardi nebel 
eds working notes description logics workshop technical report rap dipartimento di informatica sistemistica universit di roma la sapienza pp 
rome italy 
buchheit donini nutt schaerf 

refined architecture terminological systems terminology schema views 
artificial intelligence 
buchheit donini schaerf 

decidable reasoning terminological knowledge representation systems 
journal artificial intelligence research 
calvanese 

finite model reasoning description logics 
aiello doyle shapiro 
eds proceedings fifth international conference principles knowledge representation reasoning kr pp 

morgan kaufmann los altos 
calvanese 

reasoning inclusion axioms description logics algorithms complexity 
wahlster 
ed proceedings twelfth european conference artificial intelligence ecai pp 

john wiley sons 
calvanese 

unrestricted finite model reasoning class representation formalisms 
ph thesis dipartimento di informatica sistemistica universit di roma la sapienza 
available www dis uniroma pub thesis ps gz 
calvanese de giacomo lenzerini nardi rosati 

description logic framework information integration 
proceedings sixth international unifying class representation formalisms conference principles knowledge representation reasoning kr pp 

calvanese lenzerini 

making object oriented schemas expressive 
proceedings thirteenth acm sigact sigmod sigart symposium principles database systems pods pp 
minneapolis 
acm press addison wesley 
calvanese lenzerini 

interaction isa cardinality constraints 
proceedings tenth ieee international conference data engineering icde pp 
houston texas 
ieee computer society press 
calvanese lenzerini nardi 

unified framework class representation formalisms 
doyle sandewall torasso 
eds proceedings fourth international conference principles knowledge representation reasoning kr pp 
bonn 
morgan kaufmann los altos 
calvanese lenzerini nardi 

description logics conceptual data modeling 
chomicki saake 
eds logics databases information systems pp 

kluwer academic publisher 
casanova fagin papadimitriou 

inclusion dependencies interaction functional dependencies 
journal computer system sciences 
cattell 
ed 

object database standard odmg 
morgan kaufmann los altos 
release 
cattell barry 
eds 

object database standard odmg 
morgan kaufmann los altos 
chandra vardi 

implication problem functional inclusion dependencies undecidable 
siam journal computing 
chen 

entity relationship model unified view data 
acm transactions database systems 
cosmadakis kanellakis 

functional inclusion dependencies graph theoretical approach 
kanellakis preparata 
eds advances computing research vol 
pp 

jai press 
cosmadakis kanellakis vardi 

polynomial time implication problems unary inclusion dependencies 
journal acm 
de giacomo lenzerini 

boosting correspondence description logics propositional dynamic logics 
proceedings twelfth national conference artificial intelligence aaai pp 

aaai press mit press 
calvanese lenzerini nardi de giacomo lenzerini 

concept language number restrictions fixpoints relationship calculus 
proceedings eleventh european conference artificial intelligence ecai pp 

di battista lenzerini 

deductive entity relationship modeling 
ieee transactions knowledge data engineering 
donini lenzerini nardi nutt 

complexity concept languages 
information computation 
donini lenzerini nardi nutt schaerf 

queries rules definitions 
foundations knowledge representation reasoning 
springer verlag 
donini lenzerini nardi schaerf 

reasoning description logics 
brewka 
ed principles knowledge representation studies logic language information pp 

csli publications 
donini nardi rosati 

non order features concept languages 
gori soda 
eds proceedings fourth conference italian association artificial intelligence ai ia vol 
lecture notes artificial intelligence pp 

springer verlag 


cardinality concepts entity relationship modeling 
proceedings tenth international conference entity relationship approach er pp 

fikes kehler 

role frame representation reasoning 
communications acm 
fischer ladner 

propositional dynamic logic regular programs 
journal computer system sciences 
minker 

numerical dependencies 
gallaire minker nicolas 
eds advances database theory ii 
plenum publ 
new york 
hayes 

logic frames 

ed frame conceptions text understanding pp 

walter de gruyter republished brachman levesque 
horrocks 

expressive description logic fact fiction 
proceedings sixth international conference principles knowledge representation reasoning kr pp 

horrocks patel schneider 

optimizing description logic subsumption 
journal logic computation 
hull king 

semantic database modelling survey applications research issues 
acm computing surveys 
unifying class representation formalisms karp 

design space knowledge representation systems 
tech 
rep sri ai technical note sri international menlo park ca 
karp myers gruber 

generic frame protocol 
proceedings fourteenth international joint conference artificial intelligence ijcai vol 
pp 
montreal canada 
kifer lausen wu 

logical foundations object oriented languages 
journal acm 
kifer wu 

logic programming complex objects 
journal computer system sciences 
kim 

object oriented databases 
mit press 
kim lochovsky 
eds 

object oriented concepts databases applications 
acm press addison wesley new york 
kozen tiuryn 

logics programs 
van leeuwen 
ed handbook theoretical computer science formal models semantics pp 

elsevier science publishers north holland amsterdam 
richard 

modeling complex structures object oriented databases 
proceedings eighth acm sigact sigmod sigart symposium principles database systems pods pp 

lehmann 
ed 

semantic networks artificial intelligence 
pergamon press oxford 
lenzerini nardi simi 
eds 

inheritance hierarchies knowledge representation programming languages 
john wiley sons chichester 
lenzerini 

satisfiability dependency constraints entityrelationship schemata 
information systems 
mitchell 

implication problem functional inclusion dependencies 
information control 


classes instances 
journal intelligent cooperative information systems 
nebel 

terminological cycles semantics computational properties 
sowa 
ed principles semantic networks pp 

morgan kaufmann los altos 
schewe schmidt 

term subsumption type constructors 
yesha 
ed proceedings international conference information knowledge management cikm pp 
baltimore 
calvanese lenzerini nardi schild 

correspondence theory terminological logics preliminary report 
proceedings twelfth international joint conference artificial intelligence ijcai pp 
sydney australia 
schild 

terminological cycles propositional calculus 
doyle sandewall torasso 
eds proceedings fourth international conference principles knowledge representation reasoning kr pp 
bonn 
morgan kaufmann los altos 
schmidt schau smolka 

attributive concept descriptions complements 
artificial intelligence 
sowa 
ed 

principles semantic networks 
morgan kaufmann los altos 


database modeling design entity relationship approach 
morgan kaufmann los altos 
thalheim 

fundamentals cardinality constraints 
tjoa 
eds proceedings eleventh international conference entity relationship approach er pp 

springer verlag 
thalheim 

fundamentals entity relationship model 
springer verlag 
vardi 

taming converse reasoning way computations 
parikh 
ed proc 
th workshop logics programs vol 
lecture notes computer science pp 

springer verlag 
woods schmolze 

kl family 
lehmann 
ed semantic networks artificial intelligence pp 

pergamon press 
published special issue computers mathematics applications volume number 
ye parent spaccapietra 

cardinality consistency derived objects dood systems 
loucopoulos 
ed proceedings thirteenth international conference entity relationship approach er vol 
lecture notes computer science pp 
manchester uk 
springer verlag 

