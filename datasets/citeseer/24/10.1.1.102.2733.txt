quality service architecture combines resource reservation application adaptation ian foster alain roy mathematics computer science division department computer science argonne national laboratory university chicago argonne il chicago il reservation adaptation known effective techniques enhancing performance network applications 
techniques limitations particularly dealing high bandwidth dynamic flows fixed capability reservations tend wasteful resources hinder graceful degradation face congestion adaptive techniques fail congestion excessive 
propose approach quality service qos overcomes difficulties combining features reservations adaptation 
approach combination online control interfaces resource management sensor permitting online monitoring decision procedures embedded resources enable rich variety dynamic feedback interactions applications resources 
describe qos architecture gara extended support mechanisms examples application level adaptive strategies show framework permit applications adapt resource requests behavior response online sensor information 
network applications need achieve reliable performance typically reservations adaptation 
reservations applications usually specify quality service qos requirements connection established change subsequently qos system turn guarantees modulo system failures reservation reduced lifetime application 
contrast applications adaptation reservations adapt network conditions hand responding form feedback explicit notification network conditions implicit noticing bandwidth low 
adaptation may occur application detects problem application notified problem may exist 
reservations adaptation proven effective situations significant limitations particularly dealing high applications featuring high bandwidth dynamic flows 
fixed capability reservations waste bandwidth permit graceful degradation application performance resource management policies mandate changes allocations 
adaptive techniques inevitably published proceedings international workshop quality service iwqos pp 
june 
volker sander central institute applied mathematics forschungszentrum gmbh germany fail congestion reduces available resources acceptable limits 
describe approach qos combines features reservations adaptation address difficulties just noted 
core approach qos architecture resources enhanced online control interfaces allow applications agents acting behalf modify resource characteristics reservations dynamically sensors allow applications agents detect adaptation required decision procedures support expression rich set resource management policies 
mechanisms turn enable wider range application level adaptation strategies supported architectures 
example online control reservations allows applications request premium service adaptive techniques fail deliver monitoring reservations change result decision procedures embedded resource managers allows graceful degradation application performance response preemption 
explore ideas incorporated mechanisms qos architecture developed previous globus architecture reservation allocation gara 
completed prototype implementation enhanced architecture deployed local national testbeds 
hypothesize mechanisms associated control information flows provided extended gara architecture exploited obtain efficient resource usage purely reservation application approaches applications vary reservations rates provide flexible resource allocation strategies resources change allocations course reservation deliver robust application performance applications detect respond changes allocations resource state 
step testing hypothesis gara mechanisms implement different adaptive strategies 
flow specific packet loss sensor adapt bandwidth requests qos system order meet performance targets udp tcp flows respectively third uses sensor provides information changes reservation level result preemption adapt transmission rate bulk data transfer applications 
case novel decision procedures demonstrate deliver interesting adaptive behaviors combination online monitoring control 
rest review qos requirements high applications describe enhanced gara architecture adaptive strategies experimental studies performed evaluate effectiveness 
conclude brief discussion related 
ii 
motivation high applications interested providing qos mechanisms high network applications individual flows high bandwidth megabits second mb tens hundreds mb may complex mixes flows low bandwidth high bandwidth low latency high latency flows may change requirements dynamically lifetime 
applications characteristics arise areas distance visualization analysis scale scientific databases online control scientific instrumentation 
illustrative purposes examine example detail 
consider users geographically separate locations exploring collaboratively dimensional visualization experimental data 
systems number streams fairly constant rate low moderate bandwidth audio video streams communication jitter latency sensitive streams tracking data indicating user movements virtual space 
addition streams higher bandwidth variable rates visualization data cases database updates 
visualization data calculated data set representation set polygons rendering transmitted 
actual amount data sent depends data visualized user actions may include zooming movement space time 
contention shared resources disk cpu affect transmission rate 
characteristics place substantial demands network infrastructure applications 
example consider situation sessions operation simultaneously groups concurrently attempting perform high speed bulk data transfers network infrastructure stage data required experiment day 
today protocols services group obtain acceptable service 
believe concerns require resource providers able specify implement flexible resource allocation policies 
example situation just noted resource providers allocate resources different sessions bulk data transfers differentially 
session priority sessions guaranteed minimum service 
bulk data transfers lowest instantaneous priority guaranteed service terms terabytes hour metric 
believe policy driven framework sort effective applications provided information control flows required detect adapt policy driven changes resource allocations 
example session respond reduced increased resource availability reducing increasing video rates introducing eliminating data compression noncritical users bulk data transfer reduce increase sending rate 
architecture enables sorts adaptation 
iii 
reservation adaptation combined effective adaptive control requires distinct mechanisms 
language actuators permit online control example resource allocations application behavior sensors permit monitoring example resource allocations application behavior decision procedures allow entities respond sensor information invoking actuators :10.1.1.48.1521
illustrated elements act concert achieve adaptive control 
example sensor signal nonzero loss rate associated flow router 
decision procedure associated application execute determine reduce sending rate alternatively generate request resource manager create increase reservation flow invoking actuator 
section provide overview gara architecture explain extended support mechanisms 
gara overview globus architecture reservation allocation provides advance reservations management quality service different types resources including networks cpus disks 
gara system comprises number resource managers implement reservation control monitoring operations specific resource 
resource managers implemented variety resource types term resource manager specific bandwidth broker favored networking literature 
uniform interfaces allow applications express qos needs different types resources similar ways simplifying development qos management strategies 
mechanisms provided globus toolkit secure authentication authorization requests resource managers 
information service allows applications discover resource properties current availability 
described article involves just single type resource manager uses differentiated ser 
qos resource manager application sender admission control decision procedure reservation actuator create modify reservation request adaptation loss rate sensor non zero loss rate indicator decision procedure bulk transfer decision procedure qos enforcement edge router network application data application receiver fig 

example actuators sensors decision procedures may combined provide adaptive control 
illustrate reservation adaptation application occuring result packet loss notification received router resource manager 
operation strategy described text bulk transfer decision procedure shown 
vices mechanisms implement network qos 
resource manager uses expedited forwarding hop behavior phb specified internet engineering task force ietf working group differentiated services provide premium service 
careful admission control edge network possible build network qos system reasonably strong bandwidth guarantees traffic treated aggregate core network 
resource manager enables reservation requests see configuring routers controls 
particular configures ingress routers classify police mark potentially shape packets belong flow reservation authorized normally done differentiated services 
expedited forwarding hop behavior drops packets exceed reservation allows small bursts excess traffic token bucket mechanism 
actuators online control prerequisite adaptation support online control resource characteristics 
interested online control application behavior topic scope article 
gara supports requirement directly control functions allow application agent acting behalf subsequently modify qos reservations 
case network resources considered article application request resource manager specifies start time duration desired reservation ip addresses hosts communicating bandwidth required reservation network protocol tcp udp 
reservations may advance information may known time reservation 
particular application may know port numbers communication network communications 
gara provides bind operation simultaneously claims tion provides run time information 
immediate advance reservations supported 
advance reservations simplify scheduling scarce resources help ensure resources available important events scientific experiments 
gara allows third parties monitor modify reservations behalf application 
capability allows separate adaptation logic application proper case advance reservations means application need running reservation 
brevity frame subsequent discussion applications manipulate reservations practice third party substituted 
sensors second requirement adaptive control able determine state system components detect state changes 
capability provided sensors associated system entities entities subscribe notifications provided form event service callback mechanism 
implemented sensors gara prototype 
loss rate sensor 
sensor provides applications information packet loss rate network 
information serve indicate application sending fast inadequate reservation 
measure packet loss rates hop router router initial policing performed differentiated services implementation 
resource manager periodically queries router classification policing role able provide statistics number packets exceeded flow reservation 
query router returns number packets conformed reservation dropped pc number packets exceeded reservation dropped pe quantities time statistics queried 
resource manager detects nonzero pe value generates callback notify subscribed processes packet loss occurred 
callback specifies estimated loss percentage currently unallocated bandwidth application quantity guide deciding respond packet loss notification attempting increase reservation vs changing behavior 
computing estimated bandwidth deal complicating factor router uses token bucket size pb allow small bursts 
router updates statistics periodically roughly seconds resource manager know token bucket full empty statistics gathered 
avoid persistent underestimates loss rates assume token bucket half full reduce number conforming packets correspondingly 
adjustment reflected formula estimated fraction packets dropped pe pc pb pe describe section iv sensor modify qos reservations meet application requirements udp tcp flows 
reservation change sensor 
second sensor publish information changes resource allocations 
reason changes described subsection note simply sensor capable communicating changes interested entities 
decision procedures third component adaptive control architecture comprises decision procedures invoke actuators response sensor data 
environment decision procedures occur multiple locations 
clearly arise applications give examples 
decision procedures occur resource managers lead interesting interactions 
decision procedures may invoked gara resource manager number points 
authentication incoming request authorized executed 
decision procedures may invoked stages example determine request granted instance reallocate resources second instance newly authorized reservation available resources 
explore ideas demonstrate ability incorporate decision procedures resource managers implemented simple highly effective procedure 
bulk data transfer procedure 
noted bulk data transfer bdt operations service requirements expressible terms terabytes hour mb satisfying requirements face congestion require premium service need pre applications requiring premium service 
bdt decision procedure designed exploit observation 
effect implements classes premium service foreground background single premium service class 
applying simple decision rules processing requests create bind terminate reservations 

create foreground reservation creation foreground reservation authorized time reservation period sum foreground reservations exceed total available premium bandwidth 

bind foreground reservation binding foreground reservation results requested bandwidth allocated appropriate flow 
necessary premium bandwidth preempted background flow callbacks generated notify interested parties 

cancel reservation freed bandwidth allocated background flows inadequate allocations exist callbacks generated 

create background reservation creation background reservation allowed 

bind background reservation binding reservation results fair share unallocated premium bandwidth allocated appropriate flow 
see description fair share calculated 
describe application reservation change sensor triggered decision procedure achieve sustained bdt rates impeding foreground flows 
iv 
application level adaptation procedures describe application level adaptation procedures developed date 
gara testbed experiments reported performed testbed shown 
testbed consists cisco routers interconnected mb oc atm 
hosts connected routers mb switched ethernet 
hosts tests sun ultra 
addition virtual circuits remote sites permit wide area experiments 
cisco modular qos command line interface mqc different purposes 
ingress interfaces network classify police mark packets 
interior network enable weighted fair queuing wfq give priority marked packets 
adaptive qos reservations udp flows describe adaptive techniques determine bandwidth reservation required support particular udp flow 
motivation adaptation nasa testbed ultra competitive source ultra premium source cisco lbnl esnet testbed anl cisco linux linux cisco emerge testbed ultra competitive destination ultra premium destination univ wisconsin madison fig 

gara network testbed garnet 
core testbed consists cisco routers 
computers testbed shown 
note connections wide area networks 
application developers knowledge qos mechanisms principles qos parameters determined 
show information provided simple packet loss rate sensor guide decision procedure sets bandwidth reservations adaptively increasing reservations loss rates reach zero 
decision procedure incorporated application separate agent 
decision procedure uses information provided packet loss rate sensor described section iii 
recall sensor periodically generates estimate fraction packets dropped fraction packets conformed reservation 
decision procedure calculates reservation needed packets dropped follows rn ro rn ro ro old reservation rn new reservation 
evaluate effectiveness strategy performed experiments follows 
order obtain replicable experiment application test program sends udp traffic user specified rate testbed 
results similar experiments superimposed 
case application initial reservation kilobytes second kb sent data higher rate case kb second case kb described router classified marked traffic 
router allows univ chicago univ illinois small bursts application initially able send slightly faster reservation allowed data rate settled constant kb loss rate sensor implemented gara resource manager queries router seconds provides feedback application query 
query reported application wish gather statistically sufficient data 
resource manager application synchronized way surprised feedback arrives slightly different times cases seconds seconds respectively 
clear udp application able adapt quickly experiments 
poor temporal resolution offered routers means adaptation need 
example router statistics gathered just series packets starting dropped unrepresentative result may reported application 
problem compensated round adaptation 
addition router updates statistics seconds limits frequency resource manager check 
adaptive qos reservations tcp flows surprised possible determine udp transmission rates monitoring packet loss information udp perform congestion control 
implementing comparable adaptive strategy tcp significantly complex tcp self clocking mechanisms 
data application attempts write socket buffer specific rate may transported immediately tcp sliding window protocol requires kb received bw reservation received bw reservation time fig 

performance udp reservation adaptation strategy different cases 
case application sending kb second sending kb cases initial reservation approximately kb corrected single round adaptation 
received data sent 
tcp slows sending rate believes encountered congestion 
case tcp encountered congestion aggressive qos policing mechanism 
tcp extensively applications interest important support tcp 
difficulties decision procedure tcp attempt derive transmission rate packet loss rate ratio 
uses search procedure determine correct rate 
packet loss rate sensor signals packets dropped simply double reservation 
reservation large perform binary search current reservation previous reservation arrive reservation works changed previous reservation percent 
illustrates results obtain heuristic 
see search takes time adapt eventually comes close correct value 
time delay largely statistics dropped packets reported seconds routers 
clearly decreasing interval improve adaptation time 
relatively long adaptation time quite acceptable longlived target applications 
couple possibilities improving search 
possibility change initial doubling estimating correct percentage dropped packets udp case 
performed extensive experiments techniques succeeded identifying estimate multiplier tcp complex behavior 
proposes modifying tcp windowing algorithm aware reservation bandwidth kb time actual bandwidth reservation fig 

example search reservation rate strategy determines correct reservation tcp application 
application doubled reservation request twice narrowed reservation binary search 
difference gross net reservations due packet overheads 
rates 
may possible adapt quickly monitoring closer application 
particular application instrumented tcp library measure rate application attempting send adjustment adapt quickly 
strategy requires modifications application heuristics advantage usable third party agent 
bulk data transfer application third example application level adaptation procedure uses bdt reservation change sensor guide rate adaptation bdt applications 
described section iii sensor signals changes flow reservations due preemption termination higher priority foreground flows 
decision procedure simply adapts transmission rate tcp bulk data transfer application order achieve throughput close bandwidth allocated bdt flow 
note absence decision procedure achieved throughput tend extremely low preemption lowers background flow reservation packets exceed reservation dropped triggering tcp backoff algorithms 
experiments decision procedure incorporated qos aware tcp bdt application 
shows results obtained wide area testbed argonne national lawrence berkeley national 
time background bdt application began assigned premium bandwidth mb approximately times foreground reservation began bdt reservation reduced 
foreground reservations ended background reservation increased 
notice time competitive udp traffic began interfere foreground background reservations 
bandwidth kbps background foreground competitive time fig 

example bulk transfer wide area testbed 
see text details 
results show successful adapting bdt flow response information concerning preemption foreground flows 
apart artifacts bdt flow maintains data transfer rate close amount premium bandwidth allocated flow 
artifacts explained follows 
see time bdt reservation reduced bdt rate drops momentarily expected recovers 
attribute behavior fact tcp shrinks window size packets dropped reservation changed application adapts falling slow start phase congestion avoidance phase 
addition application large socket buffers obtain high performance wide area testbed enters slow start mode packets dropped reservation decreases socket buffers quickly fill 
tcp increases congestion window size exponentially slow start phase data immediately available send tcp sends data increasingly larger bursts socket buffer emptied 
congestion window size reflect actual amount data transmitted length slow start phase drop long data initially sent rapidly updated router configuration forcing packets dropped tcp go slow start mode congestion window appropriate 
effect magnified larger bandwidth delay product larger socket buffers mb case wide area network 
related great deal research rate adaptation network applications reservation mechanisms 
example goel describe modular framework provides feedback network streams cpu scheduling 
takes terminology actuators sensors decision procedures feedback infrastructure autopilot dynamic performance tuning various settings including approach follows concept controller application proposed :10.1.1.48.1521
implementing qos aware middleware addressed projects 
adaptive quality service architecture distributed multimedia applications aqua introduces interfaces qos measurements negotiation 
focuses atm connections ensure qos competition system 
quartz architecture provides corba qos framework 
introduces agent adaption resource trader called balancing agent tries compensate loss resources increasing amount requested 
vi 
argued advanced network applications bulk data transfer distance visualization benefit mechanisms enable coordinated reservation adaptation support dynamic feedback entities involved making resource management decisions 
described implementation mechanisms gara resource management architecture 
implementation sensors associated resource resource managers permit application level monitoring resource state reservation status online control mechanisms enable adaptive control reservations 
mechanisms develop different application level adaptive control mechanisms loss rate information adapt reservations uses reservation state information adapt transmission rate 
find initial results encouraging recognize remains done 
example experiment sophisticated resource side allocation policies determine extent applications adapt policies interesting ways 
complex environments performance feedback adaptation complex relevant sensor information may easily accessible 
experimentation wider range applications required 
acknowledgments gratefully acknowledge assistance linda winkler testbed experiments andy adamson wrote udp traffic generator 
numerous discussions colleagues gary hoo bill johnston carl kesselman steven tuecke helped shape approach quality service 
cisco systems equipment donation allowed creation gar net testbed 
supported part mathematical information computational sciences division subprogram office advanced scientific computing research department energy contract eng defense advanced research projects agency contract national science foundation nasa information power grid program 
wolf steinmetz concepts reservation advance kluwer journal multimedia tools applications vol 
may 
ferrari gupta distributed advance reservation real time connections acm springer verlag journal multimedia systems vol 

li nahrstedt control middleware framework quality service adaptations ieee journal selected areas communications special issue service enabling platforms june 
li nahrstedt middleware qos profiling services configuring adaptive applications proceedings ifip international conference distributed systems platforms open distributed processing middleware 
wang schulzrinne comparison adaptive internet multimedia applications institute electronics information communication engineers transactions vol 
pp 
june 
schulzrinne loss delay adjustment algorithm tcp friendly adaptation scheme proc 
international workshop network operating system support digital audio video nossdav july 
goel steere pu walpole adaptive resource management modular feedback control tech 
rep oregon graduate institute computer science engineering jan 
boudec ferrari scalable resource reservation internet ieee conference protocols multimedia systems multimedia networking nov 
rajkumar lee lehoczky siewiorek resource allocation model qos management th ieee real time system symposium 
foster kesselman lee lindell nahrstedt roy distributed resource management architecture supports advance reservations allocation international workshop quality service pp 
june 
foster roy sander winkler quality service high applications tech 
rep argonne national laboratory 
www mcs anl gov qos qos papers htm 
foster kesselman eds grid blueprint computing infrastructure 
morgan kaufmann publishers 
foster von laszewski kesselman distance visualization data exploration grid ieee computer magazine pp 
dec 
vetter reed autopilot adaptive control distributed applications proc :10.1.1.48.1521
th ieee symp 
high performance distributed computing ieee computer society press 
nichols jacobson zhang bit differentiated services architecture internet internet rfc july 
blake black carlson davies wang weiss architecture differentiated services internet rfc 
feng kandlur saha shin understanding improving tcp performance networks minimum rate guarantees ieee acm transactions networking vol 
pp 
apr 
reddy realizing throughput guarantees differentiated services network ieee int 
conf 
multimedia computing systems pp 
june 
lakshman yavatkar integrated cpu network qos management system intel architecture labs university kentucky computer communications journal special issue quality service distributed systems vol 
apr 
cahill delivering qos open distributed systems proceedings th ieee workshop trends distributed computing systems dec 
