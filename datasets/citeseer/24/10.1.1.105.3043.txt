arxiv cond mat cond mat stat mech apr computational complexity physicists inst 
theor 
physik otto von univ pf magdeburg germany lecture notes informal theory computational complexity links quantum computing statistical mechanics 
motivation compared traditionally close relationship physics mathematics exchange ideas methods physics computer science barely takes places 
interactions go fortran programming quest faster computers successful provided surprising insights fields 
holds particularly mutual exchange statistical mechanics theory computational complexity 
branch theoretical computer science known computational complexity concerned classifying problems computational resources cpu time memory required solve 
lead precisely defined notions tractable intractable problems 
appears notions transferred problem analytical solubility models statistical physics explaining extent example ising model exactly soluble dimensions sec 

success theory computational complexity pessimistic attitude problem tractability defined worst possible instance 
quite worst case scenario differs considerably typical case averaged reasonable ensemble instances 
common observation hard problems typically easy solve 
get real hard instances parameters underlying ensemble carefully tuned certain critical values 
varying parameters region leads abrupt changes typical complexity similar abrupt changes associated phase published computing science engineering may june stephan physik uni magdeburg de transitions physical systems 
phase transitions physical computational systems best studied framework statistical mechanics sec 

apart phase transitions statistical mechanics offer means general probabilistic analysis computational problems 
usual way formulate optimization problem spin glass analyze low temperature properties 
physical approach yield results go results obtained traditional methods sec 

exciting link physics computer science provided quantum computing 
theoretical evidence computers quantum systems computational devices computers classical devices 
hope problems intractable classical computer tractable put quantum computer 
results shor celebrated quantum algorithm factorization hope real breakthrough missing 
obviously knowledge computational complexity helps understand promises limitations quantum computers sec 

notes directed physicists little knowledge computational complexity 
course informal field see corresponding chapters textbooks algorithms 
deeper understanding field referred classical textbooks garey johnson papadimitriou :10.1.1.32.420
measure complexity algorithms computational complexity problem measure computational resources typically time required solve problem 
measured computed time particular algorithm uses solve problem 
time turn depends implementation algorithm computer program running 
theory computational complexity provides notion complexity largely independent implementational details computer hand 
precise definition requires considerable formalism 
surprising related highly non trivial question touches mathematics mean saying problem solvable 
thinking question leads del incompleteness theorem turing machines church turing thesis computable functions 
see entertaining topics written physicist 
adopt informal pragmatic point view 
problem solvable solved computer program written favourite programming language 
running time time complexity program defined care serve meaningful measure complexity problem 
time complexity general running time depends size problem specific input data instance 
sorting numbers takes longer sorting numbers 
sorting algorithms run faster input data partially sorted 
minimize dependency specific instance consider worst case time complexity max running time algorithm input data arbitrary units maximum taken problem instances size worst case time upper bound observable running time 
measure time complexity unit time independent clock rate specific cpu 
unit provided time takes perform elementary operation addition integer numbers 
measuring time unit means counting number elementary operations executed algorithm 
number turn depends strongly implementation details algorithm smart programmers optimizing compilers try reduce 
consider precise number elementary operations asymptotic behavior large values denoted landau symbols say order write exist positive constants cg 
say order write exist positive constants 
multiplying matrixes requires multiplications textbook formula 
mean problem multiplying matrices complexity 
textbook formula particular algorithm time complexity algorithm upper bound inherent complexity problem 
fact faster matrix multiplication algorithms complexity decades current record 
product matrix entries smaller open question lower bound achieved algorithm 
problem upper bound algorithmic complexity meets inherent lower bound sorting items 
general assumption comparisons pairs items source information items shown log lower bound number comparisons sort items worst case chap 

bound met algorithms heapsort mergesort 
problem size measure time complexity depends somewhat ambiguous notion problem size 
matrix multiplication example tacitly took number rows input matrix natural measure size 
number elements speed algorithm changing single line program code 
see unambiguous definition problem size required compare algorithms 
computational complexity problems solved polynomial algorithm algorithm time complexity lumped called tractable 
problems solved algorithms non polynomial running time lumped called intractable 
practical theoretical reasons coarse classification 
theoretical advantages distinguish algorithm form afford stick natural measure problem size 
tractable intractable problems polynomial vs exponential growth practical point view exponential algorithm means hard limit accessible problem size 
suppose current equipment solve problem size just schedule 
algorithm complexity problem size need twice time bringing definitely schedule 
increase time caused algorithm hand far dramatic easily compensated upgrading hardware 
object algorithm outperforms algorithm problem sizes occur application 
polynomial algorithm problem usually goes hand hand mathematical insight problem enables find polynomial algorithm small degree typically 
polynomial algorithms rare arise esoteric problems 
tractable trees example consider problem network design 
business offices want lease phone lines connect 
phone charges different amounts money connect different pairs cities task select set lines connects offices minimum total cost 
weighted graph minimum spanning tree colored edges 
mathematical terms cities lines form vertices edges graph weight edge leasing costs corresponding phone line 
task find subgraph connects vertices graph spanning subgraph edges minimum total weight 
subgraph contain cycles remove edge cycle keeping nodes connected reducing cost 
graph cycles tree looking minimum spanning tree weighted graph fig 

minimum spanning tree mst weighted graph non negative weights 
find spanning tree minimum total weight 
find minimum spanning tree 
naive approach generate possible trees vertices keep minimal weight 
enumeration trees done pr fer codes cayley formula tells different trees vertices 
trees atoms observable universe 
exhaustive enumeration prohibitive smallest trees 
mathematical insight turns mst tractable problem lemma subset vertices edge smallest weight edges connecting part minimum spanning tree 
proof contradiction 
suppose minimum spanning tree containing spanning tree contains unique path forms cycle path include edge connecting spanning tree total weight minimum spanning tree 
lemma allows grow minimum spanning tree edge edge prim algorithm example prim input weighted graph output minimum spanning tree single vertex vertices find minimum edge connecting add precise time complexity prim algorithm depends data structure organize edges case log upper bound 
see faster algorithms 
equipped polynomial algorithm find minimum spanning trees thousands nodes seconds personal computer 
compare exhaustive search 
definition mst tractable problem 
intractable itineraries encouraged efficient algorithm mst investigate similar problem 
task plan itinerary travelling salesman visit cities 
map cities distances 
order salesman visit cities minimize total distance travel 
number cities write distance matrix dij dij denotes distance city number city number tour cyclic permutation denotes successor city problem defined traveling salesman problem tsp distance matrix elements dij 
find cyclic permutation minimizes cn di tsp probably famous optimization problem exists vast literature specially devoted see 
difficult find solutions large problems find best solution instance 

cyclic permutations calculating length single tour done time exhaustive search complexity 
approach limited small instances 
mathematical insight provides shortcut optimum solution mst 
knows 
despite efforts brilliant people polynomial algorithm tsp 
smart efficient polynomial algorithms find solutions guarantee yield optimum 
definition tsp intractable 
instance different problems valid configuration traveling sales man problem left assignment problem right 
assign ment solved polynomial time tsp intractable 
tsp intractable 
knows 
proof excludes existence polynomial algorithm tsp someday come polynomial algorithm corresponding mathematical insight 
see soon 
intractability tsp considering tractability similar identical problem assignment cost matrix elements dij 
find permutation minimizes cn di difference tsp assignment allows permutations items cyclic ones 
dij denote distances cities assign ment corresponds total tour length minimization variable number salesmen travelling subtour fig 

classical application assignment assignment tasks workers subject constraint worker assigned exactly task 
dij denote cost having task performed worker denote task assigned worker assign ment problem minimizing total cost 

possible assignments tasks workers exhaustive enumeration prohibitive 
contrast tsp assignment solved polynomial time example hungarian algorithm 
compared mst algorithm underlying mathematical insight bit involved discussed 
complexity classes decision problems far discussed optimization problems solving mst tsp assignment implies compare exponential number feasible solutions pick optimum 
exhaustive search explicitely polynomial shortcuts implicitely 
learn barrier separates tractable intractable problems investigate simpler problems problems solutions recognizable explicit implicit comparison feasible solutions 
consider decision problems problems solution 
optimization problem turned decision problem adding bound instance 
examples mst decision weighted graph non negative weights number 
contain spanning tree total weight 
tsp decision distance matrix elements dij number 
tour length 
decision problem feasible solutions evaluated relative criterion tour tsp length 
mst solved polynomial time simply solve optimization variant mst compare result parameter tsp approach help 
fact see section exists polynomial algorithm tsp exists polynomial algorithm tsp 
learn gap tractable intractable problems considering decision variants optimization problems 
lets look decision problems derived optimization problems 
eulerian circuits genuine decision problem dates back th century city bridges crossed river arms fig 

popular puzzle time asked possible walk city crossing bridges exactly returning home 
bridges drawn euler left represented graph right 
graph islands condensed points vertices bridges drawn line edge 
euler solved puzzle 
euler recognizes solution problem thing matters pattern interconnections banks islands graph modern terms 
graph corresponding puzzle bridges vertices banks islands edges bridges fig 

euler bridges regarded birth graph theory 
generalize bridges problem need terminology graph theory 
walk graph alternating sequence vertices edges vl vl vl 
note sequence begins ends vertex edge incident vertices immediately preceding succeeding 
walk termed closed vl open 
walk called trail edges distinct closed trail called circuit 
tried find circuit contains edges 
honour euler circuit called eulerian circuit 
equipped terminology ready define generalization bridges problem eulerian circuit graph 
contain eulerian circuit 
obviously decision problem answer circuit checked eulerian resorting possible circuits 
exhaustive search solve problem intractability approach noticed euler 
years advent computers wrote particular problem bridges solved carefully possible paths ascertaining inspection met requirement 
method solution tedious difficult large number possible combinations problems bridges involved cited 
euler solved bridges problem listing possible trails mathematical insight 
noticed circuit leave vertex edge different edge taken 
words degree vertex number edges adjacent vertex 
obviously necessary condition euler proved sufficient theorem connected graph contains eulerian circuit degree vertex 
euler theorem allows devise polynomial algorithm eulerian circuit check degree vertex graph 
vertex odd degree return 
vertices checked having degree return 
running time algorithm depends encoding graph 
encoded adjacency matrix entries aij number edges connecting vi vj running time 
euler eulerian circuit tractable problem 
hand learn euler find walk crossing bridges exactly 
hamiltonian cycles decision problem associated mathematician astronomer royal ireland sir william rowan hamilton 
year hamilton put market new puzzle called game fig 

generalization game calls definitions graph theory closed walk graph called cycle vertices distinct 
hamiltonian cycle cycle contains vertices graph 
generalization game reads sir hamilton game find route edges dodecahedron left passing corner exactly returning starting corner 
solution indicated shaded edges planar graph isomorphic dodecahedron right 
hamiltonian cycle graph 
contain hamiltonian cycle 
certain similarity eulerian circuit hamiltonian cycle 
pass edge vertex 
despite resemblance problems represent entirely different degrees difficulty 
available mathematical insights hamiltonian cycle provide polynomial algorithm proof algorithm impossible 
hamiltonian cycle intractable knows 
coloring imagine wish arrange talks congress way participant forced talk hear 
assuming supply lecture rooms enabling hold parallel talks finish programme time slots 
problem formulated terms graphs graph vertices talks talks adjacent joined edge participant attend 
task assign time slots vertex way adjacent vertices different time slots 
common formulation problem uses colors time slots coloring graph 
coloring vertices different colors adjacent vertices color 
problem tractable construction polynomial algorithm left easy exercise 
things change considerably coloring intractable 
note larger problem gets easier planar graph colorable colors 
famous color theorem 
coloring remains intractable restricted planar graphs 
satisfiability close section decision problem graph theory boolean logic 
boolean variable take value false true 
boolean variables combined clauses boolean operators negation clause true false 
conjunction clause true variables true disjunction clause true variables true 
variable negation called literal 
different clauses combined yield complex boolean formulas 
boolean formula evaluates depending assignment boolean variables 
example 
formula called satisfiable assignment variables formula true 
satisfiable satisfiable 
boolean formula written conjunctive normal form cnf set clauses ck combined exclusively operator cm literals clause combined exclusively operator 
examples written cnf 
clause considered constraint variables satisfying formula means satisfying set possibly constraints simultaneously 
satisfiability sat disjunctive clauses cm literals literal variable negated variable set xn 
assignment variables satisfies clauses simultaneously 
considered prototype constraint satisfaction problem 
fixing number literals clause leads sat disjunctive clauses cm literals literal variable negated variable set xn 
assignment variables satisfies clauses simultaneously 
polynomial algorithms known sat sat 
polynomial algorithm known general sat sat 
classes tractable problems seen examples introduce important complexity classes decision problems 
class tractable decision problems easy define consists problems polynomial algorithm known 
corresponding class named polynomial definition decision problem element class solved polynomial time algorithm 
eulerian circuit coloring mst nondeterministic algorithms definition second complexity class involves concept nondeterministic algorithm 
nondeterministic algorithm ordinary algorithm may additional powerful instruction goto label label instruction splits computation parallel processes continuing instructions indicated label label 
encountering instructions computation branch tree number parallel computations potentially grow exponential function time elapsed see fig 

nondeterministic algorithm perform exponential number computations polynomial time 
world conventional computers nondeterministic algorithms theoretical concept quantum computing may change section 
need concept nondeterminism define class nondeterministic polynomial problems definition decision problem class solved polynomial time nondeterministic algorithm 
elapsed time example execution history nondeterministic algorithm 
solubility nondeterministic algorithm means branches computation returning 
say algorithm returns branches returns 
answer branches reports 
say nondeterministic algorithm solves decision problem polynomial time number steps branches report bounded polynomial size problem 
require polynomial solubility instances decision problem 
asymmetry reflects quantifiers decision problems graph instance hamiltonian cycle hamiltonian cycle instance cycles non hamiltonian 
note conventional deterministic algorithms special cases nondeterministic algorithms nondeterministic algorithms goto instruction 
follows immediately decision problems discussed preceeding section members nondeterministic polynomial algorithm sat satisfiability input boolean formula xn output satisfiable goto label label label xi true continue label xi false continue xn true return return loop branches iteration branch xi true branch xi false continue instruction starts iteration loop 
executing loop branches computation possible assignments boolean variables 
power nondeterministic algorithms allow exhaustive enumeration exponentially large number candidate solutions polynomial time 
evaluation candidate solution calculating xn example turn done polynomial time total nondeterministic algorithm polynomial 
problem class sole source intractability exponential size search space 
succinct certificates second equivalent definition notion succinct certificate 
certificate proof 
claim graph hamiltonian cycle proof claim providing hamiltonian cycle 
certificates eulerian circuit coloring eulerian circuit valid coloring 
certificate succinct size bounded polynomial size problem 
second definition reads definition decision problem element class instance exists succinct certificate verified polynomial time 
equivalence definitions easily shown 
idea succinct certificate deterministically select branch nondeterministic algorithm leads output 
definition nondeterministic algorithms reveals key feature class clearly second definition proving decision problem example consider positive integer integer numbers pq 
certificate instance factorization pq 
succinct number bits equal number bits verified quadratic time multiplication 
decision problems ask existence object property cycle hamiltonian factorization integer factors 
cases desired object may serve succinct certificate 
problems primality positive integer prime 
primality negation complement instances instances vice versa 
succinct certificate primality means obvious 
fact decision problems succinct certificate complement known complement primality construct succinct certificate fermat theorem 
primality map complexity sat sat hamiltonian cycle tsp graph isomorphism eulerian circuit mst sat np coloring primality coloring assignment map complexity 
problems indicated defined text 
problems decision variants optimization problems 
fig 
summarizes achieved far 
class consists decision problems sole source difficulty size search space grows exponentially size problem 
problems intractable mathematical insight provides polynomial shortcut avoid exhaustive search 
insight promotes problem class polynomially soluble problems 
class contains large number problems important applications additionally represents real challenge problems chance proof non existence polynomial algorithm single problem establish long proof missing represents famous open conjecture theoretical computer science 
completeness polynomial reductions computational complexities problems related constructing algorithm uses algorithm subroutine 
consider algorithm relates hamiltonian cycle tsp hamiltonian cycle input graph output contains hamiltonian cycle vi vj dij dij tsp decision return return algorithm solves hamiltonian cycle solving appropriate instance tsp 
loops lines distance matrix set entries dij edge vi vj dij 
hamiltonian cycle valid tour corresponding tsp distances having length total length conversely suppose tsp tour length distances tour sums distances total length implies pair successively visited cities distance tour follows existing edges corresponds hamiltonian cycle 
call subroutine solves tsp line yields solution hamiltonian cycle 
algorithm relate computational complexity hamiltonian cycle tsp 
note polynomial algorithm call tsp solver considered elementary operation 
comes polynomial algorithm tsp instantly polynomial algorithm hamiltonian cycle 
say hamiltonian cycle polynomially reducible tsp write hamiltonian cycle tsp 
books polynomial reducibility denoted 
follow notation stresses important consequence polynomial reducibility existence polynomial reduction excludes possibility solved polynomial time 
read harder 
informal definition definition say problem polynomially reducible problem write exists polynomial algorithm provided polynomial algorithm 
complete problems polynomial reductions verified similar eq 
sat sat sat coloring coloring hamiltonian cycle see corresponding reduction algorithms 
polynomial reducibility transitive imply 
transitivity eqs 
follows sat sat coloring hamiltonian cycle reduces tsp polynomial algorithm tsp implies polynomial algorithm problems 
amazing 
true scope polynomial reducibility revealed stephen cook proved remarkable theorem theorem cook problems polynomially reducible sat theorem means sat 
problem harder sat sat hardest problems 
polynomial algorithm sat imply polynomial algorithm problem imply sat special transitivity eqs 
replaced sat coloring hamiltonian cycle tsp 
problems form new complexity class definition problem called complete class complete problems collects hardest problems efficient algorithm problem solved efficiently extremely considered futile efforts brilliant people find polynomial algorithms problems hamiltonian cycle tsp 
sat eulerian circuit mst map hamiltonian cycle np complete sat graph isomorphism sat np coloring assignment tsp coloring primality map complexity revisited 
cook theorem problems shown complete 
comprehensive date list hundreds complete problems web 
map needs redesign fig 

turns intractable problems discussed far complete primality 
problems polynomial algorithm known polynomial reduction complete 
problem resists classification graph isomorphism graphs set nodes 
isomorphic permutation denote graph 
problems resists classification problems proven belong proven np complete np complete np np tentative maps 
ruled 
sure correct map 
theorem exist problems complete 
theorem rules tentative maps fig 

optimization problems classification decision problems relates optimization problems 
general instance optimization problem pair set feasible solutions cost function consider combinatorial optimization set countable 
combinatorial optimization problem comes different flavors 
optimization problem find feasible solution minimizes cost function 

evaluation problem find cost minimum solution 

decision problem bound feasible solution 
assumption cost function evaluated polynomial time straightforward write polynomial reductions establish 
decision variant optimization problem complete efficient algorithm optimization problem optimization problem tsp decision variant complete denoted hard 
polynomial algorithm problem imply polynomial algorithm optimization evaluation variant 
need proof reversal eq 

shown hold cost optimum solution integer logarithm bounded polynomial size input 
corresponding polynomial reduction evaluates optimal cost asking question sequence values approaches similar bisection method find zeroes function 
general method prove strategy works demonstrated tsp known solution tsp 
replace arbitrary entry dij distance matrix value solve tsp modified distance matrix 
length optimum tour affected modification link ij belong optimal tour 
repeating procedure different links reconstruct optimum tour polynomial number calls tsp solver tsp tsp 
counting problems far studied related styles problems decision problems ask desired solution exists optimization problems require solution produced 
third important fundamentally different kind problem asks solutions exist 
counting variant sat reads sat boolean expression compute number different truth assignments satisfy similarly hamiltonian cycle asks number different hamiltonian cycles graph tsp number different tours length 
definition counting problem pair set feasible solutions decision function 
output number 
class pronounced number consists counting problems associated decision function evaluated polynomial time 
class collects problems sole source intractability number feasible solutions 
polynomial algorithm counting problem implies polynomial algorithm associated decision problem sat solved efficiently 
fact define polynomial reducibility counting problems prove problems reduce polynomially sat theorem sat complete :10.1.1.32.420
guessed hamiltonian cycle tsp complete 
despite similarity counting problems inherently harder decision problems 
documented complete problems corresponding decision problem solved polynomial time classical example problem calculating permanent matrix 
computational complexity physics quantum parallelism seminal richard feynman pointed system quantum particles exponentially hard simulate classical computer 
idea quantum computing reverse situation simulate classically hard exponential 
problem polynomial time computer quantum devices 
quantum computer processes qubits quantum state systems key feature quantum computer registers hold process linear superpositions product states qubits 
feature difficult construct quantum computer capable computing function xn boolean variables simultaneously possible input values theory 
quantum parallelism resembles nondeterministic algorithm goto instruction exponentially branching execution tree 
quantum parallelism key exponential computing power 
problem extract exponential information quantum computer 
defined nondeterministic solubility care spot single answer answers 
works fine theoretical concept practical computer reading output matters lot 
order gain advantage exponential parallelism needs combined quantum feature known interference 
goal arrange computation constructive interference amplifies result destructive interference cancels rest 
due importance interference phenomena surprising calculating fourier transform problem undergoes exponential speedup log classical log quantum computer 
speedup seed important quantum algorithm known today shor algorithm factor integer polynomial time :10.1.1.144.6148
shor algorithm consequences public key cryptography shatter world remember complete 
holy grail quantum computing polynomial time quantum algorithm complete problem discovered 
see www qubit org learn 
analytical solubility ising models problems statistical physics exactly solved majority problems withstand efforts generations mathematicians physicists 
problems analytically solvable similar 
relating question algorithmic complexity evaluating partition function gives final answer helps clarify borderline separates analytically tractable intractable problems 
onedimensional ising spin glass periodic boundary conditions 
partition sum system calculated polynomial time 
example consider ising spin glass general graph 
assignment ising spins 
energy configuration ji external magnetic field ji coupling constants summation edges fundamental problem statistical mechanics determine partition function zn 
evaluating sum directly requires operations 
notion analytic solution precise definition minimum requirement want number reduced exponential polynomial example consider known transfer matrix solution dimensional ising glass periodic boundary conditions coupling jk spins fig 
zn ring tr jk jk jk jk evaluated elementary operations 
exact solution include numbers jk best expect 
homogeneous case jk calculate product transfer matrices zn cosh cosh sinh evaluation complexity drops log fast exponentiation 
writing partition sum ek ek ek sum possible energy values obvious calculating closely related determining ek 
general finite graphs problem proven complete hope find analytical solution weak sense 
situation hardly improves restrict graphs physical crystal lattices computing partition function finite sublattice non planar crystal lattice complete 
includes crystal lattice model nearest neighbor interactions coupled models 
includes models external field transformed zero field models augmented graph non planar underlying lattice graph onedimensional 
construction easy just adjoin additional vertex spin additional edges constant interaction energy partition function augmented system reads ji additional factor comes new spin 
expression easy see equals times partition function field soluble ising models 
proven partition function ising systems planar crystal lattices evaluated polynomial time 
includes celebrated solution square onedimensional example :10.1.1.10.1669
turns ising model partition sum calculated polynomial time graphs fixed genus 
graph genus drawn orientable surface genus sphere handles attached crossing edges 
planar graphs genus toroidal graphs genus 
crystal lattices genus increases monotonically number spins fixed 
mechanism proving tractability intractability statistical mechanics computational complexity polynomial reduction 
barahona example applies reduction hard problem max cut ising spin glass proof hardness 
reduction planar ising model minimum weight matching hand proofs tractability minimum weight matching solved polynomial time 
note classification spin systems nature couplings significant 
frustrated system random couplings ji signs class homogeneous ji long underlying graph 
onedimensional example discriminate cases polynomial 
situation changes course consider ground states complete partition function 
nature couplings matters lot finding ground states pure systems trivial lattices hard systems positive negative couplings non planar lattices 
lot problems arising statistical physics classified computational complexity evaluate partition function see 
turns problems known exact solution evaluated polynomial time 
problems complete exactly solvable 
looking exact solution problem keep mind simultaneously attacking tsp hamiltonian cycle sat nphard problems 
statistical mechanics focus results thermodynamic limit finite systems 
clear hardness survives limit 
probabilistic analysis combinatorial problems problems combinatorial optimization formally considered models statistical mechanics 
cost function renamed hamiltonian random instances samples disorder ground states formal model correspond solutions optimization problems 
way methods developed framework statistical mechanics disordered systems powerful tools probabilistic analysis combinatorial problems 
statistical mechanics methods applied example tsp graph partitioning sat 
particular nice example approach analysis assignment called bipartite matching matrix non negative entries ai 
find min ai minimum taken permutations 
probabilistic analysis aims calculating average properties ensemble random instances canonical ensemble random numbers ai drawn independently common probability density 
replica method statistical physics marc giorgio parisi things lim denotes averaging ai rigorous proof eq 
represents rare cases replica result confirmed rigorous methods 
years replica solution parisi recognized exponentially distributed matrix elements average optimum 
fact replica result written conjectured average optimum finite systems parisi conjecture supported numerical simulations formal proof despite efforts 
note eqs 
hold eq 
valid densities 
uniform density terms 

guess expression general finite case please send email 
statistical mechanics analysis yields exact analytical results reveals features important design understand algorithms 
example analysis davis putnam algorithm sat 
example number partitioning problem npp hard optimization problem shown particular problem heuristic approach better stupid random search 
phase transitions computational complexity theory computational complexity entirely worst case analysis 
may happen algorithm requires exponential time pathological instances 
famous example simplex method linear programming 
despite exponential worstcase complexity applications solve really large problems 
apparently instances trigger exponential running time appear practical conditions 
linear programming ellipsoid algorithm similar scenarios observed hard problems 
take sat example 
generating random instances variables clauses feeding smart exhaustive algorithm observes polynomial running time ratio carefully adjusted 
low problem underconstrained satisfying solutions clever algorithm find quickly 
large problem overconstrained large number contradictory constraints clever algorithm discover quickly 
real hard instances generated ratios close critical value 
transition underconstrained overconstrained formulas sat bears phase transition physical systems 
control parameter order parameter probability formula satisfiable 
similar phase transitions discovered analyzed methods statistical mechanics computational problems 
see special issue theoretical computer science phase transitions combinatorial problems overview interdisciplinary field 
harry lewis christos papadimitriou 
efficiency algorithms 
scientific american pages 
alexander hartmann 
complexity theory 
www theorie physik de hartmann seminar ps gz 
thomas cormen charles leiserson ronald rivest 
algorithms 
mit electrical engineering computer science series 
mit press cambridge massachusetts 
papadimitriou steiglitz 
combinatorial optimization 
prentice hall englewood cliffs new jersey 
michael garey david johnson 
computers intractability 
guide theory np completeness 
freeman new york 
christos papadimitriou :10.1.1.32.420
computational complexity 
addison wesley publishing reading massachusetts 
roger penrose 
emperor new mind 
oxford university press 
don coppersmith shmuel winograd 
matrix multiplication arithmetic progressions 
symbolic computation 
la bollob modern graph theory volume graduate texts mathematics 
springer verlag berlin 
gabow galil spencer tarjan 
efficient algorithms finding minimum spanning trees undirected directed graphs 
combinatorica 
lawler lenstra kan shmoys editors 
traveling salesman problem 
wiley interscience series discrete mathematics optimization 
john wiley sons new york 
gerhard reinelt 
travelling salesman 
computational solutions tsp applications volume lecture notes computer science 
springer verlag berlin heidelberg new york 
martin gr tschel manfred padberg 
die 
spektrum der wissenschaft 
see www spektrum de html 
david applegate robert bixby william cook 
tsp homepage 
www rice edu tsp 
euler 
ad 
comm 
acad 
sci 


vipin kumar 
algorithms constraint satisfaction problems survey 
ai magazine 
available ftp ftp cs umn edu dept users kumar ps 
bengt michael robert endre tarjan 
linear time algorithm testing truth certain quantified boolean formulas 
information processing letters 
johnson papadimitriou 
computational complexity 
lawler pages 
pratt 
prime succinct certificate 
siam comput 
ausiello crescenzi kann marchetti spaccamela 
complexity approximation 
springer verlag berlin heidelberg new york 
karp 
complexity computer computations 
miller thatcher editors reducibility combinatorial problems pages new york 
plenum press 
stephen cook 
complexity theorem proving procedures 
proceedings third annual acm symposium theory computing pages 
crescenzi kann 
compendium np optimization problems 
www nada kth se 
ladner 
structure polynomial time reducibility 
journal acm 
valiant 
complexity computing permanent 
theor 
comp 
sci 
feynman 
simulating physics computers 
int 
theor 
phys 
shor :10.1.1.144.6148
polynomial time algorithms prime factorization discrete logarithms quantum computer 
siam comp 
aharonov 
quantum computation 
dietrich stauffer editor annual reviews computational physics vi 
world scientific 
arxiv quant ph 
brian hayes 
computing world spin 
american scientist september october 
www org issues html 
jerrum sinclair 
polynomial time approximation algorithms ising model 
proc 
th icalp 
eatcs 
jaeger welsh 
computational complexity jones tutte polynomials 
math 
proc 
camb 
phil 
soc 

statistical mechanics dimensionality np completeness 
proc 
st acm annual symposium theory computing stoc portland oregon may 
acm press 
barahona 
computational complexity ising spin glass models 
phys 

:10.1.1.10.1669
crystal statistics dimensional model order disorder transition 
phys 
rev 
riccardo 
combinatorial topological approach ising model 
phys 

anna martin jan new algorithm ising problem partition function finite lattice graphs 
phys 
rev lett 
welsh 
computational complexity classical problems statistical physics 
grimmett welsh editors disorder physical systems pages 
clarendon press oxford 
baxter 
exactly solved models statistical mechanics 
academic press san diego 
parisi 
spin glass theory 
world scientific singapore 
parisi 
mean field equations matching travelling salesman problems 
europhys 
lett december 

cavity method travelling salesman problem 
europhys 
lett 
fu anderson 
application statistical mechanics np complete problems combinatorial optimization 
phys 

scott kirkpatrick bart selman 
critical behavior satisfiability random boolean expressions 
science may 
riccardo 
statistical mechanics random model 
phys 
rev 
parisi 
replicas optimization 
physique lett 
david aldous 
limit random assignment problem 
rand 
struct 
alg 
giorgio parisi 
conjecture random bipartite matching 
arxiv cond mat 

exact solution random bipartite matching model 
phys 

coppersmith sorkin 
constructive bounds exact expectations random assignment problem 
rand 
struct 
alg 

trajectories phase diagrams growth processes computational complexity search algorithms solve satisfiability problem 
phys 
rev lett 

statistical physics analysis computational complexity random satisfiability problems backtrack algorithms 
european physics journal 
arxiv cond mat 
brian hayes 
computing easiest hard problem 
american scientist march april 
www org issues html 
stephan 
random costs combinatorial optimization 
phys 
rev lett february 
stephan 
physicist approach number partitioning 
theor 
comp 
sci 
christian jennifer boris 
phase transition finite size scaling integer partitioning problem 
rand 
struct 
alg 
brian hayes 
computing science get satisfaction 
american scientist march april 
www org issues html 
kirkpatrick selman 
determining computational complexity characteristic phase transitions 
nature july 
olivier dubois bart selman riccardo editors 
phase transitions combinatorial problems volume theor 
comp 
sci 

