optimistic data replication mobile applications michael mlc cs brown edu december number mobile devices exploding mobile devices interconnected 
result users demanding mobile access favorite applications new collaborative group applications possible ad hoc networks mobile clients 
applications need access data shared multiple mobile clients 
optimistic data replication emerged natural way allow mobile clients limited network connectivity access global application data 
optimistic schemes machine keeps cache data reads writes data contacting machines 
machines communicate share updates resolving concurrent updates needed 
optimistic replication manage data consistency groups connected servers connectivity devices mobile environment vary 
addition mobile clients limited amount memory solutions ensure cache sizes kept minimum 
examine existing systems optimistic data replication support mobile applications 
analysis put emphasis design decisions system 
design decisions include general areas system architecture communication 
design decision degree communi cation permitted different machines 
system employ client server architecture mobile clients communicate application server cs term michael peer peer setup mobile clients able 
assump tions machines system architecture 
group multicast broadcast operations employed 
cache management 
major issue deciding machine represents manages cache global data 
particular additional information needs stored data order implement system consistency claims 
updates data represented managed 
update propagation reconciliation 
central issue systems employ opti data replication cache writes sent rest machines system 
inherent conflicting updates reconciled 
updates conflict rejected merged 
system updates commutative meaning applied order 
application involvement 
cases system allows mobile application take part system cache management update policies 
common instance application involvement reconciliation conflicting updates 
case degree system application decide integrate updates resorting user intervention 
system policies application affect 
system analyze advantages disadvantages consequences design decisions 
analysis include evaluation systems respect appropriate metrics 
metrics include effect mobile application design number conflicts expected success conflict resolution scalability bandwidth disk space needed cache storage management 
roam system providing optimistic replication discuss roam 
similar colleagues ficus rumor roam peer peer user level process manages shared cs term michael file system access 
system uses selective replication meaning client cache contains subset file system 
file system divided volumes volume represents collection directories subtree file system 
roam require mobile client cache entire volume allows specific files volume cached 
roam restriction file cache parent directories hierarchy 
peer peer communication managed roam ward model 
ward consists group mobile clients geographically near 
clients ward communicate peer peer basis communication may intermittent low quality 
client potentially part multiple wards 
wards form tiered hierarchy ward ward master connects ward higher level ward 
ward master knows data replicas clients ward contain data 
wards ward masters created managed destroyed dynamically life system 
manage consistency clients ward ward masters top level clients communicate adaptive ring topology 
essentially clients communicate neighbors ring receive updates shared data 
communication way target replica pulls updates source replica 
target learns updates source received source learns target 
clients arranged ring updates passed transitively clients may direct communication 
adaptivity ring allows bypass clients leave ward temporarily responding 
main advantage ring topology exchange updates limit number messages sent clients ward 
clients technically communicate ability cause number messages square number clients 
ring linear number messages 
authors note single ring topology combined selective replication neighboring machines ring files replicas 
roam uses multiple rings group clients ring file common group 
cs term michael rings common group members combined ring manages files 
means large number rings formed incur moderate amount overhead 
apparent assumption variation clients minimal clients files common complete client files common different volumes altogether 
cases probably common usage scenarios number rings 
reconciliation process source target involves couple steps 
file local cache target asks source updates file 
determine file roam maintains version vectors file replica 
approach roam maintains vector equals number replicas system 
vi contains number updates current revision file replica source updates replicas target source file said dominate target 
file dominates conflict 
dominates replicas conflict file file marked system resorts automatic resolution 
types conflicts may resolved roam relying roots ficus provides different resolvers depending file type issue 
user involvement needed cases system provided tools 
simulations system reveal ward model tier hierarchy selective replication provides decent scalability 
addition multiple wards affects ward master connect wards top level hierarchy 
non master clients ward burdened communication wards 
number replicas ward grow large increases communication overhead reconciliation procedure 
main reason wards place limit major concern 
clearly issue number update go guaranteed received replicas wards 
authors analyze replicas equally distributed wards update go 
depending frequency replicas reasonable file system 
cs term michael may reasonable algorithm implemented applications games collaborative software 
bayou bayou system managing optimistically replicated data group machines support collaborative applications :10.1.1.12.7323
roam bayou uses peer peer model communication 
roam uses tiered hierarchy ring communication bayou imposes restrictions communication machine may talk 
bayou leaves pattern machines application layer 
advantage allowing application optimize communication specific needs 
roam guarantees time needed propagate update system bayou 
bayou relies eventual consistency means machines keep exchanging updates eventually synchronized 
machine maintains log writes machine received database created executing writes order 
write consists principally series updates database 
roam requires files sent network bayou needs transfer write operations 
analagous sending entire table versus sending added deleted records obviously advantage bayou 
write write assigned timestamp containing time server created 
writes initially considered tentative meaning may conflict writes system need rolled back 
machine designated primary replica 
write added primary replica write log said committed position write log changes point 
important property bayou different machines may different writes logs writes listed order machines 
writes listed order appear primary replica 
tentative writes listed order timestamps 
sharing updates machines similar roam 
communication cs term michael pair wise way operation target source 
target connects source receives writes held source writes held target 
sends writes order 
order know writes machine machine maintains version vector containing timestamp write received machine 
version vectors communication process bayou guarantees machine write wi created machine si earlier writes created machine si 
write transmitted machine 
bayou supports application specific conflict detection management 
addition database modifications write contains dependency check procedure merge procedure 
write inserted machine write log runs dependency check see addition write expected effect 
authors give example room reservation system write reserve room hour 
case dependency check sure room free hour 
dependency check fails merge procedure run see write performed way 
application defined arbitrary merge procedure case conflicts enables great deal flexibility 
room reservation example merge procedure try reserve different room schedule room different time 
bayou architecture similar roam number ways similarly fairly scalable system 
synchronization pair wise operation time needed relative number writes system 
furthermore version vectors ensure write sent machine life system 
addition replicas affects size version vectors amount time needed share writes 
committed writes allows machines truncate write logs position committed writes log changes 
main advantage bayou flexibility 
bayou allows arbitrary merge procedures de checks allows application layer define communication topology replicas 
roam system suffer communication machines lost cs term michael requirement machines able occasionally communicate 
flexibility communication presents drawback 
guaranteeing writes eventually delivered machines sure seeing particular write 
burden placed application layer 
rover rover toolkit system supporting data sharing mobile applications 
systems described rover uses client server architecture 
rover application uses set servers maintain data clients store cache data 
clients permitted communicate clients 
global data rover modeled set relocatable dynamic objects 
contain arbitrary application data application code 
rdo application code run clients servers 
bayou rover uses concept tentative committed updates 
rdo home server stores primary copy rdo clients download local caches 
client tentative updates rdo data cache regardless outside connectivity 
updates stored modified data method invocation 
tentative updates sent back server connection established 
transfer back forth rover uses queued remote procedure calls 
client wants send rdo server adds request log sending server available 
thing happens server side server needs send reply client request server periodically try contact client temporarily unavailable 
servers maintain data consistency conflicting tentative updates received clients 
rover allows application layer detect resolve conflicts 
assist application process rover keeps wealth information rdo including version vectors method call data modification logs 
application code running server resolve conflicts information 
tentative update processed server committed new rdo sent response client requests 
main feature rover system vast flexibility applications determine cs term michael system policies 
applications decide run rdo code client server 
allows resource poor mobile clients perform computationally expensive tasks efficiently 
rover provides support consistency model application wants implement 
allows number schemes including pessimistic locking authors primary copy tentative update model useful applications 
way system flexible support client client communication 
limits scope applications built rover applications developed stock market watcher email reader especially collaborative nature 
improves performance couple ways 
multiple tentative updates need sent server batched sent immediately 
reduces communication costs client server 
asynchronous application mobile client doesn need block waiting server response 
connectivity slow mobile environment improves performance 
ability ship servers perform expensive tasks improves system performance terms cpu usage uses network bandwidth 
systems support optimistic data replication variety mobile scenarios somewhat differently 
feature systems common kind application involvement customization 
mobile applications need aware resource networking limitations mobile devices need able affect consistency policies implemented system flexible conflict detection resolution vital proper execution mobile applications 
main contrast systems types permitted communication tween machines 
currently simple client server synchronization data implemented number popular applications microsoft windows ce 
wire connectivity mobile devices increasingly viable mobile devices able form ad hoc networks 
networks peer peer communication vital 
cs term michael roam bayou rover target applications file system collaborative apps mobile apps dis architecture peer peer tiered hierarchy adaptive ring group connection operation peer peer arbitrary client server data representation files write log objects reconciliation way way way deferred communication conflict detection file modification rdo modification application defined pro conflict resolution application defined static application defined dy namic comparison key features systems 
cedure application defined dy namic expect research distributed systems mobile applications move away strict client server architectures 
bayou originally envisioned updates transferred floppy disks machines wireless technology peer peer model suited task 

mobile aleph system distributed mobile applications 
master thesis december 
guy ratner gunter ma popek 
rumor mobile data access optimistic peer peer replication 
proceedings er workshop mobile data access 
cs term michael joseph tauber 
mobile computing rover toolkit 
ieee transactions computers special issue mobile computing march 

tricks tips 
www microsoft com mobile pocketpc asp 
page jr guy heidemann ratner reiher goel kuenning popek 
perspectives optimistically replicated peer peer filing 
software practice experience december 
parker jr popek stoughton walker walton chow edwards kline 
detection mutual inconsistency distributed systems 
ieee transactions software engineering may 
petersen spreitzer terry theimer 
bayou replicated database services world wide applications 
proceedings seventh acm sigops european workshop september 
petersen spreitzer terry theimer demers 
flexible update propagation weakly consistent replication 
proceedings th acm symposium operating systems principles october 
saito 
optimistic replication algorithms 
technical report august 
ratner 
roam scalable replication system mobile distributed computing 
phd thesis ucla january 
ratner reiher popek dynamic version vector maintenance 
ucla technical report csd june 
ratner popek reiher 
ward model scalable replication architecture mobility 
workshop object replication mobile computing october 
ratner reiher popek guy 
peer replication selective control 
mda international conference mobile data access december 
cs term michael reiher heidemann ratner skinner popek 
resolving file conflicts ficus file system 
usenix conference proceedings june 
terry theimer petersen demers spreitzer hauser 
managing update conflicts bayou weakly connected replicated storage system 
proceedings th symposium operating systems principles december 

