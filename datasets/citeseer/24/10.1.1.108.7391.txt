fourth colloquium mathematics computer science proc 
ag loglog counting estimation ip traffic olivier alain jean marie inria lirmm cnrs university montpellier rue ada montpellier ajm lirmm fr discuss problem estimating number elephants stream ip packets 
problem formulated context multisets 
explore theoretical space complexity problem shown solved units memory general number different elements multiset 
describe algorithm durand flajolet loglog algorithm coupled thinning packet stream returns estimator number elephants small amount memory 
algorithm allows estimation particular families random multiset 
mean variance estimator computed 
algorithm tested synthetic data 
keywords probabilistic counting communication complexity ip traffic initial motivation advance traffic engineering data networks 
modern architectures protocols standardized aims guaranteeing quality service delivered users 
proper functioning protocols requires increasingly detailed knowledge statistical characteristics stream data packets usually ip packets passing point network 
hand amount information flowing network increases challenge obtain real time little computational time small memory consumption information huge set data packets 
characteristics attached data flow question mice elephants attracted attention see instance 
roughly speaking elephants flows information stay active long time network mice flows small lifetime 
dynamical response network different categories interesting idea amount flows type 
devoted algorithms estimate number elephants flow packets precise definition exactly elephant amount memory small relative total amount data 
types results 
explore theoretical limitations problem 
results theory communication complexity show algorithm solve problem general units memory number distinct flows elephants mice 
related done estimation entropy multiset 
features simple estimator number mice elephants proposal precise uses memory 
improve result closely connected problem knowing internet user scans certain number communication ports target machine 
restrict attention specific class data flows exhibit algorithm produces statistical estimator number elephants uses log log units memory 
algorithm durand flajolet loglog algorithm 
properties loglog derive mean variance estimator 
test estimator parameterization synthetic data show results satisfactory 
organized follows 
theoretical memory complexity problem analyzed section 
algorithm analysis described section 
experiments reported section 
conclude section 
research funded aci masses data program french ministry research contract 
discrete mathematics theoretical computer science nancy france olivier alain jean marie preliminaries multiset structure similar set repetitions element allowed 
cardinal multiset denoted number elements contains including repetitions 
set composed different elements multiset named support multiset denoted supp 
union intersections naturally defined multisets 
representative sequence multiset sequence length equal cardinal multiset element multiset appears sequence 
example multiset equal permutation 
support supp multiset 
cardinal cardinal supp 
sequences different representative sequences practical reasons introduce formal equivalent definition multisets 
finite set multiset support seen function notation cardinal supp 
confused cardinal support example equalities characterize multiset loglog algorithm shall loglog algorithm proposed durand flajolet 
loglog initially designed approximate counting multisets 
produces estimator cardinal support multiset representative sequences 
principal statistical properties estimator recalled theorem 
summarize loglog algorithm function returns position bit equal binary expansion sequence known computable 
algorithm integer numbers xi representative sequence having cardinal support xi integer array integer size initialize element 
xj xj xj 
xj xj xj bits binary expansion xi max xj xj return en hh ph size support multiset corresponding representative sequence 
loglog uses log log memory bits 
turns distribution random value returned loglog algorithm depends cardinal support multiset nature elements particular representative sequence 
en number returned loglog algorithm applied multiset support cardinal theorem durand flajolet mean variance en en om en om bounded om denotes known computable sequence bounded 
idea loglog algorithm estimate number elements repeated times mind algorithm inherit properties loglog low memory consumption independence representative sequence data 
second property desirable sense real streams packets different flows mixed randomly way may difficult capture statistically 
thing estimator propose depend exact way mixing occurs 
loglog counting ip traffic elephants multisets analysis shall consider elephants ip flows contain certain number packets 
remaining flows termed mice 
consider categories ip flows take time packet dispersion account 
estimator build independent order packets arrive counter 
introducing flow types straightforward extension temporal aspect flows topic research 
terms multisets partition support multiset ee em ee em problem interested elephant problem estimate number elephants ee space complexity bounds related elephant problem section explore theoretical limits problem 
particularly interested amount memory necessary algorithm estimates pass number elephants data flow 
possible algorithms solving problem counting elephants particularly interested single pass allowed probabilities 
model algorithms functions input internal memory 
accordingly define online algorithms functions having property bm bk bm 
binary input sequence contents memory just reading st bit 
probabilistic algorithm depends sequence internal random variables 
introduce notion online algorithms includes class pass algorithm definition suits proofs results 
algorithms traffic monitoring pass usually desirable simply feasible store data 
deal deterministic algorithms randomized algorithms 
attention put randomized ones hope obtain lower memory complexity bounds relaxing accuracy result 
obtain result computation number elephants multiset different flows space complexity general deterministic probabilistic algorithms 
sense hope optimistic 
communication complexity issue order obtain lower bounds memory complexity problem introduced previously results communication complexity theory see 
idea communication complexity computation pass frequency moments multiset 
applies methodology identification properties internet flows 
application connected problem elephants appears 
theory limited basic concepts examples results shall need purpose 
communication complexity theory related game players try compute cooperatively binary function 
player knows part entry function players know 
furthermore possess infinite calculation potential perfect knowledge function 
send messages previously defined protocol player sufficient knowledge entry players compute value function 
finding protocol discussion players allows player compute function sending minimum number messages bits goal game 
accordingly communication complexity function defined minimum total number bits players exchange order compute function best protocol 
depending application context families admissible protocols defined 
closest problem way communication complexity 
protocols ith player transmit information st player 
number bits exchanged protocol simply sum size messages sent varying way communication complexity function noted illustrate notion communication complexity classical examples 
olivier alain jean marie example consider function mod computed players 
player knows second knows consider protocol player sends second player mod second player compute exactly bit transmitted impossible better 
example function arguments defined ix denotes standard scalar product 
formally set coded share element 
case 
function called computing answer question sets coded disjoint 
function proved complexity 
precisely number bits means asymptotically best protocol better player just sends second player 
consider randomized version communication complexity called randomized communication complexity 
variant player allowed return result probability result correct certain 
way randomized communication complexity function noted probability space defining probability correct ness internal random variables protocol 
implies algorithm run twice entry may return different results 
probability getting true result 
consider concrete case 
example binary function defined 
function way communication complexity 
hand log way randomized communication complexity 
see example randomized protocol result lower space bound 
case possible exhibit functions allowing certain degree error change memory complexity bound asymptotic terms 
example reconsider function example 
tolerance error way randomized communication complexity non randomized case see proof 
see similar phenomenon occurs problem 
order prove shall function introduce 
integer 
define function xy 
function computes projection binary vector dimension 
prove appendix complexity result theorem way randomized communication complexity 
space bounds elephant problem previously said memory complexity bounds related problem deterministic probabilistic case 
central link online algorithms communication complexity internal memory online algorithms plays part messages sent communication complexity protocol 
possible space complexity bounds function deduce space bounds online algorithms consequence pass algorithms 
obtain theorem exact computation number elephants online algorithm 
observe obtains bounds problem counting flows scan ports machine 
bounds problem elephants yield lower memory complexity bound 
results stronger depend 
theorem multiset support included 
cardinal 
consider online algorithm representative sequence multiset returns value needs memory bits 
proving result shall prove convenient introduce auxiliary construction 
define xi 
different null vector equivalently uk sequence indices xk equals 

vk sequence formed times element followed times value 
wk concatenation 
example 
loglog counting ip traffic property lemma sequence constructed consider representative sequence multiset 

proof observe element repeated times assumption element repeated times 
elements distinct repeated element repeated times uk equal words xy 
conversely repeated times element repeated times case 
return proof theorem proof contradiction 
suppose exists online algorithm returns representative sequence multiset cardinal equal support having elements 
suppose memory algorithm step exhibit communication protocol parties allows compute memory bits 
contradiction theorem applied 
protocol 
party converts vector sequence runs algorithm parameter communicates creates sequence runs algorithm initial memory parameter returns result equal 
online bm bm bm result computed step 
lemma step returns 
amount information passed step log maximal size plus number bits assumption 
consequently exists protocol allows compute communication bits 
concludes proof 
proceed similar result probabilistic algorithms 
theorem 
multiset support included 
cardinal consider online probabilistic algorithm representative sequence multiset associates estimator needs memory bits 

proof proof scheme proof theorem 
starts algorithm uses memory bits returns estimator property 
online algorithm construct protocol said proof modified step protocol returns result belongs open interval 
probability returns correct answer larger 
seen considering possible values 
probability result belongs 
true result probability result belong case probability getting wrong 
number bits communicated equals number bits plus log 
consequently algorithm exists protocol allows compute communication bits probability error 
impossible theorem 
olivier alain jean marie loglog ec algorithm previous section seen theoretical memory bounds problem compute exactly estimate statistically numbers elephants 
bounds satisfying applications mind large typically 
motivates investigate problem starting idea restricting attention particular reasonably practical classes multisets may possible devise algorithm allows estimation number elephants small amount memory 
section describe algorithm algorithm computes estimator call loglog ec algorithm 
analyze performance algorithm specific assumption multiset contains exactly types elements mice multiplicity exactly elephants multiplicity exactly see algorithm works general multisets 
formally restricted set multisets notation section 
accordingly em ee 
shall denote nm em ne ee nm ne 
analysis emphasize importance density elephants defined ne observe simplified case theoretical space bound remains 
proof theorem multisets kinds elements occurence ones occurences 
expect case lower space bound better 
loglog ec algorithm uses memory bits strong properties 
turns multisets reasonable proportions mice elephant allows accurate estimation number elephants 
proportion appears play crucial role difficulty problem 
addition algorithm loglog ec enjoys interesting property inherited loglog algorithm returns result independently representative sequence chosen 
algorithm principle algorithm 
original stream analyzed loglog algorithm 
results estimator en total number flows elephants mice 
parallel sub stream selected bernoulli sampling probability words packet deleted original stream probability independently previous choices 
second stream analyzed loglog algorithm 
results estimator en total number surviving flows 
probability surviving sampling larger elephant mouse proportion elephants mice increase sampled stream 
accordingly possible combine estimators recover estimated values ne nm 
precisely number mice elephants sub stream resulting bernoulli sampling original stream 
probabilities elephant mouse passes sampling respectively 
consequently average number flows sampled stream original number nm ne 
linear combination unbiased estimators give access nm ne 
principle results algorithm 
algorithm algorithm loglog ec integers real 
bp family bernoulli variables parameter xi representative sequence having cardinal support xi tables integers initialized 
set 
xj xj xj 
binary expansion xj xj xj xj bj max xj xj max xj xj return en hh ph ph loglog counting ip traffic analysis algorithm denote en random variable returned algorithm loglog ec 
results provides asymptotic mean variance estimator 
see detailed proofs 
theorem mean en en ne om bounded uniformly om proof dividing get en fen fns nn fns nn en ne fo en fen ne bounded theorem variance en en bounded uniformly value theorem 
result extended general setting mice assumed random number elements elephants assumed random number elements 
formulas apply 
particular order magnitude variance remains 
right hand side upper bound distribution size elephant support concentrated 
extension useful classification flows described priori size distribution addition features instance determined line statistics 
asymptotic expansion reveals facts 
possible reduce variance expense memory increasing just loglog algorithm 
hand standard deviation roughly inversely proportional elephant density factor 
effect compensated increasing term expansion second 
term small magnitude second term important small values 
performed reported size value conclude defining guarantees estimator asymptotic properties large 
setting experiments reported 
regarding approximation standard deviation see goes infinity standard deviation loglog running elephants 
quite reasonable large elephants possess elements mice multiset easily filtered order mice disappear 
size elephants mice random fixed anymore dimensioning done 
estimation robust sense laws respective random variables relatively concentrated mean choosing deterministic remains choice 
preliminary experiments validating assertion performed reported 
olivier alain jean marie experiments section simulations order practical idea results obtained loglog ec synthetic data 
experimental setup 
experiments order test theoretical predictions mean variance estimator 
results variance reported 
result mean expected 
concern influence second order terms variance estimator 
second question way variance decreasing respect parameter size ratio elephants mice 
want see impact choice parameter fig 
left hand side empirical variance coefficient right theoretical variance coefficient represents coefficient variation en en function 
value empirically collected left hand side theoretically obtained main terms right hand side 
plots dashed curve obtained continuous experiments choose 
shows coefficient variation generally small gets smaller grows larger 
furthermore see constant gives better result small values larger gives better results 
explained fact objective heuristic asymptotic expected give better results large 
secondly comparing empirical theoretical variances restricted leading factor observe influence ne terms appears small effective value variances 
especially case 
conclude analysis report findings shape distribution estimator ene compared distribution version ene centered reduced empirical mean variance standard normal distribution 
parameters ne elephants ns mice 
copies random variable averaged obtain 
curves indistinguishable lead believe law estimator weakly converges normal distribution goes infinity 
proving conjecture appear easy random variables involved independent 
assuming result true suggests heuristic sufficiently large ene ne ne 
estimate obtained sufficient practical applications 
loglog ec knowledge size distribution mice elephants 
current goal relax restriction estimation law mice elephants know results obtained linear memory theorem 
possible multisets completely general typical internet algorithm gives statistics number elephants 
observe done types flows quite easily extended types 
expect results similar 
loglog counting ip traffic fig 
repartition function normalized empirical distribution ene 
authors particularly reviewers extremely constructive comments 
noga alon yossi matias mario szegedy 
space complexity approximating frequency moments 
th acm symp 
theory computing pages 
ben 
modeling adsl traffic ip backbone link 
annals telecommunications nov dec 
marianne durand philippe flajolet 
loglog counting large cardinalities 
di battista zwick editors annual european symposium algorithms esa volume lecture notes computer science pages september 
jean marie 
loglog counting estimation ip traffic 
technical report forthcoming inria 
ilan kremer noam dana ron 
randomized round communication complexity 
proc 
pages 
kushilevitz nisan 
communication complexity 
cambridge university press 
lall sekar ogihara xu zhang 
data streaming algorithms estimating entropy network traffic 
proc 
sigmetrics performance pages st malo france june 
george varghese 
difficulty scalably detecting network attacks 
computers communication security pages october 
michael saks sun 
space lower bounds distance approximation data stream model 
proc 
pages 

yao 
complexity questions related distributive computing 
th acm stoc pages 
proof theorem order prove result need definition taken 
definition vc dimension class boolean functions domain say set shattered subset exists function hr hr iff largest value exists set size shattered dimension denoted dim 
olivier alain jean marie binary function note fx set boolean functions defined theorem proved theorem function constant error way randomized communication complexity vc dim fx 
prove theorem 
way randomized communication complexity bounded vc dim dx sufficient prove vc dim dx order prove theorem 
subset 
choose xy 
xy obtain easy see construction directions equivalence straightforward 
vc dim dx 
concludes proof 
