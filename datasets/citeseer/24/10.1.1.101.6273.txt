tadzebao webonto discussing browsing editing ontologies web john domingue knowledge media institute open university milton keynes mk aa uk kmi open ac uk people domingue domingue open ac uk describe systems different ways address shortcomings current approaches enabling ontology construction world wide web 
system tadzebao enables knowledge engineers hold synchronous asynchronous discussions ontologies 
tadzebao addresses fact integral part communal design dialogue largely ignored community 
second system webonto uses java client alleviate acknowledged problems creating interfaces vanilla html 

knowledge acquisition community ontologies construction knowledge intensive systems widespread 
ontologies facilitate knowledge sharing reuse borst akkermans top agent interoperability stefanelli knowledge acquisition van heijst 
ontology construction collaborative effort knowledge contained ontology represents common view shared community 
collaborative construction maintenance software community non trivial task especially community geographically spread 
problems distribution version management hardware software platform inconsistencies 
world wide web www seen offer way easing problems 
ontolingua group stanford farquhar fikes pratt rice knowledge sharing effort neches fikes finin gruber patil senator swartout project swartout patil knight russ exploited www technology delivering service collaboratively browsing editing ontologies 
approach groups forward step www technology communal knowledge construction infancy remain issues addressed problems solved 
describe systems different ways fill gaps 
dialogue example reach consensus disseminate information important activity communal design fischer lemke mccall addressed current approaches 
section give overview tadzebao web tool supports synchronous asynchronous discussions ontologies 
ontolingua systems html client interface groups acknowledge html generates interface design problems 
section review problems 
section describe webonto tool collaboratively browsing editing ontologies uses java sun client alleviate interface problems generated html 
architecture tadzebao webonto described section 
section discuss principles underlying design tools approach supports ontology building communities particular concerned software reuse 
short section related followed summary 

tadzebao support discussions ontologies 
screen snapshot tadzebao 
design goal tadzebao support asynchronous synchronous discussions ontologies 
asynchronous discussions necessary ontology design team community may spread large time zones 
synchronous discussions useful dialogue composed small utterances time pressure give users sense belonging team community 
design dialogues mainly artefact construction important allow knowledge engineers refer directly ontologies messages 
meant tadzebao integrate tools text editors drawing tools expressing general ideas tools manipulating ontologies 
describing system brief explanation name necessary 
tadzebao literally means big character poster chinese word type poster support political debate cultural revolution 
cultural revolution political argument ideology expressed placement poster tadzebao 
rebuttals comments initial argument expressed additional posters top original poster 
tadzebao uses extension metaphor guiding knowledge engineers ongoing dialogues ontologies 
tadzebao dialogues centred notepad contains series pages 
notepad page contain mixture text gif images hand drawn sketches ontology components represented ocml motta 
dialogues browsed clicking bottom right corner notepad 
shows containing design dialogue 
shall briefly describe top page turn 
cost ontology hector holly collaboratively constructing medical cost ontology 
holly left part class hierarchy representing concept economic payoff page page shown 
created page shown selecting ontology selector lower right clicking add button creating hierarchy webonto quitting webonto clicking typing text editor 
hector created page shown page cloning page clicking clone button clicking image adding sketched red lines labels intangible direct intangible indirect webonto sketching tools quitting webonto adding text 
shows holly reply hector created similar fashion 
shows unscaled version image captured shows unscaled version image captured 
ontology stefanelli currently construction part ongoing eu funded telematics project health care resource management project hc 
shows page notepad shows page 
shows image captured scaling 
shows image captured scaling 
vt page user looking help designers vt ontology constructed solution sisyphus ii yost lift configuration design problem 
user posed query annotating part existing class hierarchy class expected see 
responses query articulated new possibly cloned pages 
kmi top part page shows hierarchy ontologies 
jim left message indicating annotations ontologies reused construct application summer allocate members knowledge media institute offices new building 
essential ontologies sarah new knowledge engineer department 
colleague left message showing hierarchy ontologies currently department library 
text image colleague describes ontologies give best flavour department 
parametric design user left message containing part class hierarchy showing class parametric design ontology inherited classes separate applications 
red sketched circle page red lines kmi page label kmi ontologies classes part live broadcast 
selecting broadcast 
class hierarchy displayed ontolingua class browser 
triangles open close subgraphs widget changes root node 
taken rice farquhar gruber acm permission 
button bottom control panel broadcasts interface actions including sketching page turning adding text gif images ontologies receivers tadzebao receive button selected real time 
user asking kmi ontologies classes shown parametric design notepad 
truck cabin page contains gif image showing output cad package 
image shows positioning components truck cabin partially designed parametric design ontology 
user drawing tools draw white line indicate distance mentioned text 
clicking image creates new window showing full size version 
tadzebao displaying 
users opt browse single notepad wish 
dialogues chosen selector notepad currently showing cost ontology vt kmi 
section describe scenario showing sarah webonto browse ontologies contained image top page essential ontologies notepad 
shall review problems interface designers html create interfaces 

acknowledged problems html interfaces mentioned earlier ontolingua groups accept vanilla html imposes numerous problems interface design 
section review problems described rice farquhar gruber swartout patil knight russ categories 

data data stored central server link server client limited bandwidth small system state changes feasible 
restriction means intermediate user activities stored tightly couple interfaces provide immediate feedback direct manipulation techniques ruled 
consequence having direct manipulation interface designers repeated control widgets 
example shown snapshot ontolingua browser 
ontolingua uses metaphor similar macintosh finder displaying class hierarchies 
triangular widgets open close 
widget current node root tree 
direct manipulation interface root tree altered selecting desired node appropriate menu item 
possible icon command repeated cluttering display 

screen snapshots showing user clicking icon edit type thesis university slot changing value institution university removing screen clutter inhibiting edit widgets 
taken rice farquhar gruber acm permission 

shot connections servers respond web page requests 
server sent data web page browser connection closed 
means interface respond user actions 
possible incorporate asynchronous communication example periodically prompt save data 
additionally interface updates page level 
means interface designers limited mapping inner structure views ontology objects concepts instances web pages 
figures show ontolingua interfaces editing classes concepts 
shows screen snapshots showing user clicking icon note icon repeated widget edit type thesis university slot changing value institution university removing screen clutter inhibiting edit widgets 
shows form edit concepts instances 
fields provided edit role restrictions superconcepts 
complex representations edited text windows 
notice systems interface designer chosen map web page single object 
display contained object redisplay time time taken transfer render page unacceptable 
addition waiting page update users cognitively burdened having remember previous pages 

tyranny browser facilitate display multimedia objects wide range platforms amount control browser available html limited 
impacts interface designers ways 
exact layout appearance components prescribed 
widget set available html limited 
ontolingua clients display data limited number purely typographical features 
graphics icons purely control widgets 

screen snapshot showing editor editing concepts instances 
fields provided edit role restrictions superconcepts 
complex loom representations edited text windows 
taken swartout patil knight russ permission 

screen snapshot showing browser 
browser frames 
top frame control panel 
lower right frame display contents ontology whilst lower left frame navigation purposes 
taken swartout patil knight russ permission 
shows screen snapshot main browser 
seen browser frames 
top frame control panel 
lower right frame display contents ontology whilst lower left frame navigation purposes 
apart image documentation graphics interface represent commands edit concept create instance clone 
data displayed plain italic bold styles font 
interface designers hindered fact undesirable functionality automatically provided browsers inhibited 
example back button available browsers enables users move date states deleted objects referenced 
section describe webonto web tool collaboratively browsing creating editing ontologies designed overcome problems java client 
emphasised criticisms aimed interface designers systems described 
believe cases designers remarkable job considering severe constraints imposed 

webonto support ontology browsing creation editing webonto designed support collaborative browsing creation editing ontologies suffering interface problems described previous section 
particular webonto designed provide direct manipulation interface displaying ontological expressions rich medium 
webonto aimed easy facilities scaling large ontologies 
webonto designed complement ontology discussion tool tadzebao 
webonto architecture composed central server clients written java 
detailed description architecture section 
remainder section describe scenario showing sarah uses webonto browse ontology 
sarah clones top page clone button essential ontologies notepad clicks image 
action creates window shown 
list ontology objects toolbar graphical display area 
screen snapshot showing webonto window created clicking image top page essential ontologies notepad 
graphical display area shows hierarchy currently loaded ontologies 
features display emphasised data ontologies displayed graphics icons moved rubber banding selected operated shows direct manipulation interface immediate feedback local rendering enables transfer large images graph viewed large image 
sarah decides browse sis gen design ontology ontology representing solution sisyphus room allocation problem selecting oval labelled sis choosing view ontology ontology menu 
topleft window shows filtered list objects selected ontology 
sarah elect view items ontology classes instances functions procedures rules 
hide items inherited ancestor ontologies 
sarah viewing classes included sis gen design ontology ancestors gen design sisyphus 

screen snapshot showing output running sis ontology 
text red names instances selected viewed 
mentioned previous section ontological expressions represented ocml motta operational knowledge modelling language originally developed context vital project shadbolt motta rouge provide operational modelling capabilities vital workbench domingue motta watt 
benefit ocml users browse application models running starting trace output 
sarah runs sis gen design application choosing run file menu 
ontology run server output displayed window shown 

screen snapshot showing display instance 
colours indicate ocml types red instance green class purple relation orange ontology 
window shown automatically highlights terms part currently viewed ontology 
highlighting achieved drawing text colour colour denotes type ocml construct represented 
red items represent instances 
possible display coloured text html current approaches described section display generated server 
webonto interface data kept locally 
means changes appearance display example highlighting certain types ocml items changing appearance highlighted item incrementally call server 
sarah selects occurrence instance parameter thomas 
selection shown grey box possible html interface 
clicking inspect item button changes display show structure instance shown 
see parameter thomas defined sis gen design ontology instance class parameter slots value range depends affects values nil nil 
note colour indicate type 
selecting class parameter clicking button displays structure class shown 

screen snapshot showing class parameter 
sarah selects class set clicks draw descendants button changing graphical display show class hierarchy class set shown 
note graphical display image rendered locally minimising amount data transferred 
displaying hierarchy sarah decides edit part hierarchy 
selects base ontology list currently ontologies bottom left window selects view ontology ontology menu 
sarah selects edit mode edit menu 
changing edit mode alters appearance window ways generating direct manipulation environment creating editing ocml constructs 
appears graphical display area containing class instance icon 
second edit specific icons appear edit current selected object undo edit 
sarah starts edit class set list 
selecting class graphical area clicking button 
source code class retrieved server displayed new window bottom 
text edited window sarah update source server clicking done button 
editing existing class sarah decides create new class ordered set 
dragging new class icon clicking icon shift key held 
new text edit window appears types text ordered set 
point window appearance shown 
adopting approach editing environment similar browsing environment follows edit place metaphor rice farquhar gruber adopted ontolingua browser 
motivation metaphor minimise number different windows icons menus offered user 
webonto edit place metaphor pushed switches pure browse mode edit mode incremental changes display user wait entire page re rendered 
sarah finishes session quitting webonto 
point image page essential ontologies notepad changes show altered set class hierarchy 
leaves comment describing alteration page 

screen snapshot showing user editing part set class hierarchy base ontology 
scenario outlined section seen sarah browsed sis gen design ontology trace output edited ancestor ontology adding new page asynchronous discussion essential ontologies 
noted webonto incorporates sketching synchronous communication tools described section enabling users hold synchronous discussions details ontology 
synchronous communication tool relies fact architecture allows connections server clients left open 

architecture shall describe architecture tadzebao webonto server tadzebao webonto java clients 
servers responsible storing maintaining knowledge content user dialogue clients interfaces stored content 

server seen server built top server riva ramoni specialised server written common lisp steele 
addition implementing standard protocol server offers library high level lisp functions dynamically generate html pages facility dynamically creating image maps server server communication method 
passes requests webonto tadzebao clients appropriate servers 
webonto server interacts ontology libraries represented ocml responsible loading requested libraries running applications converting ocml structures ascii strings sent sending requested ocml source code webonto clients updating server source code webonto clients locking ontology edited sub ontologies remain unlocked 
locking ontology ensures conflicting edit operations users changing ocml structure occur 
webonto designed collaborating teams restrictions edit ontology 
tadzebao server responsible maintaining notepad library contains content delivering requesting tadzebao clients 
broadcaster sends incoming requests broadcasting client registered receiving clients 
clients connected server 
clients tadzebao construct dialogues 
third client webonto edit ontology 
fourth client broadcasting clients open stream shown red 
server ocml libraries ocml webonto server tadzebao server tadzebao client server tadzebao client webonto client notepad library broadcaster broadcasting webonto client 
architecture tadzebao webonto server 
receiving webonto client receiving webonto client receiving webonto client 
tadzebao client shows architecture tadzebao client 
client responsible presenting consistent view selected 
client ensures consistency obtaining updates notepad library server user actions require date view performed 
special user actions include moving page current page selecting notepad view cloning page 
changes notepad adding text comment result immediately uploaded server stored notepad library 
changes page session created 
central part client command handler 
input events user converted event handler commands 
command handler dispatches drawing labelling commands module page specific commands cloning page notepad handler 
display notepad page controlled page uses text gif ocml component drawing modules 
tadzebao client broadcasting mode command handler copies commands broadcaster 
broadcaster converts commands ascii string passed connector 
connector deals low level tasks opening connections server listening incoming data 
receive mode receiver converts incoming ascii strings commands passes command handler 
commands tadzebao client similar command objects gamma helm johnson vlissides netscape plug kremer facilitate realtime sharing concept maps 
user event handler tadzebao client receiver connector command handler augmented broadcaster notepad handler 
architecture tadzebao client 
page gif ocml component 
webonto client shows architecture webonto client 
shares event handler connector receiver broadcaster modules tadzebao client described previous section 
ontology browsing commands viewing new ontology inspecting ocml structure result requests sent server relevant data 
server encodes ocml objects ascii strings 
string representation unpacked ocml structure parser 
server receives request view ontology sends back ontologies uses headers ocml items header contains item name type relevant names related items class parents 
structure parser converts string text representation headers internal java objects stored headers store module 
store graphical draw graphical representations ontologies items display list items 
store structure 
user clicks button request sent server detailed information selected ocml item 
structure parser sends server reply structure formats information seen figures 
displaying output structure uses header store recognise ocml items 
user event handler webonto client receiver connector command handler editor augmented broadcaster structure parser header store graphical 
architecture webonto client 
structure items architecture designed maximise tadzebao webonto whilst minimising required bandwith 
principles underlying design architecture described section 

discussion section describe approach enabled interfaces constructed suffer difficulties described section describing additional issues influenced design tadzebao webonto discuss approach supports ontology building communities 

overcoming problems vanilla html 
data 
key aspect approach adopted webonto move data server client 
general splitting data tradeoff 
data kept server benefits consistent copy reducing computation space requirements user 
suffers relatively slow access scaling issues matter large central server point size user base causes simultaneous requests 
approach splitting data simple principles keeping interface data local transferring minimal data support interface central server holding sole representation ocml object structures embedding knowledge ocml java client 
localisation interface data obvious principle direct manipulation environment demands fast access interface data 
data traffic server clients kept minimum sending minimally required data support user interactions 
consistency problems reduced having detailed representations ocml objects server 
embedding knowledge ocml client structure parser structure reduces amount data required sent server represent ontological entities minimises data traffic 

shot connections 
just vanilla html interfaces connections server initiated user interface actions 
difference tadzebao webonto clients support incremental changes display connections left open support synchronous communication 
command object representation user actions minimises data sent broadcasting 
example broadcast mode moving top node graphical display area result ascii string move node set list sent receivers 
possible clients periodically request information period time pre set number user interface actions problem new connections initiated client remains java applets create server sockets 

tyranny browser 
java gives developers extensive control functionality appearance layout interface 
fact ontolingua browser uses java draw class hierarchies version completely new user interface written java ksl 
remaining problems concerned security 
example possible write files local machine java applet 

additional design issues considered ontology construction collaborative design problem viewed hci perspective 
apart overcoming problems associated html guiding principle design tadzebao webonto tools creating ontologies tools discussing ontologies tightly integrated 
number discourse environments journal publishing sumner buckingham shum design rationale fischer lemke mccall shown users need able move easily discussions artefact constructed 
dialogue utterances able refer directly artefact 
consequence principle generic shared whiteboard tools microsoft considered 
relationship java clients lisp server similar interface underlying application 
technologies corba java rmi sun provide mainly syntactic support linking object system components rmi design facilitate java java communication 
consider technologies inappropriate type connection required tadzebao webonto little consequence hci perspective 

supporting ontological communities described start section design goal tadzebao support asynchronous synchronous discussions ontologies allowing free expression text sketching tools direct ontological constructs 
moving need reflect needs users 
clear ontologies different sorts users different requirements 
separate context investigating needs novice programming communities supported web domingue lessons learned applied expert programming communities domingue 
need classify ontology users assess needs 
type study carried various design communities including software programmers curtis krasner telephone engineers sumner 
terms technology support believe goal build chen gaines ontology community 
defined computer mediated environments supporting community wide processes expedite virtual interactions chen gaines virtual interactions virtual sense virtual space fact intention collaborate may existed artefact created 

software reuse 
software reuse involves finding segments code implement desired behaviour 
ontologies useful provide multi level formal description code stored library neches fikes finin gruber patil senator swartout 
ontologies aid configuring software components 
users search software components browsing ontologies 
problematic users familiar ontologies 
approach described provides forms extra help unfamiliar users 
firstly ocml operational provides hooks common lisp steele running applications available web 
users examine behaviour applications trace output direct manipulation move relevant part ontology 
examine trace output improved software visualization sv techniques developed vital workbench domingue www sv infrastructure constructed teaching programming web domingue 
dialogues stored tadzebao form design rationale moran ontologies valuable source extra documentation users 
application tadzebao webonto software reuse carried ibrow project ibrow 
ibrow esprit open ltr project objective developing intelligent brokers able distributively configure reusable components knowledge systems www 

related ontolingua server farquhar fikes pratt rice landmark system ontology community 
registered users described serious rice farquhar gruber 
design goal ontolingua server facilitate collaborative development ontologies 
name suggests architecture consists central server uses protocol communicate remote users logged web browser 
ontolingua interface created html widgets described detail section 
server swartout patil knight russ implemented cl common lisp web server loom knowledge representation system macgregor lisp code interface 
ontolingua server interface created html widgets described detail section 
knowledge science institute university calgary carried considerable sharing concept maps web 
concept maps diagrammatic form knowledge representation informally formal semantics gaines 
access gaines shaw macintosh concept mapping tool written class library gaines web provided registering client helper netscape defining new mime type apple events 
access concept maps non macintosh platforms enabled cgi scripts concept map gif converter 
resulted program kremer available netscape plug javascript netscape netscape 
plug uses command objects facilitate realtime sharing concept maps 
java implementation completed flores 
shade project mcguire kuokka weber tenenbaum gruber olsen supports sharing engineering knowledge internet variety technologies including ontolingua server kqml agent communication language weber genesereth fritzson mckay mcguire shapiro beck 

summary ontologies represent shared point view ontology construction carried group people 
www technology facilitate communal construction group spread large distances attracted considerable attention 
systems different ways address deficiencies current approaches www technology communal ontology construction 
integral part communal design process dialogue artefact construction 
important discussions artefacts representations artefact integrated fischer lemke mccall 
tadzebao supports type integrated dialogue multimedia contain mixture text gif images ontologies 
html create interfaces imposes severe constraints interface designers 
problems caused need data restriction shot connections fact interface sits browser partially controlled 
webonto designed support collaborative browsing creation editing ontologies suffering interface problems generated html 
section described webonto provides direct manipulation interface graphical representations ontology constructs 
currently dialogues webonto tadzebao consist ontology representations graphics text 
integrate streaming audio system currently constructed part kmi stadium project eisenstadt buckingham shum freeman 
kmi stadium java application explores large scale focused broadcasting realtime audio 
tadzebao webonto currently evaluated house confines ongoing telematics project university madrid 
feedback evaluations incorporated tools set dedicated server kmi open 
hope step creating ontology construction community 
enrico motta comments early draft 
medical ontologies displayed implemented project ontologies implemented enrico motta enrico motta zdrahal 
ideas generated numerous discussions enrico motta zdrahal marc eisenstadt 
enrico motta thought tadzebao name 
james rice bill swartout giving permission figures papers 
funded project hc european union telematics applications programme 

knowledge level description initial vehicle design 
encode environment configuration design technical report tr encode 
project ct 
borst akkermans top 
engineering ontologies 
proceedings th banff knowledge acquisition workshop banff alberta canada november 
chen gaines 
knowledge acquisition processes internet communities 
proceedings th banff knowledge acquisition workshop banff alberta canada november 
curtis krasner 
field study software design process large systems 
communications acm vol 
iss 
pp 

domingue motta watt 
emerging vital workbench 
ed 
boy gaines ganascia 
kodratoff knowledge acquisition knowledge systems th european workshop ekaw toulouse france september pp 
springer verlag 
domingue 
software visualization technology validation knowledge systems 
proceedings th banff knowledge acquisition workshop banff alberta canada february march 
domingue 
teaching programming distance internet software visualization laboratory 
journal interactive media education 

domingue 
fostering debugging communities web 
communications acm vol 
pp 
april 
eisenstadt buckingham shum freeman 
kmi stadium web audio visual interaction reusable organisational expertise 
proceedings workshop knowledge media improving organisational expertise st international conference practical aspects knowledge management basel switzerland 
stefanelli ontologies multi agent systems 
proceedings th banff knowledge acquisition workshop banff alberta canada november 
farquhar fikes pratt rice collaborative ontology construction information integration 
knowledge systems laboratory department computer science ksl august 
weber genesereth fritzson mckay mcguire shapiro beck 
specification kqml agent communication language 
darpa knowledge sharing initiative external interfaces working group 
fischer lemke mccall 
making argumentation serve design 
human computer interaction vol 
iss 
pp 

flores distributed concept mapping collaboration java 
proceedings th banff knowledge acquisition workshop banff alberta canada november 
gaines 
interactive visual language term subsumption languages 
proceedings ijcai sydney australia august 
gaines 
class library implementation open architecture knowledge support system 
international journal human computer studies 
gaines br 
shaw 
concept mapping web 
world wide web journal pp 

gamma helm johnson vlissides 
design patterns elements reusable object oriented software 
addison wesley reading massachusetts 
project hc telematics applications programme www vision auc dk chi projects hc html ibrow ibrow intelligent brokering service knowledge component reuse world wide web 
www iiia csic es richard esprit ibrow sum html kremer 
multi user programmable web concept mapping shell handle multiple formalisms 
proceedings th banff knowledge acquisition workshop banff alberta canada november 
ksl ksl services forthcoming release notes www stanford edu doc release notes text 

sisyphus models problem solving 
gmd technical report 
macgregor 
evolving technology classification representation systems 
ed 
sowa principles semantic networks explorations representation knowledge 
morgan kaufmann 

common lisp hypermedia server proceedings international conference world wide web 
geneva cern may 
mcguire kuokka weber tenenbaum gruber olsen 
shade technology knowledge collaborative engineering 
journal concurrent engineering applications research september 
microsoft www microsoft com 
moran carroll 
design rationale concepts techniques ed lawrence erlbaum associates hillsdale nj 
motta 
reusable components knowledge models 
phd thesis 
knowledge media institute 
open university uk 
available kmi open ac uk people motta thesis html 
neches fikes finin gruber patil senator swartout 
enabling technology knowledge sharing 
ai magazine pp 

netscape communications netscape javascript 
home netscape com products navigator version script index html 
netscape communications developer information 
netscape navigator developer information home netscape com products navigator version 
rice farquhar gruber 
web window system 
knowledge systems laboratory department computer science ksl september 
www stanford edu doc papers ksl ksl html riva ramoni 
specialised server distributed ai applications 
computer networks isdn systems 
shadbolt motta rouge 
constructing knowledge systems 
ieee software pp 
november 
steele 
common lisp language 
nd edition 
digital press 
sumner high tech toolbelt study designers workplace 
proceedings human factors computing systems chi denver pp 
may 
sumner buckingham shum documents discourse shifting conceptions scholarly publishing 
human factors computing systems chi los angeles april 
sun microsystems java programming language sun microsystems java sun com sun microsystems remote method invocation 
java sun com products jdk docs guide rmi swartout patil knight russ 
distributed large scale ontologies usa 
proceedings th banff knowledge acquisition workshop banff alberta canada november 
van heijst 
role ontologies knowledge engineering 
phd thesis 
university amsterdam 
yost 
configuring elevator systems 
workplace integration technologies group digital equipment locke drive lm ma 
december 
unpublished 
