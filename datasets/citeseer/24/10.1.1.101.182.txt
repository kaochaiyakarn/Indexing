semantic web enabled composition web services medjahed dissertation submitted faculty virginia polytechnic institute state university partial fulfillment requirements degree doctor philosophy computer science applications dr bouguettaya chair dr reza dr ing ray chen dr mohamed dr ramakrishnan january th falls church virginia usa keywords semantic web web service ontology service composition 
copyright medjahed semantic web enabled composition web services medjahed dissertation novel approach automatic composition web services envisioned semantic web 
automatic service composition requires dealing major research thrusts semantic description web services composability participant services generation composite service descriptions 
propose ontology framework organizing de semantic web services 
introduce concept community cluster web services domain interest 
community defined instance ontology called community ontology 
propose ity model check semantic web services combined avoiding unexpected failures run time 
model defines formal safeguards meaningful composition composability rules 
introduce notions composability degree composability cater partial tal composability 
composability model propose set algorithms automatically generate detailed descriptions composite services high level specifications composition requests 
introduce quality composition qoc model assess quality generated composite services 
tech niques dissertation implemented webdg prototype accessing government web services 
conduct extensive performance study analytical experimental proposed composition algorithms 
supported nsf digital government program eia 
mother father wife daughter sisters brothers 
acknowledgments advisor bouguettaya full support studies 
am fortunate opportunity supervision 
thirst excellence taught scholarly research helped think creatively independently 
guidance patience ph research greatly appreciated 
forget enjoyable experience working 
express gratitude reza ing ray chen mohamed serving thesis committee helpful comments 
authors james beard benatallah ath man bouguettaya jerry cameron ahmed elmagarmid lily hao long yao meng anne ngu mourad ouzzani xu yang productive enjoyable collaborations 
anonymous reviewers comments earlier drafts papers 
name persons deserve mother father 
constant love support 
am indebted wife encouragement 
presence happy hard times invaluable moral help instrumental conduct research 
patience support 
continuous encourage ment sister receives 
pushed pursue ph hesitate provide necessary help decided 
offer daughter sisters brothers love support 
owe special friend brother ex mourad ouzzani 
helped start ph study 
dear friend countless hours spent discussing research issues matters life 
enjoyed time friends zaki malik mourad ouzzani xu yang 
carter program support technician department computer science virginia tech making administrative business transparent contents list figures list tables xiv semantic web services 
web service composition motivation 
case study government web services 
thesis statement 
automatic composition semantic web services 
different types composition 
research issues 
major contributions 
dissertation organization 
interactions web taxonomic perspective architecture web interaction framework 
taxonomy semantic web interactions 
interaction layers 
dimensions semantic web interactions 
interactions pre semantic web era 
electronic data interchange edi 
vi software components 
workflows 
trends supporting semantic web interactions 
ontologies 
web services 
software agents 
xml interaction standards 
summary discussion 
comparison semantic web interaction technologies 
web services related technologies 
role web services semantic web landscape ontological framework web services proposed model semantic web services 
ontological support web services 
structure community 
generic operations 
community members 
operational description communities 
syntactic attributes 
static semantic attributes 
dynamic semantics 
qualitative properties 
registering web services communities 
web service registration process 
importing generic operations 
peer peer approach managing communities 
propagating changes initiated community providers 
propagating changes initiated service providers 
vii composability model semantic web services proposed model composability 
horizontal vertical hybrid composition 
properties composability rule 
composability degree 
composability 
syntactic composability rules 
composability operation granularity 
composability message granularity 
static semantic composability rules 
composability operation granularity 
composability message granularity 
dynamic semantic composability 
qualitative composability 
business process composability 
composition stored templates 
composition soundness 
automatic composition semantic web services specification composition requests 
orchestration model 
describing composition sub requests 
customization composer profiles 
outsourcing web services matchmaking phase 
vertical composition 
vertical composition 
generating composite service descriptions 
replacing sub requests composition plans 
inserting pre post operations 
viii quality composition 
implementation performance study webdg prototype 
webdg services 
architecture 
webdg scenario 
web service benchmarking framework 
statistical distribution models 
generation flow 
architecture 
performance study 
analytical model 
experiments 
summary 
related automatic composition web services 
research prototypes 
standardization efforts 
deployment platforms 
summary 
directions research 
bibliography vita ix list figures web services market growth 
case study government social welfare services 
composing government web services 
automatic composition web services 
architecture web interaction framework 
semantic web interactions running example 
edi interactions 
component interactions 
workflow system characteristics 
web service model 
xml interaction standards 
technologies semantic web interaction framework 
proposed web service model 
subset daml oil specification community ontology general structure community 
operation execution states 
example opd diagram 
web service registration process 
service registration member agent algorithm 
service registration community agent algorithm 
propagating changes initiated community provider mem bers 
propagating changes initiated community providers peers generic operation modification community agent algorithm 
propagating changes initiated service providers 
changes issued service providers member agent algorithm 
changes issued service providers community agent algorithm reaction changes issued community providers member agent algorithm 
composability stack 
horizontal composition 
vertical composition 
hybrid composition 
composability rules 
relationships composability rules 
example composition template 
example stored template 
overview proposed approach service composition 
modeling composition request activity diagrams 
composition request single sub request 
description composition request csl 
main matchmaking algorithm 
operation centric algorithm vertical composition 
syntactic operation semantic composability 
message composability 
behavioral composability 
community centric algorithm vertical composition 
automaton states transitions definition 
updating input automata 
xi message centric algorithm vertical composition 
flow graph 
updating flow graph 
flow graph driving directions example 
flow graph language translation example 
vertical composition 
replacing sub request composition plan 
replacing sub request composition plan 
inserting pre post operations 
algorithm composition soundness 
webdg architecture 
discovering government services 
mappings composite service operations 
uml class diagram statistical models 
uml activity diagram web service generation 
architecture 
generation interface 
analyzer interface 
publisher interface 
composition time operation centric algorithm 
composition time community centric algorithm 
community centric algorithm different numbers communities composition time message centric algorithm 
composition time operation community message centric algorithms 
static semantic composition operation community mes sage centric algorithms 
experiments syntactic semantic composability opera tion centric algorithm 
xii experiments syntactic semantic composability com centric algorithm 
experiments syntactic semantic composability message centric algorithm 
experiments community centric algorithm various numbers communities 
experiments total composition times different algorithms experiments static semantic composition times different xiii algorithms 
list tables different types composition 
interaction layers 
interaction dimensions 
agent properties 
pre semantic web technologies vs interaction layers 
semantic technologies vs interaction layers 
pre semantic web technologies vs interaction dimensions 
semantic web technologies vs interaction dimensions 
assigning values generic operation attributes 
quality operation model 
composability rules properties 
instantiations generic composability 
inference rules operator 
inference rules operator 
inference rules operator 
inference rules operator 
inference rules operator 
inference rules operator 
enabling technologies 
xiv symbols parameters 
simulation settings 
experiments syntactic semantic composability opera tion centric algorithm 
experiments syntactic semantic composability com centric algorithm 
experiments syntactic semantic composability message centric algorithm 
experiments community centric algorithm various numbers communities 
experiments total composition times different algorithms experiments static semantic composition times different algorithms 
prototypes vs interaction layers 
prototypes vs interaction dimensions 
deployment platforms 
xv chapter web excellent tool elicit connectivity wealth information sources previously inaccessible 
initially aimed enable sharing information scientists web evolved cater governments businesses individuals data applications web accessible 
original design web served purpose went anticipated predictions 
number data applications available web increased tremendously apparent web longer sustain growth form 
large proportion data current web understandable humans custom developed ap plications 
main impediment lack semantics enable machines understand automatically process data merely display 
semantic web emerging paradigm shift fulfill goal 
defined extension existing web information defined meaning 
ultimate goal envisioned semantic web transform web medium data applications automatically understood processed 
medjahed chapter 
semantic web services development technologies supporting envisioned semantic web priority various research communities database artificial intel 
major player enabling semantic web concept web service :10.1.1.21.61
web service set related functionalities programmatically accessed web 
examples web services span sev eral application domains including government tax preparation commerce stock trading 
web services gradually root convergence business government efforts making web place choice types activities 
maturity xml web service tech soap uddi wsdl prominent factor contributing large adoption web services near 
summarizes growth web services market predicted 
prediction conforms law short term adoption new technologies occurs quickly expect long term impact far greater realize 
web services market growth key player spotlight envisioned semantic web concept ontology 
ontology defined formal explicit speci fication shared conceptualization 
ontologies developed artificial intelligence community facilitate knowledge sharing reuse 
medjahed chapter 
nowadays increasingly seen key enabling semantics driven data access processing 
ontologies expected play central role empower web ser vices semantics 
combination powerful concepts web services ontologies resulted emergence new generation web services called semantic web services 
semantic web services poised building blocks tomorrow web semantic web :10.1.1.21.61
applications exposed web services understood shared invoked automated tools 
semantic web services spurred intense activity industry academia address challenging research issues automatic selection monitoring composition web services 
diversity issues calls design development comprehensive web service management system web services treated class objects manipulated pieces data 
includes architectural components neces sary tackle web service research issues 
introduce convenience flexibility effectiveness managing web services 
phd dissertation focus automatic composition semantic web services 
web service composition motivation web service composition refers process combining web services provide value added service 
emerging technology choice building cross organizational applications web 
mainly motivated factors 
adoption xml messaging established ubiquitous protocols enables communication disparate systems 
major existing environments able communicate parse xml documents 
second document mes model web services caters loosely coupled relationships orga applications 
contrast technologies software components generally object communication yield ing systems coupling applications tight 
third tomorrow medjahed chapter 
web expected highly populated web services 
asset turned web service drive new revenue streams create new efficiencies 
identify types web services simple composite 
simple services internet applications rely web services fulfill con requests 
composite service defined outsourced web services called participant services working tandem offer value added service 
tax example composite service citizens file taxes 
combines simple web services financial services citizens companies get information banks investment companies services retrieve investment information electronic tax filing services provided state federal revenue agencies 
business perspective web service composition offers advantages 
composite services allow organizations minimize amount required develop applications ensuring rapid time market 
second applica tion development web services reduces business risks reusing existing services avoids new errors 
third composing web services en ables reduction skills effort requirements developing applications 
possibility outsourcing best class services allows com increase revenue 
case study government web services outcomes research generic applicable wide range applications area government case study 
major concerns government improve government citizen interactions information communication technologies 
webdg web digital government project indiana family social services administration virginia department aging 
provides welfare programs assist low income citizens strengthen families medjahed chapter 
children help elderly disabled people 
offers large spectrum programs services assist senior citizens 
collecting social benefits currently frustrating cumbersome task 
citizens visit different offices located outside home town 
additionally case officers delve wealth proprietary applications access welfare programs best meet citizens needs 
case study government social welfare services consider scenario typical application domain fig ure 
assume citizen mary handicapped indigent wants receive services area agency aging aaa 
typically travel mountain county aaa interview 
case john case worker agency assess kind services mary need 
medjahed chapter 
delve large number social services match features services mary particular needs 
john determines mary may qualify fol lowing services transportation elderly handicapped meals wheels meals providers senior activity center residential repair nursing home senior market nutrition program insurance counseling program legal aid 
mary information transmitted different means communication including email mail fax phone 
mary may visit agencies insurance counseling agency 
delay processing usually rule exception cases 
illustrate inadequacy current system assume mary decides move valley county developed high altitude sickness 
case worker valley aaa initiate highly manual error prone process 
composing government web services difficulty collecting social benefits prevents senior citizens ing self dependent consequent harmful impact welfare health 
facilitate applications satisfy citizens needs organize applications web services 
services may individually combined provide value added services 
assume john planning organize visit senior activity center sac 
john re quest includes sub requests 
sub request typically performed executing web services 
john retrieves list citizens interested visiting sac sr 
assume john gets names zip codes citizens full addresses 
john sets appointment visit senior activity center sr 
visit scheduled john gets driving directions citizen location sac sr 
medjahed chapter 
notifies citizen date time visit driving directions sac sr 
thesis statement web service composition taken central stage emerging research area 
techniques proposed 
standardization efforts way supporting web service composition bpel ws 
techniques standards provide little support se mantics participant services messages interactions 
additionally generally require dealing low level programming details may lead unexpected failures run time 
illustrate challenges raised web service composition consider composition request depicted 
assume sub requests sr sr executed invoking web services lookup sac schedule visit respectively 
case social worker composer understand exact format content semantics messages exchanged lookup sac schedule visit 
check lookup sac schedule visit combined manually specify way messages mapped 
additionally needs identify way invoke lookup sac schedule visit protocols supported lookup sac schedule visit 
determine way lookup sac schedule visit define business process order messages semantics interactions 
promising approach dealing aforementioned issues tion composition process :10.1.1.21.61
tedious process conducted human intervention 
efforts required users easier faster web services composed 
propose framework automatic composition semantic web services 
composers specify part desired composition tasks performed concern part services outsourced 
medjahed chapter 
provide definitions actions perform 
process composing web services selecting web services plugging operations forth transparent users 
detailed descriptions composite services automatically generated composers specifications 
characteristics web service environments automatic com position process 
number services available web growing fast pace 
service composers delve potentially vast amount available services find services interest check interact compose 
second web service space highly dynamic 
new services expected avail web 
requires ability select best relevant available participants composite service time 
third participant services generally deployed hetero environments 
heterogeneity occurs different levels including syntactic communication semantic content business logic levels 
composite services need understand deal peculiarities participant service 
execution composite service typically spans organizational boundaries requires capability interacting web services autonomous 
participant services considered services 
perceived interacting independently 
automatic composition semantic web services illustrate major research issues developing semantic web enabled service composition approach consider government scenario 
composition engine delve service space determine participants best serve sub request 
simple services relevant sub requests sr sr sr respectively get citizens list medjahed chapter 
schedule visit notify citizens 
automatic composition web services get driving directions sub request sr returns driving directions citizen name zip code address sac 
sim ple service offers functionality solution compose existing web services way transparently fulfill desired objective sub request sr 
composition engine finds simple services rele vant people lookup direction address 
people lookup returns citi addresses names zip codes 
direction address returns driving directions initial final address 
composition engine automatically compose people lookup direction address medjahed chapter 
execute sr 
scenario challenging consider relationships may exist web services 
example invocation schedule visit service requires invocation lookup sac service get list senior activity centers 
pre execution relationships generally dictated business logic web services lookup sac schedule visit 
may reflect government regulations 
example applying certain welfare programs unemployment benefits may require access applicant record taxation office 
note web services may linked post execution relationships 
composition engine able automatically include pre post execution relationships generated composite service 
different types composition example depicted introduces notions composition cardinality mode 
composition cardinality refers number participants selected sub request 
define cardinalities 
cardinality sub request mapped participant service 
example sub request sr mapped service get citizens list 
example sub request sr 
sub request mapped service notify citizen 
cardinality sub request mapped set participants executed specific order 
example sub request sr mapped services people lookup direction address 
composition mode refers way participants combined 
de fine composition types horizontal vertical hybrid 
horizontal compo sition refers supply chain combination web services 
example people lookup direction address horizontally combined der people lookup direction address 
vertical composition refers outsourcing web service sub request web service 
example sr vertically composed lookup sac 
hybrid composition combines medjahed chapter 
horizontal vertical composition 
example sr vertically composed services people lookup direction address horizontally composed 
horizontal na vertical na hybrid table different types composition notions composition mode cardinality types com position possible 
summarize table different types compositions 
na applicable means corresponding combination composition mode cardinality feasible 
horizontal composition implies combina tion web services 
cardinality 
vertical composition refers outsourcing web service 
combined cardinality 
hybrid composition refers general mode 
may horizontal vertical compositions 
example composition depicted hybrid 
combines horizontal sr vertical sr compositions 
dissertation consider types composition mentioned table 
research issues illustrated aforementioned example automatic composition seman tic web services raises challenging issues specification composers requests composers specify requests composition organize visit senior activity center un ambiguous way 
composer request may include sub requests lookup senior activity center 
issues need addressed follows composers specify participant services medjahed chapter 
ii composition engine interpret composer request iii different sub requests orchestrated 
orchestration refers execution order sequential parallel different sub requests condition certain sub request may may executed 
understanding semantics web services composition engine received interpreted request composition delve web service space locate potential participants 
large size space sheer heterogeneity web services need define meaningful organization space filter interactions accelerate service searches 
web services described way captures semantics 
government scenario web services may located county local agencies different counties state state agencies different states federal agencies 
additionally ser vices may offered heterogeneous providers state federal government agencies department health human services busi restaurants participating government program volunteer centers meal non profit organizations american red cross 
composition engine able limit search web services relevant composition request 
understand direction address provides driving direction location 
checking composability participant services assume composition engine able understand capabilities web services 
step select participant services 
selection process done making sure participants interact 
refer task composability 
government scenario composition engine verify people lookup compos able direction address depicted 
issue medjahed chapter 
develop model clearly defines web service features need compared composability 
example need sure message parameter returned people lookup similar terms semantics parameter required direction address 
composability process compare web service features different granules messages operations services levels syntactic se mantic qualitative 
heterogeneity web services unrealistic assume participants fully composable 
example people lookup direction address may agree se mantics message parameters different communication protocol soap soap mime 
composition engine return boolean type answers regarding composability web services 
flexible cater partial total composability 
generating composite service descriptions composition engine generates description composite service 
description clude details list participants services orchestration execution order way interconnected mappings messages 
generation process consider types com position mentioned table 
orchestration participant services important issue needs addressed generation process 
define types orchestration composer defined system generated 
composer defined orchestration specified users composition requests 
example states execution order sub requests sr sr sr sr 
system generated orchestration automat ically derived composition process 
includes services horizontally composed sub request sr vertically composed sub request sr pre post execution relationships sub request sr 
composite service descriptions may generated composi tion request 
composition engine case able assess medjahed chapter 
quality generated composite services 
major contributions propose generic approach automatic composition web services semantic web 
provide implementation approach webdg prototype 
precisely research contribution focuses semantics aware description organization web service space propose ontology framework organizing describing web services semantic web 
framework provides architectural foundation automatic composition web services 
introduce concept community cater ontological organization web services 
web services clustered communities domain interest 
service providers identify community interest register service 
community defined instance ontology called community ontology 
community ontology includes set generic operations customized underlying services 
generic operation identified set attributes including syntactic message parameters semantic purpose behavioral business logic qualitative cost time properties 
multilevel composability model semantic web services pro pose composability model check web services combined avoiding unexpected failures run time 
composability checked set rules organized levels syntactic static se mantic dynamic semantic qualitative business process levels 
levels check composability service messages operations 
rule level compares specific pair attributes interacting web services 
business process level checks composability composite service gran ule 
corresponding rules verify meaningfulness compo medjahed chapter 
sition web services composition provides value added service 
composability rule specifies constraints requirements checking horizontal vertical hybrid composability 
define notions composability degree composability cater partial total composability 
automatic composition semantic web services propose approach automatic composition semantic web services 
pro posed approach consists conceptually separate phases specification matchmaking generation 
specification phase enables high level customized descriptions desired compositions 
composers specifications include constructs orchestration semantic description composi tion sub requests 
matchmaking phase uses composability model generate composition plans conform composers specifications 
com position plan refer list participant services way ser vices interact plugging operations mapping messages realize corresponding sub request 
develop set algorithms checking composability generating composition plans 
algorithms consider composition cardinalities 
gen eration phase returns detailed composite service descriptions 
descrip tions include orchestration composer defined system generated participant services 
define quality composition qoc model assess quality generated composite service 
implementation performance study provide implementa tion proposed techniques webdg prototype 
adopt emerging web service standards including wsdl uddi soap 
define ana model studying performance proposed algorithms com position 
conduct set experiments evaluate performance scalability algorithms 
purpose define testbed web services called web services benchmarking framework 
medjahed chapter 
testbed mimics characteristics real web service environments dy size heterogeneity different service capabilities 
main features include customized generation user controlled gener ation statistical distribution models poisson service arrival rate extensibility adding new service attributes 
com pare results obtained analytical model returned experimental study 
dissertation organization remainder dissertation organized follows 
chapter depth study interaction technologies pre semantic web semantic web 
propose framework comparing semantic web interaction technologies 
framework identifies interaction layers proposes set dimensions study interaction solutions 
com pare major interaction technologies workflows software components software agents web services illustrate role web services enabling interactions semantic web 
chapter propose ontological framework organizing ing web services semantic web 
introduce concept community cater ontological organization description web services 
develop ontology called community ontology serves template describing com semantic web services 
propose peer peer approach managing communities highly dynamic environments 
particular techniques registering web services communities coping changes occur web service space 
chapter propose composability model semantic web services 
provide formal safeguards meaningful composition compos ability rules 
composability rules organized levels syntactic static semantic dynamic semantic qualitative business process levels 
introduce medjahed chapter 
notions composability degree composability cater partial total composability 
chapter generic approach automatic composition se mantic web services 
composition process conducted separate phases specification matchmaking generation 
define constructs high level specification composition requests 
propose set algorithms check ing composability matching composers requests relevant compositions web services 
define technique automatically generating detailed de composite service 
introduce quality composition qoc model assessing generated descriptions 
chapter describe implementation approach service com position webdg prototype 
framework benchmarking web services called web services benchmarking framework 
conduct extensive performance study approaches analytical model simulation experiments 
testbed conducting experi ments 
chapter describe major techniques standards platforms web service composition closely related research 
chapter provide concluding remarks discuss directions research 
chapter interactions web taxonomic perspective growth web way organizations interact partners customers 
businesses government agencies moving moved main operations web take advantage potential automation efficient business processes global visibility 
elicited formation alliances different partners join applica tions systems share costs skills resources offering value added services 
ultimate goal inter intra organization applications evolve inde allow effectively conveniently interact 
interaction defined consisting interoperation integration external enterprise applications 
interactions loosely coupled tightly coupled systems past years active research topic areas databases knowledge systems digital libraries 
emerging semantic web opened new research avenues issues semantics heterogeneity scalability automation 
semantic web requires integration inter operation applications data 
disparate data representations partner systems dealt 
interaction required higher level medjahed chapter 
interactions web taxonomic perspective connecting front back systems ii proprietary legacy data sources applications processes workflows web iii partners systems 
chapter survey main issues concepts interactions se mantic web 
propose framework comparing semantic web interaction technologies 
framework identifies interaction layers communication content business process 
proposes set dimensions study inter action solutions 
depth study interaction technologies pre semantic web semantic web 
compare major semantic web technologies edi workflows software components software agents proposed framework 
previous dealing interoperation loosely coupled systems focused databases digital libraries 
surveys addressing interactions semantic web fragmented lacked holistic view problem 
chapter organization reflects historical evolution interaction tech pre semantic web semantic web 
section typical architecture semantic web interaction framework 
section define different interaction layers commerce 
identify set dimensions comparing interaction solutions layers 
sec tion study popular interaction solutions pre semantic web edi components workflows 
solutions evaluated pre defined set dimensions 
section survey evaluate trends supporting interactions semantic web 
include ontologies web ser vices agents xml standards 
section provides tabular comparison summary existing solutions semantic web interactions 
medjahed chapter 
interactions web taxonomic perspective architecture web interaction framework web applications generally involve partners interact comput systems web servers networking services databases conducting daily business exchanging documents selling products filing taxes 
building blocks enabling applications provided interac tion framework 
include modules defining managing internal external business processes integrating processes supporting interactions back application systems erps enterprise resource planning 
business process defined multi step activity supports organization mission manufacturing product processing insurance claims 
legacy applications adapter internal system workflow business rules external interactions gateway content document message definition business process interfaces programs security business partner network business partner external interactions gateway content document message definition business process interfaces security internal system workflow business rules programs architecture web interaction framework adapter database sap medjahed chapter 
interactions web taxonomic perspective depict main components interaction framework 
trans lation facilities application adapters may interconnect back systems databases erps internal business processes workflows applications 
external business process implements business logic organization regard external partners processing messages sent trading partners systems 
interactions partners external business pro cesses may carried specific standard edi ros bilateral agreements 
interaction standards define format semantics messages request quote bindings communication protocols ftp business process conversations joint business process se mechanisms encryption non repudiation interaction frameworks may support standards proprietary interaction protocols 
semantic web interactions running example depicts example interaction section 
assume john case worker wants organize walk immunization group disabled senior citi 
immunization fee provided separate agency medjahed chapter 
interactions web taxonomic perspective 
john issues request purchase 
approval request purchase order issued sent list citizens interested immunization campaign 
purchase order trans formed immunization order order processing system 
satisfactory credit check order fulfillment issued 
invoice immunization schedule sent 
taxonomy semantic web interactions part section identify different layers interaction framework semantic web 
define dimensions assessing interactions layers 
dimensions benchmark evaluating semantic web interaction solutions 
interaction layers interactions semantic web occur layers communication con tent business process layers table 
example need agree joint business process john expects re invoice immunization schedule send ing purchase order 
needs understand content purchase order sent 
agreed communication protocol exchange messages 
communication layer provides protocols exchanging messages remotely located partners soap 
possible partners different proprietary communication protocols 
case gateways translate messages heterogeneous protocols 
example may java rmi remote method ibm mqseries respectively internal communications 
medjahed chapter 
interactions web taxonomic perspective layer definition examples enabling technologies communication protocols exchanging messages remotely located partners soap corba orb content languages models describe orga ontologies xml standards information way understood eco cxml business process enable autonomous heterogeneous part web services bpel ws engage peer peer interactions standards rosettanet inter enterprise workflows table interaction layers objective integration layer achieve seamless integration communication protocols 
content layer provides languages models describe organize formation way understood 
content interactions require involved systems understand semantics content types business documents 
instance receives message contains document determine document represents pur chase order request quotation 
information translation transformation integration capabilities needed provide reconciliation disparate rep vocabularies semantics 
objective interactions layer achieve seamless integration data formats data models languages 
example uses xml common business library represent business documents expects documents cxml commerce xml need conversion formats 
business process layer concerned conversational interactions joint business process services 
engaging transaction need agree procedures joint business process 
semantics interactions defined ambiguity message may mean actions allowed responses expected objective interactions layer allow autonomous heterogeneous partners come online advertise terms capabilities engage peer medjahed chapter 
interactions web taxonomic perspective peer interactions partners 
interoperability higher level challenging issue requires understanding semantics partner business processes 
dimensions semantic web interactions semantic web covers wide spectrum interactions different part 
type interactions depend usage scenarios involved parties business requirements 
framework specific tradeoffs regard requirements semantic web interactions 
important determine relevant requirements understand related tradeoffs evaluating models interactions 
section identify set dimensions study interaction issues semantic web table dimension definition coupling partners degree tightness duration coupling business partners heterogeneity degree dissimilarity business partners autonomy degree compliance partner global control rules external manageability degree external visibility manageability partners applications 
adaptability degree application able quickly adapt changes security measures place boost partners confidence transactions safely handled scalability ability system grow dimensions number relationships supported table interaction dimensions coupling partners dimension refers degree tightness duration coupling business partners 
partners tightly coupled strongly dependent 
example partner may control may control 
loosely coupled partners exchange business information demand 
duration relationship may transient called dynamic long term 
transient relationships businesses may need form fast short term partnership transaction longer profitable stay 
medjahed chapter 
interactions web taxonomic perspective partners need dynamically discover partners team deliver required service 
long term relationships businesses assume priori defined partnership 
heterogeneity heterogeneity refers degree dissimilarity busi ness partners 
need access data multiple types systems arisen due increased level connectivity increased complexity data types 
applications different data structures xml rela tional databases standard semantics standardized gies 
may structural heterogeneity business process layer apis document exchange protocols inter enterprise workflows 
addition organizations may semantic point view different strategies conducting business depend business laws practices 
autonomy autonomy refers degree compliance partner global control rules 
partner systems may autonomous design communication execution 
means individual partners select process content description models programming models interaction models outside world fully autonomous collaboration partner viewed black box able exchange information send receive messages 
partners interact defined interfaces allowing local control implementation operation services flexibility change processes affecting 
usually completely autonomous collaboration may difficult achieve may require sophisticated translation facilities 
external manageability dimension refers degree external vis manageability partners applications 
order effec tively monitored external partners application defined way facilitates supervision control execution measure medjahed chapter 
interactions web taxonomic perspective ment performance prediction status availability 
example may need get status pending ap proved purchase order sent 
requires exposes sufficient information pertaining measurements control points 
desirable princi ple high visibility may require complex descriptions partners applications 
overhead provide descriptions may justified provides advantages quality service qos 
adaptability adaptability refers degree application able quickly adapt changes 
semantic web applications operate highly dynamic environment new services come line existing services removed content capabilities services may dated 
businesses able respond rapidly changes operational server load market changes availability status changes user requirements environment predictable 
exam ple decides walk immunization activities need adapt change 
changes may initiated adapt applications actual business climate economic policy organizational changes 
may initiated take advan tage new business opportunities 
applications interact local back systems partner applications important consider impact changes local external applications ensure local global consistency 
general impact changes depends degree tightness applications 
security security major concern inter enterprise applications 
semantic web applications reach real potential sophisticated security measures place boost partners confidence transactions safely handled 
instance may need check authenticity purchase order processing 
semantic web medjahed chapter 
interactions web taxonomic perspective applications support mutual authentication fine grain authentication communication integrity confidentiality non repudiation authorization 
interactions may limited mutual trust little prior knowledge partners transient collaborative agreements 
shared information may include limited capabilities services 
scalability scalability refers ability system grow dimensions volume accessible data number transactions supported unit time number relationships supported 
importantly changes business climate forcing organizations merge effective global market 
cost effort support new relationships important criterion consider evaluating interaction solutions semantic web 
clearly low cost establishment new relationships desirable 
case long term relationships cost establishing new relationship great significance 
interactions pre semantic web era technologies interactions pre web era decades providing businesses banking industry secure frame sharing exchanging data electronically 
widely earliest framework electronic data interchange edi standard runs dedicated computer networks 
advances software technology gave rise new breed affordable software distributed messaging computing securely run public computer networks component frameworks 
corporate coupled need agile just time inter enterprise cooperation web pressure mounted provide solutions enabling inter enterprise workflows 
tomorrow silver bullet applications virtual enterprises heavily draw solutions 
section medjahed chapter 
interactions web taxonomic perspective describe major interaction frameworks developed pre semantic web era edi components workflows 
electronic data interchange edi edi commonly defined inter organizational application application transfer business documents purchase orders invoices shipping notices computers compact form 
primary aim minimize cost effort time incurred transfer business documents 
edi documents structured standard ansi un machine processable format 
area agency aging business application mapper translator edi envelope document messaging value added network van health department business application mapper translator edi envelope document messaging purchase order purchase order edi interactions depicts trading partners exchanging business documents value added net van 
document purchase order created business application sender 
mapper software describe relationship information elements application edi standard 
edi translator software converts document edi message standard 
translator wraps medjahed chapter 
interactions web taxonomic perspective edi message electronic envelope identifier receiver 
actual transmission electronic envelope performed communication software 
software maintains trading partners phone numbers dial exchange operations 
communication software separate application part translator 
van reads identifier envelope places mailbox 
side reverse process takes place 
interactions edi solutions edi focuses interoperability communication content layers 
vans handle message delivery routing business partners 
edi standards provide single homogeneous solution content interoperability 
define set types describing business documents 
limited albeit large number predetermined documents supported edi stan 
documents represent large number business transactions shipping invoices health care claim status reports companies limited set edi documents standards exist 
difficult trading partners conduct transactions parameters included edi document 
regard edi hardly flexible ability expand set supported document types 
new type changing existing type business transaction complex time consuming 
kind changes requires modification configuration translation soft ware validated related standard edi guideline committee usually takes long time 
example edi guideline consistency subcommittee responsible content maintenance telecommunications industry forum edi maintained code lists 
modi fication code lists reviewed 
responsible notifying secretariat changes electronic doc 
interoperability business process layers supported medjahed chapter 
interactions web taxonomic perspective pre defined business processes 
example purchase order accepted expects purchase order acknowledgment invoice immunization schedule 
edi approach particularly strong criteria security hetero 
edi document exchange private value added networks 
business partners concern security issues encountered public networks 
business partners need directly systems 
critical security issues bypassed 
partners required comply edi standard 
result heterogeneity problem 
understanding information edi document sim ple task 
example data elements unh edi document sole purpose indicate start message 
impact local changes limited partners directly systems 
edi implementations shown impressive results set example cost establishing new relationship usually re quires significant overhead 
edi proprietary expensive networks organizations predominantly small medium afford edi 
de facto excluded partners larger organizations mandate edi 
typically van services entail types costs account start costs usage variable costs van van interconnect costs number characters document 
final cost edi solution depends factors expected volume documents economics edi translation software implementation time 
maintenance fees van charges vary considerably affect cost edi systems 
van providers billing document basis 
charge number characters documents 
reported fortune companies united states uses edi companies claim 
efforts reduce cost van networks include internet edi solutions obi 
edi deployment involves negotiation agreement set implemen medjahed chapter 
interactions web taxonomic perspective tation conventions describing extensions standard documents actual formats exchanged 
negotiation agreement process repre sents significant cost edi deployment 
address issue ansi undertaken effort standardize sets documents various industries 
example ansi released set standard edi document definitions health care industry 
industry standard document definitions customizations required relationship reduced relationship generally required 
additionally im plementation conventions decided custom integration formed partner organizations existing enterprise systems process edi documents 
typically involves purchasing commercial edi system integrating enterprise systems writing custom code translate edi system document definitions corresponding enterprise system records 
internet edi initiatives edi extended directions 
instance business documents edi standards mapped xml documents xml edi 
specifically combination edi internet technologies overcome shortcomings traditional edi van charges 
organizations edi transacting internet 
example edi purchase orders invoices routinely exchanged internet nasa sun microsystems cisco systems 
major internet edi initiatives include edi internet obi open buying internet 
essentially traditional edi uses internet communication medium vans 
aim mainly re duce edi communication charges due vans 
initiated uniform code council ucc standardize method exchange edi medjahed chapter 
interactions web taxonomic perspective documents internet 
similar edi terms interoperability content business process layers 
communication layer standard emerged applicability statement 
set rules exchange edi documents smtp protocol 
second standard completed standard 
supported communication edi documents protocol 
initially reluctance internet exchanging critical business information due concerns security 
deal problem specifies standard mechanisms securing documents pgp pretty privacy encryption digital signatures 
standards referenced include rfc mime security pgp 
offers lower entry cost edi internet 
quality service automatic error detection correction associated vans lost 
offers similar characteristics edi respect dimensions coupling heterogeneity autonomy external manageability adaptability 
obi obi standard leverages edi define internet ment framework 
clearly stated obi aims complement edi standards replace 
obi intended high volume low dollar amount transactions account purchasing activities organizations 
communication level obi uses protocol exchanging messages 
obi re lies ansi edi standard describe content order documents 
order documents encapsulated obi objects 
obi objects encapsulate non edi messages buyers sellers digital signatures 
obi introduce specific model describing locally maintained information product price information 
information may described partner database 
business process level obi defines simple pre defined opera tional protocol internet purchasing 
protocol consists number commonly agreed activities select supplier create order ing non strategic material office supplies laboratory supplies 
fact medjahed chapter 
interactions web taxonomic perspective protocol specifies way partner obi systems interact 
responsibility partner integrate internal applications catalogs inventory order management systems obi servers 
obi strong attempt provide robust security infrastructure 
uses ssl secure sockets layer securing communications 
uses digital signatures digital certificates ensuring messages authentic ity integrity 
obi rates higher edi regard scalability adaptability dimensions 
extensibility order documents im portant requirement 
obi targets simple pre defined purchasing transactions 
second offers lower entry cost internet framework 
obi offers similar properties edi regard dimensions coupling heterogeneity autonomy external manageability 
software components software components simply components program modules dependently developed delivered 
may newly developed wrap existing functionalities provided databases legacy systems packages 
fundamental ideas define object technology applicable components components necessarily created object oriented tools languages 
example components may realized functional language assembly language programming language 
development component applications generally requires inter connection geographically distributed components 
availability middle ware provides effective ways programming important develop ment distributed component applications 
component middleware infrastructure supports creation deployment interactions com ponents 
depicts ap plications assembled components 
component represents independent unit business functionality payment purchasing privacy security 
medjahed chapter 
interactions web taxonomic perspective component interactions different components serve needs business processes 
built top set basic services 
functions provided services include distributed communication security transactions naming schema 
major component middleware frameworks developed past decade corba common object request broker architecture corba standard promoted omg object management group international industry consortium 
part general architecture called object management architecture 
backbone corba object request broker orb allows communication client server components 
dcom distributed component object model dcom microsoft technology distributed components 
extension com mi medjahed chapter 
interactions web taxonomic perspective component software architecture 
com dcom extension merged single runtime provides local remote access 
ejb enterprise java beans ejb technologies sun ee java platform enterprise edition specification 
provides component model java programming language 
ejb pieces business logic functions written java encapsulated components known beans 
container core ejb component model 
provides runtime environment hosts controls beans 
component approach appropriate small number part enterprise 
companies merged acquired current rate need address interactions enterprise 
com ponents mainly cover interactions communication layer 
exhibit limited capabilities dealing interactions content layer 
focus syn tactic integration wrap heterogeneous applications 
business process layer applications scheduling immunization campaign may assembled independently developed components payment purchasing privacy security 
businesses generally need develop ad hoc solutions defining intra inter enterprise business processes 
corba interactions communication layer orbs corba hides underlying com plexity network communications application developers 
client issues method invocation server component orb intercepts invocation routes network appropriate server 
possible com ponents distributed different orbs communicate internet internet inter orb protocol iiop 
corba provides trader service businesses find assigning set properties component 
properties medjahed chapter 
interactions web taxonomic perspective simply defined name value pairs 
provide support semantic de scription components 
efforts add semantic features corba electronic commerce domain task force model includes semantic data facility 
model early stage 
additionally little done far define specification semantic data facility 
corba enable tightly coupled long term business relationships components 
interfaces expressed idl interface definition language compiled idl compiler stubs skeletons 
stub client side invokes remote operations orb corresponding skeleton server side 
skeleton gets call parameters invokes actual operation implementation collects results returns values back client orb 
efforts add messaging capabilities corba 
new messaging specification defines number asynchronous time independent invocation modes corba 
allows static dynamic invocations modes 
message driven interactions components allows support loosely coupled relationships 
corba components static operation invocation 
dynamic invocation interface dii corba allows components learn components operations run time utility dii exploited due complexity 
components shield application developers implementation details 
inter faces considerations businesses interacting 
business partners latitude implement interfaces ways best fit internal needs requirements 
corba component idl includes name operations called clients name types parameters return values 
participants certain market need agree predefined interface 
means businesses bound interfaces published trading partners 
terms ity corba designed independent implementation languages operating systems factors normally affect interactions 
components medjahed chapter 
interactions web taxonomic perspective implemented diverse programming language java smalltalk 
external manageability partially addressed corba event ser vice 
corba event service allows components inform occurrence specific events 
divides components suppliers consumers 
suppliers generate notifications events consumers register notified occurrence events perform specific actions response events 
corba provides little support adaptability 
mentioned businesses tightly bound interfaces published trading partners 
change partner interface may need corresponding interface re compiled 
date corba provide mechanism respond rapidly changes component interfaces 
security addressed corba corba security service 
service provides number mechanisms authentication authorization encryption messages build secure web applications 
major corba vendors provide implementations security service 
complexity corba development increases cost entry corba solutions 
example developers corba generate binary code packages deploy client sides building new applications modifying interfaces existing applications 
dynamic invocation interface corba alleviates problem programming calls interface fairly complicated 
dcom interactions similarly corba dcom solutions mainly deal interactions communication layer 
little support interactions con tent business process layers 
dcom client access operation component communication layer virtual lookup tables obtain pointer operation 
dcom runtime environment ensures medjahed chapter 
interactions web taxonomic perspective pointer local invoking process proxies 
dcom components enable tightly coupled long term business relationships 
proxies need created client side communicate stubs serving 
operation invocation process static dcom prevents dynamic relationships components 
terms heterogeneity current dcom implementations windows platforms ex done port dcom platforms unix 
languages write dcom components microsoft microsoft implementation java visual basic 
additionally dcom idl corba dce distributed computing environment compliant 
security dcom relies windows nt security model 
allows developers build secure applications windows platforms clear security provided dcom platforms 
dcom similar characteristics corba respect autonomy external manageability adaptability scalability 
ejb interactions communication layer ejb uses java rmi enable interactions beans 
rmi location server transparent client 
similarly corba dcom ejb fairly limited terms interactions content business process layers 
similarly corba dcom ejb caters tightly coupled long term business relationships 
developers define rmi remote interface bean 
rmi compiler generates stub remote interface 
stub installed client system provides local proxy client 
stub implements remote interfaces transparently delegates method calls network remote bean 
new specification ejb ejb version available 
uses jms java messaging service add support message driven beans extending ejb component model support medjahed chapter 
interactions web taxonomic perspective tightly loosely coupled applications 
static operation invocation ejb implementations 
implementations jboss integrate dynamic features 
ejb bean remote interface defines methods carry business logic bean 
ejb remote interface provides functions similar provided corba dcom idl 
ejb similar corba dcom terms autonomy 
ejb support neous platforms fully java 
current ejb implementations offer direct interoperability non java platforms 
addition communicating components deployed heterogeneous applica tion servers invoking bea weblogic component ibm websphere server requires operations degraded mode 
implementations event service provided ejb support external manageability 
example ejb event service event broker 
ejb provides support adaptability associating deployment descriptor bean 
descriptor describes way bean interacts environment 
application developers declaratively define contracts descriptors 
contract describes type services form transaction management required bean 
changed independently business logic 
ejb container provides security features ejb components 
deploy ment descriptor contains declarations access control corresponding enterprise bean 
client calls operation bean container re checking requester right invoke operation accessing access control list 
ejb offers similar properties corba dcom respect scalability 
workflows workflow management concerned declarative definition enactment ad medjahed chapter 
interactions web taxonomic perspective monitoring business processes 
business process workflow process consists collection activities related data control flow rela tionships 
activity typically performed executing program enacting human machine action invoking process called sub process 
programs persons machines data perform workflow processes called workflow resources 
example business process includes sev eral activities issuing purchase request approving issuing pur chase order 
information sent issue purchase request activity approval process activity includes number citizens eligible immunization service 
scripting activities resource policies business process analysis modeling definition tools defines business process definition workflow schema 
workflow enactment service enables differ ent parts business process enacted providing interfaces users applications databases distributed workflow domain 
workflow system characteristics workflow key technology automating business processes involve ac cess applications 
traditional workflow systems ineffective medjahed chapter 
interactions web taxonomic perspective consider needs web applications complex partner ships possibly large number highly evolving processes 
current efforts business process initiative bpmi org promise deliver genera tion workflow systems inter enterprise workflow systems ability thread cross organizational business processes supporting integration diverse users applications systems 
focus mainly interactions business process layer 
purpose automate business processes interconnect manage communication disparate systems 
distributed workflow systems emphasis distributed workflow systems partitioning workflow specification sub workflows encompassing activities executed entity organization 
impose organization participating distributed workflow de full fledged execution engine capable interpreting workflow defini tion 
workflow model adopted participant global workflow 
approach assumes global sub business processes process definition data exchange model 
quite restrictive sumption context web applications partners may dis data process representation models uses edi uses rosettanet ii private business processes may require access proprietary legacy data sources applications oracle database sap application 
addition assume tight coupling model distributed sub workflows 
modifications back applications sub workflows global workflow need coordinated 
cost establishing new relationship may significant business processes modeled deployed concert pants 
appropriate development business process single organization needs integrate multiple distributed sub workflows 
medjahed chapter 
interactions web taxonomic perspective collaborative process management inter enterprise business processes management features separation pub lic private processes 
public process defines external message exchange organization partners message exchange pro tocol edi rosettanet 
private process describes internal executable activities support activities public processes 
public private pro cesses interact process wrappers 
process wrappers consist pre defined activities private business process send receive messages public business processes 
example public process uses represent business documents private business process expects documents cxml conversion formats handled wrapper 
private processes may interact back applications application adapters 
approach requirement local process management engines engines responsible managing private business processes identical 
possible example engine ibm mqseries hp process manager 
separation back applications public private processes advantage local changes concern private processes impact public processes back applications 
changes related interactions changing formats incoming outgoing messages tween public process back application private business process may require modification wrappers 
separation components web application public processes private processes business rules back systems contributes scalability approach 
support new interaction protocol edi requires creation new public process process wrappers 
support new back application requires creation new application adapters 
creation new relationship new partner may require adjustments 
new partner comply supported interaction protocol new public process created medjahed chapter 
interactions web taxonomic perspective support protocol new partner 
support new back application requires creation new application adapter 
dis shows addition interaction protocols back applications partners require modification private business processes 
separation public private business process provides greater degree autonomy bridging heterogeneity 
regard security may leverage techniques frameworks document component frameworks 
external manageability provided adding specific activities public processes 
trends supporting semantic web interac tions traditional approaches web interactions devised semantic web 
provide little support capturing semantics messages ex changed partners partners business processes 
research focused developing concepts techniques enabling interactions semantic web 
section overview major semantic web technologies ontologies web services agents xml interaction standards 
ontologies web evolving set single isolated application systems world wide network disparate systems interacting information ex change 
requires means represent semantics exchanged informa tion automatically understood 
ontologies play crucial role providing machine processable semantics information communicated heterogeneous systems 
ontologies initially developed artificial intelligence facilitate knowl edge sharing reuse 
recognized popular research medjahed chapter 
interactions web taxonomic perspective topic various research communities knowledge engineering commerce natural language processing cooperative information systems information inte 
section define concept ontology give motivations 
overview major languages standards describing ontologies web 
evaluate ontology systems interaction layers dimensions 
modeling semantics ontologies ontology formal explicit specification shared conceptualization 
conceptualization refers abstraction domain identi fies relevant concepts domain 
shared means ontology cap tures consensual knowledge 
development ontologies cooperative process involving different entities possibly different locations businesses government agencies 
entities agree ontology commit concepts definitions ontology 
explicit means concepts ontology constraints explicitly defined 
formal intends ontology machine understandable described defined model language called ontology language 
ontology typically consists hierarchical description important concepts domain descriptions properties concepts 
formally ontology contains set concepts called classes cn core ontology 
notion concept ontologies similar notion class object oriented programming 
concept ci set proper ties pi pim associated 
set describes different features class 
property pik range rik called type indicating restriction values pik take 
ontology relates classes relationships 
examples relationships include subclassof 
properties related similar relationships subpropertyof 
medjahed chapter 
interactions web taxonomic perspective identify different types ontologies depending generality level vertical horizontal metadata ontologies 
types ontologies rep method task ontologies exist scope research 
vertical ontologies capture knowledge valid particular main medical mechanic chemistry electronic 
horizontal ontologies describe general knowledge valid domains 
define ba sic notions concepts time space applicable technical domains 
metadata ontologies provide concepts allow description concepts 
example dublin core ontology describing content line infor mation source 
web ontology languages ontology approaches developed web applications past years 
common claim approaches need models languages specify ontologies 
obvious solution xml describing ontologies 
xml provides syntax encode data 
specify data semantics 
parties xml data exchange agree vocabulary meaning 
consequence web ontology languages developed 
section overview representative set languages rdf rdf schema daml oil 
exhaustive list ontology languages semantic web 
rdf rdf schema rdf resource description framework provides domain neutral framework model metadata resources web 
recom world wide web consortium working groups 
resource thing web uniform resource identifiers uri web pages files 
resources rdf basic model includes properties statements 
property characteristic attribute relation describes re medjahed chapter 
interactions web taxonomic perspective source 
statement consists specific resource named property plus property value resource 
value resource literal value free text 
rdf description list triples resource property value 
syntactically represented xml 
example triple represented xml 
states specific web page resource created property john values 
xml namespaces rdf dc identify elements 
simply put xml namespaces provide method qualifying element attribute names xml documents associating uri rdf rdf xmlns rdf www org rdf syntax ns xmlns dc purl org dc rdf description www org dc creator john dc creator rdf description rdf rdf rdf provide mechanisms defining relationships properties resources 
role rdf schema 
rdf schema type system rdf 
provides mechanism define domain specific properties classes resources apply properties 
basic primitives rdf include class subclass allow definition class hierarchy property subproperty build property hierarchies domain range restrict possible combinations properties classes 
daml oil daml oil result merger daml ont lan guage developed part darpa agent markup language daml oil ontology inference layer developed group european researchers 
builds earlier web ontology standards rdf rdf schema extends languages richer modeling primitives 
daml oil adopts object oriented approach describing ontologies terms classes properties axioms subsumption relationships medjahed chapter 
interactions web taxonomic perspective classes properties 
resource instance class say type formal point view daml oil seen equivalent descrip tion logic dl daml oil ontology corresponding dl terminology tbox 
dl daml oil classes names uris expressions variety constructors provided building class expressions 
example daml oil constructors include intersectionof unionof oneof 
meaning constructors unionof relatively self explanatory standard boolean operators allow classes formed tion union negation classes 
oneof constructor allows classes defined existentially enumerating members 
constructors known dls qualified number restrictions 
con gives class instances related property exactly different resources type number class specified constructor 
daml oil example defines classes homepage person 
classes related property cardinality 
means home page belongs person daml class rdf id homepage daml class daml class rdf id person daml class daml objectproperty rdf id daml domain rdf resource homepage daml range rdf resource person daml objectproperty daml class rdf homepage rdfs subclassof daml restriction daml cardinality daml onproperty rdf resource medjahed chapter 
interactions web taxonomic perspective daml restriction rdfs subclassof daml class interactions ontology systems ontologies developed support interactions content layer 
communication layer may rely existing communication protocol 
ontologies may business process layer provide set pre defined business documents exchanged partners 
document contain actions take place message exchange 
participants ontology system bound concepts proper ties defined ontology 
may impact autonomy heterogeneity 
ontologies stable definitions 
shared conceptualization domain reached process social communication 
changes domain generally trigger modification ontology 
evolution causes operability problems hamper effective reuse 
solutions required allow changes ontologies making current invalid 
cost entry ontology system may significant participants describe applications ontology 
issues external manageability security addressed ontology systems 
web services precise definition web services evolving witnessed various definitions literature 
definition web service business function available internet service provider accessible clients human users software applications 
defined loosely coupled applications open cross platform standards interoperate organizational trust boundaries 
world wide web consortium defines web service software application identified medjahed chapter 
interactions web taxonomic perspective uri uniform resource identifier interfaces binding capable defined described discovered xml artifacts supports direct software applications xml messages internet protocols 
aforementioned definitions seen complementary 
definition emphasizes part web service characteristics discovery invocation 
section define web services business functionalities programmatically accessible web services mainly designed invoked web services applications 
distributed web accessible widely deployed protocols smtp 
web services describe capabilities services including oper ations input output messages way invoked 
loosely coupled communication web services document 
web services generally communicate exchanging xml docu ments 
document communication model caters loosely coupled relationships web services 
web service model interactions web services involve types participants service providers service registry service consumers 
service providers parties offer services 
define descriptions services publish service registry searchable repository service descriptions 
description contains details corresponding service data types operations network location 
service consumers find operation locate services interest 
registry returns description rele vant service 
consumer uses description network location invoke corresponding web service 
example may advertise web service includes operation 
medjahed chapter 
interactions web taxonomic perspective provider access registry discover service invoke operations 
web service model major standardization initiatives submitted con support interactions web services wsdl web services description language wsdl xml language describing operational features web services 
wsdl descrip tions composed interface implementation definitions 
inter face reusable service definition referenced multiple implementations 
implementation describes interface implemented service provider 
uddi universal description discovery integration uddi defines programmatic interface publishing publication api discovering api web services 
core component uddi business registry xml repository businesses advertise services businesses find 
conceptually information provided uddi medjahed chapter 
interactions web taxonomic perspective business registration consists white pages contact information yellow pages industrial categorization green pages technical information ser vices 
soap simple object access protocol soap lightweight messaging framework exchanging xml formatted data web services 
soap variety transport protocols smtp ftp 
soap message simple structure xml element called envelope child elements 
element header includes fea tures security transactions 
second element body includes actual exchanged data 
interactions web services web services allow interactions communication layer soap messaging protocol 
adoption xml messaging established protocols smtp ftp enables communication neous systems 
example major existing environments able communicate parse xml documents 
soap protocol early stage current implementation meet reliability workload con straints needed enterprises 
content layer web services wsdl language 
wsdl recommends xml schema canonical type system associate data types message parameters 
current version wsdl model semantic fea tures web services 
example constructs defined describe document types operation request quotation purchase order 
efforts dealing semantic interoperability include develop ment content markup languages daml :10.1.1.21.61
efforts infancy 
web services maturing stage 
lack support interactions business process layer 
date enabling interactions medjahed chapter 
interactions web taxonomic perspective web services largely ad hoc process involving repetitive low level pro gramming 
standardization efforts bpel ws business process execution language web services underway enabling definition business processes web service composition 
document messaging model web services caters loosely coupled relationships 
additionally web services statically bound 
new partners relevant features discovered invoked 
date dynamic discovery web services takes place development time 
heterogeneous applications java corba objects may wrapped exposed web services 
example axis java wsdl utility ibm web services toolkit enables generation wsdl descriptions java class files 
iona orbix web services integration platform may create web services existing ejbs corba objects 
terms autonomy web services accessible published interfaces 
partners interact web services having aware happening scene 
required know operations provided service internally implemented 
operations transparently outsourced third parties 
wsdl currently include operations monitoring web services checking availability operation status submitted request 
additionally uddi wsdl currently define quality service parameters cost time 
terms adaptability changes may occur operation signatures name messages number parameters data types service access port address service operation availability 
process dealing changes currently ad hoc manually performed 
efforts need done cater automatic detection handling changes 
security web services needs addressed different levels including com munication description firewall 
communication level enabling security xml important factor securing web services 
current standardization efforts include securing xml messages creation medjahed chapter 
interactions web taxonomic perspective xml digital signature standard protocol transmitting data securely web 
done extend soap include security specification receiving endpoints specify users au receive process messages 
service description level wsdl include security oriented information role access control authorization information 
soap messages carried traverse firewalls network administrators need configure firewalls malicious requests code embedded soap messages tunneled soap messages 
example application firewalls sitting net works firewalls developed 
application firewalls check traffic validate authorize messages security policies 
emergence tools describe advertise invoke web services facilitates development web service solutions 
tagged lan guage xml increases volume information exchanged web services 
overload network presence large number services penalizing scalability web service approach 
additionally soap defines simple data types 
complex data types may require xml parser get corresponding xml schema definitions remote locations 
add overhead processing soap messages 
registry presents scalability issue 
centralized registry result single point failure bottleneck accessing publishing web services 
distributed reg cater reliable scalable solution 
incurs additional overhead managing distributed repositories 
intermediary solution adopted uddi registry physically replicated multiple nodes 
solution solves problem centralized registry 
requires nodes exchange data maintain registry consistency 
medjahed chapter 
interactions web taxonomic perspective software agents concept software agent simply agent emerged important paradigm organizing classes distributed applications commerce digital libraries information retrieval data mining 
defined piece software capable acting accomplish tasks behalf consumers 
con may users agents applications agent 
comprehensive definition view agent umbrella term covers range properties 
agents typically possess prop erties summarized table 
ideally agent exhibit properties equally aspiration reality 
properties emotion character knowledge belief intention defined 
mainly artificial intelligence applications scope research 
property synonyms definition continuous available agent continuously running process autonomous available agents operate direct intervention humans exercise control actions operative communicative agents interact kind agent socially able communication language reactive sensing acting agents perceive environment respond timely fashion changes occur adaptive learning agents change behavior previous experience pro active goal oriented agents simply act response environment purposeful able take initiatives achieve certain goal mobile available agents able transport site network table agent properties agent communication language multi agent system collaborating set agents membership may change time 
individual agents community view peers responsible providing specific services role 
processing request environment distributed different medjahed chapter 
interactions web taxonomic perspective agents 
success multi agent system relies agents interact interoperate 
involves ability agents communicate agent communication language acl 
acl consists major parts vocabulary inner language called kif knowledge interchange format outer language called kqml knowledge query manipulation language 
acl message kqml expression arguments terms kif formed words acl vocabulary 
agents share common understanding communicated 
ontologies facilitate agent communication providing common vocabulary 
vocabulary open ended dictionary list words appropriate common application areas 
word english description humans formal annotations written kif programs 
dictionary allows addition new words existing new application areas 
kif prefix version order predicate calculus various extensions enhance expressiveness 
provides encoding simple data constraints negations quantified expressions 
kqml message piece dialogue sender receiver 
message list participants enclosed matching parentheses 
word list indicates type dialogue ask tell recommend bid 
subsequent entries arguments kif expressions appropriate dialogue 
example kqml message sender mary asking receiver bookstore send information regarding books related agents costs 
ask sender mary receiver bookstore content select book topic agents price language oracle sql medjahed chapter 
interactions web taxonomic perspective ontology online bookstore interactions multi agent systems multi agent systems cater interactions communication layer having standard communication language acl 
assumes underly ing communication transport protocols established 
content layer ontologies facilitate communication agents add se mantics messages 
multi agent systems lack support specifying complex business processes 
process generally spread implementation code agent involved process 
ad hoc definition business processes scale size partners may involved business pro cesses 
solution separate control agent handles business process 
control agent design time consuming 
addition ally business logic embedded control agent making hard reuse different business processes 
multi agent systems assume relationships different partners pre established 
additionally data interchanged agents generally needs manually semi automatically mapped common ontology 
agents suitable long term tightly coupled relationships 
agents may added existing applications add new functions customize execution existing functions little impact autonomy applications 
adhere concepts properties common ontology may limit autonomy 
agents may wrap proprietary heterogeneous applications 
adoption ontology enables abstraction heterogeneous information representa tions 
event subscriptions monitoring agents may address issue external manageability 
adaptability adequately addressed multi agent systems 
agents typically pre programmed certain function medjahed chapter 
interactions web taxonomic perspective hardly configured switch roles change interaction patterns 
agents interact carry sophisticated tasks behalf users 
course interaction may exchange sensitive information users 
research needed ensure multi agent systems support security features required semantic web interactions 
cost entry agent system significant 
agents able exchange information agent communication language 
need formulate queries requests common ontology 
way matching queries requests known ontologies reason repository ontologies 
xml interaction standards large number contemporary interaction standards xml 
vision approach allow services web dedicated transformation mediation facilities custom integration partners systems 
business partners form trading community capabilities produce consume xml documents 
business process trading community specified shared document definitions 
partners inter connected terms largely agreed documents 
business logic implemen tation partner side invisible trading partners 
general complete xml integration requires standardized domain specific ontologies agreed dtd xml schema mappings different ontology descrip tions means processing xml documents invoking appropriate services workflows legacy systems handle requests 
existing xml interaction standards developed interactions 
may extended deal types appli cations government digital library 
follows describe representative set standards 
proposed standards gener ally deal enabling interactions content eco cxml business process rosettanet layers 
overlap compete medjahed chapter 
interactions web taxonomic perspective 
issue interoperability shifted level applications level standards 
trading partner deal standards time 
case trading partner exchanges messages industries variety standards increase 
eco xml interaction standards eco aims providing means businesses discover access services regardless standards protocols potential partner adopts 
content level eco introduces xml common business library define business documents 
consists set xml core documents represent common interactions business transactions 
target vertical industry domains 
attempts provide generic framework describing content core business documents 
main motivation establishing core documents concepts common business domains expressed common format 
examples core documents purchase orders invoices date time currencies 
business partners may extend documents adding new elements develop business documents 
example create xml medjahed chapter 
interactions web taxonomic perspective document service catalog customizing generic catalog dtd specific information search method immunization services type 
businesses limited specific set pre defined documents 
may hamper interoperability companies need aware newly created documents 
business process level eco focuses providing common build ing blocks interactions businesses 
businesses advertise online services business interface definitions bids 
bids xml descriptions specify business services terms documents accept produce 
mandate global business process definition 
eco uses basis define interfaces processes content data elements 
partner forced tag define type information structural heterogeneity problem 
standard non trivial issue meaning types services interfaces vary businesses group partners specific marketplace may select adopt common conventions 
generic frameworks eco difficult address semantic heterogeneity wide range commerce appli cations 
solution schemas ontologies including horizontal domains computer manufacturing healthcare vertical specific domain domains 
solution requires support data normalization mapping conversion schemas ontologies 
eco requires services described xml schemas address albeit limited way issue autonomy 
eco separates description services implementations 
note marketplace may adopt common conventions describing services 
may result negatively impact partners autonomy 
example change name tag requires partners specific change time 
eco security mechanisms optional 
business partners need directly gain access systems 
establishment new relationship existing partner require additional 
creation new service medjahed chapter 
interactions web taxonomic perspective requires provision description types interfaces 
requires integration interfaces service internal applications 
integration cost xml approach tends significant approaches widely available xml processing tools 
eco framework rates high adaptability 
impact local changes limited partner systems loosely coupled 
addition eco offers extensibility accommodate changes 
cxml cxml commerce xml consists xml schema language pro tocol online purchasing transactions 
targets business transactions involve non production maintenance repair operating goods services 
nutshell cxml considered simplified xml internet version edi 
cxml assumes existence intermediaries commerce hubs act trusted third parties procurement systems supplier systems 
functions provided commerce hub network software similar provided biztalk repository 
cxml prescribe specific intermediary architecture 
cxml supports communication models request response way 
request response provides synchronous communication 
way provides asynchronous communication protocols 
currently way model supports url form encoding 
content level cxml defines set xml dtds describe procurement documents spirit order request order response 
provides elements describing product catalogs supplier index contract 
supplier element describes general information supplier address ordering methods 
index element describes supplier inventory product description part numbers classification codes 
contract element describes negotiation agreements buyer supplier product attributes price quantity 
catalogs static dynamic 
cxml medjahed chapter 
interactions web taxonomic perspective terminology dynamic catalog called 
business process level cxml approach similar obi see section 
cxml defines generic procurement protocol 
protocol consists number commonly agreed online procurement activities product selec tion order request order approval order transmission order routing 
commerce hubs provide means catalog purchase order management catalog pub subscription automated purchase order routing tracking 
cxml offers similar properties obi heterogeneity autonomy adaptability 
cxml appears rate higher obi regard scalability integration cost xml approach tends significant approaches 
cxml addresses security including authentication formation message headers 
advantage cxml approach economy scale ease managing business relationships 
suppliers buyers need manage relationships trusted intermediary business partners 
rosettanet rosettanet aims standardizing product descriptions business processes information technology supply chain applications 
rosettanet supply chain clude information technology products boards systems peripherals finished systems electronic components chips connectors 
rosettanet focuses key areas standardization automate web interactions 
vocabulary needs aligned 
rosettanet business dictionary contains vocabulary describe business properties business name ad dress tax identifier 
rosettanet technical dictionary contains properties describe characteristics products computer parts services purchase order 
second way business messages wrapped transported specified 
rosettanet implementation framework specifies content messages transport protocols cgi email ssl communica medjahed chapter 
interactions web taxonomic perspective tion common security mechanism digital certificates digital signatures 
third business process governing interchange business messages specified 
rosettanet pips partner interface processes pre defined xml conversations 
conversation consists set busi ness documents purchase order purchase order acknowledgment message exchange logic sequencing actions take place prod uct quote request 
pip defined combination textual graphical uml state machine representations 
communication layer common internet transport protocols supported 
content layer rosettanet uses xml schema document content model 
vertical ontology common vocabulary information technology supply chain domain contributes solving problem semantic heterogeneity 
business process layer rosettanet focuses providing common basis public interactions pips 
integration pips internal business processes performed partners 
rosettanet provide means define arbitrary global business processes 
rosettanet offers similar properties obi regards security 
offers similar properties eco regard autonomy adaptability scalability coupling external manageability 
summary discussion section compare different approaches interactions pre semantic web semantic web 
discuss commonalities differences web services related technologies components agents workflows 
illustrate role web services semantic web 
medjahed chapter 
interactions web taxonomic perspective comparison semantic web interaction gies identify sets parameters exhaustively define applica tions interact web 
set applicable enabling technologies pro consists parameters communication layer content layer business process layer 
second set applicable enabling technologies prototypes consists parameters coupling autonomy heterogeneity external manageability adaptability security scalability 
table enabling technologies technologies pre semantic web era compared important architectural layers 
example communica tions edi conducted vans 
content layer supported ansi formatted documents 
interactions business process layer limited pre defined business processes 
table key semantic web technologies compared important architectural layers 
exam ple web services communication layer typically provided soap 
content layer supported wsdl language 
wsdl currently provides little support semantic description business documents 
current trends support semantic interoperability ontologies daml 
wsfl xlang bpel ws languages provide support interactions business process layer 
languages early stage 
table enabling technologies pre semantic web era com pared salient interaction parameters dimensions 
example ejb coupling tight long term 
autonomy provided separating inter face implementation ejb remote interface 
heterogeneity sup ported platform levels unix windows java supported 
event services provides support external manageability 
ity partially addressed separation contracts business logic 
security provided ejb container 
scalability concern intra enterprise applications 
table semantic web interaction medjahed chapter 
interactions web taxonomic perspective communication layer content layer business process layer edi vans ansi formatted documents pre defined business processes smtp ansi format pre defined business processes ted documents obi ansi formatted documents pre defined protocol internet procurement corba orbs iiop addressed ad hoc hand coded programming integration logic dcom dcom runtime environ addressed ad hoc hand coded integration logic ejb rmi jms addressed ad hoc hand coded programming integration logic workflows addressed addressed inter enterprise business processes public private table pre semantic web technologies vs interaction layers communication layer content layer business process layer ontologies addressed shared conceptualization addressed web soap wsdl little support se wsfl xlang services mantic description 
bpel ws agents agent communication semantic interoperability common ontology addressed eco language addressed cxml url form xml dtds pre defined protocol inter encoding net procurement rosettanet mail rosettanet business dictionary partner interface processes rosettanet technical pips 
pre defined protocol nary internet procurement table semantic technologies vs interaction layers medjahed chapter 
interactions web taxonomic perspective technologies compared parameters 
example web services support transient long term loose relationships 
separation wsdl interface implementation definition caters autonomy participants 
wsdl descriptions allow wrapping heterogeneous applications 
issues external manageability adaptability currently addressed 
research efforts going provide security mechanisms web services 
web services related technologies web services share features component agent workflow approaches 
characteristics differentiate web services com ponents agents workflows 
web services components web services document communication 
contrast component frameworks object communication yielding systems coupling components tight 
additionally communication protocol web services enables firewall friendly computing component systems 
example standard port iiop normally traverse firewalls easily 
specification submitted omg dealing iiop firewall traversal orb implementations proprietary solutions visibroker gatekeeper iona 
web services agents web services agent systems provide directories agent advertise distinct functionalities agents search locate 
agents inherently communicative web services passive invoked 
web services xml formatted message ubiquitous protocols interact 
agents acl language format messages 
discussed section agents loosely coupled agents tightly coupled 
reasons web service suitable enabling cross organizational interactions 
agents medjahed chapter 
interactions web taxonomic perspective generally provide alerts updates new events available 
web services workflows service composition shares features flows 
example define composite service provider needs specify flow service invocations services invoked input output data execution dependencies 
similarly workflow designer specify flow items invoked input output data execution dependencies 
features distinguish composite services workflows 
list main differences distributed workflow systems require participating enterprise de full fledged execution engine capable interpreting workflow def 
workflow model adopted participants global workflow 
assume tight coupling distributed sub workflows 
modifications sub workflows need coordinated 
distributed workflow systems appropriate development business processes single enterprise 
workflows input output data typically specified set vari able names 
values input variables passed selected resource time activity started 
activity execution results inserted output variables 
communications workflow system resources done adapters deal data map ping issues 
development adaptors difficult tedious task 
contrast web services interact exchanging messages avoiding need adapters 
number xml interaction standards rosettanet cxml defined support interactions 
applications support standards developed 
composite services interact services follow standards 
medjahed chapter 
interactions web taxonomic perspective workflow systems support standards vendors moving direction 
role web services semantic web land scape current technologies web interactions may viewed 
summarize technologies way exist semantic web interactions framework 
component middleware workflows web services agents define building blocks developing semantic web appli cations 
ontologies edi obi xml standards eco rosettanet focus defining semantics interactions businesses 
component mid corba dcom ejb suitable building robust secure applications enterprise 
intra enterprise business processes managed systems erps sap workflows ibm mqseries 
inter enterprise workflows focus interactions business process layer 
aim automate business processes span boundaries disparate enterprises 
web services take components step enabling inter enterprise inter actions 
define entry points enterprises internal systems 
web services may wrap intra enterprise components provide connectivity autonomous heterogeneous inter enterprise applications 
may wrap applica tions developed example java visual basic 
agents may add new functions web services change monitoring customize existing functions operating conditions observations users behavior 
web services may workflow approach service composition techniques stan bpel ws support inter enterprise business processes 
web services adopt ontologies xml standards capture semantics documents business processes 
example web services may rosettanet cxml carry interactions businesses frameworks 
edi medjahed chapter 
interactions web taxonomic perspective technologies semantic web interaction framework obi standards may enable interactions content layer 
provide little support terms expanding set supported document types 
medjahed chapter 
interactions web taxonomic perspective coupling autonomy heterogeneity ext 
manag 
adaptability security scalability edi loose new docu support impact private expensive long ments heterogeneous ad local changes vans networks 
term approved applications dressed limited 
new need agree edi documents imple guideline translator mentation committees software approved conventions loose new docu support impact rfc lower long ments heterogeneous ad local changes entry cost term approved applications dressed limited 
new mime edi edi documents security internet guideline translator committees software approved pgp obi loose higher support higher ssl lower long edi docu heterogeneous ad edi docu digital entry cost term applications edi tures internet important translator important requirement software requirement digital credentials corba tight separation different lan event addressed supported suitable long guages ser intra term interface java vice corba enterprise imple platforms security applications 
mentation unix win service participants idl need stub compo dcom tight separation different lan event addressed nent server suitable long guages ser win intra term interface microsoft nt enterprise imple security applications 
mentation windows model proxies idl platform needed client side ejb tight separation java language event contracts security suitable long changed features intra term interface ent platforms vice independently provided enterprise imple unix win business ejb applications 
logic container participants ejb remote define interface remote interface bean workflows system separation different adding process wrap ad may require specific engines dressed creation lic adapters new process business states help localize wrappers processes changes adapters table pre semantic web technologies vs interaction dimensions medjahed chapter 
interactions web taxonomic perspective coupling autonomy heterogeneity ext 
manag 
adaptability security scalability loose participants participants addressed ad participants bound bound need concepts defined applications ontology ontology web loose separation wsdl descrip addressed going ontology availability tions wrap ad efforts wsdl inter underlying ment tools 
face implications xml xml tags digital increase term definitions signa volume tures information 
replicated registries exchange data maintain coherence agents tight participants agents may events addressed ad agents need ad wrap dressed heterogeneous requests term concepts de applications fined ing common common agents ontology 
ontology way matching requests known eco loose separation xml schemas 
impact local optional ontologies establishment tran marketplaces ad changes lim description may help 
support ship long imple addressing extensibility partner term mentation 
semantic het documents require marketplaces 
additional may hinder autonomy partner cxml loose higher xml dtds impact cost edi ad local changes lower document limited 
obi long mation 
term impor documents trusted xml required rosetta loose separation rosettanet impact local ssl 
establishment net long business ad changes lim digital relation term description technical 
support 
extensibility cates partner mentation 
vertical documents signa require marketplaces technology tures additional may hinder autonomy partner table semantic web technologies vs interaction dimensions chapter ontological framework web services semantic organization description web services important require ment enabling automatic composition web services 
number web services available web large continuously changing 
additionally ser vice providers may located different places world 
large scale dynamics heterogeneity web services may hinder attempt understanding semantics outsourcing 
calls tech niques organize web services way efficiently understood outsourced 
chapter propose semantic web centered framework organizing describing semantic web services 
introduce concept community cater ontological organization description web services 
develop ontology called community ontology serves template describing communities semantic web services 
propose peer peer approach managing communities highly dynamic environments 
particular techniques registering web services communities coping changes occur web service space 
chapter organized follows 
section give overview medjahed chapter 
ontological framework web services proposed model semantic web services 
section describe operational features communities generic operations 
section tech nique registering web services community 
section propose algorithms managing communities 
focus dealing changes issued community service providers 
proposed model semantic web ser vices ontologies poised play central role empower web services semantics 
increasingly seen key enabling semantics driven data access processing 
section give overview proposed model organizing describing web services semantic web 
ontological support web services combining web services ontologies core proposed model 
central model concept community 
community container clumps web services related specific area interest disability adoption 
web services belong community share area interest 
communities provide descriptions desired services providing interfaces insurance services referring actual service 
communities defined metadata ontology called community ontology template 
defined section metadata ontologies provide concepts allow description concepts communities web services case 
summarize process creating community registering web services 
communities defined community providers instances community ontology 
community providers generally groups government agencies non profit organizations businesses share common domain interest 
example department aging related agencies medjahed chapter 
ontological framework web services department health define community provides healthcare benefits senior citizens 
proposed web service model community service created advertised discovered way regular web services 
providers community assign values concepts community ontology step 
ex amples concepts defined community include category generic operation 
concept defined set attributes 
example category concept contains attributes domain synonyms specialization overlapping 
com published registry uddi discovered service providers step 
service providers provider medjahed chapter 
ontological framework web services identify community interest step register services step 
registration service ws com ci service provider specifies concepts ci inherited ws 
example ws may inherit generic operations defined ci 
web service may belong different communities 
example composite service ws may outsource operations different domains interest healthcare elderly 
operations belong different communities composite service registered healthcare elderly communities 
users case officers select community interest invoke operations 
invocation community operation translated invocation community member operation 
emerging daml oil language describing proposed ontology 
noteworthy proposed model dependent daml oil 
web ontology standards describe community ontology 
give subset community ontology specified daml oil 
elements define community identifier category generic operation classes 
elements define relationships properties community classes 
element specifies cardinality constraints different properties 
example constraint indicates community single identifier 
structure community community ci formally defined tuple 
clause contains unique name text description summarizes ci features 
describes area interest community 
web services belong ci category ci ci accessible set operations called generic operations 
specified clause 
generic operations operations summarize major functions needed ci members 
community providers define generic medjahed chapter 
ontological framework web services daml class rdf id community daml class daml class rdf id identifier daml class daml class rdf id category daml class daml class rdf id daml class daml objectproperty rdf id daml domain rdf resource community daml range rdf resource identifier daml objectproperty daml objectproperty rdf id daml domain rdf resource community daml range rdf resource category daml objectproperty daml objectproperty rdf id daml domain rdf resource community daml range rdf resource daml objectproperty daml class rdf community rdfs subclassof daml restriction daml cardinality daml onproperty rdf resource daml restriction rdfs subclassof rdfs subclassof daml restriction daml cardinality daml onproperty rdf resource daml restriction rdfs subclassof rdfs subclassof daml restriction daml mincardinality daml onproperty rdf resource daml restriction rdfs subclassof daml class subset daml oil specification community ontology operations expertise corresponding area interest ci medjahed chapter 
ontological framework web services category 
term means implementation provided generic operations 
community providers define interface generic operation opik 
interface subsequently implemented community members actual web services interested offering opik 
say members support import opik 
execution opik refers execution actual operation offered member support opik 
clause refers list ci members 
members ci web service providers promise supporting ci generic operations 
section focus describing category clause community ontology 
details generic operations community members sections respectively 
category community ci formally defined tuple 
gives area interest community healthcare 
takes value taxonomy main names 
flexibility purposes different communities may adopt different taxonomies specify category 
xml namespaces prefix categories taxonomy defined 
simply put xml namespaces pro vide method qualifying element attribute names xml documents associating uri 
contains set alternative domain names ci 
example medical synonym healthcare 
values assigned attribute taken taxonomy domains 
set characteristics ci domain 
exam ple insurance children specialization healthcare 
means ci provides health insurance services children 
communities generally independent 
linked inter ontology relationships 
relationships specified attribute 
contains list categories overlap ci category 
provide peer peer topology connecting communities related categories 
say overlaps composing ci operations cj mean 
meaningful mean composition provides value added medjahed chapter 
ontological framework web services general structure community terms categories 
example operation belongs community domain family may composed operation belong com domain insurance 
enable providing health insurance families 
noted responsibility community providers identify related categories assign overlapping attribute 
medjahed chapter 
ontological framework web services generic operations generic operation defined set functional non functional attributes 
functional attributes describe syntactic semantic features generic operations 
syntactic attributes represent structure generic operation 
example syntactic attribute list input output parameters define operation messages 
semantic attributes refer meaning operation messages 
consider types semantic attributes static dynamic semantic attributes 
static semantic attributes simply static attributes describe non computational features generic operations 
semantic attributes generally independent execution operation 
example static attribute operation category 
dynamic semantic attributes simply dynamic attributes describe computational features generic operations 
generally refer way constraints operation executed 
example dynamic attribute business logic operation results returned operation certain parameters conditions 
non functional attributes called qualitative attributes include set met rics measure quality operation 
examples attributes include time availability security cost 
service providers support generic operation may different values qualitative attributes 
non functional attributes model fact competitive advantage competitors web services support generic operation may 
defining community community providers assign values part attributes generic operations 
rest attributes assigned service providers third parties registration web services ci 
table summarizes different attributes mentions parties responsible assigning values symbol 
example types input output messages purchase order registration confirmation defined community providers 
cost dollar amount executing operation service specific defined service provider 
medjahed chapter 
ontological framework web services group sub group attribute community service syntax static semantics dynamic semantics message operation message operation inter operation intra operation input output number param 
op id name description mode binding message type business role unit language consumer type provider type purpose category pre operations post operations behavior provider provider quality operation run time response time reliability availability business cost reputation regulatory security privacy encryption authentication non repudiation confidentiality table assigning values generic operation attributes third party qualitative attributes response time availability assigned third parties trusted parties monitoring agencies 
way parties determine values assigned monitoring scope research 
worth noting values attributes may assigned community service providers 
example content input output message community providers 
service providers may modify content adding removing parameters input output messages 
medjahed chapter 
ontological framework web services community members service providers time select community interest cate gories register services 
say services members community 
registration process requires giving identifier ws id name description web service 
identifier takes form unique 
description summarizes main features web service 
service providers specify list generic operations supported services imported attribute 
define constructs importing generic operations projection extension adjustment 
projection extension constructs allow addition deletion message parameters respectively 
adjustment enables modification content operation attributes 
invocation im ported operation translated invocation actual service operation 
correspondence imported actual operations done mapping attribute 
imported operation provider gives id corresponding actual operation 
defines mapping imported operation parameters actual operation parameters 
ing mappings parameters enables support legacy web services 
providers need change message parameters actual service codes 
assume service provider sp offers operation op 
cases possible community ci contains generic operation opik similar op sp import opik ii commu nity ci contains generic operation opik closely similar op op input parameters defined opik sp import opik projection extension adjustment technique iii community operation sim ilar closely similar op sp define new community cj op generic operation sp service member 
case similar traditional wsdl uddi soap web service model service providers cre ate descriptions services 
difference case sp instantiates medjahed chapter 
ontological framework web services attributes concepts community ontology traditional model providers define service descriptions scratch 
operational description communities mentioned previously generic operation described different levels syntactic static semantic dynamic semantic qualitative levels 
section give detailed description generic operation attributes levels 
syntactic attributes define levels syntactically describing generic operation message op eration levels 
attributes message level describe structure messages defined operation number parameters message 
attributes operation level describe general purpose features generic operation name id operation 
message syntax generic operations input output messages 
input output message contains parameters defined names 
name parameter unique message 
example consider generic opera tion checks citizen eligibility nutrition program wic stands women infant children 
input message operation contains income zipcode parameter names 
output message approved duration parameter names 
message parameters predefined community providers service providers ability add new parameters remove pre defined ones 
number parameters messages may changed service providers 
define sets opik opik generic operation opik 
opik opik contain list input parameters output parameters medjahed chapter 
ontological framework web services names opik respectively 
define attributes give number input output parameters opik respectively 
example case opik opik income zipcode opik approved duration 
operation syntax generic operation unique identifier called op id takes form universally unique id 
identifier unique space time 
operation name text description summarizes operation features 
binding defines message formats protocols interact operation 
operation may accessible bindings soap soap mime 
binding operation assigned service provider 
contrast rest syntactic attributes values pre defined community providers 
binding attribute dependent way generic operation implemented service provider side 
provider may offer soap access generic operation supported web service provider may prefer soap mime operation 
mode operation refers order input output messages sent received 
states operation initiates interactions simply replies invocations services 
define operation modes 
values assigned community providers operation 
operation receives input message client process locally forward service returns output message client 
sends output message server receives input message result 
example operation 
specified wsdl standard operations may limited input output message 
example operation automatically notifies citizens termination eligibility period medjahed chapter 
ontological framework web services wic programs 
operation obviously require input message 
operations may considered operations input output message empty 
loss generality focus proposed framework aforementioned operation modes 
static semantic attributes static semantics generic operation describe semantic properties independent execution operation 
specifies semantics operation operation semantics input output messages defined operation 
message semantics messages semantically described correctly interpreted service providers consumers 
purpose associate message type mt message 
mt gives general semantics message 
example message may represent purchase order invoice 
vertical ontologies ideal concept describe type message 
example ontology rosettanet pips partner interface processes 
message type capture semantics message parameters 
define attributes model semantics message parameters data type business role unit language 
data type gives range values may assigned parameter 
xml schema built data types typing system 
built types pre defined xml schema specification 
primitive derived 
primitive types string decimal derived types defined terms types 
example integer derived decimal primitive type 
business role gives type information conveyed message pa rameter 
example address parameter may refer street address unit number second city zip code line address 
exam medjahed chapter 
ontological framework web services ple price parameter 
may represent total price price taxes 
business roles take values pre defined taxonomy 
param eter defined meaning taxonomy 
example taxonomy rosettanet business dictionary 
contains common vocab describe business properties 
example price parameter role defined rosettanet represents total price product quantity 
flexibility purposes different commu nity providers may adopt different taxonomies specify parameters business roles 
categories xml namespaces prefix business roles taxonomy defined 
unit attribute refers measurement unit parameter con tent provided 
example weight parameter may expressed pounds 
price parameter may dollars canadian dollars euro 
eligibility period parameter may specified days weeks months 
standard measurement units length area weight money code sign values parameters units 
parameter unit address unit equal 
content message parameter may specified different languages 
example profession parameter may expressed english spanish 
english translation operation takes input english word input parameter returns output translation output parameter 
adopt standard taxonomy languages specify value attribute 
give formal definition message parameter 
message input output defined set parameters 
definition message parameter 
message parameter defined tuple parameter data type xml schema business role taken taxonomy business roles gives unit measurement language expressed 
content static semantic attributes assigned community providers 
data type unit language attributes may changed service providers 
medjahed chapter 
ontological framework web services contrast message type business role model core message semantics altered 
service providers flexibility support data type unit language different specified commu nity providers 
example service provider may decide support weight parameter community providers specified pounds measurement unit parameter 
operation semantics static semantic operation defined attributes ser provider type consumer type purpose category 
attributes model core operation semantics 
exclusively assigned community providers 
attribute gives type assistance provided opera tion 
examples values attribute cash kind informational educational 
temporary assistance families example welfare program provides financial support families 
food stamp example kind support available indigent citizens 
returning list senior activity centers example informational support 
enhancing com munication skills visually impaired people example educational support 
types support may mentioned assigning value attribute 
generic operation may supported provider types 
provider may governmental federal state local non governmental non profit business agencies 
example may provided department aging government agency red cross non profit 
consumer type property specifies group citizens children pregnant women eligible operation welfare program 
different groups may eligible benefit 
example wic women infant children program pregnant women mothers medjahed chapter 
ontological framework web services children 
generic operation performs certain functionality specific area 
specified purpose category attributes respectively 
operation inherits category community defined 
operations belong community share category 
purpose attribute describes goal operation 
defined attributes function synonyms specialization overlapping 
function describes busi ness functionality offered operation 
examples functions eligibility registration mentoring 
synonyms specialization attributes categories 
overlapping contains list purposes overlap purpose current operation 
opik opjl generic operations 
say overlaps composing opik opjl mean 
mean composition provides value added terms purposes 
example operations eligibility regis respective purposes may combined check citizens eligible social program register program 
categories responsibility community providers identify related purposes assign overlapping attribute 
dynamic semantics dynamic semantics allows description attributes related execution generic operations 
attributes may relate execution operation opik execution operations inter operation attributes describe features inherent execution opik intra operation attributes 
inter operation tributes define execution order opik respect operations 
identify inter operation attributes pre operation post operation give list operation execution precedes follows opik execution respec tively 
intra operation attribute called behavior defines internal business logic opik 
definition aforementioned attributes notion medjahed chapter 
ontological framework web services execution state described 
operation execution states execution operation opik generally goes major observable states ready start active 
execution opik ready state request executing opik 
start state means opik execution initiated 
refers events input message sent opik opik mode ii output message sent opik opik mode 
say opik active state opik initiated corresponding request processed 
processing request operation reaches state results returned 
refers events output message sent client opik mode ii input message received server opik mode 
operation execution states define precedence relationship states noted follows occurs 
execution states totally ordered follows ready start active pre operations executing web service operation may require going pre defined process involves execution operations called pre operations 
pre defined process dictated government regulations internal business process web service 
example senior citizens register area agency aging aaa operation applying medjahed chapter 
ontological framework web services welfare program 
may reflect business logic web service 
example senior citizens order meal participating restaurant operation requesting delivery operation 
consider generic operations opik opjl belong different communities 
say opik pre operation opjl invocation opjl preceded execution opik 
call opik opjl source target operations respectively 
operation may pre operations 
may source pre operation operations 
give formal definition pre operation relationship 
definition pre operation 
opik opjl generic operations 
opik pre operation opjl opik ready opjl 
definition pre operation relationship includes source operation opik target operation opjl condition mandatory attributes 
condition predicate opik input output parameters 
opjl invoked pre operations reached state conditions true 
condition specified pre operation default value true 
example executed operation approved 
mandatory attribute takes boolean values specifies ex source operation mandatory optional 
attribute true relationship opik opjl obligatory 
recommended 
example senior citizens ordered meals restaurant re home delivery volunteer center 
recommended get list participating restaurants ordering meal 
users directly order meal restaurant know restaurant name 
medjahed chapter 
ontological framework web services post operations execution operation may trigger invocation operations called post operations 
example senior citizen registers successfully food check program required register counseling course 
say opik post operation opjl termination opjl precedes invocation opik 
call opjl opik source target operations respectively 
operation may post operations 
may target post operation operations 
note opik pre operation opjl opjl necessarily post operation opik 
example pre operation 
post operation 
users need order meals registration department aging checked 
give formal definition post operation relationship 
definition post operation 
opik opjl generic operations 
opik post operation opjl opjl ready opik 
pre operations associate condition mandatory attribute post operation relationship 
target operation enters initiation state source operations reached state corre sponding condition true 
post operation may mandatory optional 
example pregnant women registers food check program women register counseling course ing mandatory true 
post operation register optional mandatory false 
citizens necessarily register department aging willing 
operation dependency diagram pre post operations provide means specify pre defined business processes community 
case government business processes medjahed chapter 
ontological framework web services driven government regulations laws 
uml activity diagrams model pre operation post operation relationships 
refer dia grams operation dependency diagrams opd 
activity diagrams show flow activities business process 
opd diagram activity represents generic operation 
generic operation diagram may belong different communities 
case community name op ids 
refer pre post operations remote pre post operations 
opd diagrams defined community providers 
service providers may add pre post operations importing generic operation model business processes inherent web services 
example opd diagram depict part diagram elderly community 
filled circle starting point diagram 
filled circle bor medjahed chapter 
ontological framework web services der point 
edge diagram labeled relation ship attribute 
attribute takes values pre post spec ify edge models pre post operation 
example edge models pre operation relationship 
speci fies users execute initiating execution 
edges labeled mandatory attribute 
example mandatory pre operation 
may invoked previously executed 
opd diagrams may indicate operation conditionally fol lows 
example diamond operations states value returned register parameter true invoking 
edge models post operation rela 
mentions citizens applying food check program register nutrition course 
conditional constructs diamonds la mandatory attribute 
example mandatory pre operation 
may invoked previously executed 
behavior behavior generic operation opik refers outcome expected executing opik specific condition 
defined set business logic rules rule ik format ik rep ik ik ik ik ik ik sets parameters 
parame ter defined name data type business role unit language stated definition 
elements ik ik generally medjahed chapter 
ontological framework web services refer opik input output parameters 
may cases re fer parameters input output opik 
example assume address citizen registered department aging stored department database 
case parameter re quired input operation value retrieved database 
precondition ik postcondition ik predicates param eters ik ik respectively 
rule ik specifies precondition ik holds operation opik starts postcondition ik holds opik reaches state 
precondition ik hold guarantees behavior operation 
preconditions generally specify relationships input values 
similarly post conditions generally specify rela tionships returned values 
example pre post condition rule associated operation income zipcode approved true duration rule uses parameters income unit year dollar zipcode pre condition income zip code 
attributes approved duration unit month post condition approved true duration 
rule specifies citizens yearly income dollars minimum household size eligible food checks month period 
business logic rules pre defined community providers 
service providers may add new rules reflect behavior specific web services 
qualitative properties multiple web services belong community may import generic operation 
important define set attributes help select best web service supporting functionality 
purpose define quality operation model set qualitative attributes medjahed chapter 
ontological framework web services transversal operations cost response time 
group attribute definition run time response time opik opik time process opik time transmit receive results reliability opik opik number times opik successfully executed total number invocations availability uptime opik opik uptime time opik accessible total measurement time business cost reputation dollar amount execute operation opik reputation ranking user number times opik ranked regulatory compliance government regulations regulatory security encryption boolean equal true iff messages encrypted authentication boolean equal true iff consumers authenticated non repudiation boolean equal true iff participants deny requesting delivering service confidentiality list parameters external parties table quality operation model international quality standard iso describes quality totality features characteristics product service bear ability satisfy stated implied needs 
define set non functional attributes may impact quality operations imported web service 
attributes important web services operations 
organize groups quantifiable attributes type measurement performed attribute run time business security table 
run time attributes attributes enable measurement proper ties related execution operation opik 
identify run time attributes response time reliability availability 
response time measures expected delay seconds moment opik enters start state opik initiated reaches state opik gets sends results 
time opik computed expression opik opik 
means response time includes time process operation time transmit receive results 
reliability opik ability operation medjahed chapter 
ontological framework web services executed maximum expected time frame 
reliability opik computed historical data previous invocations operation expression opik opik opik number times operation successfully executed maximum expected time frame opik total number invocations 
availability probability operation accessible 
availability opik measured expression uptime opik opik uptime time opik accessible total measurement time 
business attributes attributes allow assessment operation opik business perspective 
identify business attributes cost reputation regulatory 
cost gives dollar amount required execute opik 
reputation opik measure operation trustworthiness 
mainly depends users experiences invoking opik 
users range rank web service operations 
lowest value refer best ranking 
different users may different opinions operation 
reputation opik defined average ranking users operation 
reputation opik computed expression opik ranking user number times operation ranked 
regulatory property measure opik aligned government regulations 
regulatory opik value range 
lowest value refer operation highly compliant government regulations 
security attributes attributes describe operation opik com security requirements 
service providers collect store process share information millions users different preferences regard ing security information 
identify properties related security privacy encryption authentication non repudiation confidentiality 
tion boolean indicates opik message securely exchanged medjahed chapter 
ontological framework web services ing encryption techniques servers clients 
authentication boolean states opik consumers users services authenticated passwords 
non repudiation boolean specifies par consumers providers deny requesting delivering service fact 
confidentiality attribute indicates parties authorized access operation input output parameters 
confidentiality opik con tains opik input output parameters external entities service provider 
parameter belong confidentiality opik confidentiality constraint specified param eter 
assume confidentiality opik ssn salary ssn salary opik input parameters 
content attribute states parameters kept private opik provider 
registering web services communities registering web service community refers process importing generic operations 
invocation imported operation translated invocation actual service operation 
correspondence imported actual operations done mapping attribute 
imported operation provider gives id corresponding actual operation 
defines mapping imported operation parameters actual operation parameters 
defining mappings parameters enables support legacy web services 
providers need modify message parameters actual service codes 
web service registration process registration process handled network software agents associated service community providers 
member community agents maj cai attached service community provider spj cpi respectively medjahed chapter 
ontological framework web services 
maj handles registration spj web services community ci 
spj registers service ws id registration statement register service ws id community ci name service name description service description imported generic op id importing statements mappings actual op id op id parameter maps op id parameter clauses aforementioned statement correspond different tributes defined service members community ontology 
importing statements sequence statements importing generic oper ation 
web service may import generic operations stated iteration symbol 
web service registration process medjahed chapter 
ontological framework web services maj parses registration statement sends registration message sp register ws id name desc imported cai step 
mes sage includes service id ws id name description list imported operations 
imported set equal op id mappings 
includes mappings op id id imported operation actual service operation 
set op id attributes values signed spj 
defined set attribute value 
list non imported attributes 
maj maintains communities list rule base 
list communities spj web services registered 
entry list contains op id imported operation ws id service imported id ca id community agent cai 
enable fast access sort op id column counting sort algorithm 
contains set rules enable maj react changes issued community providers 
reception registration message cai updates content ci members list mli steps 
entry mli contains id imported operation op id id importing service ws id id ws id agent ma id ws id status available unavailable list op id attributes imported ws id column assigned content included registration message 
sort mli op id column counting sort algorithm enable fast access mli 
member agent ma algorithm reception register ws id name desc imported ci statement sp parse registration statement send sp register ws id name desc imported cai service registration member agent algorithm medjahed chapter 
ontological framework web services figures give algorithm executed community agent cai member agent ma registration 
sp register ws id name desc imported describes actions executed cai reaction registration message sent ma 
insert member function allows insertion new member ci description 
insert ml function allows insertion new entry mli list members 
community agent cai algorithm reception sp register ws id name desc imported message ma id insert member ci ws id name desc imported op id imported insert ml op id ws id ma id available service registration community agent algorithm importing generic operations service providers generic operations templates define operations 
web service may offer generic operations defined community 
provider specifies op ids operations imported service 
adopting generic operation service provider promise abide attributes syntactic semantic behavioral operation changed explicitly importation 
providers may customize generic operations best fit capabilities importing statements 
customization impor tant advantage enabling flexible personalized web service descriptions 
important note customization process affect description generic operations 
service providers may import generic operation different ways 
define importing statements projection extension adjustment 
importing statements defined member agents 
projection extension medjahed chapter 
ontological framework web services adjustment may combined define imported operations 
example service provider may projection extension remove existing parameters generic operation add new ones 
projection generic operation op id imported projection uses subset input output parameters defined op id rest message parameters imported service included sent member agent community agent 
assume operation includes register boolean date output parameters 
service provider may customize operation keeping register parameter interested returning citizen registration date 
follows give general form project statement 
input output clauses give subset op id parameters supported imported operation project op id input list parameter names output list parameter names submitted registration message takes form att value att projected parameter content value null new value assigned input output parameter 
refer attributes list projected parameters 
list imported attributes defined expression opik opik attributes 
extension imported operation defined extension adds input output parameters corresponding generic operation 
new parameters values included registration messages sent member agent community agent 
example service provider volunteer center may extend operation adding cell phone number output parameter 
service providers assign values attributes medjahed chapter 
ontological framework web services new message parameters data type unit business role language 
general form extension statement extend op id input name data type unit business role language output name data type unit business role language submitted registration message takes form att value att new attribute added extension statement value name data type unit business role language 
list imported attributes empty message parameters imported 
adjustment aim adjustment statement modify content generic operation attributes 
service providers may assign values attributes content undefined qualitative attributes change content previously assigned attributes language attribute 
adjustment done adding value attribute add clause deleting existing value delete clause 
example service providers may modify language attribute operation supports language different specified commu nity providers 
add delete clauses may combined remove add values attribute 
new deleted values included registration messages sent member agent community agent 
general form adjustment statement adjust op id add value attribute delete value attribute submitted registration message takes form att value att attribute modified adjustment statement 
value preceded symbol depending value added deleted att respectively 
list imported attributes empty message parameters imported 
medjahed chapter 
ontological framework web services peer peer approach managing com communities members operate highly dynamic environment changes launched adapt actual business climate economic organizational 
changes initiated community service providers 
community providers side generic operations may dynamically added deleted modified 
generic operation op id deleted modified mem bers supporting op id notified ensure global consistency 
service provider side web service may cancel membership com operations temporarily unavailable modify definition imported operations 
community provider case notified avoid obsolete imported operations 
approach changes introduced member community agents 
agents automatically interact peers manage changes 
consider types changes party launched community service providers 
propagating changes initiated community providers community providers cps may modify definition generic operations 
example may change pre operation attributes re new government regulations 
purpose cpi executes modify statement defined cai agent step 
statement includes op id operation modified cpi contains list attributes modified new content 
defined set attribute value 
notation modi att refer set modified attributes 
cai access service registry update ci description changing content att medjahed chapter 
ontological framework web services tributes step 
third step cai accesses mli list determine list members subscribed cpi changes 
member ws id sub scribed cpi changes ws id imports op id attribute att imported ws id cai assigns value unavailable status subscribed member 
prevents members imported obsolete generic operations step 
cai sends cp modify op id wsj notification subscribed member maj step 
give formal definition subscription 
definition subscription 
ci community wsj mem ber imported operation opik 
wsj subscribed changes specified cp modify op id op id opik ii att mli entry corresponding op id wsj 
propagating changes initiated community provider members pre post operations operation opik may belong differ ent communities associate dual subscription lists community agent cai 
lists notify relevant parties communi ties members changes related remote pre post operations 
pre post operation community subscription contains list com medjahed chapter 
ontological framework web services cj operation opik ci remote pre post operation 
entry contains id op id opik id cj agent ca id 
entry created cj definition time time sends cp pp subscribe cp op id cai cp stands community provider pp pre post operation 
notify cj changes occur opik 
time cpi executes modify statement opik cai accesses list sends notification cp pp alert cp opik community agent uses opik remote pre post operation 
sort op id column counting sort algorithm enable fast access list 
cp pp alert cp opik message received notifies cj members list 
propagating changes initiated community providers peers pre post operation member subscription contains list cj members operations opik communities ci remote pre medjahed chapter 
ontological framework web services post operations 
list created cj definition time 
notify members changes occur pre post operations 
entry contains id ca id community agent cai id pp id remote pre post operation opik id ma id agent cj member uses opik remote pre post operation 
accesses list sends notification message cp pp alert sp opik sp stands service provider member agent ma id uses opik remote pre operation 
sort ca id column counting sort algorithm enable fast access list 
prevent members imported obsolete generic operations assigns value unavailable status ma id entries mlj list 
consider entries ma id imported operations opik remote pre post operation 
cj provider may remove remote pre post operation opik generic operation definitions 
propagate change removes en try corresponds cai opik 
sends cp pp remove cp opik cai 
reception message cai removes entry corre sponding opik 
cai send cp pp alert cp opik messages cj opik remote pre post operation 
summarizes algorithm executed cai managing modification generic operations 
update member function allows update description community description service registry 
propagating changes initiated service providers provider web service ws id may initiate changes sent communities 
community ci notified change change operation imported ci 
changes intro duced member agents automatically forwarded community agents reflect changes community level 
define service providers changes medjahed chapter 
ontological framework web services community agent cai algorithm reception modify op id statement cp update member ci op id mli op id mli op id op id mli mli status unavailable send cp modify op id mli ws id mli ma id contains pre post operation attributes csi op id csi op id op id send cp pp alert cp op id csi ca id cp pp alert cp op id message msi csi op id op id entry mli mli op id pre post operation mli status unavailable send cp pp alert sp op id mli ma id cp pp remove cp op id message csi op id op id csi ca id remove entry csi generic operation modification community agent algorithm modifying operations ws id provider may modify attributes remove message parameter previously imported operation modification statements defined ws id agent ma step 
tion statement includes op id operation modified ws id service imported importing statement statement modification 
ma gets modification statement sends sp modify op id ws id itype message ci agent cai fig ure step 
defined cp modify messages 
itype gives type statement projection extension adjust add medjahed chapter 
ontological framework web services propagating changes initiated service providers adjust delete 
reception sp modify message cai updates ci description step 
message concerns projection statement cai updates column mli entry corre op id ws id step 
assigns content att column 
message concerns adjust delete statement remote pre post operation opjl cai removes entry corresponding opjl ws id agent 
message concerns adjust add statement remote pre post operation opjl cai adds new entry values opjl ws id agent ma id freezing operations imported operation may available unavailable due network problem 
ws id provider may temporarily imported operation op id executing freeze statement step defined ma 
statement includes op id operation frozen ws id service imported 
consequence ma sends sp freeze op id ws id message cai step 
cai assigns unavailable value medjahed chapter 
ontological framework web services member agent ma algorithm reception modify op id ws id statement statement sp parse importing statement statement get statement itype type statement cai lookup community cl op id send sp modify op id ws id cai freeze op id ws id statement sp cai lookup community cl op id send sp freeze op id ws id cai resume op id ws id statement sp cai lookup community cl op id send sp resume op id ws id cai unsubscribe op id ws id statement sp cai lookup community cl op id send sp unsubscribe op id ws id cai changes issued service providers member agent algorithm status column mli entry correspond op id ws id step 
resuming operations ws id provider may re activate operation op id previously frozen resume statement defined ma 
statement includes ws id op id con sequence ma sends sp freeze op id ws id op id community agent cai step 
cai assigns available value status column mli entry correspond op id ws id step 
medjahed chapter 
ontological framework web services operations ws id provider may decide support imported operation 
purpose executes ma scribe statement step 
ma informs cai change step sending unsubscribe op id ws id message 
cai updates ci description step 
assigns value status mli entry correspond op id ws id step 
cai periodically checks status column mli remove entries associated operations 
figures depict algorithm executed community member agents managing changes initiated service providers 
lookup community function lines executed communities list cl returns cai id community ci operation op id 
member agent maj needs react change notifications sent community agent cp modify op id wsj cp pp alert sp opik messages 
actions performed maj result change notification captured eca event condition action rules 
briefly basic semantics eca rule follows event occurs action executed corresponding condition true 
event driven systems paradigm choice organizing classes loosely coupled dynamic applications 
members react changes change control policies local rule specified agent 
reaction changes customized peculiarities member 
example eca rule specified member agent rule event cp modify op id wsj condition source pre operations modify att action notify service provider change internal business logic send resume op id wsj message source medjahed chapter 
ontological framework web services community agent cai algorithm reception sp modify op id ws id itype message ma id update ci op id entry mli mli op id op id mli ws id ws id case itype projection mli parameters op id att adjust delete contains pre post operations remove entry related op id ma id adjust add contains pre post operations add entry op id ma id sp freeze op id ws id message ma id entry mli mli op id op id mli ws id ws id mli status unavailable sp resume op id ws id message ma id entry mli mli op id op id mli ws id ws id mli status available sp unsubscribe op id ws id message ma id entry mli mli op id op id mli ws id ws id mli status changes issued service providers community agent algorithm states member receives change notification issued provider change concerns pre operations attribute service provider reflect change modifying internal business logic 
member agent sends resume op id wsj message agent 
medjahed chapter 
ontological framework web services message confirmation member locally reflected changes done cp 
summarizes change reaction algorithm executed member agents 
member agent ma algorithm reception cp modify op id ws id rule event condition actions rule base rb event cp modify op id ws id condition execute actions cp pp alert sp op id cai rule event condition actions rule base rb event cp pp alert sp op id condition execute actions reaction changes issued community providers member agent algorithm chapter composability model semantic web services existing techniques web service composition generally require dealing low level programming details making process composing services demanding composers 
composers need identify way operations interconnected services invoked messages mapped 
deal issue propose model called composability model check operations combined avoiding unexpected failures run time 
composability refers process checking web service operations composed interact 
proposed model defined set rules called composability rules 
rule compares specific feature interacting web services 
features relevant different aspects web services syntactic semantic behavioral qualitative organize composability rules levels 
rule specifies constraints requirements checking horizontal vertical hybrid com 
define rules called business process composability rules check composition web service operations provides value added 
due sheer heterogeneity web services possible find services fully composable 
composers may case select services medjahed chapter 
composability model semantic web services partially composable adapt requests results returned composability process 
purpose introduce notions composability degree composability cater partial total composability 
chapter give detailed description proposed composability model 
section define basic concepts model composability rule level degree composability 
section describe syntactic composability rules 
section define composability rules comparing static dynamic semantic features web services 
section devoted composability rules related quality operation features 
sec tion describe business process composability 
proposed model composability proposed model composability contains set rules organized levels 
rule level clp compares interacting operations respect specific attribute clp 
level cl com syntactic attributes number parameters cr bindings cr 
second level cl compares static semantic attributes 
define groups rules level 
group cr cr compares static semantics messages 
second group cr cr compares static se mantics operations 
third level cl compares dynamic semantic attributes cr cr 
fourth composability level cl focuses quality operation attributes 
contains groups rules 
group cr cr compares secu attributes 
second group cr cr checks business attributes 
third group cr cr qualitative composability rules deals runtime attributes 
fourth level cl deals business process composability 
con tains rules cr cr cr checks soundness composite service service provides value added 
main differences business process composability rules medjahed chapter 
composability model semantic web services composability stack medjahed chapter 
composability model semantic web services rules lower levels 
business process composability deals fea tures related composite services levels rules compare operation message attributes participant services 
second business process composability checks composability posteriori composition performed 
rules lower levels check composability priori composing web services 
horizontal vertical hybrid composition define ways combining web service operations horizontal vertical hybrid 
horizontal composition models supply chain combination operations 
opik opjl operations horizontally composed 
call opik opjl source target operations respectively 
depicts horizontal composition case opik mode case case 
operation opik executed followed opjl execution 
opik messages feed opjl input message 
set messages input message opjl 
say feeds parameters messages parameters 
depicted inik outik messages feed injl 
example horizontal composition assume opik provides translation english french opjl provides translation french chinese 
operations opik opjl may horizontally composed provide translation english chinese 
case result opik french word input opjl 
precedence relationships opik opjl states vertical composition models operation opjl operation opik 
depicts vertical composition case opik mode case case 
consider case medjahed chapter 
composability model semantic web services horizontal composition opik mode 
opik invoked transparently sends input message opjl 
opjl performs requested function behalf opik returns output message opik 
opik send results invoker 
assume opik mode 
opik starts execution invoking opjl 
opjl terminates execution sends results opik receives input message 
example vertical composition personal computers pc offering operation 
operation allows customers request quotes 
execution requires invocation operation provided pc manufacturer get latest prices delivery schedule 
summarize precedence relationships opik opjl states medjahed chapter 
composability model semantic web services vertical composition composite service cs may include operations horizontally composed vertically composed 
refer type composition hybrid composition 
example depicts hybrid composition operations op op op 
case op vertically composed op 
means op op 
additionally op horizontally composed op meaning op input output messages feed op input 
second example depicts hybrid composition op op op op 
op horizontally composed operations op op 
furthermore op horizontally composed op 
properties composability rule composability rules check operations opik opjl composable different perspectives 
identify properties characterize composability rules level granularity attribute symmetry composition type 
table summarizes different composability rules properties 
medjahed chapter 
composability model semantic web services hybrid composition organize rules levels syntactic static semantic dynamic semantic qualitative 
levels check composability message operation granularity 
rule level compares specific pair attributes opik opjl mode binding purpose cost 
rule symmetric asymmetric 
symmetric order checked opik opjl opjl opik important 
contrast asymmetric rules asymmetric rule satisfied opik opjl necessarily satisfied opjl opik 
rule may applicable horizontal composition plugin vertical composition exact purpose category hybrid composition soundness 
medjahed chapter 
composability model semantic web services level granularity attribute symmetry horizontal vertical hybrid syntactic message number parameters operation binding mode static semantics message data type unit language business role message type operation purpose category prov 
cons 
type dynamic semantics operation plugin plugin exact plugin exact qualitative operation confidentiality non repudiation authentication encryption regulatory reputation cost availability reliability response time business process composite exact loose strong rule corresponding property 
composability degree table composability rules properties composers may different views composability rules 
may example give higher importance syntactic composability may focus semantic rules 
capture aspect associate weight wp level clp 
define weight wpq rule level 
weight estimate significance corresponding level rule composer point view 
composers assign weight level rule 
gives composers control composability process 
higher weight important corresponding level rule 
wp compares clp levels medjahed chapter 
composability model semantic web services terms importance 
total weights assigned different levels equals 
similarly wpq compares rules level clp 
total weights assigned rules level equals 
formally different weights respect constraints clp number rules level 
wp wpq 
clp pq 
due heterogeneity web services possible find op erations fully composable source operations 
composers may case select operations partially composable operation adapt operations results returned composability process 
example composer may modify data type operation parameter compatible data type corresponding target operation parameter 
purpose introduce notion composability degree source target operations 
degree opik opjl gives ratio composability rules satisfied opik opjl 
takes values 
define boolean function opik opjl returns true iff rule satisfied opik opjl 
reflect composer view rule adjust value returned function opik opjl weight wpq 
degree level clp obtained adding adjusted values returned function satisfied applied clp rule 
degree clp computed adjust weight wp assigned clk 
specified degree opik opjl obtained summing composability degrees levels clp degree opik opjl clp wpq opik opjl composition process composer assigns weights level rule providing vector called level weight lw matrix called rule weight medjahed chapter 
composability model semantic web services rw 
element lwp gives weight assigned level clp 
element gives weight assigned rule 
rule undefined automatically assigned value 
example rules cr cr defined entries rw rw equal 
illustration assume case officer john provides weights source operation lw rw example shows composer gives importance static semantic composability corresponding weight greater levels weights 
dynamic semantic properties composer gives higher priority exact behavioral rule 
assume compared composability model composability rules satisfied ones correspond rules cr cr cr cr cr cr cr cr cr cr cr cr cr cr 
composability degree computed follows degree medjahed chapter 
composability model semantic web services 
degree opik opjl decide composability operations 
degree rule satisfied operations non composable 
degree composability rules satisfied operations fully composable 
subset rules satisfied 
case opik opjl partially composable degree opik opjl opik opjl non composable degree opik opjl composability opik opjl fully composable opik opjl partially composable service composers may different expectations composability de gree operations 
purpose composers provide composability threshold 
threshold gives minimum allowed value com degree 
operations opjl degree opik opjl poten tial candidates composed opik 
threshold greater de gree opik opjl opik composed opjl 
assume com poser assigns value threshold 
ity degree equals composable 
definition composability 
definition compares com degree threshold decide operation composable definition operation opik composable opjl degree opik opjl 
medjahed chapter 
composability model semantic web services summarize lemma relationship composability composability degree 
opik opjl fully composable degree opik opjl 
composable values 
opik opjl non composable degree opik opjl 
non composable values 
operations partially composable opik opjl may composable depending value 
lemma opik opjl source target operations respectively opik opjl fully composable opik opjl composable 
opik opjl non composable opik opjl composable 
opik opjl partially composable opik opjl composability depends value 
syntactic composability rules define group syntactic composability rules 
group contains rules compare attributes operation granularity 
rules include binding mode composability 
second group includes rules check attributes message granularity 
rules include pn composability compares number parameters operation messages 
composability operation granularity syntactic attribute needs checked binding 
opera tions opik opjl may support different binding protocols soap soap mime 
important insure understand message format protocol level 
protocols expected operation supported 
example difficult operation expects receive messages soap mime protocol interact medjahed chapter 
composability model semantic web services service format messages soap 
rule called binding composability checks operations support common binding protocol 
definition opik opjl operations 
say opik opjl binding composable 
assume opik opjl binding composable 
operations plugged composable modes 
mode composability depends criteria composition type vertical horizontal source operation mode modeik 
consider possible cases 
composition vertical modeik input opik feeds opjl input output opjl feeds opik output 
opjl operation 

composition vertical modeik opik starts sending output message received opjl 
processing message opjl replies opik output message 
opjl operation 

composition horizontal modeik opik output message result returned execution opik 
part invoke opjl sending input message 
opjl operation 

composition horizontal modeik opik input message result performed opik vertical composition 
invoke opjl sending input message 
opjl operation 
illustrated discussion target operation mode independently composition type model source medjahed chapter 
composability model semantic web services operation 
give formal definition mode composability definition opik opjl operations 
say opik mode composable opjl 
composability message granularity syntactic composability requires comparing opik opjl message level 
need compare input output messages operations 
purpose define composability rule called parameters number ity pn composability 
pn composability compares number parameters pair plugged messages 
definition pn composability depends composition type operations modes 
identify cases 
composition vertical composition modeik inik plugged injl plugged outik 
inik provide information expected injl outik 
number parameters inik equal number parameters injl outik 

composition vertical modeik outik plugged injl plugged inik 
number param eters outik equal number parameters injl inik 

composition horizontal modeik case inik outik plugged injl 
consequently total number parameters inik outik equal injl 
horizontal composition modeik illustrated case similar case 
discussion clear pn composability ric 
give formal definitions rule medjahed chapter 
composability model semantic web services definition opik opjl operations 
say opik pn composable opjl conditions true 
composition vertical ii modeik iii injl inik iv outik 

composition vertical modeik injl outik iv inik 

composition horizontal ii injl inik outik 
static semantic composability rules operations opik opjl plugged semantically compliant 
example semantically incorrect interconnect operation provides counseling checks eligibility operations different purposes 
additionally message parameters mapped business roles 
static semantic rules deal composability operation message granularity 
composability operation granularity operations described static semantics level provider type consumer type category purpose attributes chapter 
composability rule compares opik opjl 
content attributes similar opik opjl vertically composed 
example operation providing cash support subcontract kind operations 
horizontal composition require comparing operation service 
definition opik opjl vertically composed oper ations 
say opik opjl composable medjahed chapter 
composability model semantic web services second rule compares opik opjl provider consumer types 
way comparison done depends type composition opik opjl 
composition horizontal opik opjl common provider type common consumer type 
example opik expects outsource federal agency operation opjl agency include type federal 
additionally opik provides benefits children pregnant women opjl provide benefits groups 
opik horizontally composed opjl viewed consumer opjl 
opjl consumer type include value opik provider types 
give formal definition provider consumer type composability called pc composability definition opik opjl operations 
say opik pc opjl conditions true 
composition vertical ii iii 

composition horizontal ii 
operations categories compared third composability rule 
assume opik opjl vertically composed 
opik meant replace opjl conditions true opik opjl domains interest similar synonyms ii characteristics elements tion attribute opik category provided opjl example assume opik category provides health insurance children healthcare children insurance 
operation opjl deal healthcare provide insurance children 
assume opik opjl horizontally composed 
defined opik opjl combined 
captured overlapping attribute category 
compos able contains 
leads defining category composability rule 
say opik category composable opjl medjahed chapter 
composability model semantic web services compatible 
give definition category composability definition say composable conditions true 
composition vertical ii iii 

composition horizontal ii 
rule compares operations purposes 
purpose composability rule defined way category composability replaced respectively definition say composable conditions true 
composition vertical ii iii 

composition horizontal ii 
composability message granularity composability requires checking semantics opik opjl messages 
message composability rule compares message types 
rule applicable vertical composition horizontal composition involve replacing opik messages opjl vice versa 
vertical composition opik opjl identify cases mode opik 
opik inik resp 
outik injl types similar 
outik resp 
inik injl types similar 
medjahed chapter 
composability model semantic web services definition opik opjl vertically composed operations 
message type opik composable opjl conditions true 
modeik ii mt inik mt injl iii mt outik mt 

modeik ii mt outik mt injl iii mt mt inik 
second rule called data type composability dt checks pa rameters data types 
dt notion compatibility tween data types xml schema 
define data type compatibility techniques name derivation compatibility 
name compatibility means parame ters type 
parameter compatible derivation data type long super type integer 
definition dt depends composition type oper ations modes 
distinguish cases 
composition vertical modeik inik plugged injl plugged outik 
data type parameter injl outik compatible data type corresponding parameter inik 

composition vertical modeik outik plugged injl plugged inik 
data type parameter injl resp 
inik compatible data type corresponding parameter outik 

composition horizontal modeik case inik outik plugged injl 
data type pa rameter injl compatible data type corresponding parameter inik outik 
medjahed chapter 
composability model semantic web services 
composition horizontal modeik illustrated fig ure case similar case 
discussion clear dt composability ric 
give formal definition rule definition operation opik dt composable opjl conditions true 
composition vertical ii modeik iii injl inik data type compatible iv outik data type compatible 
composition vertical ii modeik iii injl outik data type compatible iv inik data type compatible 
composition horizontal ii injl inik outik data type compatible remaining rules compare parameters business role language unit respectively 
rules defined similarly dt composability data type replaced business role language unit respectively 
give rules definitions definition business role opik composable opjl conditions true 
composition vertical ii modeik iii injl inik role role iv outik role role 

composition vertical ii modeik iii injl outik role role iv inik role role 

composition horizontal ii injl inik outik role role 
medjahed chapter 
composability model semantic web services definition language opik composable opjl conditions true 
composition vertical ii modeik iii injl inik language language iv outik language language 

composition vertical ii modeik iii injl outik language language iv inik language language 

composition horizontal ii injl inik outik language language 
definition unit opik composable opjl conditions true 
composition vertical ii modeik iii injl inik unit unit iv outik unit unit 

composition vertical ii modeik iii injl outik unit unit iv inik unit unit 

composition horizontal ii injl inik outik unit unit 
previous definitions static semantic composability mes sage granularity define notion composability message parameters 
message parameters 
say composable dt composable ii roles languages units composable 
define rule called message composability compares static semantic attributes source target operations messages 
definition operation opik message composable opjl conditions true medjahed chapter 
composability model semantic web services 
composition vertical ii modeik iii injl inik data type compatible role role language lan guage unit unit iv outik data type compatible role role language language unit unit 

composition vertical ii modeik iii injl outik data type compatible role role lan guage language unit unit iv inik data type compatible role role language language unit unit 

composition horizontal ii injl inik outik data type compatible role role language language unit unit 
dynamic semantic composability behavioral composability composability compares business logic rules source target operations 
consider rules ik rec ik ik jl rec jl jl belong opi opj respectively 
composability relates rec ik rec jl ik jl define forms composability depending relationships post pre conditions 
form instantiation general form composability called generic composability 
relations relate preconditions postconditions respectively need 
equivalence implication nil meaning corresponding term dropped 
cases may want include information postcondition precondition clause 
allow flexibility rec ik rec ik ik generic composability rule 
definition say opik generically composable opjl medjahed chapter 
composability model semantic web services ik rules opik jl rules opjl jl jl ik nil ik ik ik composability rules depicts different forms composability rules strongest rule weakening rule relaxing relations nil 
vary rec ik rec ik ik 
relaxing composability rule allows making comparison closely related operations weakens guarantees relationship operations 
exact composability exact composability instantiates rec ik 
exact composability holds operations behaviorally equivalent completely interchangeable 
medjahed chapter 
composability model semantic web services operation replaced change observable behavior 
depicted rule suitable vertical composition opik opjl active state simultaneously 
condition exact composability expressed follows ik rules opik jl rules opjl rec ik rec jl jl ik plugin composability plugin composability relaxes 
instantiates rec ik 
rule ik matched rule jl precondition weaker allow conditions ik allows 
post condition jl stronger ik provide guarantee strong ik depicted rule suitable vertical composition opik opjl active state simultaneously 
condition plugin composability ik rules opik jl rules opjl rec ik rec jl jl ik show opjl plugged opi business logic opj ik preserved 
rec ik holds rec jl holds conjunct plugin composability 
rec jl jl definition assume jl hold executing plugged opjl 
jl ik second conjunct composability ik hold 
say opi behaviorally equivalent opj plug opj opi observable behavior 
note true equivalence symmetric necessarily plugin opi opj get guarantees 
exact composability cases composers concerned effects operations 
example composer may interested operation provides social benefit independently precondition operation 
useful relaxation exact composability medjahed chapter 
composability model semantic web services consider postcondition part conjunction 
exact instance generic composability instantiated dropping rec jl case 
equivalence relationship exact symmetric 
opjl active state simultaneously rule suitable vertical composition 
condition exact composability defined follows ik rules opik jl rules opjl jl ik plugin composability plugin relaxation ex act relationship postconditions equal 
plugin instance generic composability instantiated nil respectively case 
contrast exact plugin asymmetric implication tween postconditions 
stated rule suitable vertical composition opik opjl active state simultaneously 
give condition plugin composability ik rules opik jl rules opjl jl ik plugin composability plugin includes information opi postcondition precondition drops relationship postconditions 
particularly useful check horizontal composability execution opi followed execution opj 
opi executed ik opj rec ik defi nition true 
order opj executable jl precondition rec jl true 
way ensure check implication rec ik ik rec jl true 
note plugin asymmetric implication relationship 
shows opik opjl enter active states sequentially 
rule horizontal composition 
defined plugin instantiation generic composability instantiated nil medjahed chapter 
composability model semantic web services rec ik ik ik rules opik jl rules opjl rec ik ik rec jl table summarizes way instantiated composability rule 
example plugin composability rec ik 
column shows plugin suitable horizontal composition rules applicable vertical composition 
rule symmetry composition exact rec ik vertical plugin rec ik vertical exact nil rec ik vertical plugin nil rec ik vertical plugin nil rec ik ik horizontal table instantiations generic composability composability rules related graph depicted 
arrow composability rule br br indicates br stronger br opik composable opjl br composable opjl br 
example exact plugin plugin 
qualitative composability composers generally preferences regarding quality operations compose 
purpose define set composability rules called qual rules compare qualitative features interacting operations 
assume medjahed chapter 
composability model semantic web services relationships composability rules opik opjl vertically composed 
opik opjl important sure opjl quality similar opik quality 
opik opjl horizontally composed quality independent 
qualitative rules applicable vertical composition 
rule compares content qualitative attribute noted attribute opik opjl 
rule general form relationship 
definition differs rule 
qual rule compares encryption attribute 
guarantees opik opjl encrypt messages 
authentication non repudiation attributes compared way 
security related rule compares confidentiality attribute 
privacy preferences opik preserved privacy features exposed opjl 
opik provider want parameter belong 
summarize subset qualitative rules dealing security attributes definition say security attributes opik composable opjl security attributes ii iii non non iv medjahed chapter 
composability model semantic web services 
second subset qualitative rules compare opik opjl business tributes cost reputation regulatory 
opik opjl cost executing opjl equal opik 
similarly ranking opjl terms reputation regulatory features opik ranking 
definition describes composability rules related business attributes definition say business attributes opik composable opjl business attributes ii iii 
subset qualitative rules compare run time attributes response time reliability availability 
time executed operation opjl equal response time expected expected opik 
additionally opjl reliable available opik 
definition run time related composability rules definition say run time attributes opik composable opjl run time attributes ii iii 
business process composability service composition involves combining set generic operations specific way 
important issue consider combination provides added value 
address issue define rule called composition soundness check composition generic operations sound 
sound mean way operations combined provides added value 
medjahed chapter 
composability model semantic web services example composition template composition stored templates definition composition soundness notions composition stored templates defined 
composition template built compos ite service cs gives general structure 
modeled directed graph set generic operation ids op ids set edges 
operation op vertically composed operation op cs op op represent node execution op replaced execution op 
edges model horizontal composition relationships operations 
edge opik opjl belongs opik horizontally composed opjl 
shows example composition template composite service cs collects social benefits senior citizens 
cs uses operations 
cs looks senior activity center 
location center provides transportation citizen residence center 
looks participant restaurant center arranges delivery restaurant center location 
template shows horizontally composed 
operation horizon tally composed 
stored templates defined directed graphs similar com position templates 
difference stored composition templates twofold 
stored templates saved stored template repository st medjahed chapter 
composability model semantic web services example stored template repository composition computed composite service discarded 
second interpretation composition stored templates different 
composition templates model actual composite services defined users 
may may provide added values 
stored template model potential composite services 
generally pre defined domain experts community providers 
inherently provide added values 
example government agencies dealing social services agree composite service collects benefits senior citizens combine follow ing operations 
stored templates may learned system 
time composite service defined user system saves corresponding composition template st repository template exist repository 
composition soundness stored templates intrinsically provide added values prove dis prove soundness composite service cs 
idea compare com position template cs template cs existing stored templates 
cases possible 
case template cs equal stored template st cs provides exactly functionalities functionalities modeled st medjahed chapter 
composability model semantic web services say cs exactly sound respect st 
case template cs subgraph stored template st cs provides subset functionalities modeled st example com position template depicted subgraph stored templates depicted 
say cs loosely sound respect st 
case stored template st subgraph template cs cs provides functionalities modeled st cs provides functionalities offered st say cs strongly sound respect st 
case previous cases possible cs sound 
give definition composition soundness rules 
definition cs composite service 
define composition soundness rules follows cs exactly sound st st repository template cs st cs loosely sound st st repository template cs st cs strongly sound st st repository template cs st chapter automatic composition semantic web services automatic composition web services trend com complexity composition process checking ity orchestrating web services :10.1.1.21.61
play major role en envisioned semantic web services paradigm 
chapter semantic web centered approach automatic composition web services 
proposed approach builds semantic description frame composability model described chapters respectively 
consists conceptually separate phases specification matchmaking generation 
specification phase phase enables high level descriptions composition requests 
purpose define composition specification language csl 
csl extends uml activity diagrams ontological description com position request 
csl composers specify part desired compo sition concern part 
required aware full technical details list participant services way executed plugged 
matchmaking phase phase uses composability model generate composition plans conform composers medjahed chapter 
automatic composition semantic web services specifications 
composition plans generated composer sub request 
composition plan refer list imported operations outsourced orchestration order way interact plugging operations mapping messages realize corresponding sub request 
generation phase phase detailed descriptions composite service generated 
propose quality composition qoc model assess quality generated descriptions 
overview proposed approach service composition chapter organized follows 
section define model techniques specification composition requests 
section pro pose set algorithms checking composability automatic generation composition plans 
section illustrate process generating composite service descriptions 
medjahed chapter 
automatic composition semantic web services specification composition requests specification composition request requires dealing major issues orchestration description 
composer request generally includes sev eral sub requests 
example request visit senior activity center includes sub requests lookup senior activity center set appoint ment senior activity center 
sub requests executed specific order certain conditions true look senior activity center set appointment 
order conditions specified orchestration model 
additionally automatic generation composite services requires clear unambiguous description request sub requests 
example composition engine understand lookup senior activity center means 
section define language called composition specification language csl specification composition requests 
orchestration model define types orchestration approach composer defined system generated orchestration 
composer defined provided composer spec ification phase 
gives execution order composition sub requests 
refer inter orchestration represents orchestration sub requests 
system generated orchestration automatically generated com position engine 
gives execution order participant services outsourced sub request 
refer intra orchestration repre sents orchestration sub requests 
orchestration model section deals type 
details system generated orchestration section 
orchestration models proposed literature uml activity diagrams petri nets statecharts calculus 
approach adopt uml activity diagrams orchestration model 
activity diagrams widely process modeling techniques conventional interaction tech medjahed chapter 
automatic composition semantic web services workflows web services 
reason success ease simplicity modeling business processes 
tools ra tional rose available designing business processes activity diagrams 
additionally unified modeling language uml de facto stan dard representing application architectures design models 
activity diagrams model specifying actions performed execution 
natural way users think process developers code applications 
modeling composition request activity diagrams activity diagrams show flow activities business process 
ap proach activity represents composition sub request 
sub request modeled capsule rectangle rounded corners sub request name enclosed 
depict example orchestration composition request government scenario 
case officer specify composition request organizing visit senior activity center activity diagram 
filled circle starting point diagram 
filled circle border point 
composition request includes sub requests medjahed chapter 
automatic composition semantic web services schedule transportation 
case officer possibility indi cate sub request conditionally follows 
example diamond labeled trans 
available tests government funded transportation available 
case notification sent citizen schedule 
case officer performs get driving directions citizen home activity center location 
activity diagrams may model parallelism fork join constructs 
fork represented black bar flow going leaving 
denotes parallel processing 
join depicted black bar flows entering leaving 
denotes parallel processing 
composition request single sub request composition request specification may consist sub request 
example depicts composition request provides translation english 
request contains sub request label translation english 
important note composite service gen eration process sub request may mapped set web service operations combined specific way 
example translation english sub request mapped combination web service operations order english french french chinese chinese 
describing composition sub requests activity diagrams enable specification execution order composition sub requests 
provide means describing sub requests 
description concerns syntactic semantic features 
deal issue define ontology sub requests called sub request ontology 
sub requests described medjahed chapter 
automatic composition semantic web services ontology 
sub request meant mapped generic operations adopt ontology defined generic operations 
sub request described syntactic static semantic dynamic semantic qualitative attributes 
request name 
name description 
description parameters 
parameters syntax 
syntax 

quality 
quality 
request description composition request csl ontology description request sub requests produces xml document 
give general form document 
sake clarity omit xml namespaces 
top element request contains name request name element text description description request parameters element elements 
parameters element gives input output parameters composition sub requests 
similarly profile inputs sub request parameters input output may defined specific taxonomy 
element contains sub elements 
sub element syntax includes syn tactic attributes 
binding sub request similar binding compo sition request defined composer profile 
sub elements describe static dynamic semantics sub request 
dynamic semantics sub request limited behavioral attributes 
pre operations post operations represent pre defined business processes medjahed chapter 
automatic composition semantic web services community providers specific generic operations 
quality sub elements contains qualitative attributes sub request 
input output sub elements describe input output parameters required sub request 
sub request may input output parameters defined composer profile 
may parameters defined parameters element 
cases input output sub elements contain parameters names 
customization composer profiles customization key requirement automatic composition web services 
composers able personalize composition process preferences 
preferences composer profile 
general form profile definition construct define profile levels assign vector lw rules assign matrix rw degree assign value composability binding assign value binding plans assign value max plans input parameter part profile definition composers assign values level weights vector lw rule weights matrix rw 
provide composability threshold binding protocols supported composite services 
addition ally give maximum number composition plans generated composition sub request 
provide list input parameters cit name address execution generated composite service 
parameter defined name data type unit business role medjahed chapter 
automatic composition semantic web services language section 
facilitate definition parameters composers may pre defined parameters defined existing taxonomy 
example taxonomy rosettanet technical dictionary 
dictionary contains properties describe characteristics product service 
outsourcing web services ing phase csl specification orchestration profile description provided step generate composition plans relevant sub request matchmaking algorithms 
general premise algorithms consider sub request operation 
operation vertically composed combination generic operations 
vertical composition returns set composition plans 
number sub requests nb cp number plans generated th sub request 
number plans generated composition request nb cp 
matchmaking profile sub request srp vert comp srp registry plans profile nb plans nb plans profile max plans vert comp srp registry plans profile nb plans main matchmaking algorithm generation composition plans checking composability rules sub request imported operations 
main matchmaking algorithm depicted 
sub request algorithm tries vertically compose generic operation 
refer composition composition 
entry plans contains list composition plans generated sub request srp 
number generated plans equal medjahed chapter 
automatic composition semantic web services maximum number plan request algorithm tries vertically compose sub request combination generic operations 
refer composition composition 
vertical composition propose algorithms performing vertical composition 
algorithm operation centric 
compares sub request sr operations registry 
second algorithm community centric 
compares sub request sr imported operations opik relevant community ci 
third algorithm adopts message centric approach checking composability 
compares vertical composability sr message messages ci determines imported operations sr composable 
operation centric matchmaking algorithm operation centric algorithm vertical composition uses operations basis checking composability 
performs exhaustive search service registry 
purpose browses registry determine operations replace sub request sr 
algorithm checks vertical composability sr operation opik registry 
syntactic static semantic operation level composability checked illustrated chap ter 
static semantic composability message level checked comparing sr input output parameters input output parameters opik 
composability degree computed checking group composability rules 
degree greater equal composability specified composer profile opik potential candidate replace sr case opik added set sr composition plans 
operation centric algorithm uses procedures checking syntactic static semantic composability operation level 
give algorithms executed procedures 
rule checked corresponding medjahed chapter 
automatic composition semantic web services operation sr registry plans profile nb plans nb plans degree plans operation opik registry nb plans profile max plans syntactic vertical sr opik degree degree profile composability plans plans opik nb plans nb plans continue static semantics vertical sr opik degree degree profile composability plans plans opik nb plans nb plans continue message vertical sr opik degree degree profile composability plans plans opik nb plans nb plans continue behavioral sr opik degree degree profile composability plans plans opik nb plans nb plans continue operation centric algorithm vertical composition weight assigned composer positive 
purpose function get cr returns weight current rule cr rw ma trix 
function get cl returns weight current level cl lw vector 
static semantics vertical procedure uses pro composable composable check conditions specified definition respectively 
message vertical procedure checks sr message composable medjahed chapter 
automatic composition semantic web services syntactic vertical opik opjl degree get cr modeik get cr get cr get cr get cr modeik injl inik outik get cr get cr modeik injl outik inik get cr degree degree get cl static semantics vertical opik opjl degree get cr get cr get cr get cr get cr composable get cr get cr composable get cr degree degree get cl syntactic operation semantic composability opik 
uses function message composable returns true false depending message composable 
allow mapping parameters matched set 
parameter inserted set parameter composable 
behavioral composability behavioral procedure compares sr business medjahed chapter 
automatic composition semantic web services message vertical opik opjl degree modeik message composable inik injl message composable outik degree degree get cl modeik message composable outik injl message composable inik degree degree get cl message composable boolean matched param false param matched composable true matched matched break return false line return true message composability logic rules opik composability rules hierarchically organized adopt bottom approach checking rules 
plugin rule satisfied plugin rule necessarily satisfied plugin plugin 
algorithm executed checking behavioral composability 
algorithm uses functions check plugin check plugin check exact check exact 
functions return true corresponding composability rules satis fied 
composability proving implications business logic rules conditions pre post conditions 
proving expressions cond cond np complete problem 
deal issue medjahed chapter 
automatic composition semantic web services behavioral opik opjl degree check plugin opik opjl false check plugin opik opjl check exact opik opjl false check exact opik opjl get cr get cr get cr get cr get cr get cr get cr get cr get cr get cr degree degree degree get cl prover cond cond boolean true cond cond composable replace break term cond term cond return true return false behavioral composability define approximate solution 
proposed solution assumption condition conjunction terms 
term form medjahed chapter 
automatic composition semantic web services parameter constant value relational operator belongs leq 
theorem prover unifies parameters cond cond 
unification step works follows parameters cond composable parameters cond replace parameter name say 
second step prover match term cond term cond 
say matches 
proving matching terms done applying inference rules relational operators table 
term cond matches term cond cond cond false 
terms cond matched term cond cond cond false 
table inference rules operator table inference rules operator medjahed chapter 
automatic composition semantic web services table inference rules operator table inference rules operator table inference rules operator medjahed chapter 
automatic composition semantic web services table inference rules operator community centric matchmaking algorithm community centric algorithm vertical composition uses communities basis selecting service operations 
browses relevant communities deter mine imported operations replace sub request sr 
accelerate search process algorithm focuses communities ci category may composed sr category 
remaining communi ties imported operations pruned service space 
algo rithm checks vertical composability sr imported operation opik ci 
considers imported operations generic ones im ported operation actual operations offered community members 
ad imported operations may change description generic operations removing input output parameters 
algorithms syntactic vertical static semantics vertical message vertical behavioral procedures simi medjahed chapter 
automatic composition semantic web services vert comp operation sr registry plans profile nb plans nb plans degree plans community ci registry category composable vertical ci sr nb plans profile max plans imp 
operation opik ci nb plans profile max plans syntactic vertical sr opik degree degree profile composability plans plans opik nb plans nb plans continue static semantics vertical sr opik degree degree profile composability plans plans opik nb plans nb plans continue message vertical sr opik degree degree profile composability plans plans opik nb plans nb plans continue behavioral sr opik degree degree profile composability plans plans opik nb plans nb plans continue community centric algorithm vertical composition lar operation centric algorithm 
similarly operation centric algorithm composability degree computed composability rule 
degree greater equal composability opik potential candidate replace sr medjahed chapter 
automatic composition semantic web services message centric matchmaking algorithm main characteristic community centric algorithm compares sub requests operations community generate composition plans 
message parameters different operations may similar terms composability rules compared operation 
message centric algorithm approaches matchmaking problem perspective 
checks composability messages operations derives operations vertically composed sub request 
design message centric matchmaking algorithm raises important issues community messages modeled ii outsourced operations deduced messages 
deal issues concept finite automaton 
finite automaton parts including set states rules transitions going state depending input symbol 
input alphabet indicates allowed input symbols 
start state set accept final states 
formally finite automaton tuple finite set states finite set called alphabet transition function start state set final states 
transition function defines rules moving state 
automaton arrow state state labeled input symbol means automaton state reads moves state 
generally indicate transition function saying 
empty transition noted means move reading input 
automaton receives input string processes string produces output 
output accept string parsed automaton reaches final state 
output reject 
medjahed chapter 
automatic composition semantic web services defining automaton community messages checking message composability sub requests imported operations concerns input messages operations define input ton iai community ci 
iai models ci input messages related operations 
iai iq initial state 
alphabet iai set xml schema data types 
data types alphabet important advantage limiting alphabet size number data types finite 
iai updated time generic operation imported 
automaton states transitions definition illustrate algorithm building automata 
assume input message pm defined community member projection extension adjustment 
algorithm adding iai includes steps defining states transitions ii checking determinism 
step message parameters sorted xml schema data type 
pm order obtained parameters 
new states sm created 
state si corresponds param eter pi 
transition labeled data type created iq 
transition labeled pi data type created si si 
sr input message may map subset parameters states si final 
final state contains id operation 
additionally create empty transition iq si 
empty transition created state si state sj medjahed chapter 
automatic composition semantic web services 
example sr input message contains accepted automaton 
second step automaton definition algorithm determinism 
au deterministic contain empty transitions ii state zero exiting arrow alphabet symbol 
conditions true automaton nondeterministic 
determinism important feature automata 
step computation deterministic automaton follows unique way preceding way 
automaton state reads input symbol determines ambiguity state 
iai definition nondeterministic existence empty transitions 
facilitate process comparing sr messages transform iai deterministic automaton 
nondeterministic automaton converted equivalent deterministic automaton 
adopt algorithm eliminate empty transition finite automaton 
summarize algorithm building iai 
automaton incrementally updated time imported operation input message defined 
iai iai pm sm sm type si si pi type si si sj eliminate empty transitions updating input automata medjahed chapter 
automatic composition semantic web services vert comp message sr registry plans profile nb plans degree plans community ci registry category composable vertical ci sr nb plans profile max plans sr mode accepted automaton iai sr input final degree accepted automaton iai sr output final degree imported operation opik opik operations final nb plans profile max plans sr mode message composable sr output opik output continue sr mode message composable sr input opik output continue get cr degree degree get cr degree profile composability plans plans opik nb plans nb plans continue static semantics vertical sr opik degree degree profile composability plans plans opik nb plans nb plans continue behavioral sr opik degree degree profile composability plans plans opik nb plans nb plans continue message centric algorithm vertical composition algorithm vertical composition message centric algorithm vertical composition uses iai relevant communities ci select service operations 
avoid comparison medjahed chapter 
automatic composition semantic web services operations algorithm prunes web service space levels 
focuses communities ci category may composed sr category 
second considers operations ci 
third checks composability operations message composable sr algorithm considers cases depending mode sr sr mode check sr input accepted iai function accepted automaton iai sr input final degree 
consider operations belong final set accepted iai 
assume sr put mapped input operation opik opik belongs final 
case opik output compared terms message composability sr output 
sr mode iai test sr output accepted function check automaton oai sr output final degree 
assume sr output mapped input operation opik 
case opik output compared sr input 
algorithm checks binding composability mode pn composability checked previ ous steps 
algorithms static semantics vertical message composable behavioral procedures similar operation centric community centric algorithms 
vertical composition vertical composition algorithm determines set imported op erations combined certain way vertically composed sub request 
example english sub request composable combi nation operations english french french chinese chinese 
support vertical composition introduce notion flow graph 
flow graph links operations horizontally composable 
nodes graph types operation compound nodes 
arrows graph relate nodes different types 
operation nodes may linked compound nodes vice versa 
operation node linked medjahed chapter 
automatic composition semantic web services operation node 
similarly compound node linked compound node 
flow graph compound node flow graph predecessor opi successor opj 
situation models fact opi horizontally composable opj 
means opj invoked execution opi 
arrow opi labeled opi outputs opj inputs 
opj labeled output parameters 
compound node labeled opi inputs 
opi output occurs times arrow opi executed times invoking opj op 
compound node labeled input parameters defined predecessors operations 
flow graph built incremental fashion time operation op imported 
assumes operations service registry modeled flow graph 
update graph compare op operation node opi graph 
op horizontally composable opi new operation node created op 
new compound node andk inserted graph 
horizontal composability checked evaluating conditions defined chapter horizontal composition 
procedure composable horizontal returns set parameters op horizontally composable opi parameters 
nodes op andk opi linked edges op andk opi 
edge op andk labeled operation node op medjahed chapter 
automatic composition semantic web services labeled outputs 
compound node labeled inputs op 
fg op operation node opi fg composable horizontal op opi add arrow op andk add arrow andk opi add label arrow op andk add label node op op output add label node andk op input updating flow graph illustrate definition flow graph consider example depicted 
example related get driving directions sub request 
operation people lookup returns address phone number person outputs name state residence inputs 
oper ation driving directions address returns driving direction output source destination address outputs 
assume people lookup horizon tally composable driving directions address 
driving directions address requires address parameters executed executing people lookup twice 
execution people lookup returns source address second execution gives destination address 
combination people lookup driving directions address de defines operation returns driving direc tions name state residence persons 
flow graph contains operation nodes compound node 
arrow people lookup contains output parameter address twice 
compound node labeled parameters name state name state 
operation node driving directions address labeled parameter driving direction 
depict flow graph language translation example 
assume english french horizontally composable french chinese medjahed chapter 
automatic composition semantic web services flow graph driving directions example flow graph language translation example medjahed chapter 
automatic composition semantic web services french chinese horizontally composable chinese 
flow graph corresponding operations contains compound nodes operation nodes 
labeled parameters english word french word respectively 
english french french chinese chinese labeled parameters french word chinese word word 
combination operations depicted defines operations 
operation provides translation english chinese second operation enables translation english third operation allows translation french 
flow graph determine composition plans vertical composition 
sr composition sub request 
issue determine operations outsourced sr identify cases mode sr sr sub request matchmaking algorithm looks compound node say sr input composable input message 
looks operation node say output message composable sr output message 
second case algorithm concerns sub requests 
matchmaking algorithm looks case compound node say input message message composable sr output message 
looks operation node say output message message composable sr input message 
cases modes predecessor initial operation sr composition plan 
additionally final operation plan 
determine intermediary operations calculate path flow graph 
breadth search algorithm purpose 
illustrate composability algorithm consider language trans lation example 
assume sr sub request aims providing translation english 
sr input output equal parameters english word word respectively 
sr input mes sage compatible input chinese output message com medjahed chapter 
automatic composition semantic web services vert comp srp registry plans profile nb plans true 
sr mode compound search compound composable fg sr input operation search operation composable fg sr output sr mode compound search compound composable fg sr output operation search operation composable fg sr input break path breadth search fg compound operation plans plans path nb plans nb plans vertical composition sr output 
algorithm determines path chinese breadth search algorithm 
gives path french chinese chinese 
replacing predecessor eliminating composition plan generated sr english french french chinese chinese 
generating composite service descriptions matchmaking phase composition plans generated composition sub request 
aim generation phase replace sub request composition plans 
composers select composition plan sub requests 
selected plans generate composite service description 
generation process conducted steps 
replace sub request selected composition plan 
insert pre operations post operations operation plan 
compute quality composition qoc parameters assess quality generated plan 
composers possibility select plan medjahed chapter 
automatic composition semantic web services quality generated composite service description 
replacing sub requests composition plans assume composition plan selected composable sub request 
plans activity diagram noted ads specified composer generate activity diagram noted adg composite service 
sub request sr substituted operation corresponding plan 
plan obtained composition execution order operations adg similar execution order plan 
illustrates technique replacing request ads composition plan 
sketch algorithm executed replacing sr plan sri predecessor sr ads respec tively 
create activity ai adg operation opi arrow opi opj create transition ai aj adg 
activ ity sr discarded 
transition created sri activity corresponding operation likewise transition created activity corresponding operation 
inserting pre post operations sub requests replaced composition plans activity dia gram final step generation phase include pre post operations adg 
determine pre operations post operations operation contained adg 
idea augment operation inserted adg pre post operation relationships 
summarize algorithm purpose 
opi operation inserted adg 
step search opi opd diagram 
known breadth algorithm task 
opi determine operations related opi pre post operation relationships 
purpose determine set opd medjahed chapter 
automatic composition semantic web services replacing sub request composition plan replace sr plan sri predecessor sr ads sr ads op operation plan operation plan operation opi plan create activity ai opi opj plan create transition ai aj create transition sri create transition replacing sub request composition plan diagram paths contain opi vertex 
floyd warshall dynamic programming algorithm computing paths 
opd sub diagram contain paths needs inserted adg 
purpose arrow exists sub diagram inserted adg 
medjahed chapter 
automatic composition semantic web services insert adg opd opi adg opi opd sub diagram compute paths opi opd opi sub diagram create activity ai opi opj sub diagram create transition ai aj adg inserting pre post operations quality composition activity diagram composite service generated step consists checking quality 
define quality composition qoc model composite services 
model includes parameters composition soundness composition ranking composition completeness 
checking composition soundness quality criterion check composition soundness chapter 
composition template ct computed generated composite service 
adjacency matrix graph represen tation model templates 
composition template ct represented op ct ct matrix op ct set operations tem plate 
entry tij corresponds operations opi opj 
equal iff arrow opi opj 
equal 
stored templates represented way composition templates 
propose algorithm checking soundness comparing ct st matrices 
step algorithm unification ct st vertices 
consists adding ct vertices belong st ct adding st vertices belong ct st way ct st set vertices 
resulting templates represented matrices explained previously 
step consists computing classical medjahed chapter 
automatic composition semantic web services sound ct stored result result sound st stored unification ct st matrix ct matrix st result exactly sound result strongly sound result loosely sound result sound break algorithm composition soundness matrices matrix ct matrix st 
cases possible 
elements matrix equal ct st similar 
composite service exactly sound respect st elements equal st subgraph ct composite service strongly sound respect st elements equal ct subgraph st composite service loosely sound respect st elements equal ct comparable st ct compared stored template 
stored template left ct sound 
composition ranking assume composite service sound respect stored template st define qoc parameter called ranking gives approximation st importance 
composite service determine composition template ct assume ct sound respect stored tem plate sti 
define function stands sti gives number times composite services sound respect sti created 
assumes ranking coefficient maintained stored template 
ranking ct respect sti proportion st composite service sound ranking equal zero 
give formula compute ranking sound composite service medjahed chapter 
automatic composition semantic web services number stored templates ranking ct sti sti sk st composition completeness parameter noted cc assess com services sound 
gives proportion composition sub requests composable participant service operations 
cc allows generation composite service descriptions composition sub requests fully composable participant services 
value cc set ser vice composers profile depends level expertise 
value cc relatively low algorithm return composite services composition sub requests composable participant service operations 
case composers may need change specification data types desired sub request deal participant services features 
formula defines cc parameter composite service cs cc cs composable sub requests composable set sub requests composable participant services 
chapter implementation performance study chapter devoted implementation performance study proposed approach composition 
provide implementation techniques webdg prototype 
social welfare services family social services administration 
provide extensive performance study composition approach 
purpose define analytical model proposed composition algorithms 
compare performance algorithm model 
way study performance experiments 
difficult experiments real web service environments prototypes webdg 
availability large various numbers services guaranteed 
additionally desirable measure performance specific various configurations web services services certain number operations simple achieve 
deal issue define testbed web services called web service benchmark ing framework 
conduct extensive experimental performance study testbed 
chapter organized follows 
section describe implemen medjahed chapter 
implementation performance study tation webdg prototype 
section salient features proposed web service benchmarking framework 
section describe performance study 
define analytical model describe simulation experiments results 
webdg prototype webdg built holistic perception government web services 
aims providing web service middleware enables citizens case officers access government services rich uniform flexible interface 
design development webdg directed key guidelines web service standards wsdl soap uddi extensibility ability add new functionalities 
focus webdg implementing composition techniques proposed dissertation 
webdg services proof concept implemented applications webdg 
include wic top 
webdg applications developed java jdk access databases oracle retrieve store government citizens formation 
wic women infant children provides federal states supplemental food health care referrals nutrition education low income pregnant non women 
provides assistance infants children risk 
med jointly funded federal state health insurance program specific groups low income people 
covers individuals including children senior citizens blind disabled people eligible federally payments 
top teen outreach pregnancy provides pregnant teens educational support housing information adoption services 
medjahed chapter 
implementation performance study enable access aforementioned applications webdg wrapped web services 
state art technologies implementing webdg 
table gives summary technologies 
webdg services deployed apache soap 
apache soap provides server side infrastructure deploying managing service client side api services 
service deployment descriptor 
descriptor includes unique identifier java class invoked session scope class operations class available clients 
service deployed service management client providing descriptor url apache soap servlet 
product version role oracle wic top databases 
template repository 
java jdk wic top legacy applications 
jdbc database connection 
apache soap soap server 
wasp uddi standard uddi server 
ee uddi registry 
ibm convert applications wsdl descriptions 
tomcat web server java servlet engine 
table enabling technologies wsdl language describe webdg services 
wsdl descriptions extended semantic features defined community ontology purpose business role 
ibm web service tool kit automatically generate wsdl files web services java class files 
wsdl files accessible tmodels stored uddi registry 
adopt wasp uddi standard uddi toolkit 
database uddi registry 
wasp uddi provides client side api application programming inter face publishing inquiring web services 
web service operations 
example wic service operation check eligibility takes citizen eligibility information input salary family size checks information categorical pregnant women financial medjahed chapter 
implementation performance study household income children risk criteria 
citizen eligibility information satisfies criteria operation updates eligibility status citizen eligible wait approval 
op eration updates status eligible 
cases message returned customer 
architecture webdg system implemented network solaris workstations 
architecture webdg 
architecture organized layers 
layer contains set oracle databases store government citizens data 
second layer includes proprietary applications wic application developed java 
application access databases layer 
third layer contains web services 
web service simple composite 
simple web services wrap proprietary applications defined lower layer 
composite services automatically generated webdg manager 
upper layer includes graphical user interface gui webdg manager 
citi case officers access webdg gui implemented html servlet 
types requests submitted gui discovery invocation composition 
webdg manager core webdg system 
composed modules request handler matchmaker service locator composer composer generator qoc manager 
request handler router webdg manager 
task performs depends type request receives 
request type discovery forwards service locator implements uddi inquiry client wasp uddi api 
request type invocation request handler invokes corresponding operation soap binding stub implemented apache soap api 
request type composition request handler forwards composi tion specification xml document matchmaker 
matchmaker uses medjahed chapter 
implementation performance study java api xml processing parse csl specifications check correctness decompose sub requests 
sub request matchmaker service locator get operations service registry 
forwards operations composer implements algorithms vertical composition 
currently consider operation centric algorithm 
webdg architecture execution composer returns set operations 
operation composition plan 
operations registry checked maximum number plans reached matchmaker medjahed chapter 
implementation performance study composer implements flow graph algorithm 
execution composer returns set horizontally composed operations composition plans 
matchmaker returns generated plans user request handler 
user selects composition plan sub request returns matchmaker 
matchmaker sends selected plans generator augments pre post operations 
resulting composite service forwarded qoc manager checks qoc parameters 
composite service values qoc parameters returned user 
webdg scenario scenario illustrates main features webdg 
consider case pregnant teen mary visiting case officer john collect social benefits entitled 
mary apply government funded health insurance program 
needs consult maintain appro priate diet pregnancy 
mary able take care newborn interested finding foster family 
fulfillment teen needs requires accessing different services scattered outside local agency 
purpose case manager may look simple web services fit specific needs teen specify teen needs single composite web services 
describe main steps discovering composing web services webdg 
step web service discovery locate specific web service john provide service name known properties 
achieved selecting program name program properties nodes re spectively 
webdg currently supports properties category agency 
assume john interested service provides help find ing foster families 
select adoption pregnancy categories division family children agency 
webdg return teen medjahed chapter 
implementation performance study outreach pregnancy top service 
top offers ed support pregnant teens 
discovering government services step composing web services assume john wants specify mary needs single composite service called pregnancy benefits pb 
purpose selects advanced programs node 
examples pb operations include find available find pcp providers looks primary care providers find pregnancy mentors 
checking composability rules webdg re turn composition plans conform bp specification 
plan id number 
john click plan id display list outsourced services 
scenario wic federally funded food program women infants children healthcare program low income citizens families top services outsourced pb 
medjahed chapter 
implementation performance study mappings composite service operations web service benchmarking framework provides simple efficient means generating large number service descriptions wsdl standard 
uses input set parameters provided user number services generated arrival rate 
returns list xml files containing generated wsdl descriptions 
descriptions stored service registry specified user 
main features include customized generation allows user controlled generation web ser vice descriptions 
users ability specify modes service oper ations 
give input taxonomy categorizing web services 
allows generation web services various application domains commerce government 
users specify data type system xml schema message parameters 
medjahed chapter 
implementation performance study statistical models generates service descriptions arrival rate follows statistical model specified user 
statistical models remove services registry 
wasp uddi standard uddi toolkit 
database uddi registry 
additionally enables users specify range statistical models quantitative attributes number operations service messages parameters message 
extensibility extensible different levels 
example new sta tistical models geometric poisson plugged 
additionally new service attributes current wsdl version added generation process semantic attributes defined generic operations 
statistical distribution models currently includes statistical distribution models randomly gen erating quantitative attributes gaussian poisson uniform binomial 
algorithms implement aforementioned statistical models adopted 
models function random java random class generate random real number gaussian distribution model known normal distribution generated data follows bell shaped distribution 
distribution completely determined mean standard deviation 
java built random number generator method random class generate numbers model 
binomial distribution model measures number times par ticular event occur sequence observations 
binomial distribu medjahed chapter 
implementation performance study tion specified number observations probability event occurrence 
uml class diagram statistical models poisson distribution model measure number events specific time period 
describe situations probability event small number opportunities event large 
poisson extension binomial distribution number samples infinite 
uniform distribution uniform distribution probability occurrence integer values interval values 
depict uml class diagram distribution models 
client may generator publisher interacts distribu medjahed chapter 
implementation performance study 
interface concrete distribution models uniform gaussian poisson 
distribution creates concrete distribution model depending model name 
note distribution models changing client class 
generation flow process generating web services includes phases input phase generation phase 
input phase users provide set parameters related services operations port types messages 
gener ation phase uses parameters randomly produce wsdl service descriptions 
descriptions automatically stored service repository 
location repository users part input parameters 
service pa rameters include number wsdl descriptions generated arrival rate web services 
arrival rate represents duration seconds generation consecutive services 
parameter particularly important simulate dynamics web service environments 
enable random arrival times users specify minimum maximum durations 
service gen eration arrival time service computed randomly selecting value minimum maximum durations 
selection statistical distribution model poisson specified users 
operation parameters include number operations service 
gen erate services various numbers operations users specify range minimum maximum possible values parameter 
random number generated range service user specified distribution model 
operation modes users choice specifying fixed value operations requesting random generation modes 
port type parameter number port types 
parameter randomly generated range statistical model similarly number operation 
port type parameter specified users binding protocols supported medjahed chapter 
implementation performance study input service parameters service registry number services arrival rate range distribution model service categories distribution model 
input operation parameters number operations number port types number messages range distribution distribution model range distribution model operation mode 
binding protocols 
model number parts range distribution model data types services generate service generate determine arrival time operation generate input port type parameters determine service category number operations number port types number messages determine operation mode input output message determine number param 
data type param operations generate input message parameters 
store service description repository regroup operations port types uml activity diagram web service generation input phase generation phase medjahed chapter 
implementation performance study generated services 
message parameters contain number messages service number parameters messages parameters data types 
number messages parameters randomly generated similarly number operations port types 
parameters data types users provide list types xml schema 
data type randomly selected assigned parameter 
generation phase starts input parameters 
flex users possibility leave input parameters unspecified 
default value assigned parameter 
example uniform de fault statistical distribution model 
second phase category number operations number port types number messages randomly gen erated service 
generator determines mode operation randomly value set user 
randomly selects number parameters data types input output messages 
operations generated randomly grouped port types 
wsdl description stored repository 
arrival time computed generating service description 
architecture fully implemented java includes components random number generator generator analyzer publisher gui graphical user interface 
random number generator consists modules corre sponding different statistical distribution models gaussian poisson binomial uniform 
generator core 
composed interface service de finer history log 
interface takes user input gui obtains necessary random numbers random number generator number operations service 
user specified values number services directly forwarded service definer 
module charge generating medjahed chapter 
implementation performance study architecture wsdl descriptions ensuring syntactic correctness 
wsdl descriptions manipulated jdom java document object model xml documents 
jdom provides means represent xml documents easy lation 
information time generate wsdl description stored history log 
information useful monitoring generation process 
wsdl description generated forwarded publisher service arrival rate stores tmodel description uddi registry 
publisher uses leaving rate remove service description tmodel registry 
generated description viewed wsdl analyzer 
aim analyzer twofold 
extracts service attributes category operations input output messages 
second provides statistical information service description number operations average number parts message 
analyzer uses dom document object model medjahed chapter 
implementation performance study xpath technologies 
wsdl document parsed dom handler 
tree structure built parsed xpath engine 
result xpath ready structure constructed 
analyzer uses xpath parse service description 
generation interface gui developed java swing 
includes generator analyzer publisher tabs 
depicts service generator tab 
includes panels services operations bindings parts 
panels provide means specification users input 
service analyzer tab displays wsdl documents user friendly way jtree tree structure 
service descriptions may displayed text format 
analyzer returns statistics number operations mode average number parameters message 
statistical analysis currently done generation 
statistical results stored statistical files 
clicking analyzer tab allows display statistics tabular format 
medjahed chapter 
implementation performance study analyzer interface publisher tab enables users select service registry store generated descriptions 
users may specify list service categories number business services registry 
dynamic aspect web services simulated specifying arrival leaving times web service registry 
performance study aim performance study twofold 
show scalability approach computing composition time large number web services 
second compare performance different composition algorithms 
focus section composition composition involve access service registry searching service space 
conduct performance study methodology 
define analytical model proposed algorithms 
compare algorithms medjahed chapter 
implementation performance study publisher interface model 
compare algorithms simulation 
testbed purpose 
compare results obtained analytical experimental studies 
comparing prove disprove correctness testbed proposed analytical model 
analytical model section analytical model composition algorithm 
total composition time algorithm sum global time checking syntactic composability st global time checking static semantic ss global time checking dynamic semantic composability 
table defines parameters symbols section 
composition time expressed follows tst tss tds medjahed chapter 
implementation performance study tmin min st min ss min ds tmax max st max ss max ds variables nop number operations registry nc number communities number operations community pmax maximum number plans csr number sub request composition pm number parameters message bop number business rules operations number terms condition af number final states automaton ir number inference rules performance measurement parameters functions ut time obtain description uddi registry ot time parse service description total composition time tmin minimum total composition time tmax maximum total composition time tst total syntactic composability time tss total static semantic composability time tds total dynamic semantic composability time min st minimum total syntactic composability time min ss minimum total static semantic composability time min ds minimum total dynamic semantic composability time max st maximum total syntactic composability time max ss maximum total static semantic composability time max ds maximum total dynamic semantic composability time time check message composability operation tst time check syntactic composability operation tss time check static semantic composability operation level operation table symbols parameters composition algorithm compute average execution time 
equal tmin tmax 
simplify analysis assume times description uddi registry parse description fixed values 
reasonable assume times check syntactic static semantic operation level composability operation fixed values 
contrast message behavioral composability times depend number message parameters business logic rules respectively 
ut ot tst tss constants 
medjahed chapter 
implementation performance study rest section show derive composition time algorithm 
operation centric algorithm start computing minimum composition time tmin 
time corresponds case pmax iterations algorithm executed 
means get composition plan iteration 
total syntactic composability time min st equal pmax tst total static semantic composability time min ss equal pmax tss 
compute time checking message composability 
refers time comparing pair message twice 
minimum parameter message compared parameter dual message 
equal pm min ss equal pmax tss pm 
time compute total time dynamic semantic composability min ds algorithm performs vertical composition dynamic semantic composability check plugin rule 
definition composability rules need execute theorem prover times plugin exact plugin exact composability 
minimum business rule proved inference rule 
min ds equal pmax bop 
analysis tmin pmax ut ot tst tss pm bop maximum composition time refers case operations registry checked 
means number iterations executed algorithm equal nop 
consequently max st max ss equal nop tst nop tss respectively 
compute formula 
parameter message compared pm parameters medjahed chapter 
implementation performance study message 
parameter needs compared pm parameters 
pm equal pm pm 
pm pm need compute total time dynamic semantic composability max ds mentioned previously execute theorem prover times check different composability rules 
compare rule sub request rules current operations 
total comparisons op 
term need go inference rules total ir 
max ds equal nop op ir 
maximum composition time tmax nop ut ot tst tss pm pm op ir previous formulas give composition times sub request 
follows specify total execution time operation centric algorithm executed csr sub requests 
case consider times access registry parse operation descriptions tst tst csr nop pmax tss nop csr tss pm pm pmax csr tss pm tds nop csr op ir pmax csr bop nop csr ut ot tst tss pm pm op ir pmax csr ut ot tst tss pm bop medjahed chapter 
implementation performance study compare times syntactic tst static semantic tss dynamic semantic composition tds 
enable better visualization represent tst tss tds logarithm function 
graph shows composition time spent checking static dynamic compos ability 
composability dynamic semantics compares business logic rule sub request business logic rules target operations 
similarly static semantics compares message parameters sub request message parameters target operations 
contrast syntactic composability performs comparisons pair sub request target binding mode number parameters 
community centric algorithm minimum composition time tmin community centric algorithm corre sponds case outsourced operations obtained pm iterations 
similar operation centric algorithm tmin pmax ut ot tst tss pm bop maximum composition time tmax refers case operations checked composability 
contrast operation centric algorithm operations specify community checked 
means number iterations executed algorithm equals 
derive relationship nop 
assume operations registry uniformly distributed communities 
nop nc tmax derived formula operation centric algorithm replacing nop nop nc medjahed chapter 
implementation performance study log time composition time operation centric algorithm number operations syntax static sem dynamic sem composition time operation centric algorithm tmax nop ut ot tst tss pm pm nc op ir composition times follows tst tst csr nop tss nop nc nc pmax csr tss pm pm pmax csr tss pm medjahed chapter 
implementation performance study tds nop nc nop nc csr op ir pmax csr bop csr ut ot tst tss pm pm op ir pmax csr ut ot tst tss pm bop log time composition time community centric algorithm number operations syntax static sem dynamic sem composition time community centric algorithm compare times syntactic tst static semantic tss dynamic semantic composition tds 
operation centric algorithm algorithm spends time checking static dynamic semantic com medjahed chapter 
implementation performance study rules 
shows number communities impact composition time 
consider cases number communities 
states composition time nc higher composition time nc 
bigger number communities smaller composition time 
number operations algorithm checks composability smaller case nc 
log time community algorithm different numbers communities number operation communities communities community centric algorithm different numbers communities medjahed chapter 
implementation performance study message centric algorithm minimum composition time message centric algorithm similar minimum time operation centric community centric algorithms 
follows compute maximum composition time 
message centric algo rithm prunes space operations checked levels community automaton levels 
consider operations belong community 
additionally message composability comparison done operations 
composability checking done operations long final state input automaton 
assume mode operation follows uniform distribution 
assume operations uniformly distributed final states automaton 
number operations checked composability equals af nop number operations nc nop equals nc af compute number comparisons checking message compos ability 
comparison done input automaton 
comparison time equal pm size message verified automaton acceptance 
second comparison done operation centric algorithm 
equal pm pm maximum time checking static semantic composability max ss nop nc af tss pm pm pm formulas specify total execution time message centric algorithm tst tst csr nop nc af tss nop pmax csr tss pm pm nc af medjahed chapter 
implementation performance study pmax csr tss pm nop tds nc af nop nc af csr op ir pmax csr bop csr ut ot tst tss pm pm op ir pmax csr ut ot tst tss pm bop log time composition time message centric algorithm number operations syntax static sem dynamic sem composition time message centric algorithm compare times syntactic tst static semantic tss medjahed chapter 
implementation performance study dynamic semantic composition tds 
operation centric com centric algorithm algorithm spends time checking static dynamic semantic composability rules 
log time composition time operation message centric algorithms number operations operation alg community alg message alg composition time operation community message centric algorithms main motivation designing different algorithms vertical composi tion decrease composition time 
illustrates compo sition time operation centric algorithm longer community centric algorithm time 
time longer time composing services ing message centric algorithm 
algorithm compares sub requests medjahed chapter 
implementation performance study operations registry 
second algorithm focuses subset op erations belong community 
third algorithm reduces size service space comparing sub requests operations belong final states input automaton 
design community centric message centric algorithm mainly driven design approach reduce composition time dedicated message composability 
significant time spent static semantic composability mentioned previously 
validates approach 
shows message centric algorithm substantially reduces static semantic composition time 
states community centric algorithm outperforms operation centric algorithm terms static semantic composition time 
experiments purpose experiment compare execution times different composition algorithms 
simulation results compared analytical results 
run experiments sun enterprise ultra server mhz ultrasparc iii processor gb ram solaris operating system 
algorithm implemented webdg prototype testbed run experiments 
allows generation large number services difficult achieve current webdg version 
nop nc max ccr pm bop af confidence level confidence accuracy table simulation settings medjahed chapter 
implementation performance study log time static semantic composition operation community message algorithms number operations operation alg community alg message alg static semantic composition operation community message centric algorithms table shows common settings simulation experiments 
con level confidence accuracy shown table control accuracy simulation results 
sample results yn con accuracy defined confidence interval half width sample mean results 
yn 
con level defined probability absolute value difference true mean sample results equal defined sample variance medjahed chapter 
implementation performance study yi standard deviation standard distribution 
users specify values confidence level accuracy starting simulation 
simulation complete expected confidence level accuracy achieved 
composition requests simulated random request generator 
generation requests follows exponential distribution 
simulation round requests generated 
composition request contains sub requests 
round result checked confidence level confidence accuracy 
simulation continues confidence conditions satisfied 
run sets experiments different algorithms 
set table compare syntactic static semantic dynamic semantic composition times operation centric algorithm 
vary number op erations iteration range 
depicts experimental results obtained operation centric algorithm 
illustrated chart behavior algorithm similar obtained analytical study 
composability nop experiment syntactic experiment static semantic experiment dynamic semantic table experiments syntactic semantic composability operation centric algorithm second set experiments table compare syntactic static semantic dynamic semantic composition times community centric gorithm 
depicts experimental results obtained community centric algorithm 
illustrated chart behavior algorithm similar obtained analytical study 
third set experiments table compare syntactic static se medjahed chapter 
implementation performance study log time experiments operation centric algorithm number operations syntactic static sem dynamic sem experiments syntactic semantic composability operation centric algorithm composability nop experiment syntactic experiment static semantic experiment dynamic semantic table experiments syntactic semantic composability community centric algorithm mantic dynamic semantic composition times message centric algorithm 
depicts experimental results obtained message centric algo rithm 
illustrated chart behavior algorithm similar obtained analytical study 
fourth set experiments table assess impact com medjahed chapter 
implementation performance study log time experiments composition time community centric algorithm number operations syntax static sem dynamic sem experiments syntactic semantic composability commu nity centric algorithm composability nop experiment syntactic experiment static semantic experiment dynamic semantic table experiments syntactic semantic composability message centric algorithm number nc performance community centric algorithm 
consider cases number equal 
depicts medjahed chapter 
implementation performance study log time experiments message centric algorithm number operations syntax static sem dynamic sem experiments syntactic semantic composability message centric algorithm experimental results obtained community centric algorithm different numbers communities 
illustrated chart behavior algorithm similar obtained analytical study 
nop nc experiment experiment table experiments community centric algorithm various numbers communities fifth set experiments table compare total composition time algorithms operation centric community centric message centric algorithms 
depicts experimental results obtained operation medjahed chapter 
implementation performance study log time experiments composition time communities number operations community community experiments community centric algorithm various numbers communities community message centric algorithms terms total composition time 
illustrated chart behavior algorithms similar obtained analytical study 
algorithm nop experiment operation centric experiment community centric experiment message centric table experiments total composition times different algorithms set experiments table focus static semantic com position time 
compare time algorithms operation centric community centric message centric algorithms 
depicts exper medjahed chapter 
implementation performance study log time experiments composition time operation community message centric algorithms number operations operation alg community alg message alg experiments total composition times different algorithms results obtained operation community message centric algo rithms terms static composition time 
illustrated chart behavior algorithms similar obtained analytical study 
algorithm nop experiment operation centric experiment community centric experiment message centric table experiments static semantic composition times different gorithms medjahed chapter 
implementation performance study log time experiments static semantic composition operation community message algorithms number operations operation alg community alg message alg experiments static semantic composition times different algorithms summary results obtained analytical experimental study comparable 
summarized follows 
composition time algorithms spent checking static dynamic composability 
composability dynamic semantics compares business logic rule sub request business logic rules target operations 
similarly static semantics compares message parameters sub request message parameters medjahed chapter 
implementation performance study target operations 
contrast syntactic composability performs comparisons pair sub request target binding mode number parameters 
second number communities impact composition time 
bigger number communities smaller composition time 
third composition time operation centric algorithm longer community centric algorithm time 
time longer time composing services message centric algorithm 
algorithm compares sub requests operations registry 
second algorithm focuses subset operations belong community 
third algorithm reduces size service space comparing sub requests operations belong final states input automaton 
fourth message centric algorithm substantially reduces static semantic composition time 
additionally community centric algorithm outperforms operation centric algorithm terms static semantic composition time 
chapter related large body research field web service composition result appeared related literature 
chapter overview major techniques prototypes standards platforms web service composition closely related research 
section describe major efforts enabling automatic composition web services 
section overview web service composition research prototypes 
section discuss ongoing standardization efforts web service composition section describe cur rent commercial platforms web service composition 
automatic composition web services section discuss related dealing different issues automatic composition web services 
include ontological support semantic web services checking composability web services generating composite service descriptions 
ontological support semantic web services significant research ing devoted standardization service ontologies daml darpa agent markup language web services :10.1.1.21.61
daml provides ability organize medjahed chapter 
related web services ontologies 
daml divides service descriptions service profile model grounding 
service profile provides high level description web service 
expresses required input service output service provide requester 
service model defines operations execution flow web service 
service grounding provides mapping daml wsdl standard describes service may invoked 
service profile daml provides means web service dis 
divided description service functionalities functional attributes 
description provides human understandable information web service 
example description includes name service textual description 
functionality daml describes properties input output precondition effect features distinguish ontological approach daml 
daml proposes ontology web services community web services 
approach provides means semantic description web services ontological organization communities 
second static semantics daml focuses describing operations features 
define broader view static semantics describing semantics operation message levels 
third daml gives little support dynamic semantics web services 
allow specification pre operations post operation particularly important enabling automatic generation business processes 
additionally notion behavior business logic explicitly defined 
fourth daml providers define service operations scratch 
approach providers inherit functionalities community simply registering services 
may personalize community best fit capabilities 
composability web services techniques proposed literature deal service matching composability 
proposes solution daml semantic matching service advertisements medjahed chapter 
related capabilities 
matching technique limited comparing inputs puts advertisement inputs outputs request 
larks defines rules service matchmaking context matching profile comparison similarity matching signature matching constraint matching 
rules compare service text descriptions signatures inputs outputs logical con straints inputs outputs 
describes design service matchmaker uses daml ontology 
uses techniques knowledge representa tion match service capabilities 
particular defines description logic dl reasoner advertisements requests represented dl notations 
composability rule compares service categories 
features operation modes message data types static semantics dynamic semantics soundness considered 
presents model checking composability 
approach model limited checking syntactic features input output events component services 
addition checks composability posteriori basis replace component service 
defines composability rules compare service categories messages 
consider features related static semantics dynamic semantics quality operation composition soundness 
process templates processes defined respectively 
notions different notion stored templates 
process templates processes priori canvas defining composite services 
contrast stored tem plates posteriori check posteriori soundness composite services 
generation composite services automatic service composition focus projects 
daml defines semantic markup web services ontologies daml introduces notions pre requisites called preconditions consequences called effects web services cater automatic composition :10.1.1.21.61
clear composite services generated daml specifications 
daml define notion service composability 
additionally consider semantic properties medjahed chapter 
related purpose parameter unit business role 
architecture service composi tion pervasive computing environments 
service descriptions provided daml 
include platform specific information processor type speed memory availability 
composition manager uses se mantic service discovery mechanism select component services 
mechanism uses jini semantic discovery framework 
matching mechanism focuses comparing service attributes 
contrast matchmaking algorithm proposed dissertation set composability rules compare structure messages business function semantics data types parameters qualitative properties soundness composite services 
wsmf web service modeling framework combines concepts web ser vices ontologies cater semantic web enabled services 
wsmf early stage 
techniques semantic description composition web services ongoing 
furthermore wsmf address issue service composability 
approach ontology composition web ser vices proposed 
uses daml describing web services 
semantic matching web service capabilities limited comparing qos quality ser vice dimensions input output parameters web services 
approach compare additional features category purpose parameters data types units business roles 
additionally focuses automatic selec tion web services 
details way composite services generated 
ninja introduces technique called automatic path creation apc cater automatic service composition :10.1.1.32.6324
apc receives requests composite service execution apc creates path includes sequence operators perform computation data connectors provide data transport operators 
ninja focuses fault tolerance replicating services multiple workstations 
uses limited operator functional classification categories automate selection operators 
mainly input output matching services 
sword uses rule base expert system automatically determine desired composite service achieved medjahed chapter 
related existing services 
sword focus service composability semantic description web services 
research prototypes section overview research prototypes support web service compo sition 
note list prototypes described section exhaustive 
focus representative set prototypes 
cmi collaboration management infrastructure cmi provides archi tecture inter enterprise workflows 
main components cmi engine includes core coordination awareness engines 
core engine provides basic primitives coordination awareness engines 
primitives include constructs defining resources roles generic state machines 
cmi coordination model extends traditional workflow coordination primitives advanced primitives placeholder 
concept placeholder enables dynamic establishment trading relationships 
placeholder activity replaced runtime concrete activity having input output defined part placeholder 
selection policy specified indicate activity executed 
multiple providers offer implementations activity inter face selection policy may broker choose implementation offers best quality service 
cmi awareness model captures information closely related specific role situation process participant 
awareness formation specified process awareness designers awareness specifications 
platform supports specification enactment management composite services 
composite service described process schema combines basic composite services 
composite service modeled graph defines order execution nodes process 
may include service decision event nodes 
service nodes represent medjahed chapter 
related invocation basic composite service 
definition service node contains search recipe represented query language 
service node invoked search recipe executed select specific service 
decision nodes specify alternatives rules controlling execution flow 
event nodes enable service processes send receive types events 
service process instance enactment process schema 
support heterogeneity services provides adapters services support various interaction protocols obi rosettanet 
wise workflow internet services wise aims providing infrastructure support cross organizational business processes virtual enterprises 
wise architecture organized components process definition enactment monitoring coordination 
process definition com ponent allows virtual business process defined building blocks entries catalog companies trading community tc post services 
process enactment component compiles description vbp representation suitable enactment controls execution process invoking corresponding services tc 
process monitoring component keeps track progress execution vbp 
information produced tool create awareness model load balancing routing quality service analysis purposes 
process coordination component supports multimedia conferencing cooperative browsing relevant information participants tc 
crossflow main contribution crossflow concept contracts basic tool cooperation 
businesses specify interactions contracts purchase employment contracts 
provider wants advertise service uses contract manager send contract template trader matchmaking engine 
consumer wants outsource service uses contract template search relevant providers trader 
medjahed chapter 
related matching consumer requirements provider offer electronic contract filling template 
specifications contract dynamic contract service enactment infrastructure set 
symmetrical infrastructure provider consumer sides contains proxy gateways control interactions 
dynamically created modules removed contract completion 
mentor lite mentor lite addresses problem distributing execution workflows 
idea partition workflow specification sub workflows encompassing activities executed entity organization 
basic building block mentor lite interpreter workflow state charts 
modules integrated workflow interpreter defining workflow engine communication manager log manager 
communication manager responsible sending receiving synchronization messages engines 
uses trans action processing tp monitor delivering synchronization messages queued transactions 
log manager provides logging recovery ties 
separate workflow log site workflow engine running 
xl xml language xl defines xml language specification web services 
xl service specification contains local declarations declarative clauses operation specifications 
kinds local variables declared xl 
kind variable represents internal state service 
second kind variable represents internal state particular conversation service involved session id 
declarative clauses include variables control web service global state 
particular history change clauses address issue external manageability adaptability 
history clause specified operation invocations automatically logged 
change clause uses triggers detect changes variables declared web services local declarations 
medjahed chapter 
related self serv composing web accessible information business services self serv proposes process language composing web services state charts 
defines peer peer web service execution model responsibility coordinating execution composite service distributed peer components called coordinators 
coordinator lightweight scheduler determines state state chart entered done state entered 
determines state exited done state exited 
knowledge needed coordinator answer questions runtime statically extracted state chart describing composite service operations represented form routing tables 
table aforementioned prototypes compared key interaction layers chapter 
example uses rmi communication layer 
content layer provides adapters support different interaction protocols obi rosettanet 
interoperability business layer enabled process description model state machines 
prototypes compared table key interaction dimen sions defined chapter 
example allows loose coupling participants 
terms autonomy trading partners need reveal services implemented 
heterogeneous interaction protocols supported adapters 
external manageability adaptability possible event tracking process templates respectively 
security addressed 
scalability accommodated distributed service enactment engines 
medjahed chapter 
related communication layer content layer business process layer cmi transport protocols wise cross flow corba priori agreed coordination communication module mentor lite message format xml edi priori agreed state machine model process description addressed virtual business processes java rmi contract xml contracts transaction processing tp monitor addressed business processes expressed state activity charts java rmi provides adapters support different protocols obi rosettanet state machine model process description xl soap xml schema little statements self serv soap addressed inter service business processes state charts table prototypes vs interaction layers standardization efforts efforts underway define standards composing web services 
include wsfl web services flow language xlang bpel ws business process execution language web services bpel ws 
wsfl wsfl introduces notions flow global model defining composite services 
flow model specifies execution sequence component services 
represented directed graph 
node graph called activity models single step business goal achieved composition 
activities bound services locator element 
binding static dynamic 
static binding service directly specified locator 
dynamic binding locator may example contain uddi query returns list candidate services service selected selection policy service list 
types edges connect activities control links data links 
control links prescribe order activities performed 
data medjahed chapter 
related coupling autonomy heterogeneity ext 
manag 
cmi tight external object state de primitives long systems op term need control tional state flow inhibitor aware coping accomplish ness task events seen events wise tight accomplish task partners object process execution long middleware monitor guarantee term services ing analysis lated objects module cross loose partners partners quality primitives flow agree install service service flexible tran service contract run qos execution contract time environ module restricted definition ment provides provided moni traditional facilities workflows mentor lite tight long term loose long term xl loose transient self serv loose transient participants need reveal services implemented external systems need describe services implementation participants need reveal services implemented participants need reveal services implemented application programs connected workflow engine specific wrappers provides adapters different protocols platforms obi rosettanet speak web services written xl java languages service wrappers addressed event tracking history clauses addressed adaptability security scalability role distributed parallel engines execution addressed addressed addressed addressed provides process templates service nodes service data repositories reuse change clauses addressed security features ee addressed addressed table prototypes vs interaction dimensions distributed architecture cost entry participants locally install contract run time environment workflows partitioned subworkflows distributed distributed service enactment engines addressed peerto peer execution model medjahed chapter 
related links represent flow information activities 
global model specifies component services interact 
includes set plug link elements 
plug link connects operation composite service called exported operation operation component service 
indicates corresponding interaction take place completely implement activity 
xlang xlang provides language constructs describing behavioral aspects web services combining services build multi party business processes 
intra service level xlang extends wsdl language adding behavior element 
behavior defines list actions belong service order actions performed 
xlang defines types actions regular wsdl operations xlang specific actions timeout operations 
inter service level xlang defines contract element provides means interconnecting xlang service descriptions 
execution order xlang actions defined control processes sequence 
particular control process named context enables support transactions 
concept transaction databases guarantees case failure partial updates service execution rolled back 
xlang adopts looser notion transaction compensation 
execution actions context may fail cancelled variety business technical reasons communication failure 
case compensation code explicitly specified provider executed 
bpel ws bpel ws combines features wsfl support graph oriented processes xlang structural constructs processes defining business processes 
business process composed steps called activities 
bpel ws defines collection primitive activities invoke invoke web service operation 
primitive activities combined complex primitives structure activities provided bpel ws 
include ability define ordered sequence steps sequence medjahed chapter 
related branching common case statement approach switch define loop execute alternative paths pick indicate collection steps executed parallel flow 
bpel ws provides mechanisms handle recover errors business processes throw catch constructs 
adopts notion compensating actions defined xlang 
fault handling compensating supported ing notion scope 
scope unit fault handling compensation 
ebxml electronic business xml ebxml aims defining set speci enabling interactions companies size 
basic part ebxml infrastructure repository 
stores important information businesses products services offer 
communication layer businesses exchange messages messaging service 
important feature ebxml messaging service rely specific trans port protocol 
allows common protocol smtp ftp 
content layer companies interact business documents 
busi ness document set information components interchanged part business process 
business documents composed types com ponents core components domain components business information objects 
core components stored core library information components re usable industries 
domain components business information objects larger components stored domain library business library respectively 
core components provided ebxml library domain component business information objects provided specific industries businesses 
business process layer ebxml defines business process specification schema available uml xml versions 
uml version defines uml class diagram 
intended direct creation business process specifi cation provides representation elements relationships required creation 
xml version allows creation xml documents representing medjahed chapter 
related ebxml compliant business process specifications 
ebxml provides set common business process specifications shared multiple industries 
specifi cations stored business library companies build customized business processes 
interactions business processes represented 
choreography specifies ordering transitions busi ness transactions 
model collaboration companies engage ebxml defines collaboration protocol agreements 
cpa agreement trading partners specifies advance conditions trading partners collaborate terms shipment terms payment 
ebxml infrastructure enables secure reliable communications emerging security standards ssl 
addition digital signatures applied individual messages group related messages guarantee authenticity 
regard autonomy adaptability ebxml appears fer kind properties eco 
external manageability provided adding specific activities shared business processes 
initial goal ebxml initiative support fully distributed set repositories interest ing feature improving scalability 
date single repository specified 
deployment platforms major software vendors ibm microsoft sun microsystems hp oracle bea systems currently working implementing web service platforms 
purpose section compare commercial products overview main features 
large number products section attempt cover 
focus major players arena 
coverage user manuals white papers published technical papers detailing commercial products 
additionally existing products various development stages operate different levels disclosure 
medjahed chapter 
related microsoft net net embraces concept web services enable interaction 
consists key elements net framework tools net enterprise servers net service building blocks 
net framework tools provides standard tools soap wsdl uddi 
net enterprise servers provides core components building web services 
include database sql server messaging software exchange server busi ness process technology biztalk server internet security accel eration server 
net service building blocks contains pre defined web services created net infrastructure passport 
soap main transport protocol communication layer 
interoperability communication layer supported microsoft message queue supplemented gateways sending receiving documents various formats trading partners 
microsoft host integration server support connection proprietary systems ibm mainframes 
heterogeneity content layer addressed adhering open standards xml wsdl wrapping applications net managed components 
building business processes called orchestration done biztalk server 
developers biztalk orchestration designer create biztalk processes 
compiled xlang schedules executed biztalk scheduler engine 
websphere websphere family ibm products interactions 
application server cornerstone websphere 
aims providing database backend integration security performance capability workload management 
websphere application server advanced edition adds support ee specification 
extends ee direct access advanced corba services greater flexibility improved interoperability 
advanced edition integrates support key web service standards soap uddi wsdl 
additionally provides distributed transaction support major database systems including ibm db oracle sybase informix 
medjahed chapter 
related products websphere platform 
include websphere business components websphere commerce websphere mq family 
websphere business components provides pre built tested plug play components building new applications extending existing ones 
websphere commerce provides mechanisms building sites including catalog creation payment processing 
websphere mq family known mqseries family message oriented middleware products enable communication applications running different hardware platforms 
sun sun open net environment sun platform web services developed sun 
main product lines sun platform forte tools 
forte tools offer integrated development environment ide java fortran languages 
enables developers access plug ins need speed development web services 
core sun platform 
includes stack products allow creation deployment execution web services 
examples products portal server application server integration server 
portal server representation layer 
delivers services users aggregating content providing security personalization knowledge management 
application server enables access legacy applications databases 
provides ee execution environment web services 
integration server workflow engine enables businesses define workflows legacy applications create services 
sun uses workflows ensure interoperability business process layer 
clear services composed application server 
sun supports emerging web service standards soap wsdl uddi 
portal server enables integration html xml encoded content heterogeneous applications run major operating systems microsoft windows unix 
complementary packages provide additional functionality including secure communications 
medjahed chapter 
related addresses scalability offering built services load balancing 
emphasizes business process management automation 
adopts uml wfmc model mod eling business processes 
exchange information trading partners done xml 
assumes partners agree common standard xml dtd describe documents exchanged 
requires businesses agree semantics business pro cesses activities 
processes divided types public private 
placement purchase order described rosettanet pips example public process 
way different companies deal incoming order customer example private process 
separation private public process allows trading partners change private process affecting cross organization public business process 
composed modules business process management business business communications enterprise application integration real time analysis 
business process management controls coordinates flow information internal external process systems 
private public processes defined graphical modeling tool 
business business communications responsible interactions trading partners multiple protocols ftp iiop soap edi fax email data formats xml idl edi rosettanet 
enterprise application integration provides connectors major databases messaging systems packaged applications 
real time analysis enables gathering analysis process information 
allows businesses identify processing bottlenecks react fast changing business conditions 
oracle integration server oracle integration server products oracle application server ee emerging web service standards 
supports transport protocols soap smtp ftp medjahed chapter 
related iiop various messaging systems jms ibm mqseries tibco rendezvous 
integrator main components 
component provides ejb container executing designed business process 
second component consists design management tools include integration modeler business process monitor business intelligence 
integration modeler offers set web tools model business process map data sources form set relationships trading partners 
business process monitor provides means users monitor analyze drill state business process start resume 
business process intelligence uses oracle data warehousing facilities analyze gather information flow business processes frequency messages sent received 
hp hp software suite includes hp internet operating environment ioe platform building applications 
ioe includes hp process manager hp web services platform 
hp process manager called allows graphical definition business processes provides environment automates execution processes 
component architecture ee 
hp process manager provides audit logger read information xml format jms java message service queue 
allows definition audit nodes business process indicate points process audit information collected 
hp web services platform standards architecture developing web services 
key components hp web services platform include hp soap hp service composer graphical tool creating mapping wsdl interfaces hp registry composer graphical tool registering discovering web services uddi registries 
hp july development support 
bea weblogic integrator bea weblogic integrator cornerstone medjahed chapter 
related bea weblogic business platform 
built top ee compliant application server ee connector architecture 
supports current web service standards soap uddi wsdl 
integrator composed major modules application server application integration business process management integration 
application server provides functionalities developing deploying multi tiers distributed applications ejb components 
application integration leverages ee connector architecture simplify integration existing enterprise applications sap 
business process management provides design tool execution engine business processes 
integration manages interactions external business processes 
separate module called integration collaboration manage different protocols rosettanet pips bea extensible open collaboration protocol quality service qos trading partners 
composed modules enterprise server enterprise adaptor enterprise rule agent 
rule agent set specific business rules required integrating business processes different enterprises 
adaptors connect information sources enterprise server provide bi directional mapping information native format server adaptors provided allow mapping xml messages industry adopted message types cxml obi edi 
hub system enterprise server acts central control storage point 
uses xml exchanging messages trading partners 
server supports multiple transport protocols soap rmi iiop smtp ftp 
defines process oriented language called flow visually compose services 
tibco uses set products enable medjahed chapter 
related interactions 
tibco inconcert tool defining managing dynamic workflows 
tibco defines manages automated business processes span multiple applications transactions 
tibco performs rule transformation mapping messages different messaging softwares 
tibco hawk sophisticated tool monitoring system behaviors 
tibco rendezvous advanced messaging system supports publish subscribe request reply synchronous asynchronous certified transactional messaging paradigms 
supports messaging protocols jms com corba mqseries 
content layer supports various vertical horizontal industry standards cxml rosettanet edi healthcare standards 
table commercial web service platforms summarized fol lowing set parameters major modules communication standards content business process standards key technologies 
example bea weblogic inte includes application server application integration business process man agement integration 
communication standards supported bea weblogic integrator soap jms iiop 
bea weblogic integrator supports wsdl xml rosettanet pip bea content business process standards 
key technologies supported include components ee xml workflows web services 
note deployment platforms support communication protocol 
additionally list supported standards communication content protocol non exhaustive new standards constantly added 
medjahed chapter 
related major modules communication standards ibm websphere application server mqseries jms mqseries business iiop soap components web sphere commerce sun forte tools jms soap ldap wap iiop oracle integration server integration modeler system monitoring administration business process monitor intelligence business hp hp hp chat hp internet operating environment microsoft net net framework tools net enterprise servers net service building blocks bea weblogic integrator application server application integration business process management integration enterprise server enterprise adaptor enterprise rule agent business ware tibco active enterprise business process management communications enterprise application integration real time analysis inconcert hawk rendezvous oracle queue jms soap iiop mqseries tibco rendezvous soap jms iiop soap microsoft host integration server soap jms iiop soap iiop jms soap iiop jms soap jms iiop mqseries content business process standards wsdl xml rosettanet pip cxml edi key technologies components ee xml web services edi xml wsdl components ee xml web services workflow xml wsdl edi rosettanet pip ebxml components ee workflow xml data mining web services xml wsdl components ee xml workflow web services xml wsdl rosettanet pip xlang biztalk server wsdl xml rosettanet pip bea wsdl xml edi rosettanet pip ebxml cxml obi xml edi rosettanet pip ebxml cxml wsdl xml hl edi rosettanet pip biztalk ebxml cxml table deployment platforms dcom web services xml biztalk orchestration engine components ee xml workflow web services components workflow web services agents components xml workflow process model process analysis messaging software xml workflow web services chapter chapter summarize results dissertation discuss research directions web service composition 
summary web service composition emerging technology choice enabling inter enterprise interactions web 
current techniques service composition generally ad hoc time consuming error prone 
dissertation proposed approach automatic composition web services 
specifications composition requests composition engine automatically generates detailed descriptions composite services fulfill requests 
requires dealing major research thrusts describing semantics web services ii selecting relevant participants checking composability iii generating composite service descriptions 
implemented approach webdg prototype accessing government web services 
summarize major contributions dissertation 
ontology organization description web ser medjahed chapter 
vices understanding semantics web services key requirement automatic composition services 
step research define framework semantic description web services 
proposed ontology framework organizing web services describing semantics 
web services grouped communities domain interest 
service providers identify community interest register service 
community instance ontology called community ontology 
community ontology includes set generic operations customized underlying services 
multilevel model web service composability assume composition engine able understand meaning capabilities web service 
issue select relevant participants making sure participants interact 
purpose proposed composability model semantic web services 
model defined set rules called composability rules 
rule compares specific feature interacting web services 
organized composability rules levels syntactic static semantic dynamic semantic qualitative business process 
rule specifies constraints requirements checking horizontal vertical hybrid composability 
introduced notions composability degree composability cater partial total composability 
automatic generation composite services proposed framework semantic web services multilevel composability model designed technique automatic generation composite services high level specifications composition requests 
proposed technique consists conceptually separate phases specification matchmaking generation 
defined quality composition qoc model assess quality generated composite service 
proposed sets algorithms enabling compositions respectively 
set medjahed chapter 
composition includes operation centric community centric message centric algorithms 
operation centric algorithm uses operations basis checking composability 
performs exhaustive search service registry 
community centric algorithm uses communities basis selecting service operations 
focuses communities category may composed sub requests categories 
remaining communities imported operations pruned service space 
message centric algorithm checks composability messages operations derives operations vertically composed sub requests 
composition algorithm notion flow graph links operations horizontally composable 
implementation performance study implemented pro posed techniques webdg prototype accessing government web services 
defined analytical model studying performance proposed gorithms composition 
conducted set experiments evaluate performance scalability algorithms 
defined benchmarking frame web services 
benchmark enables generation large number web services simulation important characteristics web service space dynamics heterogeneity 
main features include customized generation user controlled generation statistical distribution models poisson service arrival rate extensibility adding new service attributes 
directions research identify directions research dynamic composition web services dependable service composition support mobile services grid services 
medjahed chapter 
dynamic composition web services number services inte may large continuously changing 
web service composition requires flexibility dynamically adapt changes may occur partners applications 
participants able respond rapidly changes operational server load market changes regulations environments easily predictable 
additionally competitive nature web possible availability alternate services provide similar functions 
stay competitive businesses team best available services time 
need form short term relationships longer profitable stay 
form partnership assume priori trading relationship 
support dynamic composition facilitate establishment demand real time partnerships 
services statically bound 
new partners relevant features dynamically discovered assembled 
currently relationships component services established development time 
technologies soap wsdl uddi provide capabilities defining web services clearly sufficient facilitate establishment dynamic business relation ships 
research effort needed enable creation dynamic relationships 
dependable composition web services transaction support required provide reliable dependable execution composite services 
traditional transaction management techniques appropriate context composite services 
participants composite service may heterogeneous autonomous 
may transactional transactional features may compatible 
addition participant services different reasons quality services may willing comply constraints resource locking termination composite service execution 
new transaction techniques required context web services 
instance important extend description services explicitly describing transactional semantics web service operations 
medjahed chapter 
example specify operation aborted effect requester perspective 
imperative extend service composition models specify transactional semantics operation group operations 
example specify handle unavailability participant service 
effective handling transactional aspects composite service level facilitated exploiting transactional capabilities participant services 
industry standards ws coordination ws transaction business transaction protocol emerging transaction support composite services 
support mobile services current focused web service composition wired infrastructures fixed stationary users 
research intend extend research web service composition wireless environments 
past years witnessed boom wireless technologies 
sophisticated wireless devices cellular phones pdas available affordable prices 
emerging technologies including third fourth generation development increase bandwidth wireless channels 
proposed web service concepts may easily applicable mobile services 
due peculiarities wireless environments including limited bandwidth unbalanced client server communication limited power supply frequent unavailability wireless networks 
example uddi discovering web services requires multiple costly round trips wireless networks 
invoking web services soap may increase mobile hosts power consumption waiting time 
calls new techniques adapt web services wireless world 
grid services grid computing research area explore 
aim research grids provide scalable transparent methods accessing resources distributed environments 
grid concepts technologies developed enable scientific collaborations 
applications medjahed chapter 
include collaborative visualization large scientific datasets computationally demanding data analyses astronomy 
just web began tech nology scientific collaboration adopted various applications commerce government similar trajectory expected grid technologies 
challenges support dynamic integration resources 
resources discovered fly selected requests submitted released requests fulfilled 
grids web services need integrate resources distributed heterogeneous autonomous systems 
possible way realize grids web view grid resources web services 
way grids defined reusing assembling ordinating existing resources 
challenge define techniques discovering selecting creating assembling grids web service composition techniques 
bibliography adam yesha 
electronic commerce technical business legal issues 
prentice hall isbn august 
adam yesha 
strategic directions electronic commerce digital libraries digital agora 
acm computing surveys december 
srinivasan 
business process modeling big step 
ieee computer may 
medjahed bouguettaya 
supporting dynamic changes web service environments 
proceedings international conference service oriented computing pages trento italy de 
alonso casati kuno 
web services concepts architecture applications 
springer verlag isbn june 
atis 
electronic data interchange guideline consistency subcommittee 
www atis org atis 

process service model dynamic enterprise process interconnection 
proceedings international con medjahed bibliography ference cooperative information systems pages trento italy september 
bea 
weblogic integrator 
www bea com products weblogic integrator 
bea ibm microsoft 
business process execution language web services bpel ws 
xml org bpel ws html 
benatallah dumas sheng ngu 
declarative composi tion peer peer provisioning dynamic web services 
ieee international conference data engineering pages san jose california usa february 
benatallah medjahed bouguettaya elmagarmid beard 
composing maintaining web virtual enterprises 
proceedings international workshop technologies services pages cairo egypt september 
berners lee 
services semantics web architecture 
www org tbl april 
berners lee hendler lassila 
semantic web 
scientific american may 
segev zhao 
component commerce current practices directions 
acm sigmod record december 
bouguettaya benatallah elmagarmid 
interconnecting heterogeneous information systems 
kluwer academic publishers isbn july 
bouguettaya elmagarmid medjahed ouzzani 
ontology support digital government 
proceedings international medjahed bibliography conference large databases pages roma italy september 
bouguettaya medjahed ouzzani wen 
privacy preserving composition government web services demo 
proceedings nsf conference digital government research pages los angeles california usa may 
bouguettaya ouzzani medjahed cameron 
managing gov databases 
ieee computer february 
brodie 
commerce revolution convergence chaos tic computing 
information system engineering state art research themes 
editors london england june 
bussler 
protocol standards role semantic tion engines 
ieee data engineering bulletin march 
bussler fensel maedche 
conceptual architecture se mantic web enabled web services 
sigmod record december 
cardoso sheth 
semantic workflow composition 
technical report lsdis lab department computer science university georgia july 
casati dayal 
shan 
business applications supply chain automation challenges solutions 
ieee international conference data engineering pages heidelberg ger april 
medjahed bibliography casati georgakopoulos 
shan editors 
proceedings ternational workshop technologies services roma italy september 
casati jin krishnamoorthy 
shan 
adaptive dynamic service composition 
proceedings interna tional conference advanced information systems engineering pages stockholm sweden june 
casati 
jin krishnamoorthy 
shan 
platform developing managing composite services 
technical report hpl hp palo alto california usa 
casati 
shan 
developing services composing services 
proceedings international conference advanced formation systems engineering pages switzerland june 
casati 
shan 
models languages describing discover ing services tutorial 
proceedings international acm sigmod conference management data santa barbara california usa may 
chakraborty joshi finin yesha 
reactive service composition architecture pervasive computing environments 
proceedings international personal wireless communications confer ence pages singapore october 
cobb 
evolution distributed component architectures 
pro ceedings international conference cooperative information systems pages trento italy september 

efficient modular reactive capabilities object oriented database system 
proceedings medjahed bibliography international conference large databases pages santiago chile september 
commercenet 
eco 
eco commerce net 
rosettanet consortium 
rosettanet 
www rosettanet org 
consortium 
edi electronic data interchange ansi 
www org 
xml edi consortium 
xml edi 
www group org 
cormen leiserson rivest stein 
algorithms 
mit press isbn september 
curbera nagy 
unraveling web services web 
ieee internet computing march 
cxml consortium 
cxml 
www cxml org 
dayal hsu ladin 
business process coordination state art trends open issues 
proceedings international conference large databases pages roma italy september 
ding fensel klein 
semantic web hip 
data knowledge engineering may 
dogac 
survey current state art electronic commerce research issues enabling technologies 
euro med net conference electronic commerce track pages nicosia cyprus march 
dogac editor 
special issue electronic commerce acm sigmod record december 
medjahed bibliography dogac editor 
special issue electronic commerce distributed par databases international journal april 
dogac 
survey comparison business business commerce frameworks 
acm exchanges june 
douglis foster 
grid grows 
ieee internet computing july 

event broker 
www com 
elmagarmid editor 
database transaction models advanced appli cations 
morgan kaufmann isbn december 
fensel 
ontologies silver bullet knowledge management elec commerce 
springer verlag isbn september 
florescu kossmann 
xl xml programming language web service specification composition 
proceedings international world wide web conference pages honolulu hawaii usa may 
florescu kossmann rost 
xl platform web services 
international acm sigmod conference management data page madison wisconsin usa may 
garlan allen 
architectural mismatch reuse hard 
ieee software november 
georgakopoulos editor 
information technology virtual enterprises proceedings international workshop research issues data engi neering sidney australia march 
medjahed bibliography georgakopoulos schuster cichocki baker 
managing process service fusion virtual enterprises 
information systems september 
gomez perez corcho 
ontology languages semantic web 
ieee intelligent systems january 
gribble brewer hellerstein culler :10.1.1.32.6324
scalable dis tributed data structures internet service construction 
proceedings symposium operating systems design implementation pages san diego california usa october 
object management group 
unified modeling language specification version 
www omg org technology documents formal uml htm 
yang papazoglou 
service representation discovery composition marketplaces 
proceedings ternational conference cooperative information systems pages trento italy september 
hopkins 
component primer 
communications acm ber 
horrocks 
daml oil description logic semantic web 
ieee data engineering bulletin march 
hp 

www hp com 
huhns 
agents web services 
ieee internet computing july 
ibm 
web services flow language wsfl 
xml org wsfl html 
ibm 
websphere 
www ibm com 
medjahed bibliography ibm 
ws coordination 
www ibm com developerworks 
ibm 
ws transaction 
www ibm com developerworks 
ietf 

www ietf org 
ietf 
internet engineering task force 
www ietf org 
whinston 
frontiers electronic commerce 
addison wesley isbn february 
larsen 
component enterprise frameworks 
communications acm october 
schuldt alonso schek 
wise process commerce 
ieee data engineering bulletin march 

frameworks component client server comput ing 
acm computing survey march 
li horrocks 
software framework matchmaking semantic web technology 
proceedings international world wide web conference pages budapest hungary may 
ludwig 
contract cross organisational workflows crossflow project 
proceedings international joint conference activities coordination collaboration pages san francisco california usa february 
mcilraith son zeng :10.1.1.21.61
semantic web services 
ieee intelligent systems march 
mecella pernici 
compatibility services operative multi platform environment 
proceedings international workshop technologies services pages roma italy ber 
medjahed bibliography medjahed benatallah bouguettaya elmagarmid 
framework agile integration web services 
international journal cooperative information systems june 
medjahed benatallah bouguettaya ngu elmagarmid 
business business interactions issues enabling technologies 
vldb journal may 
medjahed bouguettaya 
dynamic foundational architecture semantic web services 
distributed parallel databases international journal submitted 
medjahed bouguettaya 
multilevel composability model semantic web services 
ieee transactions knowledge data engi neering submitted 
medjahed bouguettaya elmagarmid 
composing web services semantic web 
vldb journal november 
medjahed bouguettaya ouzzani 
semantic web enabled government services 
proceedings nsf conference digital gov research pages boston massachussets usa may 
medjahed ouzzani bouguettaya 
web services government applications 
proceedings nsf conference digital government research pages los angeles california usa may 
medjahed bouguettaya ouzzani 
infrastructure government web services 
ieee internet computing january 
meyer 
components 
ieee computer january 
medjahed bibliography microsoft 
distributed component object model dcom 
www microsoft com 
microsoft 
net 
www microsoft com net 
microsoft 
web services business process design xlang 
xml org xlang html 
sun microsystems 
java rmi remote method invocation 
java sun com products jdk rmi 
sun microsystems 
sun 
www sun com 
muth dittrich weikum 
centralized workflow specification distributed workflow execution 
jour nal intelligent information systems march 
nasa 
scientific engineering workstation procurement 
www nasa gov united nations 
united nations directories electronic data administration commerce transport un 
www org trade welcome htm 
netscape 
secure socket layer ssl specification 
wp netscape com eng ssl 
nwana ndumu 
agent technology 
lecture notes artificial intelligence number springer verlag 
oasis 
business transaction protocol 
www oasis open org cover 
oasis united nations 
ebxml 
www ebxml org 
obi 

www org 
medjahed bibliography oracle 
integration server starter pack 
oracle com software 

client server programming java corba 
wiley computer publishing isbn march 
ouzzani benatallah bouguettaya 
ontological approach formation discovery internet databases 
distributed parallel databases international journal july 
ouzzani bouguettaya 
query processing optimization web 
distributed parallel databases international journal may 
ouzzani medjahed bouguettaya 
optimized querying government services 
proceedings nsf conference digital gov research pages boston massachussets usa may 
paepcke chang garcia molina winograd 
ity digital libraries worldwide 
communications acm april 
paolucci kawamura payne sycara 
semantic matching web services capabilities 
proceedings international semantic web conference pages sardinia italy june 
park miller 
random number generators ones hard find 
communications acm october 
petrie bussler 
service agents virtual enterprises survey 
ieee internet computing july 
fox 
sword developer toolkit web service composition 
proceedings international world wide web confer ence pages honolulu hawaii usa may 
medjahed bibliography ran 
model web services discovery qos 
exchanges march 
roman ambler 
mastering enterprise javabeans 
wiley computer publishing isbn december 
russell norvig 
artificial intelligence modern approach 
prentice hall isbn december 
schuler schuldt alonso 
schek 
workflows workflows practical experiences integration sap business workflows wise 
proceedings informatik workshop enterprise wide cross enterprise workflow management concepts systems applications pages paderborn germany october 
schuster baker cichocki georgakopoulos rusinkiewicz 
collaboration management infrastructure 
ieee international conference data engineering pages san jose cal usa march 
schuster georgakopoulos cichocki baker 
modeling composing service process multi enterprise pro cesses 
proceedings international conference advanced informa tion systems engineering pages stockholm sweden june 
shen benatallah dumas 
mak 
self serv plat form rapid composition web services peer peer environment 
proceedings international conference large databases pages hong kong china august 
sheth larson 
federated database systems managing distributed heterogeneous autonomous databases 
acm computing surveys september 
medjahed bibliography shim sundaram gao 
business business commerce frameworks 
ieee computer october 
singh 
physics service composition 
ieee internet computing may 
sipser 
theory computation 
brooks cole isbn december 
garlan compositional formalization connector wrappers 
proceedings international conference software engi neering pages portland oregon usa may 
sycara 
dynamic service matchmaking agents open information environments 
acm sigmod record march 
szyperski 
component software object oriented programming 
addison wesley isbn november 
stencil group 
web services beat new new thing rap 
www com ideas scope html 
tibco 

www tibco com 
tsur abiteboul agrawal dayal klein weikum 
web services revolution commerce 
panel 
proceedings international conference large databases pages roma italy september 
urban dietrich saxena 
interconnection distributed components overview current middleware solutions 
journal computer information sciences engineering march 
medjahed bibliography varshney vetter editors 
special issue mobile commerce monet june 

web services interaction models part current practice 
ieee internet computing may 


www com 

simple object access protocol soap 
www org tr soap 

universal description discovery integration uddi 
www uddi org 

web services description language wsdl 
www org tr wsdl 


www com 
weikum editor 
special issue organizing discovering semantic web ieee data engineering bulletin march 
roth 
mentor lite prototype light weight workflow management system 
ieee international conference data engineering pages san diego california usa february 
jennings 
intelligent agents theory practice 
knowledge engineering review 
yang papazoglou 
interoperation support electronic business 
communications acm june 
yang bouguettaya medjahed long 
organizing accessing web services air 
ieee transactions systems man cybernetics part systems humans november 
medjahed bibliography zeng benatallah dumas sheng 
quality driven web services composition 
proceedings international world wide web conference pages budapest hungary may 
appendix vita personal information full name medjahed mail vt edu home page www nvc cs vt edu research interests databases internet computing semantic web web service workflow 
education may ph computer science applications department com puter science virginia tech gpa 
thesis semantic web enabled composition web services advisor dr bouguettaya medjahed appendix vita september sc 
computer science university sciences technology algeria 
june sc 
computer science university sciences technology algeria 
june high school diploma algeria 
research experience research assistant may december department computer science virginia tech 
ph thesis research worked developing approach automatic composition semantic web services 
proposed framework organizing describing web services semantic web 
framework defined multilevel com model check web services combined gether 
model checks web service composability different levels including syntactic semantic static dynamic qualitative quality operation business process levels 
proposed set algorithms checking composability automatically generating de tailed composite service description high level description desired composition 
proposed techniques implemented webdg prototype system providing customized government web services nsf funded project 
visiting scholar summer department computer sciences purdue university 
designed implemented services different service platforms including hp platform hp speak uddi wsdl soap 
medjahed appendix vita aim compare different service platforms 
part hp funded project conducted collaboration virginia tech purdue university 
research assistant august may department com puter science virginia tech 
early webdg project funded nsf focussed orga querying web databases 
looked ontologies cluster browse web databases 
tools purpose include corba products orbix visibroker rmi dcom ejb iiop standard 
research assistant march august school informa tion systems queensland university technology australia 
worked design proactive adaptive transaction model open heterogeneous distributed environments 
funded arc spirit project australia 
research assistant september may department computer science university sciences technology algeria 
topic sc 
research thesis concurrency control nested transactions 
designed implemented technique serial ization graphs checking serializability concurrent execution nested transactions 
part project funded department education 
medjahed appendix vita teaching experience teaching assistant march august school informa tion systems queensland university technology australia 
course databases 
conducted weekly lab sessions graded projects exams held office hours 
lecturer september february university sciences technology algeria 
courses algorithms compilers computer architecture 
prepared gave weekly lectures conducted weekly lab sessions designed graded projects exams 
associate lecturer september december private undergraduate institute algeria 
courses computer science data structures computer architecture 
prepared gave weekly lectures conducted weekly lab sessions designed graded projects exams 
teaching assistant september june national computer science algeria 
course compilers 
conducted weekly lab sessions graded projects exams designed graded held office hours 
teaching assistant september june univer sity sciences technology algeria 
course theory computation 
conducted weekly lab sessions designed graded graded exams held office hours 
medjahed appendix vita publication journals 
medjahed benatallah bouguettaya elmagarmid 
framework agile integration web services 
international journal cooperative information systems june appear 

medjahed bouguettaya elmagarmid 
composing web services semantic web 
vldb journal special issue semantic web november 

yang bouguettaya medjahed long 
organizing accessing web services air 
ieee transactions systems man cybernetics part systems humans november 

medjahed benatallah bouguettaya ngu 
business business interactions issues enabling technologies 
vldb journal may 

medjahed bouguettaya ouzzani 
infrastructure government web services 
ieee internet computing january february 

bouguettaya ouzzani medjahed cameron 
managing gov databases 
ieee computer february 

medjahed bouguettaya 
customized delivery pervasive web ser vices 
ieee computer review 

medjahed bouguettaya 
multilevel composability model se mantic web services 
ieee transactions knowledge data engineering review 
medjahed appendix vita 
medjahed bouguettaya 
dynamic foundational architecture semantic web services 
distributed parallel databases review 
book chapters 
bouguettaya medjahed ouzzani 
internet computing support digital government 
practical handbook internet com puting crc press appear 

bouguettaya benatallah medjahed ouzzani 
adap tive web communities 
information modeling internet applica tion van editor isbn idea group publishing october 

bouguettaya medjahed ouzzani meng 
ubiquitous access web databases 
web powered databases edi tors isbn idea group publishing august 

bouguettaya ouzzani medjahed elmagarmid 
supporting data services access digital government environments 
advances digital government technology human factors policy mciver elmagarmid editors isbn kluwer academic pub may 
conferences 
medjahed bouguettaya 
supporting dynamic changes web service environments 
st international conference service ori computing soc trento italy december 

medjahed bouguettaya ouzzani 
semantic web enabled government services 
dg nsf conference digital government research boston usa may 
medjahed appendix vita 
ouzzani bouguettaya medjahed 
optimized querying government services 
dg nsf conference digital government research boston usa may 

ouzzani bouguettaya medjahed 
preserving privacy web services 
th international acm workshop web information data management virginia usa november 

medjahed ouzzani bouguettaya 
web services government applications 
dg nsf conference digital govern ment research los angeles usa may 

bouguettaya medjahed ouzzani wen 
privacy preserving composition government web services demo 
dg nsf conference digital government research los angeles usa may 

bouguettaya elmagarmid medjahed ouzzani 
ontology support digital government 
th conference large databases vldb roma italy september 

bouguettaya elmagarmid medjahed ouzzani 
web architecture government databases services 
dg nsf conference digital government research los angeles usa may 

medjahed 
discovering integrating web services 
acm inter national student research workshop charlotte north carolina usa ary 

benatallah medjahed bouguettaya elmagarmid beard 
composing maintaining web virtual enterprises 
vldb workshop technologies services tes cairo egypt september medjahed appendix vita 
medjahed 
compound conflict serializability criterion strong correctness multidatabases french database conference october french 

medjahed 
preservation strong correctness multidatabases nd national conference computer science algeria november french 

medjahed 
serialization graph construction object oriented database systems rd international symposium programming systems isps algeria april french 

medjahed 
serializability nested transactions rd iasted international conference computer applications industry cairo egypt december 

medjahed 
serializability approach nested trans actions th conf 
parallel distributed systems french speaking countries lyon france june french 

medjahed 
multilevel nested trans theses actions th international conference computer systems may french 

medjahed 
sc 
thesis concurrency control nested transactions university sciences technology algeria september french 

medjahed 
sc 
project implementation son multiversion concurrency control university sciences technology algeria june french 
medjahed appendix vita talks presentations 
automatic composition web services 
invited talk rutgers university july 

semantic web enabled government services 
presentation dg nsf conference digital government research may 

semantic web support digital government 
birds feather session dg nsf conference digital government research may 

optimized querying government services 
poster presentation dg nsf conference digital government research may 

declarative dynamic composition web services 
invited talk june 

webdg integrated access government databases services 
demo presentation virginia department aging october 

webdg government infrastructure uniform privacy preserving ac cess autonomous web databases services 
presentation aol common ground research day workshop november 

uniform secure access web databases services 
tion aol common ground research day workshop november 

web services government applications 
presentation dg nsf conference digital government research may 

privacy preserving composition government web services 
demo pre sentation dg nsf conference digital government research may 
medjahed appendix vita 
web architecture government databases services 
demo pre sentation dg nsf conference digital government research may 

managing government databases 
demo presentation indiana family social services administration august 

ontology support digital government 
presentation vldb conference september 

discovering integrating web services 
poster presentation acm international student research workshop february 
participated write research proposals successfully funded nih sun microsystems respectively 
helped write nsf research proposal review 
attended workshops virginia tech writing 
titles workshop finding funds writing successful 
awards april virginia tech award dg conference november outstanding reviewer award ieee internet computing 
december computing research association cra award attend cra academic careers workshop 
medjahed appendix vita september virginia tech award vldb conference february acm award acm international student research workshop charlotte north carolina usa february 
march recipient year scholarship ph studies school information systems queensland university technology brisbane aus 
honors invited appear america october 
student member ieee ieee computer society acm 
sc 
sc 
computer science honor 
professional activities program committee membership international workshop ubiquitous computing april porto portugal 
ieee international workshop electronic contracting july san diego california 
workshop seminar organization helped organization ieee ride research issues data engineering workshop 
responsible maintaining workshop web site managing submissions handling reviews 
medjahed appendix vita student volunteer nd acm technical symposium computer sci ence education 
fall spring coordinator commerce government research lab seminars 
technical journals acm computing survey 
ieee transactions knowledge data engineering 
ieee internet computing 
distributed parallel databases journal 
en biomedical engineering 
knowledge information systems 
international journal information technology 
conferences international conference data engineering icde 
interna tional conference extending database technology edbt 
international conference web services 
international conference electronic commerce cec 
international confer ence information knowledge management cikm 
inter national conference tools artificial intelligence 
international conference cooperative information sys tems coopis 
distributed objects applications conference doa 
vldb workshop technologies services tes 
workshop research issues data engineering ride 
international workshop mobility databases distributed sys tems 
students advising sc 
independent study projects department computer science virginia tech 
medjahed appendix vita yu wang 
implementation distributed ontologies 
edward 
deploying services speak dcom 
li 
deploying services speak ejb 
ma 
uniform interface querying government databases invoking services 
zhang 
benchmarking web services 
hao 
accessing government web services 
hao long 
implementing web services government applications 
