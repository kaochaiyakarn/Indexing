scaling security pairing protocols michael scott school computing dublin city university dublin ireland 
mike computing dcu 
number theoretic cryptography problem scaling security higher level 
usually means increasing size modulus say bits bits 
pairing cryptography option available keeping modulus constant increasing embedding degree 
big potential advantage smart card embedded applications security scaled continuing sized calculations 
example cryptographic processor bit modular multiplications directly re higher security setting 
investigate scaling issue context prime characteristic non supersingular elliptic curves 
confirm certain circumstances higher levels security slightly modified weil pairing may efficient tate pairing 
keywords cryptographic key sizes pairing cryptosystems 
majority number theoretic cryptographic protocols finite field elliptic higher genus curves problem increased security implies obvious solution increase size modulus traditionally doubling size 
interestingly case rsa scheme difficulty discrete logarithm problem problem integer factorisation alternative solution 
multi prime rsa frequently suggested people alternative simply doubling length prime factors public key 
pq originally bits increased security implementation bits 
multi prime alternative remain bit primes 
apparently introduce serious new weaknesses represents completely viable solution significant performance advantages 
multi prime rsa widely relatively appeared standardisation documents 
reason may optimal way scaling rsa security properly addressed early research community 
simple just double bit length thing requires security analysis 
particular discrete logarithm scheme choice 
increased security increase size modulus 
course possibility switching different scheme sized modulus provides security example switch standard finite field setting scheme luc 
way scaling security clumsy 
considered attacking discrete logarithm system attacker choose exploit small size group pollard lambda algorithm small size field index calculus methods apply pollard rho algorithm 
balanced security finite field choose modulus bits resist index calculus attacks group size bits resist pollard lambda attacks 
issue scale security pairing cryptosystems addressed koblitz menezes granger page smart 
seen experimental evidence largely supports 
pairing cryptography rsa distinct strategies obtain increased levels security double size prime modulus double embedding degree 
cases group size increased appropriate 
field size particularly significant parameter smart card embedded implementations processor support field size determines hardware requirement 
analyse approach simply doubling embedding degree 
immediate implications 
firstly elliptic curves maximum embedding degree 
true higher embedding degrees obtained hyper elliptic curves method scaling security switching different characteristic higher genus curve clumsy 
consider non supersingular curves acknowledging small characteristic supersingular elliptic curves efficient vehicle pairing cryptography 
see example results particular discovery new pairing 
aim provide simple mechanism scaling security requires minimal changes existing implementation terms algorithm software hardware 
protocols time taken calculate pairing significant 
time taken field exponentiation elliptic curve point multiplication taken account evaluating detail performance particular protocol 
cases precomputation exploited eliminate line computational cost taken account 
depth analysis done protocol protocol basis outside scope concentrate solely cost pairing 
generating suitable non supersingular elliptic curves quite difficult 
algorithms suggested current state art constraints 
summarise number bits field modulus size group order bits 
embedding degree relatively easy generate suitable curves specific cases possible generate curves possible find curves barreto discovered remarkable formula easily generating curves freeman number solutions case 
applications short signature scheme important signature short 
glance appears efficient 
majority applications important focus condition curves plentiful easy find 
added advantage choosing case group order chosen lowest possibly hamming weight performance benefits :10.1.1.120.3363
purposes define levels security roughly limits laid lenstra 
referred security security security refers effective field size kf second refers group size 
advocate fixing achieve higher levels security 
greater granularity achieved intermediate values different values acknowledge embedding degree may fact optimal particular nice tricks known exist curves 
justify approach pointing practice algorithm cryptographers bit rsa equivalent level security threaten level switch bit security maintain convenience scalability implementations adopted practise 
tate pairing section review tate pairing algorithm non supersingular curves fields large prime characteristic choose prime size low hamming weight 
find elliptic curve fp size order divisible 
assuming divide value curve suitable pairing cryptography embedding degree observe known fact cyclotomic polynomial irreducible know divide divide 
general tate pairing written er point fpk subgroup order fpk representative coset points includes member distinct subgroup order tate pairing evaluates non trivial element extension field fpk order tate pairing relevant properties 

er ap bq er ab fr 
er property enables implementation novel protocols 
practise common efficiency reasons choose fp 
possible manipulate point twisted curve defined fpk mapping point fpk prior calculation pairing :10.1.1.13.8666
coordinates point exhibit redundancy exploited speed calculation 
tate pairing algorithm consists application miller algorithm followed final exponentiation 
miller algorithm point implicitly multiplied standard double add method iteration distance relationship current point fixed point calculated accumulated fpk variable 
purpose final exponentiation yield unique result order field fpk pk elements definition pk 
assuming final exponentiation power written exponentiation cheap frobenius action single extension field inversion 
hard exponentiation power demonstrated output tate pairing easily compressed half size compressed pairing returns element fk 
non supersingular vs supersingular view unsupported hard evidence non supersingular curves intrinsically secure supersingular curves 
comment 
view faster supersingular curve form compensation perceived weakness 
prime field characteristic restricted case 
demonstrated optimal pairing algorithm certain curves fact faster equivalent supersingular curve 
suggested ease domain generation supersingular curves easier generate modulus low hamming weight turn leads faster implementation 
point low hamming weight raises genuine security concerns 
see section details curve generation 
vast majority pairing protocols described context super singular curves 
transferred directly non supersingular curve fine called bilinear diffie hellman assumption bdh original arguably intuitive bdh assumption 
subtle differences 
recall supersingular curves distortion map exists er fp 
distorted tate pairing properties 
ap bq ab fr 

note property different property new 
pairings share important property property required new pairing protocols 
different properties affect behaviour protocol interesting ways 
main implication working non supersingular curves need remember treat parameters fp quite differently 
interchanged moved side side pairing calculation 
potentially significant difference manipulation parameter prior pairing calculation simpler super singular curves point base curve curve taken larger extension field twist idea see 
pointed possible useful precomputation parameter constant second 
parameters switched side side supersingular curves property feature easier exploit setting non supersingular case 
tower extensions require scalable implementation finite field arithmetic field simplest way tower extensions 
element fp represented pair elements fp recursively starting efficient implementation fp 
suitable extension field arithmetic representation need irreducible polynomial 
example mod suitable irreducible polynomial representation extension field fp 
elements field represented polynomial ax fp 
alternatively solve irreducible polynomial set representation 
numbers form manipulated directly explicit irreducible polynomial 
note quadratic non residue respect iff mod 
unfortunately representation permit simple tower extensions built top 
alternative choose mod 
case irreducible polynomial chosen support infinite tower similar extensions 
practise choose mod important simple formula modular square roots exist case general mod calculation square roots required generate points elliptic curve 
element pair elements fp 
element pair elements 
element pair elements 
implementation new layer tower built identical fashion top previous layer 
terminology programming language class supports operations field addition subtraction multiplication division plus square lucas powering multi exponentiation written just support instantiations 
omit implementation details quite straightforward 
extra constraint curve generation process mod 
cases easy find suitable curves 
twist idea th root 
point point curve ax field easy verify simple substitution point point twisted curve ax smaller field 
simple matter map points back twisted representation original curve :10.1.1.13.8666
frobenius action field frobenius action defined known identity iy means exponentiation free 
tower extensions formula applied recursively fp fermat little theorem 
term needs handled carefully 
example mod term precalculated 
final exponentiation tate pairing hard part final exponentiation computed performing exponentiation compression pairing value followed lucas exponentiation 
exponent case approximately lg lg bits length 
quite efficient small values dealing elements compressed half sized field fpk 
larger values pointed granger page smart efficient exploit multi exponentiation 
briefly precalculated stored number base frobenius exploited allow multi exponentiation exponents length equal lg 
alternatively final exponentiation power included multi exponentiation reasonably efficient totally inverse free pairing algorithm 
multi exponentiation output pairing compressed desired 
experience cases considered lucas method superior multi exponentiation method superior 
algorithm section describe version tate pairing algorithm turn original miller algorithm closely treatment earlier barreto :10.1.1.120.3363
efficiency standard projective coordinate system described implicit point multiplication fp 
need function execute point addition obtaining line slope calculating contribution current iteration algorithm 
capital letters denote curve points lower case letters symbols represent elements fp simple integers boldface letters represent elements 
xq yq 

add 
return xz function add performs standard projective point addition returns line slope rational note line slope needed anyway perform point addition extra involved 
assume point prime order tate 



xq yq 
lg downto 
xq yq 
ni xq yq 

pk 
return variable miller variable variable element full extension field notation ni refers th bit note choice low hamming weight means bit may entire calculation 
function converts point twisted curve point xq yq original curve full extension field described section 
function represents difficult part final exponentiation described 
certain circumstances parameter pairing algorithm point may constant 
benefit significantly precomputation 
points slopes implicit multiplication precomputed stored simpler affine version function 

tower extensions algorithm positive value extension degree implementation details vary slightly particular function frobenius action large fair say basic algorithm works find suitable non supersingular curves curve generation long known non supersingular curves exhibit low degree famous mov condition recommended avoid curves classic elliptic curve cryptography 
generally regarded bad thing interest deliberately generating 
fortunately time pairings cryptographically interesting miyaji published construction called mnt curves 
original described constructions elliptic curves fields prime characteristic embedding degrees recall number bits prime modulus number bits prime group order 
condition implies curve fp prime order pairing friendly curves rare subsequent developments extended idea produce curves curve order hr small values 
term mnt curve commonly confusingly refer non singular curve useful embedding degree 
major development algorithm cocks pinch unfortunately unpublished essentially algorithm described 
method quite easy find curve desired embedding degree restriction 
subsequently series papers discovered alternative strategies special cases find curves glance appears preferable choose curves unfortunately known method doing :10.1.1.18.2131
situation changed surprising discovery barreto solutions particular case possible followed discovery freeman solutions 
generally true number possible curves starts constrained particular longer control choice clearly efficient chosen low hamming weight 
ideal develop method scaled limit cocks pinch algorithm ideal consider candidate curves generated alternative methods described brezing weng 
algorithms give information know suitable curve exists desired embedding degree curve order divisible chosen find actual curve parameters method complex multiplication described implemented example 
actual elliptic curves en fp described standard representation curves prime characteristic ax cc bc da ce ab afd eee dd cd af af ff df efe bd ab ca bc ae ae dac cdd ac ccc eb efc ca ac ec de bw cb fe dcc ddd fd de da fd ca da de ac ab eb ee ac bf dd efa cfe cb cc fcc ba da fd fc bf dd cf ef df bc bf dfd bd cf db ea ee cf ffa da aa cc bd df fca dc dd fc ce ad ba eb cbc cd curves field size bits embedding degrees respectively 
observe low hamming weight group orders sizes bits respectively 
generated variations cocks pinch algorithm 
curves mod irreducible polynomial 
little faster 
curves mod facilitate building tower extensions irreducible polynomial described 
particularly easy find curves cocks pinch algorithm expect easy find curves higher embedding degrees 
curve bw generated brezing weng algorithm field size bits group size bits hamming weight embedding degree 
terms security similar 
brezing weng curve harder find constraints imposed 
curve unpublished method field size bits group size little greater bits embedding degree 
curve selected lower average hamming weight just 
curve similar uses elliptic curve efficient endomorphism described 
results timings carried ghz pentium iv processor shown table 
particular compare scaling approach advocated fixed size prime modulus doubling alternative scaling method simply doubling size prime modulus keeping fixed curves 
compare curves generated cocks pinch algorithm curves generated alternative approaches 
table 
timings pentium iv ghz tate pairing curve kf bits bits time ms 
bw observe curve generated simple cocks pinch algorithm practice little faster brezing weng curve bw security level 
note brezing weng curve algorithm described standard windowing algorithm suitable case hamming weight insignificant 
method doubling prime modulus method scaling suffers point multiplication elliptic curve large prime field expensive 
precomputation applies solves problem extent cost large precomputed tables 
comparison purposes interesting observe optimized implementation tate pairing supersingular curve approach takes just milliseconds platform 
etat algorithm benefit precomputation 
weil pairing originally thought tate pairing better choice weil pairing view articulated example 
suggested higher levels security weil pairing may fact efficient tate pairing 
supported observation final exponentiation tate pairing significant contribution timing 
hand weil pairing requires invocations miller algorithm final exponentiation 
try determine experimentally cross point weil pairing superior 
observe standard weil pairing directly advantageous consider weil pairing raised power fast frobenius action permits various optimizations similar denominator elimination optimization described barreto :10.1.1.120.3363
observation independently koblitz menezes 
parameters time requirement order function 
complex weil pairing pair point additions required implement invocations miller algorithm 
projective coordinates implicit point multiplication point fp affine coordinates expensive point multiplication twisted curve 
required points merged formulae derivation left exercise reader 
note function 
formally computes numerator denominator 
denominator replaced conjugate implied division replaced multiplication exploiting exponentiation final result power 
xp yp xq yq 

add 
xz 

add 
yp xp 
return full weil pairing algorithm 
note absence final exponentiation 
structure similar tate pairing 
weil 




xp yp 
xq yq 
lg downto 
xp yp xq yq 
ni xp yp xq yq 

pk 
return curves proceeded obtain timings weil pairing curves 
weil pairing precomputation constant second parameter particularly rewarding point multiplication twisted curve expensive include timings case 
table 
timings pentium iv ghz weil pairing curve kf bits bits time ms 
bw observe weil pairing significantly efficient security level precomputation possible 
demonstrated non supersingular mnt curves easily scale security pairing cryptosystems effectively limit 
basic algorithm remains levels security 
proposed method doubling embedding degree reach level security compare alternative approach simple doubling size modulus 
provide experimental evidence support view higher levels security weil pairing efficient tate pairing precomputation possible pairing parameters constant 


multi exponentiation cryptography 
cryptology eprint archive report 
eprint iacr org 

paulo barreto 
private communication 

paulo barreto steven galbraith michael scott 
efficient pairing computation supersingular abelian varieties 
cryptology eprint archive report 
eprint iacr org 

barreto kim lynn scott 
efficient algorithms pairing cryptosystems 
advances cryptology crypto volume lecture notes computer science pages 
springer verlag 

barreto lynn scott 
constructing elliptic curves prescribed embedding degrees 
security communication networks scn volume lecture notes computer science pages 
springer verlag 

barreto lynn scott 
selection pairing friendly groups 
selected areas cryptography sac volume lecture notes computer science pages 
springer verlag 

barreto 
pairing friendly elliptic curves prime order 
cryptology eprint archive report 
eprint iacr org 

blake smart editors 
advances elliptic curve cryptography volume 
cambridge university press 

boneh franklin 
identity encryption weil pairing 
siam journal computing 

boneh lynn shacham 
short signatures weil pairing 
advances cryptology asiacrypt volume lecture notes computer science pages 
springer verlag 

brezing weng 
elliptic curves suitable pairing cryptography 
cryptology eprint archive report 
available eprint iacr org 

dupont enge morain 
building curves arbitrary small mov degree finite prime fields 
cryptology eprint archive report 
eprint iacr org 

dutta barua sarkar 
constructing pairing friendly elliptic curves embedding degree 
cryptology eprint archive report 
eprint iacr org 

galbraith harrison 
implementing tate pairing 
algorithm number theory symposium ants volume lecture notes computer science pages 
springer verlag 

granger page smart 
cryptology eprint archive report 
eprint iacr org 

low teske 
attacks multi prime rsa 
selected areas cryptography volume lecture notes computer science pages 
springer verlag 

ieee std 
standard specifications public key cryptography 
ieee working group 

neal koblitz alfred menezes 
pairing cryptography high security levels 
cryptology eprint archive report 
eprint iacr 
org 

rsa laboratories 
pkcs amendment multi prime rsa 

lenstra 
public key system 
advances cryptology crypto volume lecture notes computer science pages santa barbara usa 
springer verlag 

lenstra eric 
selecting cryptographic key sizes 
journal cryptology 

menezes okamoto vanstone 
reducing elliptic curve logarithms logarithms finite field 
ieee transactions information theory 

miyaji takano 
new explicit conditions elliptic curve traces fr reduction 
ieice transactions fundamentals 

morikawa 
fast implementation elliptic curve cryptosystem prime order defined 
www trans ac 
jp group papers pdf 

pollard 
monte carlo methods index computation mod 
mathematics computation 

rubin silverberg 
supersingular abelian varieties cryptology 
advances cryptology crypto volume lecture notes computer science pages 
springer verlag 

scott 
ftp ftp computing dcu pub crypto cm exe 

scott 
computing tate pairing 
ct rsa volume lecture notes computer science pages 
springer verlag 

scott 
faster pairings elliptic curve efficient endomorphism 
progress cryptology volume lecture notes computer science pages 
springer verlag 
available eprint 
iacr org 

scott barreto 
compressed pairings 
advances cryptology crypto volume lecture notes computer science pages 
springer verlag 
available eprint iacr org 

scott barreto 
generating mnt elliptic curves 
cryptology eprint archive report 
available eprint iacr org 

smith 
luc new public key system 
proceedings ninth ifip international symposium computer security pages 
elsevier science publications 

