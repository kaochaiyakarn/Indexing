visual query systems databases survey tiziana catarci maria costabile stefano levialdi carlo batini dipartimento di informatica sistemistica universit di roma la sapienza salaria roma italy mail catarci batini dis uniroma 
dipartimento di informatica universit di bari bari italy mail ba cnr 
dipartimento di scienze dell informazione universit di roma la sapienza salaria roma italy mail levialdi dsi uniroma 
visual query systems vqss query systems databases visual representations depict domain interest express related requests 
vqss seen evolution query languages adopted database management systems designed improve effectiveness human computer communication 
important features determine nature human computer dialogue 
order survey compare existing vqss querying traditional databases introduce classification features adopted visual representations interaction strategies 
identify user types match vqs classes order understand kind system may suitable kind user 
report usability experiments support claims 
important open problems vqs area described 

visual query systems vqss defined systems querying databases visual representation depict domain interest express related requests 
systems take advantage known high bandwidth human vision channel allowing recognition handling large quantities information possibility visual feedback improve human computer dialogue 
vqss provide language express queries visual format variety functionalities facilitate user system interaction 
oriented wide spectrum users especially novices limited computer expertise generally ignore inner structure accessed database 
years vqss proposed literature see 
adopt range different visual representations interaction strategies preliminary survey 
huge number proposals testify growing interest field 
notice certain confusion identifying vqss broader class generic visual systems 
particular system exhibiting visual interface dealing information repositories falls generic class purpose system discriminatory aspect 
instance toolkits interface design deeply differ vqss information retrieval database querying 
secondly systems dealing image data non structured text data geographical data alphanumeric data dissimilar characteristics kind data influences kind system 
identify precisely vqss interested 
vqss querying traditional databases deal alphanumeric data 
common type data 
opinion analysis basis studies dealing advanced types data maps images video 
main goal survey classify vqss traditional databases 
choosing classification dimensions taken account user point view 
follows primarily interested interactive aspects user system dialogue 
dialogue mainly influenced visual representations displayed screen interaction strategies offered user 
visual representation interaction strategy classification criteria 
organized follows section provides vqs background 
section describes classification criteria 
sections vqss surveyed light classification 
section identify user types match vqss order understand kind system may suitable type user 
report usability experiments support claims 
section discuss formal issues mention vqss addressed 
section highlights significant unsolved problems improve vqss 

background compelling mandates kind interactive system aiming interaction user system system user refer user person working vqs 
system tailored facilitate users performing tasks mind 
characteristics classes users working particular interface tasks users need perform understood 
purpose systems going survey provide access information contained database 
main users tasks understanding database content focusing meaningful items finding query patterns reasoning query result 
tasks require specific techniques effectively accomplished techniques involve typical spatial activities pointing browsing filtering zooming 
consequently say visual user interface adequate tasks user point view working viewpoint see 
rest treat system oriented questions system data model archives organized aspects uninteresting user perspective 
worth noting people interacting computers see system interface 
important component software system design phase onwards 
contrast old fashioned developmental approach interface considered aesthetic point view added stage system development 

database querying interested describing query interfaces general purpose database systems contain alphanumeric data 
database described terms data model set concept types organizing reality interest processed data base management system 
existing data models equipped suitable concept types order represent information 
objects real world meaningful properties charles age 
relationships objects charles married ann 
classes objects class people 
relationships classes objects people live towns 
objects relationships constitute called extension database classes objects relationships classes form called intension database called database schema 
databases designed created modified professionals different people access databases specifically extracting information 
aim special purpose languages called query languages defined 
query language set formally defined operators allow requests expressed database suitably composed 
execution query produces results extracted stored data coherent intended meaning request 
widely database query languages programming languages require knowledge language syntax technical background information system application domain interaction mechanisms 
languages help understand meaning data provide guidance satisfying user needs 
general fulfill requirements user friendliness ease 
growth database users expert novice led development number interfaces different principles main purpose facilitate human computer interaction 
main different approaches suggested 
restricted natural language 
direct manipulation languages characterized visibility objects interest replacement command language syntax direct manipulation objects 
approach difficult apply general purpose database system unrestricted domain outside scope 
second approach interaction style widely existing commercial interfaces 
fact availability low cost graphical devices rise years widespread diffusion products gained popularity due increased visual content 
rapid visual feedback feature direct manipulation interfaces provides evaluative information executed user action 
authors singled number usability features obtained direct manipulation visual techniques shortening distance user mental model reality representation reality proposed computer reduction dependency native language user ease learning basic functionality interaction high efficiency rate obtained expert users partly possibility defining new functions features significant reduction error rate 
direct manipulation successfully conjunction windows icons menus pointers called wimp window icon menu pointer interfaces metaphors adopted increase initial familiarity user computer applications 
wimp interfaces designed querying databases query language operators rendered terms appropriate direct manipulation sequences 
sequences applied formal data model concepts proper external representation concepts easily perceived user see 
representation close reality user lives 
chosen representation visual say presence visual query language 
languages implemented vqss 
seen particular subclass aimed extracting information databases general class visual languages introduced chang 
precisely visual query languages subclass visual programming languages languages constructs visual handle objects necessarily intrinsic visual representation alphanumeric data traditional databases 
note language class singled chang visual information processing languages far purposes conventional languages enhanced subroutine libraries handle objects intrinsically visual images 
subsection devoted expanding kinds visual formalisms interested 

visual formalisms successful sign system conceived humans purpose storing communicating perceiving essential information bi dimensional visual signs diagrams pictures photographs geographic maps 
visual signs characterized high number sensory variables size intensity texture shape orientation color 
instance tufte suggests different purposes color may employed label color noun measure color quantity represent imitate reality color representation decorate color beauty 
exploiting multi dimensionality visual representations people allowed perform single instant visual selection 
constructions example linear text permit immediate grasping entire set correspondences may reconstructed user memory 
main purpose adopting visual representation query system communicate clearly user information content database concentrating essential features omitting unnecessary details 
information internally structured manners mainly depend data model characteristics rendered interface level way user easily grasp 
interface visual representation mapped terms internal database concepts order dealt system 
come dual nature visual representation called visual formalism term introduced david harel follows intricate nature variety computer related systems situations opinion represented visual formalisms visual generated comprehended communicated humans formal manipulated maintained analyzed computers :10.1.1.20.6336:10.1.1.20.6336
visual formalisms include familiar objects tables diagrams icons components visual representations proposed existing vqss see section 
quite obvious importance representation friendliness decreases user experience user technical background allows learn new constructs reasonable effort 
user novice comfortable representations highly desirable prefers interact similar reality lived acquainted existence underlying model 
sections see kind visual representation adopted distinguishing aspect classifying vqss influences subsequent choices human computer dialogue 

classification criteria vqss vqss proposed literature 
section introduce criteria vqs taxonomy 
attempt classify query languages basis ease 
query language taxonomy proposed 
analysis jarke vassiliou include kinds query languages traditional new generation ones senses interaction main distinguishing factor classes 
query languages evaluated basis dimensions functional capabilities usability 
related language power user language alternatives user output presentation 
related query formulation effort user effort system 
analysis concentrate vqss 
order classify systems criterion consider visual representation adopted reality interest applicable language operators query result 
query representation generally dependent database representation way query operands data database constrains query representation 
consider unique classification schema database query representations 
schema systems organized classes depending adopted visual formalism form diagram icon combination described section 
hand visual representation display query result different database representation giving rise different classification see section 
mainly due fact visualized query purpose schema database actual database instances constitute query result displayed user 
goal people working vqs retrieve desired data 
usually accomplished main activities 
understanding reality interest 
goal activity precise definition fragment schema involved query 
generally schema richer subset concepts involved query 
step corresponds identification concepts useful query result query subschema static representation concepts 

formulating query 
query subschema manipulated ways available query operators 
goal query formulation formally express operands involved query related operators 
second criterion proposed vqs classification refers interaction strategies provided perform activities 
illustrated section 
visual representations authors agree visual representations effective expressing different kinds knowledge 
main advantages relies capacity allow perceptual inferences replacing arduous cognitive comparisons computations 
taxonomies visual representations proposed simply rely authors intuitions discusses empirical carried discover elaborate basis people organize visual information 
result classification visual representations eleven categories ranging tables maps icons pictures diagrams different kinds 
analysis existing vqss notice various kinds tables diagrams icons adopted visual representations 
obviously true vqss interested accessing alphanumeric data vqss geographical multimedia systems largely adopt maps pictures 
section describe exemplify different vqs representations 
pioneering systems adopted visual data representations left textual format query 
treated vqss mandatory feature visual mechanisms query formulation 
representation form diagram icon hybrid form diagram diagram icon form diagram icon systems table 
vqs classification database query representation systems offer possibility visualizing query result 
section vqss classified database query representation section classified query result representation 

database query visual representations table shows vqs classification visual representation database query numbers indicate vqs bibliographical 
note remaining classification table includes vqss match features described table 
representations illustrated brief discussion main features visual formalism 
note general term form table 
form form named collection objects having structure 
attempt leave textual mono dimensional space exploiting bi dimensionality screen 
facilitates non expert users capitalizing natural tendency people regular structures organize data tables 
main characteristic computer forms structured representation corresponds abstraction conventional forms 
form seen rectangular grid having components may combination cells groups cells 
form cell smallest unit data referenced user application 
form generalization table sense table components usually elementary cells nesting allowed 
relationships represented form cells subsets set providing user information levels 
allows questions regarding single cells elementary question cell subsets intermediate question set cells question answered 
form representing hotel occupancy year shown 
elementary question percentage clients older may 
answer question may easily seen single correspondence form 
intermediate question percentage female clients winter 
answer comes observing group correspondences form 
question trend room occupation entire year 
initially forms framework relational model prototypical tables visualized queries expressed filling table fields suitable operands 
qbe system adopting form representation intensional part relations shown extensional part filled user order provide example requested result 
form representations intensional extensional part database may manipulated user 
systems allow visualization complex forms zooming mechanisms order focus different parts database schema 
ja fe ma ap ma jun jul au se oc de female clients local clients european clients north american clients south american clients african clients oriental clients vacations business age age age age room occupation 
information hotel clients year redrawn 
example form representation embs interesting approach suggested embs aims overcoming inherent limitation forms visualizing associations data 
embs displays typical elements cells buttons 
cells contain data values organized table may specified user supplying example values see 
selecting button changing cell value triggers data manipulation 
primitive functions provided may combined perform complex actions 
employs form representation wide family models including entity relationship sequel network functional typical object oriented models 
functional query language uses table heading metaphor express semantics language spatial arrangements visual elements express functional combinators 
diagram data contained form may better understood kind graphical representation better show relationships data 
instance rows numbers transformed profile height column proportional value corresponding number see concerning meat production european countries 
furthermore row profiles arranged different ways highlighting relationships data 
right part fits bertin definition diagram graphic diagram correspondences plane established elements component elements component 
word diagram broader meaning referring graphics encode information position magnitude geometrical objects show relationships components 
definition includes notions graphs network charts structure diagrams process diagrams described 
beef lamb horse germany france italy holland belgium germany france italy holland belgium beef lamb horse 
form diagram representing meat production european countries diagrams frequently adopted vqss basic visual components points simple geometrical figures squares rectangles circles 
generally diagram uses visual components correspondence specific concept types 
lines denote logical relationship types elements 
labels included diagrams denotational purposes see example diagram rectangles represent entities model diamonds represent relationships 
diagram modify layout certain rules content show new relationships 
instance means spatial proximity layout may easily convey notion similarity presence kernel concept concepts 
diagram may redrawn stressing role entity person placed central part diagram 
relationships represented means connections special relationships structural relationships conveniently represented inclusions geometrical figures venn diagrams harel :10.1.1.20.6336:10.1.1.20.6336
diagrams emerge popular visual formalism existing vqss 
examples diagrams 
refers super visualizes database schema extension known diagrams 
rectangles entities diamonds relationships arrows special relationships labels linked owner entity relationship attributes 
representations single symbol concept types type identified label name see showing example diagrams grasp 
shows diagram picasso labels denote attributes closed lines represent relations attributes 
representation particularly suited relational model intersection areas bordered closed lines effectively show common attributes relations correspond logical links 
structured symbols adopted interfaces isis see inner rectangles represent component objects outer rectangles denote complex objects 
job city job person born lives person born 
example diagram 
person highlighted important concept loan officer customer account lives city wrt sex person car sex city birth bank amount balance instrument status group re name create subclass create grouping create attribute family re define display membership predicate view assoc 
view contents systems representations vqss adopting diagrams proposed 
systems idea third dimension increase representational power shown precursor general interactive environments developed xerox 
example vqs diagrams query formulation result presentation see subsection shows variety visual representations object oriented database schema 
current implementation detailed view information object obtained double clicking object shown visualization 
causes pop window appear displaying object attributes methods form scrollable lists 
amaze employs display order represent complex schema large number entity classes relationships trying minimize wires meshes problem number intersecting lines boxes 
color encoding technique distinguish different roles entities interaction session 
proposal examines possibility interesting visualization metaphors search tree relevance sphere basic components interface object oriented database system 
concerning aspects related query diagram diagrammatic representations adopt typical query operators selection visual elements traversal adjacent elements creation bridge disconnected elements 
systems super navigation path implicitly expressed transforming query schema tree nodes appear selected order 
proposals allow users define visualization creating tailored displays data 
user defined visualization querying database defining new visualizations 
icon computer science icon defined segmented stylized image 
image segmentation implies extraction single component background refers representation small number significant lines constitute icon 
see instance house icon left simple geometrical shapes 
vqss need represent images real objects concepts actions processes 
want represent computer process forced extend icon scope natural visual counterpart exploit pictorial similarity icon addressed concept 
new icons designed exploiting different correlation modalities analogy convention principle typical symbols semiotic definition symbol see 
see examples going left right second icon designed indicate restaurant analogy third icon convention gasoline station 
summary agree definition icon context computer science icon visually segmented object tells viewer inside message information concept function state mode assigned designer 
aim icon represent remind certain concept diagrams favor visualization relationships concepts denoted means labels 
diagrams description relationships symbols links symbols description links provided ambiguity 
icon significant metaphorical power interpreted visual metaphor red cross white background refers availability medical care 
contrast metaphorical power diagram comes attached labels 
icon iconic vqss sets icons denote entities real world available functions system 
query expressed primarily combining icons spatial syntax 
icon systems represent improvement friendliness human computer interaction 
fact icons allow users easily grasp scenario manipulations 
generally systems database schema shown 
fact vqss mainly addressed users familiar concepts data models may find difficult interpret diagram 
example taken shown icons represent objects electrical appliance database 
initial display shown 
clicking icon representing class objects example video vcr icons representing operations applicable vcr objects shown pop menu see 
house restaurant radiation gas station 
examples icons designing iconic systems crucial problem construct icons express meaning objective humans quite image conveys different meanings different people 
desirable criteria constructing icons carry unambiguous meaning possible 
authors approached problem 
set icon construction principles order eliminate ambiguity due difference icon meaning mental meaning evoked observer 
time standard imposed set icons different applications consequence number icons increases discrimination power tends decrease interpretation icons 
icons controlled composition mechanisms syntax rules 
composition rules described icon operators introduced changing pictorial part actual icon drawing semantic part icon meaning icon creating new icon 

example iconic representation hybrid hybrid representation uses arbitrary combination visual formalisms offering user various alternative representations databases queries combining different visual formalisms single representation 
analysis vqss emerges systems adopt visual formalism predominant 
case system classified adopting representation paradigm specific formalism 
called hybrid vqss different visual formalisms share significance 
highlight various types hybrid representations adopted vqss far representations forms diagrams diagrams icons forms diagrams icons 
parent types attributes attribute ranges predicates subtypes attributes suppliers supplier open orders sales orders parts 
hybrid approach ski customers customer open orders purchase orders case diagrams generally describe database schema 
forms primarily employed show detailed information example properties entity instances formulate queries 
particular forms diagrams proposed ski 
shown screen divided variable number horizontal stripes 
instance top stripe represents parent types may types subtypes schema 
stripe represents attributes parent types shown changed user may scroll view stripes 
stripe may collapsed screen done predicates subtypes stripes 
graph shown illustrates types suppliers customers previously selected user related 
square stripe indicates certain tokens fallen stripe 
arrow user may scroll see stripe find tokens 
vqss diagrams icons diagrams describe database schema icons represent specific prototypical objects generic instance person indicate actions performed 
instance represents schema diagrams icons 
user may visualize schema diagrammatic representation select entity type express complex query may simply formulate query selecting appropriate icons 
cases result query shown icons see subsection 
example query system employing different visual formalisms forms diagrams icons 
tree structures interactively constructed user formulates query 
subject initially chosen shown root 
successive step new level added tree corresponding choice specific query 
appropriate symbol placed name node represents information explicitly stored database 
information node tree visualized means form menu icons provided allowing specific actions performed 

query result visual representations similarly graphical user interfaces vqss developed far stressed mainly user input aspects interaction little thought output data visualization 
results usually means structured text considering possible display formats 
conversely appropriate visualization query result allows user better capture relationships output data 
vqs classification basis representation primarily visualizing query results shown table 
representation systems form diagram icon hybrid form diagram table 
vqs classification query result representation 
result representation qbd form enclose systems show result organized tables general lists easily scrolled 
class populated table typical representation relational model 
example qbd presents query results relational tables compact form visualizing distinct values 
useless confusing duplication values avoided see user request visualize attribute values moment simple click mouse 
diagram techniques explained section word diagram broad meaning referring graphic encodes information position magnitude geometrical objects 
kinds diagrams employed different vqss visualize query result 
vqss see show query result kind graph formulating query filling graph nodes appropriate values 
amaze vqss employing graphs 
data shown snapshot dimensional results 
different methods result visualization planned available user 
employs tree structures cone tree approach 
powerful result visualizations provided 
refers real estate database houses washington area 
retrieved houses indicated bright points washington map displayed screen 
system described called filmfinder visualizes information movies means starfield displays show database objects small selectable spots points figures 
displayed data filtered changing range values cartesian axes 
query result fits single screen system recomputes quickly second new data display response user requests 
property called near real time interactivity ensures high usability 
icon representations icons visualize query result 
example shows set occurrences entity means copies icon representing entity identification label attached copy icon distinguish occurrences 
effective want quickly know kind data retrieved 
user finds entity occurrence special interest obtain connected relationship occurrences represented terms icons 
said section hybrid representation offers user various alternative visualizations 
super browser provides data display modes implemented 
result query returned browser order user 
form mode occurrences object relationship types displayed form representations graphical mode diagrams show currently examined occurrences directly manipulated users 
effective system adapt presentation current task domain user order accomplish different presentation modalities contain knowledge elements task domain user 
way information best modality fully perceived understood 
proposes multimodal interface visual interaction style natural language style vqss implementing graphical presentation module chooses graphics better express data visualized 
module allows graphs displayed output window manipulated graphical operators 
interface system collects visualizes data air pollution output graphics consist thematic maps cities graphs bar charts xy plots area plots multi bar charts pie charts map animation 
idea graphical presentation module originated pioneering system information display automatically draws graphical presentations information 
new proposal query result simulation real environment virtual depicts situation familiar user 
case novel system provides user visual representations query formulation result visualization 
possibility features results simulated reality setting 
example database refers books library virtual library represented physical locations books indicated icons presentation book stacks library 
qbi vqs uses kind result presentation provides suggestive visualization power specialized graphic workstations 

comparison interaction strategies section process data retrieval decomposed main activities understanding reality interest formulating query 
analyze activities classify vqss terms specific strategies accomplishing 
note vqss allow strategy activity 

understanding reality interest classification vqss strategies understanding reality interest shown table 
strategies grouped main classes top browsing schema simplification 
understanding strategy systems top browsing schema simplification intensional extensional mixed view extraction model view extraction different model table 
vqs classification understanding strategies understanding reality interest may complex task database schema hundreds thousands concepts extension database millions billions instances 
needed mechanism filter information considered significant user 
may achieved means top strategy general aspects reality perceived specific details may viewed 
top strategy implemented ways 
seen sequence iterative refinements system provides schema library top refinements 
refinement obtained previous means transformations applied atomic objects result detailed structures 
way provide selective hierarchical zoom 
case selective zoom schema unique concepts layered terms levels importance schema examined levels objects specified importance level visible 
user graphically edit schema irrelevant objects removed screen 
see example session guide 
schema represents current population survey contains comprehensive data individuals families households 
entity person focus concept concepts highest importance level represented appearing schema distance radius person 
shows schema importance level set radius 
case hierarchical zoom schema unique objects may examined different hierarchical detail levels 
example hierarchical zoom escher 

intensional 
performed schema database conceptual schema 
approach followed example qbd corresponds schema structure asking existing paths connecting concepts specifying conditions length path presence particular concepts asking concepts possess properties group concepts selecting neighbor concepts 

extensional 
performed extension database 
different approaches may pointed 
example consists showing occurrences database vertices graph edges represent existing links occurrences 
second adopted example super starts intensional schema database selects object browses instances 
particular kind browsing provided lid living database 
user lives inside single tuple sees database perspective tuple 
starting session user selects entity chooses list entity tuples tuple wants reside called current tuple 
system shows relationships tuple participates related entities 
tuple linked entity selected new current display changes new perspective 

mixed 
case browsing activity may performed intensional extensional part database 
example kiwi user interface possible drawbacks browsing paradigms inefficiency short sighted navigation overcome introducing models internal model interaction model display model represent information 
particular interaction model partitions object neighborhood homogeneous subsets defines suitable structures ease presentation interaction object descriptions 
alternative approach top refinement browsing schema simplification 
idea bring schema close query 
done building user view resulting aggregations transformations concepts original schema 
top approach possible locate concepts exactly match initial schema different levels abstraction schema simplification approach user may build proper view original schema extracted schema levels abstraction 
approach followed qbd view data model exactly matches initial data model 
approaches view model different initial model better query representation produced 

formulating query query formulation fundamental activity process data retrieval 
table provides comparison vqss different strategies formulating query 
query strategy schema navigation characteristic concentrating concept group concepts moving order reach concepts interest conditions may specified 
strategy differs type path followed navigation described 
query formulation strategy systems schema navigation subqueries matching range selection arbitrary connected path connected hierarchical path unconnected path composition concept stored queries example pattern table 
vqs classification query formulation strategies 
arbitrary connected path 
approach user navigates arbitrary path database schema order select concepts involved query 
example oql object oriented query language database represented means semantic diagram 
oql query expressed browsing semantic diagram object classes selecting intensional pattern interest classes associations 
point selections performed specifying restriction conditions involve attributes single class inter class clauses performed comparing attributes classes 

connected hierarchical path 
case user focuses concept database system builds hierarchical view database selected concept root 
example user selects root concept determines direction involved relationships 
relationship attributes assigned entity lower level hierarchy 
user provides selection conditions 
conditions attributes root entity specified involving related entities 
worth noting different root entities may specified query giving rise different views 

unconnected path 
previous examples neighbor concepts may reached starting central concept paths explicitly represented schema 
user may interested reaching concepts building new relationships 
approach typical relational systems called outer join operator 
example user starts selecting entity name list 
system draws screen empty table entity set specifying attribute names 
step step user builds query deleting non relevant attributes writing conditions select entities 
outer join operator expressed entity relationship model 
example qbd query primitive available allows joining entities explicitly linked schema 

unconnected path qbd second strategy query formulation subqueries 
case query formulated composing partial results 
different approaches outlined 
composition concepts 
approach followed iconic languages output concepts query produced composing input concepts 
way queries specified overlapping icons 
operation selecting icon overlapping icons interpreted particular chain operations database 
shows query formulation 
query show weight hi fi vcrs video price equal cheaper select lightest 
vcr icon front panel typical video recorder selected icon area moved retrieval area point icon set operation vcrs shown see 
icon representing price selected overlapped vcr icon 
condition price specified setting range values see 
hi fi icon appears icon set operation restriction hi fi vcrs performed overlapping mechanism 
icon showing schematized scale representing weight superimposed weights displayed lightest selected 

stored queries 
case queries composed subqueries stored system library previously computed query session 
example subqueries represented terms parametric skeleton furthermore possible store result query execution expressed turn called named query 

overlapping icons third strategy query formulation matching 
idea presenting structure possible answer matched stored data 
main approaches 
example 
alternative approach traditional querying procedure user formulates request system retrieves answer user may provide example answer system identifies goal generalizing example 
known application approach qbe 
querying environment user specifies set tables tuples example requested answer 
system starting example identifies query responds filling tables tuples match example 
query paradigm followed system idea integrating browsing functionalities generalization mechanism capturing abstractions needed constructing queries examples 

pattern matching 
approach user provides pattern system looks fragments database matching pattern 
pattern expressed means labeled query graph see top label regular expression match edge labels simple paths graph representing database 
label ca na specifies request routes airline network subpaths turn set canadian airlines ca flights followed national airlines na flight 

pattern matching strategy query formulation range selection allowing search conditioned range multi key data sets performed 
query formulated direct manipulation graphical widgets buttons sliders scrollable lists widget key 
interesting implementation technique proposed called dynamic query 
user indicate range numerical values range slider sequence names alphabetically ordered alpha slider 
query new query easily formulated moving position slider mouse supposed give sense power fun user challenged try queries see result modified 
usually input output data type may coincide 
application dynamic queries shown refers real estate database 
sliders location number bedrooms price houses washington area 
user moves sliders find appropriate houses 
interesting application filmfinder allows information movies retrieved providing names actors movie directors user select values slider choice determines set values selected called tightly coupled slider 
prevents users specifying null sets 
uses dynamic queries see 

vqs users nowadays designing interactive systems focus attention shifted user term user centered coined denote fact 
order user centered development vqs interactive system carried emphasizing points 
identification users needs 
usage information develop system suitable interface meets users needs 
usability evaluation validation tests system 
vqss developed far completely followed guidelines 
furthermore scarce attention range users interact system system adapt different types users 
order satisfy points section concentrate significant features potential vqs users provide classification skills needs 
having analyzed different vqss classified believe important understand kind system may suitable type user 
focus analysis visual representations characterizing aspect vqss compare different representations discussed section various classes vqs users 
partially supported experiments report section conducted vqs order evaluate usability 
unfortunately authors report usability trials vqss 

user classes type user benefit availability advanced vqss database systems generally called casual user 
authors expression stressing feature basic characteristic class users 
set attributes roughly characterize casual users provided unfortunately characterized group people emerges 
features users common help specify requirements needed new generation query systems order match needs 
typically casual user interacts computer occasionally little training computer usage low tolerance formal query language unfamiliar details internal organization information system 
feel characterization casual users broad leads class wide differences members try identify database users precisely 
users initially distinguished type computer training working activity 
professional users job mainly concerns operating computer applications 
possess wide spectrum skills programming languages database management systems non professional users invest time computer training usually learn query languages doing 
evident non professional users obtain major advantages easy query systems may facilitate incremental learning process 
concentrate introducing features compared basic types vqs representations discussed section see 
non professional users firstly grouped basis frequency interaction system 
classification corresponding criterion terms occasional vs frequent users 
iconic vqss suitable occasional users learned sophisticated access protocols database representations closer reality live 
diagrammatic systems appear helpful occasional users require learning specific data model 
competitive frequency interaction increases 
usually provide set predefined queries form systems satisfy requirements frequent users 
second criterion classifying non professional users refers variance query usually perform 
repetitive users tend express queries having similar pattern similarity may concern query structure clerk booking flights travel agency types operators involved query statistician needs express aggregations changeable summary attributes category attributes 
users unpredictable needs terms data want retrieve 
example general manager may need unusual types correlation data production data personnel 
query known user form representation looks suitable access performed simple menus may denote names bounded set queries 
queries iconic diagrammatic vqss advantageous provide user easy navigation query space 
previous criteria applied give rise finer classification allows refer typical roles organizations 
frequent repetitive users correspond administrative clerks secretaries 
typically real systems interact menus forms choose query limited predefined set possibilities 
fre user quency eat ures interaction variance query structural complexity query familiarity database semantic domain frequent values user feat ures occ na familiar unfamiliar appropriate vqs ype iconic vqs diagrammatic vqs form vqs 
classification criteria non professional users representation paradigms vqss occasional users tend delegate process query formulation professional expert users lack motivation spend time intellectual efforts perspective benefits 
vqss powerful friendly training mechanisms stimulate curiosity gradually capture attention 
examined survey systems specifically address needs users see 
frequent users usually managerial role motivated autonomous interaction system 
ideal environments type user flexible powerful systems provide alternative strategies users may choose skills 
occasional repetitive users users seldom querying posing similar requests database correspond meaningful real life professional figures 
third criterion orthogonal previous ones concerns structural complexity query 
naive users range needed operations limited may require full power query language 
sophisticated users need express queries may require deep understanding underlying computation process query language 
iconic languages appropriate naive users provide immediate mechanisms express simple queries 
structural complexity query increases powerful operators needed consequently diagrammatic languages suitable 
final criterion concerns users familiarity database semantic domain 
familiar users acquainted available data concern express needs query language 
example traveler consults list flight bus train schedules organize trip obviously clear notion concepts flight departure time arrival time may strong difficulties understanding logical links physical representation involved concepts 
typically train schedules departures arrivals represented tables case long routes schedule split tables logical link expressed train code 
consequently hard follow entire route 
conversely unfamiliar users general idea contents database 
need help system understand reality interest 
unfamiliar users greatly gain iconic vqs may easily perceive representation reality interest 
especially true simple widely known semantic domains 
piece reality involved information system complex detailed number icons needed cover domain increases consequently discriminating power tends decrease 
cases diagrammatic systems offering immediate representation suffer saturation phenomenon form vqss effective elementary domains 
hybrid representation combines different characteristics vqss provides principle best visual communication means majority users supplying different interaction modalities 
instance recalling strategies available user may interact diagram representing entire database schema individual icons representing specific concepts 
process query expression user switch different representations preferences needs 
user taxonomies literature briefly compare classification 
authors distinguish main criteria interaction capability function familiarity programming concepts frequency system usage task structure function application knowledge user knowledge contents structure database range operations operations user requires 
criteria classify types users distinguish professional non professional users concentrate consideration features 
feature structural complexity query corresponds range operation criterion 
take account frequency system usage call frequency interaction focus semantic domain familiarity application knowledge non professional user may aware database database contents knows database structure 
furthermore believe possibility query worth considering non professional users typically perform repetitive queries 
information may usefully stored advanced query system capable adapting user interacting described system allowing multiparadigm access databases exploiting form diagram icon representations proposed 
paradigm virtual reality included multiparadigm framework 
multiparadigm interface described 

usability experiments different definitions usability exist literature 
particular comprehensive definition usability extent product efficiency effectiveness satisfaction specific users achieve specific goals specific environments 
precisely effectiveness refers extent intended goals system achieved efficiency time money mental effort spent achieve goals satisfaction depends comfortable users feel system 
point view usability major component quality interaction user system 
usually measure factor determining quality interaction provided 
effectiveness evaluated relating goals subgoals system accuracy completeness goals achieved 
case vqss main goal extract information database performing queries accuracy achieving goal generally measured terms accuracy query completion user correctness rate writing queries 
measures efficiency relate level effectiveness achieved expense various resources mental physical effort time financial cost principle user organization point view considered 
user efficiency frequently measured terms time spent complete query 
measures query accuracy response time evaluated quite precisely 
frequently done recording real users performing predefined tasks system analyzing recorded data directly observing user 
common tasks query writing query reading performed investigating relationships database queries expressed natural language queries expressed system study 
query writing question query natural language easily user express query language statements question query reading query expressed query language statements user express query easily natural language kinds measures defined evaluated precision 
measures satisfaction describe comfort acceptability system 
learnability product may measured comparing usability product handled user time scale 
flexibility product assessed measuring usability different contexts 
vqss comparison qbe sql mainly reported literature 
previous studies showed better user performances qbe respect sql query reading query writing tests 
qbe sql compared account factors database management system similar environment interesting note query language type affected user performance pencil tests case qbe users higher scores sql users 
line tests user accuracy affected type language adopted user satisfaction greater qbe efficiency better 
language dynamic queries see section tested query languages providing form fill input method 
languages called fg graphical visualization output ft fully textual output 
alternative interfaces chosen find aspect dynamic queries major difference input sliders output visualization 
tasks performed user concerned basically selection elements satisfy certain conditions 
subjects asked find trend data property find exception trend 
hypothesis dynamic queries language perform better fg ft interface confirmed 
similarly fg interface produced faster completion times ft interface 
particular task finding trend possibility getting overview database dynamic fg interface major difference 
searching exception dynamic interface performed significantly better fg ft ones 
due advantages offered visualization sliders 
visualization allowed subjects see exceptions easily showed screen sliders allowed quickly change values find correct answer 
experiments conducted see compare diagrammatic query language qbd sql qbi iconic query language 
objective studies measuring understanding comparative effectiveness efficiency subjects construct queries sql diagrammatic iconic languages 
experiments designed determine significant correlation query class query language type type query language experience user 
subjects undergraduate students secretaries professionals having different levels expertise 
results comparison qbd sql confirmed intuitive feeling visual language easier understand traditional textual language novice users expert ones 
experts errors sql mainly due need remembering table names precise syntax 
working qbd users gain looking diagrams 
davis proved advantage availability diagrams users database background opposed traditional textual representations 
basis figures obtained comparing qbd qbi say expert users perform better qbd system small difference exists concerning performance non expert users slightly better qbi 
discover noticeable differences class queries containing cycles better performed qbi class queries containing paths better performed qbd considering query classes 
differences involve time accuracy totally independent skill users 
second case difference due fact paths explicitly represented schema qbi sequences icons user perceives path unique complex function sequence single steps 
considered queries containing cycles noticed query involves attributes belonging concept qbd users confused qbi ones 
due fact qbd user navigates diagram concept graphical symbol met twice 
qbi query contains concept twice user sees distinct icons screen misled manipulating right occurrence concept right icon 

formal aspects years research vqss moved realm ideas design real systems 
proposals emphasized aspects related user interaction ease learning focusing formal aspects query languages syntax semantics expressive power 
query languages usually examples query formulation making study language expressiveness comparison languages difficult 
survey mainly interested user oriented aspects vqss give rise classification sections 
significant vqss addressed formal issues worth mentioning 

syntax semantics popular way specifying syntax traditional programming languages textual query languages bnf notation 
formal syntax definitions rare case vqss visual languages general bi dimensionality languages exceeds capabilities string grammars 
semantics operational usually expressed exploiting simple rewriting rules translating proposed language defined target language 
obviously target language turn semantics procedural denotational algebraic axiomatic semantics inherited visual language 
vqss take relational model formal counterpart having relational algebra calculus target language 
example qbe visualization relational calculus set operations described syntax visual operations referring equivalent textual constructs 
analogously qbd mapping graphical operations textual language described syntax textual language formally defined 
semantics textual language terms relational algebra qbd relational algebra semantics 
instance mapping relational schemata selection path person lives city see equivalent textual format select person find city lives corresponds relational algebra expression attr person person lives city 
person lives 
path selection qbd city vqss kind logic target language exploiting expressive richness sound formalization logic formalisms 
query languages introduced 
called pim algebra diagram second pim calculus logic 
languages shown equivalent expressive power 
formal specifications syntax languages 
semantics graphical operations specified logical expressions 
hy query visualization system 
structure formally extends notion graph incorporating blobs addition edges 
blob relates containing node set contained nodes relating node node edges 
possible assign semantics relationships represented blobs meaning interpretation blob labels 
visual queries supported hy system expressions graphlog query language suitably extended 
graphical query final set query 
semantics graphical queries translation stratified linear datalog 
stratified datalog extended universal quantification rule bodies language describing semantics 
similarly log datalog programs represented colored graphs body rule colored red head colored green 
directed labeled graphs colors represent database schemata instances 
nodes instance graphs stand objects edges indicate relationships values 
logic describing semantics rule language supports user defined data visualizations visual queries integrated way 
vqss refer programming language constructs formalizing behavior 
instance described language interacting object oriented schema intensive data model 
consists set graphical primitives combined create graphical queries 
semantics graphical primitives translation statements object oriented programming language supported underlying dbms 
case graphical syntax simplifies formulation complex queries hardly composed traditional languages 
shows formulation query find assemblies needles manufactured manufacturers seats 
query built selecting assembling pre defined graphical primitives representing classes manufacturer link interaction link notion similar relationship attributes 
variable different attribute primitives meaning value variable 
syntax grammar combining primitives specified 
set textual constructs corresponding visual primitives provided formal bnf grammar developed creating valid query expressions textual predicate language 
way authors chosen indirectly specify pictorial grammar combining visual language primitives 
describe graphical language extended model 
operator language defined providing language name argument list semantics terms set procedures operating database objects written pascal language 
language extended model hql eer 
language peculiar characteristic allowing user formulate queries graphical textual elements 
syntax semantics hybrid textual graphical sentences formally defined programmed graph rewriting systems 
restricted number vqss provided formal semantics referring target language 
operational semantics directly provided database querying hypergraph manipulation note different visual query languages exist sharing name 
proposed mohan kashyap described 
basic direct manipulation primitives ips composed sequenced build meaningful queries defined 

query formulation proposal visual query language syntax semantics clearly stated 
authors effort provide formal specifications working directly language defined called equivalent textual language 
declarative graphical query language functional data model 
authors approach formalization consists abstracting world graphics concentrating world sets functions called base structure describes various constructs 
possible base structure instances correspond legal queries syntax rules expressed truth value formulae imposed 
semantics operational showing translate instances list comprehensions variant lambda calculus expressions defined semantics 
papers worth mentioning attempting provide general formal foundations diagram query languages 
graphical data model graph model visual representation part model minimal set graphical primitives terms general query operations may visually expressed proposed 
graph model graphical primitives visual syntax set theoretical semantics 
easily basic constituents complex existing visual representations visual query languages giving formal semantics independent underlying data model offering common comparison framework 
analogously theoretical framework visual interaction databases having visual syntax operational semantics 
main feature approach adoption particular kind hypergraph structure modeling hypergraph powerful representation tool able capture features existing data models 
notable characteristics uniform unified representation intensional extensional aspects databases direct representation containment relationships immediate applicability direct manipulation primitives 
new data model new representation language provides syntactic rules describing structuring mechanisms data models 
queried formal systems closed queries 
represent formal tool existing compared expressing visual primitives terms query system 

expressive power expressive power query system ability system extract information database basic aspect vqss stressed aho ullman 
meaningful classes queries investigated giving rise called chandra hierarchy 
different vqss referred literature formally characterized terms expressive power query languages 
subsection briefly discuss enlarged chandra hierarchy show position vqss inside different classes queries see deeper discussion subject 
significant class queries inside chandra hierarchy class order queries due codd 
order logic fairly expressive term completeness indicate query language express order queries 
soon apparent amount expressive power provided language adequate express useful queries transitive closures 
example zloof considered adding primitive transitive closure qbe 
classes higher expressive power fixpoint queries aim enriching relational algebra fixpoint operator allowing subcase express transitive closures binary relations 
class horn clause queries logical paradigm comparable relational algebra queries class expressed class 
instance database containing information people parents spouses ask ancestors person horn clauses language query expressed relational algebra relational algebra allows obtain list people horn clauses 
extension horn clause queries yields stratified queries express order queries proper subset fixpoint queries fixpoint queries obtained augmenting standard relational algebra fixpoints 
stratified queries include order transitive closure queries interesting queries corresponding path accessibility problem boolean circuit families 
furthermore finding fixpoint queries computable stratified datalog program hard task 
fixpoint queries finite structures databases expressible stratified logic programs related need fixpoints universal quantifiers happens problems determining winning strategies players certain game considered marginal need point view potential user query system 
stratified datalog largely considered new benchmark theory query language expressive power relational algebra past 
languages friendly express queries order important majority queries database systems simple 
consequence position existing visual query languages inside chandra hierarchy unbalanced 
hand growing attempt design powerful vqss powerful stratified datalog easier resulting populated area class fixpoint queries 
hand visual query languages developed far high expressive power directed casual users mainly interested friendly expressing simple queries 
see expressive relational algebra placed upper levels hierarchy 
show detailed hierarchy enriched addition new classes shown gray hatched boxes 
generalized transitive closure queries 
correspond class queries obtained extending relational algebra generalized transitive closure operator transitive closure operation cycle conditions extended boolean expressions equality inequality operators 
proven equivalent stratified linear queries non deterministic logarithmic space queries assuming ordering domain 
vqss falling class 

graph queries 
correspond queries expressible diagrammatic query languages graphlog involve computation simple paths directed graphs 
order queries special purpose operators calculus special purpose operators calculus graph queries computable queries fixpoint queries positive monotone inflationary order queries relational algebra generalized transitive closure queries stratified linear queries conjunctive queries restricted join queries select project queries stratified queries horn clause queries datalog 
classes queries enriched chandra hierarchy 
order queries enriched special purpose operators 
obtained enriching relational algebra operators compute new database values applying aggregation counting functions 
example queries find global amount salaries employees 
vqss class 

calculus queries 
obtained calculus 
calculus similar relational calculus defined difference atoms containing different object sets entity sets relationship sets allowed object sets explicitly related schema interest 
see examples kind vqss 

calculus queries enriched special purpose operators 
analogously case obtained enriching calculus operators aggregation counting functions 
vqs class 

restricted join queries 
obtained relational operators select project plus join operator applied object classes explicitly related database 
vqs allowing kind queries 
attempts build powerful vqss retaining time friendliness 
expressive power vqss clearly stated 
proposal direction tabular language functional data model recursive queries allowed 
queries formulated means hierarchical views views expressed recursively entities previously defined views 
visual language pasta proposed 
expressive power aims covering class computable queries unfortunately formal proof conjecture provided 
language allows graphically express simple recursion single entity duplicating entity copies linked relationship different roles 
unfortunately claim completely visual system reduced simulation texts boxes containing words 
different approach followed language specification graphical interfaces introduced 
language interface nested relational databases described interface allows express queries piecemeal manner constructing new relations basic operations underlying formalism 
different case represented pim semantics graphical operation logical expressions 
examining query language characteristics pim express order queries evidence deductive capabilities claimed authors 
language able express fixpoint queries 
probably friendly novice users retains rule oriented query formulation style mainly intended intermediate layer top application driven user interfaces built 
traditional query languages normally compared terms expressive power similar analysis rarely performed visual query languages 
languages adopted qbd compared proven include class languages allow generalized transitive closure queries 
final take account cases user queries precise specific 
sophisticated users express request vague imprecise condition retrieve suppliers small parts introduced products 
conventional database systems handle vague queries directly 
vqss usually equipped mechanisms browsers performing exploratory searches help users incrementally specify queries 
browsing users gain insight contents organization database 
furthermore powerful visualizations provide feature filtering data overview displays means simple mechanisms zooming 
user starts visualizing data set modifies view show data portion interest 
concept progressive query proposed user able directly compose query result fully satisfies needs formulate query progressively step step asking general questions obtaining preliminary results revisiting outcomes direct query order extract result interested 
note appropriate visualization preliminary result provides significant feedback user useful suggestion right way proceed ultimate query 

open problems goal vqs design build interfaces allow users easily communicate requests obtain satisfactory answers 
different users different preferences coerced system vqs provide different ways expressing queries eventually adapt single user 
general objective creating friendly powerful query systems implications 
instance system interface allow user interact system previous training 
query language powerful permit principle computable queries expressed type data retrieved 
implicit information deduced system provide user right answer declare ignorance certain fact 
order sure query successfully answered system provided metrics user satisfaction 
unfortunately various open problems exist presently available systems respect issues currently investigated researchers 
conclude scanning issues appear significant design generation vqss note peculiar vqss ones common generality query systems 

improvement available visual representations third dimension animation virtual reality features 

extension available data types natural language texts geographic maps images sounds 

generation user model formally describes user interests skills dynamically maintained system analysis story interactions 

definition appropriate metrics methodologies evaluate system usability 

experiments system prototypes final version real users validating evaluating usability 

provision formal semantics 

enrichment expressive power powerful classes chandra hierarchy 

definition different query hierarchy concept usefulness various queries users compared chandra hierarchy find significant intersections 

mechanisms inferring implicit knowledge stored facts 

handling indefinite knowledge metaknowledge multiple agents approximate questioning queries allowed specify exactly desired result issues crucial enormously growing diffusion network communication world wide web digital commerce connect type users 
users need locate types information ranging unstructured documents pictures structured data residing database management systems 
access mechanisms provided various types information different need integrated homogeneous systems order allow people fully get hold internet information treasure 
vqss equipped visual representations data schemata instances direct manipulation query mechanisms browsing facilities profitably accessing data sources internet 
require developments issues retrieval tools able overcome existing dichotomy browsing querying respect structured unstructured data 
addition building effective metaphors ease user learning effort help mental model data query enable fully understand software working interface application levels allowing easily perform correct queries 
aspects significant design successful vqss related technological progress particular evolution special purpose fast processors extended memory planes devoted color reconfigurable architectures new interactive devices sophisticated mice gestural tactile sensors pointing tools allow integrate multimedia system possibilities improved human computer communication oriented expression simple natural correct queries place human beings center system design process 
acknowledgments anonymous referees extremely helpful comments 
due paola help preparing classification tables 
partially supported murst 
visual query systems 
ahlberg shneiderman visual information seeking tight coupling dynamic query filters starfield displays 
proc 
acm conference human factors computing systems chi boston usa pp 


su lam oql query language manipulating object oriented databases 
proc 
xv vldb conference amsterdam pp 


andries engels hybrid query language extended entity relationship model 


catarci santucci qbd fully visual query system 
journal visual languages computing 

atzeni chen completeness query languages entity relationship model 
proc 
nd int 
conference entity relationship approach information modelling analysis chen ed washington north holland pp 

maio rizzi visionary visual query language user viewpoint approach 


visual languages 
tech 
report dept computer systems sciences royal institute technology stockholm university sweden 

boyle gray wimp development amaze 


bryce hull snap graphics schema manager 
proc 
ieee conference data engineering los angeles usa pp 


burns malhotra whang aerial ad hoc entity relationship investigation learning 
proc 
ieee int 
conf 
systems man cybernetics 

carey haas williams integrated query browser object databases 
proc 
vldb conference bombay pp 


catarci santucci grasp graphical system statistical databases 
proc 
ssdbm conference charlotte north carolina usa pp 


catarci database querying hypergraph manipulation 
interfaces database systems sawyer ed series workshop computing springer verlag london pp 


chang tauber yu yu visual language compiler 
ieee transaction software engineering 

levialdi expert visual query system 
journal visual languages computing 

clark wu dataflow query language relational databases 
information management 

consens mendelzon graphlog visual formalism real life recursion 
proc 
th acm sigact sigmod symp 
principles database systems pp 


consens mendelzon hy query visualization system 
proc 
acm sigmod conf 
management data pp 


cruz visual language object oriented databases 
proc 
acm sigmod conf 
management data 

cruz mendelzon wood recursive queries recursion 
proc 
nd int 
conference expert database systems pp 


elmasri embley rusinkiewicz graphical data manipulation language extended entity relationship model 
ieee computer 

embley reddy rusinkiewicz visual query language data model 
proc 
int 
workshop visual languages roma italy pp 


dar gehani jagadish queries object oriented graphical interface 
journal visual languages computing 

di felice dynamic query interpretation relational databases 
information systems 

query browsing examples 
unpublished manuscript 

friendly graphical environment interacting data knowledge bases 
proc 
rd human computer interaction conference boston usa pp 


andersson dupont fontana gentile spaccapietra super visual interfaces object relationship data models 
journal visual languages computing 

deux 
story 
ieee trans 
knowledge data engineering 

ellis hotels bridging gap user system views database 
interfaces database systems sawyer ed series workshop computing springer verlag london pp 


elmasri larson graphical query facility er databases 
proc 
th international conference entity relationship approach chicago illinois usa pp 


elmasri wiederhold formal high level query language entity relationship model 
proc 
nd int 
conf 
entity relationship approach washington usa pp 


embley natural forms query language 
acm transactions database systems 

epstein query language journal visual languages computing 

fogg lessons living database graphical query interface 
proc 
acm sigmod conference management data pp 


goldman goldman kanellakis zdonik isis interface semantic information system 
proc 
acm sigmod conference management data pp 


nilsson icon presentation module database 
proc 
th int 
conf 
entity relationship approach roma italy pp 


gyssens paredaens van gucht graph oriented object model database user interfaces 
proc 
acm sigmod conference management data atlantic city usa pp 


rosenthal visual interface functional model recursion 
proc 
th int 
conference large databases pp 


medusa multimodal database user interface framework supporting user learning user interface evaluation 
interfaces database systems cooper ed series workshop computing springer verlag london pp 


hild poulovassilis implementing hyperlog graph database language 
journal visual languages computing 

houben paredaens graphical interface formalism specifying nested relational databases 
visual database systems ed north holland 

bags viewers metaphor structuring database browser 
interfaces database systems sawyer ed series workshop computing springer verlag london pp 


comic system conceptual modelling information construction 
technical report university tampere finland 

concept graphical language conceptual modelling data base 
proc 
ieee workshop visual languages pittsburgh usa pp 


kim korth silberschatz picasso graphical query language 
software practice experience 

king melville ski semantic knowledgeable interface 
proc 
th int 
conference large databases singapore pp 



klein kramer graphical query system data models binary relationship types 
proc 
ifip third working conference visual database systems lausanne switzerland pp 


kuntz gist graphical interactive intelligent utilities knowledgeable users data base systems 
sigmod record 

kuntz pasta graphical query language direct manipulation cooperative queries full expressive power 
proc 
fifteenth int 
conference large data bases amsterdam holland 

larson visual approach browsing database environment 
ieee computer 

larson interface novice infrequent database management systems users 
proc 
national computer conference 
mark graphical query language binary relationship model 
information systems 

marti toffoli graphics natural language integrated user computer interfaces 
proc 
int 
workshop advanced visual interfaces avi world scientific singapore pp 


chrysanthis visual query completely encapsulated objects 
proc 
fifth int 
workshop research issues data engineering taipei taiwan pp 


mcdonald stonebraker cupid friendly query language 
proc 
acm pacific conf pp 


miura completeness visual operations semantic data model 
data knowledge engineering 

mohan kashyap visual query language graphical interaction schema intensive databases 
ieee transactions knowledge data engineering 

motro design object oriented browser 
proc 
nd conference expert database systems kerschberg ed benjamin cummings publishing vienna virginia usa pp 


graphic interface relational databases 
technical report university roma italy 

visual data model 
journal data knowledge engineering 

ozsoyoglu wang relational calculus set operators equivalent graphical languages 
ieee software engineering 

king syntax semantics graphical query language 
journal visual languages computing 

paredaens tanca log graph query language 
ieee knowledge data engineering 

automatic cooperative visual database interface 
proc 
ifip third working conference visual database systems lausanne switzerland pp 


ramos design implementation graphical sql generic capabilities 
interfaces database systems cooper ed series workshop computing springer verlag london pp 


kennedy dimensional interface object oriented database 
interfaces database systems sawyer ed series workshop computing springer verlag london pp 


zoo direct manipulation interface object oriented knowledge bases 
tech 
report research group inform university stuttgart germany 

rogers cattell entity relationship database user interfaces 
proc 
th int 
conference entity relationship approach new york usa 

shirai kunii sophisticated form oriented database interface non programmers 
visual database systems ed north holland pp 


williamson ahlberg queries database searching manipulation 
proc 
acm conference human factors computing systems chi monterey california pp 


shu formal forms oriented visual directed application development system 
ieee computer 

burns malhotra whang graphical query language entity relationship relational database 
data knowledge engineering 

tsuda hirakawa tanaka ichikawa iconic browser iconic retrieval system object oriented databases 
journal visual languages computing 

interactive query language define hierarchies 
proc 
rd international conference entity relationship approach 

subrahmanyam formal basis graphical user interfaces relational object databases tech report case western reserve university cleveland oh usa 

wegner escher interactive visual handling complex objects extended nf database model 
visual database systems 
eds 
north holland pp 


wong kuo guide graphical user interface database exploration 
proc 
viii vldb conference mexico city pp 


zhang mendelzon graphical query language entity relationship databases 
proc 
rd int 
conference entity relationship approach pp 


zhao muller integrated approach task oriented database retrieval interfaces 
interfaces database systems cooper ed series workshop computing springer verlag london pp 


zloof query example database language 
ibm syst journal 
related 
ahlberg williamson dynamic queries information exploration implementation evaluation proc 
acm conference human factors computing systems chi monterey california pp 


aho ullman universality data retrieval languages 
proc 
th acm symp 
principles programming languages pp 


catarci santucci qbd graphical query language recursion 
ieee transactions software engineering 

methodological issues interface design user centered approach 
tech 
report di ds universit degli studi di roma la sapienza 

catarci santucci comparative ease diagrammatic vs iconic query language 


batini catarci costabile levialdi revised visual query systems 
technical report dipartimento di informatica sistemistica universita di roma la sapienza 

batini catarci costabile levialdi visual strategies querying databases 
proc 
ieee workshop visual language pp 


icons interpretation 
proc 
ieee workshop visual languages dallas usa pp 


bertin graphics graphic information processing walter de gruyter berlin 

macleod usability assessment measurement 
management software quality kelly ed technical gower press 

catarci chang costabile levialdi santucci graph framework visual access databases 
ieee trans 
knowledge data engineering 

catarci chang santucci unified framework providing multi paradigm visual access databases proc 
nd international computer science conference hong kong pp 


catarci costabile eds special issue visual query systems 
journal visual languages computing 

catarci costabile eds special issue visual query systems 
journal visual languages computing 

catarci costabile levialdi santucci eds 
proc 
int 
workshop advanced visual interfaces avi 
acm press new york 

catarci costabile visual metaphors interacting databases 
acm sigchi bulletin 

catarci cruz special issue information visualization 
sigmod record 

catarci santucci diagrammatic vs textual query languages comparative experiment 
proc 
ifip working conference visual databases lausanne pp 


catarci santucci fundamental graphical primitives visual query languages 
information systems 

catarci hypergraph framework visual interaction databases 
journal visual languages computing 

cattell entity database user interface 
proc acm sigmod conf 
management data pp 


chandra theory database queries 
proc 
acm symp 
principles database systems pp 


chang principles pictorial information systems design prentice hall englewood cliffs nj 

chang costabile levialdi framework intelligent visual interface design database systems 
pp 


chang costabile levialdi reality bites progressive querying result visualization logical vr spaces 
proc 
ieee symp 
visual languages st louis usa pp 


chang costabile vr queries transformation progressive querying environment 


chen entity relationship model unified view data 
acm transactions database systems 

codd relational model large shared data banks 
communication acm 

codd relational completeness database sub languages 
data base systems ed prentice hall englewood cliffs pp 

cooper ed 
interfaces database systems glasgow series workshop computing springer verlag london 

cuff casual users 
international journal man machine studies 

date database systems vol addison wesley publishing 

browsing querying 
ieee data engineering bulletin 

davis experimental investigation utility data structure diagrams database query 
international journal man machine studies 

dix abowd beale human computer interaction prentice hall international 

doan paton multi paradigm query interface object oriented database 
interacting computers 

eco theory semiotics indiana university press 

fujii korfhage features model icon morphological transformation 
proc 
ieee international workshop visual languages kobe japan pp 


approach standardize icons 
proc 
ieee workshop visual languages link ping sweden pp 


goodman languages art publishing indianapolis indiana 

haber ioannidis livny opossum desk top schema management customizable visualizations 
proc 
xxi vldb conference pp 


harel visual formalism communications acm 

graphical user interface object oriented database system basis generic visualisation toolkit 


jarke vassiliou framework choosing database query language 
acm computing surveys 

john kuck recursive query language universal relation 
proc 
th int 
workshop statistical database management 

kennedy barclay interfaces databases 
electronic series workshop computing springer london www springer uk workshops ids html 

kim graphical interfaces database systems survey 
proc 
mountain regional acm conference 

kolaitis expressive power stratified logic programs 
information computation 

liu tai principles icon construction 
visual databases systems kunii ed north holland amsterdam pp 

lohse walker classification visual representation 
communications acm 

mackinlay automating design graphical presentations relational information 
acm transaction graphics 

maier ullman vardi foundations universal relation model 
acm trans 
database systems 

markowitz entity relationship role oriented query language 
proc 
rd conference entity relationship approach 

markowitz malhotra er eas formalism system modeling eas language 
entity relationship approach information modeling analysis chen ed er institute pp 


vr system database visualization 
proc 
int 
workshop advanced visual interfaces avi catarci costabile levialdi santucci eds acm press new york pp 

myers hollan cruz eds 
strategic directions human computer interaction 
acm computing surveys appear 

motro trio database user interfaces handling vague retrieval requests 
ieee data engineering bulletin 

norman draper eds 
user centered system design lea hillsdale 
rankin taxonomy graph types 
information design journal 

reisner human factors studies database query languages survey assessment 
acm comp 
surv 

reisner query languages 
handbook human computer interaction helander ed north holland pp 


robertson card mackinlay information visualization interactive animation communication acm 

rohr graphical user languages querying information look criteria 
proc 
ieee workshop visual languages pittsburgh usa pp 


rowe form application development system 
proc 
acm sigmod conference management data 

santucci dynamic form data semantic query languages 
interfaces database systems sawyer ed series workshop computing springer verlag london pp 


sawyer ed 
interfaces database systems lancaster 
series workshop computing springer verlag london 

lp design implementation 
proc 
iv vldb conference pp 


shipman functional data model data language 
acm transaction database systems 

shneiderman interactive systems emergence direct manipulation 
behaviour information technology 

shu visual programming languages dimensional analysis 
proc 
int 
symposium new directions computing 

soininen generalized transitive closure relational queries 
proc 
int 
conference principle database systems 

tufte envisioning information graphics press cheshire connecticut 

tufte visual display quantitative information graphics press cheshire connecticut 

yen human factors experimental comparison sql qbe 
ieee transactions software engineering 

wilson dean multipurpose presentation system 
proc 
th vldb conference pp 


wilson semantics vs graphics show show 
proc 
acm sigmod conf 
management data pp 


ziegler direct manipulation 
handbook human computer interaction helander ed north holland amsterdam pp 


zloof query example operations transitive closure 
technical report rc ibm research yorktown heights 
