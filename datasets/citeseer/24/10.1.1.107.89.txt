rendering layered depth images steven gortler harvard university michael cohen microsoft research march technical report tr li wei stanford university microsoft research advanced technology division microsoft microsoft way redmond wa cient image rendering system renders multiple frames second pc 
method performs warping intermediate representation called layered depth image ldi 
ldi view scene single input camera view multiple pixels line sight 
input images preprocessed create single ldi size representation grows linearly observed depth complexity images linearly ldi data represented single image coordinate system mcmillan warp ordering algorithm successfully adapted 
result pixels drawn output image back front order 
bu er required alpha compositing done ciently depth sorting 
splatting cient solution resampling problem 
image rendering ibr techniques proposed cient views real synthetic objects 
traditional rendering techniques time required render image unbounded geometric complexity scene grows 
rendering time grows requested shading computations requiring global illumination solutions ambitious 
simplest image rendering technique synthesizes new image single input depth image image bu er information stored pixel 
hidden surfaces included input image image ective depth complexity 
complexity image constant size determined image resolution new images rendered constant time 
shading computations computed input image reused subsequent images 
depth image obtained real world scene real images new views created ibr methods rst creating traditional geometric representation 
pixels image form regular grid image rendering computations largely incremental inexpensive 
mcmillan developed ordering algorithm ensures pixels synthesized image drawn back front depth comparisons required :10.1.1.139.3990
permits proper alpha compositing pixels depth sorting 
despite advantage problems current image rendering methods 
example single depth image information hidden surfaces viewer moves slightly uncovers surface relevant information available newly unoccluded surface see color image 
simple solution problem input image approach isnot drawbacks 
uses input images ectively multiplies size scene description rendering cost increases accordingly 
uses input image mcmillan ordering algorithm longer applies perform depth computations bu er resolve hidden surfaces output image 
di culty arises fact input image di erent sampling pattern density output image 
mapping discrete pixels forward input image input pixels squeeze output pixel properly blended anti aliasing 
serious problem occurs forward mapping spreads pixels apart creating gaps output picture see color image 
proposed solutions problem include performing backwards mapping output sample location input image 
expensive operation require amount searching input image 
possible solution think input image mesh micro polygons scan convert polygons output image 
expensive operation requires polygon scan convert setup input pixel 
simplest solution ll gaps output image predict projected size input pixel new projected view splat input pixel output image precomputed footprint :10.1.1.139.3990
splats combine smoothly output image outer regions splat fractional alpha values composed new image operation 
requires output pixels drawn depth order 
stated earlier mcmillan ordering algorithm applied input image depth sort required 
method solves di culties 
result cient image rendering system renders multiple frames second pc 
solution follows performing ibr directly set input depth images rst create single intermediate representation called layered depth image ldi 
array depth pixels pixel associated depth information store array depth pixels 
layered depth pixel stores set depth pixels line sight sorted front order 
front element layered depth pixel samples rst surface seen line sight pixel layered depth pixel samples surface seen line sight rendering ldi requested view move away original ldi view expose surfaces visible rst layer 
previously occluded regions may rendered data stored layer layered depth pixel 
advantages representation 
input images preprocessed create single ldi pixels di erent images sample surface location collapsed single depth pixel 
size representation grows linearly observed depth complexity images linearly ldi data represented single image coordinate system mcmillan ordering algorithm successfully adapted 
result pixels drawn output image back front order 
bu er required alpha compositing done ciently depth sorting 
splatting cient solution resampling problem 
previous past years papers image rendering 
levoy whitted discuss rendering point data 
chen williams idea rendering images 
laveau faugeras discuss ibr backwards map 
mcmillan bishop discuss ibr cylindrical views :10.1.1.139.3990
seitz dyer describe system allows user correctly model view transforms user controlled image morphing system 
slightly di erent direction levoy hanrahan gortler describe ibr methods large number input images sample high dimensional radiance function 
max uses representation similar ldi purpose quite di erent purpose high quality anti aliasing goal ciency 
max reports rendering time minutes frame goal multiple frames second 
max warps input di erent camera information multiple depth layers serve represent high depth complexity trees 
warp single ldi warping done ciently 
output max warps ldi 
done conjunction bu er high quality somewhat expensive anti aliasing output picture performed 
system relies heavily mcmillan ordering algorithm :10.1.1.139.3990
input output camera information warping order deduced pixels map location output image guaranteed arrive back front order 
layered depth image camera output camera back front output ordering epipolar point mcmillan depth order computed rst nding projection output camera location input camera image plane 
point known epipolar point intersection line joining camera centers rst camera lm plane see 
input image split horizontally vertically epipolar point generally creating image quadrants 
epipolar point lies image plane mayhave regions 
pixels quadrants processed di erent order 
depending output camera front input camera pixels quadrant processed inward epipolar point outwards away 
words quadrants processed left right top bottom processed left right bottom top mcmillan discusses detail various special cases arise proves ordering guaranteed produce depth ordered output 
warping ldi ectively input camera view 
ordering algorithm order layered depth pixels visited 
layered depth pixel layers processed back front order 
formal proof applies ordering algorithm guaranteed 
rendering system layered depth image data structure de ned follows 
camera layered depth image contains camera information plus array size layered depth pixels 
addition image data layered depth pixel integer indicating valid layers contained pixel 
data contained depth pixel includes color depth object seen pixel plus index table 
index formed combination normal object seen distance camera originally captured pixel 
index compute splat size outlined section 
variety generate ldi 
example ray tracer stores computed ray intersections pixel 
multiple images depth information available pixel 
derived multi baseline stereo camera vision system capable inferring depth 
construct ldi warping synthetic depth images common camera view 
warp input camera ldi pixels map layered depth pixel values compared 
values di er preset epsilon new layer added layered depth pixel distinct value incremented new depth pixel added values averaged layer 
preprocess similar rendering described max 
construction layered depth image ectively decoupled nal rendering images desired viewpoints 
ldi construction need run multiple frames second allow interactive camera motion 
image rendering system needs control mechanism determining available input images rendering 
case amounts deciding images de ne current ldi 
decisions orthogonal issue discussed 
main component system fast warping renderer 
component takes input ldi associated camera information 
new desired arbitrary single coordinate system speci ed 
best original camera coordinate systems 
results fewer pixels needing resampled twice ldi construction rendering process 
camera information uses incremental warping computation ciently create output image 
pixels ldi output image compositing operation 
size footprint splat estimated size reprojected pixel 
incremental warping computation incremental warping computation similar certain texture mapping operations 
geometry computation analyzed mcmillan cient computation special case orthographic input images 
matrix ldi camera 
comprised ne transformation matrix projection matrix viewport matrix transforms point global coordinate system camera projected image coordinate system 
projected image coordinates obtained multiplying point global coordinates dividing index pixel address 
coordinate depth comparisons bu er 
output camera matrix 
de ne transfer matrix projected image coordinates point seen ldi camera matrix computes image coordinates seen output camera 
coordinates obtained dividing index pixel address output camera image 
linearity matrix operations matrix multiply factored allow reuse computation iterates layers layered depth pixel computed compute warped position layered depth pixel scanline new simply incremented 
warping algorithm proceeds mcmillan ordering algorithm 
ldi broken regions left right epipolar point 
quadrant ldi traversed possibly reverse scan line order 
scan line computed 
sign determined direction processing quadrant 
layered depth pixel scan line warped output image calling 
procedure visits layers back front order computes determine location output image 
texture mapping divide required pixel 
depth pixel color location output image 
pix vec variable vec vec image pix pix layer cull pixel goes output camera pixel goes output cam frustum width height recip recip recip recip see section pix layer splat pix layer rgb increment layered pixel scan line splat size computation splat ldi output image approximate projected area warped pixel 
proper size computed di size cos res tan fov cos res tan fov distance sampled surface point ldi camera fov eld view ldi camera res pixel resolution ldi camera angle surface normal camera camera values size computation projected pixel 
surface normal line sight ldi camera see 
terms subscript refer output camera 
cient compute approximation square root size size cos res tan fov cos res tan fov cos res tan fov cos res tan fov lookup nx ny approximate angles surface normal vector axes camera coordinate systems 
approximate coordinate sampled point output camera eye coordinate system 
current implementation supports di erent splat sizes crude approximation size computation implemented lookup table 
pixel ldi store bits 
bits encode normal gives bit lookup table index 
rendering new image new output camera information precompute values possible lookup table indexes 
rendering choose projection matrix 
pixel obtain size multiplying computed value lookup table 
splat sizes currently pixel footprint pixel footprint anda pixel footprint 
pixel footprint alpha value alpha blending done integer shifts adds 
splat masks results implemented system 
accompanying video scene modeled cache images rendered scene mental ray renderer 
renderer returns colors depths normals pixel 
images rendered pixel resolution 
image took approximately minute generate 
interactive system controller uses current camera information pick best images image cache 
preprocessor running low priority thread uses images create ldi second 
allocated maximum layers pixel 
average depth complexity approximately 
input images increases rendering cost percent 
fast renderer running concurrently high priority thread generates images resolution see color images 
pentium pro pc running mhz achieved fps frame rate 
discussion described method cient image rendering layered depth image representation 
representation allows information available input set images incurring cost associated multiple images 
average depth complexity ldi 
ldi representation allows apply mcmillan ordering algorithm allows splat pixels compositing operation 
choosing single camera view organize data disadvantages 
pixels undergo resampling steps journey input image output 
potentially degrade image quality 
secondly surface seen glancing angle chosen camera view depth complexity ldi increases spatial sampling resolution surface degrades 
sampling aliasing issues involved image rendering fully understood formal analysis issues invaluable 
eric chen lance williams 
view interpolation image synthesis 
computer graphics annual conference series pages 
william dally leonard mcmillan gary bishop henry fuchs 
delta tree object centered approach image rendering 
mit ai technical memo 
steven gortler grzeszczuk richard szeliski michael cohen 
lumigraph 
computer graphics annual conference series pages 
paul heckbert henry 
interpolation polygon texture mapping shading 
david rogers rae earnshaw editors state art computer graphics visualization modeling pages 
springer verlag 
laveau faugeras 
scene representation collection images 
twelfth international conference pattern recognition icpr volume pages jerusalem israel october 
ieee computer society press 
mark levoy pat hanrahan 
light eld rendering 
computer graphics annual conference series pages 
mark levoy turner whitted 
points display primitive 
unc technical report university north carolina 
william mark leonard mcmillan gary bishop 
post rendering warping 
symposium interactive graphics appear 
acm 
nelson max 
hierarchical rendering trees precomputed multi layer bu ers 
seventh eurographics workshop rendering pages 
eurographics june 
leonard mcmillan 
list priority rendering algorithm projected surfaces 
unc technical report university north carolina 
leonard mcmillan 
computing visibility depth 
unpublished manuscript 
leonard mcmillan gary bishop :10.1.1.139.3990
plenoptic modeling image rendering system 
computer graphics annual conference series pages 
leonard mcmillan gary bishop 
shape projective mapping 
unpublished manuscript 
mark segal carl rolf van jim foran paul haeberli 
fast shadows lighting ects texture mapping 
computer graphics 
steven seitz charles dyer 
view morphing 
computer graphics annual conference series pages 

