mixminion design type iii anonymous remailer protocol george danezis roger dingledine david nick mathewson cambridge university george danezis cl cam ac uk free haven project arma net independent consultant david uk 
mixminion message anonymous remailer protocol supports secure single reply blocks 
mix nodes distinguish mixminion forward messages reply messages forward reply messages share anonymity set 
add directory servers allow users learn public keys performance statistics participating remailers describe allow users maintain long term pseudonyms single reply blocks primitive 
design integrates link encryption remailers provide forward anonymity 
mixminion brings best solutions previous create conservative design protects known attacks 
keywords anonymity mix net peer peer remailer reply block chaum introduced anonymous remailer designs years ago 
research community introduced new designs proofs discovered variety new attacks state deployed remailers changed remarkably little cottrell published mixmaster software 
part difficulty expanding deployed remailer base due liability involved running remailer node internet part due complexity current infrastructure fairly hard add new experimental features current software 
mixminion project aims deploy cleaner remailer design spirit mixmaster goals expanding deployment documenting design decisions stand known attacks providing research base experimental features 
describe design section including new primitive called single reply block 
mixmaster provides support replies relies older secure type remailer design 
integrating reply capabilities mixminion retire type remailer network 
introduce link encryption ephemeral keys ensure forward anonymity message :10.1.1.13.7
provide flexible delivery schemes just allowing delivery mail usenet allow designers add arbitrary modules handle incoming outgoing messages 
separating core mixing architecture higher level modules limit influence anonymity properties system extend mixminion network uses anonymous email 
go section describe design directory servers track distribute remailer availability performance key information describe section securely build higher level systems 
mixminion best breed remailer protocol uses conservative design approaches provide security known attacks 
mixminion project joint effort cryptography anonymity researchers mixmaster remailer operators 
design document represents step peer review type iii remailer protocol 
related mix nets chaum introduced concept mix net anonymous communications 
mix net consists group servers called mixes mix nodes associated public key :10.1.1.13.7
mix receives encrypted messages decrypted batched reordered forwarded information identifying sender 
chaum proved security mixes passive adversary eavesdrop communications mixes unable observe reordering inside mix :10.1.1.13.7
research mix nets includes go mix nets distributed flash mixes weaknesses hybrid mixes 
type mix hierarchy cascade 
cascade network users choose set fixed paths mix net 
cascades provide greater anonymity large adversary free route systems allow adversary owns mixes intersection attacks reduce set possible senders receivers message 
hand cascades vulnerable trickle attacks attacker targeting specific message going mix manipulate batch messages entering mix unknown message batch target message 
mix cascade research includes real time mixes web mixes 
deployed remailer systems widespread public implementations mixes produced mailing list 
type anonymous remailers inspired problems surrounding anon fi service theoretical mixes 
hughes wrote anonymous remailer finney followed closely collection scripts phil zimmermann pgp encrypt decrypt messages 
cottrell implemented mixmaster system type ii remailers added message padding message pools mix features lacking remailers 
note mixmaster include replies deployed remailer systems secure long term reply blocks 
time tsudik introduced babel system practical remailer design desirable features 
provides replies indistinguishable forward messages passive observers mix nodes distinguish 
babel reply addresses multiple making secure forward messages due replay vulnerabilities 
babel introduces inter mix detours nodes message send randomly chosen new hops sender sure recognizing message leaves mix 
remailer statistics levien statistics pages track remailer capabilities kinds encryption remailer supports remailer times obtained pinging machines question sending test messages machine group machines :10.1.1.13.7
reputation systems improve reliability mix nets allowing users avoid choosing unreliable mixes 
jack nymble remailer client mixmaster remailer allow users import statistics files pick remailers data 
users specify minimum reliability scores decide remailer specify maximum latency 
ongoing research powerful reputation systems includes reputation system free route networks mix cascades 
mix net design mixminion brings current best approaches providing anonymity batching message mix environment 
don aim provide connection oriented services freedom onion routing designs effective common activities anonymous web browsing low latency necessarily implies smaller anonymity sets slower message services :10.1.1.34.2032
intentionally restrict set options users provide cipher suite avoid extensions help adversary divide anonymity set 
mixminion uses general mix net paradigm previous 
sender alice chooses path network 
repeatedly onion encrypts message starting mix path sends onion mix 
mix single layer onion pads message fixed length kbytes current design passes result mix 
describe behavior mix section 
headers addressed intermediate mix encrypted rsa :10.1.1.13.7
contain secret generate padding decrypt rest message 
contain address node message forwarded expected signature key fingerprint 
mixminion protects known traffic analysis attacks adversary attempts learn message sender receiver fully address traffic confirmation attacks 
traffic confirmation attack adversary treats mix network black box observes behavior senders receivers 
time intersect set senders receivers active certain times learn sending receiving messages 
dummy traffic designs may eventually address intersection attack remains open problem 
choose drop packet level compatibility mixmaster remailer systems order provide simple extensible design 
retain minimal backwards compatibility type ii messages type iii messages increasing anonymity sets type iii network 
type ii messages travelling type iii remailers treated plaintext encrypted remailer chain type iii key 
message sent type iii encrypted message decrypts reveal type ii message 
provide new feature reply block mechanism secure forward messages 
reusable reply blocks remailer security risk nature people send multiple messages 
multiple messages easily trace recipient path incoming batches include message reply block hop intersection outgoing batches :10.1.1.13.7
prevent replays mixminion provides reply blocks 
replies may rare relative forward messages easier trace mixminion protocol reply messages indistinguishable forward messages mix nodes :10.1.1.13.7
forward reply messages share anonymity set 
tagging attacks motivate aspects mixminion design describe attack works mix net protocols including mixmaster babel 
tagging attack active attack message modified altering part example flipping bits recognized path 
mix controlled attacker recognize tagged messages header conform expected format decrypted 
final recipient recognize tagged message payload altered 
checking integrity hop headers individually sufficient prevent tagging attacks 
example mixmaster hop header contains hash fields header :10.1.1.13.7
mix path checks integrity header drops message immediately altered 
attacking mix alter header decrypted hops tagging attacks possible 
straightforward way prevent tagging attacks authenticate message hop 
forward messages padding added message derived deterministically possible calculate authentication tags message hop :10.1.1.13.7
situation complicated reply messages introduced message reply block created different users 
replies rest section describes mechanism secure replies including defeat tagging related attacks 
mixminion reply model part inspired babel requires receiver reply block keep state secret keys order read reply 
secrets strip layers encryption derived master secret contained header single reply block creator block addresses encrypts public key 
indistinguishable replies making forward messages replies indistinguishable mixes prevent adversary dividing message anonymity sets classes 
particular replies infrequent relative forward messages adversary controls mixes easily trace path reply :10.1.1.13.7
having indistinguishable replies difficult prevent tagging attacks 
author reply block writing payload hash entire message 
choose forward messages replies indistinguishable include hashes forward messages 
approach defending attacks discussed detail section 
mixminion allows alice send messages bob ways 
forward messages alice remains anonymous 

direct reply messages bob remains anonymous 

anonymized reply messages alice bob remain anonymous 
require parties benefit anonymity properties run dedicated software 
specifically senders generating forward messages able create onions anonymous receivers able create reply blocks unwrap messages received reply blocks 
parties receiving forward messages sending direct reply messages need run new software 
quoting performed ordinary mail software include reply block direct reply sent node reply address extracts reply block constructs properly formatted onion 
messages composed header section payload 
divide message path legs split header section correspondingly main header secondary header 
header composed hop path :10.1.1.13.7
contains hash remainder header seen appropriate mix path payload leg :10.1.1.13.7
contains symmetric key derive decryption key decrypting rest message 
mix derives padding seed master key 
uses padding seed place predictable padding header hash match hop header maintain constant length :10.1.1.13.7
forward messages alice provides legs anonymous replies alice uses bob reply block second leg generates path leg 
send direct reply alice empty leg send reply block message mix wrap 
alice creates message encrypts secondary header hash payload addition usual layered onion encryptions 
alice message traverses mix net normal hop pulls layer verifies hash current header puts junk header gets hop marked crossover point 
crossover point performs swap operation decrypts secondary header hash current payload swaps headers 
swap operation detailed specifically normal operations done hop dotted line operations performed crossover point dotted line 
encryption primitive labelled lbc blind second header payload needs certain properties length preserving impossible recognize decryption modified block knowledge key equally secure decryption operation encryption 
fulfill requirements large block cipher cipher acts permutation block size input header payload 
possible candidates include spc 
cryptographic property required super pseudo random permutation strong pseudo random permutation 
bit encrypted material changed decryption look random bits 
equally secure encryption decryption directions 
see section discussion approach helps protect tagging 
defenses tagging attacks crossover point adversary mount tagging attack modifying payload forward message leaves alice recognizing reaches bob 
specifically encryption mechanism weaker prp property may sufficient preventing replays limits number oracle queries need analysis 
case simpler bear construction 
rsa check decrypt lbc lbc lbc hash fig 

operations required swap method ordinary counter mode cipher alter specific byte payload message entering mix net 
outgoing messages part predictable entirely plaintext predictable pgp header material adversary observe messages exiting mix net look payloads corresponding anomaly byte 
large block cipher described previous section minimize amount information adversary learn tagging 
tags message leaving alice payload entirely random reaches bob 
adversary tags message worst turn corresponding payload trash 
briefly considered introducing cover trash frustrate tagging attacks problem complex dummy traffic problem 
decryption hash payload step crossover point prevent attacker learning information tagging attacks 
specifically solution falls cases forward messages message tagged leg second header unrecoverable adversary learn intended destination message 
message tagged second leg leg provided anonymity adversary learn sender 
direct reply messages decryption algorithm provides secrecy equivalent encryption effect similar encrypting payload step reply block :10.1.1.13.7
recipient learn peeling layers message tagged 
tagging attacks useless reply messages 
anonymized reply messages forward messages leg tagged second header unrecoverable adversary learn message addressed reply block 
direct reply messages recipient learn second leg tagged 
direct reply messages need crossover point path adversary observe tag forward messages need crossover point prevent tagging 
leg provides sufficient anonymity destroys information second leg second leg forward message short 
extreme hop second header directly specify message recipient 
choice crossover point reveal information intended recipient recommend second leg hops long 
mix crossover point distinguish forward messages replies crossover point sure processing reply forward message may able guess crossover points frequent forward paths direct replies anonymized reply paths 
multiple message tagging attacks design vulnerable subtle dangerous attack 
alice sends group messages path adversary tag message leave alice recognize pattern number timing tagged untagged messages crossover point observe untagged ones go 
assumptions adversary reduce attack traffic confirmation attack re willing accept alice sends bunch messages adversary count look pattern 
drop look resulting patterns 
adversary recognize tag happens crossover point alice chooses 
alice picks crossover points messages match tag signature certainty adversary crossover points 
harder subsets messages overlap subsets messages senders 
key adversary doesn crossover point tagging messages destined crossover equivalent dropping 
crossover point question simply doesn deliver message second leg 
instance mixes may allow outgoing mail local addresses node gets crossover message guess recipient local addresses 
prevent adversary divide conquer alice groupings alice uses hybrid path starting short cascade adversary tags subset messages doesn know owns cascade groupings tagged messages 
adversary doesn crossover points alice chooses successful multiple message tagging attack infeasible 
leave security analysis multiple paths idea see section 
related design decisions link encryption gets remailer types ii smtp ordinary internet email underlying transport mechanism mixminion clients nodes communicate forward secure encrypted channel tls :10.1.1.13.7:10.1.1.13.7
tls allows establishment encrypted tunnel ephemeral diffie hellman keys 
order guarantee receiving intended creator anonymous message receiving node sign ephemeral key 
soon session key established parties destroy diffie hellman keys sending messages tunnel 
message parties perform standard key update operation generate fresh key delete old key material :10.1.1.13.7
key updates don require asymmetric encryption techniques relatively fast 
purpose link encryption provide forward secrecy keys deleted nodes exchange messages decrypt recognize messages intercepted links 
impossible comply decryption notices past traffic served jurisdictions 
attacker manages get hold session key particular point observe subsequent traffic able update key appropriately 
encrypted channel offers limited protection traffic analysis 
encrypted links honest nodes prevent adversary recognizing messages link padding measure traffic transmitted 
fringe benefit separate link protocol easier deploy relay mixes nodes simply omit smtp support :10.1.1.13.7
see section 
message types delivery modules mixminion packet reaches final mix path delivered intended recipient dropped intra network dummy message processed type ii packet 
order support different kinds delivery header includes type code action taken deliver message 
types dummy smtp local delivery specified part mixminion standard 
may added extensions implement abuse resistant exit policies see section administer see section publish anonymously usenet relay messages older remailers support protocols 
nearly delivery methods require additional information message type payload 
smtp module example requires mailbox 
information placed variable length annex final 
types mix supports described capability block includes mix address long term signing public key short term public key header encryption capability batching strategy :10.1.1.13.7
mixes sign capability blocks publish directory servers see section 
clients download information directory servers 
possibility multiple delivery methods doesn come free presence may fragment anonymity set 
example ways send smtp message bob attacker partition bob incoming mail guessing ways alice favorite 
active attacker lure users compromised exit node advertising node supporting rare desirable delivery method 
claim attacks provide argument extensibility se argue proliferation redundant extensions rare extensions 
exit policies abuse important entry node capability block exit policy 
exit abuse serious barrier wide scale remailer deployment rare network administrator tolerant machines potentially deliver hate mail 
spectrum open exit nodes deliver middleman nodes relay traffic remailer nodes private exit nodes deliver locally 
generally nodes set individual exit policies declare traffic exit traffic local users authenticated traffic 
preventing abuse open exit nodes unsolved problem 
receiving mail opt forge opt request victim 
requiring recipients declare interest receiving anonymous mail risky human rights sign receive anonymous mail retain plausible deniability 
similarly receiving mail opt deny service forging opt request legitimate user 
keep mail exit node send note recipient telling collect mail increases server liability storing messages see section doesn really solve problem 
mailbox canonical form user domain part mail address 
mixminion uses mailboxes protocol display name comment parts mail address potentially different senders obtained address different sources leading smaller anonymity sets 
compare supreme court case lamont general post office mail deemed communist political send form addressee telling send back signed form wanted receive mail 
government maintained list citizens filled forms 
course mixture open restricted exit nodes allow flexibility volunteers running servers 
large number middleman nodes useful provide large robust network small number exit nodes simplifies traffic confirmation adversary observes suspected user network exit nodes looks timing packet correlations 
number available open exit nodes remains limiting security parameter remailer network 
replay prevention message expiration key rotation mixmaster offers rudimentary replay prevention keeping list message ids 
keep list getting large expires entries amount time 
adversary records input output batches mix replays message mix forgotten message decryption exactly 
mixmaster provide forward anonymity want 
chaum observed attack solution proposed babel include message timestamp describes message valid problems :10.1.1.13.7
specifically introduces new class partitioning attacks adversary distinguish track messages timestamps 
messages short lifetimes legitimate messages may arrive expiration date dropped 
specify expiration dates expect messages arrive messages arriving near expiration date rare adversary delay message near expiration date release trace network 
way addressing partitioning attack add dummy traffic rare messages arrive near expiration date dummy traffic understood 
approach add random values expiration date mix path adversary delaying message mix expect near expiring path open statistical attacks :10.1.1.13.7
possible compromise solution provides forward anonymity follows messages don contain timestamp expiration information 
mix keep hashes headers messages processed time rotated key 
mixes choose key rotation frequency security goals hashes want store 
note solution entirely solve partitioning problem near time key rotation anonymity set messages divided senders knew key rotation new key 
keys overlap delaying attack babel vulnerable direct timestamp attack layer onion includes number seconds elapsed january gmt moment message composition sender people composing message second adversary owning mix path trivially recognize message :10.1.1.13.7
works 
note key rotation link encryption see section provide forward security protection redundant 
link encryption adversary running mix compromise private key decrypt messages previously sent 
key rotation limits window opportunity attack 
complete solution partitioning attacks may possible synchronous batching approach described section subject research 
directory servers mixmaster protocol specify means clients learn locations keys capabilities performance statistics mixes 
ad hoc schemes grown fill void describe mixminion directory servers examine anonymity risks information services 
mixminion group redundant directory servers serve current node state 
important servers synchronized redundant lose security client different information network topology node reliability :10.1.1.13.7
adversary controls directory server track certain clients providing different information listing mixes controls informing certain clients mix 
adversary control directory server exploit differences client knowledge 
eve knows mix listed server knowledge link traffic clients queried 
eve distinguish traffic differences clients directory servers don clients upto date listings old listings directory large pieces clients different subsets directory 
merely matter convenience clients retrieve date mix information 
specify directory service part standard 
mixminion provides protocols mixes advertise capability certificates directory servers clients download complete directories 
servers ensure correct complete data successively signing certificate bundles users sure mix certificate seen threshold directory servers 
client knowledge uniform attacker mount trickle attack delaying messages alice compromised node directory servers remove mix listings release delayed messages guess messages alice 
adversary controlling nodes launch attack new advances private information retrieval may road allow clients efficiently privately download subset directory 
recommend mix net anonymously retrieve random subset adversary observing directory servers hops message path take intersection downloaded directory subsets guess remaining hops path 
effectively 
clients download new information regularly wait time threshold say hour newly published nodes 
dummy traffic old nodes may help thwart trickle attacks 
directory servers compile node availability performance information sending traffic mixes directories 
basic form similar current ping servers investigate integrating complex attack resistant reputation metrics 
reputation information introduces vulnerabilities example adversary trying traffic analysis get traffic gaining high reputation 
defend attacks building paths suitably large pool nodes bound probability adversary control entire path tension giving clients accurate timely information preventing adversaries exploiting directory servers manipulate client behavior 
nym management single reply blocks current nym alias net maintain set mailbox reply block pairs allow users receive mail revealing identities 
mail arrives bob nym alias net attaches payload associated reply block sends mix net 
type remailer network reply blocks persistent long lived nyms mix network drop replayed messages reply blocks 
reply block management simpler model users need replace reply block nodes uses stops working 
mixminion design protects replay attacks dropping messages repeated headers reply blocks necessarily single 
number approaches building single reply blocks 
approach keep stock reply blocks mailbox reply block incoming message :10.1.1.13.7
long owner pseudonym keeps messages lost 
hard user know new reply blocks send approach attacker deny service flooding mailbox exhaust available reply blocks block messages getting delivered 
robust design uses protocol inspired mail retrieval protocols imap pop messages arrive queue user periodically checks status mail sends sufficient batch reply blocks deliver mail 
case doesn need store reply blocks 
flooding attack works exactly flooding normal imap pop mailbox usual techniques allowing user delete mails server specify mails download expire fine 
user send set indices server successfully receiving messages indicate deleted 
course different legal security implications designs 
design mail stored server keep valid reply blocks hand 
second case sense secure server need store reply blocks creates liability server keeps mail recipient retrieved :10.1.1.13.7
owner pseudonym provide public key uses immediately encrypt incoming messages limit amount time keeps plaintext messages 
best implementation depends situations preferences volunteers running 
hopefully volunteers users choose model comfortable 
maintaining anonymity sets transmitting large files mixminion mixminion transport layer higher level applications anonymous publication systems research remains provide security users transferring large files mixminion 
alice wants send large file bob send mixminion messages 
conventional wisdom suggests pick different path message adversary owns nodes paths learn identity 
adversary owning small fraction network perform attack mixminion message size small 
alice maintain unlinkability sending messages path 
hand passive adversary watch flood messages traverse path 
hope honest nodes hide message streams foil attacks 
multiple message tagging attacks described section situation dangerous 
compromise approach pick small number paths 
messages sent clear re going need really cover traffic schemes offer security 
problem maintaining anonymity sending messages comes owner pseudonym downloading mail 
batching strategy network structure mix net design groups messages batches chooses paths approaches uses affect degree anonymity provide 
define ideal anonymity mix net attacker gain information linkage messages entering leaving network maximum time equal maximum network latency 
ideal achieved protocols mixmaster random delays maximum latency network anonymity set message leaving network may smaller messages entered time mixmaster asynchronous messages enter leave network time uses free routes subject attacks described 
explore strategy called synchronous batching 
approach prevent attacks free routes improve trade latency anonymity 
network fixed batch period closely related maximum desired latency typical value hours 
messages entering network batch period queued period :10.1.1.13.7
sent mix net synchronously rate hop hop period 
paths fixed length hops messages dropped messages introduced batch progress routes lock step transmitted final destinations hop periods 
message specifies hop period received delayed attacker fatal design 
latency depending message submitted 
typically latency independent path length 
practice considerations balanced choosing batching strategy network structure 
include maximizing anonymity sets batch sizes node anonymity sets users bandwidth considerations reliability enabling users choose nodes trust interactions reputation system :10.1.1.13.7
analysis needed choose final network structure 
note planned structure user software follows plan consistently constructing routes generally able achieve stronger easily analyzed security properties constrained approaches :10.1.1.13.7
directions design document represents step peer review type iii remailer protocol 
ideas ranging core design peripheral design choices need attention need research batching strategies resist trickle flooding attacks intersection attacks asynchronous free routes 
need thorough investigation multiple message tagging attacks analysis safely choose paths sending messages 
claim conservative techniques variablelength block cipher pushing 
keep indistinguishable forward messages replies simpler design 
need stronger intuition dummy messages 
invite interested developers join mixminion dev mailing list examine detailed mixminion specification 

abe 
universally verifiable mix verification independent number mix servers 
advances cryptology eurocrypt lncs vol 

springer verlag 

ross anderson eli biham 
practical provably secure block ciphers bear lion 
international workshop fast software encryption lncs 
springer verlag 
citeseer nj nec com anderson html 

anonymous 
trickle flood active attacks mix types 
submitted information hiding workshop 

adam back ulf ller anton 
traffic analysis attacks trade offs anonymity providing systems 
proceedings information hiding workshop 
www org adam pubs traffic pdf 

oliver berthold hannes federrath stefan 
web mixes system anonymous unobservable internet access 
designing privacy enhancing technologies lncs vol 
pages 
springer verlag 

oliver berthold heinrich 
dummy traffic long term intersection attacks 
privacy enhancing technologies 
springer verlag 

oliver berthold andreas pfitzmann ronny 
disadvantages free mix routes overcome 
designing privacy enhancing technologies lncs vol 
pages 
springer verlag 
www tik ee ethz ch weiler anon disadvantages berthold pdf 

daniel bleichenbacher anand desai 
construction super pseudorandom cipher 
manuscript 

david chaum 
untraceable electronic mail return addresses digital pseudonyms 
communications acm february 
www eskimo com mix net txt 

lance cottrell 
mixmaster remailer attacks 
www com loki remailer remailer essay html 

crispin 
internet message access protocol version rev 
ietf rfc december 
www rfc editor org rfc rfc txt 

desmedt 
break practical mix design new 
advances cryptology eurocrypt lncs vol 

springer verlag 
citeseer nj nec com html 

allen 
tls protocol version 
ietf rfc january 
www rfc editor org rfc rfc txt 

roger dingledine michael freedman david david molnar 
reputation system increase mix net reliability 
proceedings information hiding workshop 
www net papers html 

roger dingledine michael freedman david molnar 
free haven project distributed anonymous storage service 
workshop design issues anonymity unobservability july 
net papers 
html 

roger dingledine paul syverson 
reliable mix cascade networks reputation 
proceedings financial cryptography 
www net papers html 

electronic frontiers georgia 
anonymous remailer information 
anon org remailers 

goldschlag reed syverson 
onion routing anonymous private internet connections 
communications acm 
citeseer nj nec com goldschlag onion html 

tsudik 
mixing mail babel 
network distributed security symposium ndss 
ieee 
citeseer nj nec com html 


anon fi press release 
www fi press english html 

markus jakobsson 
flash mixing 
principles distributed computing podc 
acm 
citeseer nj nec com jakobsson flash html 

anja jan ller andreas pfitzmann birgit pfitzmann michael waidner 
real time mixes bandwidth efficient anonymity protocol 
ieee journal selected areas communications 
www zurich ibm com security publications html 


go mixes providing probabilistic anonymity open system 
information hiding workshop lncs vol 

springer verlag 
www cl cam ac uk pdf 

michael luby charles rackoff 
construct pseudorandom permutations pseudorandom functions 
siam journal computing 

tal malkin 
private information retrieval 
phd thesis mit 
www toc lcs mit edu tal 

tim may description early remailer history :10.1.1.13.7
mail archived www 
inet com dir msg html 

tim may description levien pinging service 
www pro ns net crypto chapter html 

david mazi res frans kaashoek 
design implementation operation email pseudonym server 
www cs berkeley edu daw teaching cs papers txt 


attack flash mix 
advances cryptology asiacrypt lncs vol 

springer verlag 
citeseer nj nec com html 

mixminion 
mixminion type iii anonymous remailer 
mixminion net 

mixminion 
type iii mixminion mix protocol specifications 
mixminion net spec tex 

ulf ller lance cottrell 
mixmaster protocol version 
unfinished draft january 
www eskimo com crypt mix draft moeller mixmaster protocol txt 

myers rose 
post office protocol version 
ietf rfc std may 
www rfc editor org rfc rfc txt 

andrew neff 
verifiable secret shuffle application voting 
samarati editor th acm conference computer communications security ccs pages 
acm press november 
www 
net ada compliant shuffle pdf 

abe 
length invariant hybrid mix 
advances cryptology asiacrypt lncs vol 

springer verlag 

postel 
simple mail transfer protocol 
ietf rfc std august 
www rfc editor org rfc rfc txt 

charles rackoff daniel simon 
cryptographic defense traffic analysis 
acm symposium theory computing pages 
research microsoft com crypto htm 

raymond 
traffic analysis protocols attacks design issues open problems 
workshop design issues anonymity unobservability pages july 
citeseer nj nec com html 


potato software 
www net 

zero knowledge systems 
freedom version white papers 
www freedom net info whitepapers 

paul syverson michael reed david goldschlag 
onion routing access configurations 
darpa information survivability conference exposition dis volume pages 
ieee cs press 
www onion router net publications html 

