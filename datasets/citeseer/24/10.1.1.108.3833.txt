gt vc preliminary version bigraphical semantics higher order mobile embedded resources local names thomas hildebrandt department theoretical computer science university copenhagen denmark bigraphs introduced aim provide topographical meta model mobile distributed agents manipulate linkages nested locations generalising characteristics calculus mobile ambients calculus 
give bigraphical presentation non linear higher order process calculus nested locations non linear active process mobility local names calculus higher order mobile embedded resources homer 
presentation milner presentation calculus local bigraphs 
combination non linear active process mobility local names requires new definition parametric reaction rules representation location names 
suggest localised bigraphs generalisation local bigraphs links localised 
key words bigraphs local names non linear process mobility theory bigraphical reactive systems brs proposed topographical meta model mobile distributed agents manipulate linkages nested locations 
bigraph consists structures place graph link graph 
place graph tuple unordered trees represents topology system 
roots trees referred regions nodes referred places may represent locations process constructors action prefixing 
leaves may sites referred holes making bigraph multi hole context 
non site place typed control funded danish research agency vest networking universities national teaching network model design concurrency 
email itu dk email itu dk preliminary version 
final version published electronic notes theoretical computer science url www elsevier nl locate entcs graph transformation verification concurrency pre proceedings ctit technical report university twente august hildebrandt linked link graph 
link graph represents connectivity system corresponding shared names calculus 
free names represented links connected set names outer interface bigraph 
called pure bigraphs place link graph considered orthogonal structures nesting places connections links interrelationship 
pure bigraphs sufficient represent calculi pure mobile ambient calculus 
orthogonality breaks move called binding local bigraphs 
binding bigraphs introduced capture notions binding scope names calculus 
binding bigraphs allow node binding ports require port linked link binding port node binding port 
milner refines definition binding bigraphs local bigraphs 
local bigraphs free names names interface explicitly located regions bigraph name possibly located regions 
correspondingly holes sites explicitly annotated set names connected links 
local bigraphs facilitate presentation calculus demonstrates higher order processes process passing bigraphical framework explicit substitutions 
give bigraphical presentation combination active processes nested locations mobile ambients non linear higher order process passing explicit substitution calculus local names calculus 
turns combination non linear active process mobility local names needs special care simply combine previous presentations mobile ambients calculus calculus 
take starting point calculus asynchronous higher order mobile embedded resources homer 
homer pure higher order calculus inspired prior higher order calculi plain chocs ho regarded extension calculus contain nested active locations concurrent synchronisation nested named channels 
natural subclass bigraphs studying active mobile processes nested locations 
basically asynchronous homer constructors located resources passive active sequence names representing address resource 
constructors correspond respectively passive active bigraph control ports connected links 
interactions controlled corresponding constructors moving located resources receive take denoting respectively usual input prefixed process waiting receive passive process channel input action active process location cases substituting moved resource allow interactions arbitrarily deeply nested active processes simply composing addresses 
example send resource graph transformation verification concurrency pre proceedings ctit technical report university twente august hildebrandt nested address ab composed received address residing location ab 
dually take resources nested locations ab 
usual denote process name local 
local names need handle scope extension 
process constructors scope extension expected resource moved may necessary extend scope name boundary location resource contains name free expect reaction ab location boundary extended scope cover possible occurrences name mobile ambients calculus vertical scope extension performed structural congruence usual scope extension 
discovered rule sound mobile processes may copied 
exists solutions problem exclude vertical scope extension structural congruence extend scope reaction relation 
extension done eagerly meaning extend scope name free homer chosen solution corresponds usual semantics ho 
combined nested locations consequence context test name free process non trivial congruence related processes set free names see detailed discussion 
useful able free non accessible names perfect firewall equation stating behaviour computing resource local location unobservable 
facilitate type processes explicitly set names containing free names 
typed perfect firewall equation fn 
interestingly turns equation hold need explicitly annotate located sub resources type done extending syntax 
related homer calculus introduced labelled transition bisimulation congruences encoding homer synchronous calculus summation 
composite names send graph transformation verification concurrency pre proceedings ctit technical report university twente august hildebrandt receive prefixes calculus polyadic synchronisation dual prefixes active processes considered 
jensen milner set basic theory brss exhibit bigraphical presentation asynchronous calculus prove derived lts bisimilarity match closely traditional lts bisimilarity 
milner gives bigraphical presentation condition event petri nets jensen gives forthcoming thesis presentation mobile ambient calculus 
milner refined theory binding bigraphs give bigraphical presentation calculus explicit substitutions 
aspects current inspired presentation 
bigraphs exist graphical formalisms suitable presenting calculi concurrency mobility solo diagrams synchronized hyperedge replacement tile systems see 
explicit substitutions widely applied setting functional programming languages primarily bridge gap definition programming language concrete implementation 
seminal abadi calculus explicit substitutions substitutions propagated term applied locally 
approach chosen differs solution way milner calculus perform substitution distance 
explicit substitutions appeared process calculi concurrency mobility 
particular calculus augmented explicit substitutions variants global environment substitutions de bruijn indices handling name instantiation term rewrite system 
structured follows sec 
briefly review main concepts local bigraphs sec 
calculus homer 
sec 
contains presentation homer brs suggestion localised bigraphs generalisation local bigraphs links localised 
preliminaries section briefly recall main concepts theory local bigraphs give new definition parametric reaction rules 
asynchronous variant calculus homer introduced extended explicit substitutions higher order process passing homer bigraphical framework 
local bigraphs refer reader basic static dynamic theory pure binding bigraphs remaining details local bigraphs 
primarily simple term language intro graph transformation verification concurrency pre proceedings ctit technical report university twente august hildebrandt duced mentioned papers graphical representation bigraphs 
term language consists constructors parallel product prime parallel product bigraphs respectively 
prime parallel product merges regions single region prime bigraphs parallel product regions 
closure constructor bigraph removed outer name replacing name edge outer face local bigraph pair wherem number regions vector length xi set local names attached th region 
similarly inner face pair number sites yi local names attached th site 
compose bigraphs outer face inner face matches resulting bigraph content regions inserted respective sites links corresponding local names fused 
set controls provides control pair finite ordinals number binding free ports binding arity free arity written determines controls atomic non atomic controls active 
ground reaction rule pair ground bigraphs bigraphs holes outer face 
set ground rules reaction relation relation active context ground rule 
parametric reaction rules allow rules contain parameters replicated discarded just moved 
parametric reaction rule redex takes form inner faces map ordinals inducing instantiation defined 
parameter parametric reaction rule generates ground reaction rule 
differently original definition require outer names parameter specified explicitly parametric reaction rule ensure handle scope extension properly 
instantiation maps parameter redex parameter allows rules replicate parameters discard 
precisely ground bigraph closed links crossing regions factorised uniquely prime bigraphs cm xi 
map define instantiation def def higher order mobile embedded resources assume infinite set names ranged andlet range finite sets names 
range possibly empty sequences graph transformation verification concurrency pre proceedings ctit technical report university twente august hildebrandt xx xx xx fn table typing rules homer fn names range non empty sequences names referred addresses denote length address 
assume infinite set process variables ranged range finite sets variables 
set process expressions calculus homer asynchronous higher order mobile embedded resources explicit substitutions defined follows processes prefixes complementary actions usual prefixes plain chocs allow sequences names addresses name explicit type resource described actions responsible adding active process mobility calculus 
write 
process explicit syntactic substitution representing process context substitute type 
typing rules defined ensures closed free names contained 
usual restriction operator name prefixes andp bind variable contexts defined grammar processes augmenting symbol called hole written 
note holes typed process type placed hole 
define valid typing judgements form inductively rules tab 

consider typed processes 
note process typed respect finite set variables names written free names variables included set sub term typed type free variables usual addition free names defined fn fn respectively 
graph transformation verification concurrency pre proceedings ctit technical report university twente august hildebrandt say process free variables closed denote set closed processes 
equivalence classes closed process expressions consider processes equivalence 
omit trailing write andlet prefixing restriction right associative bind stronger explicit substitution explicit substitution bind stronger parallel composition 
set names nk denote nk write assuming 
reaction semantics provide homer reaction semantics defined structural congruence evaluation contexts reaction rules 
binary relation typed processes called typed relates processes type written 
consider typed relations 
relation called congruence typed equivalence relation satisfies implies rc contexts structural congruence defined congruence typed processes relating andp derived rules fn fn fn homer permits reactions arbitrarily deep location hierarchy permits reactions process arbitrarily deeply nested sub resource define concepts evaluation path contexts 
evaluation context context free variables hole guarded prefix occur object send constructor define family multi hole path contexts indexed path address set names inductively 
note evaluation context enables internal reactions active resources path context path address indicates path context hole set names indicates bound names hole 
side condition graph transformation verification concurrency pre proceedings ctit technical report university twente august hildebrandt send take fn apply bind names garbage fv table reaction rules homer definition path contexts ensures names path address hole bound 
bound names definition path contexts needed structural congruence permit vertical scope extension described 
handle vertical scope extension update type annotation location open operator defined path contexts 
define open operator path contexts inductively fn 
intuitively open operator removes names bound names hole adds type annotation locations part address path 
applied reaction rule condition open operator met conversion condition ensures extend scope open operator place restriction top level name captures 
structural congruence define reaction relation homer written typed relation typed closed processes satisfying rules tab 
closed evaluation contexts structural congruence 
send rule expresses passive resource sent sub location received address 
side conditions ensure location path bound context free names get bound movement 
open operator extends type annotation locations constituting location path lift restrictions 
take rule captures computing resource taken graph transformation verification concurrency pre proceedings ctit technical report university twente august hildebrandt sub location running address 
side conditions ensure location path bound context free name bound lift restriction 
possible open operator lifts restrictions extends type annotation locations 
rule apply replaces occurrence variable arbitrarily deep context content explicit substitution 
note overload apply applying operator general context path context 
result operator extends type annotation locations send constructors containing occurrence variable 
condition rule satisfied conversion context 
garbage responsible garbage collecting superfluous substitutions 
types ensure names disappear free names location top level reaction 
locations send constructors process receives resource get type annotation extended appear annotation 
bigraphical semantics homer section give bigraphical presentation homer brs homer 
signature homer give fully compositional translation homer terms bigraphs 
second translate path contexts reaction relation 
important criteria presentation show static operational correspondence homer presentation brs meaning structural congruence homer corresponds graph isomorphism bigraphical presentation reactions match 
signature controls take representing input prefixes send representing kinds passive active located resources 
controls var sub represent variable constructs explicit substitutions respectively 
signature atomic controls tname abbreviation typename abbreviation annotation represent explicit type annotation resource send constructors 
discuss detail having reaction rules bigraphical framework 
note path addresses represented port element sequence infinite family controls indexed length address 
total signature homer defined follows 
controls var tname atomic families controls take inactive family controls loca active controls def sub inactive graph transformation verification concurrency pre proceedings ctit technical report university twente august sub def hildebrandt var tname ann 
ions atoms homer send note controls restriction inactive process 
ensure static correspondence stated thm 

fig 
depict ions atoms translation left controls take loca similar send respectively 
chosen depict control tname just dot order able distinguish graphically tname var controls 
convention milner write varx atoms denote ions follows sub ann send write binding port names parenthesis 
operator extend bigraph identity wiring extending inner outer face bigraph 
ion send inner names outer names 
translation fully compositional translation homer bigraphs 
definition translation homer terms bigraphs define translation homer term inductively inference xx varx sub id xx id ann id fn loca id ann id fn send id ann id fn id xx fn take id xx translate type annotations follows graph transformation verification concurrency pre proceedings ctit technical report university twente august hildebrandt send ann var 
example translation term bigraph represent empty bigraph correct outer face parallel composition represented prime product closure represent restriction name variable represented node control var connect name represent explicit substitutions homer way augmented explicit substitution type annotation 
constructors represented place corresponding control containing representation resource representation type annotation set tname nodes enclosed place control ann 
prefixes pand pare encoded straightforwardly node respective control variable bound enclosed encoding require disjoint 
example translation homer terms bigraphs depict fig 
result translation static correspondence stated theorem proven app 
theorem static correspondence 
order reaction rules homer path contexts open operation 
define translation path context bigraph certain form called path bigraph inductively structure id loca id id ann id range path bigraphs 
homer subscript denote address hole superscript denote bound names hole 
define open operator path bigraphs extending type annotations id id loca id id ann id graph transformation verification concurrency pre proceedings ctit technical report university twente august hildebrandt loca id id ann id 
note just juxtaposition type annotations individual elements type annotations explicitly node element annotation result annotations multisets sets 
app 
sorting describes bigraphs corresponding homer processes 
reaction rules homer subsection reaction rules homer 
definition reaction rules homer define reaction rules homer send send id id ann id id sub id idx id id ann id take loca id id ann id take id bf sub id idx id id ann id apply sub id varx id id ann id sub id id id id ann id garbage sub id id id id rules chosen enumerate holes left right terms representing bigraphs omitting holes hole path contexts instantiation acts identity 
rules send take path bigraph bind names 
rules content ann node open operator set 
rules mimic counterparts homer closely 
note crucial explicitly typed parameters parametric reaction rule allow parameters contain outer names mentioned explicitly rules 
rule apply utilise general homer context satisfying sorting requirement close variable link reaction rule garbage discards explicit substitution defined 
proof operational correspondence stated theorem app 
theorem operational correspondence typed process graph transformation verification concurrency pre proceedings ctit technical report university twente august hildebrandt loca ann loca ann 
location restriction take closer look type annotations 
mentioned careful combining local names non linear process passing 
processes assuming structural congruent general give rise isomorphic bigraphs translation 
consider encoding type annotations processes give rise isomorphic bigraphs means detect closure occur outside inside location 
brss copy parameters lead kind problems mentioned 
fig 
illustrated type annotations helps distinguishing bigraphs 
name appears type annotation closure outside location copy parameter share link 
hand restricted name appear type annotation copy parameter distinct link 
immediate suggestion alternative type annotations represent name closures explicitly control binding port 
usual scope condition require place binding port representation process break usual structural congruence equalities fn 
jensen milner proposed solution problem copying parameters closed links unambiguously 
solution atomic res place restriction new kind outward binding port 
sole purpose res place facilitate binding port contrary binding ports normal binding bigraphs port bind inside node binds inside parent node 
change port behaves traditional binding port 
explicit representation restriction res place restriction behaves wrt structural equalities breaks equalities fn fn 
importantly solution provide desired bisimulation congruence 
typed perfect firewall equation hold fn 
reason explicit localisation links active sub locations loose local information graph transformation verification concurrency pre proceedings ctit technical report university twente august ann ann hildebrandt ann 
original representation localised links outer names process place context 
bigraphs localised links type annotations homer sets needed way associate arbitrary number names place unordered way 
left hand side fig 
sketched situation places representing homer process omitted links 
solution encoding game life introduce ann place child place contain tname place name want associate grand parent place 
annotation names places suggests extension local bigraphs associate names directly place unordered way illustrated right hand side fig 
call localised links 
direct consequence extension remove controls tname ann encoding represent type annotations directly localised links 
propose localised links replacement traditional links extension want able connect links ordered ports representing name connected port corresponding address location localised place type annotation 
formally suggest introduce new function definition local bigraph 
local bigraph set edges set places function localise map edges outer names set places localise pow 
require map satisfies scoping condition traditional links 
define composition bigraphs places function localise places function localise usual local bigraphs 
localisation function localise forf defined follows link map link localise localise localise link localise graph transformation verification concurrency pre proceedings ctit technical report university twente august hildebrandt locations edge remain unchanged composition name edge need combine locations localise localise links name edge respectively 
higher order calculus non linear active process mobility local names homer bigraphical reactive system homer 
prove structural congruence homer corresponds graph isomorphism homer tight operational correspondence reaction relation homer reaction relation homer 
presentation highlights importance keeping explicit track free names parameters reaction rules bigraphs 
address issue localisation names links suggests extension local bigraphs called bigraphs localised links 
interesting questions arise done 
foremost plan examine labelled transition bisimulation congruence derivable general theory bigraphs compare labelled transition bisimulation congruences homer 
process plan examine proof techniques known calculi concurrency mobility setting bigraphs 
especially plan investigate notion proof techniques related bisimulation equivalences bigraphs 
plan examine extension localised links respect facilitate encodings bigraphical reactive systems respect behavioural theory bigraphical reactive systems particular extension retains relative pushouts 
currently proposals exists expressing constraints possible nesting nodes linkage ports interesting see sorting app 
expressed settings particular enforce strict control movement locations closed free links 
capture information outward binding node introducing explicit node representing restriction 
authors members bigraphical programming languages group itu helpful discussions encode certain properties constructs bigraphs 
robin milner ole gh jensen providing access early drafts papers 
graph transformation verification concurrency pre proceedings ctit technical report university twente august hildebrandt abadi cardelli 
curien 
levy explicit substitutions journal functional programming pp 

graph ic encodings koenig montanari gardner editors graph transformations process algebras modeling distributed mobile systems number dagstuhl seminar proceedings 
hildebrandt cps encoding name passing higher order mobile embedded resources baeten corradini editors proceedings th international workshop expressiveness concurrency express electronic notes theoretical computer science pp 

hildebrandt cps encoding name passing higher order mobile embedded resources theoretical computer science accepted publication special issue tcs 
maffeis expressive power polyadic synchronisation calculus nordic journal computing pp 

castagna vitek seal calculus accepted publication information computation 
bigraphs example technical report tr university copenhagen 
ferrari montanari calculus explicit substitutions theoretical computer science pp 

hildebrandt bisimulation congruences homer calculus higher order mobile embedded resources technical report tr university copenhagen 
handling substitutions explicitely calculus proceedings second international workshop explicit substitutions theory applications programs proofs pp 

url fr dh sigma full ps gz jensen mobile processes bigraphs ph thesis department computer science aalborg university forthcoming 
jensen milner bigraphs transitions proceedings rd acm sigplan sigact symposium principles programming languages popl pp 

jensen andr milner bigraphs mobile processes revised technical report cl tr university cambridge computer laboratory 
url www cl cam ac uk techreports cl tr pdf graph transformation verification concurrency pre proceedings ctit technical report university twente august hildebrandt milner bigraphs petri nets desel reisig rozenberg editors lectures concurrency petri nets advances petri nets lecture notes computer science pp 

milner bigraphs names multiple locality technical report cl tr university cambridge computer laboratory 
url www cl cam ac uk techreports cl tr pdf milner local bigraphs confluence calculus draft october 
rose explicit substitution tutorial survey lecture series ls brics department computer science university aarhus pp 
sangiorgi expressing mobility process algebras order higher order paradigms ph thesis department computer science university edinburgh 
thomsen plain chocs second generation calculus higher order processes acta informatica pp 

simple sorting homer appendix simple sorting ensure subset ground bigraphs bigraphs correct respect encoding 
sorting introduces requirement possible nesting nodes linkage performed particularly sets free names variables kept disjoint 
need nomenclature differentiate different kinds links ports stating definition class bigraphs interested 
kinds ports name variable ports 
name ports port tname node free ports take send node 
variable ports free port def node var node binding port sub node 
way define kinds links name link link name ports free name 
variable link link variable ports connected free variable name 
definition bigraphs homer define sub class ground bigraphs homer bigraphs satisfy requirements allow name variable links links bigraph 
variable link connected number var ports 
graph transformation verification concurrency pre proceedings ctit technical report university twente august hildebrandt variable link bound take port contains def ports 
variable link bound port sub node unique def port resides child location def node occur 
name link connected number name ports 
pair distinct tname nodes enclosed ann node name ports connected distinct links 
loca send node contain unique ann child node locations ann nodes occur 
tname nodes ann node kind nodes reside 
introduced abovementioned restrictions enforce bigraphs structure corresponding interpret homer bigraphs 
homer sets names variables definition disjoint links bigraphs encode sets need additional requirements enforce distinction kinds links 
requirements enforce loca node send node contains unique ann node 
require def appear child sub node 
require tname nodes representing type annotation occur ann node unique sense linked different name links 
proposition invariant class bigraphs preserved reaction relation defined sec 
contains images translation def 

static correspondence appendix prove homer processes structural congruent image encoding isomorphic 
prove direction separately 
proposition implies 
proof translation compositional consider axioms defining separately 
cases axioms follows directly translation translate parallel composition homer prime product bigraphs shown associative commutative translate unit 
graph transformation verification concurrency pre proceedings ctit technical report university twente august hildebrandt prove case axiom reordering restrictions show bigraphs constructed manner assume distinct names 
construct nm add edges link graph em en points en 
remove names axiom scope extension fn proven way 
construct bigraphs way 
loss generality assume names outer face respectively 
build combine prime product add edge en link graph bigraph points name point en 
fn touch points 
remove name remaining cases proceed manner exhibiting constructing forms bigraphs 
proposition 
prop 
prop 
follows homer processes structural congruent image encoding isomorphic 
theorem static correspondence 
mimicking reactions appendix reactions homer mimicked encoding brs 
consider reactions omitted top level types 
graph transformation verification concurrency pre proceedings ctit technical report university twente august send ann loca var def sub loca ann hildebrandt ann ann var def sub loca loca ann ann ann 
mimicking rules send apply 
second line location containing process variable enclosed explicit substitution substitute type bigraphs matching sequence reactions depicted fig 

draw possible free name operational correspondence appendix prove main theorem operational correspondence reactions homer reactions encoding brs homer 
inspecting translation easy see evaluation contexts homer translated active contexts conversely image translation active context preimage evaluation context 
follow method jensen milner characterising reactions homer homer forms expressions involved 
definition translation connect characterisations 
cases garbage send remaining similar 
prop 
prop 
characterise reaction relations rules garbage garbage respectively terms form processes bigraphs 
proposition rule garbage forms fn evaluation context graph transformation verification concurrency pre proceedings ctit technical report university twente august hildebrandt proposition rule garbage forms sub id id outer face active context 
outer face connected binder surrounding sub control 
lemma operational correspondence garbage rule garbage rule garbage 
proof prop 
know forms fn conversion assume bound names distinct disjoint free names loss generality hole annotated type correspondence structural congruence graph isomorphism sub id id fn letting ann id 
prop 
holds 
proceed manner case send 
prop 
prop 
characterise reaction relations rules send send respectively terms form processes bigraphs 
proposition rule send forms evaluation context proposition rule send graph transformation verification concurrency pre proceedings ctit technical report university twente august forms hildebrandt send id ann id id sub id id ann id outer face ofh active context inner face andf path bigraph inner face note leave holes hole path contexts unspecified 
lemma operational correspondence send send rule send rule send 
proof prop 
know forms conversion assume bound names distinct disjoint free names loss generality hole annotated correspondence structural congruence graph isomorphism send id ann id id sub id id ann id prop 
holds 
theorem operational correspondence typed process graph transformation verification concurrency pre proceedings ctit technical report university twente august 
