software framework matchmaking semantic web technology lei li ian horrocks department computer science university manchester oxford road manchester pl uk email lil horrocks cs man ac uk important objective semantic web electronic commerce interactions flexible automated 
achieve standardisation ontologies message content message protocols necessary 
investigate semantic web services technologies support service advertisement discovery ecommerce 
particular describe design implementation service matchmaking prototype uses daml ontology description logic reasoner compare ontology service descriptions 
representing semantics service descriptions matchmaker enables behaviour intelligent agent approach closely human user trying locate suitable web services 
results initial experiments testing performance prototype implementation realistic agent commerce scenario 
keywords semantic web web services ontologies matchmaking semantic web requires data machine readable just web nowadays wants data machine understandable 
quote tim berners lee director world wide web consortium prime architect semantic web semantic web goal unifying system web human communication un restraining possible complexity reality described 
semantic web widely believed easy realise range tools applications difficult handle framework current web 
examples include knowledge repositories search agents information parsers developers user applications need worry interpret information web ontologies provide vocabulary explicitly defined machine understandable meaning 
important semantic web application area commerce 
particular great deal attention focused semantic web services aim describe implement web services accessible automated agents 
ontologies describe services agents human automated advertise discover services semantic specification functionality parameters cost security 
step realising semantic web new standards defining ontologies developed 
rdf developed rdf core working group web markup language provides basic ontological primitives daml oil ontology language extends rdf richer set primitives boolean operators cardinality constraints basis web ontology language working group development owl ontology language standard 
applications exchange semantic information need common ontologies 
ontology written daml oil designed purpose describing web services daml ontology 
case study commerce application daml service ontology provide vocabulary ser vice descriptions 
descriptions matchmaking prototype repository agents advertise search services match semantic description 
jade agent platform prototype racer dl reasoner order compute semantic matches service advertisements service requests 
illustrate difficulties application daml ontology dl reasoner show overcome prototype implementation 
carry performance analysis prototype order discover approach feasible large scale web applications 
background section give overview semantic web languages technologies relevant prototype implementation 
ontology languages mentioned ontologies play key role semantic web providing vocabularies applications order understand shared information 
daml oil ontology language designed specifically semantic web 
daml oil result merging ontologies languages oil daml 
oil integrates features frame systems description logics dls rdf syntax daml tightly integrated rdf enriching larger set ontological primitives 
daml oil description logic dl reasoner compare semantically descriptions written daml oil 
believe provides powerful framework defining comparing commerce service descriptions 
section discuss detail dls general daml oil particular 
coincidentally similar approach adopted di interested reader referred 
service description languages section discuss important part matchmaking prototype choosing appropriate service ontology illustrate reasonable consider daml context 
wsdl wsdl web services description language xml format describing network services terms derived concrete data formats protocols implementation 
communication protocols message formats standardized web community increasingly possible important able describe communications structured way 
wsdl addresses need defining xml grammar describing network services collections communication endpoints capable exchanging messages 
wsdl service definitions provide documentation distributed systems serve recipe automating details involved application communications 
wsdl support semantic description services 
example support definition logical constraints input output parameters concept input output types defined xsd 
uddi emerging xml standard web service description uddi universal description discovery integration 
enables business describe business services ii discover businesses offer desired services iii integrate businesses providing registry businesses web services 
uddi describes businesses physical attributes name address services provide 
addition uddi descriptions augmented set attributes called tmodels describe additional features classification services taxonomies naics north american industry classification system 
uddi represent service capabilities tmodels provide tagging mechanism search performed done string matching fields defined 
locating services basis semantic specification functionality 
daml daml supplies web service providers core set markup language constructs describing properties capabilities web services unambiguous computer interpretable form 
daml markup web services intended facilitate automation web service tasks including automated web service discovery execution interoperation composition execution monitoring 
daml service descriptions structured essential types knowledge serviceprofile servicemodel describes serviceprofile 
matchmaking process serviceprofile typically required provides information needed agent discover service meets requirements 
paolucci described experiments designed prove daml service profile take challenge representing functionalities web services 
matchmaking systems section briefly examine approaches matchmaking problem 
infosleuth infosleuth agent information discovery retrieval system adopts broker agents perform syntactic semantic matchmaking 
broker agent matches agents require services agents provide services 
maintaining repository containing date information operational agents services broker enables querying agent locate available agents provide appropriate services 
syntactic brokering process matching requests agents basis syntax incoming messages wrap requests semantic brokering process matching requests agents basis requested agent capabilities services agent capabilities services described common shared ontology attributes constraints 
single domain specific ontology shared vocabulary agents specify advertisements requests broker 
infosleuth service capability information written ldl logical deduction language 
agents set ldl deductive rules support inferences expression requirements matches set advertised capabilities 
contrast prefer describe services standard ontology language declarative semantics 
descriptions easy understand highly agents particular deductive mechanism 
retsina sycara developed multiagent infrastructure named retsina reusable task structure intelligent network agents 
mediation system relies service matchmaking specification capability service descriptions different 
distinguished general agent categories cyberspace service provider service requester middle agent 
describe agents capabilities matchmaking process defined implemented agent capability description language called larks language advertisement request knowledge sharing 
larks offers option application domain knowledge advertisement request local ontology written specific concept language itl describe meaning larks specification 
infosleuth methodology differs system aspects service description language agent platform matching engine 
approach want sure service description language lends negotiation process service description language applicable negotiation stage 
dl daml oil description logics daml oil central approach 
details formalisms helpful understanding remainder 
finding suitable services consuming agent may enter negotiation providing agent regarding terms service provision cost delivery 
description logic description logics known family knowledge representation formalisms 
notion concepts unary predicates classes roles binary relations mainly characterized constructors allow complex concepts roles built atomic ones 
dl reasoner check concepts subsume 
dl knowledge base typically consists components tbox abox 
tbox defines structure knowledge domain consists set asserted axioms say definition new concept terms previously defined concepts 
abox contains concrete example knowledge domain asserted axioms individuals individual instance concept individual related role 
sections dl notations express design 
useful give overview dl languages notations 
detailed discussion dls scope interested reader referred details 
description logics syntax elementary descriptions atomic concepts atomic roles 
complex descriptions built inductively concept constructors 
notation 
letters atomic concepts letter atomic roles letters concept descriptions 
description languages distinguished constructors provide language minimal language practical usage 
concept descriptions formed syntax rule atomic concept universal concept bottom concept atomic negation intersection value restriction limited existential quantification give examples expressed suppose person atomic concepts 
erson erson concepts describing intuitively persons female female 
addition suppose haschild atomic role form concepts erson haschild erson haschild denoting persons child persons children female 
bottom concept describe persons child concept erson haschild 

basic language fulfil requirements investigation need able reason daml oil descriptions include cardinality restrictions roles datatypes integers strings 
dl shiq expressive power equivalent daml oil 
language consists basic language plus negation arbitrary concepts qualified cardinality restrictions role hierarchies inverse roles transitive roles datatypes restricted form dl concrete domains 
detailed discussion dl constructors 
increased expressive power language manifested range additional constructors including full existential quantification negation arbitrary concepts atmost cardinality restriction atleast cardinality restriction exactly cardinality restriction qualified atmost cardinality restriction qualified atleast cardinality restriction qualified exactly cardinality restriction concrete domain max restriction concrete domain min restriction concrete domain exactly restriction examples expressed new constructors oman erson oman haschild erson intuitively denotes mothers oman denotes individuals women mother haschild denotes mother children mother haschild female denotes mother exactly daughters erson denotes adults person age greater 
dl semantics order define formal semantics dls consider interpretations consist non empty set domain interpretation interpretation function assigns atomic concept set atomic role binary relation interpretation complex concepts built interpretation primitive concepts 
say concepts equivalent write iff interpretations instance going back semantics concepts easily verify haschild haschild student haschild student equivalent 
complete interpretation function concept description 
terminologies dls knowledge base equivalent ontology consists set terminological axioms assert concepts roles related 
general case terminological axioms form concepts roles 
kind axiom called inclusion second called equivalence 
equivalence left hand side atomic concept called definition thought introducing symbolic names complex descriptions 
daml oil daml oil dl web ontology language 
dl daml oil describes structure domain terms classes concepts dl properties roles dl 
daml oil fact shiq dl provides equivalent set class constructors class property axioms daml oil extends shiq oneof constructor really hold general case knowledge base contain arbi axioms 
defining classes extensionally 
shiq daml oil supports datatypes data values class description daml oil relying xml schema datatypes purpose 
complete description daml oil interested reader referred 
daml service ontology chosen daml web service ontology basis represent commerce constructs advertisements service queries 
daml daml oil service description ontology 
tight connection daml oil daml supports need semantic representation services 
daml oil allows subsumption reasoning concept taxonomies allows definition relations concepts possible apply property restrictions parameters service concepts 
means daml define entities commerce life cycles advertisements requests implement matchmaking functionalities dl reasoner compute subsumption relationships concepts 
daml aims facilitating discovery execution interoperation composition execution monitoring web services 
defines notions service profile service service model service works service grounding service 
service profile describes provides service expected quality service transformation produced service terms expects order run correctly results produces 
specifically specifies preconditions satisfied service effectively inputs service expects expected effects result execution service outputs returned 
behavioural aspects service profile outside scope interest fact service represented inputs outputs properties represent functional attributes service 
investigation concluded ability daml describe semantics web services meets requirements matchmaking framework restrictions constraints service descriptions expressed provides shared semantics needed achieve interoperability descriptions amenable automated reasoning provides appropriate support datatypes flexibility provided support loosely structured descriptions semistructured data 
service description section explain daml oil daml ontology capture various descriptions commerce life cycle 
sample ontology service description ontologies important role play designed domain specific sample ontology sales computers order achieve agreement semantic level various parties 
prototype oiled ontology editor build daml oil ontologies 
purpose clarity compactness dl notions place daml oil syntax 
ontology daml class common superclass query template expressed advertisement query defined kinds services ontology sales 
sales describes sale item constraints object properties datatype properties unit price 
delivery describes structure delivery information specifying exactly exactly 
note simple ontology intended didactic purposes 
realistic applications larger comprehensive ontology course required 
accordance daml specification include providing requesting actors values properties 
doing allow advertiser requester specify restrict business 
actor actor item integer rice integer delivery delivery location date actor integer express concept computer example defined subclass properties 
positiveinteger athlon noted section service represented input output properties profile 
input property specifies information service requires proceed computation 
example pc selling service require information unit price quantity inputs sell 
outputs specify result operation service 
pc selling case output item description acknowledges sale 
divide restriction properties inputs outputs context 
particular inputs matchmaking algorithm division 
buyers sellers describe business constraints unit quantity unit price delivery information outputs describe product 
inputs parameter outputs parameter inputs rice inputs inputs item outputs simple constructs allowed express concepts needed context arbitrarily complex daml oil constructs required 
sections show examples matchmaking process 
advertisement show example advertisement 
suppose want specify concept advertisement actor sell pcs 
particular restrictions items provided actor name georgia items pcs memory size mb quantity pcs bought unit price seller greater goods delivered goods delivered bristol 
dl notation advertisement written actor georgia actor item rice delivery delivery date location manchester daml oil way express concept unit price define new datatype describe rice 
purpose achieving concept reasoning datatypes racer reasoner racer syntax express kind concept rice 
addition intuitively advertisement instance concept looks reasonable express reason treating advertisements tbox concepts tbox reasoning effective abox reasoning equivalent abox reasoning abox restricted assertions type 
simply treat instance advertisements atomic primitive concepts having abox assertion tbox assertions ca 
contexts commerce application individuals related properties lead loss inferential power 
issue scope interested reader referred 
query similarly advertisement define query actor buy pcs 
restrictions express provider actor greater items pcs processor pentium idea create called pseudo concept named ca sub concept individual instantiation expressed concept implication 
unit price 
description logic point view query advertisement identical subsumed 
note query specify delivery flexibility dl languages daml oil allows able find relevant matches 
revised design query actor item rice discussed section accordance daml providing included values properties definition advertisements queries 
looks reasonable rational fatal problem lying design 
consider section property actor georgia 
consider request query section suppose perform matchmaking operation query dl reasoner semantically compare daml oil descriptions 
due existence actor georgia subsumption relationship prove descriptions incompatible intersection equivalent bottom concept 
case requester knowledge service looking provided actor name georgia 
kind match quite weak allow result selection hierarchy match types varying specificity discussed detail section 
believe design problem inherent daml specification information inside service profile difficult automated reasoning techniques compute semantic matches service descriptions 
order fix problem modified design advertisements queries 
new design treats advertisements queries objects various properties profile 
information providing requesting services removed service profile attached advertisements queries properties thought extra information provided advertiser querier 
core serviceprofile component attached advertisements queries profile property includes constraints item information unit price unit quantity delivery information 
matchmaking phase serviceprofile part advertisement computing semantic matches 
constraints realistic commerce applications ebay amazon consider prototype 
modified design notation separate different components advertisement actor georgia actor profile item rice delivery delivery similarly write queries www ebay com www amazon com date location manchester query actor profile item rice matchmaking operation matching definition matchmaking defined process requires repository host take query advertisement input return advertisements may potentially satisfy requirements specified input query advertisement 
formally specified set advertisements advertisement repository 
query advertisement matchmaking algorithm repository host returns set advertisements compatible matches matches compatible descriptions compatible intersection satisfiable satisfiable example consider query query actor alan actor profile item rice intersection query section satisfiable 
formally matches query matching algorithm understand matching algorithm adopted prototype need introduce definition degree match 
notion introduced particularly useful merely determine advertisement obvious host needs return advertisements receiving query reasonable host return advertisements receiving advertisement advertiser want know advertisements modification business strategy 
query semantically incompatible 
starting matching degree definition described extend match level intersection satisfiable exact advertisement request equivalent concepts call match exact formally plugin request sub concept advertisement call match plugin formally subsume request super concept advertisement call match subsume formally intersection intersection advertisement request satisfiable call match intersection order distinguish disjoint advertisement request completely incompatible distinction formally 
disjoint call match disjoint 
degrees match organized discrete scale 
exact matches clearly preferable plugin matches considered best expect advertisers provide specific sub class services advertiser selling pcs expected sell specific kinds pc subsume matches considered third best advertiser provide specific super class services advertiser selling pcs sell pcs general intersection considered fourth best says advertisement incompatible request disjoint lowest level shows item satisfy advertisement request considered failed match 
definitions match degrees introduce process matching request 
racer system compute serviceprofile hierarchy advertised services 
incoming request racer classify input output parts request serviceprofile compute input output parts subsumption relationships input output parts advertisement 
express precisely argued subsume preferable plugin discussion scope qualitatively affect performance prototype 
piece pseudocode table 
pseudocode inequations follows definition match ordering disjoint intersection subsume plugin exact 
request forall advertisements repository exact concept equivalent return exact concept subsumes return plugin concept subsumes return subsume concept subsumes return disjoint return intersection table pseudocode request matching prototype implementation section describe implementation multi agent system including matchmaking advertising querying agents 
system emulates simple realistic commerce scenario 
issues security fraud taken account considered relevant purpose investigation ontology service description dl matchmaking service 
roles test usability service descriptions matchmaking semantic web introduce scenario agents play variety roles 
host manages repository advertisements queries performs matching function communicating dl reasoner 
advertiser publishes advertisements host modifies withdraws browses advertisements stored repository 
seeker sends query host gets matched advertisements back 
kinds roles played entity different times time information broker advertiser seeker time 
definition cover different types matchmaking systems adding roles concrete entity real system 
functionalities matchmaking service provides kinds functionalities advertising service querying service withdrawing published service modifying published service browsing advertised services repository 
advertising advertiser publishes host service description providing seeking 
description captures relevant features service including service profile component matchmaking 
querying seeker submit query find relevant advertisements currently available ones 
adding constraints aspects seeker interested query filter irrelevant advertisements 
kinds queries defined volatile query seeker submits query host matched advertisements immediately returned query discarded host 
persistent query seeker submit persistent query host 
persistent query query remain valid length time defined seeker 
host immediately returns matched advertisements currently repository 
validity period query matching advertisement added repository advertisement modified match host notify seeker new set matched advertisements including changed added 
persistent query automatically removed validity period ended 
modifying withdrawing advertiser modify withdraw advertisements published 
advertiser published advertisement host host notifies id indicating advertisement advertiser 
id host advertiser specify advertisement modified withdrawn 
obvious security issue involved simply assume partners framework trusted 
browsing host offers functionality browsing currently available advertisements 
maintains advertisement repository published advertisements stored 
finding advertised services browsing parties information tune advertisements submit turn maximize likelihood matching 
agents chose jade agent platform goal jade simplify development multi agent systems ensuring standard compliance comprehensive set system services agents compliance fipa specifications 
benefit jade concentrate agent functionalities leave things communication agents platform 
kinds agents implemented responsibility initialize racer server assigned ontologies maintain advertisement repository 
core com ponent system operation described detail section 
publishes advertisement withdraws modifies advertisement needed 
browse advertisement repository 
choice publishing volatile persistent request 
browse functionality 
matchmaking matchmaking process initializes racer service ontology described section racer system compute subsumption relations advertisements requests matchmaking process 
receives advertisement assigns unique id stores repository 
sends advertisement racer system added subsumption hierarchy 
receives request uses racer system compute match degrees request advertisement repository described section 
matching advertisements returned seeker agent ids match degrees exact plugin 
efficiency reasons match results persistent request maintained request expires 
stores persistent requests id expiry duration 
time classifying new updated advertisements check persistent requests delete expired compute match degree respect new updated advertisement 
match information added stored information initial matchmaking complete result persistent request returned seeker agent 
evaluation terms functionality matchmaking stage achieved purpose respond input request results matched advertisements 
order find match particular request racer reasoner needs check satisfiability request advertisement previously published matchmaking host high worst case complexity reasoning daml oil descriptions question scalability arises 
prototype implementation carry simple experiments designed test system performance realistic agent commerce scenario 
experiment datasets advertisements recorded time spent dl reasoner find matched advertisements response request datasets artificially generated randomly creating specifications advertisements range location randomly choosen set concepts ontology numbers randomly choosen fixed range integers experiments performed machine equipped pentium iii mhz processor mb main memory running linux kernel version 
results showed regardless number advertisements advertisements classified racer tbox reasoning time required respond matching request milliseconds small accurate measurement difficult 
fast matchmaking system handle high frequency matching requests 
contrast classifying advertisements tbox quite timeconsuming 
comparison different sized datasets shown see average classification time advertisement shown axis increases rapidly size dataset shown axis 
time rises ms advertisement dataset size increases ms advertisement dataset size 
test illustrates dataset size important issue applications dl reasoner mean large datasets handled 
instance prototype tbox classification offline published advertisements classify tbox matchmaking process starts classified tbox reason requests 
new incoming advertisements simply insert classified tbox hierarchy easier classifying entire tbox 
key inference problems logic implemented racer system worst case exptime complexity size input 
removing advertisements tbox hierarchy difficult 
discussion racer classification times introduced service matchmaking commerce assessed requirements service description language ontology argued daml oil daml fulfill requirements 
argument supported design implementation prototype matchmaker uses dl reasoner match service advertisements requests semantics ontology service descriptions 
representing semantics service descriptions matchmaker enables behaviour intelligent agent approach closely human user trying locate suitable web services assuming suitable ontology developed deployed 
design prototype matchmaker revealed problem daml matchmaking daml service profiles contain information effective matching 
solved problem separating various components description particular description service provided separated descriptions providing requesting actors 
performance prototype implementation evaluated simple realistic commerce scenario 
revealed initial classification large numbers advertisements quite time consuming subsequent matching queries advertisements performed efficiently 
basis preliminary results possible dl reasoning technology cope large scale commerce applications include extensive testing order clarify fact case 
author members intelligent enterprise technology laboratory hp labs especially david claudio bartolini kind help support 
author funded departmental scholarship department computer science university manchester 
baader calvanese mcguinness nardi patel schneider eds 
description logic handbook theory implementation applications 
cambridge university press 
bartolini preist jennings architecting reuse software framework automated negotiation 
giunchiglia odell wei eds 
proc 
rd int workshop agent oriented software engineering pages 
springer 
bechhofer horrocks goble stevens oiled reasonable ontology editor semantic web 
proc 
joint german austrian conf 
artificial intelligence ki number lecture notes artificial intelligence pages 
springer 
appeared proc 
description logic workshop dl 
bechhofer van harmelen hendler horrocks mcguinness patel schneider stein owl web ontology language 
proposed 
available www 
org tr owl ref accessed dec 
poggi jade fipa compliant agent development environment 
proceedings fifth international conference autonomous agents pages 
acm 
berners lee weaving web 
san francisco 
brickley guha rdf vocabulary description language rdf schema 
proposed 
available www org tr rdf schema accessed dec 
krishnamurthy naqvi tsur zaniolo ldl system prototype 
ieee transactions knowledge data engineering 
haarslev ller racer system description 
proc 
int 
joint conf 
automated reasoning volume lecture notes artificial intelligence pages 
springer 
horrocks daml oil reason able web ontology language 
jensen jeffery bertino hm jarke eds 
proc 
edbt number lecture notes computer science pages 
springer mar 
horrocks patel schneider comparing subsumption optimizations 
franconi de giacomo macgregor nutt welty eds 
proc 
description logic workshop dl pages 
ceur electronic workshop proceedings ceur ws org vol 
horrocks patel schneider van harmelen reviewing design daml oil ontology language semantic web 
proc 
th nat 
conf 
artificial intelligence aaai pages 
aaai press 
horrocks sattler ontology reasoning shoq description logic 
nebel ed 
proc 
th int 
joint conf 
artificial intelligence ijcai pages 
morgan kaufmann 
horrocks sattler tobies practical reasoning expressive description logics 
ganzinger mcallester voronkov eds 
proceedings th international conference logic programming automated reasoning lpar number lecture notes artificial intelligence pages 
springer verlag 
horrocks sattler tobies reasoning individuals description logic shiq 
mcallester ed 
proc 
th int 
conf 
automated deduction cade volume lecture notes computer science pages 
springer 
mcguinness ontological issues knowledge enhanced search 
proceedings formal ontology information systems 
published frontiers artificial intelligence applications ios press 
nodine ngu semantic dynamic heterogeneous data sources infosleuth 
proc 
th international conference data engineering pages 
ieee computer society 
nodine fowler perry taylor unruh active information gathering infosleuth 
international journal cooperative information systems 
donini system principled matchmaking electronic marketplace 
international journal electronic commerce 
volume 
paolucci kawamura payne sycara semantic matching web services capabilities 
horrocks hendler eds 
proc 
st international semantic web conference iswc pages 
springer 
sycara lu klusch dynamic service matchmaking agents open information environments 
acm sigmod record special issue semantic interoperability global information systems 
sycara paolucci van retsina mas infrastructure 
technical report cmu ri tr robotics institute technical report carnegie mellon 
tessaris questions answers reasoning querying description logic 
phd thesis university manchester department computer science apr 
daml services coalition 
daml semantic markup web services 
available www daml org services daml daml html accessed may 
bartolini preist semantic web support business business commerce lifecycle 
proceedings eleventh international conference world wide web pages 
acm 
uddi technical white 
available www uddi org accessed nov 
van harmelen patel schneider horrocks description daml oil march ontology markup langauge 
available www daml org html accessed nov 
web services description language wsdl 
note march 
available www org tr wsdl accessed nov 

