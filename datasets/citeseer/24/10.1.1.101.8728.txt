evolved representations computational creativity thorsten thesis submitted fulfilment requirements degree doctor philosophy key centre design computing department architectural design science university sydney nsw australia email thorsten arch usyd edu au supervisor prof john gero support guidance period ph providing stimulating research environment 
staff fellow students key centre design computing interesting open discussions help numerous administrative computing issues especially early time key centre 
go authors free software research preparation thesis gnu common lisp cmu lisp latex xfig gnuplot linux gnu operating system 
partner love support encouragement philosophical arguments creativity listening helping express ideas preparation figures 
supported australian research council university sydney postgraduate research award 
computing resources provided key centre design computing 
computational process representation plays important role 
depending representation chosen designs generally representable restricting size search space 
representation change topology search space making designs outcome design process 
generally representations designed minimize bias caused representation 
thesis explores possible develop specific representations influence design process useful predictable way possible method creative computational processes 
evolutionary algorithms 
algorithms initial representation referred basic representation symbols initial alphabet basic genes 
representation developed evolved representation adding number evolved genes 
evolved genes encapsulate fixed combinations basic genes protect disruption evolutionary design process 
consequence design processes evolved representation biased favour gene combinations 
gene combinations associated certain specific features designs focus introduced design process centred designs show features 
create appropriate evolved genes minimal user interaction machine learning approach developed 
evolutionary algorithm creates sample individuals set user provided example designs evolved genes created successful gene combinations sample individuals 
thesis shows creation focus evolved representation fulfil procedural definitions creativity literature certain finite system restrictions taken account 
additional requirement ability modify focus design process 
focus created evolved representation modifying evolved representation provides way induce changes focus 
creation transformation evolved representations demonstrated different example applications 
example floor plans frank lloyd wright houses create evolved representation designs produced representation show similarities example floor plans 
possibility transformation search space demonstrated modification evolved genes changes proportions living service areas designs created 
second example tree structure basic representation requiring complex notion evolved genes 
evolved representation created set paintings dutch painter mondrian window design frank lloyd wright 
designs produced representations show similarities paintings window design respectively 
different transformations focus demonstrated example mixing representations created paintings window adapting evolved representations different ii iii application domain 
analysis data gathered example runs gain quantitative measures distribution evolved genes created transformation search space interaction evolved representation fitness characteristic values 
contents ii goal thesis 
organization thesis 
background evolutionary algorithms background 
variable length representation 
genotype phenotype distinction 
multi level representation designs 
human computational creativity 
creativity variables 
creativity exploration transformation 
evolved representations representation focus design processes 
basic implementation schema 
evolutionary algorithms 
influencing search space evolved representations 
transformation search space 
creating evolved representations 
feedback evolutionary system 
creating new designs evolved representations 
computational creativity finite systems closed worlds 
focussing creativity finite system 
focussing creative 
soft focus versus hard focus 
moving focus 
humans finite systems 
requirements creative design process 
evolved representations computational creativity focussing transformation evolved representations 
methods transforming representation 
mixing evolved representations 
filtering genetic material 
iv contents direct manipulation evolved representation 
control transformation operations 
interpretations evolved representations evolved representations schema theorem 
evolved representations genetic engineering 
evolved representations style 
evolved representations case design 
evolved representation cross breeding 
combining genetic material 
unit inheritance 
evolved representations artificial life 
evolved representations 
evolved representations genetic programming 
evolved representations representations 
computational creativity 
implementing evolved representations formal notation 
influence evolved genes evolutionary algorithm 
evolved representation collection evolved genes creation evolved genes 
training methods 
non consecutive evolved genes 
interlocking evolved genes 
dominant recessive genes 
example applications general implementation 
selection 
design example generating floor plans 
background 
basic representation 
learning representation 
evolved genes produce new designs 
shifting focus manipulation evolved genes 
discussion results 
design example generating paintings 
background 
representing mondrian paintings 
representing frank lloyd wright window 
definition evolved genes 
creating evolved representation 
evolved representation 
transforming evolved representation 
discussion results 
contents vi quantitative analysis examples generation evolved genes 
population dynamics 
fitness sharing 
produced genes 
effect gene creation population 
dominant recessive gene pairs 
evolved genes 
focussing effect evolved genes 
usage evolved genes new designs 
influence evolved representation convergence time results 
discussion results example runs 
evolved representations created machine learning evolved representations incorporate knowledge 
evolved representations transform search space 
evolved representations focus design process 
evolved representation interacts fitness 
transformation representation changes focus 
creative 

automatic control transformations 
higher level evolved genes 

abstracts published papers chapter kind design activity design worked represented way 
human designer designs example represented models drawings verbal descriptions 
computer design designs usually represented groups pixels programs lines shapes general purpose cad programs higher level objects walls rooms purpose specific cad programs 
general language term representation method refer different ways represent designs representation refers particular instance 
computer science context word representation refer method representation floating point representation 
thesis second meaning representation example evolved representations title thesis interpreted evolved methods representation 
human designer usually large number representations available representation suitable working 
humans introduce new representations represent objects part world experience sensory organs example vector representations dimensional objects 
design computing hand representation representations explicitly defined 
different representations suggested optimized specific design domains design methods see example shih bentley wakefield olivier stal individual computational design system different representations available 
choice representation influence outcome design process 
representation designs may difficult represent designs may representable 
example computer allow design perfectly sinusoidal shaped roof difficult represent roof follows freehand form 
cardboard model hand freehand form easier generate perfectly sinusoidal shape 
anecdotal evidence points fact architects design tend produce different kinds designs models design 
applies design process implemented computer program 
design represented representation outcome design process representation 
case human designers possible representation influences computational design process easier program find designs 
depending design process designs outcome design process 
example case stochastic optimization processes evolutionary systems simulated annealing 
cases representation introduce bias design process 
selection representation high importance development computational design system 
obviously choosing representation programmer ensure possible potentially interesting designs represented 
generally desirable minimize bias introduced representation 
opposed user provided design criteria bias caused representation influences outcome design process implicit way obvious user difficult predict control 
idea developed thesis possible turn bias caused representation virtue deliberately choosing modifying representation influence design process certain desired way 
resulting focussing search process connected idea expansion search spaces notion definitions computational creativity 
focussing expansion search space explored thesis demonstrated example implementations 
goal thesis goal thesis develop method create representations evolutionary systems introduce user defined bias evolutionary design process show method implement creative computational process 
specifically method allow creation appropriate representations minimal user interaction allow representations production new designs allow modification bias applicable range design domains fulfil set minimum criteria creative computational process defined thesis 
organization thesis chapter chapter gives short overview research areas inspired 
chapters describe idea evolved representation focus search process possible computational creativity 
chapters chapter introduces idea evolving representations describes influence search process 
chapter chapter contains general considerations current definitions computational creativity different ways computational processes search search space 
ideas chapters brought chapter shows evolved representations implementation creative computational process 
creative processes possible evolved representations chapter discusses evolved representations number perspectives 
describes authors ways similar means goals 
different elements required implementation systems evolved representation described detail chapter 
chapters example implementations chapter shows implementation qualitative results chapter presents quantitative data gained examples 
chapter discusses qualitative quantitative results examples suggests directions development presents drawn 
chapter background works draws ideas methodologies number different research areas 
design computing research existing research computational creativity important part background 
notion evolved representation developed thesis evolutionary algorithms literature evolutionary algorithms forms important part background 
section contains background material necessary underpin chapters thesis 
additional background information appear individual sections chapter research areas connections methods ideas 
background material related particular example applications described short introductory sections chapter 
evolutionary algorithms background neo darwin theory evolution natural selection darwin combined modern knowledge genetics nearly universally accepted theory development species exist existed earth 
theory summarized survival fittest term contemporary charles darwin alfred wallace 
evolution seen unsupervised search adapted species unknown fitness landscape useful metaphor computational systems described population search algorithms 
evolutionary algorithms evolutionary systems evolutionary computation generic terms number algorithms follow metaphor fogel 
genetic algorithms holland evolutionary strategies schwefel evolutionary programming fogel genetic programming koza main instances evolutionary algorithms history evolutionary computation see de jong 
shows basic flowchart evolutionary algorithm 
cyclic process usually terminated sufficiently results produced algorithm failed improve results number cycles 
loop contains key elements evolutionary algorithm 
population individuals individual represents point search space point defined called genotype 
selection chose individuals parents decide individuals population survive population 
evaluation function calculate fitness value individuals higher fitness background create initial population termination condition select parents recombination mutation select new population offspring current population see text basic flowchart evolutionary algorithms selected parents removed population 
recombination generate new individuals combining genotypes individuals parents population 
usual operation crossover operator assembles new genotype sections taken parent genotypes 
simplest cross operator single point crossover shown 
mutation introduces additional variety individuals randomly changing parts genotype 
versions evolutionary algorithms recombination mutation example evolutionary programming strategies employ mutation 
parents crossover point offspring single point cross operator details particular algorithms aspects evolutionary algorithms see ck 

evolutionary algorithms application different areas design example electronic circuit design koza aircraft design wright holden layout design rosenman design frame structures hinton examples evolutionary algorithm applications see parmee main advantage evolutionary algorithms compared search algorithms suited background large search spaces little domain knowledge available 
allow flexible representations 
reasons evolutionary algorithms key tool research reported thesis see section 
variable length representation classic evolutionary algorithm applications individuals population represented genotypes identical length 
applications appropriate allow different genotype lengths requiring modifications genetic operations 
shows modified version single point crossover parent genotype random crossover point selected start segment swapped 
resulting genotype shorter longer genotype parents allowing size genotypes population adapt requirements fitness 
parents crossover points offspring variable length single point crossover genotype phenotype distinction natural reproduction distinction genotypes phenotypes langton 
word genotype refers genetic material individual word phenotype refers physical appearance 
distinction important genetic operations operate genotype fitness individual determined performance phenotype 
transformation occurs genotype phenotype natural systems usually called development example de 
strongly influenced environment transformation occurs genotype lead different phenotypes 
genotype phenotype development studied part artificial life research example systems lindenmayer prusinkiewicz de boer 
evolutionary algorithms genotype phenotype distinction rarely 
environmental influences generally modelled systems genotype phenotype transformation direct mapping considered part fitness function works directly genotype directly mapped phenotype 
multi level representation designs representation design computer generally readily interpretable human user 
transformation transform design internal representation example list points human readable representation example drawing 
described earlier section distinction evolutionary algorithm applications genotypes phenotypes individuals 
case different representations involved genotype representation background internal representation human readable representation internal representation human readable representation phenotype representation human readable representation applications evolutionary algorithms design representations identical 
systems user feedback fitness calculation example graf banzhaf phenotype 
systems distinction genotype phenotype fitness calculated directly genotype 
transformations genotype space phenotype space phenotype space human readable phenotype space 
non linear transformations generally reversible example possible determine genotype required produce certain phenotype see section 
shows schematic illustration different spaces 
genotype case composed alphabet transformations user understand map genotype phenotype human readable phenotype 
genotype phenotype transformation transformation transformation human readable form 
genotype phenotype transformation generative procedures grammars genotype described recipe opposed blueprint mapping 
genotype space phenotype space human readable space genotype genetic operations fitness user phenotype human readable phenotype different representation spaces involved design evolutionary computations transformations spaces example members spaces search space consists different spaces genotype search space phenotype search space search space human readable designs 
background size extent genotype search space defined genotype representation 
transformations number elements search spaces identical 
cases phenotype human readable search spaces fewer elements 
possible oneto genotype phenotype transformation phenotype produced selected randomly set phenotypes example stochastic systems see prusinkiewicz interaction environment taken account genotype phenotype translation 
general recommendation representations evolutionary algorithms representation suggested problem hand fogel angeline words units representation meaningful particular application 
specific criteria influence choice hammel representation exclude possibly interesting designs representation allow possibly interesting represented 
possibly interesting context means exist set conditions user want design output design process 
second condition intended restrict size search space complexity search process 
human computational creativity human creativity extremely interesting phenomenon 
person notion creativity proves hard define 
expressions creative solution commonly difficult give reason exactly considered creative 
attempts characteristics requirements usually mentioned item novel useful 
usefulness requirement intended exclude simple random novelty creative design fulfil purpose 
requirement novelty needs considerations 
side novelty relative frame required 
creative processes creator artefact observer 
observer different experiences judgement creativity relative observer different 
consistent useful judgement novelty judged respect creator concept called psychological creativity creativity boden 
side concept novelty restricted 
sentences paragraph hopefully useful probably novel called creative 
boden points merely novel idea described produced set generative rules familiar ideas 
genuinely original creative idea boden 
says transformations conceptual space required genuinely really novel object produced 
computational terms requirement defined addition variables extension search space gero 
creativity difficult define surprising precise computational definitions rare 
attempts define necessary conditions background creative process summarized section 
additional creative computational processes discussed section 
creativity variables creative design characterized computational terms design activity occurs new variable introduced design gero 
opposed routine design knowledge variables objectives expressed terms variables constraints expressed terms variables processes needed find values variables known priori third alternative innovative design occurs new variables introduced variables values outside usual scope 
computational terms routine design seen search fixed predefined search space dimensional design space 
referred exploitation 
creative design search proceeds outside boundaries predefined search space term exploration see gero 
creative design definition requires addition variables require variables remain unchanged 
cases distinguished variables added variables remain part design additive case variables added time variables deleted design substitutive case 
cases best visualized terms design space 
design variables variables seen coordinates dimensional space 
possible design mapped point space design space 
changing search space original search space search space expanded borders moved search space due variable substitution expanded search space due variable addition 
illustrates concepts described simplified schematic way 
original search space dimensions illustrated 
background shows instance innovative design defined new variables introduced existing ones values usual range 
illustrate possibilities creative design moving search space substituting variables expanding search space adding variables 
variable addition homogeneous addition heterogeneous addition respect addition variables cases distinguished homogeneous addition variable added type variables design example transform irregular pentagon hexagon adding side see see section heterogeneous addition variable added different type design example changing side triangle section circle variable added radius circle see 
creativity exploration transformation maher poon gomez characterize way designs generated variables exploration transformation 
exploration describes motion existing design space 
variable assume values mundane novel original 
mundane exploration uses converging operations original exploration uses diverging operations large extent 
transformation characterizes way design space changed 
values mundane novel original transformation defined corresponding roughly definitions routine innovative creative design gero 
exploration original novel mundane oe mt oe nt oe ot ne mt ne nt ne ot mt nt ot mundane novel original creative zone transition zone non creative zone transformation framework classify design processes terms exploration transformation maher poon gomez background shows framework variables define matrix characterize design processes 
classified creative process needs non mundane levels exploration transformation 
area original exploration transformation excluded assumed highly unstable 
maher poon gomez point inherent difficulty measuring creativity framework intended give measure potential able produce creative designs 
chapter evolved representations described choice representation influence result design process representation 
particular representation designs impossible generate designs produced 
effects restrict size search space second generally avoided implicit difficult predict control 
chapter shown possible create representations bias search process predictable controllable way 
means representation introduces user controllable focus design process 
designs inside focus showing user defined features higher probability result design process designs areas search space 
representation focus design processes influence representations design process implicit bias introduced representation replaced bias predictable controllable user 
goal find way create representation evolutionary system transforms search space way designs generated show certain preferred attributes 
goal divided parts 
identify method influence design process predictable way modifying representation process 
different representations design variations representations influence design process different ways 
method applicable different representations different applications 
design mechanism allows creation representation particular design problems 
ideally mechanism require little user interaction 
section presents intuitive view algorithm developed sections describe algorithm achieves parts goal described 
basic implementation schema general schema algorithm shown 
step design computing application definition representation 
case evolved representations basic representation creation evolved representation basic evolved design examples evolved representation new design evolved representation basic concept evolved representations creative design initial representation referred basic representation 
designed allow large search space including possibly interesting designs possible usually basic low level 
example basic representation squares connected form larger shapes 
second step system put training situation search algorithm initial representation set solve simple design task produce phenotypes partial copies set examples system 
phase meta level process observes basic representation 
identifies patterns genotypes individuals particularly successful modifies representation system adding symbols patterns 
result new complex evolved representation biased favour common features designs produced training session 
shaped shapes appear design examples representation expanded adding symbol shape designs produced step copies examples discarded 
evolved representation provides required focus centred examples 
regular search algorithm evolved representation produce new designs similar examples 
effect evolved representation depends basic representation replaced evolved representation evolved representation added basic representation 
example shape added new designs original square shape 
basic algorithm solves parts goal specified previous chapter 
representation manipulated adding new symbols alphabet representation 
additional symbols represent certain features introducing representation designs containing features favoured words additional symbols create focus search space 
additional symbols identified automatically machine learning 
user interaction required provision set example designs 
points elaborated sections 
system described allows transformation focus created simply modification evolved representations representation 
feature important connection creative design shown chapter 
evolutionary algorithms creation evolved representation training situation requires main features ability produce copies partial copies examples additional knowledge supervision flexible easily modifiable representation 
time evolved representation intended produce new designs 
compatible search method produce new designs 
evolutionary algorithms fit requirements 
require fitness value easily calculated comparison phenotypes design 
shown sections allow manipulation representation search 
large body existing design systems evolutionary algorithms shows suited generation new designs 
means type algorithm creation evolved representation compatibility representation ensured 
influencing search space evolved representations evolutionary algorithms bias particular designs introduced genotype representation genotype phenotype transformation 
example evolutionary algorithms variable length genotypes individuals short genotypes generally easier find individuals long genotypes 
similarly genotype phenotype transformation particular phenotypes represented genotypes phenotypes expected easier find phenotypes represented genotype 
method biggest influence search process comes effect designs certain desired features represented shorter genotypes easier find 
method introduces new ways represent designs improves chances designs design process 
illustrate creation focus evolutionary system string representation 
system genotypes strings fixed variable length constructed symbols predefined alphabet see section 
create focus search space evolutionary algorithm representation algorithm modified additional symbols original alphabet 
distinguish introduced symbols referred evolved genes original symbols called basic genes 
evolved genes basic genes produce new genotypes 
result different kinds genotypes distinguished genotypes basic genes referred basic level genotypes genotypes evolved genes referred evolved level genotypes 
introduces representation level genotype representation split basic genotype representation basic representation evolved genotype representation evolved representation shown 
evolved genes defined evolved gene represents certain combination basic genes see section details 
shows evolved level evolved representations evolved level genotype evolved representation human readable phenotype basic level genotype phenotype additional layer representation caused evolved genes genotypes transformed basic level genotypes replacing evolved gene set basic genes represents 
example gene appears evolved level genotype indicates corresponding basic level genotype position filled basic gene evolved gene indicates sequence basic genes 
original genotype phenotype transformation generate phenotype 
general case evolved level genotype basic level genotype transformation transformation different ways represent basic level genotype evolved genes 
transformation search space evolved genes represented single symbols genotype atoms evolutionary operations 
time represent combination basic genes effectively encapsulating gene combination 
result gene combination broken genetic operation 
removed chances surviving genetic operation higher gene combinations occupy positions basic level genotype encapsulated evolved gene 
basic genes evolved gene encapsulates stronger effect 
similarly evolved genes creation initial population gene combinations represented evolved genes higher chance represented individual random combinations basic genes 
effect evolved genes certain combinations basic genes genetic search 
follows evolved genes bias search evolutionary system favour feature combinations basic genes identified probability certain feature phenotype higher gene combination genotype 
evolved genes seen transformation search space illustrated 
example assumes variable length representation basic gene genotype directly translated movement pen certain direction 
original alphabet members shown genotype phenotype transformation transforms letter movement pen example occurrence symbol genotype results upward movement pen unit length 
genotype describes simple square constructed movement pen unit left unit upwards unit right unit 
genotype represents evolved representations square pen ends different corner square 
endpoint movement indicated arrow 
search space illustrated number concentric circles defining space designs defined genotype certain length 
inner circle contains designs represented genotypes length words basic genes translated phenotypes 
away design part design centre larger genotype required represent larger space searched arrive design 
ac ba cb cb bc ac dd ab daa dbc bac bac 
example evolved representation original representation representation evolved genes 
corresponding genotypes capital letters denote evolved genes 
transformation phenotype genotype unique genotypes abc bac produce phenotype 
arc segments indicate part space shown 
original search space illustrated basic genes centre 
second circle shows designs derived genotypes length vectors 
circles give examples designs genotypes length 
time evolved gene created structure search space changed 
state new gene search space moved centre design states circle derived state moved second circle 
example evolved gene introduced combination consecutive basic genes represent closed shapes fourth circle search space changes shown 
squares represented directly evolved gene shapes fifth circle derived squares second circle 
greater number evolved genes design state involves moved centre 
example shape squares fifth circle constructed genotypes length fourteenth circle new gene increases size alphabet representation genotypes evolved level genotype length exist size fourteen vectors shape drawn drawing lines twice evolved representations search space length increases 
illustrated larger circles 
reduction genotype length stronger search space reducing effect shown square shape 
produce shape basic genes search space consists basic level genotypes length fourteen basic genes containing elements 
produce designs basic evolved genes search space consist genotypes length symbols alphabet containing elements 
creating complex representations simpler basic representations shown generally different purpose 
see section discussion 
creating evolved representations previous section showed evolved genes influence evolutionary search way certain features favoured 
second task find way identify appropriate combinations basic genes evolved representation created 
creating appropriate evolved representation straightforward case features intended included explicitly known representation possible directly map features gene combinations 
conditions usually fulfilled 
explicitly enumerating desired features requires high amount user input translation reverse translation difficult impossible 
necessary find different method create evolved representation 
machine learning provide method 
shows schematic outline system employing machine learning create evolved genes 
central element user provided example 
features example provide centre focus created evolved representation 
user input required provision example 
loop left red conventional evolutionary system 
individuals taken population initially generated randomly offspring produced fitnesses calculated new individuals discarded introduced population 
fitness function system comparison phenotypes produced example 
comparison returns high value phenotypes similar example lower values phenotypes similar exact implementation depends application domain 
fitness referred similarity fitness 
start individuals produced hardly similarities example system identical copy example 
system produces high number individuals features similar example 
goal system produce final individual generate range individuals contain large variety features example variety combinations 
additional control may necessary prevent convergence population control usually influences fitness way new individuals inserted population 
population generated evolutionary system pool samples create evolved representation 
done right blue loop 
gene combinations appear predominantly sample individuals similar example create set evolved genes 
assumption evolved representations select create offspring compare introduce convergence control example population sample creation cycle gene creation cycle compare gene combination statistics best gene combination introduce schematic representation proposed system create evolved genes genotype phenotype transformation defined way features phenotype correlated subsets genes genotype 
direct mapping sufficient probability feature exists phenotype higher gene combination genotype probability gene combination genotype higher feature exists phenotype 
thesis expressions feature represented gene combination refers kind correlation 
generally imply possible directly translate gene combination feature example implementations case 
result probabilistic nature evolutionary process evolved representation created example unique 
different runs produce different evolved representations creating focus example slightly different 
reduce computational cost identifying best new gene combination possible take combinations existing genes account 
existing genes basic genes evolved genes new evolved gene composed basic genes evolved genes basic gene evolved gene 
section describe detail 
cases genotype phenotype transformation allows converting gene combinations directly features construction high order genotypes interpreted creation large building blocks combining smaller ones 
shows building block elements assembled steps evolved representations basic gene evolved gene interpretation creation high order evolved genes combination building blocks basic blocks lower order building blocks 
building block added third step turn created basic blocks similar process 
creating complex evolved genes combining simpler evolved genes described bottom process sense artificial life research complex behaviours structures result interaction number simpler behaviours structures 
feedback evolutionary system possible run evolutionary system sufficient number samples generated run gene extraction create evolved genes 
bottom construction complex evolved genes different approach offers phases sample creation gene extractions interwoven 
evolved genes created gene extraction added representation introduced population 
early stages individuals produced contain little knowledge examples simple evolved genes produced introduced stages complex evolved genes introduced 
evolved genes continually improve representation evolutionary process helping produce larger better fitting individuals see sections 
strategy adopted especially important calculate similarity fitness way ensures gene combination fact related feature gene extractions occur early phases run evolutionary system individuals differ strongly examples 
gene combination occurs high fitness individuals simply reflect random influence initial population features example 
creating new designs evolved representations set evolved genes created provide focus generation new designs 
evolved genes create new representation new random initial population created representation 
conventional evolved representations evolutionary system run produce new designs fitness function represents user defined design criteria 
depending evolved genes effect search space different 
evolved genes added basic representation system basic genes place genotype fitness requires 
set genotypes basic level genotype search space resulting set designs phenotype space changed probability designs 
referred soft focus see section 
hand evolved genes replace basic genes basic level genotypes produced set designs phenotype space restricted subset phenotypes possible basic representation 
referred hard focus 
applications soft focus approach appropriate allows adaptation design specific design criteria 
cases outcome design influenced forces influence evolved genes initial population genetic operations selection phenotypes containing certain features 
kauffman shows general rugged multi peaked fitness landscapes large bands near constant fitness exist selection influence population 
released random points fitness landscape population usually ends bands 
inside band forces usually weaker selection influence population 
local optima inside regions favoured force reached local optima regions 
rugged fitness landscapes usually result influence gene genotype fitness phenotype depends number genes genotype condition certainly holds situations evolutionary algorithms design 
evolved representations seen force controls neutral drift population focus search space 
evolved genes introduce features positive neutral respect user provided fitness 
basic genes evolved representation evolutionary design system choice evolved genes 
choice evolved genes dependent specific evolved genes interacts fitness function 
chapter computational creativity computational process called creative 
ways give claim creativity foundation 
derive process directly observations particular processes human creative design example analogies emergence 
processes assumed play role human creative behaviour number computational processes subsequently developed analogies qian gero hayes roth qian gero emergence gero jun poon maher create facilitate creative design 
second way try define general characterization computational terms human creative design activity guide development computational process 
top approach allows computational techniques methods related specific human cognitive behaviour long correspond general characterization 
example allow evolutionary algorithms neural networks play role human creativity 
section described attempts develop procedural definitions creativity 
definitions involve concepts related transformation expansion search spaces computers conceptual spaces humans 
definitions says behaviour achieved 
new rules come 
conceptual space transformed 
computational terms new variables come 
chapter look search spaces context finite system computational process expand search space 
finite systems closed worlds fact process running program inside computer introduces set theoretical limitations 
important context design computing 
size memory available program limited means total number different states program assume limited finite system 

computing power available run program limited means number different states program assume specific time span limited 
limitations strong influence computational design process impossible 
main implications computational creativity 
different design produced connected different state machine number states limited limitation total set different designs program generate limited defined priori 
way putting restriction design represented design variables variable stored memory limiting number variables designs 

due limitation set different designs program produce evaluate acceptable time frame limited 
practice number usually smaller set possible designs 
means space searched usually smaller space possible designs 

set designs program produce limited time frame generally known priori 
langton observes turing halting theorem expanded show impossible general case determine nontrivial property behaviour sufficiently powerful computer mere inspection program initial state knowledge representation program possible predict points search space system assume designs possibly outcome design process 

due limitations evaluation design take account certain limited set interaction design environment 
example individuals artificial life application develop vision individuals access kind optical sensory organs time step evolution simulation run calculate individual see done example 
allow individuals developing example flight 
main consequences limitations total set designs produced fixed usually small part tested design process acceptable time 
design process seen search process means search proceed inside predetermined search space referred meta search space designs meta search space small fraction tested search process 
number methods search space searched design process 
discussion illustration assume design exists meta search space considered optimum terms design performance methods applicable equally acceptable performance exist 

process search small search space accepting outcome search represents local optimum better designs lie outside search space 
example search space restricted designs methods optimize analytically known 
method illustrated 

domain knowledge search space created known contain desired design 
case situation say theoretical analysis shows designs outside certain space give results violate design restrictions 
method illustrated 
computational creativity 
searching global optimum large space heuristics 
random search attempt enumerate possible designs 

forms domain knowledge including soft knowledge heuristics guide search best design large search space 
search strategies local gradient hill climbing simulated annealing kirkpatrick evolutionary algorithms fall criterion guaranteed methods logic programming 
local knowledge illustrated arrows 

focussing search sub space 
sub space searched methods 
domain knowledge change focus inside total search space shown 
methods search large search space black dot global design optimum broken line meta search space bounded restriction continuous line search space searched focus subspace possibly excluding optimum domain knowledge set focus include optimum search search space search search space domain knowledge focus subspace move focus practice methods combined appears meta search space methods fact subset set theoretical possible designs resulting limitation search space method 
focussing search layered process shown search space restricted meta search space smaller search space usually domain knowledge 
search space focussing creates smaller sub spaces turn searched local knowledge 
limitations finite state process related concept closed world artificial life see example ackley implies total reproducibility logic programming see example ger term implies complete knowledge important note closed world necessary restrictions apply 
example possible exchange pseudo random generator programs physical device thermal noise radioactive decay 
results process reproducible allows complete knowledge rest computer finite state computational creativity hierarchy search spaces machine openness world effect qualitative outcome process 
focussing creativity finite system focussing method similar new variables modification search space described section 
fact difference definition may seen difference perspective 
looking process local observer sees currently accessible part search space move focus method appears move search space 
global observer able tell successively searched search spaces fact part larger meta search space 
example literature illustrate point 
gero 
evolutionary system generate beam sections perimeter moment inertia competing design criteria 
sections represented shape grammar initial search space set designs generated grammar 
authors allow shape grammar change evolutionary process new shape grammar learned 
new grammar different set sections produced system new search space sn 
authors observer sn sn argue change shape grammar led substitutive change search space 
global observer able see sn fact part larger search space sn may hold designs part sn terms focussing sn represent focus inside space designs represented possible sets shape grammars example seen variable addition shown 
space possible considered original search space adding variable introducing hexagons creating new expanded search space sn 
possible argue subset space possible polygons focussing creative term gero classifications introduced section methods illustrated classified routine design search space searched remains constant 
focussing sub space requires total set variables restricted range set constant values 
moving focus introduces new variables uses variables values outside current scope 
fulfils condition creative innovative design entire process local view focussed search 
computational creativity position search focussing poon maher matrix depends way sub space searched 
argued process certainly classified novel original terms transformation 
example evolutionary search inside focus area strong diverging elements introduced giving value novel original exploration 
resulting process inside area processes potential creativity 
simple hill climbing inside focus area hand entirely convergent value exploration mundane 
process classified having low potential creativity 
soft focus versus hard focus focus clear cut 
possible soft focus variables modified modified variables assume values range different range 
words certain points search space inside focus points 
moving focus correspond changing probabilities search process 
soft focus shown regions higher lower probability inside search space 
shows regions higher lower probability connected possible neighbouring designs different probabilities distinct regions exist 
literal sense moving expanding soft focus constitutes addition variables expansion search space local perspective design inside meta search space produced independent positions shape focus 
difference degrees system designs previously impossible find available moving hard focus behave similar designs moving soft focus 
reason argued moving soft focus equally fulfils requirement creativity 
transforming soft focus inside search space darker shades represent higher probability design appear result search 
moving focus procedural definitions creativity described section gero maher poon gomez define necessary attributes mechanism drives transformation exploration 
entirely random mechanism useful acceptable designs meta search space computational creativity randomly positioned focus low probability containing 
point boden says creative robot waste lot time new ideas seen lead dead boden 
sources discussed analogy emergence 
sources possible important aspect connection exists current transformed focus improves probability finding designs new focus random moves 
humans finite systems previous section argued possibilities expanding moving search space computational process limited fact inside finite system 
ongoing philosophical debate human mind essentially complex computational process fundamentally different processes involved see example penrose 
possible argue human designers focus subspaces larger meta search space requiring assumptions fundamental nature human mind 
example argued maher 
knowledge breadth depth field necessary condition creativity humans 
apart limited knowledge humans restricted number design alternatives consider limited time 
complex design tasks easily restricting human computer 
focussing human design processes directly shown protocol analysis 
mc 
neill 
authors analyse design behaviour designers conceptual design 
things classify design activities analysis problem synthesis solutions evaluation solutions regard problem 
analysis phase problem taken account designer define search space 
authors report expected designers observed usually proceeded analysis synthesis synthesis evaluation 
early stages design process designers went evaluation back synthesis new problem analysis change search space 
initial phase designers times proceed evaluation synthesis analysis 
interpreted focussed search search space interrupted analysis phases allow change focus 
evidence focussing occurring human design observation designers tend reproduce adequate inadequate design features examples examples design brief phenomenon referred design fixation purcell 
seeing example sufficient create focussing effect design activity 
notion focussing essential component creative computational process chapter derived entirely general ideas creativity computational processes quite specifically looking particular instances human creative behaviour 
especially encouraging find evidence focussing human creative design 
computational processes focus clear cut example result decision modify design variables soft tendency preference certain types design 
computational creativity requirements creative design process previous sections number criteria identified potentially creative computational process fulfil 
process able define non trivial sub space focus inside large search space meta search space divergent convergent elements search process search entirely bounded focus designs inside focus far sampled search designs outside focus allow transformations focus inside meta search space allow goal oriented control modifications focus 
characterization differs gero maher poon gomez points specifically acknowledges search space searched sn subspace larger predefined search space meta search space specifically allows soft focus requires control modification focus random 
requirements form set necessary conditions creative computational process 
sufficient conditions depends measure judge creativity 
sufficient definitions mentioned maher poon gomez carefully limit definition potential creativity 
processes exist fulfil criteria designs produced appear creative 
additional requirements narrow definition emerge research 
chapter evolved representations computational creativity previous chapter derived number characteristics creative computational design process expected 
chapter show process implemented 
described chapter variety representations exists represent design space 
variety methods search design spaces evolutionary algorithms section example 
generally designed optimization specifically creativity search search space methods illustrated 
compared requirements listed previous section key elements creative process creating focus inside search space moving focus 
operations require domain knowledge 
possibility implement user specifies variables constant range variables assume 
search user periodically change settings 
essentially requires user able foresee exact influence variable ruling complex nonlinear genotype phenotype transformations 
requires large amount interaction user 
systems practical applications computationally expensive fitness calculations small parts design space searched example parmee 
thesis mechanism able provide required parts introduced focussing search space evolved representations 
demonstrated allows creation focus user provided example employing machine learning process 
sections show allows second operation goal oriented manipulation focus 
focussing transformation evolved representations basic idea simple evolved representation provides focus manipulating representation modify focus 
shows schema steps basic representation established designs example evolved representation created 
additional step transformation operation applied evolved representation shift evolved representations computational creativity basic representation creation evolved representation modification evolved representation evolved representation modified evolved design examples evolved representation modified evolved representation new design evolved representation new design modified evolved representation basic concept evolved representations creative design focus 
demonstrated example changing shape representation shape 
new designs generated representation biased incorporating shapes 
example evolved genes added basic genes replacing system basic genes produce designs words representation creates soft focus see section 
system produce designs representations design criteria required simply evolved genes 
design criteria select designs far outcome design process representation designs far representation 
shows process time focussed data operations 
indicates parts system provided programmer system user input required optionally support system 
programmer supply basic representations appropriate class designs program intended 
programmer write function learn evolved representation set examples function uses evolved representation generate new designs functions transform evolved representation 
user provides set examples system generate initial evolved representation 
user provides set evaluation criteria formalized design brief system uses produce new designs evolved representation 
resulting designs satisfactory modification evolved representations computational creativity examples control control control control basic representation machine learning evolved representation manipulation evolved representation manipulation design specification design specification design specification evolved representation search programmer definition program program program user search program search designs program program system designs designs flowchart suggested transformed representations design system representation words shift focus triggered 
selection function modify representation done user system 
new representation user specified design criteria produce new designs 
additional aspects control transformations suggestion implementation provided section 
methods transforming representation flexibility evolutionary algorithms variety modifications evolved representation possible 
section introduces operations combining evolved representations different sources filtering evolved representations transforming representations direct manipulation evolved genes 
methods combined offering large set possible modifications 
mixing evolved representations simple way modify evolved representations move focus combine evolved representations sources 
long evolved representations basic representation possible simply combine sets evolved genes 
required evolved genes ensure evolved genes different sources identical labels 
possible combined representations produce new designs starting creation initial individuals evolved genes sources 
system number different sets evolved genes basic representation available evolved representations computational creativity create large number combinations representations large number focusses search space 
focus produced mixing representations simply union original focusses new focus contains designs part original focus designs combining evolved genes features foci 
important advantage method transformation requires knowledge basic representation 
example combining representations shown section 
filtering genetic material second possible modification evolved representation removal evolved genes 
criteria decide genes remove require knowledge basic representation interpretation evolved genes 
simple criterion require detailed knowledge order genes generated example keeping generated genes generally exclude complex features 
results exclusion seen section 
interesting results representation reduced possibly randomly selected genes 
resulting designs show strong influence genes 
direct manipulation evolved representation third method requires largest amount knowledge basic representation allows powerful manipulations 
possibilities direct manipulation include modification addition removal genetic material evolved gene 
easiest version modifications done randomly operation called meta mutation 
modification lead interesting results allow goal orientedness process 
goal oriented manipulations require ability relate part evolved gene feature 
replacement operations allow global replacement feature different 
example known certain basic gene represents red line possible replace occurrences gene different basic gene encodes lines different colour 
removal parts evolved gene allow total removal information evolved representation example removal colour information 
information supplied basic genes creation new individuals evolved genes second example evolved representation available 
example shown section 
addition genetic material possible 
additional material fixed random computed features evolved gene manipulated 
example insert additional line segments floor plans similar manipulation demonstrated section direct manipulation allows change basic representation transfer genetic material domain 
removal addition genetic material example allow transfer lower higher dimensional problem demonstrated section 
cases possible rewrite evolved genes new representation allow mixing evolved genes different domain uses representation 
operations require knowledge basic representation important note basic representation implemented evolved representations computational creativity designer system knowledge application basic representation 
control transformation operations final questions apply transformation transformation selected 
question investigated depth part thesis possible scenario suggested section 
chapter interpretations evolved representations previous chapters described evolved representations create focus design space adding transformations representation implement design process shows important characteristics creative process 
turns evolved representations allows number interpretations connections 
described background information chapter 
evolved representations schema theorem important idea evolutionary algorithms especially genetic algorithms schema theorem 
schema defined binary string genotypes length ternary vector length 
third symbol commonly represented referred don care symbol 
schema represents instances population gene combinations locations schema occupied value schema 
example schema represent gene combinations 
schema theorem says certain conditions selection evolutionary operations increase expected number occurrences schema population roughly proportional observed fitness 
mathematical proof directly applicable number reasons variable length representation non constant alphabet genotype different selection meaningfulness schema theorem dispute interesting compare ideas results schema theorem radcliffe 
depending exactly evolved genes defined application hand schemata directly compared evolved genes 
evolved genes defined section essentially frozen schemata fix values genes positions schema don care symbol protect disruption 
movable evolved genes similar difference represent different schema position genotype appear 
interpretation schemata building blocks solve subproblems fitness function evaluate genotypes 
case evolved genes design applications interpretation taken nearly literally 
difference phenotypes represented evolved genes constitute larger building blocks evolved genes evolved genes different sizes give rise building blocks different interpretations evolved representations complexity 
condition building block interpretation apply problem degree decomposable subproblems little interdependence 
generation evolved genes relies similar assumption see section cases evolved genes directly translated building block phenotypes obviously case 
automatically true evolved genes creation new designs potentially different fitness function 
depending details fitness function evolved genes necessarily directly related sub problems new fitness function 
example floor plan example shown section creating closed rooms correct size requires number evolved genes assembled right order change single evolved gene drastically alter fitness 
differs evolved genes optimization applications gero kazakov see section re evolved genes successful similarity problems gene creation gene 
free lunch theorem wolpert macready related shows search algorithm outperform linear search incorporates knowledge problem domain 
radcliffe points means choice representation important meaningful genes 
evolved genes system creates meaningful genes incorporating domain knowledge representation 
alternative schema theorem possible analyse behaviour evolutionary algorithms information processing viewpoint 
kargupta done kargupta kargupta individuals treated signals genetic operations transmission channels 
allows application measures signal noise ratio crosstalk 
interesting context thesis information theory predicts representation determines signal transmitted different channels different optimal representations 
gene extraction drastically reduce redundancy individuals shown measures search space size section 
evolved representations genetic engineering interesting analogy related thesis genetic engineering 
genetic engineering biology genetic material living organisms modified introduce new characteristics remove unwanted characteristics 
technique success large variety biological applications resistance plants treatment medical conditions humans anderson 
applicability analogy evolved representations obvious evolved genes optimization context evolved genes common high fitness genotypes incorporating evolved genes new designs help optimization different related problems 
uses analogy gero kazakov gero 

evolved representations style chan author explains distinct style architectural design result common features common procedures architect 
describing style function generated requires deep understanding interpretations evolved representations design process usually supported comments designer 
shape grammars usually take approach represent common procedures rules sequences rules possible common features shapes manipulated rules 
chan notes common features architects viewers categorize architect style 
style said function common features chan style identified grouped features 
features tend style coherent strongly hold style 
degree style related proportionally number common features appear artefacts 
number features artefact reduced fewer interaction occurs style longer perceptible chan 
words style recognized viewer result visual features common features better style recognizable 
possible infer important aspects style common set designs knowledge design process evolved representation purpose 
style result common features set examples providing set examples creation evolved genes similarity function returns higher values phenotypes similarities example possible create evolved representation evolved genes incorporate knowledge style examples 
representation produce new designs produces focus containing designs share style features examples 
examples chapter multiple examples way style features example clearly visible results 
analysis explains particular example designs difficult say features learned represented example represented single example see section 
evolved representations case design case reasoning introduced design allow reuse knowledge design cases having start principles compiled knowledge new design maher balachandran zhang 
contrary knowledgebased design systems coyne expert knowledge stored explicit rule set implicit database previous design cases 
requirements environmental conditions usually vary retrieved actual case design changed fit new conditions 
design adaptation important step application case design 
case adaptation simply stated making changes recalled case current situation 
recognizing needs change changes major considerations 
adapting design cases surface considerations making changes previous design design process maher balachandran zhang 
interpretations evolved representations automatic adaptation design cases studied example dave 
building design 
authors different adaptation operations dimensional modification topological modification 
dimensional modification changes dimensions design elements changing number 
uses subset parameters developed original dimensional model process called data reduction 
dimensional modification sufficient adapt case new requirements topology model modified 
schmitt author investigates string grammars automate topological modification 
interesting aspects extracted design case subject modifications 
representations case design case specific rules wall representation developed flemming 

dave shows potential adaptation case depends representation 
adaptation operation requires transformation general case representation example dimensional model different representation specialized intended adaptation 
adaptation applied special representation result transformed back general case representation 
usually transformation special representation includes strong parameter reduction 
reduces size search space necessary keep computational complexity bounds 
means desirable design solutions excluded 
apparent competing goals representation create search space hand degrees freedom preserve knowledge case allow adaptation reasonable computational cost hand exclude possibly desirable design solutions 
evolved representations solve problem contain knowledge different levels detail complexity design process knowledge free disregard knowledge 
especially basic representation evolved representation resulting soft focus section allows process find solutions design case reasonable computational effort excluding design solution represented basic representation 
evolved representation cross breeding interesting methods transforming focus created evolved representation combine evolved genes evolved representations section 
cross breeding races seen biological equivalent function 
comparison shows evolved representations especially suitable model cross breeding 
combining genetic material nature possible combine genetic material individuals different groups animals resulting offspring includes features groups 
common example cross breeding different example dogs results generally referred hybrids 
general case cross breeding possible fact definition species involves normally able groups henderson 
number biological conditions met successful possible important interpretations evolved representations 
genetic material parents transformation transform living individual 
life earth rarely problem vast majority life forms universal rna dna genetic material 

environment transformation engine works compatible 
example mixing dog races different sizes generally successful female dog belongs larger race able support developing embryo 
similar reasons difficult water bound land bound species 

genetic materials compatible 
words transformation engine able transform genotype consisting material sources functioning individual 
nature important obstacle inter breeding 
biological systems common representation achieve huge variety organisms highly interactive multi level development process evolutionary algorithms specialized representation simple usually linear transformation 
conditions different importance evolutionary algorithms 

contrary biological systems evolutionary algorithms different genotype phenotype transformations designed specific applications 
result condition prevents cross breeding cases 

vast majority evolutionary algorithm implementations transformation simple interaction environment 
point usually unimportant evolutionary algorithms 

evolutionary search efficient possible genotype phenotype transformation usually designed possible genotypes transformed phenotypes 
genetic material produce new individual comes genotypes genotype phenotype transformation offspring equally valid individual 
guarantee offspring high fitness 
evolutionary algorithms important condition sources genetic material systems genotype phenotype transformation 
unit inheritance simulate cross breeding evolutionary algorithm environment representations specific importance 
defined previous section species combined genotype phenotype translation basic representation 
result initial random population consists individuals random combinations basic genes look species 
features specific species form certain gene configurations individuals stages evolutionary process 
combination genetic material different species case possible combining individuals example cross operation 
resulting individual interpretations evolved representations show features individuals sources generations genetic operations destroy features 
evolved representations alternative evolved representations created species representing features species evolved genes 
species basic representation different evolved representations 
result random individuals generated different evolved representations look different evolved representations combined random initial individuals show features sources 
evolutionary process evolved features protected possible evolutionary process leads individuals evolved genes features source genetic operations disrupt evolved genes 
evolved genes way different species basic representation having individual features preserved evolutionary process 
evolved genes create difference unit representation unit inheritance nature base pairs dna variant rna equivalent basic coding units inheritance long sequences base pairs genes 
evolved representations artificial life artificial life langton langton langton brooks maes langton studies natural life attempting recreate biological phenomena scratch computers artificial media 
studying biological phenomena apart living organisms see attempts put systems behave living organisms mit press alife www 
glance appear different number connections alife computational design creativity suggest approach incorporate ideas 
ideas artificial life research incorporated number places thesis 
important connection studies artificial life research done computer simulations subjected certain limitation 
limitations subject section 
connection seen evolved representation 
nature genotype phenotype expression complex hierarchical process 
sequences base pairs genes genes regulate expression genes gene sequences genetic material reused different contexts large portion genetic material expressed 
contrast evolutionary algorithm applications generally simple linear expressions genotype 
evolved representation seen step creating richer representations comparable natural systems 
reflected discussion unit inheritance see section 
creation evolved genes bottom paradigm 
paradigm developed alternative approach robot control animat research example meyer wilson meyer 
bottom designed systems interaction number simple subsystems leads complex emerging behaviour 
steels shows comparison compared hierarchical systems emergent systems fault tolerant robust disturbances interpretations evolved representations environmental changes 
connections evolved representations seen places 
evolved genes created bottom fashion difference complex behaviours complex structures created 
second focus said emerge interaction evolved genes evolved representation see section 
evolved representation shows robustness changes environment bottom designed control systems evolved representation created example similarity fitness generate new individuals different fitness functions 
large pool evolved genes evolved representation successfully different environments 
connections artificial life section connection kauffman connections self organization evolution discussed cross breeding metaphor section fitness sharing mechanism example implementation see section 
evolved representations evolved representations parallels way representations modified 
cases done increase performance evolutionary algorithm optimization process described section 
evolved representations genetic programming genetic programming koza derivative genetic algorithm genotypes form executable lisp expressions 
genotypes treated rooted trees tree versions cross mutation operation 
improve performance genetic programming number different methods developed described creation subroutines lisp expressions 
koza introduces called automatically defined functions adf functions part program tree automatically evolved evolutionary process 
advantage introduced adfs twofold reduce memory requirements storage genotype allow search perform larger jumps search space modification functions introduce large changes behaviour 
functions call minimal level function hierarchy exists number functions individual defines fixed generally small 
individual got defined functions representation change 
angeline pollack different approach 
random process sections trees individuals collapsed modules 
modules stored outside population evolved genes thesis protected evolutionary operations 
prevent loss genetic material additional process random fashion replaces existing modules corresponding original section tree 
processes functions modules created random procedures necessarily meaningful subfunctions fitness function 
subfunctions occur population higher average rate part defined function schema theorem directly applicable genetic programming suggest higher fitness blocks appear higher rate 
rosca ballard observe converse interpretations evolved representations schema theorem hold true poor blocks may appear high rate population 
rosca ballard suggest fitness value computed possible new function block fitness individual special fitness function user input rosca ballard 
keep computational complexity authors hierarchical definitions creating larger blocks smaller ones bottom process creation larger evolved genes thesis blocks rosca ballard produced terminals trees 
reasons method closely related 
intention different rosca ballard try improve performance genetic programming sparse search spaces 
rosca ballard interesting uses measure called minimum defining length characterize complexity individuals population 
similar measure length equivalent bit string chapter produce qualitative information search space 
rosca suggests entropy measure diversity population control creation new function blocks 
evolved representations representations interesting approach evolution representation paredis addition population individuals represent problem solutions second population exists contains individuals represent permutations 
permutations applied genotypes individuals population re order genes 
brings genes closer genotype reduces probability separated cross distance genes increased 
idea successful permutations group functionally related genes helps decompose problem 
permutations production successful offspring receive positive feedback way fitness calculated population permutations 
algorithm developed optimize behaviour evolutionary algorithms creativity mind idea second population representations evolves solutions interesting 
identifying best gene combinations calculating gene combination fitness combinations suggested thesis possible similar approach evolving representation sample individuals 
researchers experimented adding genetic material controls genetic operations genotype guided fact natural systems different locations genotype different cross probabilities example 
directly modifying representation similar effect grouping sets genes protecting disruption 
approach decomposition genotype space demonstrated gene expression messy genetic algorithm kargupta kargupta 
algorithm relations formulated partition genotype space classes 
reproduction operations controlled way ensures better classes receive proportionally higher numbers offspring 
offspring generate new knowledge genotype space allow creation new relations 
interesting optimization context derives mathematically optimal distribution relations classes individuals 
paredis possible knowledge contained relations alternative means creating focus search space 
interpretations evolved representations different approach hierarchical assembly complex structures demonstrated rosenman 
evolutionary process separated distinctive stages stage material produced previous stage create higher level objects 
example creation floor plans individual units floor area assembled rooms different shapes 
step selection room shapes basic material create functional units 
units assembled floor plans third processing step 
steps different fitness function 
main advantage approach reduces computational complexity evolutionary optimization process 
size genotype stages far smaller complete floor plan assembled directly floor area units words search space search step smaller 
fitness function step relates requirements objects created step 
computational creativity talk creativity innovation 
states innovation requires exploratory process definition innovation encompasses innovative creative designs defined 
model exploration place realized constraint relaxation terms search space equals additive expansion search space 
author explains expansion search space lead emergence new criteria change focus problem solving task lead solutions completely different normal synthesis technique produce author asks new criteria come concludes user best source 
similar question asked search spaces new variables section related question control transformation focus see section 
goldberg give definition creativity suggests mechanism evolutionary system creative transfer information different domain 
done ways modification underlying representation transfer deep building blocks fields goldberg goldberg 
author elaborate reasons suggestions possible implementations 
thesis provides explanation role representations transfer building blocks play creative process example implementations 
chapter implementing evolved representations previous chapters idea evolved representation focus design process 
shown idea creative computational processes connections research areas 
details evolved representations created exactly evolved representation influences search process depend number implementation details basic representation implementation evolved genes genetic operations 
possible general observations 
chapter describe issues involved implementing algorithms evolved representations 
formal notation evolutionary algorithms number different data structures genotypes michalewicz 
simplest commonly data structure string length string positions 
pn position filled symbol bn alphabet symbols comparable genes dna referred basic genes 
example typical genetic algorithm implementation genotype basic genes 
construct representation influences evolutionary search particular way notion evolved genes introduced 
evolved genes represent combinations basic genes genotype 
evolved gene represents set position symbol groups indicate certain basic gene appears certain position genotype px px px px 
evolved genes represented notation borrowed schema theorems section introducing don care symbol 
help symbol strings indicate positions basic genes evolved genes example evolved gene written 
order evolved gene defined number position symbol combinations evolved gene 
variation evolved gene defined movable position independent evolved gene 
movable evolved genes indicated angular brackets 
differ regular evolved genes positions indicated evolved gene relative position evolved gene appears genotype 
example appears position genotype indicates positions corresponding basic genotype filled symbol 
implementing evolved representations versions evolved genes adapted different data structures genotype defined include domain knowledge specific application possible 
version evolved genes defined tree structure genotypes second example application section 
influence evolved genes evolutionary algorithm able influence search space favour certain features possible find combinations basic genes genotype improve likelihood certain feature corresponding phenotype see section 
combinations basic genes depends particular feature genotype phenotype transformation 
requirement weak direct mapping feature gene combination required 
looking particular cases turns evolved genes generally possible gene combination equally probable genotype translated phenotype particular feature 
particular cases listed features similar parity property define parity property binary alphabet basic genes genotype phenotype transformation identity genotype equal phenotype 
parity property fulfilled number phenotype 
exactly half genotypes property fitness depends basic gene genotype possible create evolved genes increase probability parity property 
evolved genes usable promote parity feature 
features depend value single gene genotype example assumes genotype binary alphabet feature exists gene genotype 
case example possible create evolved genes 
set initial individuals produced basic evolved genes equal probability symbol corresponding basic gene times 
evolved representation protect start genetic operations mutation operation implemented choose replacement equal probability basic evolved genes position favoured 
features depend relative values genes example alphabet symbols value times value feature exist corresponding phenotype possible create evolved genes 
existence evolved genes genotype increase likelihood feature phenotype 
dependence relative values typical application possible define specialized type evolved genes purpose 
features depend relative position genes genotype example genotype length binary alphabet feature successive exist genotype possible create evolved genes 
alternatively possible movable evolved gene 
case single gene sufficient 
implementing evolved representations evolved representation collection evolved genes apart protection gene sequences genetic operations evolved genes second effect due random generation initial population random replacement genes mutation operations features represented evolved genes represented population 
example feature mainly phenotypes represented genotypes containing odd numbered basic genes 
kind global information represented directly evolved gene special definition evolved genes incorporates high level knowledge 
large number evolved genes created containing knowledge specific successful gene combinations gene combinations reflect rate odd basic genes 
evolved representation bias new designs assuming ratio 
accumulation evolved genes contain additional knowledge represented single evolved genes 
emergent feature evolved representation effect compared gestalt effects cognitive science emergent behaviour artificial life see section 
example effect second example implementation see section 
creation evolved genes described section evolutionary algorithm generate population individuals encode phenotypes show similarities example design 
create evolved genes pool sample genotypes successful gene combinations genotypes identified 
similarity fitness evolutionary algorithm gives numerical measure similar sample individual example calculate gene combinations common sample individuals similar example 
assumed gene combination occurs genotype contributes equally similarity fitness 
possible calculate average contribution similarity fitness sample individuals possible gene combination value identify best gene combinations 
similarity fitness phenotypes sample population gene combination fitness gene combination calculated np 
pn phenotypes sample set produced genotypes contain difference normalized number genotypes sample set contain gene combination 
way bias introduced partial convergence population results features represented removed gene fitness 
value calculated possible combinations genes 
unfortunately number possible gene combinations grows exponentially number elements gene combination order evolved gene 
moving evolved genes created grows linearly number positions genotype gene combination assume words length genotype 
calculating gene combination fitness possible gene combinations quickly impossible combinations basic genes considered 
holds cases domain knowledge available reduce set possible gene combinations example implementing evolved representations known genotype phenotype translation relative positions genes important 
gene combinations order divided gene combinations lower order occur genotype 
possible initially create evolved genes gene combinations order create gene combinations order combining gene combination order single gene combining gene combinations lower order allows search best gene combinations limited combinations basic genes basic evolved gene evolved genes 
applications domain knowledge allows simplification search directly neighbouring positions genotype account 
case nb different basic genes ne different evolved genes exist population exactly combinations basic genes exist combinations basic gene evolved gene different combinations evolved genes 
movable genes produced directly neighbouring positions genotype maximum different gene combinations candidates new evolved gene 
crucial importance creation complex evolved genes simpler ones required lower order evolved genes identified order create higher order evolved gene 
possible depends way gene fitness calculated 
fact high order gene combination high contribution fitness guarantee lower order gene combination cn part high contribution 
table shows example case individuals containing gene combination achieve high similarity fitness individuals containing gene combination receive lower average 
order lower order evolved gene created 
case 
genotype similarity fitness gene combination table example set genotypes assumed similarity fitness assuming set samples contains gene combinations equal numbers gene fitness calculated relevant gene combinations table 
example half genotypes contain contain receive half contain receive resulting gene combinations 
seen gene fitness equal gene combinations converted evolved gene evolved gene created 
exact result obviously depends particular combination similarity fitness individuals containing gene combinations receive gene fitnesses average 
hand samples generated evolutionary system evenly distributed 
genotypes containing achieve implementing evolved representations genotype gene combination table gene fitness different gene combinations order higher similarity fitness fitness evolutionary system containing common sample set 
result increased values 
example relative ratios genotypes table values shown table 
highest value identified create new evolved gene turn allow creation evolved gene 
genotype ratio gene combination table sample distribution genotypes population genotype gene combination table gene fitness different gene combinations order different genotype ratios taken account implementing evolved representations training methods evolutionary system task creating samples attempt enumerate individuals random samples 
due size search space enumerating usually impossible 
random creation genotypes problem large search space randomly generated phenotypes highly show complex features 
evolutionary system requiring example measure similarity best choice 
inherent parallelism evolutionary system helps generate large variety individuals basic representation individuals designed evolutionary systems 
described approximately fitness proportional distribution individuals population evolutionary system important ability create evolved genes smaller sub genes 
single example possible set examples 
case similarity fitness calculated examples average maximum 
result somewhat broader focus centred common features examples 
entirely different possibility specify example example design fitness 
evolutionary system running produce individuals optimized regard design fitness evolved genes created individuals 
resulting evolved representation creating focus designs suited optimize example design fitness 
long phenotypes similar identical example feature genotype simply caused random influences search 
result guaranteed gene combination high fact related feature example 
applications possible create similarity fitness individual contains approximations features exact copies 
guarantee existence features phenotype 
fitness prevent extraction genes correspond features experiments fitness indicated evolutionary process strongly slow creation new individuals 
similar conventional evolutionary algorithm applications experimental evidence shows efficient keep individuals violate constraints population reduce fitness penalty function removing immediately 
similarity fitness evolutionary system computation possible function compute similarity fitness evolutionary process different function derive similarity value adapted gene creation 
example shown section uses similarity fitnesses manner 
non consecutive evolved genes defined section evolved genes protect sets basic genes genotypes disruption genetic operations mutation cross 
implementing protection difficult protection leads interlocking chains evolved genes genotypes 
diploid representation help case shown section 
implementing evolved representations interlocking evolved genes described section cross operations cutting genotypes parents parts swapping parts parents 
evolved genes interlock certain conditions lead situations point cutting possible destroying evolved genes 
interlocking evolved genes happen evolved genes consist entirely consecutive basic genes words contain holes indicated symbols schema representation 
shows example interlocking evolved genes af ab operation allowed cut evolved gene protection combinations basic genes violated evolved genes lose functions 
interlocking evolved genes non interlocking evolved genes evolved genes indicated connecting lines broken lines indicate positions possible cuts 
interlocking prevented cases allowing evolved genes consist directly adjacent consecutive basic genes 
genes interlock conventional genetic operations little change 
section shows example application evolved genes manner 
dominant recessive genes application genotype phenotype transformation nonconsecutive gene combinations connected features phenotypes assumed general case 
allow arbitrary evolved genes genetic operations method generate new individuals evolved genes modified 
doing important sure evolved genes protected 
cross cross operations consist parts cutting genotypes re assembling parts 
deal interlocking evolved genes cutting operation modified 
cut evolved genes 
random cutting site complex genes spanning cross site identified genotype cut evolved genes remain completely pieces 
shows genotype cut different ways parts destroying evolved genes 
cut done evolved genes evolved genes evolved genes 
implementing evolved representations possible cross cuts genotype shown evolved genes indicated connecting lines 
difficulty arises reassembly step evolved gene spanning cutting site ends sections combined new genotype contain holes 
segment second segment contain holes new genotype simply constructed appending segment demonstrated 
similarly holes segments happen fit assembled zipper manner see 
different ways recombine segments cross operation dominant recessive gene pairs produced indicated genes sharing position 
general case genes segment partially overlap holes segment 
solution suggested borrows notion recessive dominant genes sexual reproduction allowing pairs genes locations genotype gene shadowing see 
genotype transformed phenotype genes expressed ignored 
gene expressed decided cross implementing evolved representations operation executed 
possible criteria gene larger evolved gene gene evolved gene higher gene combination fitness see section genes randomly selected 
evolved genes entirely expressed phenotype protection evolved genes violated 
violation small rest evolved gene expressed 
important advantage allowing overlapping dominant recessive genes evolved genes involved complete units protected evolved genes 
genetic operations protected permuted genetic operation 
possible shadowed parts expressed offspring cross mutation 
interesting special case exists holes fit values conflicting genes equal 
continuity segments indicates new individual higher chance successful 
alternative option allowing dominant recessive genes append segments holes genotype remain fill holes random basic genes 
possible variable length representations results long genotypes produced especially evolved genes start getting relatively large spanning 
adds larger amount random basic genes focus created evolved genes 
equally unsatisfying option just rejecting cross high percentage evolved genes population lead large number rejects strong restriction possible cross overs reducing performance system 
mutation mutation operation genes genotype randomly swapped different genes current set basic evolved genes 
replacing basic gene new basic gene straightforward replacing complex evolved gene complex evolved gene create overlap 
evolved gene removed genotype leaves pattern holes different evolved gene probably genes different places collide genes genotype 
cross dominant recessive genes best solution 
places new evolved gene collides existing evolved gene conflicting genes kept 
set criteria section decide gene dominant recessive 
collision caused basic gene genotype basic gene simply removed favour evolved gene 
minimize number shadowed genes optionally select replacement gene best fitting random selection evolved genes 
remaining holes filled basic genes see 
shows recessive gene basic gene evolved gene expressed result mutation 
mutation complex evolved genes evolved gene removed genotype replaced evolved gene recessive gene evolved gene visible recessive 
implementing evolved representations creating new individuals start design process evolved representation new initial set individuals generated representation 
set complex evolved genes randomly selected representation fit holes overlaps 
re ordering evolved genes minimize overlaps remaining overlaps individuals best solution dominant recessive genes 
remaining holes filled basic genes 
dominant recessive genes notion diploid genetic representations dominant recessive genes genetic algorithms different purposes recessive set genes act memory previously useful gene sequences help genetic algorithm adapt applications non stationary fitness functions goldberg smith ng wong 
shown help protect genetic algorithms premature convergence greene 
chapter example applications chapter example implementations demonstrating evolved representations created different domains 
section describe general implementation schemes implementations sections describe examples 
chapter describes implementation resulting evolved genes designs 
quantitative analysis data collected runs comparisons applications discussed chapter results summarized chapter 
general implementation implementations consist independent programs create evolved representation evolved representation produce new designs 
important note systems designed optimize performance terms convergence speed find globally optimal design 
goal produce results show evolved representation influence design process 
shows flowchart gene creation programs 
shaded elements top part conventional evolutionary system functions added gene extraction 
functions executed certain conditions met exact conditions vary implementations described context application 
flowchart programs produce new designs flowchart standard evolutionary system see 
cases different runs different parameters functions carried 
different parameters generally resulted differences quality result change general behaviour 
parameters shown produce best results examples best results means case evenly distributed set evolved genes gene creation highest fitness creation new designs 
text actual parameter values indicated brackets typeface 
indicated random selections random functions 
selection selection method employed generation evolved genes new designs similar implementations 
example applications create initial population termination condition select parents recombination mutation select new population offspring current population time gene extraction 
create table gene combinations find best gene combination introduce gene combination representation population flowchart gene creation programs cycle parents selected offspring generated 
systems generation steady state evolutionary systems 
larger population sizes steady state evolutionary algorithms perform comparably non overlapping population systems sarma de jong preferred practical reasons limiting process addition removal single individuals allows simpler book keeping gene combination statistics 
steady state evolutionary algorithms automatically elitist restriction time individual survive population sarma de jong 
systems employ tournament selection niched pareto selection selection method 
tournament selection select parents population tournament selection individuals selected randomly population ranked fitness 
highest ranked individual individual selected tournament 
parent required separate tournament 
tournament size control selection pressure higher produces higher pressure 
select individuals removed population lowest ranking individual tournament selected tournament size different selection parent individuals selection individuals removed population 
example applications tournament selection advantage suited selection single individuals steady state evolutionary algorithms 
rank order individuals tournament important tournament selection invariant scaling fitness gives design fitness function higher degree freedom 
require ordering individuals population independent population size 
niched pareto selection creation rank ordering individuals tournament selection straightforward fitness criterion 
fitness criterion fitnesses integrated fitness example calculating value individual fitness adding multiplying single fitness value 
unfortunately integrating fitnesses value information fitness conditions fulfilled conditions lost system 
result individuals produced achieve highest fitness optimizing respect subset fitnesses sacrifice performance respect fitnesses 
population converges small subset potentially desirable solutions 
better way handle high number individuals utilize pareto optimization see example radford gero 
pareto optimization process partial ranking individuals established 
individuals compared individual better dominates better fitness criterion worse 
individuals compared fitness criterion better individual case individual dominates 
select individuals parents produce offspring genetic operations individuals picked randomly population compared randomly picked set 
individuals dominated individuals second individual selected parent 
individuals preferred 
case individuals randomly 
selection sufficient prevent individuals clustering small subset possible solutions 
additional measure prevent convergence niching horn nafpliotis mahfoud 
candidate individuals compared number individuals population 
individual distance fitness values calculated 
number individuals distance smaller threshold value called niche count mahfoud 
niching pareto optimization order select individuals dominate set dominated individual set individual chosen smaller niche count 
pareto fitnesses treatment newly generated individual depends domination individuals population 
newly generated individual dominates individual population replace 
dominate individual case implementation dependent dominated individuals removed population 
new individual dominate individual population dominated individual population rejected 
possibility new individual dominated dominates individual populates new part called pareto optimal front 
case individual added population replacing individual 
example applications population size evolutionary system pareto fitnesses constant grow shrink time 
design example generating floor plans example implementations taken domain floor plan generation 
idea set floor plans clear recognizable style generate evolved representation floor plans 
evolved representation creation new designs focus design process designs show style similarities examples 
shifting focus possible manipulation evolved genes leading designs different appearance 
example floor plans created american architect frank lloyd wright houses designed wright 
houses selected number reason show clear distinctive style documented analysed easy represent encoding suitable evolutionary algorithms 
background unique distinctive style large number designs available frank lloyd wright popular example researchers interested formal aspects style 
publications special interest context thesis chan 
chose houses group designs studied 
frank lloyd wright floor plans chan analysed style frank lloyd wright houses terms design process design features 
identifies designs steps 

space developed 

geometric pattern created 

functional requirements integrated basic pattern 

elevations follow application elevation grammar plan 
step basic outline floor plan functional organization building established 
basic outline put designer 
exists implicitly final designs generally reconstructed floor plans actual buildings 
step shows design follows outline 
outline shows characteristics buildings incorporating detail 
reasons outline shapes functional organization suited base examples create evolved representation 
chan identifies number common features designs identified directly set floor plans requiring additional knowledge 
features represented basic outline defined 
floor plans grid grid size depends project 

fireplace centre composition spaces extend 
example applications 
major shape floor plan long narrow house room depth 

houses similar topological arrangements 
evolved representation created example designs basic outline principle learn features 
features learned actual implementation depends number factors example basic representation set examples 
shape grammar representation frank lloyd wright houses layouts eleven houses develop shape grammar construct houses show similar style 
described top analysis design process 
roughly phases distinguished starting fireplace basic composition created rules 
composition elaborated adding corners detailing interior layout rules 
exterior details added rules design extended third dimension rules 
roof established rules details rules 
additional rules manipulate labels rules necessary generate different layouts 
focus described thesis designs created rules dimensional layouts developed basic layout organized function zones detailing 
similar level detail basic outline created step chan analysis see section 
semantics important aspect designs distinction different function zones 
layouts zones representing living space service space 
central importance location fireplace 
shape grammar zones service living space established fireplace rules detailed rules 
time added 
labels distinguish different function zones 
basic representation choice basic representation floor plans influenced number criteria 
basic representation able represent floor plans level detail chosen examples 
described shapes functional organization important aspects style set designs 
basic representation able represent shape function knowledge 
basic representation able represent large set designs examples exclude designs potentially interesting user 
basic representation try introduce bias specific designs design features 
example applications size search space created basic representation small creation evolved representation evolutionary process able find large variety samples sufficiently similar examples 
criterion conflict absolute measure depends number factors computational difficulty gene creation fitness function computational power available time user prepared wait 
represent real limit basic representation 
general terms paraphrased second criterion search space created basic representation include potentially interesting designs unnecessarily large 
style features identified chan frank lloyd wright house floor plans floor plans generally laid uniform grid 
comparison plans drawn shows inner walls nearly outer walls represented straight lines orthogonal grid 
simple representation able approximately represent plans shown large set designs created sequences north south east west unit length vectors 
encoded genotype sequence movements turns set instructions turn left turn right draw line unit length current direction move unit length current direction drawing 
phenotypes different complexity require different number turns lines differently sized genotypes requiring variable length representation section 
add function knowledge colour information 
purpose table associates different functions different colours 
basic representation changed basic gene representing segment contains information colour colours table 
functions represented colour way example fireplace wall service living space outer wall porch 
different colours possible turns move drawing different instructions required represent drawings 
instructions represented basic genes number ways 
shows possible representations 
define initial direction gene genotype 
gene basic genes mapped possible initial direction modulo operation shown 
shows example phenotype genotype representation including gene initial direction types encoding 
basic gene required represent feature result function basic gene different different positions genotype 
single basic gene represents exactly instruction connection basic genes features phenotype expected strongest 
reason representation implementation described 
colours represent functions required functions equally directly encoded genotype 
example having code red line segment possible code outer living space wall segment 
colours intermediate representation provides additional layer abstraction example domain gene creation helps preparation examples understanding results program user 
colours represent function actual colours chosen arbitrarily 
interesting note difference colour shape example applications instruction code code initial direction code code right turn right left turn left step ahead blue line code code red line green line position direction instruction position direction instruction basic representation represent frank lloyd wright floor plans encoding line segments turns encoding initial direction representation example phenotype grammars knight 
called colour grammars actual colours final goal turn represented markers grammar 
learning representation system create floor plan follows flowchart shown uses additional function evolutionary algorithm loop manipulate fitness assignment 
fitness calculation described detail section details function blocks evolutionary system follow 
example floor plans learn evolved representation examples derived house floor plans illustrated henderson house thomas house martin house baker house 
representation allow diagonal lines diagonal line segments henderson house replaced corners 
plans fitted grid plans consist similar number line segments henderson house martin house baker house thomas house 
room floor plan assigned functions porch living area service area 
wall segment separates rooms identical function rooms different function room outside area 
colours represent possible combinations combinations examples walls outside living areas example applications porch service rooms 
tenth colour represent fireplace 
shows examples colours 
porch outside living living porch living living outside service outside service service service living fireplace porch porch porch service unused unused frank lloyd wright houses create evolved coding henderson house martin house baker house thomas house 
fitness calculation task fitness calculation creation evolved representation produce measure features set examples individual 
phenotypes may thought coloured rubber stamps 
stamp tried grid points example said fit certain position example mark produce position exactly overlaps drawing 
words segment phenotype exists corresponding segment identical colour example 
demonstrates simplified case colours example drawing different phenotypes 
phenotype position exists example corresponding segment exists segments phenotype 
phenotype fits positions shown 
additional restriction placed phenotypes consist entirely horizontal segments colour entirely vertical segments colour 
phenotypes lines sequences segments phenotype coincide corner intersection example 
shows segment phenotype restriction phenotypes strong advantage phenotypes contain corners example applications anchored positions phenotype corners 
example example plan phenotypes producing horizontal line length cover horizontal segments example 
fitness calculation floor plan examples example plan phenotypes phenotype different positions example total segments covered phenotype segments covered phenotype anchored corners intersections 
definition fit number measures derived phenotype 
number positions genotype individual fits phenotype 
number segments covered single place identical number segments phenotype phenotype 
total number segments covered phenotype positions fits segments covered multiple times counted phenotype fitness sharing experiments fitnesses show system shows strong tendency convergence producing populations nearly individuals covering small section examples 
populations providing variety samples required gene creation additional mechanism required improve distribution samples 
actively discourage convergence population additional mechanism introduced borrows idea artificial life research 
fitness single segment examples seen resource shared individuals cover segment 
individuals cover segment fitness individual receives covering 
segments covered individuals provide niches individuals covering segments receive higher fitnesses higher probability selected parents 
implement fitness sharing weight associated segment 
weight ws calculated ws constant number individuals covering segment 
experiments implementation described shown linear sharing sufficient 
runs shown quadratic sharing ws weights associated segments measures derived fitness individual 
sum weights segments covered positions example weights phenotype receives 
example applications 
maximum sum weights segments covered single position positions phenotype fits phenotype see 
fitness sharing weights associated design weighted segments covered phenotype maximum set weighted segments covered phenotype single position methods fitness sharing proved comparable preventing convergence fitness encourage production new individuals slightly fitness 
examples fitness 
artificial life inspired fitness sharing different pareto niching pareto niching usually works moderate number fitness values floatingpoint numbers integers large number possible values 
total number segments design process described fitnesses corresponding segments case assume values 
mechanism useful alternative pareto fitnesses applications similar fitnesses 
implementation details creation initial population initial individuals generated random sequence basic genes length genotype selected randomly equal probability minimum maximum length 
initial population size 
initial individuals small compared size required represent full copy examples 
individuals generated randomly small individuals chance fit examples 
problem crossover operation gradually produce larger individuals information example learned individuals 
selection parents parents selected tournament selection 
tournament size comparatively high increase selection pressure fitness sharing prevent convergence 
steady state evolutionary algorithm parents selected time 
production offspring parents generate offspring individuals variable length single point crossover section 
certain mutation probability offspring mutated 
mutation operation selects gene randomly evolved level genotype 
evolved gene picked replaced evolved gene selected randomly set evolved genes available time 
basic gene replaced different basic gene 
length genotype offspring depends location crossover points shorter longer parents 
inserting offspring population goal system produce set samples gene extraction offspring kept example applications empty phenotype contains segment fit position examples individual population identical phenotype 
individuals population removed 
result population grows continually run evolutionary system 
creation gene table create new evolved genes gene extraction run periodically 
example runs done certain number individuals added population 
section shown necessary consider gene combinations genes creation new evolved genes 
number gene combinations genes high allow tabulation order find best combination 
fortunately specific genotype phenotype translation allows restrictions set combinations 
basic genes represent type segment independent position genotype relative position genes considered 
additionally non consecutive genes genotype produce different features phenotype depending genes 
example genes coding line segments produce different phenotype depending gene left turn right turn pen movement segment 
non consecutive gene combinations connected feature phenotype table consecutive gene pairs sufficient identify promising gene combinations population 
weights associated segments examples introduced prevent convergence population relevance comparison phenotype example ignored calculation table gene combinations 
fitness number segments covered phenotype fitness section 
calculate contribution gene combination fitness value divided number genes evolved level genotype 
calculation best gene combination requires steps 

create table different pairs successive genes occur population entry gene combination fitness occurrence counter 

individuals population divide fitness calculated method individual length evolved level genotype 
table add value gene fitness pairs successive genes occuring genotype individual 
increase occurrence counter pair 

combinations divide gene fitness occurrence counter 

find pair highest quotient table 
evolved gene population ensure new gene combination occurs number individuals occurrence counter tested set threshold 
occurrence counter higher new symbol added evolved representation representing gene combination 
new evolved gene introduced population replacing gene combination new symbol genotypes occurs 
small randomly selected fraction individuals example applications remains unchanged ensure genetic material entirely removed population 
results number runs performed results 
run referred flw create provide evolved genes creation new designs sections 
creation evolved representation obvious termination condition example certain minimum fitness 
run terminated sufficient number evolved genes created 
run offspring produced times time creating new individuals resulting final population size offspring kept fit example duplicates see previous section producing evolved genes 
porch outside living living porch living living outside service outside fireplace porch porch service service service living porch service largest individuals population covering example floor plans henderson house martin house baker house thomas house 
individuals population shows individuals produced run 
selected largest phenotypes cover example floor plans 
seen comparison evolutionary system produced individuals cover example set 
baker house covered completely single segment yellow missing martin house segment line black henderson house segment line brown plus single segment yellow thomas house 
fitness sharing worked example applications preventing convergence individuals genes clustering examples detail see section 
evolved genes figures show different selections set genes produced flw create 
shows evolved genes produced numbers represent order genes created 
gene genotype interpreted initial direction constant basic gene prepended evolved gene transforming phenotype display 
default genotypes start horizontal direction 
evolved genes basic gene represents turn start vertically genes 
gene codes left turns produces visible phenotype 
evolved genes basic gene representing turn gene genotype turn visible illustration 
genes created example run genes shown nicely demonstrate evolved genes incorporating segments different colour contain additional topological information 
example gene implies occur living areas gene implies fireplace located wall service zone room living zone room 
shows genes produced run 
genes show larger shapes represented evolved representation examples shapes easily new designs produced genes 
largest evolved genes gene composed basic genes 
translated binary string bit string required define genotype 
evolved genes produce new designs evolved representation created example floor plans second step produce new floor plans 
evolved genes creation initial population preserved evolutionary process creating focus designs way similar example designs 
conventional evolutionary system steady state pareto selection fitness function incorporating design criteria 
fitness calculation produce satisfactory new individuals number different fitness functions collected pareto fitness vector 
fitnesses distinguished groups 
group fitness functions design brief fitnesses required allow designer specify certain aspects new designs 
include example number size rooms design 
group fitnesses representation fitnesses particular evolved representation required ensure representation properly 
example applications porch outside living living porch living living outside service outside fireplace porch porch genes created example run service service service living porch service case means segments appropriate colour example lines representing wall living service room brown fact rooms classified accordingly 
third group fitnesses measure design criteria usually implicitly assumed explicitly added fitness produce acceptable designs 
implicit design fitnesses ensure example rooms completely enclosed fireplace exists 
fitnesses mapped value perfect fitness 
different fitness criteria contradict individuals reach perfect fitness criteria 
sum individual fitness values identify best individual population 
due size search space ruggedness fitness landscape perfect design 
step fitness calculation classify room porch service living space depending line colour walls surrounding room 
done individual rooms starting top left 
type room decided majority vote segment colour separating rooms identical type room outer space votes room type 
segment colour separates different rooms dark green example applications brown pink votes room types neighbouring room classified types case segment votes remaining function 
function voted largest number segments assigned room 
example shown left room classified living right room receives votes porch votes living 
classified porch producing segments wrong line colours marked 
room classification produce optimal function assignment 
global optimization computationally expensive result different assignments cases contradicting votes assignment result phenotype high fraction wrongly coloured lines 
phenotypes classified badly optimized anyway receive relatively low fitness 
living porch living porch porch living porch outside living outside porch living room classification procedure voting marks segments wrong colour classification 
classification rooms number measures generated designs 
measures mapped fitness value 
binary measures fitness set measures mapping function parameters minimum value min maximum value max cutoff cut value 
measure mi lies minimum maximum values min mi max fitness assigned 
hand mi min cut max cut fitness results 
values fitness assigned linearly see 
fitness min cut min max raw measurement max cut mapping generic measure fitness value 
lists different fitnesses calculated min max cut brackets total area enclosed rooms classified porch square units total area enclosed rooms classified living square units total area enclosed rooms classified service square units example applications total area enclosed rooms square units number rooms classified porch number rooms classified living number rooms classified service exactly porch block block group rooms type connected internal walls binary exactly living block binary exactly service block binary number islands island group rooms unspecified types connected internal walls porch island connected living island internal walls binary porch island connected service island internal walls binary valid fireplace connected segments classified fireplace service living room binary number additional fireplace segments segments loose ends line segments completely enclose room calculated fraction total number segments segments wrong colour calculated fraction total number segments number runs different subsets measures performed 
described results produced section 
implementation details initial population initial individuals generated basic evolved genes random process 
length genotype selected randomly minimum maximum value 
gene random decision decide basic gene evolved gene decision biased favour evolved genes 
gene selected randomly appropriate set genes 
population control pareto selection offspring accepted population dominated individual population 
accepted individual dominate individuals population 
non dominated offspring dominate individual leads increase population size 
offspring dominating individual population possible remove individual population keeping population size constant remove individuals dominated offspring reducing size population 
reduction population size beneficial counteracts growth population non dominated non dominating individuals keeping computation overhead associated large populations low increasing selection example applications pressure removing non optimal individuals 
time lead strong loss genetic material especially right initial population generated 
new individuals dominate large fraction initial random population 
compromise method adopted long population size minimum size dominated individuals removed population 
population size falls minimum size dominated individual removed 
genetic operations genetic operations gene creation runs section 
designs produced number runs executed 
runs number wrongly coloured segments representation fitness different sets design brief fitnesses implicit design fitnesses 
runs shown evolved representation produced flw create 
run system reached stable state improving best design high number cycles 
fitness landscape created interaction representation fitness function large search space proves difficult problem evolutionary system 
example system easily improve solutions adding rooms cases mean outer wall inner wall requiring change line colour segments wall 
additionally fitness calculation computationally expensive posing practical limit number reproduction cycles executed run 
result runs produced individual achieved perfect value fitness criteria 
runs executed flw different fitness functions 
design brief fitnesses specified designs porch room living rooms service rooms total enclosed area square units fitnesses 
fitnesses provide generic specification designs system expected design similar criteria expected brief human designer 
implicit design fitnesses specify lines enclose room loose ends occur exactly fireplace consisting segments located service living area exists rooms connected internal walls fitnesses 
described criteria explicitly enforce certain aspects designs human designer usually implicitly design 
final fitness representation fitness requiring segments appropriate colours fitness 
shows best designs produced different runs fitness 
runs managed produce individuals nearly perfect fitness run producing perfect result 
designs flaws segments incorrect colour 
designs number topographical features specified fitness function noticed fireplace consists straight segments porch attached living zone room size porch comparable size examples rooms long wide 
hand size service areas considerably smaller examples 
noticeable designs internal walls result structure fitness landscape described 
room shapes building designed example applications porch outside living living porch living living outside service outside fireplace porch porch service service service living porch service designs produced evolved representation fitness functions human designer important remember fitness criterion shapes rooms 
fact rooms acceptable shapes direct result evolved representation 
noticeable results gene see best designs runs 
gene produces service room section identical designs 
best designs third run gene inspection genotype shows best designs second run similar slightly smaller gene predecessor gene 
interesting feature genotypes produced repeated occurrence gene seen genotype design indicates basic gene 
possible starting point point phenotype represented gene initial final direction happen identical 
repeating gene leads repeated drawing section produc example applications ing changes phenotype 
indicate occured runs interesting note gene duplication subsequent modification copy seen important mechanism evolution nature 
generally observed overwriting existing segments occurs quite large extent individuals final population 
genotypes contain far basic genes required produce phenotype 
genetic material entirely redundant example repeated evolved gene 
source redundant material initial random creation individuals genetic operations 
fitness function consider genotype length redundant genetic material neutral respect selection 
occurs individual passed offspring individual 
genetic material involved overwriting redundant helps evolutionary system assemble large evolved genes genotypes produce valid phenotypes loose ends correctly coloured segments 
genotype shown demonstrates variety evolved genes created phases gene creation run 
genotypes designs shown basic genes 
porch outside living living porch living living outside service outside fireplace porch porch service service service living porch service designs produced evolved representation fitness functions different evolved representation flw shows results run identical fitness functions evolved genes second gene creation run flw create 
minimization internal walls especially noticeable results 
shows designs produced basic representation run flw 
size initial individuals composed basic genes set 
figures show designs best total fitness 
colour segments way runs example applications determine function room 
seen small fraction segments correct colour evolutionary process unable correct colour segments 
runs evolved representation shows problem longer sequences single coloured segments provided evolved representation allow system produce long walls correctly coloured segments 
porch outside living living porch living living outside service outside fireplace porch porch service service service living porch service designs produced basic representation fitness functions best individuals best individuals representation fitness ignored 
enforcing correct segment colour meaningful evolved genes provide topological information 
figures show best results number wrongly coloured segments taken account 
design achieves perfect fitness fitness criteria 
topological features identified designs designs 
designs huge porch areas porch connected service area 
fireplace located corner 
rooms small function areas split unconnected rooms 
fireplace located living area service area example applications fitness values checks 
number wrongly coloured segments high advantage creating designs minimal number inner walls designs compact designs shown section 
influence fitness function additional fitness functions improve topology resulting designs 
results runs flw fitness function runs flw modified ways 
specifying total size individual sizes specified different function types size square units porch living service 
living rooms connected internal walls service rooms living room connected service room porch connected living room 
fitness functions flw different fitness functions fitnesses 
additional topological fitnesses force system produce internal walls better balanced area sizes service living segments wrong colours 
gene proves successful designs 
porch outside living living porch living living outside service outside fireplace porch porch service service service living porch service designs produced evolved representation fitness functions designs created set fitness functions produced best results best design run flw shown selected manually extended floor plan dimensional design house 
shows result process 
example applications view house created manually floor plan shown 
influence evolved representation number runs performed demonstrate influence evolved representation 
runs fitness function fitness pareto function flw 
runs parameters noted 
restricting set evolved genes produced flw create produces designs shown runs flw flw 
system able produce designs segments correct colours runs full set genes achieved minimizing number internal wall segments 
shapes produced noticeably different 
simple rectangular shapes dominate design uses porch examples 
hand proportions living service porch areas consistent different results produced full set genes 
topology results porch connected living area single blocks living service areas designs 
genes runs genes produced flw create represent features consisting small number segments 
genes obviously carry large amount information topology examples information shapes 
information complex shapes contained larger genes produced flw create 
influence evolved representation initial population different experiment shows influence evolved representation initial population 
runs flw flw results shown initial population created evolved representation evolved genes genotypes population replaced equivalent basic level gene sequence 
operation change phenotypes individuals remove protection gene sequences disruption evolutionary design process 
results show gene sequences survive modified form 
obvious example service area shape produced gene appears designs location fireplace shifted designs second example applications porch outside living living porch living living outside service outside fireplace porch porch service service service living porch service designs produced evolved representation fitness function reduced set evolved genes run figures 
similarly shape marked asterisk figures created henderson house red segments inserted middle 
shifting focus manipulation evolved genes evolved representation generated run flw create creates focus designs similarities examples shown previous section 
creative design requires focus modified different designs 
section shows example shift generated simply modification evolved representation 
modification evolved representation goal modification example change proportional area service rooms occupy designs 
purpose sequence basic genes represented evolved genes modified way basic gene produces black segment outer service area replaced genes 
second basic gene series basic genes produce red segments outer living area removed 
example applications porch outside living living porch living living outside service outside fireplace porch porch service service service living porch service designs produced evolved representation fitness function evolved genes initial population marks sequence surviving henderson example 
implementation details implementation exactly runs done unmodified evolved representation described section 
runs fitness pareto fitness function runs 
designs produced runs performed modified evolved representation 
best designs run shown 
results expected service areas dominant areas designs 
small versions shapes examples recognized living areas 
porch areas unchanged expected parts evolved genes coding left unmodified 
performance designs slightly worse compared designs flw designs dead ends wrongly coloured segments 
modification evolved genes difficult combine evolved genes high fitness genotype 
important notice change proportions influenced fitness fitness function remains unchanged runs original evolved representation 
modification representation causes change features resulting designs providing shift focus 
example applications porch outside living living porch living living outside service outside fireplace porch porch service service service living porch service designs produced modified evolved representation fitness functions discussion results results shown demonstrate steps creative process definition section meta search space space designs generated basic representation 
evolved representation created example designs set house floor plans example evolutionary process 
representation design process strong influence outcome designs new designs share features examples 
evolved representation creates focussing effect search process create new designs 
new designs created evolutionary search diverging elements process fulfilling criterion 
manipulation evolved representation case adding removing basic genes allows transformation search space new designs distinctively different change fitness function occured 
shift focus goal oriented intended change relative size living service areas exactly 
comparison runs full set evolved genes reduced set evolved genes shows evolved genes contain different amounts knowl example applications edge difference control information examples new designs 
importance continued protection gene combinations inside evolved genes creation new design shown fact protection removed features final design appear modified versions original features 
results point interaction evolved genes fitness occurs fitness function influences evolved genes appear final design example genes evolved genes influence fitness landscape noticeable minimized inner wall length designs 
design example generating paintings second example demonstrating evolved representations draw different design domains 
set evolved genes created set paintings dutch de painter mondrian 
basic representation create evolved genes window design frank lloyd wright 
resulting evolved representations combined manipulated number ways allowing production new designs combine features sources 
process creating new designs classified creative necessary requirements stated section 
background choice de paintings source evolved representation inspired knight 
knight knight analyses shape grammars describe style change style time de artist fritz georges 
shape grammars houses previous section differences exist shape grammars evolved representations way knowledge generated 
knight shape grammars created hand mainly descriptive tools 
evolved representations demonstrated knowledge generated machine learning directly create new designs 
interesting parallel knight importance transformation 
knight uses shape grammars describe transformations style artists different periods artistic career transformations generative way modify existing style knowledge 
representing mondrian paintings large body paintings mondrian considerable subset described containing single coloured rectangular areas separated black lines different width white background 
colours mainly red blue yellow black grey 
simplifying description ignoring details colour variations lines extend length side rectangle 
images reproduced fit description recognizable mondrian paintings shows 
design initial representation criteria section apply 
tree coding example adopted reasons hierarchical representation fit structure paintings example applications simplified mondrian paintings numbers correspond bois mondrian tree representations extensively evolutionary systems especially genetic programming applications example show evolved representation representation 
tree representation root tree represents original white canvas 
node including root node corresponds division rectangular canvas smaller rectangles 
recursive process resulting rectangles interpreted canvas divided smaller rectangles 
node attributes position direction division thickness dividing line colour information 
node left right subtree left subtree associated smaller sub rectangles 
colour information node determine colour smaller sub rectangle colour larger sub rectangle inherited node 
rectangle inherit canvas colour rectangle right subtrees larger sub rectangles root node right subtree exists 
canvas colour set outside evolutionary system restricts set possible designs designs rectangle colour canvas 
figures show example mondrian painting number described way 
step original canvas divided thin vertical line smaller case left rectangle coloured grey 
larger rectangle inherits canvas colour white 
left subtree node treats grey rectangle original canvas causes horizontal split smaller lower rectangle coloured white 
similarly node causes vertical division position producing white smaller rectangle larger top rectangle inherits original white canvas colour 
lower rectangle divided vertically producing red white sub rectangle node sub rectangles divided vertically produce final painting 
division node painting thick line 
left branch represents division smaller rectangle nodes swapped compared 
illustration slightly simplified location division encoded attributes implementation 
attribute describes part rectangle division done top half bottom half left half right half specifies exact location value range 
genotype phenotype transformation unique multiple ways represent phenotype genotype 
figures show example applications horizontal white thin horizontal white thick vertical grey thin vertical red thin horizontal white thin horizontal white thin representation mondrian painting tree structured series rectangle divisions tree nodes attributes shapes multiple representations representation topological features represented different ways 
horizontal vertical line intersect division line produced division location sub nodes 
vertical line start horizontal divisions sub nodes bottom horizontal split bottom followed central vertical split sub nodes 
parallel divisions rectangle produced order produced tree top node represents horizontal split top bottom right sub node larger sub rectangle cases represent centred horizontal split 
divisions centre rectangle represented ways line represented bottom top 
representation allows creation large set rectangle twodimensional designs 
additional designs including example shapes paintings knight represented invisible lines allowed shown 
invisible line located painting long intersects middle rectangle divides design halves represented tree divisions 
representation extensible version dimensional objects shown section 
shows example paintings create evolved representation 
example applications mondrian paintings create evolved representation representing frank lloyd wright window second example window design created frank lloyd wright house hanks transformed representation compatible mondrian paintings 
original design contains repetitions frame containing panels plus simple frame top simple frames bottom see 
version gene creation simplified contains identical frames containing panels see 
different widths connecting segments approximated different line widths 
design rescaled sides outer rectangle unit length shown 
line widths colours different ones mondrian paintings 
comparison shape grammar representation frank lloyd wright window designs 
definition evolved genes representation defined task define type evolved genes appropriate representation 
tree representation simple clustering neighbouring evolved genes floor plan example section possible 
section describe type evolved genes diploid representation conjunction genes 
representation designed gene creation mind 
properties important gene extraction 
locality divisions caused nodes depth tree occur inside rectangle produced higher node divisions created sub nodes common node occur neighbouring rectangles phenotype 
result nodes close tree produce effects close phenotype 
inverse relation hold example lower rectangle created node neighbour rectangles created node 
position independence effect produced node combination nodes similar independent node located tree 
current canvas colour external shape depend nodes 
tree representation difficult exactly define basic gene kinds information exist genotype local information contained values example applications representing frank lloyd wright window design original design copied hanks simplified version design rescaled gene creation attributes nodes tree colour position fraction line width topological information contained structure tree 
kinds information important evolved genes able include 
basic genes discussion refer free values values attributes part evolved genes 
position independence relative position information incorporated evolved genes 
generally evolved genes consist combinations values nodes nodes relation 
example genes derived genotype horizontal white single node evolved gene nodes vertical node horizontal left right sub node evolved gene nodes 
evolved genes form trees highest node defined root node 
topological information local information convey information 
requirement nodes added evolved gene example applications attribute node part evolved gene node required connect node fulfils condition 
floor plan application see section evolved genes created bottom combining smaller units free values evolved genes 
ideally combinations values nodes considered 
number possible combinations quickly gets large growing genotype size locality representation restrict search nodes direct neighbours tree 
possible combinations means free value free value evolved gene created free values node node sub nodes sub nodes common node case common node root node evolved gene 
evolved gene free value free value added evolved gene occurs nodes part evolved gene direct sub nodes nodes 
evolved gene evolved gene evolved genes combined root node evolved gene located nodes part evolved gene direct sub nodes nodes 
additional condition conflict evolved genes see discussion dominant recessive genes 
restriction neighbouring nodes number possible new genes easily large 
fortunately small fraction possible combinations occur population moment 
new evolved gene obviously occur population possible restrict search combinations existing population 
hash table allow efficient access different gene combinations 
mondrian application table usually contains entries common new genes occur times population individuals 
dominant recessive genes evolved genes defined contain information values different nodes 
result overlapping evolved genes occur example caused cross 
evolved genes basic representation dominant recessive genes described section requiring special genetic operations influencing creation evolved genes 
cross function cross operation illustrated 
interesting sections tree structures represent paintings shown dotted lines indicate parts tree shown 
values nodes represented circles white grey circles represent attributes containing free values coloured circles represent attribute part evolved genes 
crossover operation asymmetric operation branch tree goal tree replaced branch tree source tree 
step randomly determine cross point tree illustrated 
trees prepared crossover 
goal tree nodes crossover point removed exception nodes contain values evolved genes root located crossover example applications goal tree source tree implementation cross operation tree coding dominant recessive genes point red evolved gene illustration 
evolved genes root crossover point blue gene removed source tree nodes cutting point removed values part evolved genes root crossover point green gene replaced corresponding free values 
branch source tree merged goal tree preserving evolved genes genes source tree shadowing genes goal tree case conflicts 
remaining holes filled source tree mutation mutation random attribute random node individual mutated selected 
attribute contains free value simply replaced new random value range allowed attribute 
value part evolved gene step find root evolved gene 
value selected part yellow gene indicated arrow 
evolved gene removed replacing parts genotype corresponding value 
new evolved gene selected randomly tried place old gene 
cases new evolved gene contain values nodes node exists current tree case evolved gene rejected 
example attempt insert red gene node root yellow gene located fail require addition node bottom right tree 
number randomly selected genes tried 
fits new evolved gene inserted holes filled random example applications mutation point implementation mutation operation tree coding dominant recessive genes values 
new gene inserted replaces existing free values dominates existing evolved genes 
illustration purple gene inserted tree creating overlap existing green gene 
creating evolved representation evolved representation created lines algorithm described section 
implementation fitness function create proximity value major task implementation 
described section implementation details listed section 
evolved genes produced domains shown section 
fitness calculation fitness function create samples gene creation produce measure similarity individual examples 
relatively simple way compare final images example pixel pixel basis 
number attributes paintings identified incorporated basic representation useful create individual similarity measures attributes 
fitness function directly final phenotype works parallel genotype phenotype transformation 
match divisions phenotype divisions example 
starting root node genotype matches division caused node division original 
divisions direction division original span canvas 
division fitness calculation stops example applications division original closest position created node 
example compare phenotype originals look vertical line spanning canvas 
originals exactly line different positions canvas 
line matched fitness values derived measure difference positions divisions measured fraction total width vertical divisions height horizontal divisions current canvas 
test line width lines width lines different width test correct colour 
colour value node influences colour smaller sub rectangle divisions introduce additional colours 
colour accepted correct colours smaller sub rectangle original colour defined node 
matching division original split division halves 
recursive process smaller sub rectangle subdivisions new original compared left sub tree genotype larger sub rectangle compared right subtree 
fitness values summed nodes normalized dividing number divisions successfully matched example divisions matched correct line width line width fitness 
shows pseudo code recursive fitness calculation 
proc calculate fitness node original fitnesses match division node division original match position colour node sub nodes divide original node original calculate fitness left subnode original fitnesses calculate fitness right subnode original fitnesses fi fi pseudo code comparison example genotype arguments initial call root node genotype example empty fitness structure additional fitnesses generated number matched divisions number areas example gives measure complete phenotype describes example number nodes matched including sub nodes total number nodes gives measure divisions phenotype matched example example applications maximum position offset matched divisions opposed average calculated 
fitness computation produces fitness values comparison individual example examples pareto fitness vector values 
niching prevent convergence population 
implementation details initial population create initial individuals size individuals determined randomly 
starting empty node appropriate number nodes added random places growing tree 
attributes nodes filled random values respective set possible values direction top bottom left right fraction line width thin medium thick colour black blue green cyan red magenta yellow white blue blue blue light blue population control floor plan application individuals kept fitness larger population 
application fitness functions defined way nearly individuals created fitness values better leading fast growing population containing badly fitting individuals 
reason individuals pass additional test comparison examples counts line width fitness colour fitness number wrong nodes maximum position error threshold value 
certain number conditions fulfilled individual accepted population 
example individual correct colours examples correct positions accepted population 
stricter test fits described gene fitness useful reject individuals successful run evolutionary system 
pareto fitness vector reduced single value making convergence control niching impossible 
offspring dominates individual population removed population long population size individual removed 
gene combination fitness identification best new gene combinations single fitness value required 
pareto fitness value selection evolutionary algorithm reduced single fitness value 
individuals population fit examples partly simply adding fitness values lead cases individuals highest sum ones close quite correct features 
lead creation evolved genes containing features occur examples 
contribute gene combination fitness individual exact fit subset examples 
fit subset example colours line widths divisions correct nodes genotype genotype example applications fewer nodes needed produce full example 
evolved genes created individuals guaranteed contain features part examples 
gene fitness number nodes genotype multiplied number examples individual fits 
gene creation dominant recessive genes creates complication gene extraction 
evolved gene created existing evolved genes overlap dominant recessive new evolved gene duplicate values attributes 
values dominant recessive different individual combination evolved genes occurs 
constant mapping evolved gene values represents 
implementation overlapping evolved genes combined new evolved gene duplicate values identical case matter dominates 
alternative solution static dominance scheme older evolved genes dominate younger evolved genes 
results gene creation evolved genes created mondrian paintings frank lloyd wright window design 
cases number gene creation runs performed representation selected examples 
white yellow medium right white medium bottom yellow blue medium bottom medium right evolved genes number schemata display convention expected evolved genes produced runs specify part set attributes node 
example shows evolved genes created mondrian paintings number compare tree 
evolved genes attributes root node determined gene 
transform tree value exist attributes node 
attributes nodes part evolved genes filled default values 
indicate values part evolved gene default convention 
default colour area coloured pink colour available genes example gene 
default line width line width width thin medium gene 
genes uses thin lines 
default direction direction assumed vertical line drawn gene 
thick top example applications default position position line coloured red gene 
genes created run mo create 
see text presentation details mondrian paintings genes produced run mo create creating evolved genes examples shown 
evolved genes incorporate red rectangle top left result dynamics evolutionary production samples gene creation 
early particular run individuals started incorporate red rectangles large number evolved genes red rectangles created stage 
stages run evolutionary system incorporated rectangles individuals resulting evolved genes produced colours shown 
evolved genes produced grow complexity time evolved genes created final phase gene creation span nodes 
large number evolved genes produced run specify colour white reflects fact largest fraction rectangles examples white 
result designs produced representation large fraction white rectangles see section 
individual evolved genes defined application represent local knowledge contain information examples evolved representation collection evolved genes 
manifestation emergence interaction evolved genes see section 
individuals generated evolutionary algorithm samples discarded give indication quality samples 
shows best individuals created mo create 
individual example applications best copy best copies individual examples created run mo create highest sum pareto fitness values incorporates features examples 
individuals shown ones highest sum fitnesses comparison examples 
visible flaws slight offset vertical division top rectangle missing vertical division yellow rectangle feature exists individual shown 
evolved genes created window design frank lloyd wright window create evolved genes window design system run setting mondrian examples 
run referred win create genes created 
best individual final population differed window designs position dividing line 
genes produces shown 
single complex example application evolved genes considerably complex produced mondrian paintings 
complex gene shown gene contains information values nodes 
genes specify mainly white areas 
evolved representation having created evolved representation produce new designs 
representations created mo create win create tasks create new painting designs create new window designs 
implementation details example applications initial population maximize influence evolved representation results initial population example created evolved genes 
evolved representation provides hard focus see section 
creating initial individual randomly adding evolved genes growing tree usually lead strong overlaps genes time leaving unfilled attributes nodes 
reason stage process designed fill attributes evolved genes minimizing overlap 
randomly determining number nodes final tree initial empty node created 
phase random terminal nodes current tree selected random evolved genes added nodes possible producing tree nodes allowed 
second phase evolved genes randomly selected tested nodes tree added node fill highest number remaining empty attribute tree enlarging tree maximum number nodes 
attributes filled evolved genes entirely shadowed evolved genes removed tree 
fitness calculation create new individuals fitness specified evaluate designs 
real world designs kind aesthetic measures appropriate criteria 
measures exist automated relying user select nicer paintings tedious danger hiding influence evolved representation bias user selection 
simple fitness function sufficiently difficult system intended neutral respect features learned examples 
consists number fitness measurements independent pareto fitness vector 
section measurements mapped 
fitnesses results require mapping parameters brackets rectangles painting shortest side rectangle painting relative canvas size white rectangle size top right corner canvas 
colour white canvas colour appear painting rectangle anyway measurements fraction white goal rectangle covered corresponding white rectangle painting area white rectangle painting overlap white goal rectangle 
genetic operations produce offspring tree mutation crossover operators dominant recessive genes developed gene creation see section 
population control initial population individuals offspring replaces individual 
example applications new painting designs initial individuals created basic genes focus created evolved genes hard focus 
example initial individuals colours examples 
colours part basic representation initial population 
mutation able introduce basic genes slightly softening focus 
influence evolved representations easily seen initial random individuals 
fitness function difficult system usually finds perfect phenotypes minutes 
shows results runs evolved representation created mo create runs evolved representation created win create runs basic genes identical system 
influence evolved genes obvious results evolved representation colours line widths examples fewer colours painting larger white areas proportions similar respective examples 
exception fourth painting generated mo create mutation obviously able change colour light blue change line width thin 
particular run needed twice long average number cycles see section mutation higher chance influence designs way 
similar effect designs win create genes case colours light green introduced mutation 
new window designs example new window designs similar single frame frank lloyd wright window design created 
fitness function similar case panes required design vertical line middle canvas 
fitness function intentionally chosen way neutral style features prevents promotes 
exception runs evolved genes initial individuals created contain basic genes 
results evolved genes evolved genes win create evolved genes shown 
influence evolved representations obvious 
transforming evolved representation section described evolved representations transformed combining evolved genes different sources inside domain transformation evolved genes different domains 
evolved representations created mo create win create types transformation implemented shown 
mixing genetic material show influence mixed sets evolved genes sets evolved genes mo create win create mixed different ways 
resulting sets genes create new designs windows fitness described section 
combining gene pools pools evolved genes mixed simply creating initial individuals evolved genes randomly pools running process example applications new designs evolved genes created mo create evolved genes created win create basic genes 
create new designs usual 
implementation sources evolved genes exactly transformation basic level genotype phenotype transformation require modifications evolved representations 
transformation evolved gene basic gene able identify correct set basic genes represented evolved gene 
sets symbols evolved genes overlap 
implementation evolved genes represented numbers ensured simply re numbering sets evolved genes 
designs created mixed pool genes shown 
influence genes clearly visible designs different features directly mapped examples 
initial individuals final designs contain genes win create mo create reflects fact example applications new designs evolved genes created win create evolved genes created mo create basic genes 
evolved genes window design available 
selectively combining gene pools just combining gene pools possible create new pool contains selected features original pools 
example done removing information position fraction rectangle division nodes genes mo create removing information colour line thickness nodes genes win create 
cases leads genes empty nodes genes removed set evolved genes 
set evolved genes combined contains genes 
individuals initial population created genes information topological features defined evolved genes win create example applications window designs created combined evolved representations simple combination selective combination information colour line thickness defined evolved genes mo create 
information preserved evolved genes evolution producing window designs ones shown 
occasional mutation introduce different features thin line design 
imbalance number evolved genes matter case different sets evolved genes responsible different aspects new designs 
shows fourth design assembled complete window similar original frank lloyd wright design 
rendered version design shown inner cover thesis 
designs assembled full window shown rotated 
evolved genes different domain mentioned section possible evolved representations different domains initially created genotype phenotype example applications transformation evolved representations adapted purpose 
new domain example creation coloured cubes 
create dimensional objects basic representation similar paintings 
rectangles divided lines nodes specify cubes intersected planes 
node additional attribute specifying intersecting plane perpendicular plane plane plane 
words divide cube projection planes resulting dimensional shape cut mondrian painting 
shows cut represented different ways 
representation cube intersections values brackets denote plane direction fraction due similar nature representations easy adapt evolved genes created paintings window 
obviously evolved genes provides value cutting plane 
possibility assemble initial individuals value provide random value node 
topology features learned window recognizable phenotype 
reason genes specifying topological features span number connected nodes features recognizable easily resulting phenotype divisions specified nodes perpendicular plane 
example series parallel divisions remains parallel divisions perpendicular plane words value added attribute 
value randomly assigned generally case 
better results produced adapting evolved genes threedimensional application 
gene value intersection plane randomly chosen added node gene 
example topology features removed evolved genes produced mo create colour line width information removed evolved genes created win create 
information intersection plane added window genes way described 
resulting genes example applications create initial population 
fitness function similar create new window designs sub cubes plane intersecting resulting cube middle edges shorter unit length 
result shown fig 

comparison fig 
shows cube created fitness function genes assigning planes randomly individual nodes 
similarities colouring line width mondrian paintings exist cubes cube shows topological features relating frank lloyd window example 
objects created representation views show opposing corners 
plane information added evolved genes plane information added nodes 
discussion results floor plan example described section example demonstrates steps required creative process defined section production evolved genes create focus evolutionary search focus goal oriented transformation focus 
compared floor plan example evolved representation far complex tree representation non consecutive genes require diploid values 
resulting genes show possible create evolved genes contain knowledge shape tree values nodes 
resulting designs strongly reflect evolved representation 
reasons hard focus colours line widths topology features restricted occuring examples reason examples strong visual style characteristics easily represented example applications evolved genes 
example shows additional transformation operations focus mixing evolved representations different sources equivalent nature section transformation evolved representation different application domain 
chapter quantitative analysis examples allow quantitative assessment effects evolved representation number measurements taken runs example applications 
results measurements chapter 
cases number runs different parameters performed 
result run shown result typical outcome set runs similar parameters 
generation evolved genes creation evolved genes evolutionary process generate copies set examples meta process identifies new gene combinations creates evolved genes inserted current population 
measures population size quality individuals gene number provide indicator dynamics gene extraction 
prevention convergence population important create distribution genes features example measures spread genes examples section 
evolved genes evolutionary process changes way search space searched measure average equivalent bit string length introduced allow quantification effect evolved genes search process floor plan painting example 
evolved genes requires dominant recessive gene pairs tree representation painting example 
population dynamics figures show graphs characteristic measures taken gene creation runs flw create mo create win create 
show number individuals population number genes produced measure quality best individual generated 
flw create size largest individual population value proportional sum pareto fitness values 
horizontal axis measure evolution time 
counts number select parents produce offspring cycles 
gene creations flw create mo create population size number evolved genes grow steadily course run best individual asymptotically approaches optimum size fitness respectively 
described previous chapter systems try create new evolved gene certain fixed number individuals added population succeed best current gene combination appears minimum number individuals 
number quantitative analysis examples number evolved genes population size reproduction cycles population size fitness best individual number evolved genes progress flw create gene creation run population size number evolved genes created size largest individual population duration run number evolved genes population size population size fitness best individual number evolved genes reproduction cycles progress mo create gene creation run population size number evolved genes created fitness best individual duration run individuals number evolved genes directly connected 
correlation strongest run mo create creation evolved genes slows system fails longer periods identify gene combinations appear sufficient number individuals 
win create run behaves differently caused fact single complex example 
case fitness best individual number evolved genes closely correlated 
system fails find new individuals long periods time system discovers new better individual opens new niche number additional individuals created turn triggers additional creation evolved genes 
population size reproduction cycles falls remains reflect dynamic 
example fitnesses mutually exclusive individuals easily dominate large fractions size largest individual fitness best individual quantitative analysis examples number evolved genes population size population size fitness best individual number evolved genes reproduction cycles progress win create gene creation run population size number evolved genes created fitness best individual duration run population 
population size artificially prevented small see section 
fitness sharing improve distribution individuals created evolutionary system floor plan example flw create fitness sharing mechanism introduced see section 
effectiveness mechanism best seen distribution individuals different segments examples fitness sharing mechanism 
shows number individuals population covering segment examples gene creation run flw create 
shows fitness sharing able prevent strong convergence individual regions examples segment covered individuals 
noticeable differences examples degree convergence occured difference covered segment covered segment factor 
surprising fitness sharing entirely remove imbalance control theory terms sharing acts proportional controller leads equilibrium situation increased fitness areas balances increased coverage areas 
study effects fitness sharing run performed identical parameters flw create fitness sharing disabled 
run quickly converged small set segments 
run run nearly long failed produce individuals larger segments compared flw create see genes produced 
segment coverage shown 
graph minimum maximum individual count runs shown 
run fitness sharing minimum coverage increases maximum coverage keeping difference factor run 
run sharing minimum remains run effectively stops producing individuals reproduction cycles 
interesting fitness best individual quantitative analysis examples number individuals covering segment examples final population run fitness sharing number individuals covering segment examples final population run fitness sharing quantitative analysis examples note premature convergence individuals covering example lead stall evolutionary process local optimum individual covering example 
individuals covering segment maximum coverage fitness sharing minimum coverage fitness sharing maximum coverage fitness sharing minimum coverage fitness sharing reproduction cycles maximum minimum coverage examples evolutionary process runs fitness sharing 
fitness sharing obviously effective preventing convergence allowing evolutionary process produce variety samples gene extraction 
turn lead distribution genes example shown section 
produced genes goal gene creation runs create set evolved genes represents features examples possible distributed way 
analysis done flw create mo create runs 
floor plans analyse distribution evolved genes created flw create examples special sample population individuals created 
sample population evolved gene represented individual 
distribution individuals reflects distribution features encoded evolved genes examples 
shows segment covered different evolved genes 
example floor plans receive roughly similar share coverage genes variety different parts examples 
account gene extraction ensures evolved genes produce different phenotypes means different ways produce segment example evolved gene 
shows evolutionary system successful producing large variety samples gene extraction able construct appropriate evolved genes 
evolved representation creation new designs large variety genes part examples gives design system large quantitative analysis examples coverage example evolved genes created flw create number options combine evolved genes new designs adapted new design requirements 
paintings simple define equivalent measure evolved genes created painting examples 
example designs decomposed number different ways depending way decomposed different genes genotype 
coverage examples evolved genes calculated possible decompositions examples 
evolved genes contain information combination attributes nodes coverage evolved genes established attribute separately 
detailed result test show 
shows particular decomposition attribute value combinations node 
numbers colons denote coverage evolved genes example different evolved genes define line width horizontal rectangle division 
shows features different locations covered genes 
best example line width attribute described highest number evolved genes node 
exception node uses line width surprising line width rarely paintings 
similarly evolved genes nodes produce white areas coloured areas 
result shows set evolved genes reflects ratios occurrence different features population described section 
values indicating coverage attributes evolved genes added resulting sum compare coverage different decompositions quantitative analysis examples colour line width fraction direction colour line width fraction direction colour line width fraction direction colour line width fraction direction colour line width fraction direction colour line width fraction direction colour line width fraction direction coverage evolved genes particular decomposition examples mo create illustration decomposition comparison examples 
table shows values decompositions painting decompositions painting see 
values indicate bias favour painting created convergence population examples adequately covered 
fitness sharing mechanism comparable flw create see section possibly improve balance 
painting painting painting table total coverage evolved genes possible decompositions examples effect gene creation population creating evolved genes introducing representation changes search space 
individuals produced evolved genes individuals created basic genes 
floor plan painting examples variable size genotypes directly expressed terms search space size search space theoretically restricted virtual memory computer run process 
small fraction size searched 
quantitative analysis examples floor plan example implementation possible get lower limit search space required create particular genotype assuming genotype size fixed length genotype run equivalent circles calculate number possible genotypes length 
fixed alphabet size genotype length simply alternative measure length shortest binary string describe designs calculated log 
minimum genotype length required find individual binary representation 
measure amount information contained genotype 
approximation value calculated tree representation painting application constructing binary representations shape tree attribute values 
population rough measure size search space searched time similarly calculated average length equivalent binary strings genotypes population 
evolved representation influence measure evolved genes shortens genotypes increases size alphabet 
comparison average search space size basic level genotypes evolved level genotypes show effect evolved representation search space 
floor plans genotype floor plan representation equivalent length binary string calculated genotype length log alphabet size bits 
basic representation alphabet size constant evolved level genotypes depends number evolved genes 
gene creation run new evolved genes created system runs alphabet size grows slowly 
shows graph average length genotypes bits basic level evolved level genotypes gene creation run flw create 
explained values reflect size respective search spaces 
initially search space sizes grow rate mirroring growth complexity individuals 
cycles gene extraction starts reduce size search space evolved level genotypes continues grow slowly basic level search space 
shows plot basic level genotype search space comparison run disabled gene extraction 
plot shows basic level genotype length determines complexity phenotype grows slower gene extraction performed 
shows existence evolved genes improves search larger copies example increasing efficiency evolutionary system search process described sections 
effect evolved genes population seen shows distribution genes population start points figures 
bars give number occurrences population different genes negative gene numbers denoting basic genes positive numbers denoting evolved genes order creation 
strong variation different genes clear trend individuals generated earlier 
final population contains fairly mixture evolved genes phases gene creation contains number basic genes 
population shows trend genes different phases gene creation show trend larger evolved genes 
seen length histograms taken times gene distributions compared 
fig quantitative analysis examples length bits equivalent bit string basic level genotypes evolved level genotypes basic level genotypes gene extraction reproduction cycles flw create average length genotypes population bits basic level genotypes evolved level genotypes comparison run gene extraction 
ures show number genes different lengths population different stages evolutionary process 
second half flw create run especially larger evolved genes established population see figures 
pattern obvious number evolved genes certain length multiplied length figures 
graph calculated way shows number basic genes basic level genotypes individuals population part evolved genes certain length evolved level genotypes 
figures show largest fraction basic genes basic level genotypes individuals final population parts evolved genes length 
paintings produce comparable measurements tree representation mondrian paintings necessary transform trees bit strings completely describe tree including information location evolved genes 
average length strings genotypes population give rough measure size search space searched particular time comparable measure employed floor plan example 
equivalent bit string consist parts describing structure tree containing encoded version values slots nodes determined evolved genes part describing location evolved genes tree 
individual containing basic genes structure part computed doing depth left right iteration nodes tree noting particular subtree exists 
result number bits required lt nnodes index stands basic level tree information 
node attributes assume kn values 
value part basic level bit vector quantitative analysis examples occurences population occurences population occurences population occurences population population reproduction cycles reproduction cycles reproduction cycles gene number distribution genes population initial population cycles cycles cycles quantitative analysis examples occurences population occurences population occurences population reproduction cycles reproduction cycles reproduction cycles reproduction cycles gene length occurences population weighted occurences population weighted occurences population weighted reproduction cycles reproduction cycles gene length length histograms reproduction cycles distribution evolved genes different lengths distribution evolved genes different lengths weighted length genes 
note different scales 
length lv nnodes log kn 
evolved genes span node carry information structure tree 
individuals containing evolved genes existence nodes predicted existence evolved genes tree 
consequently structure part bit string omitted nodes reducing value lt 
similarly attributes specified evolved genes encoded value part bit string 
different node length computed node lv nnodes cn log kn cn attribute node part evolved gene 
quantitative analysis examples node tree location root evolved genes 
additional information required define genes located node 
evolved genes encoded corresponding bitstring starts fixed symbol single symbol sufficient represent list evolved genes particular node 
code representation requires bit node bit sequence encoding evolved gene node 
depending number evolved genes genotypes representations gene locations slightly efficient example lists node gene pairs 
representation suited individuals larger number evolved genes possibly evolved gene single node 
length bit string describes evolved genes genotype calculated lg nnodes log number evolved genes root node number evolved genes defined 
number evolved genes grows gene creation run number bits required represent roots evolved genes increases 
example construction equivalent bit string shown 
node example attributes assume values assume values 
time bit string constructed systems contains evolved genes evolved gene node example tree 
part part part example node calculation equivalent bit vector table shows equivalent bit strings basic level evolved level genotypes 
evolved genes ignored bits required encode structure tree 
node needs bits encode attributes leading total bits 
evolved level genotype existence evolved gene node allows remove bits structure information right subtree node exist right subtree node 
attribute values encoded evolved gene reducing number bits required node values bits 
hand bits required determine position evolved gene tree 
evolved gene reduces length equivalent bit string bits 
important aspect encoding half bits lt unavoidable reduced evolved genes 
evolved genes encode information absence particular sub node 
produced terminals tree removed structure information 
quantitative analysis examples lt lv le lt lv lg structure node node node node evolved length basic level evolved level table equivalent bit vector genotype basic level evolved level genotypes figures average population lt lv lg evolved level basic level space shown course gene creation runs mo create win create 
bits required basic level descriptions directly proportional average number nodes individual mirror average size individuals 
main effect evolved genes lies attributes encoded genes structure information genes plays small role 
mo create saving bits attributes lv lv nearly exactly matched bits required encode evolved genes lg 
indicates size search space searched evolved genes changes slightly 
structure search space changes cross manipulate attributes structures encoded lv lt searches progressively smaller part search space 
information encoded lg reflects evolved genes tree changed mutation 
bits reproduction cycles basic level attributes basic level structure evolved level evolved genes evolved level attributes evolved level structure average length bit vectors describing structure evolved genes attributes individuals evolved level basic level space mo create 
win create single example requiring individuals high number nodes leads larger evolved genes 
effect higher influence evolved genes search space size seen 
run lg lv smaller lv 
absolute terms search space bits smaller orders magnitude 
graphs mirror average size genotypes population 
example drop lengths individuals caused appearance nearly perfect individual compare dominating large individuals leading strong reduction average genotype size population 
results show evolved genes necessarily reduce size quantitative analysis examples bits basic level attributes basic level structure evolved level evolved genes evolved level attributes evolved level structure reproduction cycles average length bit vectors describing structure evolved genes attributes individuals evolved level basic level space win create search space 
situations large number small genes additional information required encode position genes offsets information encoded genes 
shape search space changes drastically information changeable mutation 
situations larger genes develop evolved genes leads significant reduction search space 
dominant recessive gene pairs dominant recessive genes introduced painting example allow implementation genetic operations presence non consecutive evolved genes see section 
contains graphs fractions dominant recessive gene pairs basic genes creation evolved genes 
shows number recessive genes increases number basic genes reduced gene extraction 
surprising evolved genes exist population cross mutation lead overlaps individuals 
analysis shows half individuals final population overlapping evolved genes 
shows dominant recessive pairs important factor evolutionary process 
hand long win create run attributes parts evolved genes recessive 
function evolved genes protect groups basic genes disruption genetic operations substantially impaired 
evolved genes previous section documented evolved representation influences search space gene creation runs 
goal evolved representations generation new designs 
gain insight evolved representation influences search space design process experiments quantitative analysis examples fraction fraction basic genes evolved genes reproduction cycles basic genes overlapping evolved genes reproduction cycles percentage dominant recessive gene pairs population mo create win create performed evolved representation measurements actual design creation runs 
focussing effect evolved genes assumption evolved genes create focus design process evolved representation increases probability certain features produced long features neutral regard selection 
due size search space obviously possible exhaustively map space designs compare results evolved representation 
possible random individuals different lengths sample search spaces 
floor plans idea measurement generate random examples comparable phenotype complexity basic genes evolved genes compare similar random individual examples 
quantitative analysis examples unfortunately fitness function available gene creation requires individuals fit place examples 
direct measure similarity phenotype examples available 
fraction individuals different length fitting examples provide measure similar randomly produced individuals examples 
compare individuals evolved genes individuals generated entirely basic genes 
comparison genes created floor plan example flw create random individuals generated genotype consisting initial random basic gene providing random initial direction number evolved genes 
simplify discussion basic gene start genotype ignored comparison results 
shows result test 
individuals generated evolved genes individuals basic genes 
comparing fit rates basis equal evolved level genotype length figures show genotypes generated evolved genes fit comparable genotype generated basic genes note different scales basic evolved genes 
example individuals basic genes fit examples individuals generated evolved genes fit 
genotypes length difference compared 
random genotypes generated basic genes evolved genes fitted examples 
fitting individuals genotype length fitting individuals phenotype size fitting individuals genotype length fitting individuals phenotype size probability randomly generated individuals fitting examples 
genotype size measure basic genes evolved genes 
phenotype size measure basic genes evolved genes 
note different horizontal scales 
results different complexity phenotypes considered 
measure complexity minimal number pen movements turns steps lines required represent phenotype 
corresponds basic level genotype length redundant turns removed 
basic gene individuals graph closely reflects graph genotype lengths 
slightly shifted smaller sizes redundancies quantitative analysis examples type 
phenotypes length generated fit examples 
ratio corresponds fact examples colours possible phenotypes length coloured segments step ahead 
genotypes evolved genes evolved gene represents number basic genes compensates lower fit rate genotypes 
example random combinations evolved genes fit fit produce long phenotypes 
words individuals complexity compared generated evolved genes far fit examples 
shows larger complexity phenotype stronger effect evolved genes 
phenotypes size generated basic genes fits compared individuals generated evolved genes 
paintings similar measure transformation search space created mondrian example section 
case fitness function create evolved genes mondrian paintings derive direct measure similarity design set examples 
expectation random individuals produced evolved genes similar examples get higher fitness values random individuals generated basic genes 
shows case 
described section fitness values calculated comparison design example giving theoretical maximum fitness 
new design identical examples real maximum fitness lower run best individual reached fitness 
measurement fitness range divided sections distribution individuals sections recorded 
individuals randomly generated fixed number nodes algorithm described section 
shows random individuals generated evolved genes higher fitness similar examples individuals generated basic genes individual sizes tested 
example largest portion individuals nodes generated evolved genes fitness individuals generated basic genes reach fitness results obvious evolved representation reshaping search space providing focus individuals similar examples provided representation created 
usage evolved genes new designs previous experiments shown evolved representation modifies search space 
final test done runs representation produce new designs 
representation desired effect evolved genes design process 
visual inspection designs produced indicates case measurements done design runs show details 
quantitative analysis examples bucket count bucket count evolved genes basic genes evolved genes basic genes bucket count evolved genes basic genes fitness fitness fitness distribution randomly generated individuals fitness range individuals nodes nodes nodes 
floor plans show evolved genes creation new designs measurements various aspects population taken design run flw 
effect evolved representation search space size seen 
search space size measured bits average length equivalent bit strings described section 
alphabet size fixed basic level evolved level genotypes measurements directly proportional length basic evolved level genotypes 
size bits basic level genotype evolved level genotype reproduction cycles search space size evolved level basic level representations flw run quantitative analysis examples shows evolved representation number bits required describe design 
absolute terms evolved genes reduce search space searched orders magnitude 
run population size remains constant enforced minimum 
major changes search space sizes happen reproduction cycles 
time size basic level genotype length nearly doubles evolved level genotype size small temporary increase 
means time large evolved genes replace shorter evolved genes basic genes individuals 
subsequent improvements individuals population little influence average lengths genotypes 
shows distribution evolved genes different lengths population 
distribution weighted length genes shows genes basic level genotypes part evolved genes length 
large fraction genes basic level genotypes part evolved genes lengths 
number basic genes gene size histogram gene length weighted size final population run flw see evolved genes run gene distribution histograms taken different points flw 
shows histograms 
start histogram reflects initial randomly generated population 
reproduction loops random distribution starts differentiate evolved gene particularly successful 
evolved gene gene identified successful runs evolved representation see section 
reproduction cycles distribution evolved genes fairly established 
cycles distribution gets pronounced evolved genes removed population successful genes individuals population 
interestingly basic genes common individuals nearly doubling number population cycle final population 
basic genes thought glue required fit evolved genes genotypes produce legal high fitness phenotypes 
provide single segments fill gaps turns modify starting direction evolved genes 
shows changes population cycle neutral terms average length evolved level genotypes 
quantitative analysis examples occurences population occurences population gene number gene number occurences population occurences population gene number gene number distribution genes population cycles cycles cycles cycles negative gene numbers denote basic genes note different scales paintings shows distribution evolved genes final populations runs produce designs 
graphs show floor plan example genes dominate population result convergence population 
inspection graphs pattern identified runs 
genes dominate final population runs related chance 
creating graph distribution evolved genes combining final populations set runs including shown shows gene floor plan example genes occur final distribution 
demonstrated relative distribution evolved genes averaged runs shown 
gene number second gene produced accounts evolved genes final populations genes account 
gene common genes runs chances occurring set random draws genes 
side genes occur final populations 
comparison distribution initial populations shows difference caused evolutionary process due similar imbalance initial populations 
reason difference success genes seen successful genes compared 
genes exist final populations involve rectangle divisions small fractions 
genes highest level nodes trying sub divided small rectangles lead rectangles smaller minimum size see description fitness calculation section 
quantitative analysis examples occurences population occurences population gene number gene number occurences population occurences population gene number gene number distribution genes final population mo mo note different scales 
occurences gene number gene number relative distribution genes population averaged runs initial population final population note different scales side successful genes fraction value best possible value respect genes identical subdivisions top half defined left subtree genes right subtree 
gene define fraction value fraction value node evolved gene located defined basic gene evolved gene shadowed gene 
gene example node dominating gene providing yellow rectangle fraction 
reason success evolved genes defining colour white defining small fraction 
genes established final population partly influenced fitness functions partly chance 
individuals containing evolved genes selected fitness functions gene floor plan example establishes complete service room including fireplace high chance final designs 
genes selected example genes creating porch occurences quantitative analysis examples direction bottom colour white line width fraction direction right colour white line width direction bottom colour yellow line width direction left colour white line width fraction direction right colour white line width fraction direction left colour white line width fraction direction top colour white line width fraction direction left colour white line width colour blue fraction direction left colour yellow line width direction right line fraction direction bottom colour yellow line width common genes final populations runs genes final populations walls accepted vanish population quickly 
evolved genes neutral respect selection successful happen high fitness individuals produce larger number offspring 
influence evolved representation convergence time results previous section shown evolutionary process produce new designs entirely indifferent regard evolved genes genes far successful final populations 
interaction fitness function evolved genes shows different measure number reproduction cycles required find result fulfilling fitness criteria 
evolved representation changes way genetic operations phenotype space 
example mutations basic genes produce small changes phenotype mutations evolved genes usually lead large jumps phenotype space 
expected influence evolved representation convergence speed depends particular fitness 
designs high fitness focus created evolved representation designs quickly 
design process need longer find high fitness designs basic representation 
floor plans comparison quality designs produced full evolved representation produced reduced set evolved genes indicates influence representation see section 
quantitative analysis examples table shows cycles took runs produce individuals fitness best individual produced 
analysis data indicates representation clear influence time evolutionary process needs produce individuals 
fitness benchmarks final type best individual fitness table reproduction cycles required find individuals certain minimum fitness evolved genes evolved genes evolved genes replacing basic genes production initial population basic genes 
comparing runs evolved genes runs genes table see runs full set genes reach fitness benchmarks faster 
final design requires half number cycles reduced set 
second set comparison runs table evolved genes creation initial population 
start evolutionary process evolved genes replaced corresponding sequence basic genes 
runs reach early benchmarks number cycles runs full set genes 
reach fitness reach final design nearly twice cycles required 
behaviour nicely shows importance protection evolved genes early phases populations produced evolved gene similar genetic operations similar effect 
sequences basic genes comparison run encoded evolved genes protected evolutionary process proceeds evolutionary operators disrupt sequences destroying information contained 
leads slowing evolutionary process 
run basic representation table requires high number cycles reach fitness fails reach higher benchmarks 
extreme example floor plan application similar simpler representation described gero runs basic representation able produce rooms size larger square unit 
unable grow larger rooms intermediate designs areas completely enclosed lines punished fitness function shows designs produced 
case gap fitness function large evolutionary process cross 
larger jumps phenotype space evolved representation overcome problem leading results fulfil fitness criteria 
quantitative analysis examples resulting designs runs simpler representation evolved representation basic representation paintings table shows convergence times runs mondrian problem described section evolved genes runs window problem number different configurations 
type cycles average table reproduction cycles required find perfect individuals creating paintings evolved genes paintings mondrian genes paintings window genes windows evolved genes windows mondrian genes windows window genes windows mondrian window genes windows window topology mondrian colour line width comparing average times find perfect design painting problem evolved genes created mondrian examples mo create seen effect evolved genes convergence time different floor plan example creating new designs evolved representation requires nearly times reproduction cycles table required produce designs fulfilling fitness function evolved genes table 
representation created frank lloyd wright window example win create leads cycle average slightly higher evolved genes table 
creation new designs fitness function specified paintings largest difficulty evolutionary process produce exactly right fractions produce white rectangle top corner occur exactly right size phenotypes 
evolved genes produced mondrian examples contain fractions example paintings subset available quantitative analysis examples fractions 
similarly evolved genes created frank lloyd wright window contain fractions example window different ways decompose window larger subset fractions 
number cycles required find designs indicates fractions mondrian evolved representation suitable creating white rectangle 
words focus created mondrian evolved representation contain designs achieve perfect fitness fitness function examples different 
creation new windows easier problem evolutionary process generally needs fewer cycles produce perfect results table 
evolved genes mondrian painting slow evolutionary process lesser extent table 
case evolved representation created window example helps evolutionary process reducing average number cycles needed nearly table 
largest difficulty fitness function produce relatively large number areas producing areas side lengths limit 
window evolved representation helps genes produce areas spacing optimal terms side lengths 
results expected evolved genes sources results average time lies times representations table 
fitness function specifies topological requirements adding colour line width information mondrian genes topological information window genes significantly change average number cycles required table 
results section show evolved representation influence designs produced influence computational effort required produce designs 
evolved representations neutral efficiency search process 
actual direction influence depends particular fitness related examples creation evolved representation runs shown examples significant increase creating paintings significant decrease creating floor plans number cycles required find design sufficiently high fitness 
chapter discussion drawn results previous sections 
process described meet goals listed section 
creative process 
questions answered final chapter 
results example runs previous chapters example implementations shown qualitative quantitative results runs implementations 
section examine drawn bringing different results 
evolved representations created machine learning examples shown evolved genes created 
evolved representations successfully created multiple examples frank lloyd wright floor plans section mondrian paintings section single example frank lloyd wright window section 
example evolved representation included features available example designs features different example designs combined single evolved genes 
result fact cases evolved genes created individuals perfect subsets example designs case implementations 
results show evidence features common examples integrated evolved genes strongly appear example designs 
reason similarities example designs obvious influence stronger similarities different parts example design 
example genes created frank lloyd wright floor plans represent straight lines colours possibly corner 
common example designs appear number different places single design 
similarly evolved genes mondrian paintings white areas common different paintings different nodes painting 
common features example designs represented evolved genes higher number single example designs effects described difference small noticeable inspection discussion evolved genes 
experiments different sets example designs run establish 
distribution sample individuals created example designs important creation evolved representation 
special measures evolutionary algorithm converge individuals clustering features example designs shown section 
special fitness sharing mechanism see section successful preventing convergence flw create niched pareto fitness section mo create win create 
resulting distribution individuals resulted equally distribution evolved genes shown section section 
evolved genes defined way allows non consecutive combinations basic genes necessary representations dominant recessive genes section 
result parts evolved genes population representation ignored genotype phenotype transformation 
contradicts function evolved genes protection combinations basic genes 
small portion genes genotype redundant function evolved representation impaired 
dominant recessive genes runs second example implantation section negative effect noticed results 
runs analysed section fraction dominant recessive gene pairs stabilized 
words evolved genes expressed preserve effect evolved genes 
due probabilistic nature evolutionary algorithm sample production exact representation created example designs predictable differ run 
focus produced representation differ example seen difference results 
evolved representations incorporate knowledge creating evolved representation machine learning process knowledge examples incorporated representation 
implementation examples shown depending representation evolved genes different kinds knowledge learned 
importantly examples show global knowledge incorporated evolved representation effect emerging collection evolved genes evolved representation 
frank lloyd wright floor plan example single evolved gene example fireplace wall service living room different encode porch outer wall living room outer wall 
combination similar genes absence evolved genes representing certain combinations leads individuals correct topologies fitness having enforce 
mondrian example evolved genes represent white areas 
result designs genes fraction white surface original paintings 
runs shown single evolved genes created contain large amount information 
example complex evolved gene created flw create equivalent bit binary string section complex gene created win create spans tree nodes section 
discussion evolved representations transform search space runs analysis done shown evolved representations influence search space expected section 
example implementations thesis shown individuals comparable phenotype complexity far similar examples created evolved representation section 
shows evolved representation changes search space illustrated density individuals similarities example increases 
important note evolved genes protect gene combinations disruption mutation cross change search space applies run evolutionary algorithm evolved representation generation initial populations random individuals suggest 
results show evolved representation lead reduction search space 
evolved genes require additional information stored genotype increase size alphabet floor plan example added bits calculation equivalent bit string painting example section 
complex evolved genes offset reduction information stored places genotype 
floor plan example complex evolved genes largest requiring equivalent bit string length bits section 
reduction search space size high number bits required average describe individual creation evolved representation section runs representation section 
difference caused complex evolved genes average success runs evolved representation particularly gene section 
runs tree representation smaller reduction search space size seen generation evolved representation frank lloyd window design example mondrian paintings section 
explained fact small evolved genes saving bits due information encoded evolved gene offset additional bits required define position evolved gene genotype lg 
due higher complexity window example design larger evolved genes created leading reduction search space 
mondrian example results show evolved genes different effects results mutation cross 
position evolved genes tree changed mutation 
shows search space searched mutation increases evolved genes search space searched cross reduced 
caused fact mutation genes choose similar effect expected floor plan example shown data available 
evolved representations focus design process create new designs transformation search space caused evolved representation translates focussing effect 
shown examples generating new designs fitness function different representations 
differences designs produced directly attributable influence representation 
effect clearly visible comparing discussion floor plan example designs shown painting example 
subset evolved genes produces reduced focussing effect section 
runs shown evolved representation creation initial population focussing effect population due cross mutation focus deteriorates time 
seen noticeable differences resulting designs section slow creation individuals time section 
evolved representation interacts fitness result runs evolved representation generation new designs interacts fitness function 
fitnesses proved neutral respect evolved genes evolved genes changed progress evolutionary algorithm fitness landscape 
influence fitness evolved representation seen floor plan example painting example 
cases evolved genes far common final designs evolved genes 
shows floor plan example runs gene identified best designs runs representation section 
comparing distribution evolved genes runs painting examples shows genes successful runs appear final populations section 
influence evolved representation fitness landscape best seen convergence times 
floor plan example evolved representation strong positive effect generation new designs 
section shows runs evolved representation create better results shorter time compared runs basic representation performance runs subset evolved representation lies extremes 
painting example depending combination representation fitness evolved representation helps interferes production new designs section 
transformation representation changes focus examples shown modifying representation possible change focus design process representation 
different manipulation operations demonstrated selecting subset evolved genes section adding basic genes removing basic genes evolved genes section combining evolved representations section transformation evolved genes new basic representation section 
transformations comparison designs produced fitness unmodified evolved representations clearly shows effect transformation 
new designs show strong similarities designs created original evolved representations discussion outcome process basic unmodified evolved representation 
third transformation example shows possible evolved representation different domain evolved genes modified fit basic representation new domain 
creative 
answer question depends definition creative 
criteria defined section answer evolved representation creates focus search space new designs produced inside focus area evolutionary algorithm includes divergent convergent elements goal oriented changes focus possible transformations representation 
words underlying procedural definitions section transformation evolved representation induces substitutive expansion search space 
implementations shown thesis important step done user modification representation 
reason claimed examples complete implementations creative computational process example window design result creative computational process 
section suggests easily possible write functions step 
thesis opened number new question limited framework ph investigated part thesis 
questions described 
automatic control transformations example implementations transformation representations done user 
clearly practical system evolved representations practical application designer 
independent system programmer opposed user incorporate set transformation operations applicable basic representation application 
system able select appropriate transformation operations 
mixture transformations evolutionary search search space sampling cyclic manner 
shows schematic representation cycle 
elaborated version 
design cycle starts initial evolved representation 
representation depth evolutionary search performed 
evolutionary algorithm applications search usually indicated convergence population simply inability process find improved designs long time 
best design produced deemed sufficient designer designer provided minimum design specification design cycle finished 
number transformation operations may selected 
selection operations done designer system 
system pick random operation base decision evaluation designs produced current representation 
assumption method current designs result higher likelihood new focus contains useful designs compared random choice 
random choice discussion manipulation final design manipulation evolved representation evolved representation evolved representation sampling evolved representation depth search sufficient manipulation sampling selection selection search space transformations sampling search process different randomly searching entire meta space transformed focus original focus original focus continues influence search 
improve odds selecting successful transformation number transformations tested parallel short search performed sample new transformed search spaces 
samples new representations selected depth evolutionary search re starts cycle 
selection transformation done designer example inspecting visual representations samples produced 
system selection example pareto fitness applications see section performance fitness difficult optimize previously indication promising focus 
combination selection transformation current results sampling number different transformations intended provide system boden calls see section 
higher level evolved genes interesting topic left open development concepts higher level evolved genes 
moment evolved genes simply fixed combinations basic genes 
due interaction evolved genes evolved representation global information incorporated representation section kinds information learned 
example basic representation shown genotypes represent squares different sizes 
higher level process analyse evolved genes create new higher level evolved gene represents discussion square variable size 
occurrences evolved genes follow pattern replaced new evolved gene 
obvious example occurrence single coloured straight lines different lengths evolved genes created frank lloyd wright floor plans genes 
single higher level evolved genes replace evolved genes coding lines different lengths colour 
thesis shown possible create representations representation focusses design process 
development system achieved steps identification representation induce predictable controllable focussing effect development method create representations particular focus 
process potential creative thesis identified key conditions procedural definitions literature able focus search search space inside large meta search space able change focus 
order evolved representations creative process third step added analysis modification focus transformation representation 
steps described thesis demonstrated qualitative quantitative results example implementation 
representations created user provided examples resulting representation induce focus generation new designs 
transformations applied representation modify focus 
resulting process fulfils criteria creative process defined thesis example implementations step modification representation done user 
algorithm implementation step outlined 
apart step user interactions required provision example designs creation initial focus definition criteria production new designs evolutionary system design applications 
process developed evolutionary design systems expected adaptable probabilistic algorithms example simulated annealing 
implementation demonstrated common representation schemes evolutionary algorithm string representations tree representations adaptable representation scheme 
high number evolutionary algorithm applications design evolved representations large variety potential applications 
ackley 

ccr network worlds research langton eds proceedings th international workshop artificial life synthesis simulation living systems alife mit press cambridge pp 

url www cs unm edu ackley ccr writing ps gz anderson 

gene therapy scientific american 
angeline pollack 

coevolving high level representations langton ed artificial life iii vol 
xvii sfi studies sciences complexity santa fe institute addison wesley reading pp 

ck vogel michalewicz 
eds 
handbook evolutionary computation iop publishing oxford university press 
release 
bentley wakefield 

genetic representations solids genetic search microcomputers civil engineering 
url www cs ucl ac uk staff bentley zip goel prabhakar 

innovation analogical design gero sudweeks eds artificial intelligence design kluwer academic publishers dordrecht netherlands pp 



tournament selection ck vogel michalewicz eds handbook evolutionary computation iop publishing oxford university press chapter 
release 
boden 

robot creative know ford glymour hayes eds mit press cambridge ma pp 

bois 


mondrian press boston 


ascent man british broadcasting london 
brooks maes 
eds 
artificial life mit press cambridge massachusetts 
chan 

exploring individual style wright designs journal architectural planning research 
chan 

operational definitions style environment planning planning design 
chan 

cognitive theory style environment planning planning design 
coyne rosenman radford balachandran gero 

knowledge design systems addison wesley reading 
parmee webb 

multi objective optimization preliminary airframe design parmee ed adaptive computing design manufacture springer verlag berlin pp 

darwin 

illustrated origin species faber faber london 
abridged introduced richard 
dave schmitt faltings smith 

case design architecture gero sudweeks eds artificial intelligence design kluwer academic publishers dordrecht pp 

de boer fracchia prusinkiewicz 

analysis simulation development cellular layers langton taylor farmer rasmussen eds artificial life ii vol 
sfi studies sciences complexity addison wesley reading pp 
colour plates 
de jong fogel schwefel 

history evolutionary computation ck vogel michalewicz eds handbook evolutionary computation iop publishing oxford university press chapter 
release 
de oliver wright 

genes vertebrate body plan scientific american 


gene therapy scientific american 
flemming coyne 

generative expert system design building layouts technical report engineering design centre carnegie mellon university pittsburgh pa fogel 

evolutionary computation new philosophy machine intelligence ieee piscataway nj 
fogel 

principles evolutionary processes ck vogel michalewicz eds handbook evolutionary computation iop publishing oxford university press chapter 
release 
fogel angeline 

guidelines suitable encoding ck vogel michalewicz eds handbook evolutionary computation iop publishing oxford university press chapter 
release 


seeing oxford university press oxford 
gero 

design prototypes knowledge representation schema design ai magazine 
gero 

model exploration computer aided design gero eds formal design methods cad north holland amsterdam pp 

gero jun 

visual semantics emergence support creative designing computational view gero maher sudweeks eds preprints computational models creative designs key centre designs computing university sydney pp 

gero kazakov 

evolving design genes space layout planning problems 
submitted artificial intelligence engineering 
gero kazakov 

spatial layout planning evolved design genes dagli chen fernandez ghosh eds smart engineering systems neural networks fuzzy logic evolutionary programming asme press new york pp 

gero kazakov 

genetic engineering design problems dasgupta michalewicz eds evolutionary algorithms engineering applications springer verlag berlin pp 

gero louis kundu 

evolutionary learning novel grammars design improvement artificial intelligence engineering design analysis manufacturing 
hinton 

performance genetic algorithms optimization frame structures parmee ed adaptive computing design manufacture springer verlag berlin pp 

goldberg 

design innovation lessons genetic algorithms lessons real world technical report illinois genetic algorithms laboratory department general engineering university illinois urbana champaign 
url ftp ftp illigal ge uiuc edu pub papers ps goldberg 

race hurdle sweet spot lessons genetic algorithms automation design innovation creativity technical report illinois genetic algorithms laboratory department general engineering university illinois urbana champaign 
url ftp ftp illigal ge uiuc edu pub papers ps goldberg smith 

nonstationary function optimization genetic algorithms dominance grefenstette ed genetic algorithms applications proceedings second international conference genetic algorithms lawrence erlbaum associates hillsdale new jersey pp 



assisting creativity composite representation gero sudweeks eds artificial intelligence design kluwer academic publishers dordrecht netherlands pp 

graf banzhaf 

interactive evolution civil engineering gero maher sudweeks eds preprints computational models creative design key centre design computing university sydney pp 

greene 

new approach diploid dominance effects stationary genetic search fogel angeline ck eds evolutionary programming mit press massachusetts pp 

hammel 

simulation models ck vogel michalewicz eds handbook evolutionary computation iop publishing oxford university press chapter 
release 
hanks 

frank lloyd wright preserving architectural heritage studio vista london 
henderson 

henderson dictionary biological terms edn longman scientific technical harlow essex 
revised eleanor lawrence 
holland 

adaptation natural artificial systems nd edn mit press cambridge massachusetts 
horn nafpliotis 

multiobjective optimization niched pareto genetic algorithm technical report illinois genetic algorithms laboratory illigal university illinois urbana champaign 


evolutionary layout design gero sudweeks eds artificial intelligence design kluwer academic publishers dordrecht netherlands pp 

ger 

annotations consistency closed world assumption journal logic programming 
kargupta 

information transmission genetic algorithm shannon second theorem technical report university illinois urbana champaign department computer science illinois genetic algorithm lab urbana illinois 
kargupta 

signal noise crosstalk long range problem difficulty genetic algorithms eshelman ed proceedings sixth international conference genetic algorithms icga morgan kaufman pp 

kargupta 

computational processes evolution gene expression messy genetic algorithm annual meeting society industrial applied mathematics siam kansas city missouri 
url www lanl gov research members siam ps kargupta 

gene expression messy genetic algorithm ieee international conference evolutionary computation nagoya university japan pp 

kauffman 

origins order oxford university press new york 
kirkpatrick gelatt vecchi 

optimization simulated annealing science 
knight 

color grammars designing lines colors environment planning 
knight 

transformations de art paintings georges fritz environment planning 
knight 

transformations design formal approach stylistic change innovation visual arts cambridge university press 


languages frank wright houses environment planning 
koza 

genetic programming 
programming computers means natural selection bradford book mit press cambridge massachusetts 
koza 

architecture altering operations evolving architecture multi part program genetic programming technical report computer science department stanford university stanford california usa 
koza bennet iii andre keane 

evolutionary design analog electrical circuits genetic programming parmee ed adaptive computing design manufacture springer verlag berlin pp 

langton 

artificial life langton ed artificial life vol 
vi sfi studies sciences complexity addison wesley reading pp 

langton 

langton taylor rasmussen eds artificial life ii vol 
sfi studies sciences complexity addison wesley reading pp 

langton 
ed 

artificial life vol 
vi sfi studies sciences complexity addison wesley reading 
langton 
ed 

artificial life iii vol 
xvii sfi studies sciences complexity addison wesley reading 
langton 
eds 
artificial life mit press cambridge massachusetts 
langton taylor farmer rasmussen 
eds 
artificial life ii vol 
sfi studies sciences complexity addison wesley reading 


generic endogenous crossover control eshelman ed proceedings sixth international conference genetic algorithms icga morgan kaufman pp 

lindenmayer prusinkiewicz 

developmental models multicellular organisms computer graphics perspective langton ed artificial life vol 
vi sfi studies sciences complexity addison wesley reading pp 

maher balachandran zhang 

case reasoning design lawrence erlbaum hillsdale nj 
maher poon gomez 

exploration computational models creative design processes gero maher sudweeks eds preprints computational models creative design key centre design computing university sydney pp 

maher zhao gero 

creativity humans computers gero eds knowledge systems architecture acta helsinki chapter pp 

mahfoud 

simple analytical models genetic algorithms multimodal function optimization technical report illinois genetic algorithms laboratory urbana il 
mahfoud 

niching methods ck vogel michalewicz eds handbook evolutionary computation iop publishing oxford university press chapter 
release 
mc 
neill gero warren 

understanding electronic design protocol analysis research engineering design appear 
meyer roitblat wilson 
eds 
animals animats proceedings second international conference simulation adaptive behaviour mit press cambridge massachusetts 
meyer 
wilson 
eds 
animals animats proceedings international conference simulation adaptive behaviour mit press cambridge massachusetts 
michalewicz 

genetic algorithms data structures evolution programs springer verlag berlin 
mit press alife www 
mit press alife www system 
url alife santafe edu alife alife def html 

methodology emergent shapes creative design gero sudweeks maher eds preprints computational models creativity key centre design computing university sydney pp 



exploration innovation design computational model symbolic computation springer verlag berlin 
ng wong 

new diploid scheme dominance change mechanism non stationary function optimization eshelman ed proceedings sixth international conference genetic algorithms morgan kaufmann san francisco pp 

olivier nakata 

multi level molecular representation gero sudweeks eds artificial intelligence design kluwer academic publishers dordrecht pp 

paredis 

symbiotic evolution solutions representations eshelman ed proceedings sixth international conference genetic algorithms icga morgan kaufman pp 

parmee 

exploring design potential evolutionary adaptive search computational intelligence technologies parmee ed adaptive computing design manufacture springer verlag berlin pp 

parmee 
ed 

adaptive computing design manufacture springer verlag berlin 
penrose 

emperor new mind oxford university press new york 


technology sustainable agriculture scientific american 
poon maher 

emergent behaviour evolutionary design gero sudweeks eds artificial intelligence design kluwer academic publishers dordrecht netherlands pp 

prusinkiewicz hammel mech 

visual models morphogenesis guided tour 
url www cpsc ucalgary ca projects vmm title html purcell gero edwards 

design fixation intelligent design aids gero sudweeks eds artificial intelligence design kluwer academic publishers dordrecht pp 

qian gero 

design support system analogy gero ed artificial intelligence design kluwer academic publishers dordrecht pp 

qian gero 

approach design exploration analogy preprints computational models creative design key centre design computing university sydney pp 

radcliffe 

schema processing ck vogel michalewicz eds handbook evolutionary computation iop publishing oxford university press chapter 
release 
radford gero 

design optimization architecture building van nostrand reinhold new york 


triangle square windows frank lloyd wright environment planning planning design 
rosca 

entropy driven adaptive representation rosca ed proceedings workshop genetic programming theory real world applications tahoe city california pp 

url ftp ftp cs rochester edu pub rosca gp ml ps gz rosca ballard 

genetic programming adaptive representations technical report tr university rochester computer science department rochester ny usa 
url ftp ftp cs rochester edu pub papers robotics tr genetic programming adaptive representations ps rosca ballard 

hierarchical self organization genetic programming proceedings eleventh international conference machine learning morgan kaufmann 
url ftp ftp cs rochester edu pub rosca gp ml hierarchical gp ps rosca ballard 

learning adapting representations genetic programming proceedings ieee world congress computational intelligence orlando florida usa ieee press orlando florida usa 
url ftp ftp cs rochester edu pub rosca gp ieee adaptive repr ps gz rosenman 

generation form evolutionary approach gero sudweeks eds artificial intelligence design kluwer academic publishers dordrecht netherlands pp 

rosenman 

generation form evolutionary approach dasgupta michalewicz eds evolutionary algorithms engineering applications springer verlag berlin pp 

sarma de jong 

generation gap methods ck vogel michalewicz eds handbook evolutionary computation iop publishing oxford university press chapter 
release 
schmitt 

case reasoning integrated design construction system management information technology construction world scientific publishing singapore pp 

gero 

learning representations evolutionary computation yao ed australian joint conference artificial intelligence ai world scientific singapore pp 

schwefel 

evolution optimum seeking sixth generation computer technology wiley new york 
shih 

case representation adaptation design schmitt ed futures vieweg verlag pp 

stal 

skeleton techniques creative synthesis structural shapes gero sudweeks eds artificial intelligence design kluwer academic publishers dordrecht pp 

steels 

theory emergent functionality 
meyer wilson eds animals animats proceedings international conference simulation adaptive behaviour mit press cambridge massachusetts pp 



shape shape grammars environment planning planning design 


grammars designing building gifts environment planning planning design 
wolpert macready 

free lunch theorems search technical report sfi tr santa fe institute 
hayes roth 

finding analogues innovative design preprints computational models creative design key centre design computing university sydney pp 

wright 

drawings plans frank lloyd wright dover publications new york ny 
originally published ausgef rte und rfe 
berlin 
wright holden 

design optimization simple stochastic search methods parmee ed adaptive computing design manufacture springer verlag berlin pp 



computational genetics physiology metabolism neural systems learning vision behaviour life new context langton ed artificial life iii vol 
xvii sfi studies sciences complexity santa fe institute addison wesley reading pp 



diploid genetic algorithm preserving population diversity pseudo ga davidor 
schwefel nner eds parallel problem solving nature ppsn iii springer verlag berlin pp 

abstracts published papers appendix contains titles abstracts publications author produced connection thesis 
learning representations evolutionary computation gero 

learning representations evolutionary computation yao ed australian joint conference artificial intelligence ai world scientific singapore pp 

evolutionary systems variety applications turbine design scheduling problems 
basic algorithms similar applications representation problem specific 
unfortunately search time evolutionary systems depends efficient codings problem specific domain knowledge reduce size search space 
describes approach user specifies general basic coding larger variety problems 
system learns efficient problem specific coding 
evolutionary system variable length coding 
system optimizes example problem meta process identifies successful combinations genes population combines higher level evolved genes 
extraction repeated iteratively allowing genes evolve high level complexity encode high number original basic genes 
results continuous restructuring search space allowing potentially successful solutions shorter search time 
evolved coding solve related problems 
excluding potentially desirable solutions evolved coding knowledge example problem available new problem 
shows example domain dimensional shape designs 
example coding evolved uses evolved gene encoding average basic genes 
evolved coding successfully optimize room layout original coding converges local maximum fitness find feasible solutions 
evolving representations design cases creative design gero 

evolving representations design cases creative design gero maher sudweeks eds preprints computational models creative design key centre design computing university sydney pp 

abstracts published papers case design adaptation design case new design requirements plays important role 
sufficient adapt predefined set design parameters task easily automated 
far reaching creative changes required current systems provide limited success 
describes approach creative design adaptation notion creativity goal oriented shift focus search process 
evolving representation restructure search space designs similar example case lie focus search 
focus starting point generate new designs 
learning genetic representations alternative hand coded shape grammars gero 

learning genetic representations alternative hand coded shape grammars gero sudweeks eds artificial intelligence design kluwer dordrecht pp 

shape grammars analyse describe designs create new designs similar style designs grammar 
grammars created hand involving large amount research designs design process 
proposes different approach system design examples bottom process learns stylistic features examples 
achieved evolutionary system able change representation 
creation complex evolved representation search space evolutionary process transformed search new designs biased designs similar design examples 
learning representations creative design evolution gero 

learning representations creative design evolution artificial intelligence engineering design analysis manufacturing 
url www arch usyd edu au thorsten publications html research available 
evolving design genes design solution gero kazakov 

evolving design genes design solutions eds computing civil engineering new york pp 

evolutionary systems design largely focussed optimizers locate optimal solutions design problems 
describes genetic engineering principles engineering design evolutionary systems 
describes genetic engineering terms design gene evolution class problems design 
demonstrates effects gene evolution process utilizing evolutionary systems design 
abstracts published papers genetic engineering evolutionary systems design gero kazakov 

genetic engineering evolutionary systems design aid workshop evolutionary systems stanford university stanford pp 

workshop available 
dominant recessive genes evolutionary systems applied spatial reasoning gero 

dominant recessive genes evolutionary systems applied spatial reasoning ed advanced topics artificial intelligence th australian joint conference artificial intelligence ai proceedings springer verlag heidelberg pp 

learning genetic representation shown useful tool evolutionary computation 
reduce time required find solutions allows search process biased desirable solutions 
learning genetic representation involves bottom creation evolved genes original basic genes evolved genes population 
evolved genes effectively protect combinations genes useful disturbed genetic operations cross mutation 
protection rapidly lead situations evolved genes interlock way genetic operations possible genotypes 
prevent interlocking previous implementations allow creation evolved genes genes direct neighbours genotype form continuous blocks 
shown notion dominant recessive genes remove limitation 
gene single location possible construct genetic operations separate interlocking evolved genes 
allows non continuous evolved genes minimal violations protection evolved genes operations 
example shows evolved genes dominant recessive genes learn features set mondrian paintings 
representation create new designs contain features examples 
mondrian paintings coded tree node represents rectangle division values direction position line width colour 
modified evolutionary operations allow system create non continuous evolved genes example associate divisions thin lines specifying values 
analysis behaviour system shows genes dominant recessive gene pair 
shows dominant recessive genes important allow non continuous evolved genes occur seriously violate protection evolved genes genetic operations 
genetic engineering design problems gero kazakov 

genetic engineering design problems dasgupta michalewicz eds evolutionary algorithms engineering applications springer verlag berlin pp 

abstracts published papers chapter describe extension genetic algorithms utilizes set ideas borrowed practice genetic engineering natural organisms 
show constructed implemented computationally enhances efficiency genetic algorithm computational process 
apply solution spatial layout planning problem example np complete problem case layout design example class problems solved directly traditional genetic algorithms 
frank lloyd wright mondrian transforming evolving representations gero 

mondrian frank lloyd wright transforming evolving representations parmee ed adaptive computing design manufacture springer verlag berlin pp 

computer create designs goal certain style information style 
unfortunately method formal representations style shape grammars lend automated implementation 
shown evolutionary system evolving representation provide alternative approach allows system learn style knowledge automatically need explicit representation 
shows applicability evolved representation extended transformations representation 
transformation allows mixing style knowledge similar animals different races added possibility controlling exactly features source 
achieved different ways mixing representations learned different examples new combined representation create new designs 
similar manner information learned application domain different domain 
achieve representation genotype phenotype transformation adapted 
operations allow mixing knowledge different domains 
example show style information learned set mondrian paintings combined style information frank lloyd wright window design create new window designs 
show combined style information create dimensional objects showing style features similar newly designed windows 
