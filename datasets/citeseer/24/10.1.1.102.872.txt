time stamping binary linking schemes laud lipmaa jan cybernetica ee estonia cybernetica lab lai ee estonia jang cyber ee 
state basic requirements time stamping systems applicable necessary support legal electronic documents 
analyze main drawbacks time stamping systems proposed date new system meets stated requirements 
prove requirements signi cantly tightened 
time stamping hs bdm set techniques enabling ascertain electronic document created signed certain time 
real importance time stamping clear need legal electronic documents long lifetime 
time stamping trust signed documents cryptographic primitives signing unreliable solve cases signer signing claiming accidentally lost signature key 
years especially context legal regulation digital signatures organizational legal aspects time stamping subject world wide attention 
addition de ning responsibilities owner signature duties responsibilities third party time stamping service tss stated 
increasing interest time stamping systems need trust tss minimized 
order users liable mistakes possibility ascertain 
physical objects digital documents comprise seal time 
association electronic document uniquely certain moment time complicated impossible 
theory relativity absolute time exists 
best achieve time stamping relative temporal authentication rta complexity theoretic assumption existence collision resistant way hash functions 
rta enables veri er time stamped documents verify created earlier 
main drawbacks time stamping systems proposed date concern need unconditionally trust tss time complexity rta linear number issued time stamps 
current theoretical practical requirements discussed new time stamping system need trust tss signi cantly diminished ers rta complexity proportional logarithm number issued time stamps 
sect 
time stamping solutions proposed date analyzed 
sect 
clari es security objectives time stamping giving essential requirements time stamping systems 
sect 
protocols new time stamping system described linear linking scheme 
sect 
binary linking schemes introduced scheme logarithmic verifying time 
sect 
prove thatthe requirements stated sect 
tightened 
existing time stamping systems simple time stamping protocol hs sect 
tss appends current time submitted document signs composite document returns values sig tss client 
weaknesses scheme unreliability old time stamps possible leakage signature key tss impossibility issued time stated time stamp implying tss unconditionally trusted 
drawbacks widely accepted secure time stamping system rely solely keys secret information 
overview existing time stamping solutions mq 
linear linking scheme lls order diminish need trust users may demand tss links time stamps chain collision resistant hash function proposed hs sect 
variant 
case time stamp th submitted document xn sig tss tn idn xn ln tn current time idn identi er submitter ln linking information de ned recursive equation ln tn idn xn ln complications practical implementation scheme 
rst number steps needed verify way relationship time stamps linear respect number time stamps 
single veri cation may costly create chain 
solution impractical trust broadcast requirements pointed bdm 
modi cation proposed hs sect 
variant time stamp linked time stamps directly preceding 
variation decreases requirements broadcast increasing space needed store individual time stamps 
tree schemes similar tree schemes proposed bdm 
haber stornetta scheme hs time stamping procedure divided rounds 
time stamp rr round cumulative hash timestamp rr round documents submitted tss round th round binary tree tr built 
participant pi wants time stamp document round submits tss hash yr hash rr documents wants time stamp round 
leafs tr labeled di erent yr inner node tr recursively labeled hk kl kr correspondingly left right child nodes collision resistant hash function 
tss store time stamps rr rounds fig 

remaining information required verify certain document time stamped xed round included individual time stamp document 
yr rr yr fig 

example time stamp round schemes bdm left right 
example individual time stamp yr yr 
verifying procedure time stamp yr consists verifying equality rr yr yr rr 
size single time stamp logarithmic respect number participants submitting documents tss current round 
haber stornetta linking scheme hs di ers slightly benaloh de mare scheme bdm 
time stamp rn th round linked directly rn enabling veri er check way dependencies ri examining individual time stamps submitted documents 
impossible benaloh de mare scheme 
haber stornetta scheme individual time stamps th round linked time stamp rn previous round 
schemes feasible provide rta documents issued round unconditionally trust tss maintain order time stamps tr 
method increases need trust limits maximum temporal duration rounds insigni cant units time second digital system 
yr number submitted documents round small expenses time stamping single document may unreasonably large sect 

security objectives give de nition time stamping systems applicable legal situations 
justify approach compare older systems 
time stamping system consists set principals time stamping server tss triple protocols 
stamping protocol allows participant post message 
veri cation protocol principal having time stamps verify temporal order time stamps 
audit protocol principal verify tss carries duties 
additionally principal particular tss able produce fake time stamps caught 
time stamping system able handle time stamps anonymous reveal information content stamped data 
tss required identify initiators time stamping requests 
notion time stamping system di ers bdm important aspects 
motivate di erences 
relative temporal authentication main security objective time stamping temporal authentication jus ability certain document created certain moment time 
creation digital data item observable event inthe physical world moment creation ascertained observing data thing absolute thing exists 
best check relative temporal order created data items prove rta way dependencies de ning arrow time analogous way growth entropy de nes arrow time physical world haw chap 

example collision resistant way hash function reliably rough derivation rule andx known principal moment possibly compute prior date existence way functions proved 
proposed time stamping systems sense hypothesis existence collision free way hash functions 
de nition 
collision resistant way hash function mov sect 
function properties compression ease computation preimage resistance nd preimage resistance collision resistance 
de nition 
binary relation resistant way hash function 
linking scheme procedure link family hn data items auxiliary linking items ln satisfying recursive formula ln hn ln ln exactly elements fm ng preimage 
sequence mi mi mi called verifying chain length 
context time stamping hn xn xn denotes th time stamped document 
linking item ln referred time stamp xn 
note way relationship ln lm doesnot prove moment creating xn bit string xm exist 
know xn exist moment creating lm 
omitted tn formula hn taken granted value tn represents submission time xn 
way principal associate time stamp certain moment time stamp nonce moment 
nonce mean su ciently long random bit string probability time stamped negligible 
order verify absolute creating time document timestamped principal veri er compare time stamp time stamps nonces generated er 
solution supplementary duties tss principals 
nonces illustrates similarity time stamping ordinary authentication protocols nonces prevent possible reuse old messages previous communications 
rta possible determine submitting time signature time signing document 
signing document principal generates nonce time stamps 
includes time stamp document signs obtains time stamp signature sig 
view point tss stamping events identical need aware time stamping nonce meaningful data 
veri cation document veri er compare time stamps time stamps trusted 
way dependencies er may conclude signature created time frame moments issuance respectively 
moments close signing time ascertained necessary precision 
detection forgeries time stamping system properties enabling users verify arbitrary time stamp correct 
possession documents corresponding time stamps prove documents able produce fake chains time stamps 
time stamping system allow determine timestamps possessed individual tampered case tampering determine time stamps tampered tss tampered issuing generally unknown means 
second case bring action 
principals interested legal time stamps verify correctness immediately issuing signatures techniques discussed signature tss unreliable signed time stamps evidence 
order increase trustworthiness time stamping services possible clients periodically inspect tss 
case tss guilty mechanism prove innocence issued certain time stamp certain round 
additionally tss publish regularly manner time stamps rounds bdm mass media 
time stamping protocol includes collision resistant way hash functions message digest time stamp issued th round time stamp th round message digest time stamp round time stamp issued th round intractable forge time stamp 
forgery detection procedures simple 
forgeries determinable stamping protocol time stamp signed tss fails correct unable establish temporal order correct timestamps see sect 
details 
feasibility requirements time stamping systems bdm hs nonlinear partial ordering time stamps support rta 
sect 
shows modify linear linking scheme hs sect 
ful ll security objectives rta detection forgeries 
hand practice scheme detection forgeries take steps 
noted jus easy forge time stamps assume veri er limited computational power 
leads question feasibility 
order rta feasible case time stamps belong di erent rounds reasonable de ne additional layer links time stamps rounds 
de nition 
assume linking schemes monotonically increasing function 
linking scheme mean procedure linking family hn data items auxiliary linking items ln lr satisfying recursive formulae ln hn ln ln lr hr lr lr hr hm lm lm fm fr 
values lr referred time stamps rounds 
note time stamps requested tss veri cation protocol belong set time stamps rounds time stamps available time stamping server 
de nition 
linking scheme said linking scheme als rank 

say linking scheme enables accumulated time stamping arbitrary positive exists scheme als rank linking scheme enables accumulated time stamping duration rounds enlarged order guarantee negligible fraction time stamps kept memory time stamping server 
total number time stamps issued till moment current run stamping veri cation protocol 
feasibility requirements summarized 
number evaluations hash function veri cation protocol log 
particular number time stamps examined single run veri cation protocol log 
conveniently small upper bound length rounds clients want get time stamps reasonable time 
sensible require stamping protocol th document terminate tss received additional log time stamp requests 
real applications desirable average length rounds constant guarantee arbitrary constant negligible fraction rounds length greater 

size individual time stamp small 
show thm 
trade quantities 
sect 
sections improvement scheme sect 

version system linear linking pedagogical reasons outline protocols basic organizational principles system linear linking scheme 
scheme ful lls trust requirements impractical 
described scheme signi cantly improved replacing linear scheme binary linking scheme 
number time stamps round constant known participants clients data items xn xed size 
case linear linking scheme time stamp th round number role tss tss maintains databases 
database dc time stamps current round 

database dp time stamps previous round 

database dr time stamps rounds 
databases considered line sense client requests moment 
fourth database complete data base time stamps stored line may stored archive cd 
requests database possible costly requiring human interaction 
round time stamps dp stored separate cd process may audited 
dp emptied 
time stamp rr current round computed added dr published newspaper processes audited 
database dc copied dp new database dc created 
stamping protocol suppose current 
client sends xn tss 

tss nds hn xn ln hn ln adds pair hn ln 

tss signs pair ln ln sig tss ln back tothe client 

tss sends tuple head hn hn client 

client veri es signature tss checks hn hn ln true values newspaper requesting values line database dr tss 
requests answered tss nishes round nding publishing public key newspaper 
client limited period protocol order get complete individual time stamp xn 

client sends request tss 

tail hn hn tss answers sending tail sig tss tail client 

client checks hn hn ln de nition 
complete individual time stamp sn th document sn tail head ln sig tss ln client interested legal time stamp validate stamping protocol 
relatively short period st rd step th th step signature key tss trusted authenticate signature invalid head tail evidence court 
client responsible doing signature key tss trusted 
signature tss may unreliable way properties 
veri cation protocol denote round sn issued 
assume veri er time stamped documents xm sm xn sn 
veri er checks validity equations timestamps 

data hold tail head check ln hn hn hm lm 
veri er sends request tss 

tss answers sending tuple vmn signature sig tss vmn er 

veri er validates signature nds nds formula lr nally compares value ln sn value 
audit protocol possible legal importance time stamps issued tss mechanism audit tss 
easy way periodically ask time stamps tss verify 
time stamps linked inconsistently eq 
hold time stamps veri cation protocol fails tss proven guilty 
mechanism tss prove issued certain time stamp certain round done tss presents time stamps issued th round shows time stamp th round time stamps linking rules coincides published time stamp 
binary linking schemes current section give construction practical linking scheme logarithmic upper bound length shortest verifying chain time stamps 
de nition 
functions satisfying condition binary linking scheme bls linking scheme ff inorder guarantee existence verifying chain arbitrary take 
cases omit talk just bls 
binary linking scheme alternatively de ned directed countable graph connected contains cycles vertices outgoing edges links 
construct nite family graphs tk way 
consists single vertex labeled number 
vertex source sink graph 

tk constructed 
sink labeled 
graph tk consists copies tk sink second copy linked source rst copy additional vertex labeled linked source second copy 
labels second copy increased 
sink tk equal sink rst copy source tk equal vertex labeled 
link vertices second copy outgoing links source rst copy 
note double link sink second copy source rst copy 
sequence tk de nes binary linking scheme vertices labeled natural numbers contains scheme tk initial segment 
construction binary linking scheme add links sources initial segment special vertex labeled fig 

see rem 
recursively equation theorem 
length shortest verifying chain 
see appendix fig 

als structure built 
sect 
outline time stamping system ful lls trust requirements 
show system feasible bls 
order issue individual time stamp th document tss nd shortest verifying chains 
th individual time stamp consists minimal amount data sect 
necessary verify mutual way dependencies lj lay chains 
shown satis es implication enables accumulated time stamping proof omitted technicality 
particular binary linking scheme described sect 
enables accumulated time stamping 
xed dlog source tk arbitrary blog ic 
length th time stamp scheme exceed log bits output size hash function maximum length rounds grows proportionally log 
average length rounds constant practical publish time stamps rounds constant units time 
achieved easily procedure 
deadline round approaching time stamps issued assign random values remaining data items hn 

denote ord greatest power dividing als reasonable label time stamps lexicographical order pairs ord 
ord andg ord 
formulas simplify case ord 
easy show shortest verifying chain uniquely de ned 
data vmn necessary verify way dependence computed procedure proc data nil mdo data append data hn data append data ln data append data od 
head tail 
example 
fig 

order compute fourth tenth time stamps need tail head tail head verifying chain links verification verification fig 

time stamp proposed system 
bls satisfying implication 
wand verifying chains respectively 
element 
verifying chains tail head common element implies existence verifying chain ni ni ni chain simple algorithm logarithmic length 
denote round belongs 
proof claim case isgiven appendix belong di erent rounds verifying straightforward similar structure second layer links 
verifying chain form number logarithmic due fact time stamps rounds linked way similar linking time stamps fig 

length sequences logarithmic appendix 
example 
chains example common element verifying chain 
corollary 
due similarity veri cation stamping procedure arbitrary pair time stamped documents number steps executed number time stamps examined single run veri cation protocol log 
optimality solution meets asymptotically feasibility requirements requirements re ned 
insight 
show linking scheme exist time stamping solution length time stamps log exists verifying chain length log thatis completely contained union corresponding individual time stamps stamping protocol logarithmic time 
prove assumptions individual time stamp subset size time stamp proportional size holds transitive closure coincides natural order time stamp consists tail head 
theorem 
binary relation satisfying 
exist function 
log 
exists chain mk mi number time stamps necessary examine veri cation protocol greater 

log constant 
proof 
assume exists su ciently large positive integer 
dc log 
intervals log ic log log intersect 
log 
case dm log set contains chain exist chain 
log set nonempty 
set log log log elements 
contradiction condition 
ut thm 
straightforwardly generalized claim number examined time stamps greater xed constant 
stuart haber patience help totally unreadable 
grateful philip hawkes anonymous referees valuable remarks 
reasoning time stamping procedures creates need formal apparatus capable prove security time stamping protocols way similar ban style logics ban reasoning ordinary authentication protocols 
protocols technical specications need elaborated 
ban michael burrows mart abadi roger needham 
logic authentication 
src research reports dec system research center february 
bdm josh benaloh michael de mare 
cient broadcast time stamping 
technical report clarkson university department mathematics computer science august 
dave bayer stuart haber scott stornetta 
improving ciency reliability digital time stamping 
sequences methods communication security computer science pages 
springer verlag 
haw stephen hawking 
brief history time big bang black holes 
bantam books april 
hs stuart haber scott stornetta 
time stamp digital document 
journal cryptology 
hs stuart haber scott stornetta 
secure names bit strings 
proceedings th acm conference computer communications security pages april 
jus mike just 
timestamping protocol failures 
internet society symposium network distributed system security 
available www scs carleton ca just 
mov alfred menezes paul van oorschot scott vanstone 
handbook applied cryptography 
crc press 
mq henry jean jacques quisquater 
time cryptography 
technical report universite catholique de louvain march 
technical report wp 
proof theorem prove upper bound length verifying chain linking scheme described sect 

ek ek number vertex tk 
simplify proof add vertex scheme link vertices outgoing links 
exactly vertices ek 
denote length shortest path equations ek ek ek ek ek ek follow immediately de nition 
lemma 
ek ek ek 
ek ek ek ek ek 
claims follow immediately structural properties linking scheme 
lemma 
ek ek ek ek 
proof 
follows construction tk copies tk 
vertices second copy vertex rst copy ek ek vertices rst copy tk vertex 
ut lemma 
ek proof 
induction base 
step 
observe cases ek induction assumption gives ek ek ek ek ek lemma 
observe cases ek 
ek ek ek 
ek induction assumption 
ut lemma 
ek ek 
proof 
induction base 
ek 
step 
observe cases ek ek ek ek ek induction assumption 
ek ek observe cases ek 
ek 
ek 
ek ek ek ek ek ek lemma 
induction assumption gives ek ek ek 
ut proof theorem 
induction base 
case directly verify 
step 
observe cases ek induction assumption gives 
ek ek ek ek ek lemma 
cases possible ek 
ek 
ek 
ek 
ek 
lemmas give ek ek 

ek ek observe cases ek 
ek lemma 
ek 
ek ek lemma induction assumption 
ut dlog ek ek get dlog dlog 
