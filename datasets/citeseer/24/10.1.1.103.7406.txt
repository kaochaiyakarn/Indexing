
fisheye view new look structured files furnas bell laboratories murray hill new jersey people come computers working larger complicated data bases rapidly increasing interface problem 
essential difficulty size structures computers grows windows look structures remain small 
windows limited technology terminal screens human visual processing capacity examine small part external world 
interface design problem amounts deciding parts large structure show 
proposes large class possible solutions problem 
particular formal statement general class subsequent prototype program implements version general model 
case large file wants program text edited 
current techniques generally involve simple flat window view showing consecutive lines file mechanism scrolling 
arrangement small local piece structure shown person control moving locality structure 
problem method meaning importance local information derives position larger context 
important stay oriented understand global picture locality fits 
purely local views provided standard flat windowing support 
various partial solutions problem exist 
simple line numbering 
way relative absolute linear position file known part local view 
related method text viewers bsd unix command screen editors emacs show indication proportion way file current view aids important keeping track provide minimal information 
reveal global structure file current view fits 
sophisticated solution number occasions early knowledge augmentation workshop analog zoom lens 
files structures correspond different levels detail resolution solution allow user flip different views different levels 
way start global low detail view zoom selectively different local regions 
allows user point step back zooming see part global structure local area involved 
zoom system local global information available 
integration information take place human memory 
remain difficulties keeping oriented particularly zooming facility fast user adept 
regard attractive approach offer simultaneous windows detail view zoomed higher level view 
implemented number bitmapped graphics environments smalltalk lisp machines approach problems basically understanding correspondences views 
small view fit big picture visible features correspond 
different proposal offered 
analog zoom lens propose analog fisheye lens 
wide angle fisheye lens close distance shows things near center view high magnification detail 
time shows structure decreasing magnification detail gets away center view 
motivations approach 
typical reason people examine structure interested particular detail 
time need context sense global structure structure current focus resides 
idea detailed local regions selected important parts global structure 
reason think view possible 
certainly sorts structures support large number familiar ones notably hierarchical structures structured programs file structures manuscript chapter headings menu access systems biological taxonomies myriad familiar contexts 
psychological feasibility remains explored suggestive evidence 
example studies editing patterns shown likelihood person look jump region falls gradually far away seen light idea match display information behavior pattern people limited viewing capacity give access nearby parts easily showing full detail gradually detail global structure points away 
principal purpose explore aspects fisheye concept 
general formulation followed different special case examples including fisheye views general graph structures euclidean space 
case fully definition fisheye hierarchical tree structures culminating detailed discussion common subcase hierarchically organized sequential files including structured program code text outlines file hierarchy listings headings papers 
number interesting properties fisheye structures definitions pointed way indicate entailments new concepts particularly implications utility fisheye views efficiency algorithms 

general formulation doi functions section formal conception general fisheye lens 
defining called degree interest doi function file structure 
idea interaction users equally interested parts file 
interest may thought define function file telling part file say line text file interested seeing line current purposes 
general interface strategy show parts file greatest interest 
unix tm environment number programs considered degree interest filters 
grep command example takes file filters printing lines file certain interesting property user lines containing substrings matching user target string 
tail example portion file interest 
basically filters ways cut unwanted information displaying parts determined sufficiently interesting basis certain structural patterns 

late early doug knowledge augmentation workshop sri working ways viewing hierarchically structured text 
see nelson 
included zooming mentioned ways move structure expanding various parts tree 
mechanism easily implement fisheye view 
point suggest case special interest formal generalizable 
tm unix trademark bell laboratories importance talking doi function force user centered perspective 
asks designer project program output back head user way may encourage examination assumptions underlying interaction 
example standard flat window view may seen doi filter 
implicit doi function says lines half screen width current line sufficient interest rest 
doi function simplistic best 
replace naive assumption wish decompose degree interest function psychologically motivated way particular priori posteriori components 
fisheye components priori component meant contribution interest largely transcends particulars interaction structure 
instantiated various notions global structural importance 
major critical particularly informative pieces presumed greater priori interest parts considered finer details 
variable naturally manipulated zoom lens treatment 
zoomed views show major critical features zoom see details 
posteriori component contribution determining parts interest specifically depends current interaction 
fisheye view elaborated approximated simple model 
model interaction structure moment assumed focused point structure constraint bit 
interaction specific component interest modeled simply distance point 
assumption approximation equal distant parts structure interest close neighbors 
clearly interaction shifts point focus component shifts correspondingly 
fisheye requires structure properties sensibly defined 
focal point 
distance focus 
level detail importance resolution lod requires structure precisely interaction structure notion current point focal interest represented called focal point just focus 
second notion distance point focus place structure 
may simple linear distance file sophisticated structurally defined distance 
thirdly defined notion level detail lod point structure 
measure intrinsic importance particularly global structure notion high versus low resolution degree detail feature generality level detail generally associated negative numbers conventions increase detail decrease generality associated larger negative number lod means 
assumed distance focal point zero distances positive distance need true metric 
symmetry triangle inequality critical 
general level successively detailed 
note definitions assume units certain granularity refer structure 
purposes discussion example sequentially organized files units discourse lines file 
refers current line refers distance suitable sense line lod refers level detail inherent line fisheye definition components allow define doi function associated fisheye view follows 
adopting convention larger numbers mean higher interest define degree interest function line current point doi lod monotone increasing argument decreasing second 
interest increases global importance decreases distance focus 
important class examples doi lod monotonically increasing 
doi difference level detail distance point positive monotone rescaling quantities 
global interest assumed decrease detail gets finer distance current focus increases 
interest assumed greatest gross features things nearby 
create fish eye view display degree interest just defined threshold 
fisheye defined tree structures example clearer 
consider construction fisheye tree structures 
underlying fisheye construction properties defining tree distance points number links intervening path connecting tree 
natural definition necessary fisheye components 
focal point node current interest tree 
distance focus 
way quantities defined doi usually negative case negative 

level detail importance resolution root tree 
lod distance point simply structural tree distance level detail increases distance root 
definition doi function doi lod 
doi node merely negative sum distances root focal point 
get fish eye view simply apply threshold showing node doi greater equal illustrates construction fisheye degree interest function 
nodes labeled distance indicated point focus distance root 
shows sum numbers corresponding nodes 
result diagram doi function 
fisheye doi function just defined number interesting properties 
important utility fisheye efficient implementation simply offering alternate perspectives fisheye 
spirit enriching fisheye indulge 
notice general doi induces family fisheye views choice threshold case tree structure doi choice yields view consists current node direct ancestors 
call zero order fisheye view 
possible choice threshold yields called order fisheye view immediate direct ancestors included 
define second order fisheye threshold grandchildren ancestors included 
note sort compression fisheye views provide 
illustrate consider complete level tree branching factor node 
tree nodes level counting top bottom 
tree nodes 
sum order fisheye view order shows root plus node level nodes 
order fisheye shows root nodes level total mb nodes 
general order fisheye shows order nodes 
fisheye essentially logarithmic compressor changing displayed structure size exponential depth tree linear depth 
linear coefficient means fisheye view exponential fisheye order polynomial branching factor 
important feature depth branching factor tree may control discretionary designer viewer control making substantial compression possible 
dependence branching factor important 
implies trees fixed total size fisheye considerably effective compressor trees large branching factors 
certain abbreviation schemes structures large branching factors 
essentially equivalently ancestors siblings 
discussed briefly 
interesting point involves form called iso interest contours points tree share hypothetical level interest doi value 
algebraically defined trees contour locus points sum distances points focus root constant 
analog definition ellipse euclidean plane 
iso interest contours tree analogs family confocal tree ellipses 
easy see contours convex strictly nested observation algorithmic implications discussed 
iso interest contours may pictured simple way possible insensitivity tree distances graphical layout 
imagine tree rigid rods loose joints nodes 
imagine picking tree root node current focus stretching tree taut 
leave remaining nodes straightened path connecting root focus 
form successive doi contours lined horizontally descending direct path connecting root focus 
displaying structure kth level corresponds order fisheye view top level called 
examples tree fisheye hierarchically structured sequential files section consider fisheye view just defined tree structures applied instance hierarchically structured sequential files 
specific case subsequently generalize broader class examples 
indent structured files structured programs outlines examples hierarchical tree structure file manifest pattern indent text 
category fall text outlines structure indicated roman numerals digits programs written structured languages algol pascal files increasing degree indent typically indicates detailed parts structure parts greater distance root 
typically files just topological trees canonical ordering branches incident node 
outline precedes ii iii programs ordering statements difference 
structures usually displayed depth traversal canonical ordering dictating sequence siblings 
substructure selected fisheye view displayed consistently ordering simply rule applied fisheye view subtree 
example result follows 
presents views outline 
shown view shown usual flat window centered line corresponds part 
point notice lot detail shown hard tell looking view just fits big picture 
shows corresponding order fisheye view centered line 
immediately clear section outline examined 
outline shown 
order fit page print small read clearly aids comparison preceding views 
box indicates lines seen flat window 
underlined lines represent order fisheye shows 
note local region focal line shown full detail adjacent information edge flat view missing fisheye 
replaced global contextual information case corresponding higher level headings outline 

analogy euclidean conic sections interest footnote application euclidean space 

course explains parity numbers odd example 
node integer number links main path integer number links added twice distance term root focus preserving parity 
fisheye ends showing current nearby neighborhood complete indented detail just standard viewing window spans file showing successively higher level information remote parts file 
hope view keeps just parts greatest user interest 
discarding detailed parts tree structure achieves substantial compression retains skeleton global structure file 
note standard flat window approach degenerate version fisheye equal importance lod distance just number intervening lines 
threshold set window 
parts displayed full detail half window distance centering point window edge window detail shown 
file flat structure structure semantic importance belief structurally defined fisheye functions accommodate role structure determining interest 
lod distance structure connectivity patterns tree 
result discard information physically adjacent structurally related favor physically remote structurally important things 
indent level sorts files 
presents example program code 
short calculator program rpn integer addition subtraction modulo single flat window view shows lots detail useful working indicated line arithmetic details previous case top picture example little orienting information available 
hand fisheye view seen shows programmer short loop case switch cases default 
switch block indicated statement loop program main conjectured able see focus contextual information programmers working structured code 
box shows standard window view underlining shows fisheye trades window space remote higher level information 
number domains shown indent structuring including biological taxonomies kingdom phylum class order decision trees classification keys simple compound leaf organizational hierarchies btl organizational phone book 
fisheye sketched suitable 
count simple generalization indent structure indent familiar way indicate hierarchical structure contiguously organized file common 
points sub points heading numbers section 
wide writing styles legal code books available document formatting macro packages 
hierarchical structure unix file system indicated way 
unix organizes files tree nested directories subdirectories 
hierarchical structure indicated slashes 
usr fisheye refers file fisheye directory subdirectory usr 
note unix pwd command printing full path name current directory gives complete ancestral lineage amounts fisheye view order 
cases notation unix file structure listings level detail indicated counting initial portion associated line 
amount white space character gives indent level number decimal points space gives heading level number slashes line gives directory level 
fisheye facility easily embrace domains count strategy allowing users specify 
terry gleason written reader programs implement order fisheye view text headings produced unix memorandum macro package 
character count occurrence field separating character 
examples tree fisheye hierarchical structures focus previous examples hierarchies implicitly represented contiguous files 
file structures truly hierarchical 
linked trees archetypical example 
fisheye purest tree formulation section immediately applied tree structures 
interesting menu retrieval systems 
systems alternatives menu choice lead choices 
screen thought node choices arcs nodes 
typically menus arranged tree structures users descend tree searching information services 
menu driven retrieval systems novice users system user need know system capabilities ahead time 
problem noted menu systems people get lost lose track structure especially large suggestion give people list indicate parent current node 
representing structure fisheye allowing link traversal amount menu access global orienting information available 
reitman fact implemented essentially just system 

fisheye views types structures graph structures graphs trees class structures support fisheye view 
cases allow measure distance level detail 
general graph distance may difficult define may path connecting points choices justified shortest path length vs resistor network equivalent path length vs transition network equivalent path level detail presents serious problem 
nodes arcs representable varying levels importance detail 
example case nodes may varying importance simple generalization conceptual hierarchy known artificial intelligence literature isa network 
nodes categories concepts links hierarchical essentially set containment relations 
directed graph dog isa mammal vice versa cycles superordinate 
structure nodes higher hierarchy general nodes near root tree 
fisheye defined structure 
connectivity roads map represent example nodes arcs varying importance 
fisheye view show cities roads near focal point increasingly larger cities substantial roads distant points 
rule says display say 
example distant regions shown scale map uncluttered useful way view may remain large 
reduction actual view size problem spatial distance graph connectivity 
problems fisheye view space dealt section 

discussion graphs issues maintaining connectivity edges deleted view 
problems dealt 
fisheye views euclidean space fisheye views examining dimensional structures euclidean space special challenges 
notion distance may readily available euclidean distance level detail 
certain features structure may vary importance road cities case mentioned previous section structure think 
returning zoom lens analogy recall level detail variable manipulated zoom lens 
case spatial structure typically correspond change scale 
global view small map entire region detail view expanded version smaller region 
ways scale parameter lod fisheye view net result general flexible essentially return original wide angle lens optical analog began 
deserves comments 
important non geometric transformation introduces shape distortions 
dimensional case relative length distortion may fairly innocuous essential view fairly easy compensate mentally 
higher dimensional cases distortion shape complicated 
familiar barrel distortion wide angle lenses severe close range difference magnification center edges large 
straight lines passing center remain straight straight lines curved angles distorted shapes transformed way varies size radius center 
humans adjust view open question doubt depends degree task requires complicated shape matching 
truck drivers fisheye mirrors adjuncts usual mirrors 
presumably gives wider view world task detect large approaching object distortion relatively unimportant 

comments algorithms general fisheye algorithm special character structure viewed particulars distance level detail functions 
simply start focus move away directions 
distance algorithm display point level detail caused computed degree interest sufficiently high 
algorithm usual advantages disadvantages associated generality 
allow arbitrary ad hoc definitions distance detail functions inefficient useful cases require complete scan structure evaluation doi point 
inefficiencies substantial 
fisheye function defined earlier sections trees provides useful examples large savings possible 

way spatial fisheye break detailed view tiny picture elements pixels 
assign level detail jth pixel cell gets assigned multiple lod highest 
implement fisheye get rid pixels meet threshold criterion effectively requiring higher radius center increases 
keeps fewer pixels distance increases focal point 
specifies elements shown achieving reduction information view size 
view size compression possible drawing remaining cells radially center densely 
pixels small result mimic wide angle lens view different shapes fisheye functions possible 
approach layer different scale views pyramid magnified view bottom smaller ones stacked top 
case distance apex pyramid level detail quite analogously tree case 
fisheye doi functions cut curved surfaces pyramid sweeping low near center focus rising back apex away center 
simplest version additive combination function tree case define doi terms sum distances points focal point special point root tree apex pyramid distance gives lod 
result elliptical iso doi surfaces 
difference tree case 
want display points precisely threshold 
chosen doi surface projected parallel altitude pyramid yield presentable flat form view 
convexity monotone algorithm trees seen earlier figures application order fisheye criterion indented text version ordered tree consistent visual form 
center focus text indent regresses monotonically margin 
regression weakly monotone strictly monotone order fisheye 
signifies greater distance focus 
greater distance fisheye concept prohibits showing detail 
monotonicity observation leads simple algorithm implementing fisheye files line current focus move away directions file showing lines require level greater previously displayed line 
general analysis monotone algorithm tree order fisheye function instructive 
efficiency derives fact doi need evaluated classes nodes 
descendents nodes level higher focus dismissed individual consideration 
implementation terms pointers sibling sibling automatically provide skipping descendents making efficient algorithm 
general principle algorithm notion convexity 
term convexity applied sets certain minimal kind structure notion shortest path connecting pairs points 
euclidean space path usual straight line points tree connecting path tree 
subset said convex shortest paths members subset contain members subset 
describe general convexity condition 
subset points view subset doi threshold convex classes points dismissed simply examining neighborhood boundary 
reasoning goes 
take point boundary move neighbor direction 
neighbor doi boundary included 
hand doi outside region convexity guarantees points shortest path goes original boundary point neighbor subset interest points paths dismissed 
doi greater convexity guarantees points shortest paths direction subset interest boundary point 
result tremendous reduction search 
systematic ways generate boundaries neighbors paths sibling descendent lists efficient algorithm results 
doi contours defined tree convex thresholds preceding analysis applies 
node view descendant remote descendants violation convexity 
linked tree structure take maximal advantage 
implication generalization variation monotone strategy applied general order trees 
general algorithm proceed point focus margin stringent requiring monotonic progress 
particular fisheye view tolerate departures levels detail strict monotone decrease lod 
incremental changes interactive savings possible cases owing fact fisheye view may need change focus moved nearby points 
distance functions true metrics parts structure far away point far point ifx close 
result fisheye doi function change remote places 
tree doi functions provide particularly nice example 
point best returning dangling tree rendition tree doi function see 
consider view changes point focus moved new node 
old new versions path root respective top rest dangling 
dangling representations differ paths root differ 
divergence begins lowest common ancestor old new 
corresponding doi functions differ common ancestor 
observation leads efficient algorithm interactive fisheye view generation view need recomputed lowest common ancestor 
note implies doi recomputation cost smaller behaviorally frequent 
motions nearby locations 
hierarchically structured contiguous file structure complete regular tree movement cost logarithmically related number intervening lines file opposed linearly related scrolling flat window 

issues returning primary consideration case trees issues discuss fisheye 
problem mentioned section size structure branching factor large compression achieved view quickly gets large see easily 
believed branches level equal interest consider pruning branches decreasing effective branching factor 
number ways 
simply get rid unwanted branches ad hoc rule aimed sort abbreviation ellipsis 
principled approaches possible example varied interest branches conceived fisheye way 
suppose subset siblings considered greater priori importance say natural ordering 
siblings special interest virtue close center focus aposteriori component 
putting get fisheye view ordered list siblings lod increases ends middle sibling order distance absolute separation focus ordering 
throw right focus 
pruning implemented second fisheye filter working output incorporated directly original fisheye functions 
second issue concerns possibility multiple simultaneous 
times wishes examine detail place time comparisons look distant part referenced current location 
restriction single focus force viewing done alternation 
having detailed regions available time useful require fisheye 
focus fisheye view fisheye analog flat windows viewing different parts file 
handled directly redefining fisheye encompass 
nearly equivalent formulation redefine distance function dynamically defined fiat distance apart shortcut bridge 
distance shortest path distance rest fisheye conception remains intact 
related notion automatic fisheye certain purposes assumed secondary automatically interest 
example editing computer program lines variable declared interest time examining line variable referenced 
implementing scheme amount dramatically redefining distance function 
original tree structure distances augmented cross links sort graph distance 
viewer probably special purpose useful 
challenge set system easily arbitrarily configured user efficient 

concluding remarks summary introduced fisheye lens way display large structures distance level detail defined 
general motivation give people view structure includes parts interested seeing 
conjecture offered interest usefully decomposed components general priori intrinsic importance parts structure second component dependent specific needs current examination structure simple notion distance current point focus 
combination hoped provide useful compromise showing detail place central focus global structure maintain context 
humans contexts remains seen 
implemented interactive version fisheye facility order fisheye count class structured contiguous files discussed section explore fisheye help people find things familiar unfamiliar text help learning textual material 
program described detail 

arias furnas fisheye program implementing fisheye viewing hierarchically structured files 
internal memorandum bell laboratories october 

unix programmer manual unix user manual bsd computer sciences division department electrical engineering computer science university california berkeley ca 
june 

montgomery interactive screen editor unix 
btl tm 

english research center augmenting human intellect 
afips conference proceedings vol 
sri arc catalog item 

smalltalk environment byte pp 


weinreb moon lisp machine manual fourth edition mit artificial intelligence laboratory cambridge mass 

allen patterns manuscript revisions behaviour information technology pp 

nelson computer lib chicago hugo book source 

gleason reader program assist reading documents terminals 
internal memorandum bell laboratories april 

robertson mccracken newell approach man machine communication department computer science technical report cmu cs carnegie mellon university pittsburgh pa october 

reitman general user interface creating displaying tree structures hierarchies decision trees nested menus 
vassiliou ed proceedings nyu symposium user interfaces ablex publishers press 
fisheye view new look structured files furnas bell laboratories murray hill new jersey introduces new way generate small display large structure analogy wide angle fisheye lens 
hypothesized useful parts show interesting subset large structure approximated contribution components 
component independent particulars current interaction reflecting parts structure priori global importance 
second meant capture contribution specific current focus interaction approximated simple distance current focus distant parts intrinsically interesting current interaction 
considering contributions fisheye view represents effort balance abbreviated view structure need local detail need global context showing full detail immediate neighborhood place current focus requiring increasing priori importance distance focus increases 
introduces fisheye views way general definitions presents special cases notably fisheye treatment hierarchical tree structures 
important subcase considered length hierarchically structured sequential files examples include structured programs unix tm file structure listings text heading outlines 
various properties fisheye views mentioned including logarithmic compression provide 
ways conceptualize fisheye views discussed number structures 
bell laboratories technical memorandum october tm unix trademark bell laboratories point lod root doi lod 
cons ion fi sheye degree doi funct ion 
tree doi root root focus focus root focus root focus 
horizontal iso doi contour formed pi tree focus root compress ion user cont rol iii 
branching factor critical doi contour ing ree shows ine doi contour changing foc common ances tor examples fisheye tree structured fi les 
indent structured fi les structured programs ines ex amp og ams ou usual ly ordered fisheye compat ible specific example ine figures outline regular fisheye views adjacent info missing informa ion comment window view degenerate fisheye specific example program code figures program regular fisheye views wh wha wha indent tures biol axon 
org 
hi 

count simple generalization indent structure ot imi uc addition indent 
standard flat window view ine thi line numbers lef margin 
marks current line 
th sheye ew ew fi 
general 
sheye def ned tree structures lying fi sheye cons ion proper es examples fisheye tree structured fi les 
indent structured fi les structured programs ines ex amp og ams ou usual ly ordered fisheye compat ible specific example ine ine ar fish vi adjacent info missing informa ion comment window view degenerate fisheye specific example program code indent structures biol 
taxon org 


count simple generalization indent structure 
examples tree fisheye hierarchical structures 
sheye types structures 
comments thms 

ng remarks summary fisheye view ine thi line numbers left margin 
indicates missing ines cur rent ine 

em sma wi wo sma need context 
partial solutions ne zoom ens mu wi fi sheye ens fi sheye lens det focus gl cont ext ual 
feasibility cons ra nt ures ma ncl udi ng rees psychol ogi ca emi ca que pat rns edi ng rba engl wo rk 
degree int res doi funct ons int ro interested seeing part structure general st show interest ing unix 
major point project view back interest subjects head anda rd wi app oa de doi di ance det re qui res focal point distance focus eve de ance lod 
ng gn ons fi sheye doi lod mono nc ea ng fir dec ng second ass doi lod re oni ca ng 
get vi ew appl 
ion 


ons poi nt re nodes ree define pa rom poi nt node cur rent nt res ree di tance rom focus eve de ance lod fi sheye doi func doi 
ion 
apply threshold 
figures illustrate doi tree fi gur ng hi uf int res ng poi nt comp comp cont rol iii 
branching factor critical doi cont re ng ree gu dang ne doi con ou owe 










fi gures program fisheye vi wha wha wha 







ot imi uc indent poi nt nt ngs unix file st ion form count occur re occurrence re ii 
viewed single facility 
rees menu retrieval systems hey re fisheye vi ew iii 
reitman 
ot gr st ures 
need distance graph distances level de sa ces road maps fi sheye vi eucl dean space lod sca change foot fisheye wi pi footnote fisheye wi th pyramids layers maps non bar re di 

ge hm st move ou twa 
evaluate doi show meet criterion sa ent mono go hm 
tree case inst ive gor hm di smi ss branches cons dera 
concept nd defini res shor es pat subse convex poi nt shor es pat connec ng iv 
subset impl es need onl cons der nea boundary expl impl es order gor hm 
foot genera doi condi increment changes ot shor cut nt rac onl par wi change 
ree change common 
ng branches 
large branching factor means compression sol ut ad hoc hack sol ut fisheye mot vat bi ngs hi nt res fi lod closer current point ler define doi fi sheye bl ngs hi way impl ement pos fil ii 
original function mul pl foc fo nc ana og wi redefine fisheye concept mul pl foci ter di tance funct ion foci di apar 
associated idea automatic multiple variable ts ion show bot aut ca implement wi th looser graph graph distance 

genera mot vat purpose show need see de gl pr 
local task specific ac ams emp wo ow ful view ine thi box shows lines flat view 
underlines show lines fisheye view 
break case break case exi default int break int printf st fla window vi ew program 
line numbers left margin 
signals current line 
define dig include stdio main int dig dig dig getchar eof swi ch case case case break case default int int 
fisheye view program 
line numbers left margin 
indicates missing lines 
cur rent ine 

break break exi int break 
printf printf putchar 
ful view program 
box shows ines flat view 
ines show ines fisheye view 
