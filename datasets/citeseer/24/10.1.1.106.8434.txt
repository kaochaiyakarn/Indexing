multi agent planning planning coordination de ter dept software technology delft university technology mail witt tudelft nl day day situations involve decision making example taxi transportation tasks carried large firm distribute lot complicated tasks subdivisions air traffic controller assign time slots planes landing 
intelligent agents aid decision making process 
agents classified categories techniques employ decision making reactive agents cf 
ferber drogoul base decision solely current sensory input planning agents hand take account anticipated developments instance result actions decide favourable course action 
agent plan reactive depends particular situation finds 
consider example agent plan route place 
reactive agent compass plot course planning agent consult map 
clearly planning agent come shortest route cases won confounded rivers way streets city layouts 
hand situations reactive agent equally effective instance maps consult instance domain mars exploration rovers 
ability plan ahead invaluable domains focus planning agents 
general structure planning problem easy explain relevant part world certain state managers directors state 
problem get current state world sequence actions desired goal state planning problem 
ideally solve planning problems general planning problem solver 
algorithm solving planning problems proven non existing 
start concentrate simplification general planning problem called classical planning problem 
realistic problems modeled classical planning problem help solve general planning problem undecidable 
complex problems 
give overview planning techniques classical planning problem techniques extensions problem 
please skip section familiar ai planning 
ai planning briefly discuss coordination multi agent context introduce way organize current multi agent planning defining phases multi agent planning process section 
describe multi agent planning techniques detail conclude outlook open issues field 
ai planning section give overview ai planning techniques 
come surprise ai planning techniques techniques search plan forward planning planning technique building plan starting initial state backward planning starts goal states commitment planning constructs plans adding actions non sequential order 
discuss advanced heuristics guide search quite useful general classical planning problem hard see theorem 
discuss extensions classical planning problem dealing uncertainty time limited resources fuel capacity money 
classical planning problem classical planning problem defined follows weld description known part initial state world formal language usually propositional logic denoted description goal set goal states denoted description possible atomic actions performed modeled state transformation functions determine plan sequence actions transforms states fitting initial configuration world goal states 
formal language strips fikes nilsson common classical planning frameworks 
language definition formally define classical planning problem 
example 
suppose initially states world match description taxi location represented binary state variable taxi passenger location represented 
states described passenger location denoted 
furthermore suppose actions transform part state world 
unload move load move key action set initial states set goal states sequence actions plan leading initial states goal states 
taxi move location move 
action requires priori taxi holds ensures resulting state taxi taxi hold 

passenger get taxi load 
action requires priori taxi resulting state taxi hold 

passenger get taxi unload 
action requires taxi taxi results taxi 
plan represents solution problem shown 

note possible desirable completely describe state world changes 
assumption explicitly changed action remains unchanged deal frame problem raphael 
consequently describe frame state world relevant literals 
set literals called state specification 
assumption difference state state specification irrelevant 
state state specification meant 
strips stanford research institute problem solver fikes nilsson states described binary state variables called propositions 
actions operators specified conditions propositions called preconditions ii propositions changed true new state called add effects iii propositions changed false called delete effects 
furthermore goals described conditions propositions 
propositional strips planning language formalized complexity problems specified language analyzed lifschitz 
formal treatment analysis strips planning instances performed nebel 
formally specify propositional planning formalism need concepts notations 
set propositional atoms literal element negation set literals including bottom denote false top denote true denoted 
set literals define set literals 
set formulas denoted prop defined follows prop prop prop 
definition 
nebel operator defined precondition pre effect post denoted pre post pre set propositional atoms post set literals 
notation pre post denote precondition effect operator respectively 
propositional atoms precondition operator true state operator applied 
set operators domain 
definition 
nebel application app operator action state specification defined post post pre app post negations literals effect clause removed literals added state definition define result res applying sequence operators state definition 
result res applying sequence operators 
state specification see recursively defined res res 
res app 
nebel defines planning problem propositional strips follows 
definition 
nebel planning problem propositional strips formalism tuple standard propositional entailment 
countably infinite set propositional atoms called facts fluents set possible operators describe state changes domain initial state goal specification set propositions satisfied 
definition 
sequence operators 
called solution plan planning instance iff res res 
propositional strips formalism denoted requires complete state specifications unconditional effects propositional atoms formulas precondition list 
formalism extended various ways state specifications may incomplete si ii effects conditional sc iii formulas preconditions effect conditions literals sl iv formulas preconditions effect conditions arbitrary boolean formulas prop sb 
theorem 
nebel complexity planning 
problem deciding plan exists instance plan existence problem pspace complete specifications propositional strips formalism combinations extensions language si sc sl sb described 
result nebel turn relies proof bylander 
idea proof follows 
plan existence pspace state described propositions states 
plan conceived sequence states ii maximal plan length needed transform initial state goals state iii existence plan length transforming state state decided algorithm uses log polynomial space intermediate state decide plan existence recursively 
state requires space depth recursion algorithm log log algorithm clearly runs polynomial space 
hardness plan existence bylander proof fact pspace problem translated planning problem 
nebel analyzes instances different extensions planning problem translated 
shows graph specialization relations combinations problem extensions indicated combinations subscripts arrow allow literals extension sb allow arbitrary boolean formulas means planning problem specified sl translated problem sb polynomial time plan size increases linearly size input 
apart specialization relationship extensions strips formalism nebel interesting results incomplete state specifications literals preconditions compiled basic strips formalism plan size word iff short hand 
sc slic sbc sbi sic slc sli sb specialization relationships planning formalisms syntactic restrictions nebel 
preserved ii incomplete state specifications literals preconditions effect conditions compiled basic strips formalism conditional effects preserving plan size exactly iii compilation schemes preserving plan size linearly implied specialization relationship results ii 
exist different approaches solve classical planning problem strips formalism extensions 
discuss approaches multi agent setting 
prepare discussion section briefly discuss relevant approaches describe variants general method refinement set possible plans 
generalization kambhampati 
refinement planning search sequence actions plan get initial state goal state seen refinement set possible sequences kambhampati 
describe existing classical planning algorithms unifying view planning 
unifying concept representing set candidate sequences called partial plan 
partial plan describe set partial solutions 
planning algorithms defining partial plan modified partial solutions represented partial plan complete feasible solutions 
si sl definition 
kambhampati syntax partial plan usually denoted pi planning problem directed acyclic graph ip set nodes representing application actions set directed edges representing required precedences actions ip kinds auxiliary constraints ip prop set interval preservation constraints specifying formula hold certain interval actions 
currently instantiations constraints called causal links 
causal link oi oj specifies precondition action effect oi may undone oi oj 
prop set point truth constraints specifying formula hold certain point action 
current planners constraints specify open preconditions actions 
semantics partial plan set action sequences contain actions represented nodes ii fulfill precedence constraints implied directed edges furthermore action sequences satisfy iii interval preservation constraints ip iv point truth constraints action sequences called candidate plans sequences partial plan pi denoted candidates pi 
ip especially useful plans constructed bottom top 
actions added particular order stored particular action added meet precondition subsequent action importantly prevented action undoes required result 
kind information stored interval preservation constraints 
point truth constraints specify preconditions satisfied 
indicate point plan need fulfilled 
algorithms intermediate results represented partial plan 
think terms sets partial plans 
define candidate plans set partial plans candidates pi candidates pi 
subset candidates represented partial plan pi called component 
minimal candidates candidates contain actions included partial plan represented 
partial plan need define plan sequence candidates represented partial plan 
sequence called safe linearization 
definition 
kambhampati sequence 
called safe linearization partial plan pi ip exists bijective function represents application operator causal links commitment planners weld 
planners briefly discussed section 
taxi ptc unload move load load key taxi move action ipc interval preservation constraint ip point truth constraint precedence relation partial plan describing candidates contain actions order precedence relation matching interval preservation constraints point truth constraints 
path ipc oi oj res 
oi res 
oj ptc res 

example 
taxi take passengers location location initially taxi passengers location partial plan describes set candidate plans additional refinements addition load actions unload action depicted 
refinements candidates correct sequence actions initial state desired goal states hold 
planner reduce set candidate plans represented set partial plans adding actions ii adding precedences actions iii adding auxiliary constraints partial plans 
technique find suitable refinements called refinement strategy denoted proposition 
kambhampati refinement 
refinement strategy refines reduces set candidate plans represented set partial plans candidates candidates 
evaluate effectiveness strategies refining set candidate plans look specific properties 
example important know strategy preserves possible solutions complete 
definition 
refinement strategy find set solutions called 
progressive iff candidates candidates set partial plans 
complete iff solutions candidates solutions candidates 
systematic iff set candidates pi pi partition candidates 
planning algorithms implemented different ways rewritten alternative uniform way theory refining set potential solutions kambhampati 
structure common algorithm 
algorithm describes solution result obtained set partial plans time function refine executed minimal candidates solution refinement strategy selected applied partial plans repeatedly element resulting set selected function refine called recursively element 
solution process stops result returned 
algorithm 
refine input partial plan problem 
output minimal candidate solution fail 

minimal candidate solution 
return 

result fail 
select refinement strategy 

result fail 
non deterministically select element pi 
pi 
result refine pi 
return result example 
planning algorithm fast forward ff hoffmann nebel starts initial state empty sequence actions plan 
repeatedly sequence extended actions adding sequence 
possible extensions sequence action actions heuristic value calculated 
possible extensions leads state lower heuristic value current state chosen 
heuristic uses relaxation subsequent action negative effects 
assumption called relaxed plan constructed actions satisfied preconditions added parallel 
relaxed plan constructed goal state reached 
heuristic value cost actions relaxed plan needed reach goal state 
ff refinement framework fact form refinement planning refinement strategy rff step algorithm 
partial plan represents set possible solutions new partial plan constructed extending partial plan 
extension selected heuristic described 
see algorithm 
note particular refinement strategy uses singleton set partial plans represent set candidates 
algorithm 
rff input singleton set partial plans output singleton set partial plans lead state lower heuristic cost 

heuristic costs current state 
action sequence minimal candidate 


breadth select sequence actions extend 
heuristic value state 
return partial plan represents refinement strategies rff roughly divided categories 

progression forward planning methods construct partial plans bottom action executed selected added partial plan 
action selection mechanism varies usually heuristic determine action execute 
methods backtracking action selected removed partial plan 
planners complete find correct plans faster 
examples planners ff hoffmann nebel hsp bonet geffner prodigy veloso 

regression refinement methods called backward planning methods construct partial plans top starting description set states determine action reach state state presumably closer initial state shorter sequence actions needed reach state 
strips planner fikes nilsson planners technique 
ideas technique example heuristic progression refinement grt 
advantage progression regression refinement methods describe partial plan sequence actions description state reached search state space find action add need complex plan space representation 
state space representation easily see plan valid comparing final state plan requirements goal state comparing state plan initial state respectively 

third category commitment planning weld really needs complicated plan space representation partial plans refinement framework type planning refines plans extending prefix postfix plan adds constraints possible solutions ways 
category called partial order planning construction plan order actions plan partial order actions partial plan forward planning usually complete 
planners noah sacerdoti pop weld fit category 
approaches slightly different variant partial plan called disjunctive partial plan 
nodes disjunctive partial plan may consist actions 
semantics node exactly point actions executed 
example graphplan blum furst uses form disjunctive planning 
example 
graphplan algorithm consists phases 
planning graph constructed represents possible solutions reach goal state minimum amount planning steps 
solution extracted planning graph 
planning graph directed layered graph 
example graph shown 
graph types layers interleaved proposition layers action layers 
proposition layer consists nodes represent atom negation atom 
layer proposition layer representing initial state 
action layer contains node possible action 
nodes connected types arcs 
precondition arcs connect action atoms precondition previous layer 
add arcs connect action nodes layer representing atom direct consequence postcondition action delete arcs connect actions nodes representing atoms disabled action 
propositions reproduced layer socalled op actions 
action chosen delete effect proposition leads conflict 
mutual exclusions mutexes represented explicitly graphplan 
mutexes indicate action layer actions fulfilled time key action proposition pre postcondition arc op graphplan uses plan graph consisting proposition layers action layers 
layer 
find correct plan graphplan builds graph searching proposition layer implies goal state 
backwards goal state mutual exclusion relations verified 
impossible satisfy mutexes plan graph extended layer process repeated 
extended planning problems years extensions classical planning problem studied dealing time kambhampati penberthy weld smith weld costs utility maximization haddawy hanks limited resources koehler wolfman weld planning uncertainty boutilier 
extensions planning uncertainty relevant multiple agents acting environment 
domains introduce types uncertainty 
firstly actions probabilistic effects example moving location train know percent chance reaching destination time percent getting stuck percent chance getting involved accident 
outcomes actions partially observed plan constructed including sensing actions conditional branches 
problem called contingent planning 
leads second type uncertainty 
sensing actions may fail may able observe world completely 
unobservable partially observable fully observable domain versions problem exptime complete expspace complete respectively bernstein jonsson 
additional complexity propositional strips plan existence theorem comes uncertain results actions 
length plan exponential plan exponential number resulting states 
thirdly planning domain lack probability distribution possible outcomes non deterministic operator called non deterministic planning conformant planning 
conformant planning problem finding nondeterministic domain sequence actions achieve goal possible contingencies 
complexity conformant planning problem strictly higher classical planning jonsson 
theorem 
jonsson complexity conformant planning 
deciding existence conformant plan sequence problem unobservable propositional domain actions expspace complete 
multi agent system agents perform actions unexpectedly independently 
agent planning communicating coordinating agents agent solve sort nondeterministic planning problem 
theorem complexity analysis contingent planning show non determinism planning exptime hard 
conclude individual approach multi agent planning exptime hard 
corollary 
individual approach planning multi agent systems conformant contingent planning exptime hard 
communicating parts plans agents reduce domains remove uncertain effects actions 
approaches planning multi agent systems discussed remainder 
coordinated planning may wonder need study multi agent planning problems techniques separate topic 
multi agent case covered general discussions planning 
answer real life problems deal multiple agents having goals impractical undesirable create plan agents centrally 
agents may people companies simply demanding plan actions refusing information necessary planning available 
consequently agents want able plans independently agents planning 
compelling reason differentiate planning multi agent planning cases dependencies tasks agents independent planning impossible 
agents take account dependencies plans come conflict try execute plans 
resolve dependencies agents coordinate efforts 
multi agent literature definitions coordination 
concise clear definition malone crowston class expspace class decision problems solved amount space bounded polynomial input length 
known class exptime expspace contains problems intractable garey johnson theorem np 
coordination act managing interdependencies activities 
planning agent specific definition due jennings participation social situation simultaneously constraining agents contribution enriching participation provides resources opportunities unavailable 
coordination process agent reasons local actions anticipated actions agents try ensure community acts coherent manner key achieving objective 
clearly multi agent planning problem planning coordination component 
define multi agent planning problem follows definition 
multi agent planning problem problem description initial state set global goals set agents agent set capabilities private goals find plan agent achieves private goals plans coordinated global goals met 
summarizing statement perfectly captures concept multiagent planning multi agent planning planning coordination remainder section discuss nature coordination problem discuss various approaches combine planning coordination part 
coordination multi agent systems characterize multi agent coordination problems identify key characteristics 
nature dependencies necessitate coordination 
may wonder number common problems underlie coordination situation 
having identified nature coordination problem choose mechanism solve coordination problem 
ask exist general coordination mechanisms applied variety situations 
interested determining coordination mechanism best situation assuming choose number mechanisms 
third aspect applicability usability coordination mechanism 
multi agent system designer certain assumptions instance number agents system environment rate change environment environment agents operate 
need know factors determining applicability coordination mechanism 
jennings nwana state reasons necessitate coordination multi agent systems 
general nature directly refer characteristic interaction situation points refer characteristics interaction situation 

prevent anarchy chaos example state british telecom aware activities employees 
consequently agents local views bound lead conflicts coordination 

efficiency agents independently working means able solve problems faster 

meeting global constraints global budget limits agents agreements inadvertently exceed budget 

distributed information expertise resources task performed performed efficiently single agent 
required capabilities distributed agents coordination necessary 

dependencies agents actions instance different tasks may need resources may exist precedence relation tasks 
course categories orthogonal fact derivable fifth 
discussion known multi agent planning framework framework decker lesser summarize need coordination different point view 
jennings nwana state reasons coordination due characteristics interaction situation decker lesser state reasons coordination point view individual agent 
decker lesser definition coordination malone crowston 
coordination act managing interdependencies activities 
definition context decker lesser say coordination problem conditions met agent choice actions choice affects performance 
order activities carried affects performance 
time actions executed affects performance 
malone crowston summarize need coordination coordination definition manage interdependencies activities 
focus research finding general coordination mechanisms applied coordination situations different research disciplines 
research characterized questions raise fundamental coordination processes occur coordinated systems 
far get analyzing general coordination processes find important factors specific coordinating particular kind task 
example general heuristics coordination analogous general problem solving heuristics studied cognitive science artificial intelligence 
identify coordination processes occur domains coordinated goal selection decomposition coordinated resource allocation special case task assignment coordinated sequencing activity synchronizing activities time 
course list processes represent classes coordination mechanisms task assignment protocol goal decomposition algorithm 
durfee identifies factors influencing usability specific coordination mechanisms 
identifies factors determine far applicability specific coordination mechanisms reach concludes applicability coordination mechanism limits 
various coordination strategies computational agents emerged years 
possible devise coordination strategy works circumstances strategy existed human societies substitute myriad constructs employed today corporations governments markets teams committees professional societies mailing groups 
strategy adopt certain situations stress breaking point 
durfee identifies varying properties dimensions interaction situation agent population task environment solution properties 
dimensions identifies obvious properties impact usability coordination strategy 
agent population quantity number agents 
heterogeneity example agents different capabilities internal architectures communication languages 
complexity complexity refers hard predict versatile agent predictable agents 
task environment degree interaction issues concern large groups agents resource regulates exclusive access blackboard datastore issues concern small groups agents collision avoidance 
dynamics rate environment changes typically due events outside influence agents 
distributivity instance tasks originate centrally distributively 
solution properties quality measure quality solution judging coordinates agent interactions near optimal merely acceptable efficient utilizing agent resources 
robustness extent changes environment invalidate plans goals agents 
overhead limitations communication bandwidth may limited 
scaling combinations dimensions poses greater challenges 
instance delays associated propagating information highly distributed setting compound difficulties arise dynamic environment 
approaches multi agent planning multi agent planning techniques cover quite range solutions different parts problem 
section structure existing phases process solving multi agent planning problem 
general phases distinguished generalizing main steps task sharing durfee 

refine global goals tasks subtasks remain assigned individual agents global task refinement 

allocate set subtasks agents task allocation 

define rules constraints individual agents prevent produce conflicting plans coordination planning 

agent plan reach goals individual planning 

coordinate individual plans agents coordination planning 

execute plans synthesize results subtasks plan execution 
phases general multi agent planning process need included 
example common global goals need phase possible conflicts dealt phase phase 
approaches combine different phases 
example agents coordinate plans constructing plans combination phase postpone coordination execution phase combination phase robots may unexpectedly encounter planned routes 
phases distinguished multi agent planning process describe currently known approaches deal issues arising phase 
global task refinement phase global tasks goals refined remaining task done single agent 
apart single agent planning techniques htn erol non linear planning penberthy weld sacerdoti special purpose techniques developed create global multi agent plan 
called centralized multi agent planning approaches fact classical planning framework construct execute multi agent plans katz rosenschein pednault 
task allocation centralized multi agent planning methods mentioned usually take care assignment tasks agents phase 
methods establish task assignment distributed way giving agents higher degree autonomy privacy complex task allocation protocols shehory kraus auctions market simulations 
auction way sure task assigned agent attaches highest value called private value walsh wellman 
vickrey auction example auction protocol quite 
vickrey auction agent closed bid task assigned highest bidder price second highest bidder 
auction protocol nice property bidding agents stimulated bid true private value exactly think worth 
market simulations economics distribute large quantities resources agents walsh wellman wellman wellman 
example clearwater shown costs money turned coordination device 
methods task assignment phase coordinating agents plan construction phase 
context value oriented environments game theoretical approaches agents reason cost decision making communication important 
see example sandholm supported results multiple dispatch center vehicle routing problem sandholm lesser 
overview value oriented methods coordinate agents fischer 
especially markov decision processes give interesting opportunity deal partially observable world pynadath tambe 
coordination planning phase agents coordinated start creating plans 
done example introducing called social laws 
social law generally accepted convention agent follow 
laws restrict agents behavior 
reduce communication costs planning coordination time 
fact yang finding restrictions plan merging process easier discussed previous section special case type coordination 
typical examples social laws real world traffic rules drives right side road virtually coordination oncoming cars required 
generally solutions social laws optimal may relatively fast 
social laws created design phase multiagent system studied shoham tennenholtz 
briggs proposed flexible laws agents try plan strictest laws solution agents allowed relax laws somewhat 
way coordinate agents exact interdependencies tasks 
prerequisite constraints dealt centrally existing planning technology partial order planning weld viewing tasks single agent tasks 
approach proposed deal interferences shared resources goals agent 
coordination planning coordinate competitive agents insist planning autonomy 
problem set interrelated sub goals reached set planning agents want interfered planning activity 
agents requires full planning autonomy time sure sub plan construct solve part problem sub plans coordinated seamlessly requiring replanning 
planning problems occur multi modal transportation problems parties ensure packages transported source locations destinations 
planning agents prepared carry part job guaranteed interfered activities agents 
clear planning problems decomposed independent subproblems changing original planning problem 
ter coordination method described adds minimal set additional constraints subgoals performed order ensure coordinated solution independent planning 
individual planning fourth phase consists individual planning agents 
principle planning technique different agents may techniques 
couple approaches integrate planning phase coordination plans phase 
partial global planning pgp framework durfee lesser extension generalized pgp decker lesser agent partial conception plans agents specialized plan representation 
method coordination achieved follows 
agent informs agent part plan merges information partial global plan 
agent try improve global plan example eliminating redundancy observes 
improved plan shown agents accept reject modify 
process assumed run concurrently execution part local plan 
pgp applied distributed vehicle monitoring test bed improved version shown hospital patient scheduling problem 
decker li framework task analysis environment modeling simulation model multi agent environment 
overview pgp related approaches lesser 
clement barrett improved pgp framework separating planning algorithm coordinating actions modular approach called shared activities 
coordination planning large body research focused plans constructed separately phase 
plan merging methods aim construction joint plan set agents individual sub plans participating agents 
georgeff propose plan synchronization process starting individual plans 
defined called process model formalize actions open agent 
parts process model correctness conditions defined state world valid execution plan may succeed 
agents help changing state world way correctness conditions agent satisfied 
course changing state world may help agent may interfere agent correctness conditions georgeff 
stuart uses propositional temporal logic specify constraints plans guaranteed feasible states environment reached 
constraints theorem prover generate sequences communication actions fact implement semaphores guarantee event fail 
improve efficiency resolve conflicts introduce restrictions individual plans phase ensure efficient merging 
line action proposed yang merge alternative plans reach goal 
approach merging set plans global plan deals problems arisen conflicts redundant actions search method smart cost heuristic ephrati rosenschein showed dividing constructing sub plans agents reduce complexity merging algorithm ephrati rosenschein 
works plan merging ephrati rosenschein propose distributed polynomial time algorithm improve social welfare sum benefits agents 
process group constraint aggregation agents incrementally construct improved global plan voting joint actions 
propose algorithms deal agents interleave planning coordination execution ephrati rosenschein 
approach considers conflicts positive relations proposed von martial 
presents plans hierarchically top level needs exchanged agents determine relations 
possible relations solved exploited top level 
refinement plans process repeated 
specific type plan relationship different solution 
relations plans autonomous agents categorized 
main aspects positive negative relations non consumable resources requests favor relationships 
succeeded developing plan merging algorithm deals durative actions time 
construct conditional simple temporal network specify temporal conflicts plans 
specification set constraints derived solved constraint solver 
solution specifies required temporal relations actions merged plan 
problems plan merging approaches described agent may dependent case 
cox durfee describe maintain autonomy able results agents improve efficiency 
basically idea add dependencies conditionally plan agent succeeds efficient branch plan executed normal course action followed 
plan execution consider sixth phase slightly different order bit topic 
fact includes vast body reactive agents behavior models 
multi agent planning systems section discuss approaches planning coordination multi agent literature detail approach coordination occurs prior planning phase planning coordination interleaved phase agents plans perform plan merging phase 
coordination filtering ephrati distinguish approaches multi agent coordination 
explicit coordination involves agents reasoning interactions negotiations 
problem explicit coordination extremely time consuming impractical dynamic domains 
second approach implicit coordination agents follows local rules behaviour ensure agents operate having worry interference agents 
social laws example implicit coordination 
ephrati deals implicit coordination form multi agent filtering 
multi agent filtering extension single agent filtering strategy designed agents dynamic environments 
agent single agent filtering strategy set set goals 
due changes environment opportunities arise take alternative additional action 
filtering strategy filters options incompatible agent current goal 
multi agent filtering strategy bypasses options incompatible goals agents 
ephrati ask question rational agents employ filtering strategy bypassing options sake agents effectively reduces number possible actions filtering agent 
filtering strategies augmented override mechanism 
option interferes agents goals looks particularly promising option taken deliberation non conflicting options 
override mechanisms threshold value 
bold agent consider new options high threshold cautious agent low threshold value 
notion interference differs standard notion interference 
ephrati rosenschein instance preconditions action undone post conditions action 
authors identify single type conflict situation example domain multi agent tileworld domain 
tileworld domain map grid tiles 
objects holes tiles obstacles appear disappear dynamically agents receive payment filling holes tiles 
conflict defined agents trying fill hole 
domain filtering strategies 
filtering strategy static geographic filtering location agents location holes 
agents assigned non overlapping portions map filter options holes region 
filtering strategy intention posting agents post blackboard intention fill hole 
agents bypass options filling holes agent intends fill 
answer question employing filtering strategy rational experiments run number agents employ filtering strategy static geographic 
filtering proved dominant strategy number agent filtering agents filtering average highest utility 
ephrati give evidence generalized domains 
claim filtering dominant strategy tileworld domain insufficiently supported precisely specify strategy agents filtering strategy 
generalized partial global planning partial global planning pgp durfee framework influential approaches distributed artificial intelligence 
pgp framework agents cooperate agent complete information 
pgp assumes cooperative distributed problem solving environment cdps days referred simply dps contrasts multi agent systems mas agents self interested agents willing help compensation 
cdps environments durfee lesser identify categories coordination techniques encompassed pgp 

contracting distributed problem solving process viewed big process potential solvers parallel computing 
goal coordination utilize problem solvers utmost 
case agents execute tasks independently contracting redistributes tasks positive utility 

result sharing result sharing concentrates domains tasks inherently distributed problems arising agent may related problems arising agents 

organizing organizational knowledge agents roles responsibilities help agents decide information communicate agents 

planning traditional planning distributed artificial intelligence focused avoiding resource conflicts 
agents act independently focus cooperation 
pgp geared particular kind multi agent domain distributed sensor networks 
distributed network acoustic sensors monitoring vehicle movement running example 
goal network provide consistent view vehicle movements 
order agents interpret sensor data 
data particular noise exhaustively analyzing sensor inputs impractical 
fortunately interrelationships data agents mean sharing information possible interpret data accurately timely 
specifically coordination techniques distributed sensor networks allow agents instruct propose agents collect specific data instance monitor certain road determine information send cooperate ways 
instance agent data interpret put analyzing data agents 
dynamic sensor networks highly dynamic environments different pgp coordination techniques different circumstances 
pretend moment environment static coordination techniques subsequently 
local planning agent rough characterizations possible interpretations dataset tentative plans interpretations 
plan represents actions levels abstraction 
high level abstraction outlines major steps low level abstraction details actions major step 

communication agents know information send pgp employs types organizations 
task level organization defines roles responsibilities agents regard performing tasks 
meta level organization defines authority roles agents may give orders agents 

initializing partial global plan integrate plans agents plan agent try relate goals plan goals agent 
goals related various ways 
example goal relation vehicle monitoring domain different agents monitor different stretch track stretches belong road 

modifying pgps agents received constructed partial global plan try improve techniques task re distribution task re ordering 
sending modified partial global plan agents agent effectively proposes plan agents 
agents may accept roles agent outlined pgp may refuse may send form modified partial global plan 
generalized partial global planning gpgp decker lesser pgp extended defining task oriented framework described decker lesser allows coordination mechanisms inserted framework 
way set coordination techniques pgp framework distributed vehicle monitoring merely configuration framework defines family coordination algorithms tied single domain 
task analysis environment modeling simulation framework tasks composed subtasks forming hierarchy root node called task group 
multiple task groups exist time 
relationships tasks enables task started enabling task completed facilitates positive relation hinders negative relation 
evaluating performance execution set task characteristics relevant elapsed time quality task execution meant performance measure instantiated specific domains 
agent belief means agent believes part global task structure see 
agents commit performing tasks agents 
agent local scheduler schedules computational resources agent scheduler determines tasks agent execute 
purpose coordination mechanisms ensure local scheduler provided best possible input allows construction high utility schedule 
words coordination mechanisms enable agent plan 
plan merging resource formalism starting point de agents plans executed account plan agent 
words agents perform plans need coordination 
cooperating agents find efficient plans 
resource logic represent plans actions 
goal situation set resources particular resource type 
initial situation set resources 
agents perform actions called skills consume resources produce resources 
plan represented directed acyclic graph vertices resources skills arcs connect resources skills indicate consumption production relationship example see skill consumes resource type produces resources respectively type 
plan may produce resources required skills produce resources subsequent skills plan resources required goal ii resources initial situation 
unused plan skill consumes resource type produces resources types 
resources considered side effects plan 
agents may able unused resources 
agent resources needs plan buying resources agents need produce 
precisely agent buy useful unused resources particular skill produces skill removed plan 
removal skill turn frees resources previously consumed deleted skill opens possibilities trading resources 
go details negotiation agents agents cooperate successfully trade resources utility go 
selling agent resources worthless sell assuming rational agents buying agent buy resources leads reduction cost 
accomplishments multi agent research fine intended settings fail impress applied real world problems 
simplifying assumptions underlie approaches prove restrictive practical 
number simplifying assumptions include desjardins 
environment fairly stable 
early days ai planning research world assumed static meaning changes state world result actions performed agent 
course researchers long recognized importance allowing unexpected changes occur environment research relies assumption semi static environment 

world deterministic 
assume know result action 
unfortunately especially multi agent environment case example agent may changed world precondition action established 
assumption agents actions coordinated deterministic assumption quite acceptable 

fair degree coherence 
agents designed rational incentive 
words agents try maximize expected utility zlotkin rosenschein 

knowledge world correct consistent agents 
words relevant part world completely observable 

feasible goal state exists global goals achieved private goals met degree lot money 

learning required 
words past events affect agents change current state 

communication reliable free 
messages come safely agents share common ontology utility units 
furthermore significant cost associated communication actions 
assumptions commonly fortunately acceptable application domains 
relax assumption concerning changes environment desjardins propose introduce new multi agent planning paradigm distributed continual planning dcp 
traditional approach handling uncertainty plan contingencies arise 
plan case contingency arises case obtain conditional plan branches possible 
hard see number possible large conditional plan large 
approach single plan monitor execution 
soon deviation plan detected plan repair done ensure goals reached 
distributed continual planning aims go replanning failure contingency planning viewing planning ongoing dynamic process planning execution interleaved 
continual planning react changes threaten execution plan look opportunities improve plan 
mean instance goal plan obsolete plan feasible agent abandon current plan search better resources 
desjardins state agent engage continual planning aspects world changes dynamically control agent ii aspects world revealed incrementally iii time pressure requires agent start execution plan complete iv agent objectives evolve time 
allen hendler tate editors 
readings planning 
morgan kaufmann publishers san mateo ca 
bernstein givan immerman zilberstein 

complexity decentralized control markov decision processes 
proceedings sixteenth conference uncertainty artificial intelligence uai pages san mateo ca 
morgan kaufmann publishers 
blum furst 

fast planning planning graph analysis 
artificial intelligence 
bond gasser editors 
readings distributed artificial intelligence 
morgan kaufmann publishers san mateo ca 
bonet geffner 

planning heuristic search 
artificial intelligence 
special issue heuristic search 
boutilier dean hanks 

decision theoretic planning structural assumptions computational leverage 
journal ai research 
briggs 

modularity communication multi agent planning 
phd thesis university texas arlington 
bylander 

computational complexity propositional strips planning 
artificial intelligence 
clearwater 

market base control paradigm distributed resource allocation 
world scientific publishing clement barrett 

continual coordination shared activities 
proceedings second international conference autonomous agents multi agent systems aamas 
cox durfee 

exploiting synergy managing agent autonomy 
aamas workshop autonomy delegation control 
de bos 

resource logic multi agent plan merging 
annals mathematics artificial intelligence special issue computational logic multi agent systems 
decker lesser 

quantitative modeling complex computational task 
proceedings th international workshop distributed artificial intelligence pages hidden valley pennsylvania 
decker lesser 

generalizing partial global planning algorithm 
international journal intelligent cooperative information systems 
decker lesser 

designing family coordination algorithms 
proceedings thirteenth international workshop distributed artificial intelligence dai pages 
decker li 

coordinating mutually exclusive resources gpgp 
autonomous agents multi agent systems 
desjardins durfee ortiz 

survey research distributed continual planning 
ai magazine 
kambhampati 

domain independent heuristic metric temporal planner 
proceedings sixth european conference planning ecp pages 
durfee 

organizations plans schedules interdisciplinary perspective coordinating ai agents 
journal intelligent systems 
special issue social context intelligent systems 
durfee 

distributed problem solving planning 
wei editor modern approach distributed artificial intelligence chapter 
mit press san francisco ca 
durfee 

scaling agent coordination strategies 
computer 
durfee lesser 

planning coordinated actions dynamic domains 
proceedings darpa knowledge planning workshop pages 
ephrati pollack rosenschein 

tractable heuristic maximizes global utility local plan combination 
lesser editor proceedings international conference multi agent systems icmas pages san francisco ca 
aaai press distributed mit press 
ephrati pollack ur 

deriving multi agent coordination filtering strategies 
proceedings fourteenth international joint conference artificial intelligence ijcai pages san mateo ca 
morgan kaufmann publishers 
ephrati rosenschein 

multi agent planning process merging distributed sub plans 
proceedings twelfth international workshop distributed artificial intelligence dai pages 
ephrati rosenschein 

divide conquer multi agent planning 
proceedings twelfth national conference artificial intelligence aaai pages menlo park ca 
aaai press 
ephrati rosenschein 

framework interleaving execution planning dynamic tasks multiple agents 
castelfranchi ller editors reaction cognition fifth european workshop modelling autonomous agents multi agent world maamaw lnai volume pages berlin 
springer verlag 
erol hendler nau 

htn planning complexity expressivity 
proceedings twelfth national conference artificial intelligence aaai volume pages seattle washington usa 
aaai press mit press 
ferber drogoul 

reactive multi agent systems simulation problem solving 
gasser editors distributed artificial intelligence theory praxis volume euro courses computer information science pages 
kluwer academic netherlands 
fikes nilsson 

strips new approach application theorem proving problem solving 
artificial intelligence 
fischer ru 

decision theory coordination multiagent systems 
technical report rr dfki gmbh german research center artificial intelligence 
li yang 

theory algorithms plan merging 
artificial intelligence journal 
garey johnson 

computers intractability guide theory np completeness 
freeman new york ny 
georgeff 

communication interaction multi agent planning 
proceedings third national conference artificial intelligence aaai pages menlo park ca 
aaai press 
published bond gasser pages 
georgeff 

theory action multiagent planning 
proceedings fourth national conference artificial intelligence aaai pages menlo park ca 
aaai press 
published bond gasser pages 
georgeff 

communication interaction multi agent planning 
bond gasser editors readings distributed artificial intelligence pages 
morgan kaufmann publishers san mateo ca 
published georgeff 
haddawy hanks 

utility models goal directed decision theoretic planners 
computational intelligence 
jonsson 

results complexity planning incomplete information 
proceedings fifth european conference planning ecp volume lecture notes artificial intelligence pages berlin 
springer verlag 
hoffmann nebel 

ff planning system fast plan generation heuristic search 
journal ai research 


modeling change frame problem 
pylyshyn editor robot dilemma frame problem artificial intelligence pages 
ablex publishing norwood nj 
jennings 

coordination techniques artificial intelligence 
hare jennings editors foundations distributed artificial intelligence pages 
john wiley sons new york ny 
kambhampati 

refinement planning unifying framework plan synthesis 
ai magazine 
katz rosenschein 

plans multiple agents 
gasser huhns editors distributed artificial intelligence volume research notes artificial intelligence pages 
pitman publishing morgan kaufmann publishers london uk 
koehler 

planning resource constraints 
proceedings thirteenth european conference artificial intelligence ecai pages 
john wiley sons 
lesser decker carver garvey wagner 

evolution gpgp domain independent coordination framework 
technical report umass cs tr university massachusetts 
lifschitz 

semantics strips 
reasoning actions plans proceedings workshop pages san mateo ca 
morgan kaufmann publishers 
malone crowston 

interdisciplinary study coordination 
center coordination science mit 
malone crowston 

interdisciplinary study coordination 
acm computing surveys 
nebel 

expressive power propositional planning formalisms 
journal ai research 
nwana lee jennings 

coordination software agent systems 
bt technology journal 
pednault 

formulating multi agent dynamic world problems classical planning framework 
georgeff lansky editors reasoning actions plans proceedings workshop pages san mateo ca 
morgan kaufmann publishers 
published allen 

penberthy weld 

ucpop sound complete partial order planner adl 
proceedings third international conference knowledge representation reasoning kr pages 
morgan kaufmann publishers 
penberthy weld 

temporal planning continuous change 
proceedings twelfth national conference artificial intelligence aaai pages menlo park ca 
aaai press 
pynadath tambe 

communicative multiagent team decision problem analyzing teamwork theories models 
journal ai research 
raphael 

frame problem problem solving systems 
findler meltzer editors proceedings advanced study institute artificial intelligence heuristic programming pages edinburgh uk 
edinburgh university press 


grt planner backward heuristic construction forward state space planning 
journal ai research 
rosenschein 

multiagent planning social process voting privacy manipulation 
lesser editor proceedings international conference multi agent systems icmas page san francisco ca 
aaai press distributed mit press 
sacerdoti 

nonlinear nature plans 
proceedings fourth international joint conference artificial intelligence ijcai pages san mateo ca 
morgan kaufmann publishers 
sandholm lesser 

coalitions computationally bounded agents 
artificial intelligence 
shehory kraus 

methods task allocation agent coalition formation 
artificial intelligence 
shoham tennenholtz 

social laws artificial agent societies line design 
artificial intelligence 
smith weld 

temporal planning mutual exclusion reasoning 
proceedings sixteenth international joint conference artificial intelligence ijcai san mateo ca 
morgan kaufmann publishers 
stuart 

implementation multi agent plan synchronizer 
proceedings ninth international joint conference artificial intelligence ijcai pages san mateo ca 
morgan kaufmann publishers 
published bond gasser pages 
ter valk 

coordinating autonomous planners 
proceedings international conference artificial intelligence pages 
csrea press 


detecting avoiding interference goals intelligent agents 
proceedings eighteenth international joint conference artificial intelligence ijcai 
pollack horty 

merging plans quantitative temporal constraints temporally extended actions conditional branches 
proceedings fifth international conference artificial intelligence planning systems aips pages menlo park ca 
aaai press 
veloso carbonell rez borrajo fink blythe 

integrating planning learning prodigy architecture 
journal experimental theoretical artificial intelligence 
vickrey 

computer speculation auctions competitive sealed tenders 
journal finance 
von martial 

multiagent plan relationships 
proceedings ninth international workshop distributed artificial intelligence dai pages 
von martial 

coordination plans multiagent worlds advantage favor relation 
huhns editor proceedings tenth international workshop distributed artificial intelligence dai number act ai mcc technical report austin tx 
von martial 

coordinating plans autonomous agents volume lecture notes artificial intelligence 
springer verlag berlin 
walsh wellman 

market protocol decentralized task allocation scheduling hierarchical dependencies 
proceedings third international conference multi agent systems icmas pages 
extended version available 
walsh wellman ygge 

combinatorial auctions supply chain formation 
second acm conference electronic commerce pages 
acm press 
weld 

commitment planning 
ai magazine 
weld 

advances ai planning 
ai magazine 
wellman 

market oriented programming environment application distributed multicommodity flow problems 
journal artificial intelligence research 
wellman walsh wurman mackie mason 

auction protocols decentralized scheduling 
proceedings eighteenth international conference distributed computing systems 
wellman walsh wurman mackie mason 

auction protocols decentralized scheduling 
games economic behavior 
wolfman weld 

combining linear programming satisfiability solving resource planning 
knowledge engineering review 
yang nau hendler 

merging separately generated plans restricted interactions 
computational intelligence 
zlotkin rosenschein 

mechanisms automated negotiation state oriented domains 
journal artificial intelligence research 

