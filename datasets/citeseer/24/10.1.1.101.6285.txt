arxiv adap org sep evolutionary design collective computation cellular automata james crutchfield santa fe institute hyde park road santa fe nm chaos santafe edu melanie mitchell santa fe institute hyde park road santa fe nm mm santafe edu das center nonlinear studies los alamos nat laboratory los alamos nm raja lanl gov physics department university california berkeley ca ibm watson research center box yorktown heights ny contents 
investigate ability genetic algorithm design cellular automata perform computations 
computational strategies resulting cellular automata understood framework particles embedded space time configurations carry information interactions particles effect information processing 
structural analysis explain evolutionary process strategies designed genetic algorithm 
generally goals understand machine learning processes design complex decentralized systems sophisticated collective computational abilities develop rigorous frameworks understanding resulting dynamical systems perform computation 
cellular automata computational task cellular automata evolving cellular automata genetic algorithms results experiments default strategies 
block expanding strategies 
embedded particle strategies 
understanding collective computation cellular automata computational mechanics cellular automata 
computational mechanics evolved cellular automata 
computational strategy par 
computational strategy par failure analysis 
significance particle level description evolutionary history par innovation contingency fig 

fig 

fig 

fig 

fig 

fig 

particle models evolved cellular automata 
related domain filter 
earliest days computer science researchers interested making computers computation information processing systems nature 
von neumann viewed new field automata theory closely related theoretical biology asked questions computers brains alike necessary automaton reproduce 
turing deeply interested mechanical roots human intelligence weiner looked links functioning computers nervous systems societies 
biologically inspired computation received renewed interest researchers borrowing information processing mechanisms natural systems brains immune systems insect colonies economies biological evolution 
motivation understand systems nature adaptively process information construct fast robust adaptive computational systems learn perform environments 
commonalities natural systems differ considerably traditional von neumann style architectures biological systems brains immune systems noted computer architectures central control random access memory insect societies consist myriad relatively homogeneous components extended space operate parallel central control limited communication components 
information processing systems arises coordination large scale patterns distributed components distributed activations neurons activities antibodies 
decentralized systems highly nonlinear exhibit complicated difficult analyze unpredictable behavior 
result hard control program 
clear order design understand decentralized systems develop useful technologies engineers extend traditional notions computation encompass architectures 
done extent research parallel distributed computing architectures systolic arrays 
computing systems parallelized decentralized employ increasingly simple individual processors harder harder design program systems 
cellular automata cas simple class systems captures features systems nature listed large numbers homogeneous components simple finite state machines extended space central control limited communication components 
programming paradigm implementing parallel computations cas research investigates genetic algorithms gas evolve cas perform computations requiring coordination cells 
words ga job design ways actions simple components local information communication give rise coordinated global information processing 
addition adapted framework computational mechanics discover information processing embedded dynamical systems analyze computation emerges evolved cas 
ultimate motivations fold understand collective computation evolution natural systems ii explore ways automatically engineering sophisticated collective computation decentralized multi processor systems 
previous described mechanisms genetic algorithms evolve cellular automata perform computations impediments faced ga 
briefly sketched adaptation computational mechanics approach understanding computation evolved cas 
give fully developed account research date topics report new results compare gas cas distributed computing 
organized follows 
sec 
review cellular automata define computational task cas density classification requires global coordination describe ga evolve cellular automata perform task 
sec 
describe results ga evolution cas 
describe different types ca computational strategies discovered ga performing density classification task 
notion computational strategies rigorous defining terms embedded particles particle interactions geometric subroutines consisting components 
high level description enables explain space time configurations generated evolved cas give rise collective computation predict quantitatively cas computational performance 
embedded serial processing termed von neumann style von neumann inventors non von neumann style architectures cellular automata 
rule table neighborhood output bit lattice configuration neighborhood output bit components dimensional binary state elementary ca shown iterated time step configuration lattice sites periodic boundary conditions sn 
particle descriptions explain evolutionary stages successful cas produced ga sec 
compare research related 

cellular automata dimensional cellular automaton consists lattice identical finite state machines cells identical topology local connections cells input output boundary conditions 
denote set states cell finite state machine denote number states cell 
cell indexed site number 
cell state time denoted st 
state cell states cells connected called neighborhood cell cell obeys transition rule gives update state cell function drop indices st refer general local variables 
denote configuration cell states st 
st ca specifies global map configurations 
cases discussion denote map lattice 
applies global configurations clear context 
synchronous ca global clock provides update signal cells cells synchronously read states cells neighborhood update states 
neighborhood taken spatially symmetric 
dimensional cas si si ca radius 

small radius binary state cas number possible neighborhoods large displayed look table rule table lists possible resulting output bit architecture dimensional ca illustrated fig 

neighborhood cell consists nearest neighbors boundary conditions periodic sn 
dimensional cas called elementary cas 
wolfram introduced numbering scheme dimensional cas 
output bits ordered lexicographically fig 
interpreted binary representation integer leftmost bit significant digit rightmost significant digit 
scheme elementary ca pictured number 
restrict attention synchronous dimensional cas periodic boundary conditions 
choice parameters explained 
ease presentation refer ca transition rule ca 
behavior cas illustrated space time diagrams configurations lattice plotted function time 
fig 
shows space time diagram behavior eca lattice sites periodic boundary conditions starting arbitrary initial configuration lattice displayed horizontally iterated time steps time increasing 
variety local structures apparent eye space time diagram 
develop time move space interact 
simplest spatial dynamical systems discrete time space local state 
despite seen fig 
generate quite complicated apparently aperiodic behavior 
architecture ca modified ways increasing number spatial dimensions number states cell neighborhood size modifying boundary conditions making local ca rule probabilistic deterministic making global update asynchronous 
cas included general class iterative networks automata networks 
see review 
distinguished architectures class homogeneous local connectivity cells homogeneous update rule cells typically relatively small quite time due simple architecture cas suc space time diagram illustrating typical behavior elementary ca eca 
lattice sites displayed horizontally top starts arbitrary initial configuration 
cells state displayed black cells state displayed white 
time increases page 
employed models physical chemical biological social phenomena fluid flow galaxy formation earthquakes chemical pattern formation biological morphogenesis vehicular traffic dynamics 
considered mathematical objects formal properties proved 
parallel computing devices high speed simulation scientific models computational tasks image processing 
addition cas models studying emergent cooperative collective behavior complex systems 
discussions areas see 

computational task cellular automata shown cas capable universal computation see 
constructions embed universal turing machine tape states read write head location finite state control ca configurations rule design ca rule supporting propagating interacting particles simulates universal logic circuit 
constructions intended principle demonstrations potential computational capability cas implementations practical computing devices give insight computational capabilities cas practice 
constructions typically difficult design initial configurations perform desired computation 
constructions amount massively parallel architecture simulate serial 
interest ca computation quite different approach 
cas considered massively parallel spatially extended pattern forming systems 
goal machine learning procedures ga stochastic search automatically design cas implement parallel computation advantage patterns formed collective behavior cells 
chose particular computation dimensional binary state ca density classification requires collective behavior 
task determine fraction initial configuration ic greater critical value entire lattice relax fixed point maximum tmax time steps relax fixed point time 
task undefined experiments set tmax 
performance pi ca task calculated randomly choosing initial configurations lattice cells iterating ic maximum tmax time steps determining fraction ics correctly classified fixed point fixed point 
partial credit final configurations reached fixed point 
shorthand refer task task 
defining task values course possible chau showed possible perform task rational densities dimensional elementary cas succession 
task trivial von neumann style architecture holds ic array memory simply requires counting number 
trivial layer neural network input units feed single output unit simply requires weights set output unit fires activation reaches desired threshold contrast nontrivial design ca type perform task cells agree global characteristic input cell communicates state neighbors 
task cas contrasted studied tasks known byzantine agreement consensus distributed computing literature 
tasks requiring number distributed processors come agreement particular value held initially processors 
decentralized protocols developed tasks 
invariably assume individual processors sophisticated computational capabilities memory individual cells binary state cas communication topologies complicated cas 
knowledge protocols addresses problem classifying global property initial density processors 
background asked ga design cas collective behavior allowed perform chance pi task range minimize local processor local communication complexity wanted smallest values behavior obtained 
maximum performance approximately 
cas evolved runs ga cas maximum approximately approximately 
ga details section 
increasing radius resulted markedly higher performance sophisticated collective behavior 
result experiments described performed dimensional space time diagrams maj local majority vote ca 
left diagram right diagram 
cas periodic boundary conditions 
note neighborhood size 
naive candidate solution task contrast ga evolved cas majority vote ca 
ca denoted maj maps center cell cell neighborhood majority state neighborhood 
fig 
gives space time diagrams illustrating behavior maj ics 
seen small high density low density regions mapped regions 
region region border way decide persist 
maj perform task 
particular maj measured zero 
minimum sophisticated coordination form information transfer decision making required 
local nature control communication cas coordination cells emerge absence central processor central memory directing cells 
researchers building examined variations task performed simple cas combinations cas 
noted changing output specification task significantly easier 
example eca classifies densities initial conditions time steps producing final configuration checkerboard pattern interrupted blocks consecutive low density ics consecutive high density ics 
noted final configuration eca initial configuration eca correct final configuration obtained 
note solution requires central controller counts time steps order shift ca rule rule 
solutions yield correct density classification single ca task considerably difficult 
fact proven single finite radius state ca perform task perfectly 
interest focused developing new better parallel method performing specific task 
clearly dimensional binary state cellular automata far best architectures interested performing density classification efficiently 
emphasized task trivial computational model classes 
interest investigating gas design cas interesting collective computational capabilities understand capabilities 
due general interest able adapt paradigm spatial computation tasks tasks specific solutions apply approximate hand designed ca solutions previously known 

evolving cellular automata genetic algorithms genetic algorithms search methods inspired biological evolution 
typical ga candidate solutions problem encoded bit strings 
population strings chromosomes chosen random evolves generations selection crossover mutation 
generation fitness chromosome calculated externally imposed fitness function highest fitness chromosomes selected preferentially form new population reproduction 
pairs chromosomes produce offspring crossover offspring receives components chromosome parent 
offspring chromosomes subject bit position small probability mutation flipped 
generations population contains high fitness chromosomes approximate solutions problem 
overviews gas see 
ga search cas perform task 
chromosome population represented candidate ca consisted output bits rule table listed lexicographic order neighborhood cf 
fig 

chromosomes representing cas length bits 
size space ga searched far large exhaustive enumeration performance evaluation 
version ga worked follows 
initial population chromosomes chosen random 
fitness ca population computed randomly choosing ics lattice cells iterating ca ic arrived fixed point maximum tmax time steps 
determined final configuration correct fixed point fixed point 
fraction ics produced correct final behavior 
credit partially correct final configurations 
generation new set ics generated computed ca population cas population ranked order fitness basic framework introduced ref 
study issues phase transitions computation adaptation 
review original motivations critique results see ref 

ties broken random number highest fitness cas elite copied generation modification remaining cas generation formed crossovers randomly chosen pairs elite cas 
probability pc pair crossed single randomly chosen locus forming offspring 
child inherited bits parent bits second parent vice versa second child 
parent cas chosen crossover elite replacement elite ca permitted chosen number times 
offspring chromosomes crossover copies parents crossover take place mutated locus probability pm 
process repeated generations single ga run 
note different sample ics chosen generation fitness function random variable 
ran experiments different distributions choosing chromosomes initial population set ics generation unbiased distribution bit value chosen independently equal probability ii density uniform distribution strings chosen uniform probability fraction output bits fraction ic 
density uniform distribution initial ca population ics considerably improved ga ability find high fitness cas run 
fewer generations ga run find high performance cas 
results report experiments distributions 
experimental parameters tmax pc crossover performed pm 
experiments variations parameters result higher performance solutions faster convergence best performance solutions 
test quality evolved cas 
performance measure stringent quality test fitness ga runs ics chosen unbiased distribution close density threshold 
ics hardest cases classify 
gives lower bound performance measures 
machine learning terms ics calculate training sets cas ics calculate larger harder test sets probe evolved ca generalization ability 

results experiments section describe results independent runs ga different random number seeds 
runs population converged cas implementing types computational strategies 
term strategy refers mechanisms ca attains level fitness task 
strategy types default block expanding particle illustrated figures 
row contains space time diagrams displaying typical behavior ca evolved ga run 
cas different runs shown 
row left space time diagram right 
rule tables measured values cas table 
default strategies runs highest performance cas implemented default strategies ics iterate respectively 
typical behavior cas def def illustrated figures 
default strategies pi classifies density range correctly incorrectly 
initial ca population generated uniform distribution contains cas high low 
fraction output bits look table extreme cas tend default behavior 
block expanding strategies runs experiments ga evolved cas strategies shown figures 
exp fig 
defaults fixed point right diagram sufficiently large block adjacent adjacent ic 
case expands block fill entire lattice left diagram 
exp fig 
opposite strategy 
defaults fixed point sufficiently large block ic 
meaning sufficiently large block depends particular ca typically close neighborhood size 
example exp expand blocks exp expand blocks 
block expanding strategies rely presence absence blocks ic blocks adjacent appear low high density ics 
occurrence blocks statistically correlated recognizing expanding leads fitnesses default strategy 
strength correlation depends initial density lattice size typical block expanding strategies 
block expanding strategies designed ga adapted performances scale larger lattice sizes 
occurs probability block say adjacent appearing increases means correlation occurrence block density decreases 
seen measured values exp exp longer lattices table 
embedded particle strategies block expanding strategies examples kind sophisticated coordination information transfer claimed achieved robust performance task 
strategies computation done locally identifying expanding sufficiently large block 
performance generalize larger lattices 
clearly block expanding strategies missing important aspects required task 
third class strategies evolved ga space time behavior default strategy cas evolved different ga runs 
def left right 
ics ca iterates fixed point correctly classifying low ics 
def left right 
ics ca iterates fixed point correctly classifying high ics 
space time behavior block expanding cas evolved different ga runs 
exp left right 
ca defaults fixed point ic contains sufficiently large block adjacent case block expanded 
exp left right 
ca defaults fixed point ic contains sufficiently large block adjacent case block expanded 
classification ic correct cases 
embedded particle strategies achieve coordination communication alluded earlier 
typical space time behaviors particle strategies par figures 
seen transient phase spatial temporal transfer information local density takes place 
strategies evolved runs 
par behavior somewhat similar maj local high density regions mapped local low density regions mapped 
addition vertical stationary boundary separates regions 
set local spatial configurations boundary specified formal language terms regular expression means positive number repetitions word 
stationary boundary appears region left meets region right 
crucial difference maj region left meets region right checkerboard region grows size equal speed directions 
closer analysis role space time behavior shows checkerboard region serves decide adjacent regions larger 
simply cutting smaller region larger region continues expand 
net decision density region fact 
spatial computation largely geometric competition sizes high low density regions 
example consider right hand space time diagram fig 

large region lines marked boundary boundary smaller large high density region boundary boundary moving left boundary wrapping 
left hand side checkerboard region centered boundary collides boundary right hand side 
result collision cuts inner white region letting outer black region propagate 
way par uses local interactions simple geometry determine relative sizes adjacent low high density regions larger neighborhood size 
evident figures type size competition time happens increasingly larger spatial scales gradually resolving competitions larger larger regions 
black white boundary checkerboard region thought signals indicating ambiguous density regions 
boundaries local density exactly 
classified ca low high density 
result signals persist time 
creation interaction signals interpreted locus computation performed ca form emergent algorithm referring ca strategy 
par fig 
follows similar strategy vertically striped region playing role checkerboard region par case asymmetries speeds propagating region boundaries 
difference yields lower seen table 
descriptions computational strategies evolved ga informal 
major goal terms computation computational strategy emergent algorithm rigorous cellular automata 
section ca name rule table hexadecimal def bf def bf af ff df exp fd df fff exp cd par par table ca chromosomes look table output bits hexadecimal cas illustrated figures lattices sizes 
recover bit string giving ca look table outputs expand hexadecimal digit left right top row followed bottom row binary 
yields neighborhood outputs lexicographic order neighborhood leftmost bit bit string giving output bit neighborhood 
measured randomly chosen sample ics random variable 
table gives mean trials ca 
standard deviation trials approximately ca values comparison best known cas task see sec 

appears close upper limit class spatial architectures 
describe notions domains particles particle interactions 
notions answer questions precisely ca performing task 
structural components support information processing 
predict pi computational properties ca 
greater ca 
types mistakes ca performing task 
types questions difficult impossible answer terms local space time notions bits ca look table raw space time configurations produced ca 
higher level description needed incorporates computational structures 

understanding collective computation cellular automata section describe approach formalizing notion computational strategy cellular automata spatially extended systems 
approach space time behavior particle cas evolved different ga runs 
par left right 
par left right 
cas boundaries homogeneous space time regions effect information transmission processing 
classification ic correct cases 
space time diagram illustrating typical behavior eca ca exhibiting apparently random behavior set length spatial words positive entropy density 
diagram regular domains instances words filtered leaving embedded particles 
ref 

computational mechanics framework crutchfield applied cellular automata crutchfield hanson :10.1.1.48.3602
framework comprises set methods classifying different patterns appear ca space time behavior concepts computation dynamical systems theories 
methods developed way analyzing behavior cellular automata dynamical systems 
extend traditional geometric statistical analyses revealing intrinsic structures embedded dynamical processes 
computational mechanics cellular automata applied cellular automata purpose computational mechanics discover appropriate pattern basis describe structural components emerge ca space time behavior 
ca pattern basis consists set formal languages 
terms ca space time behavior decomposed concisely way constrained temporal dynamics 
pattern basis cells space time regions described basis seen forming background domains coherent structures defects walls fitting basis move 
way structural features domains identified dynamics analyzed interpreted terms 
example consider space time diagram fig 
illustrating apparently random behavior eca 
example useful illustration embedded information processing coherent structures immediately apparent eye 
computational mechanics analysis eca uses pattern basis consisting single domain language 
regions eca configurations site remaining sites wildcards 
type formal language description set configuration features discovered automatically machine reconstruction algorithm 
crutchfield hanson define regular domain space time region regular language ii space time translation invariant 
regular domains represented set configurations minimal finite state machine recognizes specifically pattern basis ca 
regular domain describes space time regions 
configurations words formally regular domain set 
temporally invariant ca maps configuration configuration 
spatially homogeneous pattern occur site recurrent states minimal finite automaton recognizing strongly connected 
ca regular domains discovered visual inspection automated induction method proved satisfy conditions corresponding space time regions sense understood 
level discovered regularity domains filtered space time diagram leaving unmodeled deviations referred domain walls dynamics studied 
case evolved ca analyze domain walls spatially localized time invariant structures considered particles 
eca regular domain turns stable called regular attractor stable invariant set configurations tend long times perturbed away example flipping site value 
random sites domain basic pattern described simple rule configurations allowed site value 
fixed value sites numbered lattice sites odd numbered lattice sites wild card value equal probability 
boundaries phase locked regions defects spatial periodicity spatially localized eca thought particles embedded raw configurations 
locate particle configuration generated eca assuming starts domain scans configuration left right say spatial period phase broken 
occurs site value seen domain pattern indicates 
depending particle structure occur eca scanning configuration opposite direction right left may lead detection broken domain pattern different site 
case particle defined set local configurations locations 
due eca particles manifest spatial configurations blocks set definition left right scan invariant 
fig 
shows filtered version fig 
cells participating colored white regular domain particle 
interaction annihilation table eca catalog regular domains particles particle interactions 
notation means particle forming boundary domains cells participating colored black 
spatial structure particles reflected triangular structures regions lattice particle breaking pattern localized restricted single site 
way eca configurations decomposed natural intrinsic structures eca generates viz domain particle structures summarized ca call particle catalog 
catalog particularly simple eca cf 
table 
net result eca behavior higher level particles 
noteworthy starting arbitrary initial configurations eca particles shown follow random walk space time infinite lattice annihilating pairs intersect 
consequence structure coherent particle groupings understand eca dynamics 
moves deterministic dynamics level ca acting raw configurations level stochastic particle dynamics 
result eca configurations fig 
analyzed structural way simply classifying eca chaotic 
computational mechanics view ca dynamics embedded particles carry various kinds information local regions ic 
particle interactions loci information combined processed decisions 
general structural aspects domains particles interactions appear immediately 
seen initial disordered period configurations condense defined regular domains particles interactions 
capture relaxation process define condensation time tc iteration filtered space time diagram contains defined domains walls 
words tc cell participates regular domain width wall interaction walls 
see refs 
detailed discussion condensation phase consequences 
computational mechanics evolved cellular automata methodology particularly useful understanding formalizing computational strategies emerged ga evolved ca 
fortunately exposition structural features evolved ca apparent eye 
fig 
sug regular domains particles velocities interactions decay react annihilate table par catalog regular domains particles including velocities parentheses particle interactions 
note catalog leaves possible particle interactions 
appropriate pattern basis par corresponding white black checkerboard regions 
similarly fig 
suggests par corresponding white black striped regions 
note simple shortcut identify domains spatially temporally periodic 
pattern appears repeated sufficiently large cells time steps space time region domain 
particularly easy prove regions regular domains 
exactly pattern expressed regular language minimal finite state machine typically requires closer inspection 
identified computational contributions space time regions easily understood 
contributions consist solely generation words corresponding regular language 
requires finite amount spatially localized memory direct contribution global computation required task minimal 
density memory vanishes domain increases size 
domains necessary locus global information processing 
fig 
version fig 
par regular domains filtered 
result reveals walls par par kinds embedded particles 
particles fig 
labeled greek letters 
filtering performed building transducer reads raw configurations recognize sites domain 
transducer fig 
example outputs white site par domains black site participating domain wall 
particular transducer comments construction properties appendix general construction procedure ref 

having performed filtering focus analysis shifts away raw configurations new level embedded particle structure 
questions computational strategies explainable terms particles interactions information processing occurring responsible high performance 
version fig 
regular domains filtered revealing particles interactions 
filtered version fig 

regular domains particles velocities interactions decay react annihilate table par catalog regular domains particles including velocities parentheses particle interactions 
tables list different particles observed space time behavior par velocities interactions take place 
note particle catalogs include possible structures example possible particle interactions 
computational strategies par par analyzed terms particles interactions listed particle catalogs 
computational strategy par high performance ca par particles carry information density local regions ic interactions combine process information rendering series decisions 
presumed functional components lead observed fitness computation performance 
referring table fig 
par particle seen consist zero velocity black white boundary 
carries information came region ic density locally ambiguous density determined center exactly ambiguity resolved locally 
time information integrated regions ic 
likewise particle consists white black boundary particle unstable immediately decays particles white checkerboard boundary checkerboard black boundary 
indicates local density ambiguity 
particles decays carry information ambiguous density signals 
carries information borders white low density region carries information borders black high density region 
particles carry mutual information having come ambiguous density region transient originally located 
carry positional information location virtue having speed 
see elements space time region consider left side left hand diagram fig 

decays particle 
collides companion wrapping lattice 
indicates low density white region right border larger black region bordered 
collision creates new particle carries information low density domains left producing low density area 
fast moving particle catches low density annihilates producing entire lattice 
result white region takes lattice maximum number iterations passed 
way classification low density ic correctly determined spatial algorithm steps just described 
case par final decision implemented velocity times right side right hand diagram fig 
converse situation emerges collides 
effective decision indicates black region bordered larger white region bordered 
symmetry interaction described interaction creates particle catches annihilate 
way larger black region takes correct density classification effected 
third type particle information processing illustrated top left right hand diagram fig 

decays 
case white region bordered smaller black region bordered 
collides left producing 
particle right 
proceeding eventually collide collides second 
borders larger competing regions collision slightly collision left 
collision produces particle propagating left 
approach equal opposite speeds collide 
carrying information white region win carrying information black region win collision appropriately results ambiguity signal interacts particles greater distances 
traveled farther collision produced shifted right original 
net effect net geometric subroutine shift location density ambiguity original particle ic moved right distance proportional large black region size relative white region size 
encodes ambiguity resolved information currently hand information carried produce carries important information location shifted right original 
see refer fig 
enlargement right diagram fig 
particle labels omitted clarity 
denote lengths indicated white low density black high density regions ic 
particle velocities listed table simple geometry easy calculate produced interaction shifted right cells original position 
shift right means high density region left leftmost gained sites size result series interactions 
terms relative position local particle configuration annihilate produce final 
information rightmost collides new partner eventually leading black lattice correctly classifying ic 
enlargement relabeling right diagram fig 
particle labels omitted clarity 
length leftmost white region length black region right amount produced interaction shifted leftmost 
particle velocities listed table simply geometry easy calculate 
type misclassification par 
tc lengths black regions sum cells lengths white regions sum cells 
leads misclassification ic density 
type misclassification par starting 
tc sum lengths black regions cells sum lengths white regions cells 
condensed lengths correctly reflect fact black regions ic center occur white regions way get cut 
ultimately yields large white region wins large black region ic misclassified 
clear sense say particles store transmit information particle collisions loci decision making 
described detail scenarios 
seen figures type particle information processing occurs distributed parallel fashion wide range spatial temporal scales 
functional organization information processing usefully analyzed levels information stored particles decisions interaction ii geometric subroutines coordinated groupings particles interactions effect intermediate scale functions iii net spatial computation lattice tmax 
section argue levels description ca computational behavior terms information transmission processing particles interactions analogous significantly extends marr representation algorithm level information processing 
turns useful level understanding predicting computational behavior cas individual ca operating particular ics understanding ga evolved progressive innovations computational strategies succeeding generations 
put claims quantitative basis shortly 
par iterates tmax time steps 
errors due wrong classification reached classification effected 
par types misclassifications 
type illustrated fig 
par reaches condensation time tc having produced configuration density opposite side 
particles interactions lead correct geometric computation incorrect final configuration 
second type error illustrated fig 
density tc side threshold configuration islands black white cells isolated black white regions get cut 
error geometric computation eventually leads incorrect final configuration 
increases type error increasingly frequent results decreasing values larger see table 
computational strategy par failure analysis noted table space time behavior par exhibits regular domains similar white black striped 
size competition strategy par par striped region plays role apar checkerboard domain 
compared par roles domain boundaries reversed 
par stable unstable decays particles 
strategy par roughly speaking site value exchange applied par strategy 
particles analogous cas interactions exclude particle interactions cf 
tables 
implement competition adjacent large white black regions 
analogy preceding analysis par strategy local competitions decided particle reaches 
par approach rate cell time step 
stationary particle effectively approaches rate cell time step moves velocity 
approaches rate cell time step velocity minus velocity 
asymmetry par geometric computation result errors type illustrated fig 

ic iteration tc block black cells adjacent block white cells 
particle traveling velocity relative reaches approximately time steps 
particle traveling velocity relative reaches approximately time steps 
black cells initially outnumber white cells black region cut white eventually wins yielding incorrect classification time step 
contrast par symmetric particle velocities reaches correct classification ic fig 

par par types classification errors type par reaches tc configuration density tc opposite side type illustrated fig 

type type error ca domains particles 
second type type due asymmetries particle velocities 
consider fig 
blow part right hand diagram fig 

misclassification par 
tmax ca reaches fixed point 
correct classification par ic 
blow part right hand diagram fig 
illustrating asymmetries par particle velocities result misclassifications 
left labeled isolated black island right white island 
contiguous islands bounded particles side 
inside par decays 
resulting set local particle interactions islands compete space bounding creation new 
respectively denote lengths white black islands series interactions white region left original leftmost gains sites size 
increase region size internal white island half size adjacent black island 
evident par asymmetries par particle logic biased favor classifying high densities 
asymmetries lower apar 
see table 

significance particle level description alternative ways cellular automata par par described performing computation 
marr anticipated delineating various levels information processing vision 
principle cas completely described bits look tables 
low level description useful understanding ca performs task 
level trying understand pocket calculator computes square root function examining physical equations motion electrons holes calculator silicon circuitry 
attempting interpretation level violates sense central tenets century long study dynamical systems nonlinear systems cas local space time equations motion directly determine system long term behavior 
case cas individual look table neighborhood output bit entries acting single time step directly give rise observed computational strategy 
interaction subsets ca look table entries number iterations leads emergence domains particles interactions 
second possibility describing computational behavior cas terms detailed space time behavior series raw configurations 
description low level understanding solutions task implemented 
approach trying understand calculator square root function performed long series snapshots positions velocities electrons holes traveling integrated circuits 
view analogous marr hardware implementation level description 
third possibility describe ca terms related task required input output mapping task computational complexity 
example particular set random ics half half par correctly classified ics ics 
average par took time steps reach fixed point maximum time 
computational complexity task serial architecture 
kind operational analysis roughly marr computational theory level 
levels description gives insight task performed particular ca terms information processing done leads particular measured performance 
needed intermediate level description primitives informationally related task hand 
computational mechanics level particles particle interactions gives 
detect primitives level analogous marr representation algorithm level particles seen representing aspects ic actions interactions seen ca emergent algorithm 
representations form data structures algorithms studied extensively von neumann style computers attempts define notions decentralized spatially extended systems cas 
course principle implement standard data structure algorithm computation universal ca game life ca simulating von neumann style computer 
particularly useful notion information processing goals understand nonlinear systems nature compute 
problematic wishes design computation complex decentralized spatially extended architectures 
believe essential develop new macroscopic level vocabularies order explain collective information processing takes place architectures 
benefit development understanding program architectures genuinely parallel ways 
close reading shows marr analysis descriptional levels required visual processing misses key issues 
fact representations emerge dynamics intrinsic dynamics ii clear formal definition required remove subjectivity detecting intrinsic representations iii functionality entailed new level dynamics intrinsic describes interactions 
illustrated cases computational mechanics framework employing distinctions provides necessary concepts methods address issues 
result analyze detail emergent computational strategies evolved cas 
particle level description forms explanatory vocabulary emergent computation context dimensional binary state cas 
described particles represent various kinds information ic particle interactions loci decision making information 
resulting particle logic gives functional description computation takes place directly available ca look table raw space time configurations produced iterating ca 
gives formal notion strategy allowing see example strategies par par similar differ 
immediate consequence level analysis say par strategy weaker 
level particles interactions qualitative description spatial information processing enables quantitative predictions computational performance 
refs 
describe model ca particle catalog statistical properties condensation time 
different cas compare model prediction average time taken reach fixed point values measured actual 
compar partial ancestral tree par 
diamonds crosses cas 
data points marked name corresponding ca 
summarized sec 

degree model predictions agree corresponding ca behavior indicates degree particle level description captures ca performing computation 
show model predicted performance observed performance close conclude particle level description accurately captures intrinsic computational capability evolved cas 

evolutionary history par innovation contingency structural analysis ca space time information processing just outlined allows understand evolutionary stages ga produces cas 
show functional components domains particles interactions arise inherited evolutionary history ga run 
demonstrate number evolutionary dynamical phenomena historical contingency functional emergence appearance initially nonfunctional behaviors key final appearance high performance cas 
figures illustrate par evolutionary history 
fig 
gives partial tree parent child relationships par ancestors numbered generation birth 
note elite cas survive ca name rule table hexadecimal fff fff fb bbf table ca chromosomes look table output bits hex ancestors par described section 
see fig 
directions recover ca rule table outputs hexadecimal code 
values table calculated ca generation birth ga values means trials performance function calculated run complete 
tested trials standard deviation approximately standard deviation approximately ca 
space time behavior generation ancestors par start ic 
generation parents offspring nonconsecutive generation labels 
cas listed best fitness generation arose 
table lists look tables ancestors par described 
fig 
plots diamonds crosses versus generation birth ancestors 
generations best ca population achieved default strategy fig 

starting generation evolution proceeds series abrupt increases gradual increases seen course statistic available ga occasional small decreases result stochastic nature fitness performance evaluations 
goal functional analysis understand increases come 
series space time diagrams figs 
compare space time behaviors cas ancestral tree fig 

spacetime behavior ic related cas highlight similarities evolutionary innovations 
fig 
ic low density 
default ca iterates fig 
misclassifies ic 
shown default ca iterates 
look table contains see table look table contains 
crossed locus produce part look table contains rest 
fig 
iterates correctly classifies ic 
space time behavior generation ancestors par start ic 
significance explained compared 
fig 

fig 
quickly iterates 
typical behavior shown fig 
small regions black quickly grow take entire lattice 
way slightly better default ca correctly classifies high density ics small number low density ics 
note remains 
said carrying exceptions strategy 
runs produced strategies went converge block expanding strategies embedded particle strategies 
interestingly checkerboard domain produced ics fig 

contribute fitness performance 
functionally neutral feature 
determine modified rule table prevent checkerboard domain propagating 
relevant entries 
flipping output bit entries produces cas fitness performance identical 
standard deviations variant cas discussed section approximately 
standard deviations approximately 
biological terminology consider checkerboard domain generation adaptively neutral trait 
represents steep jump fitness seen fig 

ca 
maps ics sufficiently large block adjacent ic case block expands eventually fill entire lattice fig 
correct classification tmax 
ics produces checkerboard domain similar ordered region seen space time behavior par ancestors arising generation 
start ic 
fig 

determined fashion similar just explained traits adaptively neutral 
fig 

expands blocks ics including resulting misclassifications 
fact high density ics misclassified markedly higher ancestors performance marginally improved see table 
creates types boundaries white black domains 
shown fig 
labeled par exists single time step decays remains stable 
third type appear ic seen fig 

support block expanding strategy leads competition white black regions similar seen par 
contrast consider fig 
ic correctly classified 
recalling table see substantially higher 
higher explained particle level 
particles labeled fig 
fig 

creates set particles ics expands blocks shown fig 
different frequencies occurrence appear appears 
expand blocks errors ics 
randomly generated ics created ics ics 
space time behavior generation ancestors par shown starting ic 
created final configuration regardless created 
block expanding dominates behaviors 
explains flipping output bits suppress checkerboard domain significantly affect significantly affect values 
checkerboard domain suppressed decreased 
decreased gould consider checkerboard domain example trait adaptive significance appears opted evolution adaptive value 
gould traits common biological evolution 
evolutionary innovation goes just transition functionality associated marked increase fitness performance 
turn leads change dominant computational strategy away block expanding 
fig 

misclassification illustrated fig 
compared correct classification higher fitness performance child fig 

cas create similar particles velocity particle velocity zero 
fig 
white region marked larger black region right marked 
particles positive velocity black regions left right expand right 
coming left decreases size space time behavior generation ancestors par start ic 
side rightmost particle moves away region 
asymmetry allows region win size competition region 
asymmetry black white regions corrected change velocity zero 
size competition black white regions symmetric 
result seen fig 
smaller region cut region allowed grow correct classification 
fig 

improvement carries ancestors block expanding past 
fig 
misclassifies ic creating particle particle white black ambiguous density boundary ic 
recall particles created random ics 
frequency 
main innovation zero velocity particle resulting symmetric size competition strategy 
descendant particles created 
explains higher 
fig 

par named denote generation birth outperforms classifies low density ics correctly 
low density ics fig 
ic black regions type error 
win size competition resulting misclassification 
type errors low density ics seen fig 
correctly classifies ic space time behavior generation ancestor par par 
start ic density 
fig 

set ics errors low density ics errors low density ics 
particle models evolved cellular automata natural history par evolution demonstrates understand jumps terms regular domains particles functional compo nents ca dynamical behavior 
ga actions described low level manipulating bits ca rule tables crossover mutation better understanding evolutionary process emerges describe actions higher level manipulating particle types velocities interactions 
important component viewpoint particles interactions lead higher fitness 
test hypothesis quantitatively ask extent cas observed fitnesses performances predicted particle interaction properties 
collaboration wim constructed ballistic particle models cas 
models intended isolate particle level mechanisms doing allow determine ca behavior level captures 
ballistic particle model ca consists catalog particle types velocities interactions frequencies occurrence tc 
run particle frequencies generate initial configuration stc particles condensation time catalog velocities interactions calculate initial particles ballistic trajectories products subsequent particle interactions 
final configuration reached particles annihilated tmax tc steps occurred 
configuration actual time reached gives prediction classification ic corresponding stc time take reach 
particle models analysis described detail refs 

ca name table ca model performances 
ref 

note par referred 
ca rule tables table 
comparison performances cas just analyzed particle models table 
seen agreement percent cases 
cases small discrepancies due simplifications particle models 
include assumptions particles zero width interactions occurring instantaneously 
error sources analyzed depth ref 

error higher due long lived transient domain part particle catalog model 
main effect condensation time overestimated ics generate domain 
turn means model describes stages convergence answer configurations gets correctly higher performance 
error 
appears due errors estimates distribution particle types condensation time 
particle level descriptions quantitatively predict computational behavior cas ca fitnesses performances evolutionary setting 
particular results support claim higher level structures embedded ca configurations implement ca computational strategy 
germane preceding natural history analysis level description allows understand functional level structural components evolutionary process cas produced 

related sec 
discussed similarities differences distributed parallel computation 
section examine relationships computation cellular automata 
pointed par behavior behavior highest performance rules similar behavior called cs levin gkl ca 
ca invented perform task study reliable computation phase transitions dimensional spatially extended systems 
extensive cs reliable computation cas reported ref 

earlier group came follow research packard investigation computation edge chaos cellular automata 
originally wolfram proposed classification cas behavioral categories 
categories followed basic classification dissipative dynamical systems fixed point attractors exhibiting equilibrium behavior limit cycle attractors exhibiting periodic behavior chaotic attractors exhibiting apparently random behavior neutrally stable systems bifurcations exhibiting long transients 
wolfram suggested category particularly appropriate implementing sophisticated universal computation 
quantitative proposal langton hypothesized ca fraction non quiescent states look table output states correlated generically ca computational capabilities 
particular hypothesized cas certain critical values denoted cas values away able perform complex computations universal computation 
packard goal test hypothesis genetic algorithm evolve cas perform task starting initial population chosen distribution uniform 
generations final populations cas viewed distributions tended cluster close values 
interpreted clustering evidence hypothesized connection computational ability 
ref 
able show theoretical arguments empirical results successful cas task 
value quite different packard quoted values 
argued packard results due artifact particular implementation ga standard versions version ga search obtained results disagreed packard findings roughly accord theoretical predictions high performance cas far example wolfram fourth ca category 
able explain deviations results theoretical predictions 
current came discovery phenomena embedded particle cas ref 

langton value high performance cas corresponds cas wolfram chaotic class 
space time diagrams shown earlier demonstrate chaotic behavior fact puts fixed point category 
researchers performed studies evolving cellular automata task 
sipper ruppin version ga evolve nonuniform cas ca architectures cell uses look table determine state time step 
lattice size individuals ga population look tables making nonuniform ca 
sipper ruppin framework evolve nonuniform cas perform task tasks 
reported discovery nonuniform cas values comparable apar report results value give statistics high performance nonuniform cas evolved 
structural analysis ca space time behavior ga population dynamics 
unclear high fitnesses obtained dynamically evolutionarily 
andre genetic programming algorithm evolve cas perform task 
algorithm discovered particle cas higher apar versus 
obtained look table ca gp andre personal communication larger lattices performance gp close par gp gp cf 
table 
clear improvement due genetic programming representation ca look tables factor related increased computational resources 
example runs fold larger population size fold larger number ics ga runs 
runs find high performance ca average numbers generations half ga computational resources evolutionary search approximately times larger ga runs 
paredis juill pollack experimented coevolutionary learning techniques improve ga search efficiency find embedded particle cas task 
specifically rewarded penalized ics particular densities depending amount information ics densities provided distinguishing fitnesses cas population 
resulted higher percentage ga runs high performance embedded particle cas discovered discovery higher performance cas non coevolutionary runs 
highest performance ca discovered 
unfortunately performance ca high small lattices decays rapidly lattice size gkl rule happens lower performance rule small lattices 
appears result complex domains preclude additional persistent particles convergence answer configurations compared cas gkl ca cas maintains high performance larger lattices 
extended tasks thoroughly global synchronization task performed similar analyses 
notion computation particles particle interactions derives introduced computational mechanics framework differs considerably notions designing cas computation 
example propagating particle signals solution firing squad synchronization problem smith cas parallel formal language recognition computation dimensional cas 
cases particles interactions designed hand explicit behavior ca 
particles explicitly coded cell local state dynamics interactions coded directly ca lookup table 
typically interactions effected relatively large number states site 
steiglitz kamal watson carry ripple adder universal computer constructed game life binary state signals consisting propagating periodic patterns 
particles explicitly designed ride top quiescent background interaction properties carefully hand coded 
steiglitz particle machine steiglitz machine particles primitive states ca cells 
interaction properties explicitly ca rule table 
machines essentially kinds lattice gas automata operate particles directly 
arithmetic cellular automata done sheth nag de 
contrast particles system embedded walls regular domains 
apparent domains discovered filtered 
structures interaction properties emergent properties patterns formed cas 
notably cell possible states structures embedded particles spatially temporally extended complex atomic simple periodic structures 
typically structures extend spatial scales larger ca radius 
example background domain elementary ca eca shown fig 
temporal periodicity time steps spatial periodicity sites markedly larger nearest neighbor coupling 

philosophy view cas systems naturally form patterns regular domains view ga advantage selection genetic variation pattern forming propensities shape perform desired computations 
framework attempt understand behavior resulting cas applying tools computational mechanics framework formulated analyzing pattern forming systems 
result gives high level description computationally relevant parts system behavior 
doing answer wolfram problem problems theory cellular automata wolfram higher level descriptions information processing cellular automata believe framework basis radically new approach wolfram claimed required understanding designing sophisticated computation cas decentralized spatially extended systems 
analysis showed levels information processing occurring iterations evolved high performance cas 
type information storage transmission effected particles type logical operations implemented particle interactions 
second higher level comprised geometric subroutines implemented intermediate scale computations 
analyzed detail important size competition regions low high density 
showed variations particles led types error level 
third final level global computation entire lattice answer time 
level fitness conferred cas 
analyzed detail natural history led emergence computationally sophisticated cas 
evolutionary epochs typically proceed set sequence earlier epochs setting necessary context higher performance ones 
jumps higher epochs facilitated changes adaptively neutral traits appearing earlier generations 
number fruitful directions 
extend lessons learned general evolutionary search algorithms pattern forming dynamical systems 
problem choosing genetic representation dynamical systems helps hinder search play important role addressing 
evolution cas operate dimensional images dimensional strings help address issue open application areas iterative nonlinear image processing 
need develop substantially better analytical descriptions search population dynamics intrinsic structures cas interact dynamics 
evolution cas simplified problem biological perspective evolutionary time scale population dynamics development time scale cas result time scale stochastic dynamical system difficult analytically predict 
predictions say set mutation rate population size effective search centrally important basic understanding evolutionary mechanisms practical applications 
progress quantitatively predicting population dynamics occurring evolution 
adaptation statistical dynamics approach introduced evolution cas important difficult step understanding complicated genotype phenotype maps 
highly relevant search methods complex problems 
quantitative direction estimation computational performance distributed systems higher level descriptions 
results reported described detail refs 
predicting ca computational performance encouraging 
constructing accurate model quantitative analytical model higher level computation cas help understand embedded ca structures contribute individually fitness 
turn allow monitor evolutionary mechanisms lead emergence collective computation coordinated groups functional units 
acknowledgments authors wim calculating ca particle model performances calculating ca performances 
jim hanson wim cris moore erik van helpful discussions 
supported uc berkeley onr santa fe institute onr sandia national laboratory contract au national science foundation iri 
domain filter appendix describe properties construction par domain recognizing filtering transducer 
transducer shown fig 
reads binary ca configurations outputs strings length lattice size domain wall alphabet 
alphabet indicates transducer synchronized see domain wall structures configuration label domains respectively indicates wall domains 
filtered space time diagrams mapped black output symbols map white 
briefly par domain wall transducer constructed follows 
apar domains described simple finite state machines 
machines form recurrent states transducer 
transducer begins read configuration may take steps disambiguate site values identify appropriate domain participating 
working transitions transient states lead recurrent domain states determines transitions start state 
transducer reading site values consistent domains encounters site values consistent values indicating walls number additional site values read determine domain type transducer moved 
transitions determine transducer domain domain transitions 
note due steps required initially read sufficient number site values recognize domains walls process call synchronization transducer may read portion configuration read wraps due lattice periodic boundary conditions 
takes additional pass configuration 
general construction procedure domain wall transducers ref 

andre bennett iii koza 
evolution intricate long distance communication signals cellular automata genetic programming 
artificial life proceedings fifth international workshop synthesis simulation living systems cambridge ma 
mit press 
ck 
evolutionary algorithms theory practice evolution strategies evolutionary programming genetic algorithms 
oxford university press oxford 
berlekamp conway guy 
winning ways mathematical plays volume 
academic press new york ny 
burks editor 
essays cellular automata 
illinois press urbana il 
sipper 
state cellular automaton classifies density 
physical review letters 
chau yan wan siu 
classifying rational densities dimensional cellular automata 
physical review 
churchland sejnowski editors 
computational brain 
mit press cambridge ma 
par domain recognizing filtering transducer 
edge labels indicate transition taken reading configuration site value outputting structural label 
de 
fast parallel arithmetic cellular automata 
complex systems 
colorni dorigo maniezzo 
distributed optimization ant colonies 
varela bourgine editors practice autonomous systems proceedings european conference artificial life pages cambridge ma 
mit press bradford books 

distributed parallel computing 
prentice hall london 
crutchfield 
spatio temporal complexity nonlinear image processing 
ieee trans 
circ 
sys 
crutchfield 
calculi emergence computation dynamics induction 
physica 
crutchfield 
new 
considering emergence 
cowan pines editors complexity metaphors models reality volume xix santa fe institute studies sciences complexity reading ma 
addison wesley 
press 
crutchfield hanson 
attractor vicinity decay cellular automaton 
chaos 
crutchfield hanson 
turbulent pattern bases cellular automata 
physica 
crutchfield mitchell 
predicting behavior evolved cellular automata 
manuscript preparation 
crutchfield mitchell 
evolution emergent computation 
proceedings national academy science 
das 
evolution emergent computation cellular automata 
phd thesis colorado state university fort collins 
das crutchfield mitchell hanson 
evolving globally synchronized cellular automata 
eshelman editor proceedings sixth international conference genetic algorithms pages san francisco ca 
morgan kaufmann 
das mitchell crutchfield 
genetic algorithm discovers particle computation cellular automata 
davidor 
schwefel nner editors parallel problem solving nature ppsn iii volume pages berlin 
springer verlag lecture notes computer science 
deneubourg goss franks franks chr tien 
dynamics collective sorting robot ants ant robots 

meyer wilson editors animals animats proceedings international conference simulation adaptive behavior pages cambridge ma 
mit press 
dolev strong 
authenticated algorithms byzantine agreement 
siam journal computing 

lattice gas methods partial differential equations 
addison wesley reading ma 

dynamics defect ensembles cellular automata 
journal statistical physics 
farmer packard perelson 
immune system adaptation machine learning 
physica 
farmer toffoli wolfram editors 
cellular automata proceedings interdisciplinary workshop 
north holland amsterdam 
dawson 
designing efficient consensus protocols 
barton editors distributed processing pages amsterdam 
elsevier science publishers 
beale editors 
handbook neural computation 
oxford university press new york 
fogel 
evolutionary computation new philosophy machine intelligence 
ieee press new york 
fogelman soulie robert editors 
automata networks computer science theory applications 
manchester university press manchester uk 
forrest hofmeyr somayaji 
computer immunology 
communications acm 
press 
solution density classification problem cellular automata rules 
physical review 
cs 
dimensional media reliable computation 
contemporary mathematics 
cs 
reliable computation cellular automata 
journal computer system sciences 
goldberg 
genetic algorithms search optimization machine learning 
addison wesley reading ma 
gould 
missing term science form 

editor 
cellular automata 
mit press cambridge ma 
hanson 
computational mechanics cellular automata 
phd thesis university california berkeley berkeley ca 
hanson crutchfield 
attractor basin portrait cellular automaton 
stat 
phys 
holland 
adaptation natural artificial systems 
mit press cambridge ma 
second edition edition 
hopcroft ullman 
automata theory languages computation 
addison wesley reading 
crutchfield mitchell 
mechanisms emergent computation cellular automata 
parallel problem solving nature proceedings vth workshop ppsn 
appear 
steiglitz 
compute 
complex systems 
press 
editors 
international workshop parallel processing cellular automata arrays 
akademie verlag berlin 
juill pollack 
coevolutionary learning case study 
proceedings fifteenth international conference machine learning 

cellular automaton model reaction transport processes 
physica 
kung 
systolic architectures 
computer 
land belew 
perfect state cellular automata density classification exists 
physical review letters 
langton 
computation edge chaos phase transitions emergent computation 
physica 
lindgren 
universal computation simple dimensional cellular automaton 
complex systems 
marr editor 
vision computational investigation human representation processing visual information 
freeman san francisco 

overview firing squad synchronization problem 
editor automata networks 
springer verlag 

computations dimensional cellular automata 
annals mathematics artificial intelligence 
mitchell 
genetic algorithms 
mit press cambridge ma 
mitchell 
computation cellular automata selected review 
editor nonstandard computation 
vch 
mitchell crutchfield 
evolving cellular automata perform computations mechanisms impediments 
physica 
mitchell crutchfield 
revisiting edge chaos evolving cellular automata perform computations 
complex systems 
moore 
firing squad synchronization problem 
moore editor sequential machines selected papers reading ma 
addison wesley 
nagel 
particle hopping models traffic flow theory 
phys 
rev 
packard 
adaptation edge chaos 
kelso editors dynamic patterns complex systems pages singapore 
world scientific 
packard 
intrinsic adaptation simple model evolution 
langton editor artificial life pages reading ma 
addison wesley 
paredis 
coevolving cellular automata aware red 
ck editor proceedings seventh international conference genetic algorithms pages san francisco ca 
morgan kaufmann 
rumelhart hinton mcclelland 
general framework parallel distributed processing 
rumelhart mcclelland pdp research group editors parallel distributed processing volume pages cambridge ma 
mit press 
sheth nag 
binary addition cellular automata 
complex systems 
sipper 
evolution parallel cellular machines cellular programming approach 
springer berlin 
sipper ruppin 
evolving architectures cellular machines 
physica 
smith 
simple computation universal cellular spaces 
journal acm 
smith 
real time language recognition dimensional cellular automata 
comput 
system sci 
steiglitz 
programmable parallel arithmetic cellular automata particle model 
complex systems 
steiglitz kamal watson 
embedding computation dimensional automata phase coding solutions 
ieee transactions computers 
toffoli margolus 
cellular automata machines new environment modeling 
mit press cambridge ma 
turing 
computing machinery intelligence 
mind 
van crutchfield 
optimizing evolutionary search independent theory 
computer methods applied mechanics engineering special issue evolutionary genetic algorithms computational mechanics engineering goldberg editor 
submitted 
santa fe institute working 
van crutchfield mitchell 
statistical dynamics royal road genetic algorithm 
theoret 
comp 
sci 
appear 
santa fe institute working 
von neumann 
computer brain 
yale university press new haven ct 
von neumann 
theory self reproducing automata 
university illinois press urbana il 
edited completed burks 

optimum solution firing squad synchronization problem 
information control 
waldspurger hogg huberman kephart stornetta 
spawn distributed computational economy 
ieee transactions software engineering 
weiner 
cybernetics control communication animal machine 
john wiley sons new york 
wellman 
market oriented programming environment application distributed multicommodity flow problems 
journal artificial intelligence research 
wolfram 
statistical mechanics cellular automata 
review modern physics 
wolfram editor 
theory applications cellular automata 
world scientific singapore 

