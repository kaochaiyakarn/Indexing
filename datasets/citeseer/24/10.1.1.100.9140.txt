continuous query processing spatio temporal data streams place mohamed xiong walid aref department computer sciences purdue university west lafayette aref cs purdue edu tremendous increase cellular phones gps devices results highly dynamic environments objects queries continuously moving 
continuous query processor designed specifically highly dynamic environments location aware environments 
implemented proposed continuous query processor inside place server pervasive location aware computing environments scalable location aware database server currently developed purdue university 
place server extends data streaming management systems support location aware environments 
environments characterized wide variety continuous spatio temporal queries unbounded spatio temporal streams 
proposed continuous query processor mainly includes developing new incremental spatio temporal operators support wide variety continuous spatio temporal queries extending semantic sliding window queries deal spatial sliding windows temporal sliding windows providing shared execution framework scalable execution set concurrent continuous spatio temporal queries 
preliminary experimental evaluation shows promising performance continuous query processor place server 
supported part national science foundation iis eia iis iis ccr eia 
copyright held author 
proceedings second workshop spatio temporal database management toronto canada august th 
wide spread cellular phones handheld devices gps technology enables environments virtually objects aware locations 
environments call new query processing techniques efficiently support location aware servers 
traditional database servers servers distinguished characteristics data received moving stationary objects form unbounded spatiotemporal streams large number continuous stationary moving spatio temporal queries delay query response results obsolete answer 
consider query asks moving objects lie certain region 
query answer delayed answer may outdated objects continuously changing locations 
existing techniques handling continuous spatiotemporal queries location aware environments see focus developing specific high level algorithms utilize traditional database servers 
go idea high level algorithms continuous query processor aims modify database engine support wide variety continuous spatio temporal queries 
continuous query processor implemented inside place pervasive location aware computing environments server currently developed purdue university 
place server extends predator relational database management system nile streaming database management system support efficient continuous query processing spatio temporal streams :10.1.1.78.2092
particular continuous query processor place server distinguishing characteristics 
incremental evaluation 
place continuous query processor employs incremental evaluation paradigm continuously updating query answer 
distinguish types updates positive negative updates 
positive negative update indicates certain object needs added removed query answer 

spatio temporal operators 
place continuous query processor employs new set spatio temporal incremental operators side knn operators support incremental evaluation wide variety continuous spatio temporal queries 

predicate sliding windows extend notion sliding windows tuple count windows accommodate predicate windows object expires window appears stream 

scalability 
shared execution paradigm means achieving scalability terms number outstanding continuous spatiotemporal queries 
rest organized follows section highlights challenges faced building continuous query processor place server related challenge 
section overview data model sql language place server 
section presents different methods expiring incoming tuples place server 
incremental processing continuous queries discussed section 
section discusses shared execution concurrent continuous queries 
graphical user interface gui place server section 
section introduces preliminary experimental results place server 
section concludes 
challenges related section go challenges faced building continuous query processor place location aware server 
challenge related 
challenge incremental evaluation continuous queries spatio temporal queries continuous nature 
snapshot queries evaluated continuous queries require continuous evaluation query result invalid change information 
naive way handle continuous queries continuous query series snapshot queries executed regular interval times 
existing algorithms continuous spatiotemporal queries aim optimize time interval instances snapshot queries 
mainly different approaches investigated validity results 
query answer server returns valid time valid region answer 
valid time expired client goes valid region client continuous query reevaluation 
caching results 
main idea cache previous result client side server side 
previously cached results prune search new results nearest neighbor queries range queries 
precomputing result 
trajectory query movement known apriori computational geometry stationary objects velocity information moving objects identify objects nearest neighbors range query trajectory 
trajectory information changes query needs reevaluated 
large number continuous queries reevaluating continuous spatio temporal query large time intervals poses redundant processing location aware servers 
place continuous query processor go idea reevaluating continues spatio temporal queries 
provide incremental evaluation paradigm updates result reported user 
challenge ii wide variety continuous queries existing query processing techniques focus solving special cases continuous spatio temporal queries valid moving queries stationary objects valid stationary range queries 
focus aggregate queries nn queries 
trying support wide variety continuous spatio temporal queries location aware server results implementing variety specific algorithms different access structures 
place continuous query processor avoid tailored algorithms kind continuous spatio temporal queries 
furnish place server set primitive pipelined query operators support wide spectrum continuous spatio temporal queries 
challenge iii large number concurrent continuous queries existing spatio temporal algorithms focus evaluating spatio temporal query 
typical location aware server huge number concurrently outstanding continuous spatiotemporal queries 
handling query individual entity dramatically degrades performance location aware server 
lot research sharing execution continuous web queries see continuous streaming queries see optimization techniques evaluating set continuous spatio temporal queries addressed centralized distributed environments :10.1.1.136.4253:10.1.1.1.4609:10.1.1.19.8866
main idea ship part query processing moving objects server mainly acts mediator moving objects 
centralized environments index tree index structure index queries objects 
index limited aspects performs reevaluation queries tree index time units 
applicable stationary queries 
moving queries spoil index dramatically degrade performance 
challenge iv indexing moving objects queries existing spatio temporal index structures aim modify traditional tree support highly dynamic environments servers 
particular main approaches investigated indexing trajectories existing tree longer update needed 
examples category tpr tree exp tree tpr tree 
modifying deletion insertion algorithms original tree support frequent updates 
examples category include tree frequently updated rtree proposed modifications tree structures highly dynamic environments degrades performance tree results bad performance 
place continuous query processor avoid tree structure 
grid index structure simple update retrieve 
fixed grids space dependent need continuously change index structure continuous insertion deletion 
place server section data modelling sql language place server 
data model subscribing place server moving objects required send location updates periodically place server 
location update client moving object server format oid oid object identifier location moving object twodimensional space 
update timestamped arrival server side 
object stops moving object reaches destination cellular phone shut sends server disappear message indicates object moving 
due highly dynamic nature location aware environments infinite size incoming spatiotemporal streams store incoming data 
place server employs level storage hierarchy 
subset incoming data streams stored memory buffers 
memory buffers associated outstanding continuous queries server 
query determines tuples needed buffer tuples expired deleted buffer 
second keep disk storage keeps track reading moving object query 
update disk storage time receive update moving objects sample input data chosing kth reading flush disk 
cache readings moving objects queries flush secondary storage time units 
data secondary storage indexed simple grid structure 
third time units take snapshot disk database flush repository server 
repository server acts multi version structure moving objects supports historical queries 
stationary objects gas stations hospitals restaurants preloaded system relational tables infrequently updated 
extended sql syntax place server extends tor nile extend sql language provided systems support spatio temporal operators :10.1.1.78.2092
mainly add inside knn operators support continuous range queries neighbor queries respectively 
continuous query registered place server sql register query query name select select clause clause clause inside inside clause knn knn clause window window clause register query statement registers continuous query place server query name identifier 
select clause clause clause inherited predator database management statement 
window clause inherited nile stream query processor support continuous sliding window queries :10.1.1.78.2092
continuous query dropped form system sql drop query query name 
inside clause represent stationary rectangular circular range queries specifying corners center radius query region respectively 
parameter inside clause set query moving second parameter represents id focal object query 
similarly knn clause represent stationary moving nearest neighbor queries 
tuple expiration unbounded incoming spatio temporal streams infeasible store incoming tuples 
input tuples may buffered memory limited time 
choice stored tuples mainly query dependent store tuples interest 
queries continuously changing mechanism expire delete stored tuples replace tuples relevant outstanding continuous spatio temporal queries 
place continuous query processor employ types tuple expiration temporal expiration spatial expiration predicate expiration 
temporal expiration data stream management systems concept temporal expiration mechanism answer continuous sliding window queries 
sliding widow query involves time window object timestamp current sliding window outstanding query memory buffered associated buffer example sliding window query submitted place server continuously report number cars passed region hour 
select count objectid type car inside window hour notice buffers incoming tuples previous hour 
tuple expired deleted query buffer goes sliding time window hour old 
spatial expiration place server introduces new type expiration depends spatial location moving objects timestamps 
incoming tuple stored memory buffer associated query satisfies spatial window region example spatial expiration query continuously report number cars certain area 
notice concerned actual current number cars number cars history 
sql similar removal window statement 
predicate expiration due nature spatio temporal streams forms tuple expiration may arise 
example consider query moving object continuously report elapsed time consecutive readings 
query contains self join objects stream moving objects self joined object identifier 
query buffer needs maintain latest reading moving object 
reading certain object reported previous reading expired 
call kind expiration predicate mainly dependent query semantic 
incremental evaluation avoid reevaluating continuous spatio temporal queries employ incremental evaluation paradigm place continuous query processor 
main idea report changes answer evaluation time 
employing incremental evaluation place server achieves goals fast query evaluation compute updates answer answer 
typical location aware server query results sent users satellite servers 
limiting amount transmitted data updates query answer saves network bandwidth 
encapsulating incremental algorithms physical pipelined query operators limiting tuples go query pipeline updates reduces flow pipeline 
efficient query processing achieved 
realize incremental evaluation processing place server go main steps 
define high level concept incremental updates defining types updates positive negative updates 
second encapsulate processing incremental algorithms pipelined query operators 
third modify traditional pipelined query operators distinct join deal concept negative tuples :10.1.1.136.4253
positive negative updates incremental evaluation achieved updating previous query answer 
mainly distinguish types updates positive updates negative updates 
positive negative update indicates snapshot time snapshot time incremental evaluation range queries certain object needs added removed query answer 
query answer represented form qid olist qid query identifier olist query answer 
place server continuously updates query answer updates form qid oid indicates type update oid object identifier 
gives example applying concept positive negative updates set continuous range queries 
snapshot database time moving objects continuous range queries 
answer queries time represented 
time objects queries change locations 
result place server reports updates 
spatio temporal incremental pipelined operators alternative approaches utilized implementing spatio temporal algorithms inside place server sql table functions encapsulating algorithms physical query operators 
straightforward method pushing query predicates table functions performances limited approach give flexibility optimizing issued queries 
place server encapsulate algorithms inside physical pipelined query operators part query execution plan 
having pipelined query operators achieve goals spatio temporal operators combined operators distinct aggregate join operators support incremental evaluation wide variety continuous spatiotemporal queries 
pushing spatio temporal operators deep query execution plan reduces number tuples query pipeline 
reduction comes fact spatio temporal operators act filters operators 
flexibility query optimizer multiple candidate execution plans produced 
main idea spatio temporal operators keep track reported answer query query buffer termed answer 
newly incoming tuple perform tests test part previously reported answer 
test ii qualify part current answer 
results tests distinguish cases case part answer qualify part current answer 
process updates previously reported result processed 
case ii part answer qualify part answer anymore 
case report negative update query operator 
negative update indicates spatially expired answer 
case iii part answer qualifies part current answer 
case report positive update query operator 
case iv part answer qualify part current answer 
case effect traditional operators having spatio temporal operators bottom middle query evaluation pipeline requires operators equipped special handling negative tuples 
nile query processor handles negative tuples pipelined operators follows selection join operators handle negative tuples way positive tuples :10.1.1.78.2092
difference output form negative tuple 
aggregates update aggregate functions considering received negative tuple 
distinct operator reports negative tuple output corresponding positive tuple reported result 
details handling negative tuples various query operators reader referred :10.1.1.136.4253
scalability place continuous query processor exploits shared execution paradigm means achieving scalability terms number concurrently executing continuous spatio temporal queries 
select id location inside client gui server gui select id location inside snapshot place client server spatial join file scan file scan file scan file scan moving objects moving objects moving objects moving queries local query plan range queries global shared plan range queries shared execution continuous queries 
main idea group similar queries query table 
evaluation set continuous queries modelled spatial join moving objects moving queries 
similar ideas shared execution exploited niagaracq web queries psoup streaming queries :10.1.1.136.4253:10.1.1.1.4609:10.1.1.19.8866
gives execution plans simple continuous spatio temporal queries find objects inside region find objects inside region 
shared execution execution plan 
shared execution collection spatio temporal range queries expressed place server issuing continuous query select id id location inside region user interface place gives snapshots client server graphical user interface gui place 
client gui simulates client device users 
users choose type query list available query types 
spatial region query determined map area interest bold plotted rectangle map 
pressing submit button client translates query sql language transmits place server 
query submitted server result appears query list bottom 
client send multiple queries different types place server 
place server gui purpose administration server side 
main idea keep track concurrently executing continuous queries type 
processed queries parameters displayed bottom left screen 
addition server gui contains regional map showing movement objects parameters selected queries 
performance evaluation section preliminary experiments show promising performance continuous query processor place server 
map greater lafayette usa 
answer size kbytes incremental evaluation complete answer update rate objects moving objects answer size kbytes answer size network generator moving objects generate set moving objects moving queries 
output generator set moving objects move road network city 
choose points randomly consider centers square range queries 
size incremental answer compares size incremental answer returned utilizing incremental approach size complete answer 
server buffers received updates moving objects queries evaluates seconds 
gives effect number moving objects reported change location seconds 
size complete answer constant orders magnitude size worst case incremental answer 
query side length varies 
size complete answer increases dramatically times incremental result 
saving answer size directly affects communication cost server clients 
pipelined spatio temporal operators consider query continuously report trucks 
stationary moving range query 
high level implementation query selection operator selects trucks 
high level algorithm implementation take selection output incrementally produce query result 
encapsulation inside algorithm physical operator allows flexible plans 
compares high level implementation query pipelined operators stationary moving queries 
selectivity queries varies 
selectivity selection operator 
measure comparison number tuples go query evaluation pipeline 
algorithms implemented application level performance affected incremental evaluation complete answer query side length query size tuples pipeline stationary pipelined query moving pipelined query application level query selectivity inside operator pipelined operators 
selectivity 
inside pushed selection acts filter query evaluation pipeline limiting tuples pipeline incremental updates 
inside selectivity pushing inside selection greatly affects performance 
continuous query processor place pervasive location aware computing environments server database server location aware environments currently developed purdue university 
place server extends predator database management system nile stream query processor deal unbounded spatio temporal streams 
addition temporal tuple expiration defined sliding window queries maintain forms tuple expirations spatial expiration 
efficiently handle large number continuous queries employ incremental evaluation paradigm contains defining concept positive negative updates encapsulating algorithms incremental processing pipelined spatio temporal operators modifying traditional query operators distinct join deal negative updates comes spatio temporal operators 
shared execution employed continuous query processor means achieving scalability terms number concurrently continuous queries 
preliminary experimental results show promising performance place continuous query processor 
acharya franklin zdonik 
disseminating updates broadcast disks 
vldb 
aref prabhakar 
pervasive location aware computing environments place 
www cs purdue edu place 
jensen 
nearest neighbor reverse nearest neighbor queries moving objects 
ideas 
brinkhoff 
framework generating network moving objects 

cai hua cao 
processing range monitoring queries heterogeneous mobile objects 
mobile data management mdm 
chandrasekaran franklin 
streaming queries streaming data 
vldb 
chandrasekaran franklin :10.1.1.136.4253
psoup system streaming queries streaming data 
vldb journal 
chen dewitt tian wang :10.1.1.136.4253
niagaracq scalable continuous query system internet databases 
sigmod 
liu 
distributed processing continuously moving queries moving objects mobile system 
edbt 
guttman 
trees dynamic index structure spatial searching 
sigmod 
gunopulos 
line discovery dense areas spatio temporal databases 


liu aref prabhakar 
query processing broadcasted spatial index trees 

aref franklin elmagarmid :10.1.1.136.4253
efficient execution sliding window queries data streams 
technical report tr csd purdue university department computer sciences dec 
franklin aref elmagarmid 
scheduling shared window joins data streams 
vldb 
ali aref elmagarmid xiong :10.1.1.78.2092
nile query processing engine data streams demo 
icde 
samet smith 
continuous nearest neighbor queries continuously moving points updates 
vldb 
kwon lee lee 
indexing current positions moving objects lazy update tree 
mobile data management mdm 
mehrotra 
dynamic queries mobile objects 
edbt 

lee hsu jensen teo 
supporting frequent updates trees bottom approach 
vldb 

continuous query processing spatio temporal databases 
proceedings icde edbt phd workshop 
aref prabhakar 
scalable location aware services requirements research issues 
gis 
aref 
spatio temporal access methods 
ieee data engineering bulletin 
xiong aref 
sina scalable incremental processing continuous queries spatio temporal databases 
sigmod 
xiong aref prabhakar 
place query processor handling real time spatiotemporal data streams demo 
vldb 
prabhakar xia aref 
query indexing velocity constrained indexing scalable techniques continuous queries moving objects 
ieee trans 
computers 
pirahesh 
sql open heterogeneous data access 
sigmod 
pirahesh krishnamoorthy lapis tran 
heterogeneous query processing sql table functions 
icde 
jensen 
indexing moving objects location services 
icde 
jensen leutenegger lopez 
indexing positions continuously moving objects 
sigmod 
seshadri 
predator resource database research 
sigmod record 
song roussopoulos 
nearest neighbor search moving query point 

sun papadias tao liu 
querying past spatio temporal databases 
icde 
tao considine li papadias 
spatio temporal aggregation sketches 
icde 
tao papadias shen 
continuous nearest neighbor search 
vldb 
tao papadias sun 
tpr tree optimized spatio temporal access method predictive queries 
vldb 
tao sun papadias :10.1.1.57.9705
analysis predictive spatio temporal queries 
tods 
terry goldberg nichols oki 
continuous queries append databases 
sigmod 
xiong aref prabhakar :10.1.1.1.5353
scalable spatio temporal continuous query processing location aware services 
ssdbm june 
zhang zhu papadias tao lee 
location spatial queries 
sigmod 
zheng lee 
semantic caching location dependent query processing 

