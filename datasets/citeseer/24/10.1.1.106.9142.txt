visual language theory human computer interaction perspective hari narayanan roland technical report cse september visual information intelligence interaction research group department computer science engineering university alabama usa www eng edu department cse research vi rg vi rg html revised version technical report appears chapter pp 
marriott meyer eds visual language theory springer verlag publishers berlin 
author correspondence addressed 
email narayan eng edu visual language theory human computer interaction perspective hari narayanan roland main reason visual languages far convenient user traditional textual languages 
visual languages intended computers humans ought designed analyzed perspective computational resource requirements equally importantly perspective languages cognitively usable useful 
theoretical practical research visual languages need take account full context coupled human computer system visual language facilitates interactions computational cognitive parts 
implies theoretical analyses ought address issues comprehension reasoning interaction cognitive realm issues visual program parsing execution feedback computational realm 
human aspect crucial visual languages advocate correspondingly broadened scope inquiry visual language research 
chapter describe aspects human visual languages ought important considerations visual language research design summarize research related fields software visualization diagrammatic reasoning addresses issues 
framework consistent broadened scope visual language research proposed categorize discuss formalizations implemented systems 
course showing sample current fits framework open issues fruitful directions research identified 
visual languages 
various disciplines human inquiry science arts humanities answer question obvious 
visual systems evolved fine tuned able perceive patterns exist brains sense recognition interpretation 
conversely brains adept converting thoughts visual representations constrained conventions executed depictions governed artist 
fact visual thinking deeply embedded psyche culture visual languages development textual ones tversky 
ease create comprehend visual representations surely significant factor motivating research area visual languages articulated different ways blackwell 
research visual programming languages past 
human visual system masks computational complexity parsing interpreting operationalizing semantics carried visual representations simplest diagrams complex real world scenes 
computers capable vision human scale 
machines capable generating visual representations depict thoughts ideas direction human 
chapters book demonstrate difficulty formalizing visual languages computational properties analyzed corresponding parsers interpreters compilers built assurance run reasonable time consume reasonable resources 
visual languages usable computers humans 
computers deal textual languages generated grammars attractive formal properties 
programming languages research area new programming languages sprout fashionable fade away replaced newer ones regular intervals 
belief primary reasons visual language research benefits languages provide human user enabling humans computers communicate interact visual representations depicted computer screen 
suggested important goal visual programming languages provide medium communication fact program executed computer just nice side effect abelson sussman sussman 
cognitive issues equally relevant conventional programming languages programming task carried humans design analysis programming languages driven issues tractability efficiency usability comprehensibility 
exceptions cobol result speaks 
cognitive properties language typically investigated design widespread 
slightly changed scripting languages users targeted new group programmers 
programming languages primarily intended computers visual languages primarily intended humans 
central role visual languages usable humans computers may turn tools communication interaction 
implies visual language theory requires broader interdisciplinary basis compared programming language theory 
fisher state acknowledging cognitive reality language employed programmers users recognize visual programming introduce new paradigm despite pervasiveness cognitive benefit assumption visual languages community blackwell lack research back 
side literature question validity belief graphical syntax increase comprehensibility programmability allen green petre green petre bellamy petre 
visual language graphical syntax incomprehensible terse textual language provide justification additional complexity language introduces computational side 
words visual languages general difficult parse interpret need demonstrate concomitant payoff cognitive side 
theoretical practical research issue executable visual languages may remain confined narrow application areas graphics obviously sense 
leads argue visual language theory design progress human computer interaction context afford confine computational cognitive aspects 
noted research visual languages currently broadening visual programming languages opportune time visual language theory researchers address issues relating cognitive utility visual languages computational properties 
ii 
visual languages 
look main reason visual languages enabling visual communication interaction evident perspective human computer interaction visual languages encompass broad class entities subjects research variety research communities common 
examples interdisciplinary areas software visualization diagrammatic reasoning 
research software visualization algorithm animation strives define visual languages computers generate order depict static structure dynamic semantics programs algorithms meaningful way 
researchers diagrammatic reasoning looked formalizing language diagrams characterizing humans represent reason diagrams programming computers understand reason diagrams 
variety related terms containing root word visual appear literature subtly different meanings 
authors example price baecker small petre rightly observe correct restrict terms visual visualization visible images 
mean facilitating formation mental picture 
purposes discussion chapter constrain visual mean having representation internal external conveys information virtue topological geometric visual properties humans see explicitly exclude purely textual representations 
similar terms chapter short definitions explicate meanings order 
visual languages languages alphabets consisting visual representations human human human computer communication 
visual programming visual representations communicate data operations computer 
underlying programming language may may visual 
visual programming language programming language alphabet visual representations 
software visualization generation display visual representations convey static dynamic aspects software including data structures code algorithms humans 
algorithm animation generation display animations dynamic visual representations convey humans algorithms operate data 
diagrammatic representations visual representations encode convey information referents true analogs entities represented 
diagrammatic reasoning processes comprehending making inferences diagrammatic representations 
chapter term visual languages include programming languages syntax visual representations visual programming computer visual languages designed convey aspects underlying computation declarative specification software visualization algorithm animation human visual languages amenable formalization computer implementation diagrammatic representation reasoning 
iii 
scope visual language research book visual language theory viewed multiple perspectives 
expansion scope necessary timely 
necessary human dimension 
believe central issue visual language theory design characterization computationally tractable cognitively effective visual languages 
tools logic language theory applied characterize computational properties visual languages 
measure cognitive effectiveness 
expanding scope inquiry include areas help visual language research cognitive questions design effective visual representations raised answered completely researchers areas 
areas potential visual language research 
expansion scope timely 
informal survey papers related visual language theory appearing previous volumes proceedings ieee symposia visual languages indicates emphasis logic computation balance computation cognition 
cognitive questions generally ignored implicit assumption researchers areas psychology programming address 
result clear investment visual language community designing characterizing multitude visual programming languages decade area progress major goals programmers users tedious textual programming providing intuitive useful visual tools programming 
perceived lack progress led prominent researcher conclude prematurely opinion convincing exciting emerged efforts visual programming am persuaded brooks 
years criticism optimistic note struck green petre believe respects visual programming languages offer substantial gains conventional textual languages human computer interaction aspects developed visual languages abound human endeavors enjoy prominence comparable nonvisual languages 
find visual languages formally defined terms grammar languages immensely successful facilitating human human human computer communication 
research areas developed visual languages instance mathematicians commutative diagrams physicists diagrams computer scientists describe data structures boxes arrows 
desktop metaphor highly successful visual language interacting operating system 
familiar language extremely efficient tool communication reasoning 
visual languages extremely useful people certain tasks degree computers important note replace textual propositional languages 
comic strips get away completely text 
need choose visual textual languages extremes spectrum spanning text illustrated text annotated pictures purely visual representations 
current literature visual language theory visual languages visualizations originally textual languages 
logic programming languages robertson finite state automata dinesh sk examples 
formalizing languages useful visual forms advantageous textual ones languages may help understand properties human visual languages powerful 
chapter look visual languages human computer interaction perspective 
restrict visual languages interesting context computers ignore large class visual languages especially originating visual arts goodman 
languages cognitively inspired necessarily result visualizing formal language 
discuss characteristics argue current theories visual languages need extended include larger interesting class languages 
aim chapter provide sample ideas related areas believe useful furthering visual language theory encompassing computational cognitive aspects 
goal sketch beginnings corresponding integrated framework 
iv 
cognitive utility visual languages visual languages interesting people 
understand languages better need take brief look commonplace ways people computers utilize communication interaction reasoning 
iv direct manipulation direct manipulation allows users execute actions directly interacting visually displayed objects having describe action 
instance marking file deletion graphical user interface done dragging file icon icon depicting trash 
executes command move file trash folder 
direct manipulation users depict operations desire describe command interpreter translates command actual action frank foley 
cognitive benefits direct manipulation arise elimination need move vastly different representations natural visual representation metaphorical desktop permits interactive gestures textual program specifies objects behaviors visible screen 
graphical user interfaces direct manipulation may viewed visual languages humans interact computers 
iv visualization information visual representations higher order relations accessible human intuition tufte 
graph function characteristics explicit table values function informationally equivalent 
printed textual descriptions frequently illustrated pictures serve exemplify ideas contained text provide different representations information complement text describes 
cases visual views descriptive representations allow viewer discover relations characteristics hidden textual representation 
particularly true complex hypermedia information structures world wide web various graphical visualizations cone trees robertson card mackinlay developed 
information visualization area concerned developing visual languages communicating information structures humans allowing interact structures direct manipulation 
iv visualization software visualizing static dynamic characteristics programs facilitate comprehension debugging user price baecker small 
data structures program control flows easier understand visualized graphs flowcharts 
hierarchical file structure operating system easily visualized directory tree folders 
dimensional spatial arrangement nested transparent cubes proposed freeman gelernter jagannathan means visualizing program structure execution 
program visualization essentially inverse parsing visual programming language 
generates visual language depicts information syntactic semantic specifications program way facilitates human observer comprehension 
iv diagrammatic representation reasoning current visual language theory characterized specifying syntax semantics visual language propositional descriptions 
reason visual formalisms pervasive human enterprise facilitate easy compact representations information cumbersome adequately describe propositional descriptions 
visual relations properties implicit propositional representations require extensive reasoning deduced visual representations display explicitly times larkin simon 
visual representations diagrams facilitate situated reasoning serendipitous inferences inferences recognition prediction mental visualization cueing prior knowledge possible narayanan motoda 
easy humans inferences pictorial displays larkin 
furthermore visual representations typically represent spatial geometric properties referents isomorphic way modifications properties constituents representation reason effects real world processes represented objects participate narayanan motoda 
representations especially suitable reasoning mental simulation 
propositional descriptions tend loose advantages 
kind visual representation diagrammatic representation role reasoning subject research interest narayanan glasgow narayanan chandrasekaran 
diagrammatic representations different propositional representations visual properties constituent units representation contribute semantics diagrammatic representation semantics constituent units 
researchers area developed formal characterizations diagrammatic representations heterogeneous logic exploits propositional diagrammatic representations barwise etchemendy hammer shin 
iv graphical simulations notion diagrammatic reasoning combined direct manipulation interactive graphical simulations 
important tool educational research cacm 
user friendly tools creating simulations available 
examples tm apple computer smith cypher spohrer star logo mit media laboratory resnick agentsheets university colorado repenning sumner 
simulations employ direct manipulation techniques specify model simulated initial conditions produce visualizations time varying processes predator prey relationships ecosystem 
users directly manipulate objects simulation having access internal representations 
dynamic visual representations animations especially suited display temporal information students quite observing sequences moving pictures 
cognitive benefits interactive graphical simulations arise elimination need move vastly different representations natural dynamic visual representations processes simulated underlying descriptive specifications 
framework analysis synthesis visual languages section propose framework consists model visual language corresponding taxonomy issues expected useful discourse design new visual languages characterizations comparisons existing ones 
aim propose preliminary taxonomy breadth believe visual language research requires open discussion extension 
fact important feature taxonomy extended research progresses 
founded taxonomy serve purposes 
provide concise picture central issues field facilitating characterization existing spur additional research pointing areas current research addressed 
taxonomy needs derived principled way modifications require complete reordering 
section describes systematic approach took deriving expands element discusses sample pertaining literature 
noted purpose illuminate distinctions complete survey 
open issues pointed fruitful avenues research field 
consider visual languages usable computers humans 
objects interest theoretical practical investigation languages 
computational system cognitive system visual language 
language may specified formally grammar means 
embodied visual representations communication 
visual representations encode convey information appear interface visual display 
communication requires comprehension inference feedback 
differences architecture processes sides display quite different 
computational side implies processes visual parsing interpretation compilation program execution 
cognitive side implies processes visual perception comprehension reasoning information 
furthermore systems construct manipulate visual representations display convey results processes 
success visual language model rests criteria computational tractability cognitive effectiveness 
simple complete model visual languages human computer interaction illustrated provides conceptual basis defining top level structure taxonomy issues propose 
perception parsing interpretation reasoning execution creation manipulation creation manipulation cognition visual display 
model visual language computation taxonomy consists major categories representation information cycle interaction evaluation number minor categories major ones subdivided see 
category detail additional subdivisions 
useful starting point providing shared vocabulary discussions relative comparisons visual languages 
additional benefit revealing areas sparsely covered indicating potentially fruitful avenues research 
clearly complete taxonomy formal system characterizing comparing research efforts taxonomy required excellent avenue research 

representation information application domain static syntax static semantics dynamic syntax dynamic semantics 
usage cycle interaction granularity visual communication computational aspects cognitive aspects 
evaluation computational cognitive 
top levels taxonomy visual language research taxonomy proposed 
attempts classification prior approaches generally emphasize measures 
myers describes operational approach classification programming styles programming example visual programming kinds visualizations program visualization visualizing static data visualizing dynamic data interaction styles batch mode interactive 
shu uses dimensions level language scope generality extent meaningful visual expressions utilizes characterize number languages 
menzies uses dimensions purpose visual expressions design visual programming system assess languages 
chang categorizes visual languages terms type activity support visual interaction visual programming visual information processing iconic visual information processing 
selker taxonomy issues analyzing designing visual languages major categories visual alphabet visual syntax interaction structure coverage 
rigorous approach marriott meyer measures expressiveness parsing complexity classify visual language grammars 
hope past efforts stimulate additional research lines resulting development taxonomies revisions existing ones integration multiple taxonomies 
contribute developing better understanding terms visual language theory practice ought going 

representation information top level category representation information see describes nature representations language utilizes characterizing contents visual display 
elements visual language visual representations called visual sentences 
general visual representations need convey dynamic time varying information data changes program executes static information 
central issues information representation represented represent associate representation represented 

representation information domain application domain type discrete continuous generality states objects attributes relations state transitions objects attributes relations static syntax visual sentences primitives dimensions relations primitive type graphical mixed mixed textual primary graphical secondary notations mixed graphical primary textual secondary notations static semantics mapping domain range type specification dynamic syntax visual sentence transformations discrete continuous dynamic semantics mapping domain range type specification 
subcategories information representation key aspect representation represented 
visual language application domain ad domain discourse 
domains typically contain objects attributes relationships state domain described 
ads interest dynamic 
states state transitions interest domains 
dynamic processes domain result changes state creation deletion modification objects attributes relationships 
ads may discrete continuous 
elements dynamics discrete domain characterizable terms discrete states transitions 
example file system objects files may attributes author creation date access rights relations 
state file system describable finite set system changes state discrete transitions describable continuous domain hand state changes fluid making difficult distinguish discrete states transitions 
ecosystem pond example 
systems semantically dense goodman require explicit abstraction quantization order describable terms generality ad important dimension 
visual languages tailored specific ad 
weather maps circuit diagrams electrical engineers examples 
algorithm animation systems balsa brown sedgewick automatically create display visual language depicts operation single algorithm 
represent class domains 
pictorial janus kahn saraswat prograph carver examples visual programming languages represent variety concurrent dataflow computations respectively 
american sign language visual language general 
issues represent information syntax associate representation represented semantics 
different visual languages different graphical alphabets rules combination represent information entities ad static syntax semantics allow different kinds transformations convey changing information dynamic syntax semantics 
static syntax visual language may viewed set valid visual sentences vl vs 
vocabulary visual sentences constructed consists set visual primitives set visual dimensions position orientation size shape color texture set visual relations exist graphical primitives 

visual sentence consists set primitives drawn primitive having set meaningful visual dimensions drawn set ary visual relations exist primitives 
broad characterization static syntax visual language 
may formally specified grammar generates valid visual sentences language rules accept reject decision visual sentence 
visual languages may classified terms visual primitives dimensions relations employ 
primitives language may purely graphical mixed graphical primitives textual symbols purely textual 
spectrum lie completely visual languages completely textual languages 
languages symbols kind secondary notations price baecker small green petre fall middle 
textual languages utilize graphical secondary notations text uses color convey additional information graphical languages utilize textual secondary notations map labels intermediate points spectrum 
kind primitives language syntax purely graphical graphical textual secondary notations textual graphical secondary notations characterize visual languages 
drawings cave dwelling ancestors purely graphical 
current human visual languages visual programming environments mixed notations 
furnas visual programming languages purely graphical notations 
variety dimensions shape geometry color texture locations variety visual relations carry meaning 
number studies attempted enumerate classify visual representations lohse dimensions relations bertin goel goodman 
systematic categorization categorization characterize compare visual languages terms visual syntax done 
believe fruitful area visual language research 
static semantics sentences visual language represent states ad 
words particular state world domain describable terms set objects attributes relations mapped corresponding visual sentence consisting graphical primitives visual dimensions visual relations 
domain range type mapping important 
may toone 
mappings common 
example algorithm animation systems map data items geometric primitives circles size data items areas primitives relative positions data items data structure relative spatial locations corresponding graphical primitives 
kinds mappings may difficult comprehend training established conventions 
venn diagrams represent mapping single circle represents elements ad 
network tree diagrams mapping connected relation represented line 
different kinds vs mapping examined gurr provides characterization visual representations terms properties soundness completeness 
andries 
propose graph data structures representing vs represents represented relation maps 
tufte engelhardt colleagues suggest principles mapping different kinds information nominal categorical ordinal quantitative topological spatial visual primitives dimensions relations 
mapping captures static semantics language 
formal specification cognitive computational system generate visual sentence depict state ad interpret visual sentence terms state ad represents 
number researchers addressed issue formally specifying static semantics visual language 
meyer describes specification scheme uses mixed vocabulary consisting textual symbols partially specified pictures suitable human comprehension 
haarslev presents theoretical framework combines topology spatial relations description logics developing syntactic semantic specifications static visual sentences 
advantage approach allows construction visual language editors verify soundness specifications visual language developed framework parse visual sentences language 
cohn show spatial logic describe syntax procedural semantics visual language having translate visual language textual specifications written 
complete treatment various approaches marriott meyer wittenburg 
interesting issue consider development declarative specifications syntactically semantically dense goodman visual languages 
requires certain aspects visual sentences irrelevant discarding explicitly describing certain 
see consider developing set assertions describe mona lisa 
process results certain information loss cognitive perspective discarded irrelevant developer specification may interpreted relevant meaningful 
side coin computational system rely declarative specifications semantics necessary visual language design restrict depicted visual sentences language describable symbols specification language 
implies visual sentences language form notational system richer analog system goodman 
dynamic syntax dynamic syntax visual language specifies visual sentences may transformed 
transformations may include creating deleting modifying graphical primitives changing attributes graphical objects changing spatial relations graphical objects visual sentence 
important issue dynamic syntax specification changes displayed visual display 
visual display update may discrete new visual representation replaces old continuous old representation smoothly transforms new 
animations examples 
suitable visual language notational suitable visual language analog raymond corresponding ad continuous 
practice animations employed corresponding ad continuous algorithm animations contributes cognitive effectiveness merely irrelevant potentially distracting feature determined 
rewrite rules systems agentsheets repenning sumner furnas utilize examples dynamic syntax specifications 
dynamic syntax implicitly specified graphical transformation procedures case computer animations produced visualization systems visual feedback graphical user interfaces 
dynamic semantics transformations visual sentences represent state changes ad 
conditions domain state transitions occur affect objects attributes relations may mapped conditions visual sentence transformed nature transformation 
words mapped domain range type mapping important 
may 
dynamic semantics language captured mapping 
formal specification cognitive computational system transform visual sentence depict dynamic process ad interpret visual sentence transformation terms corresponding state change ad 
research developing specifications dynamic semantics visual languages intended human comprehension computer execution 
typically semantics implicitly captured graphical procedures rewrite rules employed system 
repenning discusses extending rewrite rules explicitly capture dynamic semantics 
continuous ads mapping requires quantization continuous state changes continuous domain represented discrete visual language specifying dynamic syntax visual display continuously changed 
example time display employed digital watches simulate analog dials liquid crystal displays second hand meaningful locations dial 
option preferable cognitive effectiveness visual language syntactically semantically dense goodman faithfully reflecting continuous nature ad 
create computational difficulties 
computational properties visual languages explored 
typically mapped mapped mapped mappings possible 
priori reason mapping domain statics dynamics static dynamic visual language syntax 
static syntax visual language includes visual sentences 
dynamic syntax captures visual sentences may transformed 
describes representations 
represented ad includes states domain terms objects attributes relations static semantics domain state transitions dynamic semantics domain 
central issue visual language designer represent static dynamic semantics ad static dynamic syntax visual language 
possible mappings vs vs vs vs 
commonly occurring mappings 
example visual language representation microworld consisting moving balls stationary walls maps balls walls circles rectangles display maps motions balls corresponding motions circles display 
example blinking flashing graphical objects display representing objects ad user attention needs drawn 
example arrows static graphical objects denote ad dynamics motion 
possibilities include possible mappings vs vs describable types entities 
mapping may turn providing total possibilities 
static dynamic syntax semantics visual languages may characterized terms application domain visual sentences purely graphical mixed semantic mappings kinds mappings define language semantics 
vs vs map called consistent mapping 
consider example barwise etchemendy mixed visual language consisting geometric diagrams logic sentences 
interactive language students solve logic problems assisted computer 
ad configurations geometric objects space 
state domain configuration describable set objects 
relevant attributes shape spatial location 
inter object relationships interest front left language null 
objects attributes may change 
instance shape attribute may initially unknown determined inference 
similarly spatial locations change 
changes constitute location changes results inter object relation changes consists geometric shapes drawn plane display symbols constituting logic sentences displayed screen 
uses mixed vocabulary 
includes shape location 
includes spatial relations stated 
may visually depicted textually specified 
semantic mapping consistent 
just implementation notion heterogeneous logic symbols pictures erwig meyer describe design programming environment implements notion heterogeneous programming integrates visual textual aspects 
heterogeneous visual programming language extension textual programming language allows programmer replace parts textual program diagrams 
system deals static programs 
case ad original textual programming language consists symbols language 
visual sentence consists set domain specific visual primitives 
elements vs mapping determined designer textual programming language 
mapping implemented set productions translate diagrams textual equivalents 
translated text merged text rest program compiled executed 
signature morphism proposed wang colleagues wang lee wang formally derived mapping signatures visual sentence state ad specifying meaning sentence 
signature consists set types partial order set functions including instances types attributes set predicates specifies relations instances 
signature morphism consistent mapping 
authors propose static semantics pictures approach appears suitable dynamic semantics 
hand douglas douglas describe technique called visualization mapping application domain algorithms software visualization language derived empirically 

cycle interaction far discussed structure meaning visual languages syntax semantics visual sentences transformations 
second central issue usage visual languages 
requires specification visual language serves medium communication computational agent cognitive agent 
way modeling consider cycles interaction involved visual language 
cycle interaction term proposed norman describe cognitive processes take place cycle activity ongoing episode human computer interaction 
extend notion include computational cognitive processes visual languages 
provides detailed view category 

usage cycle interaction granularity visual communication user computer computer user ways computational aspects parsing grammars rewrite rules detecting emergent visual objects context sensitivity ambiguity interpretation compilation type token semantic density coreference resolution execution executable specifications generation transformation cognitive aspects perception detecting emergent visual objects ambiguity comprehension realism visual cues coreference resolution inference prior knowledge mental visualization creation manipulation 
subcategories interaction cycle bottoni colleagues bottoni developed theoretical characterization visual languages interaction communication perspective illustrated 
consider visual languages consisting visual sentences specified terms image display description image means description programmatic implication interpretation function image description materialization function reverse direction 
framework visual languages characterized terms components image visual sentence interpreted terms programmatic components programmatic component associated image component visible display user interact receive feedback image component visible 
wittenburg describe practical application visual language theory supports cycle interaction 
users system desire aggregate hide parts process flow diagrams select parts wish include aggregation 
system uses relational grammar expand user selection structured component aggregated highlights component 
users free operate hide view window granularity non interactive visual language requires cycle interaction user specifies program executed visual language computer interprets compiles program executes displays results user views results 
extreme highly interactive visual languages may involve cycles interaction occurring finer granularity entire program case 
granularity cycle interaction criterion comparing various visual languages hci perspective 
highly successful macintosh desktop depicts state file system user user communicate actions operating system gestures dragging file icon trash executed computer resulting state displayed graphically 
visual language fine granularity interaction 
communication visual language may way way communication interaction cycle 
visual programming language may allow user create communicate program computer visual representations 
program may non visual results execution may conveyed back user textually 
software visualization systems algorithm animators hand require users textual means specifying visualizations result executing visual language depicts program execution benefit user 
visual languages wittenburg virtual reality systems designed way communication 
model see additional aspects interaction cycle important computation cognition subdivided terms computational cognitive processes involved cycle 
computational aspects computational processes involved parsing visual sentence interpreting compiling executable code executing transforming visual sentence visual display execution results 
visual languages intended way communication generation relevant parsing interpretation execution relevant 
properties visual representations difficult parse interpret 
multidimensional text linearly read decomposed 
second visual primitives typically token referential textual symbols generally barwise etchemendy 
visual primitives type may necessarily common semantics token interpretation primitives difficult type referential primitives 
difficulty overcome human visual languages accepted conventions 
approach enforcing type cost expressiveness computer visual languages formalisms partial order types signature morphisms 
obstacles efficient parsing interpretation general purpose visual representations detecting emergent objects koedinger gero yan context sensitivity interpretations provides example ambiguity semantic density see 
chapter volume marriott meyer wittenburg provides information visual language parsing 
emergence term describe perception objects visual sentence explicitly represent 
occur due gestalt processes seeing circle representation contains dots explicitly represented objects give rise additional implicit objects overlapping circles perceived closed contours 
generative grammars allow computers generate recognize valid visual sentences 
grammars useful implementing interpreters compilers visual languages 
grammars useful transforming valid visual sentence order capture ad dynamics 
rewrite rules repenning allow computers transform existing visual sentences represent dynamic process 
rewrite rules similar nature operators allow computation move valid state problem space newell simon 
visual languages fine granularity interaction typically interpreted coarse granularity may compiled 
commercial mixed languages allow 
researchers addressed issue specifying meanings visual sentences way specifications executable haarslev 
grammars rewrite rules help human users understand computational processes interaction cycle studied context visual language 
computer interpretation diagrams human visual languages remains difficult problem 
electronic cocktail napkin gross novak redraw iwasaki law anon joseph examples computer programs artificial intelligence techniques understand diagrams commonly employed human endeavors 
electronic cocktail napkin interprets architectural sketches interprets physics problems stated english labeled diagrams redraw interprets diagrams load bearing structures civil engineers draw anon interprets mechanical engineering drawings 
systems illustrate difficulty interpreting highly stylized visual representations respective ads 
visual representations mixed vocabulary diagrams text additional source difficulty resolving coreferences novak 
computationally cognitively difficult problem resolving multiple textual symbols visual primitives referent 
cognitive aspects cognitive processes involved perceiving displayed visual sentences comprehending meaning making inferences state affairs depicted visual sentences interacting computer order communicate actions manipulating elements visual sentence 
research perceptual processes detecting emergent objects disambiguating pictures traditionally taken place disciplines far removed visual languages 
ways humans comprehend reason static dynamic pictures investigated researchers diagrammatic representation mental imagery communities 
number findings research relevant visual languages 
parsing semantic interpretation easy humans lowe realism facilitates semantic interpretation schwartz black 
supports argument isomorphism gurr important property 
resolving coreference multiple elements visual sentence referent case mixed visual sentence consisting text picture words graphical units refer things constructing unified model information text diagrams difficult computationally novak cognitively hegarty just 
relevant type mapping visual language utilizes indicating mappings ad visual sentences may idea 
prior knowledge diagramming conventions critical correct interpretation lowe visual primitives help cue retrieve relevant prior knowledge long term memory narayanan motoda 
supports knowledge intensive parsing interpretation techniques systems novak anon joseph employ 
people employ mental visualization hegarty narayanan motoda inferences static pictures represent dynamic ads process creates mismatch external internal representations resulting increased cognitive load narayanan motoda 
provides strong argument additional research dynamic syntax semantics visual languages 
observed diagram generation manipulation activities play important role creative thought processes architectural design goel 
points potential utility developing advanced knowledge visual languages assist human endeavors 
results studies humans comprehend diagrammatic representations serve illuminate cognitive processes 
narayanan hegarty narayanan hegarty developed cognitive model comprehension diagrams mixed representations 
model postulates comprehending functioning dynamic systems static diagrams inferring mechanical devices cross sectional schematic diagrams involves stages decomposition recognition recomposition determination activity propagation paths mental animation 
suggests relevant visual primitives dimensions relations visual sentence explicit recognizable 
addition configurations visual primitives visual sentences amenable easy unambiguous parsing 
reverse mapping compositional semantics visual sentences meaning visual sentence derived composing meanings elements sentence obvious easily learnable 
furthermore model indicates potential cognitive utility meaningful animations transformations visual sentences visual language 
cognitive researchers generally investigated human visual languages engineering diagrams weather maps architectural sketches visual languages computers humans 
cognitive issues cycle interaction visual languages thoroughly explored petre blackwell green press 

evaluation third important issue corresponding top level category evaluation 
evaluation involves development specific measures characterization individual languages measures comparison multiple visual languages basis characterizations 
visual languages fulfill objectives computationally efficient cognitively effective 
objective essential implementing language essential justifying language 
guarantee visual language fulfills objectives 
order evaluate require computational cognitive analyses form level subdivision 

evaluation computational evaluation computational measures expressiveness time complexity space complexity graphic token count diagram class complexity graphic token density syntactic differentiation density semantic differentiation density characterization individuals notational analog comparative analysis cognitive measures comprehensibility factors explicitness homomorphic injective surjective isomorphic semantic mapping salience confusion count usability factors learnability performance efficiency modifiability maintainability error rate initial impression long term satisfaction cognitive fit cognitive dimensions visible dependencies secondary notations spatial clustering viscosity analysis individuals comparative analysis 
subcategories evaluation computational analysis requires specification set measures expressiveness time complexity space complexity 
analysis done individual level characterize tractability specific visual language 
multiple languages may compared measures 
example complexity hierarchies developed marriott meyer 
proposes integer valued measures graphic token count diagram class complexity real valued measure graphic token density useful comparing common diagrammatic notations graphs trees 
syntactic measures visual notations relate complexity measures corresponding visual languages useful measures need researched 
interesting possibility examine computational implications goodman notions syntactic semantic differentiation density corresponding notions notational analog systems see raymond definitions visual languages 
cognitive evaluation conducting cognitive evaluation requires experimental research human participants outside scope visual language theory 
theorists contribute identifying relevant cognitive measures characterize individual languages comparatively analyze multiple ones 
excellent beginnings lines raymond 
authors come similar regarding kind visual language effective visual character languages rooted ability dense representations describe dense domains raymond 
application metrics current visual programming languages paint optimistic fully general fully diagrammatic visual programming languages due low density 
unfortunately line research judging literature appears pursued 
useful cognitive measure comprehensibility easy user understand learn syntax semantics language 
number factors influence comprehensibility 
noted visual representations easier understand information explicit larkin simon 
way achieving explicitness representations similar analogous represented preserve properties represented explicit way 
representations called isomorphic representations 
experimentally observed static visual representations depict dynamic situations people tend mentally simulate dynamic processes internally manipulating visual representations hegarty narayanan motoda shepard cooper schwartz black 
isomorphic visual representations aid increase comprehensibility transformations visual representations isomorphic domain processes simulated 
gurr analyzes properties contribute isomorphism develops characterizations different levels similarity 
gurr terminology appears homomorphic mapping ad visual sentences required similarity 
injectivity surjectivity isomorphism mapping increase level similarity 
research categorizing visual representations extent similar represented begun provide formal framework hitherto intuitive notion 
salience factor influence comprehensibility 
measure semantically salient aspects elements visual representation 
consider example visual language uses circles visual primitives 
circle number visual dimensions location radius thickness boundary color boundary color inside area possible dimensions language employs dimensions meaningful provides measure salience circles 
low salience indicates high number irrelevant potentially distracting visual features representation implying lower comprehensibility 
visual language low salience needs relevant primitives dimensions relations visually explicit order aid comprehension 
related measure confusion count developed modifying metric originally proposed glinert 
sum number crossings elbows diagrammatic notation assumption high number adversely affect comprehensibility 
broad notion usability borrowed interactive system user interface design literature hix hartson newman lamming useful measure apply 
usability typically measured constituent factors learnability ease speed learning visual language visual language helps programmers better remember programming constructs provided performance efficiency productivity improvement resulting visual language maintainability modifiability programs constructed visual language error rate indicating decrease number errors committed visual language initial impression long term satisfaction qualitative measures satisfied programmers visual language 
usability study allen appears indicate graphical notations provide advantage procedural languages 
cognitive fit sinha vessey match forms information users seek context problem solving task application domain forms visual language presents information petre blackwell green press factor affecting usability visual languages 
cognitive dimensions approach green green green petre provides additional measures 
example dimension hidden dependencies indicates little local global dependencies variables subroutines explicitly visible visual language syntax 
dimension secondary notations convey meaning 
way accomplish spatial clustering 
graphical representations spatially organize localize relevant information larkin simon visual search locate information quickly 
little research done secondary notations improve cognitive effectiveness 
cognitive dimension called viscosity effort required transform visual representation valid state may useful evaluation comparison 
notions need developed formalized measures applied characterize compare current visual languages 
research project intended rigorously define scientific basis cognitive advantages visual programming initial result explicit enumeration metacognitive beliefs motivating design visual languages holds considerable promise achieving goal blackwell 
significant research addresses computational cognitive evaluation visual language 
barwise etchemendy mixed visual language system designed teach logic students 
authors studied theoretical computational issues barwise etchemendy looked cognitive effectiveness language helps students learn logic comparison traditional teaching methods 
results stenning cox oberlander mixed advanced students benefited students knowledge visual capability show improved learning 
researchers software visualization general price baecker small algorithm animation particular brown sedgewick strive create visual languages computers communicate inner workings programs humans 
visual languages support full cycle interaction intended way communication computational cognitive 
visualizations designed far special purpose languages designed particular algorithm program class algorithms 
research cognitive effectiveness visualizations mixed results byrne stasko 
noted cases visual languages designed implemented computational realm cognitive studies undertaken 
contrast fisher apply cognitive theory design evaluation visual language 
question design visual language simultaneously provably empirical theoretical evaluations efficient computationally effective cognitively open opinion provides fertile avenue interdisciplinary research visual language theory 
opposing computational cognitive requirements realism aids human comprehension realistic pictures harder computer parse difficult especially purely visual languages 
case trade computational complexity cognitive effectiveness open issue 
development visual languages mixed languages allow user specify state world actions execute state computer execute actions display results indicate finding balance computational efficiency cognitive effectiveness impossible mixed visual languages specific domains 
alternate reality kit smith environment users create experiment dynamics moving particles early example 
smith cypher spohrer star logo resnick currently popular mixed visual languages build simulations processes occurring inside 
computer executes simulations depicts results graphically interactive animations pictures created user 
meta visual languages sense allow users build graphical interactive simulations visual languages tailored specific ads 
approach shows promise answer question heterogeneous visual programming languages allow incorporation pictures traditional textual programming language syntax 
improves cognitive effectiveness complex code replaced self evident pictures 
example see illustrated code avl tree insertion erwig meyer 
computational efficiency compromised language translated back source textual language compiled executed 
vi 
issues visual language research section discuss significant characteristics human visual languages enable support enhance cognitive abilities people 
indicate additional avenues visual language research human computer interaction perspective 
vi affordances visual representations different ways define visual language book marriott meyer define visual language consisting visual sentences constructed arrangements symbols dimensional space 
current theories typically translate visual sentences language propositional representation ascribed meaning 
picture principle described propositionally informationally equivalent fashion 
instance write set propositions describing bit bitmap picture 
informationally equivalent descriptions may cognitive perspective propositional representation visual sentence translated may provide cognitive affordances original pictorial representation visual sentence 
just apply picture static object changing moving pictures operations applied pictures transformations pictures 
characteristics visual languages afford effective comprehension reasoning explicit representation salient relations domain visually perceivable properties spatially localized visually cued organization relevant information domain objects relations facilitation visual transformations simulate domain processes reduction complexity recognition guidance 
characteristics visual sentences human visual languages quite different corresponding propositional representations 
properties partially captured current theories visual languages 
fact human visual languages clear construct informationally equivalent propositional representations visual sentences language representations spatial formalisms 
consider example difficulty developing specifications architects sketches spatial logic approach cohn loosing aesthetic properties sketches 
explicit representation visual representations designed people explicitly depict relations important domain task hand 
allows viewer recognize relevant patterns relationships having deduce complex reasoning 
advantage carry propositional representations visual properties constituent symbols carry meaning representations 
informationally equivalent propositional representation may explicitly represent properties corresponding picture 
course mean visual representations explicating information carry 
affordance term norman introduced norman 
defines perceived actual fundamental properties allow perceiver determine just possibly 
sense visual representations afford certain kinds interpretations inferences 
requires careful design representations 
informal yardstick apply signature morphism wang lee visual representation 
consider configuration disks easily described propositional form absolute coordinates 
represented assertions white circle white circle location location white circles close figures 
visual representation immediately clear answer take consideration location disks 
white circles close 
question answered satisfactorily 
dependency closeness judgment surrounding context evident propositional representation 
regular context free pictures may easy deal computationally sentences human visual languages suspect generally context sensitive 
problem propositional descriptions intentional unintentional information loss occurs picture gets translated propositions depiction mapping describes visual aspect picture detail 
translation done information discarded lost reverse translation done uniquely 
meyer states want visual languages standard languages disguise learn describe pictures pictures 

white circles close 
spatial visual organization information visual representations help guide reasoning permit related information spatially organized 
allow visual cues color texture convey information draw reasoner attention relevant objects properties 
larkin simon provide analysis spatial adjacency connectedness reduce complexity reasoning solving physics problems problem descriptions accompanied diagrams 
series experiments people reason mechanical devices schematic diagrams narayanan motoda show diagrams guide reasoning process lines causal propagation operation device 
people incremental reasoning strategy predicting behaviors local components propagating components exploiting spatial cues adjacency connectedness 
strategy works time diagrams organize components spatially component depictions reflecting spatial organization deduced order events operation machine corresponds paths causal propagation 
scientific visualizations go step spatial organization visual cues color density convey considerable information concise spatially localized manner 
transformation images changing picture may may change meaning depending changed visual aspects semantically significant 
changing propositional representation generally implies current state affairs changed constituent symbols carry meaning 
visual representations support generation hypotheses represent relevant relations explicitly 
test hypotheses slightly changing image mentally test certain relationship holds things changed 
propositional representations support reasoning continuous change especially simulation spatial processes corresponding visual representations 
visual representations support reasoning facilitating process transforming image domain constraints generating new hypotheses testing state affairs depicted transformed image narayanan motoda hegarty 
examples show situations visual representation affords reasoning image transformation corresponding propositional 
shows round hole cube 
question answered cube pushed hole 
nontrivial reasoning required answer question propositional representation geometries involved 
interactive visual representation similar cube moved hole immediately clear fit hole 

reasoning image transformations shows angles formed parallel lines intersecting line easy read diagram angles appear equal 
furthermore evident translating rotating line affect equality 
angles remain equal independently exact position orientation line relative long intersects 
come quickly ability mentally simulate transformations visual representations 
starting informationally equivalent propositional representations situations inferences easily directly 
kinds problems descriptive propositional natural language representation people tend draw mentally image corresponding visual representations order solve problems huttenlocher 
computational complexity visual representations characteristics represented situation explicit group related information spatially visual cues facilitate inferences direct manipulation 
comparison propositional representations contain considerable implicit information 
means information processors attuned perceptual modality visual representations efficient propositional ones opposite situation holds processors attuned propositional representations 
informationally equivalent representations different computational complexity depending operations performed nature underlying information processing architecture performs operations larkin simon 
implication visual language theories making visual languages easier humans may general result making harder computers vice versa 
exceptions 
showed visual representations afford certain inferences reducing reasoning recognition spatial relationship 
visual non visual reasoning intertwined barwise etchemendy stenning oberlander cases visual representations provide guidance logical reasoning process 
guidance result lower number alternatives inference process needs evaluate making efficient 
computer programs diagrams humans find equally useful guiding controlling inferences redraw iwasaki law barwise etchemendy illustrate point 
characterizing role visual languages open problem visual language theory 
vi issues deriving meaning multiple pictures current theories specify pictures text meaningful visual sentence corresponding propositional sentence 
addition transition visual sentences similar transition propositional sentences equivalent meaning 
assumption generally works meaningful changes initially defined terms rewriting propositional sentences corresponding visual sentences generated 
consider going way developing formalisms rewriting propositional sentences way corresponding visual sentences change depicting dynamics represented domain temporal sequence visual sentences snapshots animation physical process 
visual representations evolve continuous fashion syntactically semantically dense goodman find intermediate pictures represent qualitative change state propositionally asserted 
example consider set pictures draw depicting states cube hole cube hole 
regardless discrete states propositional representation designed assert states create visual sentences depict states adjacent states asserted propositional representation 
transition visual propositional loss free considering dynamic visual representations 
suggested issue sequences temporally related visual sentences addressed building current theories deal single visual sentences 
clear current state research visual languages semantic dependencies visual sentences temporally ordered sequence simply added current theory static visual language 
open question ripe research 
emergent properties continuous transformation involved unclear informationally equivalent propositional representation assert white circles close 
visual representation explicitly assert closeness intrinsically represented representation 
way solve problem say visual representation says circles close left judgment observer 
exactly point 
model visual language presents cognitive system capable inferences computational system extent relies propositional translations visual sentences display inferences capable inference 
words cognitive system capable detecting context sensitive emergent properties visual representations computational system requires explicit specification properties 
vii 
concluding discussion visual languages interesting allow humans represent comprehend modify inferences represented direct manipulation visual representations 
human element unimportant need visual languages executable computers computers far better parsing compiling executing textual languages 
visual languages ought studied perspective specifications compiled executed computers equally importantly perspective specifications understood modified humans 
needs take account full context human machine coupled systems role visual language facilitating communication interaction computational cognitive agents system implementing useful usable visual languages investigating formal properties 
implies theoretical analyses ought address issues comprehension reasoning interaction cognitive realm issues visual program parsing execution feedback computational realm 
deny utility formal specifications allowing precise definitions meanings syntactic elements visual language implementation correct parser generator reasoning algorithm comparative analyses different visual languages argue necessity complementing theoretical investigations aspects 
current state visual language research 
current theories visual languages entirely computer centered 
dealing concept originally invented humans effective communication computer centered theory visual languages start 
chapters book point beginnings broader scope visual language research 
chapter looked characteristics visual languages support cognitive abilities people 
large degree characteristics visual languages interesting 
unfortunately tend easily amenable formalization 
strive theories help better understand visual languages properties role human computer interaction 
framework consistent broader scope inquiry visual language research proposed develop preliminary taxonomy characterizing theoretical practical aspects visual languages 
process showing sample current fits framework open issues fruitful directions research pointed 
propose taxonomy means encourage research issues explicitly addresses 
agree raymond asserts practical languages contain visual notational elements evaluate language suitability visually notation 
dimensions taxonomies needed determine language effectiveness 
theories human visual languages existed quite time visual thinking semiotics visual languages saint martin new types theories necessary visual languages context human computer interaction 
theory visual languages formal derive computational properties 
authors visual theories take approach converting visual representation textual order define semantics 
interested characteristics distinguish visual languages textual ones expect help textual translations 
may sensible translate visual sentences propositional ones understand formal languages ascribe semantic interpretations 
really learn visual languages translation capture characteristics cognitive system exploits comprehending visual sentences 
know answer 
find don ask question seriously 
abelson sussman sussman 

structure interpretation computer programs nd ed mit press cambridge ma 
andries engels rekers 

graph grammars represent visual programs 
chapter volume 


mental visualization facilitate problem solving 
denis eds mental images human cognition elsevier science publishers amsterdam netherlands pp 



visual thinking university california press berkeley ca 
allen 

graphic language representation programming behavior 
salvendy smith eds designing human computer interfaces knowledge systems elsevier science publishers amsterdam netherlands pp 

barwise etchemendy 

cambridge university press cambridge england 
barwise etchemendy 

heterogeneous logic 
diagrammatic reasoning cognitive computational perspectives glasgow narayanan chandrasekaran eds aaai press menlo park ca mit press cambridge ma 
pp 

bertin 

semiology graphics english translation berg university wisconsin press madison wi 
blackwell 

metacognitive theories visual programming think doing 
proc 
ieee symposium visual languages ieee computer society press pp 

bottoni costabile levialdi 

formalizing visual languages 
proc 
ieee symposium visual languages ieee computer society press pp 

bottoni costabile levialdi 

specification visual languages means interaction 
chapter volume 
brooks 

silver bullet essence accidents software engineering 
ieee computer pp 

brown sedgewick 

techniques algorithm animation 
ieee software pp 

byrne stasko 

algorithm animations aid learning 
tech 
rep git gvu gvu center georgia institute technology atlanta ga august 
cacm 
special section educational technology communications acm april 
chang 

visual languages tutorial survey 
ieee software pp 

dinesh sk 

specifying input output visual languages 
chapter volume 
douglas mckeown 

empirically software visualization languages 
proc 
ieee symposium visual languages ieee computer society press pp 

engelhardt bruin janssen scha 

visual grammar information graphics 
narayanan eds proc 
aid workshop visual representation reasoning interaction design key center design computing university sydney 
erwig meyer 

heterogeneous visual languages integrating visual textual programming 
proc 
ieee symposium visual languages ieee computer society press pp 

frank foley 

pure reasoning engine programming example 
tech 
rep git gvu gvu center georgia institute technology atlanta ga april 
freeman gelernter jagannathan 

search simple visual vocabulary 
proc 
ieee symposium visual languages ieee computer society press pp 

furnas 

new graphical reasoning models understanding graphical interfaces 
proc 
human factors computing systems conference chi acm press pp 

furnas 

reasoning diagrams 
proc 
aaai spring symposium reasoning diagrammatic representations aaai technical report ss aaai press menlo park ca pp 

gero yan 

shape emergence symbolic reasoning 
environment planning planning design pp 

glasgow narayanan chandrasekaran 
eds 

diagrammatic reasoning cognitive computational perspectives aaai press menlo park ca mit press cambridge ma 
glinert 

programming environments 
chang ed principles visual programming systems prentice hall new york pp 

goel 

sketches thought mit press cambridge ma 


art illusion study psychology pictorial representations london 
cohn 

visual language syntax semantics spatial logic approach 
chapter volume 
goodman 

languages art approach theory symbols publishing indianapolis indiana 
green 

cognitive dimensions notations 
proc 
hci conference 
green petre 

visual programs harder read textual programs 
van der veer tauber eds human computer interaction tasks organization proc 
th european conference cognitive ergonomics pp 
green petre 

usability analysis visual programming environments cognitive dimensions framework 
journal visual languages computing pp 

green petre bellamy 

comprehensibility visual textual programs test match mismatch conjecture 
koenemann moher robertson eds proc 
fourth workshop empirical studies programmers ablex publishers 
gross 

fat pencil cocktail napkin slide library 
fraser eds proc 
association computer aided design architecture pp 
gurr 

isomorphism representations 
chapter volume 
haarslev 

fully formalized theory describing visual notations 
chapter volume 
hammer 

logic visual information 
studies logic language computation csli press stanford university 
hegarty 

mental animation inferring motion static displays mechanical systems 
journal experimental psychology learning memory cognition pp 

hegarty just 

constructing mental models machines text diagrams 
journal memory language pp 

hix hartson 

developing user interfaces ensuring usability product process john wiley sons new york 


rewriting interaction 
proc 
human factors computing systems conference chi acm press 


composing complex behavior simple visual descriptions 
proc 
ieee symposium visual languages ieee computer society press pp 

huttenlocher 

constructing spatial images strategy reasoning 
psychological review pp 

joseph 

knowledge directed interpretation mechanical engineering drawings 
ieee trans 
pattern analysis machine intelligence pp 

kahn saraswat 

complete visualizations concurrent programs executions 
proc 
ieee symposium visual languages ieee computer society press pp 

koedinger 

emergent properties structural constraints advantages diagrammatic representations reasoning learning 
proc 
aaai spring symposium reasoning diagrammatic representations aaai technical report ss aaai press menlo park ca pp 

larkin 

display problem solving 
eds complex information processing lawrence erlbaum publishers hillsdale nj 
larkin simon 

diagram worth words 
cognitive science pp 

lohse walker 

classification visual representations 
communications acm pp 

lowe 

constructing mental representation technical diagram 
learning instruction pp 

lowe 

selectivity diagrams reading lines 
educational psychology pp 

fisher 

cognitive engineering visual languages 
proc 
ieee symposium visual languages ieee computer society press pp 

marriott meyer 

hierarchy visual languages 
chapter volume 
marriott meyer wittenburg 

survey visual language specification recognition 
chapter volume 
menzies 

frameworks assessing visual languages 
technical report tr department software development monash university 
meyer 

pictures depicting pictures specification visual languages visual grammars 
technical report informatik berichte hagen germany 
shorter version appears proc 
ieee symposium visual languages ieee computer society press pp 



aaron code freeman san francisco ca 
myers 

visual programming programming example program visualization taxonomy 
proc 
human factors computing systems conference chi acm press pp 

narayanan 
ed 

proc 
aaai spring symposium reasoning diagrammatic representations aaai technical report ss aaai press menlo park ca 
narayanan hegarty 
press 
designing comprehensible interactive hypermedia manuals 
international journal human computer studies 
narayanan motoda 

things appear predicting behaviors device diagrams 
proc 
th national conference artificial intelligence aaai press pp 

narayanan motoda 

study diagrammatic reasoning verbal gestural protocols 
proc 
th annual conference cognitive science society lawrence erlbaum associates pp 

narayanan motoda 

diagram problem solving case impossible problem 
proc 
th annual conference cognitive science society lawrence erlbaum associates pp 

narayanan motoda 

behavior hypothesis schematic diagrams 
diagrammatic reasoning cognitive computational perspectives glasgow narayanan chandrasekaran eds 
aaai press mit press pp 

newell simon 

human problem solving prentice hall englewood cliffs nj 
newman lamming 

interactive system design addison wesley wokingham england 


visual programming limits graphic representation 
proc 
ieee symposium visual languages ieee computer society press pp 

norman 

cognitive engineering 
norman draper eds user centered system design lawrence erlbaum associates hillsdale nj pp 

norman 

psychology everyday things basic books new york 
novak 

diagrams text computer input 
journal visual languages computing pp 

petre 

looking isn seeing readership skills graphical programming 
communications acm pp 

petre blackwell green 
press 
cognitive questions software visualization 
stasko domingue price brown eds software visualization programming multi media experience mit press appear 
price baecker small 

principled taxonomy software visualization 
journal visual languages computing pp 

robertson 

visual programming language 
proc 
ieee symposium visual languages ieee computer society press pp 

raymond 

characterizing visual languages 
proc 
ieee symposium visual languages ieee computer society press pp 

repenning 

bending rules steps semantically enriched graphical rewrite rules 
proc 
ieee symposium visual languages ieee computer society press pp 

repenning sumner 

agentsheets medium creating domain oriented visual languages 
ieee computer pp 

resnick 

centralized mindset 
journal learning sciences pp 

robertson card mackinlay 

information visualization interactive animation 
communications acm pp 

saint martin 

semiotics visual language indiana university press bloomington 
schwartz black 

analog imagery mental model reasoning models 
cognitive psychology pp 

selker 

elements visual language 
proc 
ieee symposium visual languages ieee computer society press pp 

shepard cooper 
eds 

mental images transformations mit press cambridge ma 
shin 

logical status diagrams cambridge university press cambridge england 
shu 

visual programming languages perspective dimensional analysis 
chang ichikawa eds visual languages plenum publishing new york pp 

sinha vessey 

cognitive fit recursion iteration empirical study 
ieee trans 
software engineering se pp 

smith cypher spohrer 

programming agents programming language 
communications acm pp 

smith 

alternate reality kit animated environment creating interactive simulations 
proc 
ieee symposium visual languages ieee computer society press pp 

carver 

visual programming prograph manning publications prentice hall englewood cliffs nj 
stenning cox oberlander 

contrasting cognitive effects graphical sentential logic teaching reasoning representation individual differences 
language cognitive processes pp 

stenning oberlander 

cognitive theory graphical linguistic reasoning logic implementation 
cognitive science pp 

iwasaki law 

qualitative structural analysis diagrammatic reasoning 
diagrammatic reasoning cognitive computational perspectives glasgow narayanan chandrasekaran eds aaai press mit press pp 

tufte 

visual display quantitative information graphics press cheshire ct tufte 

envisioning information graphics press cheshire ct tufte 

visual explanations graphics press cheshire ct tversky 

cognitive origins graphic productions 
ed understanding images finding meaning digital imagery springer verlag new york pp 

wang lee 

reasoning diagrammatic representations 
diagrammatic reasoning cognitive computational perspectives glasgow narayanan chandrasekaran eds aaai press mit press pp 

wang 

syntax directed approach picture semantics 
chapter volume 
wittenburg 

relational grammars theory practice visual language interface process modeling 
chapter volume 

