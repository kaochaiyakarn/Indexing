self organisation emergence mas overview di university geneva switzerland cui unige ch marie pierre irit universit paul sabatier france marie pierre irit fr anthony university greece computer org keywords multi agent systems self organisation emergence received informatica xxx yyy spread internet evolution mobile communication created new possibilities software applications ubiquitous computing dynamic supply chains medical home care 
systems need operate dynamic heterogeneous environments face challenge handling frequently changing requirements flexible robust capable adapting circumstances 
widely believed multi agent systems coordinated selforganisation emergence mechanisms effective way design systems 
aims define concepts self organisation emergence provide state art survey different classes self organisation mechanisms applied multi agent systems domain 
furthermore strengths limits approaches examined research issues provided 
natural self organising systems function central control operate contextual local interactions 
particularity self organised systems capacity spontaneously external control produce new organisation case environmental changes 
systems particularly robust adapt changes able ensure survivability 
cases selforganisation coupled emergent behaviour sense individual components carry simple task able carry complex tasks emerging coherent way local interactions various components 
complexity today applications world scale centralised hierarchical control possible 
cases context application evolves moves supervision difficult 
witnessing increased interest academic community industry naturally inspired robust simple solutions building modern applications favouring self organisation emergence properties 
foresee applications tomorrow great biologically inspired self organising sensors networks allowing control aerospace vehicles dangerous zones self organising traffic management allowing re routing emergency vehicles individual cars storage facilities self managing operating systems facilities 
applications tackle complex problem solving complexity due great space search optimisation problems non linear problems 
software agents naturally play role autonomous entities subject self organise 
usually agents simulating self organising systems order better understand establish models 
tendency shift role agents simulation development distributed systems components software agents deployed environment self organise decentralised manner realisation global possibly emergent functionality 
sections review notions selforganisation emergence respectively 
section provides description implementations mas 
section discusses strengths limits approaches 
main problems challenges related software engineering systems exhibit emergent properties discussed section 
section concludes 
informatica xxx yyy informatica self organisation history studying social behaviour insects termites grass proposed theory stigmergy summarised workers 
consequence direct interactions necessary coordinate group example indirect communications environment 
coordination regulation tasks realised basis information deposited environment central control 
case ants termites stigmergy ensured depositing chemical substance environment called pheromone 
es term self organisation established nobel prize ilya prigogine colleagues thermodynamics studies 
essentially idea open systems decrease entropy order comes disorder external energy applied system 
matter organises external pressure reach new state entropy decreased 
compared stigmergy concept identified grass fundamental difference 
case self organisation results behaviour occurring inside system ants termites 
second case selforganisation result pressure applied outside system 
es biological studies francisco varela established notion autopoiesis meaning self production process organisation able produce 
autopoiesis applies closed systems autonomous components interactions system generation system components living systems cells organisms 
koestler late es established definition holons 
holons time systems parts larger systems 
hierarchies holons 
koestler gives hierarchical view self organisation applies universe enterprise organisations 
idea complex organisations order appears disorder due simple relations statistically evolve complex relations progressively organising 
years research artificial systems oriented introducing selforganisation mechanisms specifically software applications 
different works take diverse inspiration stigmergy autopoiesis holon concept 
addition reproducing natural system behaviour artificial systems research efforts oriented introducing self organisation mechanisms specifically software applications 
section describes mechanisms details 
examples natural self organising systems include known examples concerning social insects ants termites honey bees 
communication occurs stigmergy means pheromone deposited environment 
collective behaviours animals referred self organising flocks birds schools fish 
simple rules getting close similar bird fish getting away dissimilar birds fishes able collectively avoid predators 
social behaviour humans self organised gives rise emergent complex global behaviours 
human beings typically local information local direct indirect interactions producing complex societies 
biology provides great source self organising systems 
examples include immune system regeneration cells brain behaviour 
artificial multi agent self organising systems observe different trends ranging application naturally inspired self organising models establishment new mechanisms infrastructures supporting self organisation artificial systems 
swarms provide great source inspiration especially fixed mobile networks systems management routing load balancing security 
inspired researchers dealing government society issues 
level infrastructures middleware supporting artificial self organising systems works take inspiration magnetic fields ants 
definition self organisation essentially refers spontaneous dynamically produced re organisation 
definitions corresponding different self organisation behaviours identified section 
swarm intelligence 
bonabeau mechanisms identifying swarms behaviour 
multiple interactions individuals 
retroactive positive feedback increase pheromone food detected 
retroactive negative feedback pheromone evaporation 
increase behaviour modification increase pheromone new path 
decrease entropy 
prigogine colleagues identified necessary requirements systems exhibiting self organising behaviour external pressure 
mutual causality components system circular relationship influencing 
components causally influenced component resulting increase 
far equilibrium condition system imports large amount energy outside system uses energy help renew structures autopoiesis dissipates accumulates accruing disorder self organisation emergence mas overview informatica xxx yyy entropy back environment 
morphogenetic changes components system open external random variations outside system 
system exhibits morphogenetic change components system changed autopoiesis 
autopoietic system organised defined unity network processes production transformation destruction components produces components 
interactions transformations continuously regenerate realise network processes relations produced 
constitute machine concrete unity space components exist specifying topological domain realisation network 
artificial systems 
works agentlink technical forum self organisation mas established definitions self organising systems 
strong self organising systems systems change organisation explicit internal external central control 
weak self organising systems systems reorganisation occurs result internal central control planning 
furthermore self organisation implies organisation turn implies ordered structure component behaviour 
respect process selforganisation changes respective structure behaviour new distinct organisation 
self organisation meets emergence 
emergence fact structure explicitly represented lower level appears higher level 
case dynamic self organising systems decentralised control local interactions intimately linked self organisation notion emergent properties 
ants establish shortest path nest source food 
general case pointed self organisation witnessed emergence vice versa 
emergence concept history emergent phenomena studied greek writings periods notion parts parts 
different schools studying emergence proto xix century neo xx century 
proto consider emergent process black box see 
inputs outputs lowest level discerned 
don know entries transformed outputs 
researchers morgan mill alexander broad wheeler whitehead try explicit characteristics emergent phenomena 
proto view just different perspective envisaged movement called 
root dynamic systems physics mathematics computer science main examples haken holland kauffman langton prigogine thom 
aim develop tools methods constructions enable expression emergent process dense consequence 
movement tries understand reproduce process leads emergence 
neo view examples illustrate notion emergent phenomena section presents examples systems emergent phenomena observed 
example taken natural systems concerns foraging ants 
foraging ant role explore environment find food 
finds food comes back nest tracing path environment pheromone 
shortest path find food structure emerges collective activity ants 
path reality observer system ant view 
example concerns application robots transport boxes departure room destination 
corridors available go room robots cross corridor sense informatica xxx yyy informatica associated 
robots local perception 
cooperative attitude embody robots observe corridors dedication traffic way 
conscience example emergent phenomenon humans 
conscience viewed searle property brain higher global level 
biologically brain complex system composed set neurons interactions 
neurons lower micro level 
nowadays understand explain conscience observing neurons interactions 
definition emergence concept try explain answering questions emerge 
characteristics emergent phenomenon 
characteristics enable answer question phenomenon emergent properties system producing emergent phenomena 
properties guide designers build systems provide emergent phenomenon 
emergence artificial systems 
decide program provides emergent result 
object emergence called phenomenon structure framework cells behaviour game life function mathematic function functionality system building course schedule local entities 
emergent phenomenon requires levels micro macro level needs observable macro level 
main property irreducibility properties high level theory properties lower level theory 
general interdependencies levels macro level constrains micro level micro level causes macro level 
phenomenon show novelty new produced exist previously produce coherence sense identity strongly linked parts produce 
chain linear activities enables explanation predictability collective phenomenon 
opposite emergent needs non linear activities micro level 
phenomenon previous properties observed phenomenon qualified emergent 
engineers provided guide including models tools methods design systems having emergent behaviour presenting emergent results 
furthermore guide list main properties systems 
provide emergent phenomena system mechanism levels 
system dynamic time life 
emergent phenomenon observable time needs form equilibrium 
homeostatic dynamic equilibrium 
emergence occurs narrow possibility space lying conditions ordered disordered 
boundary margin edge chaos far equilibrium 
near system ability self organise allowing emergent phenomenon 
emergence artificial system conceptually close emergent computation defined stephanie forrest follows collection interactive agents process produced process macro level natural interpretation computation computation results 
operational definition team irit 
technical definition emergence strong computer science coloration points 
subject 
goal computational system realise adequate function judged relevant user 
function may evolve time emerge 

condition 
function emergent coding system depend way knowledge function 
coding contain mechanisms allowing adaptation system coupling environment tend anytime adequate function 
design agent multiagent system code agent doesn contain knowledge collective function want mas compute 
result agent controls global system 
implementation mas studies self organisation emergence focus naturally inspired approaches bio inspired approaches socially approaches non naturally inspired approaches 
researchers experimented mechanisms leading selforganisation time emergent phenomenon different kinds applications 
different approaches divided classes depending mechanisms direct interactions agents basic principles broadcast localisation indirect interactions agents stigmergy reinforcement agent behaviours cooperation behaviour individual agents choice generic architecture 
general survey languages platforms mas implementations directly related self self organisation emergence mas overview informatica xxx yyy organising mechanisms interested reader refer 
mechanisms direct interactions zambonelli discuss different ways engineer self organisation 
approaches proposed consist basic principles localisation broadcast coupled local interactions local computations done agents order provide final coherent global state 
algorithms differ traditional distributed algorithms focus ensuring eventually converge maintain desired stable state despite micro level contingencies perturbations environment example changes network structure 
typical examples mechanisms applied areas self assembly distributed formation regular spatial patterns mobile objects required 
example described simple leader election algorithm determines centre gravity objects propagates objects move specific distance centre reached 
result eventually circular organisation objects 
mechanism system modelling fluid dynamics 
local interactions drops interactions physical environment enable formation rivers 
mechanisms focus changing structural aspects agent organisation topological placement agents agent communication lines 
mechanisms stigmergy self organisation mechanisms stigmergy concept aim achieving complex system behaviours resulting indirect interactions agents 
interactions due changes environment 
behaviour leads desired global system behaviour 
approaches self organisation relying idea stigmergy proposed effectiveness achieving difficult global coordination tasks demonstrated 
instance mechanism manufacturing control supply network management managing computer networks security coordination unmanned vehicles 
stigmergy implemented social spiders detect regions scene 
principle obtain formation non symmetric patterns self assembly applications cases exactly known advance emerge system execution 
example non symmetrical pattern formation principles biological formation morphogenesis 
mechanisms evaluated experimentation example simulation prototyping 
particular tendency integrate simulation experiments methodologies engineering systems described 
approaches design phase involves selecting appropriate self organising model verifying correctness experimentation 
model may relevant necessarily suitable particular application scenario 
model calibrated iterative refinement experimentation results 
cases due non linearity complexity phenomena involved possible direct control system behaviour proven desired behaviour achieved 
furthermore resulting system state accurately known advance multiple solutions reached 
obtain statistical confidence system convergence desired globally coordinated behaviour experimentation 
mechanisms reinforcement approaches self organisation capabilities agents modify dynamically behaviour reinforcement 
consists basic principles rewards increase agent behaviour punishments decrease agent behaviour 
consequence individual agent adapt capabilities observe specialisation roles example 
approaches self organisation adaptive behaviour capabilities individual agents dependent particular agent architectures 
approaches agents dynamically select new behaviour action calculation probability value dependent current agent state perceived state environment quality previous adaptation decisions example ones discussed 
early approaches self organisation re assign roles responsibilities different organisational nodes detailed 
typical example approach model adaptive agents described 
model focuses dynamically adapting logical relations different behaviours represented roles agent successively follow starting current state 
relations select new agent behaviour adaptation behaviour needs 
agent behaviour described graph termed behaviour graph 
behaviour graph includes types nodes corresponding roles links 
role nodes connected appropriate link nodes contain conditions specifying agent switch respective roles 
adaptive role selection takes place runtime factors associated links behaviour graph 
factors parameters representing properties agents perceived environment values change dynamically agent execution 
informatica xxx yyy informatica mechanisms cooperation organisation self design osd framework uses primitives agents composition decomposition 
decomposition involves division agent performed respond overwhelming environmental demands 
composition merges agents useful communication overheads agents high 
system tries cooperative environment creating agent merging agents order improve response time environment 
initial organisation starts agent containing domain organisational knowledge 
simulation results demonstrate effectiveness approach adapting changing environmental demands 
cooperation theory desired collective behaviour emerges occur result cooperation 
emergent outcome corresponds delivered system functionality referred global function modelled emergence words agent having global view system status purpose centralised control 
agent possesses ability self organisation example capability locally rearrange interactions agents environment depending knowledge representation individual task solve 
enables realising dynamic changes global system function explicitly coding modifications upper level system 
selforganisation founded capability agents possess locally cooperative 
cooperation capabilities imply agents helpful altruistic able recognise cooperation failures called non cooperative situations ncs correspond exceptions classical programs handle 
local handling ncs maximises flexibility adaptation capability system unexpected situation occurring due dynamism agent interactions environment 
mechanisms generic architecture particular class self organisation mechanisms generic architectures meta models agents organisation instantiated subsequently dynamically modified needed requirements particular application 
examples architectures mediator architecture proposed maturana norrie prosa architecture holonic hierarchy model 
holonic hierarchy model involves structural patterns form nested hierarchies self replicating structures named 
elements holonic systems referred term holon combination greek word meaning suffix meaning part proton neuron 
common aspect architectures involve characteristic agent types basic agents holonic organisation derived 
example mediator architecture mediator agent type 
prosa holonic organisation consists types basic holons order holons product holons resource holons 
agents organised holonic metaphor participate holons forming holonic structures 
self organisation refers altering holonic hierarchy perturbations agent environment known decision making technique fuzzy evolutionary reasoning 
examples approaches meta models architectural reflection 
approaches current system architecture organisation described particular configuration generic architectural meta model provides architectural components features associated set architectural constraints define safely reconfigure software architecture 
meta model configuration inspected modified run time 
modifications architecture meta model result modifications software architecture architecture reflective 
dynamic modifications take place automatically case user intervention done 
common technique representing architectural meta models typed directed configuration graph 
strengths limits mechanisms direct interactions significant advantage enable design specific robust self organised behaviours exactly known outcomes 
mentioned approaches needed limited number applications 
reason simple global equilibrium states patterns activity modelled simple linear terms achieved 
result complex behaviour involving non linear interactions needed restrictions system operation need direct mechanisms applied 
mechanisms stigmergy additional advantages 
firstly enable increased reusability possible reuse strengths known selforganisation mechanisms biology build software 
secondly modelling experimentation purposes calibration carried simulation models basis actual implementation reducing development time resources required facilitating development 
furthermore simple local behaviours quite easy implement resulting increased ease programming 
furthermore multi solution capability mechanisms strengths increases robustness 
furthermore suboptimal solutions occur effectiveness self organisation emergence mas overview informatica xxx yyy mechanisms relatively high compared low development cost 
mechanisms cooperation behaviour enable treat applications continuous discontinuous global behaviour 
bottom design simplifies development resulting systems robust adaptive 
instance theory guarantees system adapts behaviour cooperative environment satisfy 
difficulty lies exhaustive list non cooperative situations agent faced 
theoretically feasible number non cooperative situations related agent skills enumerable 
disadvantages essentially related harnessing emergent behaviour 
firstly currently possible effectively control behaviour systems 
result common undesired emergence states occur 
furthermore cases specific global states required emerge positions robot players football game possible solutions offered mechanisms problem 
relevant case global solution emerged desirable maintain self organisation converging 
rest mechanisms similar limitations 
additional strength mechanisms adaptive architectures meta mechanisms modelling done agent oriented software engineering terms increases ease understanding software designers contrast applying model discipline require obtain necessary knowledge master terminology concepts involved 
comes expense increased difficulty modelling global emergent behaviour 
problems challenges multi agent systems development point view central question program single agents taken self organise 
particular case multi agent systems interest difficulty lies having self organisation emergent properties mainly emergent functionality arises individual simple tasks performed agents 
engineering self organising applications needs means define global goal design local behaviours global behaviour emerges 
difficult global goal predictable sum function local goals 
consequently verification task turns arduous exercise realised simulation 
traditional software engineering techniques insufficient interfaces fixed design time established ontology 
current methodologies possible define global behaviour function behaviour various parts 
traditional practices multi agent systems introduce basic techniques autonomously interacting retrieving information agent coordination service description ontology 
techniques rely pre programmed interaction patterns preventing adaptation unexpected environmental changes 
current engineering practices directly address self organisation consist designing distributed algorithms inspiration natural mechanisms bio inspired socially inspired 
agentoriented methodologies provide designer means design self organising systems 
specific electronic interaction mechanisms inspired defined middleware technology developed help development self organising applications 
verification engineering methods remain open issues 
currently necessary find means control emergence solve problems 
speak emergence control emergence 
designing artificial systems necessary operational definition tools enable systems produce wanted emergent phenomenon 
addition environment plays important role coordination media source changes adaptation agents 
environment engineering role self organising systems understood underestimated 
deeper discussion environments interested reader may refer 
research axis find new principles theories models mechanisms methodologies engineer self organising systems emergent phenomena 
perspective important aware differences distinguish solutions tackle self organisation issues intended causal emergence emergent issues self organisation solutions intend consider cases resulting system 
cases delicate problem sense unintended emergent phenomenon causal effect system may arise 
growing complexity applications needs solutions favour autonomous robust adaptive systems 
natural systems inspiration sources devise really new techniques mechanisms design self organisation emergent phenomenon 
new wave systems called neo computation useful designing applications domains autonomic computing pervasive ubiquitous computing 
self organisation emergence interest community computer scientists particular mas developers 
due fact self organisation enables tackle new field applications multi agent systems adapted implement self organisation 
aims twofold clarifies concepts proposes operational definitions informatica xxx yyy informatica gives overview researches self organising mas emergent phenomena produced mas 
different mechanisms studied grouped families direct mechanisms characterized simple principle functioning agents direct communication mechanisms stigmergy indirect interactions agents perceptions reinforce agent actions reinforcement mechanisms enable designing adaptive agents change roles behaviour runtime cooperative attitude agents predefined architecture system 
ends proposing research axis finding new mechanisms developing methods design self organising systems providing means control global behaviour system proving convergence 
partly supported swiss nsf agentlink iii 
ali zimmer 
question concerning emergence implication 
dubois ed computing anticipatory systems conference chaos li ge belgium 
babaoglu meling montresor 
anthill framework development agent peer peer systems 
proceedings th international conference distributed computing systems icdcs pp 
ieee computer society los alamitos ca usa 
bar yam 
dynamics complex systems 
perseus books cambridge ma 
berlekamp conway guy 
winning ways mathematical plays volume nd edition 
ak peters wellesley ma 
marrow applications self organising multi agent systems initial framework comparison 
informatica ljubljana slovenia 
press 

overview current trends european aose research 
informatica ljubljana slovenia 
press 
bonabeau dorigo th 
swarm intelligence natural artificial systems 
santa fe institute studies sciences complexity 
oxford university press new york ny usa 
bongaerts 
integration scheduling control holonic manufacturing systems phd thesis katholieke universiteit leuven bordini survey languages platforms mas implementation 
informatica ljubljana slovenia 
press 
thomas 
new swarm mechanism social spiders colonies web weaving region detection 
web intelligence agent systems ios press amsterdam netherlands 
brueckner parunak 
self organising manet management 
engineering self organising applications systems 
di 
eds lecture notes artificial intelligence volume pp 

springer verlag berlin 

deneubourg nigel bonabeau 
self organisation biological system 
princeton studies complexity 
princeton university press princeton nj usa 

georg 

emergence organisations emergence functions 
aisb symposium adaptive agents multi agent systems pp kudenko kazakov alonso eds university wales georg 

theory complex problem solving self organising cooperative agents 
international workshop theory practice open computational systems 
twelfth international ieee international workshops enabling technologies infrastructure collaborative enterprises pp 

ieee computer society press los alamitos ca 
contractor 
theoretical frameworks study structuring processes group decision support system adaptive structuration theory self organising systems theory 
human communication research 
deneubourg goss franks franks chr tien 
dynamics collective sorting robot ants ant robots simulation animal behaviour 
proceedings international conference simulation adaptive behaviour 
meyer wilson eds pp 
mit press cambridge ma usa 
de wolf holvoet 
adaptive behaviour evolving thresholds feedback 
proceedings aisb symposium adaptive agents multiagent systems pp 
kudenko kazakov alonso eds university wales 
de wolf holvoet 
emergence selforganisation statement similarities differences 
engineering self organising systems 
brueckner 
eds lecture notes artificial intelligence volume pp 
springer verlag berlin 
self organisation emergence mas overview informatica xxx yyy di self organising applications paradigms applications 
engineering self organising systems 
di 
eds lecture notes artificial intelligence volume pp 

springer verlag berlin 
di rana zambonelli eds 
engineering self organising systems 
lecture notes artificial intelligence volume springer verlag berlin 
di 

agentlink technical forum group self organisation multi agent systems agentlink newsletter issue issn pp 

dowling cahill 
component architecture meta model self adaptive software 
proceedings reflection 
lecture notes computer science volume pp 

springer verlag berlin 
edmonds 
experimental method produce reliable self organised systems 
engineering self organising systems 
brueckner 
eds lecture notes artificial intelligence volume pp 

springer verlag berlin 
forrest 
emergent computation self organising collective cooperative phenomena natural artificial computing network 
proceedings ninth annual conference 

intrusion detection response executed agent mobility 
international conference autonomous agents multi agent systems aamas pp utrecht netherlands 
prigogine 
thermodynamic study structure stability fluctuations 
wiley 

camps 
theory emergent computation cooperative selforganisation adaptive artificial systems 
fourth european congress systems science 
valencia 
goldstein 
emergence construct history issues 
emergence publishing mansfield ma usa 
grass 
la reconstruction du nid les interactions inter chez les sp 
la th orie de la interpr tation des termites 

di castelfranchi 
self organising mechanisms social business economics approaches informatica ljubljana slovenia 
press 
holland 
emergence order chaos 
addison wesley boston ma 
holland 
stigmergy selforganisation sorting collective robotics 
artificial life 
mit press cambridge ma usa 
ishida gasser 
organisation self design distributed production systems 
ieee transactions knowledge data engineering ieee computer society los alamitos ca usa 
jiang 
self organisational management network adaptive resonance theory 
agent technologies infrastructures tools applications services 
kowalczyk 
eds lecture notes artificial intelligence volume pp 

springer verlag berlin 
valckenaers saint van brussels emergent forecasting stigmergy approach manufacturing coordination control 
engineering self organising systems 
brueckner 
eds lecture notes artificial intelligence volume pp 
springer verlag berlin 
kauffman 
coevolution edge chaos coupled fitness landscapes poised states coevolutionary 
langton 
eds artificial life ii proceedings volume santa fe institute studies sciences complexity addison wesley reading ma 
koestler 
ghost machine reprint edition penguin east rutherford nj usa 
liu jin tsui 
autonomy oriented computing formulating computational systems autonomous components 
ieee transactions systems man cybernetics part systems humans press ieee computer society los alamitos ca usa 
maes 
modeling adaptive autonomous agents 
langton 
eds artificial life mit press cambridge ma 
zambonelli 
spatial shapes mobile particles approach 
engineering self organising system 
brueckner 
eds lecture notes artificial intelligence volume pp 

springer verlag berlin 


mechanisms artificial self organised systems 
informatica ljubljana slovenia 
press 
maturana norrie 
multi agent mediator architecture distributed manufacturing 
journal intelligent manufacturing 
kluwer informatica xxx yyy informatica academic publishers amsterdam netherlands 

montresor meling babaoglu 
messor load balancing swarm autonomous agents 
koubarakis eds 
agents peer peer computing lecture notes artificial intelligence volume pp 

springer verlag berlin 

ller 
emergence collective behaviour problem solving 
engineering societies agents world th international workshop omicini petta pitt eds lecture notes artificial intelligence volume pp 

springer verlag berlin 
parunak 
managing emergent behaviour distributed control systems 
proceedings isa tech instrument society america 
parunak sauter clark 
specification design industrial synthetic ecosystems intelligent agents iv agent theories architectures languages lecture notes artificial intelligence volume pp 

springer verlag berlin 
parunak brueckner entropy self organisation multi agent systems 
international conference autonomous agents agents 
acm press new york ny usa 
parunak brueckner sauter digital pheromone mechanisms coordination unmanned vehicles 
international conference autonomous agents multi agent systems aamas pp 
acm press new york ny usa 
corkill lesser 
instantiating descriptions organisational structures 
distributed artificial intelligence pp 

huhns ed 
pitman london picard 

agent architecture design self organising collectives principles application 
proceedings aisb symposium adaptive agents multi agent systems lecture notes artificial intelligence volume pp 

springer verlag berlin 
picard 

methodology designing adaptive cooperative multi agent systems 

zambonelli eds 
methodologies software engineering agent systems 
agent oriented software engineering handbook pp 
kluwer publishing amsterdam netherlands 
picard 

emergent timetabling cooperative selforganisation 
proceedings third international workshop engineering self organising applications pp 

utrecht netherlands guo james valencia li 
directed self assembly dimensional top bottom design 
engineering self organising systems 
brueckner 
eds lecture notes artificial intelligence volume pp 

springer verlag berlin 

adaptive modeling approach method implementing adaptive agents 
massively multi agent systems ishida gasser nakashima eds 
lecture notes artificial intelligence volume pp 

springer verlag berlin 
valckenaers saint 
middleware extending multi agent systems enable open business collaboration 
th ifip international conference information technology balanced automation systems manufacturing services 
florian self organisation multiagent systems agent interaction agent organisation 
third international workshop modelling artificial societies hybrid organisations pp 

searle 
rediscovery mind 
mit press cambridge ma usa 
leonard perrier 
project new approach simulating dynamics 
eds 
modelling transport processes soils pp 

press leuven 
emergence holonic enterprises multi agent systems fuzzy evolutionary approach 
frontiers artificial intelligence applications soft computing agents 
ios press frontiers ai applications series amsterdam netherlands 

adaptive information infrastructures society 
engineering self organising systems brueckner 
eds lecture notes artificial intelligence volume pp 

springer verlag berlin 
varela 
principles biological autonomy 
elsevier new york ny usa 
weyns holvoet 
role model adaptive agents 
fourth symposium adaptive agents multiagent systems aisb convention 
weyns holvoet 
role environments multiagent systems 
informatica ljubljana slovenia 
press 

zambonelli 
tolksdorf 
spray computers frontiers self self organisation emergence mas overview informatica xxx yyy organisation pervasive computing 
second international workshop theory practice open computational systems th ieee international workshops enabling technologies infrastructure collaborative enterprises pp 

ieee computer society los alamitos ca usa 
