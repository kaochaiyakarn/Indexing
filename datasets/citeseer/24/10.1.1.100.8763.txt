communication efficient group key agreement kim dept information computer science university california irvine ics uci edu adrian perrig computer science division university california berkeley perrig cs berkeley edu gene tsudik dept information computer science university california irvine gts ics uci edu traditionally research secure group key agreement focuses minimizing computational overhead cryptographic operations minimizing communication overhead number protocol rounds secondary concern 
dramatic increase computation power witnessed past years exposed network delay wans primary culprit negative performance impact key agreement protocols 
majority previously proposed protocols optimize cryptographic overhead protocol 
high wan delay negatively impacts efficiency 
goal construct new protocol trades computation communication efficiency 
key agreement protocol previously proposed steer extend handle dynamic groups network failures network partitions merges 
resulting protocol suite provably secure passive adversaries provides key independence passive adversary knows proper subset group keys discover group key included subset 
furthermore protocol simple fault tolerant suited high delay wide area network 
keywords peer group key agreement fault tolerant protocol 
proliferation applications protocols services rely group communication prompts need group oriented security mechanisms addition traditional requirements faulttolerance scalability reliability 
current group oriented applications include ip telephony video conferencing collaborative workspaces interactive chats multi user games 
security requirements applications fairly typical confidentiality data integrity authentication access control 
achieved form group key management 
peer nature group applications results certain unique properties requirements 
member peer group sender receiver 
second peer groups tend small fewer members 
peer groups hierarchy members enjoy status 
solutions assign greater importance group members undesirable privileged members behave maliciously attractive targets attacks 
essentially rules traditional key distribution paradigm calls higher trust group member generates distributes keys 
networks prone faults congestion subset group members prepared function group right 
words network partition splits members multiple subgroups subgroup quickly recover continue function independently 
decades lot research conducted aim minimizing cryptographic overhead security protocols 
long held fact heavy weight computation large number arithmetic basis modern cryptographic algorithms greatest burden imposed security protocols 
believe case past rapid advances computing resulted drastic improvements large number arithmetic computations 
example years ago top line risc workstation performed bit modular exponentiation ms today mhz pentium iii pc priced th old risc workstation performs operation ms contrast communication latency improved appreciably 
network devices communication lines significantly faster cheaper 
communication especially internet accessible affordable resulted drastic increase demand network bandwidth 
consequently communication efficient group key agreement explosion number users devices causes network congestion outages 
computation power bandwidth increasing network delay faced fundamental limit dictated speed light 
bottleneck shift computation communication latency leads start looking cryptographic protocols different light allowing liberal cryptographic operations attempting reduce communication overhead 
includes round message complexity 
communication overhead especially relevant peer group setting group members spread large network global internet 
consider protocol suggested steer group key agreement protocols 
protocol diffie hellman key exchange assumes formation secure static group 
extend protocol deal dynamic groups network failures 
protocol referred str neglected due heavy computation communication requirements communication rounds cryptographic operations necessary establish shared key group members 
extend str construct new communication efficient protocols support dynamic groups 
concretely construct entire group key management protocol suite particularly efficient wan environment moderate high network delays dominate 
extended version provides detail algorithms security available authors 

reliable group communication group key agreement section set stage rest brief overview notable features reliable group communication group key agreement 

reliable group communication semantics modern collaborative distributed applications require reliable group communication platform 
current reliable group communication toolkits generally provide strong group communication semantics extended virtual synchrony evs view synchrony vs fls 
semantics guarantee group members see set messages sequential group membership events sender requested message order fifo causal total preserved 
vs offers stricter guarantee evs messages delivered recipients membership viewed sender application originally sent message 
context require underlying group communication provide vs stress vs needed sake fault tolerance robustness security protocols way affected lack vs details interaction key agreement protocols reliable group communication addressed 

communication delay due reliable group communication platform network delay amplified necessary acknowledgments group members 
speed light puts lower bound minimum network delay 
example laser pulse travels fiber takes ms new york san francisco ms paris san francisco ms london sydney 
practice networks today slower lower bound factor due switching overhead 
put perspective mhz pentium iii pc performs single bit modular exponentiation expensive basic public key primitives ms speed computers continue increase 
comparing wan network delay clear reducing number communication rounds important long run efficient group key agreement scheme reducing computation overhead 

group key agreement comprehensive group key agreement solution handle adjustments group secrets subsequent membership change operations underlying group communication system 
membership changes considered join occurs prospective member wants join group 
leave occurs member wants leave forced leave group 
different reasons member deletion voluntary leave involuntary disconnect forced 
partition occurs group split smaller groups 
group partition take place reasons fairly common network failure occurs network event causes group 
consequently group split fragments 
communication efficient group key agreement explicit partition occurs application decides split group multiple components simply exclude multiple members 
merge occurs groups merge form single group network fault heal occurs network event causes previously disconnected network partitions reconnect 
explicit merge occurs application decides merge multiple pre existing groups single group 
glance events network partitions fault heals appear infrequent dealing purely academic exercise 
practice events common owing network misconfigurations router failures 
addition mobile ad hoc wireless networks partitions common expected 
moser compelling arguments support claims 
dealing group partitions merges crucial component group key agreement 

cryptographic properties section summarize desired properties secure group key agreement protocol 
model kpt define properties weak backward secrecy guarantees previously group keys discovered new group members 
weak forward secrecy guarantees new keys remain reach group members 
group key secrecy guarantees computationally infeasible passive adversary discover group key 
forward secrecy confused perfect forward secrecy pfs guarantees passive adversary knows contiguous subset old group keys discover subsequent group keys 
backward secrecy guarantees passive adversary knows contiguous subset group keys discover preceding group keys 
key independence guarantees passive adversary knows proper subset group keys discover group key 
relationship properties intuitive 
typically called forward backward secrecy literature different sense adversary assumed current group member 
properties additionally include cases inadvertently leaked compromised group keys 
forward backward secrecy stronger condition weak forward backward secrecy 
backward forward secrecy subsumes group key secrecy key independence subsumes rest 
combination backward forward secrecy yields key independence 
assume key authentication part group key management protocols 
communication channels public authentic 
means messages digitally signed sender sufficiently strong public key signature method dsa rsa 
receivers required verify signatures received messages 
long term secrets keys concerned perfect forward secrecy pfs achieved trivially 

protocols describe protocols str key management suite join leave merge partition 
protocols share common framework features group member contributes equal share group key share kept secret group member 
group key computed function current group members shares 
group grows new members shares factored group key remaining members shares stay unchanged 
group shrinks departing members shares removed new group key remaining member changes share 
protocol messages signed sender assume authenticated broadcast channel 
describing protocols detail review basic str key agreement protocol notation rest 

notation notation number protocol parties group members group member indices 
mi th group member 
ri bri mi session random secret key leaf node mi mi blinded session random ri mod kj secret key shared mj blinded kj kj mod large prime number exponentiation base ln bt communication efficient group key agreement tree specific notation tree node internal tree node level leaf node associated member mi tree member mi tree member mi including blinded keys bk ln br bk ln br ln br bk ln br notation str shows example str key tree 
tree types nodes leaf internal 
leaf node associated specific group member 
internal node children lower internal node leaf node ln exception leaf node corresponding 
note consequently 
leaf node ln session random ri chosen kept secret mi 
blinded version thereof bri ri mod internal node associated secret key kj public blinded key kj mod secret key ki result diffie hellman key agreement node children 
exception equivalent ri 
ki computed recursively follows ki ri mod bri ki mod mod 
group key key associated root node note root group key directly purposes encryption authentication integrity 
sub keys derived root key applying cryptographically secure hash function root key 
blinded keys assumed public 
basic key agreement protocol follows 
assume members know structure key tree initial position tree 
simple ordering uniquely determines location member key tree 
furthermore member knows session random blinded session members 
members compute group key corresponding computes br mod mod bk mod br mod bk mod 
kn brn kn mod broadcasts blinded keys 
armed message member computes kn follows 
mentioned members derive group key additional broadcasts 
mi knows session random ri broadcast message 
derive ki ri mod compute remaining keys recursively group key public blinded session ki bri ki mod 
membership change members independently update key tree 
assume underlying group communication system provides view synchrony see section members correctly execute protocol recompute identical key tree membership event 
fact describes minimal requirement group member compute group key 
members know blinded session members exist members compute group key 
proof 
follows directly recursive definition group key 
words member lowest leaf nodes obtain group key computing pairwise keys recursively blinded session members 

member compute group key knows secret share blinded key sibling subtree blinded session members higher tree 
proof 
follows definition group key 
compute group key member mi needs ri bri bri 
brn 
protocols described benefit special role called sponsor assigned certain group member membership change 
sponsor reduces communication overhead performing communication efficient group key agreement housekeeping tasks vary depending type membership change 
criteria selecting sponsor varies described 

member join protocol assume group users 
mn group communication system announces arrival new member 
new member prior group receive notification simultaneously 
new member mn broadcasts join request message contains blinded key 
blinded session random brn time current group sponsor mn computes blinded version current group key sends current tree bt mn blinded keys blinded session 
mi increments creates new root key node children root node prior tree left new leaf node ln corresponding new member right 
note member compute group key see existing members need new member blinded session random new member needs blinded group key prior group join operation sponsor topmost leaf node member current group 
described join protocol takes communication round cryptographic operations compute new group key message exchange 
join protocol provides backward secrecy new member blinded key existing group 
protocol provide key independence knowledge group key join compute group key join 
remedy situation modify protocol require sponsor change session random corresponding blinded value brn 

member leave protocol group members member md leaves group 
sponsor ms leaf node directly leaving member md 
sponsor 
hearing leave event group communication system remaining member updates key tree deleting nodes ln corresponding md parent node nodes leaving node 
sibling md promoted replace md parent 
sponsor ms selects new secret session random computes keys blinded keys root broadcasts bt group 
information allows members recompute new group key 
summary leave protocol takes communication round involves single broadcast 
cryptographic cost varies depending factors position departed member position remaining member needs compute new key 
total number serial cryptographic operations leave protocol expressed assuming original group size worst case leave group 
cost leave operation equal leave member 
average leave cost 
leave protocol provides forward secrecy member compute new key owing sponsor changing session random 
protocol provides key independence knowledge new key derive previous keys due sponsor refreshing session random 

group partition protocol network fault cause partition group 
remaining members appears concurrent leave multiple members 
minor modification leave protocol handle multiple leaving members single round 
difference sponsor selection 
case partition sponsor leaf node directly lowest numbered leaving member 
lowest numbered leaving member sponsor lowest numbered surviving member 
deleting leaving nodes sponsor ms refreshes session random key share computes keys blinded keys going tree plain leave protocol terminating computation kn mod broadcasts updated key tree bt containing blinded values 
member including ms compute group key 
computation communication complexity partition protocol identical leave protocol 
holds security properties 
communication efficient group key agreement 
group merge protocol describe str merge protocol groups 
general protocol merging larger number groups straightforward extension 
assume case join communication system simultaneously notifies group members groups merge event 
reliable group communication toolkits typically include list members merge merge notification 
specifically require member able distinguish group group merging 
assumption unreasonable satisfied spread 
natural merge smaller group larger place smaller tree directly top larger 
trees size unambiguous ordering decide group joins 
example compare identifiers respective sponsors 
consequently lowest numbered leaf smaller tree right child new intermediate node 
left child new intermediate node root larger tree 
respective trees known priori key management starts nodes construct new key tree receiving computing cryptographic information 
round merge protocol sponsors topmost members group exchange respective key trees containing blinded keys 
highest numbered member larger tree sponsor second round merge protocol 
blinded session group sponsor computes key blinded key pair upto intermediate node just root node 
broadcasts key tree blinded keys blinded session members 
members complete set blinded keys allows compute new group key 
case merge protocol runs communication rounds 

robustness 
protocol unification described separately preceding sections str operations join leave merge partition represent different expression single protocol 
justify claim informal argument 
obviously join leave special cases merge partition respectively 
clear merge partition collapsed single protocol case key tree changes remaining group members lack number blinded keys blinded session prevents computing new root key 
partition occurs remaining members reconstruct tree blinded keys missing 
case merge shorter tree merged taller tree member compute group key knows blinded session random member deepest member compute group key knows blinded session random member blinded group key broadcast message member compute new group key 
established partition merge initially result new key tree number missing blinded keys 
case merge missing blinded keys distributed rounds 
sponsor broadcasts subtree including blinded keys 
member subtree compute new root key receiving broadcasts 
case partition similar missing blinded keys new group key distributed round 
apparent similarity partition merge allows lump protocols stemming membership events single unified protocol 
shows pseudocode 
receive msg msg type membership event construct new tree missing blinded keys compute missing keys am sponsor compute missing blinded keys broadcast new blinded keys endif receive msg msg type broadcast update current tree endwhile incentive threefold 
unification allows simplify implementation minimize size 
second security correctness easier demonstrate single protocol 
third claim slight modification str protocol self stabilizing fault tolerant discussed 

cascaded events network disruptions random unpredictable natural consider possibility called cascaded membership events 
fact cascaded events impact group protocols considered group communication literature alas frequently communication efficient group key agreement neglected security literature 
furthermore probability cascaded event higher wide area network 
cascaded event occurs membership change occurs handled 
example partition occur prior partition processed resulting cascade size 
claim str partition protocol self stabilizing robust cascaded network events 
general self stabilization desirable feature lack thereof requires extensive complicated protocol coating shield protocol cascaded events sufficiently protocol robust respect cascaded events essentially making re entrant 
complicated inefficient seen 
pseudocode self stabilizing protocol shown 
receive msg msg type membership event construct new tree missing blinded keys compute missing keys am sponsor compute missing blinded keys broadcast new blinded keys endif receive msg msg type broadcast update current tree msg type membership event construct new tree endwhile view synchrony discussed section provide informal proof protocol terminates finite number consecutive cascaded events 
due view synchrony member membership view 
assume ordering members group communication system key tree 
member say mi compute group key blinded session known 
members compute group key broadcast message member mi 
show member knows member session random eventually 
pseudocode sponsor node lowest node blinded session random missing 
sponsor ms compute group key blinded keys missing broadcasts key tree includes blinded session random blinded keys ms knows 
sponsor round owns missing blinded session random 
note member strictly blinded session blinded keys number round increases 
cascaded events stabilize group communication system str protocol terminates 

discussion 
security str protocol suite structure group key form special case key agreement kpt 
defines general tree diffie hellman key agreement 
str benefits provable security protocols 
briefly kpt shown group key secrecy reducible decision diffie hellman ddh problem 
basic property group key secrecy sufficient security entire protocol suite 
recall desired security properties defined section 
show str offers group key secrecy weak forward backward secrecy properties 
furthermore show str provide key independence modifying protocol slightly 
informal argument weak forward backward secrecy 
group key secrecy property implies group key derived blinded keys 
secret key needed compute secret keys root key 
need show joining member obtain keys previous key tree 
picks secret share blinds broadcasts part join request 
receives blinded keys path compute secret keys key path 
clearly keys contain contribution independent previous secret keys path 
derive previous keys 
similarly argue str provides weak forward secrecy 
member leaves group rightmost member subtree rooted sibling node changes secret share 
leaf node deleted parent node replaced sibling node 
operation causes contribution removed key key path 
knows blinded keys group key secrecy property prevents deriving new group key 
section str protocols provide key independence 
means active attacker acquires group key additive event join merge knowledge key compute newer key event 
hold subtractive events leave partition sponsor changes session random event 
join merge protocols modified slightly provide key independence explained join merge protocol join merge event sponsor sponsors case merge changes communication efficient group key agreement session random recomputes blinded key proceeding rest protocol 
simple change results key independence membership change followed session random change 
course assume individual members honest leak session adversary 
behavior regarded equivalent revealing group key 

complexity analysis section compares computation communication str protocol group key agreement methods cliques gdh stw tree diffie hellman kpt burmester desmedt bd bd 
protocols provide contributory group key agreement different extensions party diffie hellman key exchange 
support dynamic membership operations 
consider costs number rounds affects serial communication delay 
total number messages number messages grows probability message loss corruption increased delay 
number unicasts broadcasts broadcast expensive operation unicast requires acknowledgments group communication system 
number serial exponentiation main factor computation overhead 
robustness lack robustness requires additional measures secure group communication system robust cascaded nested faults membership events 
table shows comparison current approaches group key management 
bold text refers parameter severely slows protocol wan deployment str best suited 
cliques gdh protocol number new members considered merge cost depends number new members 
cost average value key tree fully balanced 
partition leave cost str computed average depends depth lowest numbered leaving member node 
security reasons stw bd restart anew membership event 
seen table str minimal communication membership event 
showed section robustness str protocol easier implement protocols achieves higher robustness network partitions 
cliques gdh quite expensive protocol wide area network hard expensive provide robustness cascaded events communication cost merge increases linearly number new members 
partition protocol expensive relatively slow may cause cascaded faults long delays agree key 
cost bd acceptable large number simultaneous broadcast messages problematic wide area network 
table protocol comparison rounds messages bcast exp robust cliques hard log log easy log log log log bd easy str easy join leave partition merge unicast bcast broadcast exp exponentiation amir ateniese hasse kim schultz stanton tsudik 
secure group communication asynchronous networks failures integration experiments 
icdcs april 
amir kim schultz stanton tsudik 
exploring robustness group key agreement 
icdcs 
bd burmester desmedt 
secure efficient conference key distribution system 
eurocrypt 
fls fekete lynch shvartsman 
specifying group communication service 
acm podc santa barbara ca august 
kpt kim perrig tsudik 
simple fault tolerant key agreement dynamic collaborative groups 
acm ccs november 
moser amir melliar smith agarwal 
extended virtual synchrony 
icdcs june 
menezes van oorschot vanstone 
handbook applied cryptography 
crc press 
steer diffie wiener 
secure audio teleconference system 
crypto 
stw steiner tsudik waidner 
cliques new approach group key agreement 
ieee august 
