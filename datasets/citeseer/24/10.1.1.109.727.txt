wysiwyg web wrapper factory arnaud sahuguet department computer information science university sahuguet saul cis upenn edu fabien ecole nationale superieure des telecommunications paris france fabien enst fr toolkit generation wrappers web sources 
consists retrieval language identify web sources declarative extraction language html extraction language express robust extraction rules mapping interface export extracted information ned data structures 
assist user creation wrappers rapid easy toolkit ers wysiwyg support wizards 
permit fast semi automatic generation ready go wrappers provided java classes 
successfully generate wrappers database systems software agents making content web sources easily accessible kind application 
keywords web wrapper information extraction html parsing html xml conversion 
need web wrappers design guidelines web major conduit information repositories kinds 
open standards entry costs publishers ers free navigation tools users de facto standard publish information 
cases access information granted web gateway forms query language html display vehicle 
architecture ers convenient access human users suitable computer programs 
unfortunate consequence web information sources exist independently isolated information islands 
instance go favorite line bookstore want get price quote french dollars get price bookstore go web service ers currency exchange rate conversion 
hand clicking fetching reading web documents 
really automation entire process web services services advantage interoperability web sources legacy databases web sources 
reach goals strong need web wrappers 
database community software component converts data queries model 
web environment purpose convert information implicitly stored html document information explicitly stored data structure processing 
role fold retrieving web document extracting information exporting structured way 
wrapper able cope volatile nature web environment network failures ill formed documents change layout unfortunately web wrappers today written ad hoc way semantics hidden inside code hard maintenance reuse 
order build robust wrappers identify key issues concerning design 
modular layered architecture design acknowledge separate layers retrieval extraction mapping order er independence reuse layer identical di erent web sources instance query form 
wrapper information ow layers described follows 
processed html document rst retrieved web retrieval rules 
extraction rules applied retrieved document extract information 
information mapped structures exported wrapper upper level application mapping rules 
important note extraction layer purpose capable doing data manipulation la xml ql instance data manipulation responsibility upper level application 
rationale keep layer simple possible splitting responsibilities 
permits reusable layers describe information sources 
declarative speci cation speci cation layer declarative order implementation independent understandable maintainable reusable 
declarative speci cations permit clear semantics 
big advantage speci cations exchanged imitated way people copy paste web page fragments looking html source templates 
multi granularity extraction crucial recognize information contained web document di erent granularities 
navigating html tag hierarchy useful handle global inter tag organization document sections lists tables 
crucial reach intra tag information enumeration inside table cell 
ner grain extraction tools regular expressions necessary 
types extraction complementary necessary capture meaning web document 
precise semantics clearly de ned object models requirement declarative speci cations 
representation html document document navigation easier robust 
having object model information extracted document important order er expressive tailored mappings 
ease reuse generation wrapper utilization maintenance easy support tools wizards guide user various stages creation wrappers 
web resources largely available design web wrappers restricted experts 
rest toolkit follows design guidelines mentioned aims helping users create wrappers web sources 
various components toolkit interaction information ow 
rup dug dug dug toolkit html document rst retrieved web retrieval rules 
retrieved fed html parser constructs document object model 
extraction rules applied parse tree extracted information stored internal format nsl 
nsl structures exported upper level application mapping rules 
rules determine process generated user help wizards 
rules compiled compiler java classes run stand application runtime 
examples motivated building web agent helps user purchasing books line 
role agent gather information book set books return descrip tion price expressed user currency 
book information extracted amazon com 
currency conversion rates come yahoo 
data sources wrapper 
agent output xml document 
purpose demonstrate wrapper framework automation interoperability web sources conversion html xml 
rest organized follows 
section detail wrapper layers 
section various components toolkit involved wrapper creation role information processing 
section freshly wrappers build web agent 
related section conclude 
retrieving web documents initial job web wrapper retrieve processed web document 
retrieval layer charge issuing request remote server fetching corresponding html page web browser 
wrapper completely transparent job done background retrieval layer creation request management connections handling redirections authorizations retrieval layer described set retrieval rules look interface de nition name rule followed list parameters takes type method get post corresponding url see 
url contain variables replaced string value order er parameterization 
post method parameters speci ed param keyword 
information included request speci ed 
retrieval rules data sources bookstore example 
amazon com retrieval rules get string keyword method post url www amazon com exec xxxx param keyword query keyword mode books yahoo 
currency conversion retrieval rules get method get url quote yahoo com retrieval layer speci cations wrappers extracting information hel document retrieved information extracted 
wrapper arbitrary number extraction rules document 
mentioned extraction rules expressed html extraction language hel 
section er language 
full details 
building html parse tree extraction performed document document just big string representation better suited highlevel manipulation 
web document rst transformed parse tree corresponding html hierarchy document object model 
tree consists root internal nodes leaves 
node corresponds html tag text chunks corresponds pcdata nodes 
leaf pcdata bachelor tag important note mapping valid html bachelor tag tag require closing tag img br 
document tree 
non leaf nodes children accessed label label html tag index order appearance 
ways navigate tree navigation tree performed path expressions :10.1.1.45.8397
rst way navigate document hierarchy operator 
path html head title lead node corresponding title tag inside head tag 
type navigation ers canonical way reach information token chunk text surrounded tag corresponds unique hierarchical path limited 
second way navigate ow document operator 
really corresponds navigation document follows reading display order 
formally path html table lead rst table tag depth rst traversal tree starting html tag 
interest operator navigation instance jump leaf tree node document ow 
operator increases considerably expressivity hel permits cope irregularities structure 
useful create navigation shortcuts 
operators apply internal node tree return child label name html title index value 
index ranges return arrays nodes wild card :10.1.1.45.8397
ambiguity index value omitted assumed zero 
illustration dt return list book entries 
extracting node information extraction rules concerned nodes information carry 
tree node extract text value txt 
text content leaf empty tag corresponds chunk text pcdata 
internal nodes text value corresponds recursive concatenation sub nodes depth rst traversal 
underlying html source extracted src 
properties node value attributes number children retrieved getattr numberof 
extract hyperlink leading book information getattr href 
extraction rules books html body table tr td ul li dl dt pcdata txt title getattr href url dd pcdata txt match published year dd pcdata txt match split authors dd pcdata txt match price amazon com document extraction rule :10.1.1.45.8397
power regular expressions relevant information entirely captured html structure available document object model enumeration inside table cell regular expression patterns useful 
hel provides operators match split follow perl syntax see 
match operator takes string pattern returns result matching 
depending nature pattern result string list strings 
number parenthesized sub patterns indicates number items returned match 
example see match return pair title year 
split operator takes string separator inputs returns list substrings 
operators cascade operator applied element result 
match operator identify list authors rst apply split extract author list separator 
enforcing constraints schema float value extraction rules value html body center table tr td txt html body center table tr th txt ff html body center table tr th txt yahoo 
document extraction mapping rules rule 
mentioned array elements speci ed wild cards index values 
de ned variables conditions attached introducing clause 
conditions involve nodes properties various comparison operators ered language 
illustration expressive power constraints extract content table cell identi ed column row entries 
looking cell corresponds row column ff order extract exchange rate french 
creating nested structures wrappers extraction means extracting single piece information string document 
really think extraction structure document 
information interested list books able extract list 
book composed various pieces title price extraction able capture altogether really come 
language provides fork operator construct nested string lists multiple sub paths time 
permits extract structures single information tokens 
particularly useful information spread page need put 
book see put title url year price list authors 
fork operator inside path expression forked paths complexity 
fork operator di erent operators permits build irregular structures elements list di erent depth 
mapping layer know deal irregular nested structures 
mapping information information extracted extraction rule stored nsl internal format 
purpose nsl store strings piece information extracted regarded string arbitrarily complex structures 
nsl datatype formally de ned nsl null string listof nsl structure nsl levels nesting fully de ned rule 
array split rule result extra level nesting result 
yahoo 
wrapper nsl result string 
amazon wrapper list items dt item list items repeated operator fourth list strings string author split 
philosophy wrappers return freely consumed upper level applications 
speci ed schema book books public class book string title int year float price string authors public book nsl title string nsl year int nsl authors string nsl price float nsl :10.1.1.45.8397
mapping layer speci cation amazon wrapper 
mapping extracted information returned nsl 
knows convert java base types string int oat array extensions 
instance value extracted automatically converted oat 
default mapping simple nsl regular structures 
complex structures user de ne mappings 
current implementation means providing java class suitable constructors know consume nsl produce valid instance corresponding class 
extracting book entries want capture lot information concerning book 
want able manipulate extracted information book object book related methods 
case want wrapper return book corresponding java class 
possible mapping amazon com database wrapper 
today ers non declarative user de ned mappings java classes 
ers declarative mapping object model similar xml way 
toolkit part role toolkit support user cient tools ease speed creation layer specially design extraction rules require thorough understanding underlying html document 
section various elements toolkit 
role form wizard assist user writing retrieval rules web forms 
allows user capture various components html form simply clicking corresponding submit button 
wizard provides information url cgi program method type list inputs name type default value 
shows information returned user bookstore example exactly need order write retrieval layer 
compare form wizard action 
form wizard implemented cgi script takes web page form returns annotated javascript extensions see appendix implementation details 
extraction wizard assists user writing extraction rules web documents 
web document user document annotated appears exactly original compare gures 
user simply clicks piece information interested wizard returns corresponding extraction rule 
implemented annotating original document 
details annotation appendix 
important note wizard returns canonical path piece information clicked user 
wizard deal collections items 
path expressed hel language operator constraints regular expressions 
returned extraction rule best terms robustness genericity start anyway compare path returned wizard ectively inside wrapper 
extraction wizard action 
mapping wizard helps user create mapping ned data structured 
today implemented 
parser html compliant parser 
html way people writing parser recover badly formed documents 
compiler role generate java class web wrapper 
declarative description wrapper figures compiler generates java class le called java program 
runtime permits generated wrappers stand applications 
run time set java classes necessary run standalone application 
package jar le kb suitable embedded applications mobile agents applets 
putting book books amazon get args books list books float coeff yahoo get conversion coeff int books length system println books ffr coef pieces java code bookstore application 
wrappers see figures compiled java classes amazon class yahoo class 
properly de ned wrappers sources focus upper level application 
main program takes author name book title input returns list matches amazon wrapper 
yahoo 
wrapper extract currency exchange rate 
book amazon wrapper permits extract title year authors price item list 
price converted french application outputs result xml 
java core application output figures 
xml version book title darkness title author raymond author price currency ffr price book book title daughter empire title author raymond author author author price currency ffr price book 
output main application 
related section compare approach respects various key aspects generation web wrappers 
retrieval layer frameworks webl er advanced features retrieval 
web sources described declaratively term services including recovery failure retries alternate retrieval 
webl general purpose programming language web retrieval consists writing code high level methods provided language 
interesting point semantics retrieval speci ed language constructs service combinators 
retrieval described declaratively 
issues recovery exact semantics retrieval addressed order keep layer simple possible 
extraction layer issue related extraction fold document structure extraction express 
hand web document viewed ow tokens processing requires regular expressions tsimmis expressive grammars araneus sims :10.1.1.30.8455
html reinvented wrapper 
hand document hierarchy implied tags dom higher level xml pointer 
navigation explicit structure restricted hierarchy capture ner granularity information 
webl extraction embedded piece code procedural description 
araneus sims mix declarative grammar approach 
web oql xml ql extraction query variable binding 
qel xml pointer issues responsibility higher level application 
qel quali ed path expression extractor language 
xql er similar declarative approaches return complex constructs 
try html structure dom object model 
knowledge built feature system 
ers power regular expressions rich navigation capabilities constraints constructs access ner grain information order capture structure including nesting 
mapping layer wrappers charge providing structured access extracted information 
web oql web document oql instance 
tsimmis extracted information converted oem format semi structured data 
ers corba interfaces 
yat ers expressive rule framework user interface express mapping transformations 
wrappers directly build structured objects complex objects relations information prefer separate extraction manipulation nsl intermediate representation order favor re 
advantage anonymous nsl structure re extracted structure xml data exported languages xml ql 
wrapper construction strategies manual generation wrapper involves writing ad hoc code 
web oql takes advantage generic mapping html structure oql object model means writing complicated select queries 
semi automatic generation bene ts support tools help design wrapper 
web methods entire structure understood system user pick wants 
sims ers demonstration oriented interface user shows system information extract 
kushmerick identi es classes wrappers apply machine learning techniques generate wrappers automatically 
system fed training examples require human supervision 
rely human expertise er support creation accessible wizards semi automatic construction 
choice dom object model gives free real wysiwyg interface 
parsing web documents parsing html appears completely trivial rst sight document web non compliant parsers need able recover ill formed documents 
html subset sgml sgml parsers james clarke sp 
input html document corresponding dtd 
upgrade html version simply means providing upgraded dtd 
cost genericity parser may quite big mb recovery heuristics may targeted speci cally html 
parser written java cc compliant html specication footprint kb 
allows ne tuning really necessary catch human language 
recovery heuristics similar 
performance point view parsing documents expensive regular expressions 
parser throughput kb sec compared mb sec regular expression processing 
fetching documents remains performance bottleneck line application toolkit 
toolkit build wrappers web data sources 
identi ed independent layers retrieval extraction mapping built independently er re web browsers permissive people aware documents html compliant 
rapid development 
extraction layer particular er highly expressive extraction language navigates parse tree html document 
comes powerful operators reach information tag level deeper multi granularity permits return nested structures order truly capture information expressed document way 
layer provide declarative language describe semantics support tools wizards help user 
document object model gives free wysiwyg interface wizard 
successfully toolkit build large range wrappers diverse web resources knowledge repositories cia world factbook medline web catalogues amazon com comp usa databases internet movie database ibm patent server 
time came robust running wrapper minutes wizards 
maintenance quite easy 
part focus improvement robustness rules returned extraction wizard machinelearning technique 
investigate notion web service ers higher level interface web data sources object identity caching 
look optimization techniques lazy parsing rule evaluation order improve performance 
toolkit developed jdk javacc generate html hel 
regular expressions evaluated pat regular expression package 
line examples applications penn database research group web site 
abiteboul quass mchugh widom wiener :10.1.1.45.8397
lorel query language semistructured data 
journal digital libraries 
real challenge lazy parsing allowing recovery ill formed documents 
charles allen 
application integration xml 
world wide web journal november 
gustavo arocena alberto mendelzon 
weboql restructuring documents databases webs 
proc 
icde orlando february 
crabtree scott val tannen 
oql interface system 
technical report university department computer information science 
appear 
deutsch mary fernandez daniela florescu alon levy dan suciu 
xml ql query language xml 
url www org tr note xml ql 
jean robert raschid mar vidal laura bright 
wrapper generation toolkit speci construct wrappers web accessible data sources 
technical report institute advanced computer studies university maryland college park 
url ftp ftp umiacs umd edu pub baa pub coopis ps 
hammer garcia molina cho crespo 
extracting semistructured information web 
proceedings workshop management semistructured data 
tucson arizona may 
thomas hannes marais 
webl programming language web 
www brisbane australia 
url www research digital com src webl index html 
nicholas kushmerick 
wrapper induction ciency expressiveness 
workshop ai information integration aaai 
mecca atzeni merialdo 
databases web bases araneus experience 
technical report rt dia universita degli studi di roma tre may 
ion muslea steven minton craig knoblock 
wrapper induction semistructured web base information sources 
conference automated learning discovery june 
naveen ashish craig knoblock 
semi automatic wrapper generation internet information sources 
proc 
second ifcis conference cooperative information systems coopis charleston south carolina 
dave 
clean web pages hp html tidy 
www brisbane australia 
url www org people tidy 
arnaud sahuguet fabien 
wysiwyg web wrapper factory 
technical report university pennsylvania department computer information science 
appear 
url cis upenn edu sahuguet 
david schach joe lapp robie 
xml query language xql 
ql query languages workshop 
ome simeon sophie cluet 
yat server 
proc 
webdb valencia 
url ftp ftp inria fr inria projects verso ps gz 

document object model 
url www org dom 
larry wall tom christiansen randal schwartz 
programming perl 
reilly associates 
world wide web consortium 
xml pointer language 
url www org tr wd 
appendix html annotation form wizard function node node form return node return node function node var form node var str action form action form method form elements length form elements type submit str name form elements name type form elements type value form elements value return str javascript extensions form annotation corresponds transformation form input type submit form form input type submit alert form html annotation extraction wizard wysiwyg interface takes url input parses corresponding html document returns new annotated html document 
original document fed html parser build parse tree 
parse tree document reconstructed away chunk text enclosed new tag generated parser id value corresponds path leading 
text display id value corresponding path 
annotation performed pcdata leaf corresponding outer tag transformed 
basically span inserted outer tag 
bene text speci behavior html browser 
assuming path expression corresponding tag html tree html tag txt transformation tag stuff tag tag span id html tag txt stuff span tag new span tag created carries information path leads speci piece information 
important note path expressions id returned canonical operator 
extraction rule robust start anyway 

