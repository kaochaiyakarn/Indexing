autonomous reputation scheme discourage free riding peer peer system 
andrade miranda cirne francisco investigate circumstances possible discourage free riding peer peer system resource sharing prioritizing resource allocation peers higher reputation 
model predict conditions necessary reputation scheme succeed discouraging free riding method 
show simulations representative cases simple autonomous reputation scheme works nearly discouraging free riding ideal reputation scheme 
investigate expected dynamic behavior system 
peer peer systems effective robust way sharing resources 
effectiveness existing peer peer systems diminished widespread free riding :10.1.1.160.7346
peer free rider consumes resources donated donate resources 
nonzero cost donation system discriminate free riders peers peers economic incentive free riders reducing resources available donation community diminishing utility system 
potential solution introduce reputation scheme system 
interactions peers affect reputation way designed free riders unable build high reputation 
peer resource donate peers requesting resource peers higher reputation priority 
idea advantage gives universidade federal de grande dsc edu br hp laboratories bristol miranda hp com peers donate resources may overcome disadvantage cost donation 
reputation differs classic reputation enhance quality transactions peerto peer systems ebay marginalize untrustworthy peers systems surveyed ooi 
reputation discourage free riding choice interact peer high reputation order reward peer previous behaviour enhance expected quality immediate transaction 
particularly interested circumstances possible discourage free riders autonomous reputation scheme 
autonomous reputation scheme peers local information prioritize peers 
access reputation information involving peer peer interactions participated 
reputation peer general different eyes different peers attempt reconcile local reputations create global assessment 
result autonomous reputation schemes relatively simple implement require cryptographic infrastructure centralized storage guarantee integrity data retrieved peers case reputation schemes assign single global reputation value peer 
autonomous reputation schemes peer peer networks :10.1.1.14.1911:10.1.1.12.5484
alternative way reputation scheme discourage free riders give peers low reputation low priority access donated resources refuse donate resources altogether peers reputation chosen limit peer resources donate peers low reputation requested resources remain 
alternative cause bootstrapping problems au reputation scheme new collaborator entering system autonomous reputation show free rider donating resources detect peer free rider donated resources peer 
consider effect reputation scheme prioritize donations ban certain kinds donation completely 
explore design space peer topeer system possible discourage free riding prioritizing resource donations autonomous reputation scheme 
described extremely lightweight autonomous reputation scheme :10.1.1.12.5484
designed promote equitable resource sharing ourgrid peer peer system currently developing sharing cpu cycles bag tasks applications 
autonomous reputation scheme reputation peer eyes peer equal total value resources donated minus total value resources donated zero value negative 
simulations representative cases demonstrate effectiveness reputation scheme discouraging system exhibit eager consumption peers consuming state limit amount resources positive utility 
non eagerness realistic resource shared example cpu time applications easily parallelizable access particular software application 
define free rider peer contribute resources system collaborator peer contribute resources 
say system works time time collaborators change strategy free riding words expected utility collaborator greater expected utility collaborator changed strategy 
free riders expected utility great expected utility outside system system works expected utility collaborators system greater expected utility left system 
assume peers consuming state donated resources collaborator donating state 
implies resources interchangeable case system shares generic cpu time bandwidth storage 
analysis may extend peer peer systems sharing generic resources data files peer requesting specific file general able receive peer currently donating resources peers currently donating resources copy file 
measurements large scale peer peer file sharing systems large requests relatively small number files 
popular files consider peer peer virtual subsystems consisting requests donations file 
subsystems resources interchangeable 
intuitively reasonable virtual subsystems satisfies conditions allow particular reputation system drive free riding reputation system prioritization donations file sharing system possible discourage peers typical resource requirements free riding 
precise analysis circumstances reputation scheme discourage free riding file sharing system scope 
rest structured follows 
brief discussion related describe autonomous reputation scheme design parameters system 
analyze conditions parameters system fixed time analysis predict system behaviour representative scenarios 
simulate scenarios reputation scheme check predictions met compare performance scheme ideal reputation scheme simulated scenarios 
investigate dynamic behaviour system peers change strategies economic interest 
related increasing amount research area reputation schemes peer peer networks particularly file sharing networks 
research schemes autonomous 
analyses effect free riding various non autonomous reputation schemes see example 
file distribution system bittorrent uses autonomous tit tat mechanism decide upload bandwidth 
bittorrent long term reputation records community serves dynamic long term peer relationships 
autonomous reputation schemes peer topeer file sharing networks gnunet aware analytical studies effect schemes amount free riding networks 
previous lai analyses effect free riding autonomous reputation scheme 
scheme analysed peer receives request peer peer requests past cooperated cooperates current request probability resource contention possible lai scheme may result available resources wasted 
example suppose available resource requested just peer past requests resource owner rejected peer contended resources 
available resource may donated 
system description section describe autonomous reputation scheme design parameters peer peer resource sharing system uses 
autonomous reputation scheme autonomous reputation scheme introduced peer keeps local record peer interacted total value resources donated past :10.1.1.12.5484
time receives donation updates record recalculates local reputation score equal max 
write rp denote score 
peer spare resources requested peer uses local reputation scores prioritize donations resources giving highest priority satisfying requests requesters rp largest 
illustration suppose peers interacted 
rp rp 
resource value rp increase rp remain zero 
spare resource choose request resource request choose donate resource 
decision interacted rp smaller system model consider peer peer system comprised set collaborators free riders 
fixed time peer consuming non consuming state 
non consuming state collaborators donate resources free riders go idle 
design parameters consider peer peer system eagerness 
assume peer maximum value utility resources consumed unit time interval peer consuming state 
limits amount resources useful peer 
value fixed peer may vary peers average value probability peer consuming state 
assume time peer independent probability consuming state 
cost donation 
utility lost result donation constant times utility gained recipient result donation 
resources available donation donated utility cost associated resources incurred resource owner 
value donation 
collaborator consuming state resources value available donate system 
note models performance theoretical capacity 
example peer spare cpu cycles donate performance bad practice value delivers donating cycles performance problems donated cycles peer 
assume value fixed peer vary different peers average value proportion ft peers free riders time value ft lies 
time ft peers free riders ft collaborators total number peers system 
analysis simulations assume values variables ft fixed time 
protocol donation resources collaborators consuming state donate resources available long peers consuming state prepared consume 
peers high reputation priority donations 
assume granularity resources low donating peer spare resources consuming peer requests able give exactly amount resources requested donating peer wishes 
resources left peers consuming state donated maximum amount resources prepared accept donated 
collaborators resources donate particular time donate peer donate resources different requesting peers 
free riders consuming state stay idle 
analysis section calculate values design parameters ideal reputation system succeeds discouraging free riding approximations give predictions behaviour sample scenarios 
recall say system works time time collaborators change strategy free riding 
define advantage collaborators time expected utility gain collaborator result system minus expected utility gain free rider 
measure free riding discouraged time general function ft system works time ft advantage collaborators positive ft limit advantage collaborators ft positive 
initially pick fixed time calculate system works time 
section discuss dynamic behaviour system 
analysis fixed time subsection assume system uses ideal reputation scheme able identify free riders perfectly free rider lower reputation collaborator 
suppose fixed time total value resources offered donation xd greater zero total value resources requested collaborators consuming state xc total value resources requested free riders consuming state xf distinguish cases famine donations glut donations middle case 
condition famine xd xc 
holds free riders receive donations gain utility zero system set collaborators gains total utility xd system 
advantage collaborators positive system works time condition glut xd xc xf holds peers request time donated resources request 
expected utility gain peer resulting resources donated depends depend peer collaborator free rider 
hand collaborator expected utility cost resulting resources 
collaborator increase expected utility changing strategy free riding 
advantage collaborators negative system time condition middle case famine glut 
xc xd xc xf case total utility gain set collaborators xc xd total utility gain set free riders xd xc 
xc xd clearly advantage collaborators non positive system time suppose xc xd positive ft 
advantage collaborators xc xd ft xd xc ft monotonically increasing function ft tends minus infinity ft 
system time ft works ft value function positive 
far assumed non eager consumption 
similar argument eager consumption 
eager consumption modeled putting xc 
implies condition famine holds values variables system works eager consumption 
subsection assumed allocation resources requesting collaborators favours collaborators donated 
supposing famine collaborator acquires new spare resources additional original resources value collaborator incentive donate new resources community provided doing move system famine condition 
results analysis pick representative scenarios system parameters predictions behaviour system scenarios 
predictions sample scenarios mean values xd xc xf expressed terms design parameters ft ft ft respectively 
estimate system fixed time set parameter values determining system mean values xd xc xf estimate actual values fluctuate statistically values reasonable approximation small changes values result small changes utilities calculate 
approximation accurate varies widely peers 
scenarios choose ones parameter values satisfy peer peer peer recall may vary peer peer ft 
total sets parameter values 
chosen values realistic include low high realistic values include scenarios mean values xd xc xf borderline different cases 
prediction estimate mean values applying analysis previous subsection sets parameter values perfect identification free riders system just sets parameter values satisfy 
scenarios satisfying alternatives famine mean values scenarios satisfying mean values middle case positive advantage collaborators 
clearly system ideal reputation system perfect identification free riders weaker reputation scheme 
autonomous reputation scheme general give perfect identification free riders scheme predict system subset sets parameter values identified 
simulations turn simulations design parameters 
simulator simulates aspects real implementation specifically fluctuations time amounts donated requested ignored analytical model 
total system simulator example deal topology issues 
aim investigate effectiveness autonomous reputation scheme providing positive advantage collaborators scenarios analysis section predicts possible reputation scheme 
order provide system simulated ideal reputation scheme perfectly identifies free riders 
simulations timeline turns turn peer independent probability consuming state 
ran scenarios described subsection value donation peers autonomous scheme ideal reputation scheme 
reputation schemes advantage collaborators simulations positive scenarios analysis predicted positive 
scenarios behavior autonomous simulations close behavior ideal reputation scheme 
illustrates comparison advantage collaborators system autonomous reputation ideal reputation scheme scenarios eagerness level cost donation 
scenarios difference autonomous reputation scheme ideal reputation scheme significant scenarios 
difference illustrated 
scenarios border famine middle case statistical fluctuations xd greater impact 
scenarios advantage collaborators simulation ideal reputation scheme differed values predicted analysis differed values simulation autonomous reputation scheme 
sole scenario system autonomous reputation scheme analysis predicted perfect reputation scheme 
scenario border famine middle case setting give negative advantage collaborators autonomous scheme 
note parameter values define scenario relatively large cost donating resources free riders share resources manage get 
ideal reputation scheme perform better simulation scenario advantage collaborators stays fluctuating zero system reaches steady state 
definition reputation scheme perfectly identifies free riders system time scenario 
second step introduced new scenarios peers 
investigated cases uniform distributions respectively 
uniform distribution mean behavior set equal peers making different different peers slightly greater impact 
mean value equal scenarios difference performance system providing incentives collaborations autonomous reputation scheme ideal reputation scheme greater scenarios different peers different values 
specifically statistical fluctuations xd difference performance greater scenarios system autonomous reputation scheme scenarios 
scenarios border famine middle cases 
statistical fluctuations xd arising differing values regularly pushed system middle case autonomous reputation scheme efficient rewarding collaborators 
combined high cost donation effect advantage collaborators negative autonomous reputation scheme scenarios 
system autonomous reputation scheme performed similarly ideal reputation advantage model network favors model rho 
advantage collaborators scenarios varying advantage model network favors model rho 
advantage collaborators scenarios varying scheme scenarios experiment predicted reputation chance effective including original scenarios fixed 
exception scenarios autonomous reputation scheme proved slightly different tolerance non contention resources system ideal reputation scheme 
great majority scenarios small difference measured advantage collaborators system autonomous reputation scheme system ideal reputation scheme 
shows scenarios simulated cases possible ideal reputation scheme possible autonomous scheme great loss performance 
exception border scenarios large donation costs perform ideal reputation scheme autonomous scheme managed provide positive advantage collaborators ideal reputation scheme 
imagined complex centralized reputation schemes global assessments reputation give significantly greater advantage collaborators autonomous reputation scheme appears case 
note comparisons reputation schemes system autonomous reputation scheme reached steady state 
system autonomous scheme requires time reach steady state accurate identification epsilon turns 
proportion resources donated free riders autonomous reputation scheme different values free riders 
result system reaches state reputation scheme effect perfect reputation system discouraging free riding 
investigate eagerness level impact time needed system reach steady state 
shows proportion available resources donated free riders turns denote 
system famine expresses community identified free riders 
impact time needed reaching steady state actual value system shows steady state 
scenarios approximately inversely proportional greater similar scenarios peers eagerness levels 
suspect practice eagerness levels consumers act eager consumers system 
observations show eagerness easier autonomous reputation scheme identify free riders high level eagerness necessary condition system 
analysis dynamic system behaviour consider effect allowing peers change strategies 
value ft vary time strategy choices values system parameters fixed time 
assume peers change strategy best interest choosing free rider collaborator maximize expected utility 
gradient ft positive advantage collaborators negative time negative advantage collaborators positive time need offer peers third option leaving system free riders expected utility great outside system 
assume choice strategy binary peers choose collaborator offer spare resources community free rider offer consider option peers offering available resources 
give general analysis assumption values vary widely peers 
case system harder analyse general describe example heterogeneous peers possible determine system dynamic behaviour 
analysis dynamic behaviour subsection assume values vary widely peers 
specifically assume subsection determine system famine glut middle case system time advantage consumers positive negative calculating case sign advantage consumers expected values xd xc xf time 
practice statistical fluctuations may temporarily move system case assume excursions sufficiently rare ignored considering large scale long term dynamic behaviour system 
illustrates dynamics system assumptions 
ratio mean values xd xc independent ft fixed time 
famine holds mean values initial state system continues hold subsequent evolution system 
free riders collaborators system famine donations average amount resources donated system time increases average amount consumed time increases new collaborators donated consume resources free riders 
increase consumption large keep system famine 
system initially famine remain famine ft decreases rare excursions statistical fluctuations eventually collaborators 
system initially glut ft increase eventually system longer glut point middle case 
border glut middle cases free riders higher expected utility collaborators 
famine middle case glut 
dynamics system varying ft 
middle case advantage collaborators negative ft case collaborators eventually die point system monotonically increasing function ft ft tends ft positive number ft 
second alternative system evolve stable equilibrium ft free riders collaborators equal expected utilities 
stable equilibrium system advantage collaborators zero 
practice system may oscillate stable equilibrium reaching precisely statistical fluctuations value resources donated requested average time advantage collaborators oscillating system zero 
follows famine donations proportion free riders evolve time value system 
possible system initially state works conditions middle case hold advantage collaborators positive eventually evolve equilibrium state system 
happens analysis assuming perfect identification free riders 
hand famine donations system free riders eventually die 
gives relatively simple heuristic checking system eager reputation system chance acting drive free riding prioritizing donations peers high reputation assuming peers choose free ride maximize expected utility free riding driven famine donations 
simulations peers change strategies 
scenarios simulated time interval effect autonomous reputation scheme similar scheme perfect prioritization held range values reasonable expect eventual behaviour community autonomous reputation scheme similar predicted analysis provided community time identify free riders peers change strategy 
example heterogeneous peers assumed values vary widely different peers 
particular assumed standard distributions values small sensible discuss means 
potential application systems assumption unrealistic 
values vary widely previous analysis apply may possible predict system behaviour 
example network values vary widely peers average amount resources donated timeslot half amount requested 
clearly famine donations 
set peers heterogeneous adding new peer donating state half time high value state able meet unfulfilled requests system 
new peer expected utility greater outside system contributor system peers donate free resources new peer consuming state 
new peer free rider 
remaining peers eventually detect happened system evolve analysis additional free rider new peer eventually peers contributors 
essentially reputation scheme encourages donation resources peer reasonable chance donation 
distributions large deviations extreme example example zipf distri butions investigated system behaviour hard analyse contingent behaviour peers high values research needs done 
demonstrated simulations network similar peers autonomous reputation scheme sufficient discourage free riding famine donations 
analysis system model indicates famine donations reputation scheme able discourage free riding prioritizing donations peers high reputations 
simulations autonomous reputation scheme sample scenarios famine donations incentive collaborating opposed free rider scenarios ideal reputation scheme provide incentive 
cases results different showed autonomous reputation scheme slightly worse prioritization ideal reputation scheme requires slightly contention resources keep utility free riders low 
majority scenarios schemes performed similarly 
autonomous scheme discourages free riding prioritizing donations ideal reputation scheme despite lightweight easy implement requiring central coordination cryptographic infrastructure 
adar huberman free riding gnutella 
monday 
www firstmonday dk 
andrade cirne ourgrid approach easily assemble grids equitable resource sharing :10.1.1.12.5484
proceedings th workshop job scheduling strategies parallel processing june 
cirne santos neto medeiros silva grid computing bag tasks applications 
proceedings ifip september 
cohen incentives build robustness bittorrent 
proceedings workshop economics peer peer systems june 
dellarocas efficiency robustness binary feedback mechanisms trading environments moral hazard 
working mit sloan school management january 
ebay reputation ebay feedback overview 
pages ebay com help confidence html 
project net 
site 
www project net 
excess economic model resource allocation peer peer networks 
wirtschaftsinformatik june 
kung wu 
differentiated admission peer peer systems peers contribute resources 
proceedings workshop economics peer peer systems june 
lai feldman stoica chuang incentives cooperation peer peer networks 
proceedings workshop economics peer peer systems june 
ripeanu deconstructing kazaa network 
rd ieee workshop internet applications june 
ooi tan 
managing trust peer peer systems reputation techniques 
international conference web age information management august 
ranganathan ripeanu sarin foster share share analysis incentives contribute collaborative file sharing environments 
proceedings workshop economics peer peer systems june 
resnick zeckhauser friedman kuwabara reputation systems 
communications acm 
ripeanu foster mapping gnutella network macroscopic properties largescale peer peer systems 
international workshop peer peer systems 
saroiu gummadi gribble measurement study peer peer file sharing systems 
proceedings multimedia computing networking january 
