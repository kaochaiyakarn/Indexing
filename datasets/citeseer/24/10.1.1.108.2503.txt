agent intelligent tutoring system nurse education nijholt op den department computer science university twente enschede netherlands cs utwente nl report describes development teaching environment uses agents support learning 
intelligent tutoring system described guides students learning 
system meant nurse education place generic sense core separated exercise modules user interfaces 
means system non nursing exercises 
exercises provided system form xml data files 
user interface text virtual reality environment 
application teaching environment nurse training described 
keywords educational environment agents health care user interfaces agent intelligent tutoring system nurse education nijholt op den department computer science university twente enschede netherlands cs utwente nl report describes development teaching environment uses agents support learning 
intelligent tutoring system described guides students learning 
system meant nurse education place generic sense core separated exercise modules user interfaces 
means system non nursing exercises 
exercises provided system form xml data files 
user interface text virtual reality environment 
application teaching environment nurse training described 
keywords educational environment agents health care user interfaces report describes development teaching environment uses agents support learning 
software system called ines described guides students learning 
means students system train certain tasks 
ines project started idea intelligent tutoring system nursing students 
reason lack time material room nursing schools 
lacks nursing students little possibilities practical exercises study learn lot start working hospital 
intention project improve situation 
name intelligent nursing education software 
main goal ines project provide effective teaching environment 
environment effective teaching environment fulfill conditions 
condition satisfied teaching environment provides correct logical guidance system student 
means teaching system able provide sensible feedback demonstrations explanations 
second condition user interface system optimal accessible possible 
purpose example simple graphical interface interface consist highly accurate virtual environment 
ines project mainly concentrated condition 
independent task trained system capable providing feedback explanations demonstrations 
purpose number agents form main part ines implemented 
agents observe students actions check performed correctly correct order 
intention concentrate second condition 
ines generic teaching system sense core separated exercise modules user interfaces 
exercises provided ines form data files 
information files check actions students right provide explanations demonstrations necessary 
exercise typically consist subtasks partial ordering defined 
tags data files general filled repairing punctured tire easy nursing task instance 
adding new teaching task ines means adding new interface 
new interface may text virtual reality environment 
haptic feedback devices head mounted device making changes ines system 
implemented system applied nurse training task 
demonstrate system works exercise file interface injection 
organization follows 
section intelligent tutoring systems gave inspiration design ines described 
section contains description architecture ines 
important part system cognition described extensively section 
description implemented exercise injection section 
section handles methods ines planning order subtasks 
concludes section testing evaluation system section 
existing lot programs teach certain tasks users 
important systems gave inspiration design ines mentioned section 
group researching language knowledge interaction university twente combines research human computer interaction dialog systems autonomous agents virtual worlds 
group built virtual music centre replica existing music centre serves environment experiment multi modal interaction agents visitors virtual world 
context jacob built instruction agent helps users solve mathematical puzzle virtual reality 
experience jacob idea arose creating artificial didactic instructor system intended aid people learning play piano 
world virtual piano visualization notes connected real synthesizer midi interact user 
multi agent platform system 
agent special expertise knowledge domain give information act decides appropriate 
instruction agents inspired design ines steve adele 
steve animated pedagogical agent 
gives instruction procedural tasks immersive virtual environment 
allow steve operate variety domains architecture clear separation domain independent capabilities domain specific knowledge 
adele agent distance learning environments developed usc information sciences institute center advanced research technology education carte 
adele runs student web browser designed integrated web electronic learning materials 
adele courses currently developed continuing medical education family medicine graduate level 
important system inspired design ines 
training system types minimally invasive surgery techniques 
combines virtual reality simulator basic training system provides web theoretical training agent tutoring system advanced training system oriented supervise execution practical exercises 
training carried temporal consecutive phases acquisition theoretical knowledge basic training system acquisition practical skills advanced training system 
system architecture ines architecture proposed architectural styles 
architectural style embedded ines data abstraction object oriented organization 
means single components ines system represented objects attributes methods 
objects implemented classes java programming language 
objects identified ines example physical objects teaching environment needles swaps agents represented objects 
architectural style event implicit invocation architecture 
architecture mainly implement agents ines system 
agent capable transmitting messages agents level broadcast level 
addition agent capable receiving messages observing messages sent agent broadcasted agents 
agent decide type incoming message 
shows main parts ines system 
patient model items user interface especially nursing exercises 
exercises model items 
seen architecture ines consists main parts input devices concrete user interface user interface cognition ines 
ines interaction api communication concrete user interface user interface 

system architecture ines 
input devices main part formed input real world 
input device input data gloves mouse keyboard haptic devices 
input perform actions concrete user interface 
example moving virtual user interface means data glove change viewpoints user interface 
way concrete user interface manipulated user 
ines completely separated concrete user interface ines care kind input device expects receive necessary data concrete user interface position objects needles application programming interface 
programmer user interface methods api provide knowledge ines 
concrete user interface 
choice input devices dependent concrete user interface ines 
currently ines display user interface controlled keyboard mouse 
concrete user interface concrete user interface takes care visualization exercise 
broad definition allows great freedom system implementer alter create user interface exercise 
user interface implemented simple dialog interface graphical interface highly accurate virtual environment 
point ines contains user interface mainly uses text buttons communicate user 
simple illustrations video demonstrations easily added 
particular situation interaction student shown interface 
architecture ines allows having different user interfaces exercise 
comes handy different user interface required user interface nurse training application 
left side contains data patient right side contains descriptions subtasks 
middle part displays subtask currently executed student 
case student give angle injected 
angle degrees 
bottom part contains buttons ask explanations 
task beginner advanced level 
content concrete user interface shown merely content example user interface 
user interfaces ines able communicate important information ines 
information impossible ines perform task 
example ines needs know student picked object decide correct action 
establish communication concrete user interface ines programmer user interface ines interaction api especially designed purpose disposal 
api explained section 
user interface user interface high level model concrete user interface 
user interface contrary concrete user interface part ines 
means communication interfaces fact constitutes communication concrete user interface ines 
important changes concrete user interface reported user interface vice versa 
concrete user interface directly communicates user interface help methods ines interaction api 
api contains number methods called concrete user interface ines able perform teaching task 
time student takes action methods called 
example actions students start subtasks object sterile sterile 
way system gets information actions student agents instruction model information decide actions take 
separating concrete user interface user interface ines contain exact representation user interface general aspects applicable user interfaces example position important objects 
ines know needle important ines needle look 
fourth part ines architecture teaching perspective interesting part 
part represents knowledge skills ines core intelligent tutoring system 
section deal cognition ines 
core ines cognition cognition ines consists models seen domain model student model instruction model patient model 
model added ines purpose exercises nursing students 
patient model agent moment describes knowledge known patient age sex religion 
agent extended patient react actions students example pull back arm anxiety virtual reality representation 
exercises non nursing tasks added system patient model ignored replaced similar model 
reason patient model part domain model 
domain model domain model ines encapsulates knowledge exercises practiced 
ines capable training different tasks unknown tasks ines train awkward program data exercises system 
lead large amount data ines impossible handle data structured manner 
solution developed problem define elements domain model 
elements contain exercise data 
real data read external information source xml file 
programming exercise system general domain model filled data ines 
xml file contains information ines needs know subtasks order constraints explanations demonstrations 
subtasks preconditions post conditions conditions algorithm check order subtasks check errors subtask 
preconditions describe conditions subtask eligible execution post conditions describe condition changes happened subtask completed 
explanations associated conditions usually mention certain condition met subtask performed 
explanations associated subtask describe necessity subtask exercise explain student subtask 
xml file contains files demonstrate subtask performed necessary user interface 
possible different user interfaces exercise example beginners medium advanced level students 
preventing ines containing user interfaces demonstrations 
adding new exercise system data added xml file exercise data 
done hand average exercise consists lot data task error prone 
prevent mistakes editing program created alter create exercise file 
program called ines exercise editor stand application executed presence ines software 
provides environment user create alter exercise files obvious manner 
ines exercise editor presents user user interface user create alterations graphical environment 
graphical environment exercise represented tree node represents subtask arrow represents relation nodes 
arrow subtask subtask example represents relation subtasks subtask provides post condition precondition subtask 
subtask executed subtask 
domain model ines collect information needed model carry function xml file 
reading necessary data ines able perform teaching task 
contents domain model observe user interface 
actions interface interpreted ines ines respond certain events 
conduct ines determined instruction model 
student model student model model user characteristics performance 
model contains data students program information needed order identify students interpret results students 
reason domain model student model defined terms elements filled data xml file 
examples data student numbers grades exercises performed student 
results student ines determine ines provide feedback explanations 
list exercises kept student 
list contains exercises student done past results achieved exercises number times student tried exercise exercise finished successfully grade student received latest attempt 
grade calculated agents instruction model examination agent stored student xml file 
subtask number tries kept try student passed subtask successfully 
instruction model instruction model observes world task user actions 
manipulate world user utterances actions 
actions include giving demonstration step task telling step explaining certain step 
ines intended train nursing exercises 
type exercise usually consists subtasks predefined order 
ines teach exercise student learns perform subtasks correct order correct way 
teaching strategy practice drill teaching method 
practice drill method student perform exercise masters task 
implemented ines prototype propose add problem solving teaching strategy ines student problem nursing task 
example problem non cooperating patient unsuitable environment administer injection 
problem solving learning process student obtain better learning results student think solution 
adding problems exercise fairly simple system equipped additional agent represents patient 
addition adding problem solving add questioning ines system 
case ines student number questions execution exercise 
think questions ml fluid inject patient observe injection site chosen correct order subtasks adding kinds questions ines system poses problem 
ines general teaching system idea answers questions 
necessary add questions exercise data 
done specifying questions subtask 
ines read questions answers domain model subsequently ask student 
ines intelligent tutoring system agent technology 
means agents instruction model provide instruction student 
simple method calls implemented normal java classes provide instruction 
case ines run single machines 
ines lot students different machines imagine convenient ines software distributed different computers 
case distributing ines machines ines agent technology order provide instruction 
addition agents easily turned ines necessary 
example ines consist groups agents group provides instruction certain subject matter 
group agents specifically nursing tasks group agents carpentry tasks 
certain group tasks trained ines turn agents concerning group turn agents 
agents ines divided groups sensor agents processing agents 
implementation agents agent platform developed group 
platform kinds agents proactive agents reactive agents 
reactive agents take actions receive messages agents proactive agents take actions particular amount time example second 
sensor agents ines proactive agents processing agents reactive agents 

agents 
arrow agents means agent sends messages second agent 
proactive agent observes user interface respect single aspect 
agent observation send reactive agent 
reactive agents receive observations respond 
agents send messages agents 
proactive agents distinction different proactive agents time agent error agent task observer agent sterile agent 
time agent keeps eye elapsed time subtask 
time agent uses information time logger 
logger log time time subtask started finished 
addition subtask number logged 
time dependent subtask number logged subtask number subtask started finished subtask number 
time agent look subsequent subtask numbers 
pair subtask completed due time dependency log information agent call time values subtask numbers 
time values compute time difference time took student complete specified subtask 
time agent compare time difference allowed duration subtask 
student exceeded time limit agent send message examination agent 
agent take action 
error agent checks student errors carrying subtasks 
information error logger complete task 
log error logger contains subtask number list conditions 
time student takes action new conditions logged 
second error agent reads new logs error logger 
subtask number get post conditions subtask 
logged conditions compared post conditions 
logged condition post condition subtask action student correct 
logged condition post condition subtask error agent deduces error 
agent detects error possibilities 
condition wrong case opposite condition true condition opposite condition postcondition subtask 
cases error agent sends message examination agent 
opposite condition true message contains subtask number opposite condition wrong indication condition wrong 
condition opposite condition post condition subtask message contains subtask number condition indication subtask wrong 
indications explanation agent decide kind explanation explanation condition explanation subtask 
task observer agent responsible keeping eye order subtasks performed 
means task observer agent check order subtasks performed correct addition student doesn mix number subtasks 
example student starts subtask starts subtask finishing subtask 
able job correctly task observer agent uses data provided logger simple java class logs information asked ines interaction api agent 
logger log occasion student starts subtask finishes 
log information subsequently accessed task observer agent generate liable information order subtasks performed 
different checks information performed task observer agent 
agent check subtask started finished new subtask started 
means agent sure student mix subtasks 
agent check log information provided ordering logger check pairs subtask numbers information 
sufficient log information time dependent 
second check performed task observer agent order subtasks 
agent uses internal variable keeps track completed subtask 
addition agent store set subtask numbers eligible execution regard completed subtask 
subtask numbers determined planner described section 
time agent notices new subtask completed check subtask number element list planned subtask numbers 
order correct order incorrect 
case task observer agent send appropriate message examination agent 
check agent update completed subtask planned subtasks go 
sterile agent agent specified ines specifically designed teaching nursing tasks 
tasks require agent keeps eye objects nursing tasks medical tasks 
necessary implement agent ines 
tasks agent agent replaced kind agent 
sterile agent look objects sterile unintentionally 
uses sterile logger 
system adds log list sterile logger object 
sterile agent reads logs sterile logger particular amount time 
new logs checks object sterile unintentionally 
agent discovers object sterile unintentionally sends message examination agent 
message contains number subtask object sterile description object string representing condition object sterile 
reactive agents system different reactive agents feedback agent explanation agent interaction observer agent examination agent 
feedback agent able generate positive negative feedback 
process generation positive negative feedback identical agent exists types feedback 
feedback agent receives input information examination agent detects student performed subtask correctly 
received information generate appropriate feedback 
means ines give positive feedback case student performed subtask correctly negative feedback 
undesirable ines generate feedback occasion 
just imagine having feedback completion subtask especially novice try exercise 
novice get depressed negative feedback receive 
possible change settings number times ines give feedback 
number times feedback generated dependent quality student student exercise 
student mistakes reasonable strict negative feedback strict positive feedback preferences teacher teachers differ strictness regard feedback teacher provide feedback teacher 
strictness feedback frequency set strictness variable 
variable countdown generation feedback 
desirable feedback agent presents feedback exactly times number times 
ines appear rigid usually case real teachers 
ines resemble real teacher possible able play little feedback frequency 
provide play area feedback agent equipped method adds small variance strictness variable 
means strictness set agent variate strictness feedback agent strictness equal times strictness 
explanation agent determines explanations demonstrations explanations demonstrations 
different kinds explanations explanations demonstrations subtasks explanations conditions partial order plans 
different kind explanations different algorithms determine explanation 
dependent input explanation agent determines kind explanation algorithm 
explanation agent receives messages examination agent goes wrong subtask 
messages contain name agent detected mistake 
actions explanation agent depend agent detected mistake 
type input explanation agent comes student clicks buttons explanation panel bottom part 
dependent button selected explanation agent generate explanation current subtask demonstration current subtask return list explanations subtasks conditions containing string user 
time agent gives explanation demonstration send message interaction observer agent 
message contains string indicating kind feedback possible explanation 
interaction observer agent responsible keeping feedback system student 
time feedback agent gives feedback explanation agent gives explanation demonstration send message interaction observer agent 
message contains number subtask feedback type feedback positive feedback negative feedback explanation demonstration 
interaction observer agent receives message logs data file list 
way data see student done know 
examination agent plays central role complete arsenal agents see 
examination agent receives error messages sensor agents acts 
dependent agent sent message contents new message sent examination agent processing agents 
addition handling stream messages agents acting traffic controller examination agent responsible updating student results execution exercise 
means examination agent retrieve new results student subsequently add results old results student 
student finishes exercise examination agent derive grade student write student file 
task examination agent control creation agents loggers 
instantiating examination agent necessary agents instantiated examination agent 
quitting examination agent created agents quit 
implemented exercise injection section describes exercise implemented demonstrate system works 
common techniques injections injection technique injecting skin injection technique injecting muscle 
injection techniques available injection blood vessel specific injections heart joint 
extra education top standard nursing education needed injections 
type injection admitted nursing curriculum 
addition doctors specialists allowed trained perform specific injections heart joint procedures nursing curriculum 
injection administration medication number advantages respect administered medication medicine usually works faster comes system 
injection leads better balanced amount medicine blood stream 
number disadvantages identified 
procedure administering injection quite bit difficult administering medication time consuming 
addition injection hazard blood vessels nerves damaged easily 
people afraid having injection important execute injection possible 
chosen implement injection exercise example nursing task practiced done real patients 
virtual environment help simulation possible show happens injection right way 
example possible show happens patient air injection 
executing injection consists number steps 
order steps fixed 
nurse check data injection kind liquid injected 
materials ready needle attached medicine drawn needle replaced injection needle 
injection cleared 
short steps giving injection mentioned steps consist number sub steps 
task exercise file interface 
exercise file contains data subtasks example pre post conditions explanations 
example precondition injection needle sterile injection 
example post condition empty giving injection 
implemented interface 
student click description subtask right side interface wants execute 
new window appears middle part interface 
window student execute chosen subtask movie played demonstration subtask 
planning ines ines kinds planning 
determines subtasks may performed determine student subtasks right order 
second partial order planning explain right order subtasks student errors 
partial order planner planner represent plans steps ordered respect steps unordered 
partial order planning algorithm ines deterministic implementation nondeterministic algorithm described section 
order subtasks exercise prototype injection fixed 
reason choice tell exactly system order subtasks performed 
intention add new exercises program little possible java 
new exercises quite possible order subtasks fixed 
prevent possible orders programmed system number possible orders increases fast number choices order choice kinds planning preconditions postconditions subtasks 
easy put conditions exercise file write little java code possible strings conditions interface exercise file 
condition added system put special class conditions fact string way easier kinds conditions propositions predicates 
testing evaluation ines tested different ways 
performing unit testing classes contained ines 
type test intended test functioning individual classes testing class doing expected 
addition ines tested 
means exercises user interface designed ines injection complete system tested 
quality user interface optimal usable teaching students injection real 
order subtasks exercise taught 
sufficient test ines respect functions example happens student error subtask happens student subtasks wrong order 
problematic situation came light 
student merely guesses order subtasks executed chooses wrong subtask times executes subtasks correctly ines student positive negative feedback explanation moment 
reason feedback explanation agents receive messages error agent task observer agent 
error agent communicates correct execution subtask task observer agent communicates wrong order subtasks 
feedback explanation agent respond messages causing confusing output ines 
problem solved way error agent check subtask performed right way help post conditions subtask subtask performed correctly check new conditions hold environment conditions 
environment conditions updated order subtasks correct 
order subtasks wrong error agent send message examination agent subtask performed correctly 
tested cases system gave expected explanations feedback point 
important requirement system flexible maintainable adaptable situations 
possible add new exercises new agents large changes system 
exercises goal achieved 
adding new instructional methods possible fast handy way 
new agents added integrated agents sense new agent able send messages existing agents eventually receive messages agents 
reach existing agents changed bit 
new agents agent platform group 
ines distinguishes generic learning system 
implemented specifically nursing tasks ines capable teaching tasks user interfaces data tasks completely separated ines 
necessary changes instruction student models ines exercises added 
step ines project advanced user interface example virtual environment haptic feedback devices 
said section virtual environment help simulations students learn happens errors doing damage example real persons 
way virtual environments simulations offer possibilities explorative learning 
implemented user interface movies subtasks way student start subtasks click button 
new user interface student able take objects perform actions 
interface ines tested students give feedback working ines tips improvement extensions 
ines tested way working new exercises added system students learn 
ines extendable ways 
number extensions working change ines students 
mode differs training mode student able ask questions ines give feedback hints student executing assignment ines able offer guidance student depending performance ines able offer feedback exercise student finished exercise 
feedback moment student right wrong virtual representation tutor seen screen 
representation give demonstrations facial expressions show students doing 
presently teacher student xml file look results students add new students system 
separate program written easier check results 
possible check exercises student performed 
look students executed particular exercise calculate average results 
teacher able print results add new students xml file 
idea intelligent tutoring system nursing students idea rose connect ines mechanical limb sensors provide ines input 
way student able train example injection life body part ines evaluate input received limb sensors 
input ines guide student training process 

nijholt multimodal interactions agents virtual worlds 
directions intelligent information systems information science studies fuzziness soft computing 

nijholt jacob animated instruction agent virtual reality 
advances multimodal interfaces proc 
third international conference multimodal interfaces 

nijholt developing virtual piano playing environment 
ieee international conference advanced learning technologies 

johnson pedagogical agents 
global education net proceedings sixth international conference computers education 

rickel johnson steve pedagogical agent virtual reality 
proceedings second international conference autonomous agents 

rickel johnson animated agents procedural training virtual reality perception cognition motor control 
applied artificial intelligence 

shaw johnson millar building case agent assisted learning catalyst curriculum reform medical education 
proceedings int 
conference artificial intelligence education 

los muller integration virtual environments surgery training 
intelligent tutoring systems 

shaw garlan software architecture perspectives emerging discipline 
prentice hall 

ornstein strategies effective teaching 
mcgraw hill higher education 

russell norvig artificial intelligence modern approach 
prentice hall 

