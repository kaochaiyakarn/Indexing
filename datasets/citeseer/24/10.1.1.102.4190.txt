session key generation human passwords oded goldreich yehuda lindell department computer science applied math weizmann institute science rehovot israel 
oded lindell wisdom weizmann ac il 
session key generation protocols model legitimate parties share human password 
security guarantee holds respect probabilistic polynomial time adversaries control communication channel parties may omit insert modify messages choice 
loosely speaking effect adversary attacks execution protocol comparable attack adversary allowed constant number queries form password party 
stress result holds case passwords selected random small dictionary feasible adversary scan entire directory 
note prior result clear protocols attainable random oracles additional setup assumptions 
deals oldest probably important problem cryptography enabling private reliable communication parties public communication channel 
loosely speaking privacy means legitimate communicators may learn data communicated reliability means may modify contents data communicated receiver detecting fact 
needless say vast amount research invested problem 
contribution refers difficult natural setting parameters problem adversaries initial set 
consider probabilistic polynomial time adversaries 
framework important distinction refers type adversaries wishes protect passive adversaries eavesdrop channel active adversaries may omit insert modify messages sent channel 
clearly reliability problem respect active adversaries holds definition passive adversaries 
focus active adversaries 
second parameter mentioned initial set assumptions 
assumption form exist difference supported minerva foundation germany 
legitimate communicators called alice bob adversary may initiate conversation alice pretending bob 
list popular initial set assumptions briefly discuss known 
public key infrastructure assumes party generated secret key deposited corresponding public key trusted server 
server may accessed time user 
easy establish private reliable communication model cf 
:10.1.1.40.5588:10.1.1.37.9720
case may want establish session keys discussed 
shared high quality secret keys high quality keys mean strings coming distributions high min entropy uniformly chosen bit bit long strings uniformly chosen bit primes 
furthermore keys selected suitable program memorized humans 
case pair parties shares key conduct private reliable communication cf 
shared low quality secret passwords contrast high quality keys passwords strings may easily selected memorized typed humans 
illustrating simplified example case password selected uniformly relatively small dictionary password uniformly distributed poly 
note password role cryptographic key schemes mentioned yield totally insecure scheme 
significant observation adversary may try guess password initiate conversation alice pretending bob guessed password 
prevent adversary successfully impersonating bob probability 
limit adversary success 
question focus 
session keys problem establishing private reliable communication commonly reduced problem generating secure session key authenticated key exchange 
loosely speaking seeks protocol alice bob may agree key rest current communication session key remain unknown adversary 
course adversary may prevent agreement simply blocking communication detected alice bob 
stress famous key exchange protocols diffie hellman refer passive adversary :10.1.1.37.9720
contrast refers active adversaries 
security may achieved passwords consider related seemingly easier task mutual authentication 
alice bob merely want establish talking 
repeating observation note adversary initiates instances mutual authentication protocol guessing different password probability succeed impersonating alice bob furthermore find password 
question posed rephrased follows construct password scheme success probability probabilistic polynomial time impersonation attack bounded number sessions initiated adversary negligible function security parameter 
resolve question affirmative 
assuming existence trapdoor way permutations prove schemes exist specifically poly 
proof constructive 
provide protocol comparable security demanding goal authenticated session key generation 
password authenticated session key generation definition task authenticated session key generation simulation paradigm 
require secure protocol emulates ideal execution session key generation protocol cf 
:10.1.1.21.4870
ideal execution trusted third party hands identical uniformly distributed session keys honest parties 
power adversary ideal model prevent trusted party handing keys parties 
stress ideal model adversary learns parties joint password output session key 
consider real execution protocol trusted party adversary full control communication channel honest parties 
general protocol said secure real model adversaries emulated ideal model output distributions computationally indistinguishable 
password setting adversary succeed probability impossible achieve computational indistinguishability real model described ideal model adversary zero probability success 
context password setting authenticated session key generation protocol said secure mentioned ideal model emulation results output distribution distinguished real execution gap 
main result informally stated assuming existence trapdoor way permutations exists secure authenticated session key generation protocol password setting 
informal definition implies intuitive properties authenticated session key generation security generated session key initial password 
particular output session key distinguished random key gap 
similarly distinguishing gap parties joint password uniformly distributed element 
mentioned fact adversary distinguish gap inherent limitation security 
parties guaranteed probability session key detect communication tampered 
definition implies additional desirable properties session key protocols forward secrecy security case session key loss known key attacks 
furthermore protocol provides improved negligible gap security case adversary communication protocol execution 
mention suitable level indistinguishability real ideal executions holds sessions referring password conducted sequentially case distinguishing gap optimal 
holds polynomial number sessions independently distributed passwords conducted concurrently sessions 
caveat protocol proven secure assuming pair parties password conduct concurrent executions protocol 
stress concurrent sessions pairs parties pair different password allowed 
see discussion sections 
comparison prior design secure mutual authentication key exchange protocols major effort applied cryptography community 
particular effort directed design password schemes withstand active attacks 
important restricted case mutual authentication implies session key key mac probability adversary generate valid mac tag message sent legitimate party small 
likewise session key encryption adversary learns little encrypted messages partial information function adversary guess value function applied messages small advantage priori probability 
specific focus research preventing line dictionary attacks 
line attack adversary records view past protocol executions scans dictionary password consistent view 
checking consistency way possible dictionary small adversary derive correct password 
clearly secure session key generation protocol defined line dictionary attack 
problem asymmetric case human user authenticates server order access service 
design secure access control mechanisms passwords widely recognized central problem computer practice received attention 
protocol suggested password session key generation bellovin merritt 
influential basis area :10.1.1.50.2593
protocols proven secure conjectured security mere heuristic arguments 
despite strong need secure password protocols problem treated rigorously quite 
survey works techniques related password authentication see brief survey 
rigorous treatment access control problem provided halevi krawczyk 
considered asymmetric hybrid model party server may hold high quality key party human may hold password 
human assumed secure access corresponding public key server reliable access reliable server keeping digest public key call public password 
halevi krawczyk model capitalizes asymmetry access control setting inapplicable settings communication established humans human server 
furthermore requiring human keep secretly undesirable access control setting 
stress halevi krawczyk model hybrid shared key model shared password model results don apply shared password model 
theoretical practical interest answer original question posed public password relaxation possible implement secure access control mechanism authenticated key exchange passwords 
positive answers original problem provided random oracle model 
model parties assumed oracle access totally random universal function :10.1.1.41.4144
secure password access control schemes random oracle model 
common interpretation results security hold random oracle replaced reasonable concrete function known explicitly parties 
warn interpretation supported sound reasoning 
furthermore pointed exist protocols secure random oracle model insecure random function replaced specific function function uniformly selected family functions 
summarize session key generation mutual authentication protocols passwords shared password model standard cryptographic assumptions existence trapdoor way permutations turn follows intractability assumption regarding integer factorization 
stress prior clear protocols exist outside random oracle model 
necessary conditions mutual authentication halevi krawczyk proved mutual authentication shared password model implies unauthenticated secret key exchange turn implies way functions 
consequently pointed shared password model implies oblivious transfer 
techniques central idea underlying protocol due naor pinkas 
suggested protocol case passive adversaries secure protocol polynomial evaluation 
order generate session key party chooses random linear polynomial large field contains dictionary passwords 
execute secure polynomial evaluation obtains joint password 
session key set equal 
suggested protocol secure active adversaries non malleable commitments 
suggestion re iterated moni naor fact grew suggestion 
order obtain protocol secure active adversaries augment abovementioned protocol additional mechanisms 
commitments addition specific zero knowledge proof ordinary commitment schemes specific pseudorandom generator message authentication schemes macs :10.1.1.37.9720
analysis resulting protocol complicated adversary initiates single session 
explained believe complications unavoidable current state art regarding concurrent execution protocols 
explicit problem statement problem deal concerns concurrent executions protocol 
case adversary attacks single session legitimate parties ability modify messages means may conduct concurrent executions protocol party 
concurrent executions protocols analyzed past relatively simple protocols 
high level structure protocol simply stated terms small number modules currently known implementations modules quite complex 
furthermore implementations known secure copies executed concurrently 
current state polynomial evaluation functionality party polynomial finite field party element field 
evaluation learns learns functionality defined 
specifically adversary may execute protocol alice claiming bob concurrently executing protocol bob claiming alice executions refer joint alice bob password 
affairs analysis proceed applying composition theorems party protocols satisfying concurrent security properties suitable concurrently secure protocols composition theorems currently unknown 
analyze protocol directly 
reducing analysis concurrent executions protocol analysis non concurrent executions related protocols 
specifically show successful adversary concurrent setting contradicts security requirements non concurrent setting 
reductions performed times time establishing property original protocol 
typically property refers concurrent executions shown hold adversary secrets legitimate party second execution 
done giving secrets adversary enabling effectively emulate second execution internally 
execution remains relevant property proven standard non concurrent setting 
see section illustration proof techniques 
discussion view theoretical study possibility achieving private reliable communication parties share secret password communicate channel controlled active adversary 
main result demonstration feasibility task 
demonstrate feasibility performing session key generation low quality passwords 
doing merely rigorous step research project directed providing solution practical problem 
discuss aspects project require study 
concurrent executions protocol proven secure pair parties password conduct concurrent executions protocol 
allow concurrent executions different passwords 
actual protocol requires mechanism ensuring password concurrent executions 
simple mechanism enforcing disallow party enter execution particular password units time passed previous execution password 
furthermore execution completed units time time units elapsed execution suspended 
see section details 
desirable employ timing mechanism prove security holds executions conducted concurrently password 
efficiency desirable efficient protocols 
techniques may useful goal 
independent independently katz ostrovsky yung protocol session key generation passwords 
protocol incomparable 
hand protocol uses stronger set assumption public parameters selected trusted party seemingly stronger intractability assumption decisional diffie hellman 
hand protocol practical secure unrestricted concurrent setting 
recall thrust demonstrating feasibility performing session key generation passwords additional set assumptions 
formal setting section notation definitions specific setting culminating definition authenticated session key generation 
state main result 
basic notations typically denotes channel probabilistic polynomial time adversary parties communicate 
adopt notation bellare rogaway model communication giving oracle access stress oracles memory model parties participate session key generation protocol 
share single password oracle access single copy party 
denote execution auxiliary input communicates holding respective inputs channel output execution denoted output password dictionary denoted fixed entire discussion 
denote un uniform distribution strings length set denote chosen uniformly ppt shorthand probabilistic polynomial time 
denote unspecified negligible function 
polynomial sufficiently large functions defined integers denote 
denote computational indistinguishability 
security parameter implicit notation discussions 
example notation dictionary intention dn dn 
recall assumptions regarding size dn particular may polynomial indistinguishability pseudorandomness extending standard definition computational indistinguishability define concept indistinguishability 
ensembles indistinguishable ppt machine probability distinguishing single sample negligibly greater 
note indistinguishability preserved multiple samples efficiently constructible ensembles indistinguishability implies indistinguishability sequences samples 
computational indistinguishability coincides indistinguishability 
formal definition follows 
definition indistinguishability function xn yn probability ensembles distribution xn resp yn ranges strings length polynomial say ensembles indistinguishable denoted xn yn probabilistic polynomial time distinguisher auxiliary information poly pr xn pr yn say xn pseudorandom indistinguishable un definition pseudorandom functions similarly extended pseudorandom functions 
authenticated session key generation definition discussion problem password authenticated session key generation cast party functionality involving honest parties adversary parties input joint password receive identical uniformly distributed session keys 
hand adversary output specifically obtain information password output session key 
furthermore power maliciously influence outcome protocol example affect choice key cause parties receive different keys 
recall real execution controls communication line honest parties 
block communication cause protocol fail 
unavoidable adversarial capability modeled functionality letting input single bit indicating execution successful 
specifically success receive described session key 
hand receives session key receives special abort symbol 
stress ability influence outcome determining single bit 
problem password session key lack symmetry definition inherent possible guarantee terminate success failure bit 
sake simplicity arbitrarily choose receive uniformly distributed session key output 
generation cast party functionality un un wa wb wa wb un 
wa wb respective passwords 
definition password authenticated session key generation simulation paradigm cf 
:10.1.1.21.4870
require secure protocol emulate ideal execution session key generation functionality 
ideal execution communication trusted third party receives parties inputs honestly returns party output designated functionality 
important observation context password security real execution adversary attempt impersonation simply guessing secret password participating protocol claiming parties 
adversary guess correct impersonation succeeds example adversary knows generated session key 
furthermore executing protocol parties adversary verify guess correct learn information password rule incorrect guess list possible passwords 
dictionary may small information learned adversary protocol execution may negligible 
hope obtain protocol emulates ideal model execution learns computational indistinguishability 
inherent limitation password security accounted requiring real execution simulated ideal model output distributions ideal real models indistinguishable indistinguishable defined 
note limitation applies active adversaries control communication channel 
case passive eavesdropping adversary demand ideal real model distributions computationally indistinguishable just indistinguishable 
define ideal real models formal definition security 
ideal model honest parties ppt adversary arbitrary auxiliary input 
ideal model execution proceeds phases initialization password uniformly chosen dictionary sending inputs trusted party send trusted party password received initialization stage 
adversary sends denoting successful protocol execution denoting failed protocol execution 
trusted party answers parties case sends trusted party chooses uniformly distributed string sends case sends trusted party sends cases receives output ideal distribution defined follows def ideal output output output input initialization phase 
un un output send ideal un output 
send denotes value sent trusted party auxiliary input 
real model honest parties ppt adversary arbitrary auxiliary input 
ideal model real model begins initialization stage receive identical uniformly distributed password protocol executed communicating execution protocol denoted augment view accept reject decision bits decision bit denotes party private output session key 
formal requirement necessary practice information implicitly understood parties continue communication session key generation protocol terminated 
note specific formulation accepts necessary provide decision bit output 
real distribution defined follows def output output output input initialization phase 
definition security loosely speaking definition requires secure protocol real model emulates ideal model trusted party participates 
formulated saying adversaries ideal model able simulate execution real protocol input output distribution simulation indistinguishable real execution 
require passive adversaries simulated ideal model honest need deal case hand trusted third party different passwords 
stress fundamental difference real model defined defined standard multi party computation 
parties capability communicating directly 
communicate likewise contrast standard multi party computation parties direct communication links broadcast channel 
output distributions computationally indistinguishable just indistinguishable 
definition password authenticated session key generation protocol password authenticated session key generation secure requirements hold 
passive adversaries ppt real model passive adversary exists ppt ideal model adversary dictionary auxiliary input poly ideal 
arbitrary active adversaries ppt real model adversary exists ppt ideal model adversary dictionary auxiliary input poly ideal def stress constant universal 
properties definition definition asserts joint input output distribution real execution far ideal execution adversary learns influence output cause reject 
immediately implies output session key pseudorandom mentioned best possible password key generation 
key encryption partial information predicate probability adversary learns ciphertext greater priori probability adversary 
likewise key message authentication code mac probability adversary generate correct mac tag message sent negligibly greater 
stress security output session key deteriorate usage polynomially encryptions macs security remains 
important property definition probability party detects failure parties terminate session key 
definition implies password remains indistinguishable randomly chosen new password 
seen fact ideal model adversary learns password part ideal distribution 
particular implies secure passive adversary modify omit insert messages sent eavesdrop limited analyzing transcript protocol execution honest parties 
passive adversaries referred semi honest literature 
protocol resistant offline dictionary attacks adversary scans dictionary search password consistent view protocol execution 
desirable properties session key protocols guaranteed definition 
specifically mention forward secrecy security face loss session keys known known key attacks 
forward secrecy states session key remains secure password revealed protocol execution 
analogously security face loss session keys means password current session key maintain security prior session keys revealed 
properties immediately implied fact ideal model dependence session key password session keys different sessions 
learning password compromise security session key visa versa 
additional property desirable intrusion detection 
adversary modifies message sent session probability detected party rejects 
property guaranteed definition hold protocol 
combining item definition requirement regarding passive adversaries conclude order take advantage ability learn information expose danger detected probability 
observe definition enables mutual authentication 
output session key pseudorandom adversary 
key secret explicit authentication mutual challenge response protocol 
adding step secure session key protocol obtain explicit mutual authentication 
augmenting definition definition capture desired authenticated session key generation subtlety fails address pointed rackoff authors 
issue parties terminate session key generation protocol simultaneously party may terminate protocol start session key party executing instructions session key generation protocol determining message 
extended note definition augmented deal issue protocol secure respect augmented definition 
full treatment issue provided full version 
independence session keys different sessions relates multi session case discussed section 
note protocol behaves expected executions real protocol password outputs sessions indistinguishable ideal executions 
easy show key directly obtain pseudorandom function standard challenge response protocol 
main result definition formally state main result 
theorem assuming existence trapdoor permutations exist secure protocols password authenticated session key generation 
multi session security definition relates parties executing session key generation protocol 
clearly interested general case different parties run protocol number times 
turns protocol secure single invocation parties definition secure multi party sequential invocation case 
invocations parties parties invoke sequential executions session key generation protocol 
wish adversary gains password guesses invocation security th invocation 
consider ideal real distributions consisting outputs executions 
require distributions indistinguishable 
shown secure protocol password authenticated session key generation maintains security sequential invocations 
details full version 
sequential vs concurrent executions parties solution proven secure invoke concurrent executions session key generation protocol password 
stress scenario adversary invokes twice sequentially single execution allowed 
order protocol mechanism ensure concurrent executions take place 
achieved having wait units time protocol executions greater time taken run single execution 
note parties usually need initiate session key generation protocols immediately 
delay mechanism need employed attempted session key generation execution fails 
means parties attack adversary way 
note limitation prevent parties opening number different independently keyed communication lines 
may running session key protocol sequentially desired communication line 
case incur delay units time execution 
alternatively may run protocol obtain pseudorandom session key 
key may shared high quality key concurrently generating polynomial number pseudorandom session keys communication line simple efficient protocols exist task see 
parties case parties execute session key protocol simultaneously claim invocations protocol sequential pair parties may concurrent security 
assume different pairs parties executing concurrently independently distributed passwords 
security derived single session case noting sessions independently distributed passwords perfectly simulated adversary 
session key generation protocol arithmetic finite field gf identified protocol secure protocol evaluating non constant linear polynomials universal family hash functions 
protocol involves parties party non constant linear polynomial party string functionality receives receives value 
fact supposed input nonconstant linear polynomial enforced simply mapping possible input strings set polynomials convention polynomials 
augment functionality having input commitment polynomial ca commit corresponding decommitment ca 
furthermore inputs commitment value cb 
augmentation ca cb receives special failure symbol 
needed order tie polynomial evaluation value previously committed main higher level protocol 
functionality defined follows definition augmented polynomial evaluation input party inputs commitment ca corresponding decommitment linear non constant polynomial party inputs commitment cb value output 
correct input case ca cb ca receives receives 

incorrect input case ca cb ca receives special failure symbol denoted receives 
note functionality securely computed observe input conditions checked polynomial time provides decommitment 
protocol way permutation hard core protocol password authenticated session key generation input parties joint password supposed uniformly distributed output output accept reject bit session keys ka kb respectively ka equal kb 
protocol 
stage non malleable commit chooses random linear non constant polynomial gf 
engage non malleable perfectly binding commitment protocol commits string denote random coins commitment protocol rb denote view execution commitment protocol nmc 
commitment protocol sends random coins rb 
effect security commitment scheme perfectly binding commitment protocol terminated 

stage pre key exchange stage parties exchange strings output session keys validation checks derived 
called pre keys 
sends commitment randomly chosen 
engage augmented polynomial evaluation protocol 
inputs inputs 
denote output 
note supposed equal 
internally computes 

stage validation sends string 
proves zero knowledge input polynomial non malleable commitment performed stage ordinary commitment performed stage value consistent non malleable commitment 
formally proves statement exists string random coins ra ra ra ra random coins non malleable ordinary commitments respectively view non malleable commitment nmc identical receiver view non malleable commitment recall view consists random coins messages received commitment protocol execution 
sender receiver respective random coins ra rb 
recall rb denotes random coins non malleable commitment 
ii 
ra iii 

zero knowledge proof specific zero knowledge proof richardson kilian specific setting parameters 
ta entire session transcript seen sequence messages sent received mack message authentication code keyed computes def sends mack ta 
decision stage accepts outputs def 
accepts conditions fulfilled string sent step output polynomial evaluation 
note fulfills equality rejects 
accepts zero knowledge proof step verify tb tb session transcript seen string alleged mac tag receives verification respect mac key defined 
accepts outputs outputs 
recall accept reject decision bit considered public output 
stress accept reject solely criteria halt stage detect malicious behavior 
see schematic diagram protocol 
view protocol execution function parties respective inputs random strings 
ra rb define single possible view 
furthermore recall sent rb commitment protocol 
nmc includes rb committed value ra enabling efficiently prove statement 
setting parameters referred relates number iterations part richardson kilian proof 
set equal number rounds parts protocol plus non constant function security parameter 
party party output key nm commit secure polynomial evaluation zk proof consistency mac transcript decision accept output key fig 

schematic diagram protocol 
description protocol referred parties ignored existence possible impact channel sends string pretend received 
real execution may case 
actual analysis subscript value owner done protocol 
example shall say step sends string ya string received yb 
motivation security protocol central module protocol secure polynomial evaluation 
achieving security passive channels 
specifically consider protocol 
party chooses random linear polynomial inputs secure polynomial evaluation party inputs joint password definition polynomial evaluation receives receives 
internally computes knows parties value session key 
key uniformly distributed random linear due secrecy requirements polynomial evaluation protocol reveals passive eavesdropper revealed party learn evaluation 
key problem extending argument setting may active security definitions party computation guarantee simulatability view concurrent setting 
provide intuition simulation protocol achieved 
assume mac value sent protocol behaved passively relayed message modification rejects high probability 
behaves passively clearly accepts case honest parties execute protocol interference 
hand behave passively assumption regarding security mac rejects 
knows behaved passively predict reject 
words accept reject bit output simulatable 
proceed observing bit meaningful message sent protocol apart polynomial evaluation messages sent receiver non malleable commitment protocol verifier zero knowledge proof clearly knowledge password protocols 
furthermore polynomial evaluation receives output 
intuitively input revealed execution equivalently view computationally independent input shown hold concurrent setting 
conclude messages sent execution simulated knowledge simulating reduce concurrent scenario involving standard party setting setting apply standard tools techniques simulating view interaction conclude entire real execution simulatable ideal model 
basis simulating view lies security mac scenario 
mac secure parties priori share random mac key case parties establish mac key protocol clear key random view parties 
order justify security mac setting show properties hold 
firstly show high probability hold mac key going reject knows 
secondly need show identical mac key held sufficient pseudorandomness prevent successfully forging mac 
proof properties especially involved major part proof full version 
properties protocol main properties protocol captured theorem 
theorem protocol constitutes secure protocol password authenticated session key generation defined definition 
cryptographic tools protocol securely implemented assuming existence trapdoor permutations 
theorem implies feasibility result captured theorem 
unfortunately due lack space provide proof theorem 
demonstration proof techniques prove theorem provided section 
illustration proof techniques section illustrate proof techniques simplified scenario execute secure polynomial evaluation communicating adversarial channel recall polynomial evaluation functionality defined stand setting 
polynomial finite field element field 
evaluation learns obtains 
scenario considering input random linear polynomial input random password case protocol 
recall setting may omit insert modify message sent sense conducts separate executions polynomial evaluation called execution called execution 
executions carried concurrently explicit execution remind reader definition stand secure party computation apply concurrent setting consider 
furthermore currently tools dealing general concurrent computation party case 
analysis executions uses specific properties protocol remove concurrency obtain reduction stand setting 
show adversarial success concurrent setting translated related adversarial success stand setting 
enables analyze adversary capability concurrent setting security party stand protocols 
order demonstrate proof techniques show learns little concurrent execution 
formal statement ideal model real model flavor 
specifically show ppt adversary interacting exists non interactive ppt machine receives input output output indistinguishable un output recall ca denotes execution holding respective inputs 
think real model adversary ideal model adversary ideal model sends input trusted third party likewise receives output 
note view simplistic claim regarding outputs execution usually required secure computation 
words prove statement regarding privacy claims correctness example guarantee skew parties outputs undesired way 
formally prove theorem illustration ppt adversarial channel interacting exists ppt machine interacting dictionary output un output random linear polynomial proof prove theorem showing execution simulated view simulation negligibly close real interaction 
remain stand execution 
scenario apply standard definition secure party computation conclude learns information 
fact execution simulated formally stated follows statement lemma denotes stand execution input lemma simulating execution ppt adversary interacting exists ppt adversary interacting dictionary output random linear polynomial 
output proof loosely speaking prove lemma showing role execution simulated knowledge able simulate role obtain lemma 
showing learns input polynomial evaluation 
trivial stand setting definition functionality claim holds concurrent setting 
formally show definition implies execution respect view password indistinguishable new randomly chosen password implies value protocol derive mac session keys pseudorandom respect view 
fixed password indistinguishable interacting concurrently 
output output random password fixed 
eq 
order show simulates execution prove eq 
reducing concurrent execution standalone party setting 
reduction obtained giving adversary polynomial entire input perfectly emulate execution 
formally exists adversary auxiliary input interacting equations hold output output output output denotes stand execution input input 
machine works playing role execution forwarding messages belonging execution notice play role knows 
remain stand setting auxiliary input inputs polynomial evaluation 
stand setting security polynomial evaluation guarantees distinguish input cases negligible probability 
ppt adversary holds output output eq 
follows combining equations 
summary shown concurrent setting interacts adversary distinguish cases inputs ready show works recall interacts aim simulate concurrent execution 
machine begins selecting arbitrary perfectly emulates execution playing role execution forwarding messages belonging execution play role known 
eq 
conclude emulation computationally indistinguishable real execution completes proof lemma 
proof lemma typical proofs 
goal obtain reduction concurrent setting stand setting obtain reduction simulating order show simulation reduce concurrent setting stand setting simulating 
remains show view stand interaction simulated interaction learn information 
formally lemma simulating stand execution ppt adversary interacting exists ppt machine interacting dictionary output un output random linear polynomial proof setting lemma standard party computation 
security definition party computation applied directly order prove lemma 
sketch standard proof sake completeness 
showing output un output order prove eq 
recall security polynomial evaluation implies receiver played learn value single point selected denote point wc 
case wc values un identically distributed pairwise independence random linear polynomials 
wc machine learns value 
uniformly distributed probability wc 
means view distinguished un probability 
ready define non interactive machine 
machine works choosing random linear polynomial perfectly emulates playing role execution uses polynomial input 
outputs 
un independent polynomials follows un output un output lemma follows combining equations 
combining lemmas obtain theorem 
reiterate theorem relates secrecy password value 
definition say outputs parties furthermore model significantly simplified fact public accept reject bit output parties discussed section simulating bit involved part proof 
unfortunately proof merely illustration techniques proving theorem 
moni naor suggesting problem valuable input initial stages research 
grateful alon rosen discussion feedback development 
jonathan katz helpful discussion 
ran canetti shai halevi tal rabin discussion led significant simplification protocol 

beaver 
secure multi party protocols zero knowledge proof systems tolerating fault minority 
journal cryptology vol 
pages 

bellare pointcheval rogaway 
authenticated key exchange secure dictionary attacks 
eurocrypt springer verlag lncs pages 

bellare rogaway 
random oracles practical paradigm designing efficient protocols 
st conf 
computer communications security acm pages 

bellare rogaway 
entity authentication key distribution 
crypto springer verlag lncs pages 

bellovin merritt 
encrypted key exchange password protocols secure dictionary attacks 
proceedings acm ieee symposium research security privacy pages 

bellovin merritt 
augmented encrypted key exchange password protocol secure dictionary attacks password file compromise 
proceedings st acm conference computer communication security pages 

blum 
coin flipping phone 
ieee spring pages february 

blum goldwasser 
efficient probabilistic public key encryption scheme hides partial information 
crypto springer verlag lncs pages 

blum micali 
generate cryptographically strong sequences pseudo random bits 
vol 
pages 
preliminary version rd focs 


public key cryptography password protocols multi user case 
proceedings th acm conference computer communication security 

mackenzie patel 
provably secure password authenticated key exchange diffie hellman 
eurocrypt springer verlag lncs pages 

canetti 
security composition multi party cryptographic protocols 
journal cryptology vol 
pages 

canetti 
unified framework analyzing security protocols 
cryptology eprint archive report 
available eprint iacr org 

canetti goldreich halevi 
random oracle methodology revisited 
proc 
th stoc pages 

diffie hellman 
new directions cryptography 
ieee trans 
info 
theory nov pages 

dolev dwork naor 
non malleable cryptography 
siam journal computing january 

feige shamir 
witness indistinguishability witness hiding protocols 
nd stoc pages 

goldreich 
secure multi party computation 
manuscript 
preliminary version 
available www wisdom weizmann ac il oded pp html 

goldreich goldwasser micali 
construct random functions 
jacm vol 
pages 

goldreich kahan 
construct constant round zero knowledge proof systems np 
journal cryptology vol 
pages 

goldreich micali wigderson 
play mental game completeness theorem protocols honest majority 
th stoc pages 
details see 

goldwasser micali 
probabilistic encryption 
jcss vol 
pages 

halevi krawczyk 
public key cryptography password protocols 
acm conference computer communications security 


strong password authenticated key exchange 
sigcomm comput 
commun 
rev vol pages 

katz ostrovsky yung 
practical password authenticated key exchange provably secure standard assumptions 
eurocrypt 

kaufman perlman 
network security 
prentice hall 


open key exchange defeat dictionary attacks encrypting public keys 
proceedings workshop security protocols ecole normale superieure 

menezes van oorschot vanstone 
handbook applied cryptography 
crc press 

micali rogaway 
secure computation 
unpublished manuscript 
preliminary version crypto springer verlag lncs 

naor pinkas 
oblivious transfer polynomial evaluation 
st stoc pages 

patel 
number theoretic attacks secure password schemes 
proceedings ieee symposium security privacy pages 

richardson kilian 
concurrent composition zero knowledge proofs 
eurocrypt pages 

rivest shamir adleman 
method obtaining digital signatures public key cryptosystems 
cacm vol 
feb pages 

steiner waidner 
refinement extension encrypted key exchange 
acm sigops oper 
syst 
rev vol 
pages 

wu 
secure remote password protocol 
internet society symposium network distributed system security pages 

yao 
theory application trapdoor functions 
rd focs pages 

yao 
generate exchange secrets 
th focs pages 
