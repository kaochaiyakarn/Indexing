probabilistic plan verification acceptance sampling younes computer science department carnegie mellon university pittsburgh pa cs cmu edu circa architecture real time intelligent control 
circa planner generate plans guaranteed maintain system safety certain timing constraints 
prove plans guarantee safety circa relies formal verification methods 
domains impossible build guaranteed safe plans requires resources available possibility failure simply eliminated 
extending circa world model allow uncertainty form probability distribution functions generate plans maintain system safety high probability 
presents procedure probabilistic plan verification ensure heuristically generated plans achieve desired level safety 
drawing theory quality control approach aims minimize verification effort guaranteeing specified proportion plans rejected bad plans accepted 
realistic domains autonomous agents broad spectrum uncertainty including uncertainty external events outcome internally selected actions 
planning achieve system goals maintain safety face uncertainty highly challenging 
attempt generate universal plan cf 
schoppers contingency account limited resources may futile 
advantageous approach may quantify uncertainty incorporate information reasoning process 
enables set arbitrary failure threshold plans reject plans failure probability threshold 
furthermore additional information focus planning efforts situations encounter cf 
atkins 
introduce probabilistic extension circa architecture real time control musliner 
original planner circa builds reactive control plans achieve system goals maintain system safety subject strict time bounds models dynamic external world environment 
original circa model includes nondeterminism outcome reported performed summer internship honeywell laboratories 
david musliner automated reasoning group honeywell laboratories technology drive minneapolis mn musliner honeywell com actions uncertainty timing occurrence externally caused transitions quantified uncertainty information 
extended model includes quantified uncertainty form probability distributions timing different transitions 
allows circa build plans completely guaranteed prevent failure plans may allow possibility failure long failure probability threshold 
world model probabilistic extension corresponds generalized semi markov process 
standard model checking techniques handle full generality model 
developed novel verification algorithm efficiently verify potential plan satisfies safety constraints 
verifier uses monte carlo simulation precisely discrete event simulation generate sample execution paths plan world model 
requiring relatively sample paths verifier guarantee specified proportion plans rejected bad plans accepted 
interaction planner verifier depicted 
planner generates plan achieve objectives dynamic real time environment 
plan passed verifier tests plan satisfies safety constraints 
result verification passed back planner information decides generated plan needs revised 
plan passed verification revision needed verification result guide plan revision 
concerned generate revise plans verify plans 
objectives environment plan planner verifier verification result safety constraints interaction planner verifier 
world model musliner durfee shin introduced formalization circa world model extended musliner 
deviate slightly formalization 
purpose enable view circa world model generalized semi markov process gsmp formalism discrete event systems introduced matthes see glynn 
formal non probabilistic world model elements sf min max 
finite set states state represents description relevant features 

set failure states sf consists states violate domain constraints control level goals 

set possible initial states 
finite set transitions te ta tt te set event transitions representing world occurrences instantaneous state changes ta set action transitions representing actions performed run time system tt set temporal transitions representing progression time 

function mapping state set transitions enabled 
function min transitions minimum trigger times 

function max transitions maximum trigger times 
transition mapping states planning problem environment represented world model action transitions 
planner generates plan policy mapping states action transitions 
composition stochastic process representing execution environment 
verifying plan safe really verifying certain properties hold stochastic process representing composition environment model 
shows environment unmanned aerial vehicle 
actions constituting plan added environment 
model dynamics particular point time world considered occupy single state model 
initial world state state 
world state changes transition triggered 
current state transition triggered state 
transitions necessarily enabled states 
state subset denoting set transitions triggered state transition triggered state time transitions compete trigger state change 
associate clock rs enabled transition state showing time remaining scheduled occur clock value rs called residual lifetime glynn 
transition triggered state causing transition state lifetimes transitions enabled initialized follows 
rs rs rs 

rs set value interval min max 
type transition determines general form interval min max 
event transitions occur time lower limit zero upper limit infinity 
temporal transitions similar events non zero lower limit 
action transition represents action taken run time system finite upper limit representing worst case execution time action 
note formalism possible trigger time transition state time depend history state transitions making world model non markovian 
probabilistic extension world model far limited expressive power 
say event may occur state representing event transition enabled bound time world stay event may occur 
say expected time world stay state event occurs 
way distinguish frequently occurring events rain delaying tennis match far frequent events player struck lightning 
natural extension associate probability distribution function transition giving probability triggered time units enabled 
easily define previously interval limits terms min sup max inf require distribution function corresponds positive random variable transition triggered enabled 
typical choice distribution event transition exponential distribution temporal transition shifted exponential distribution 
action transition example uniform distribution truncated normal distribution 
addition replace probability distribution probability world starts state set possible initial states simply 
way obtain probabilistic world model consisting elements sf 
gsmp need define transition probabilities expressing probability state normal path threat evasive path threat safe evasive path radar threat hit failure radar threat hit normal path radar threat environment 
evasive normal path threat radar threat safe evasive evasive path threat evasive path radar threat normal path radar threat hit plan environment 
failure hit evasive normal path threat radar threat exp safe evasive evasive path threat evasive path radar threat normal path radar threat hit probabilistic world model 
failure hit exp different world models 
left world model representing environment 
initial state drawn oval failure state 
solid arrow represents event transition double arrows represent temporal transitions 
arc hit transitions indicate fact transition enabled different states 
middle actions dashed arrows constituting plan added environment 
right plan environment model probability distributions associated transition just intervals 
triggered state straightforward state determined 
get addition set clock speeds 
elements constitute gsmp 
fact form state transition probabilities probability distribution functions time homogeneous gsmp glynn 
shows probabilistic version model 
interval probability distribution function transition 
plan verification non probabilistic world model safe plan state sf reachable set possible initial states 
action transitions planned preempt temporal transitions failure states 
transition preempts state proven triggered independent history state transitions 
immediately rules plans event transitions failure states 
event transitions trigger instantaneously transition preempt 
safety plan verified applying certain correctness preserving model transformations pruning unreachable states musliner 
shown min max extracted probabilistic world model enabling verify probabilistic plans technique 
waste extra information available regarding stochastic behavior transitions 
probabilistic terms technique distinguish zero non zero probability reaching set states 
plans non zero probability reaching failure state considered unsafe 
probability distribution functions available transitions set arbitrary threshold representing highest acceptable failure probability plan 
setting revert old model 
accept plans discarded 
example possible plan event transitions failure states provided events represented transitions sufficiently infrequent probability entering states events enabled sufficiently low 
example consider plan 
evasive action preempts hit transition bottom state hit transition triggered center state 
example lifetime evasive time units lifetime safe time units lifetime hit time units hit trigger safe center state causing transition failure state 
plan intervals substituted probability distribution functions 
see plan acceptable failure threshold upper limit execution time set time units 
acceptance sampling algorithm probabilistically determine plan accepted 
samples algorithm sample execution paths generated discrete event simulation 
plan acceptable probability reaching failure state time limit tmax failure threshold 
failure probability plan typically depend tmax 
example plan zero failure probability tmax failure probability approaches tmax approaches infinity 
assume natural time limit application 
generating sample execution paths plan executed represents stochastic process state world time units plan set action 
interested determining probability visiting failure state sf specified time limit tmax start execution threshold 
state probability visiting time tmax pr inf tmax 
set absorbing states set failure states sf state set visited execution 
furthermore absorbing state time failure probability plan tmax time units pr inf sf tmax pr tmax 
sf depending stochastic characteristics process analytical calculation failure probability may impossible feasible approach may sampling techniques simulation generate sample paths heidelberger 
define random variable follows inf tmax clearly binomial variate parameters ps ps probability state visited tmax time units 
samples yn xn yi yi 
number samples state visited tmax time units 
point estimate ps xn estimate heuristic guide effort planner states cf 
atkins 
note xn computed yi 
fn denote number failures observed samples 
clearly fn yi 
sample yi generated discrete event simulation 
algorithm outlines procedure generating yi state simultaneously cf 
algorithm 
sample generation algorithm consider case transitions triggered simultaneously 
distribution functions continuous probability happening fact zero 
implementing sampling algorithm computer real numbers represented finite precision floating point numbers occurrence simultaneous transitions issue deal 
address modifying step simply letting select uniform probability set transitions shortest residual lifetime acceptance sampling plan executed fail succeed 
denote probability failure pf alluded earlier specify positive threshold representing algorithm procedure generating yi simultaneously 

yi generate initial state accordance probability distribution 

transition sample residual lifetime rs cf 
glynn distribution function 
amount time remaining triggers transition state 
set yi 
terminate simulation sf ta 

transition shortest residual lifetime terminate simulation rs tmax 


generate new residual lifetimes transitions follows sample rs 
rs rs rs 

set rs go step 
maximum acceptable failure probability 
pf exceed willing accept reject 
deciding accept reject plan cast problem testing hypothesis pf alternative hypothesis pf 
important problem manufacturing industry engineering studied thoroughly field statistical quality control cf 
montgomery 
problem arises area software certification 
risk tolerance hypothesis testing 
ideally accept plans failure probability larger reject plans 
general calculate failure probability plan analytically determine absolute certainty falling back sampling techniques 
case reason potentially infinite sample space 
tolerate certain risk rejecting plan true failure probability accepting plan failure probability 
statistical quality control kind error referred type error reject acceptable type ii error accept rejectable 
associate risk level type error 
risk levels denoted respectively represent acceptable probability making error respective type 
hypothesis pf null hypothesis alternative hypothesis pf 
test hypothesis probability accepting holds probability accepting holds 
order able choose freely need relax hypotheses somewhat 
pur choose suggested pose introduce indifference region non zero width 
pf pf 
acceptance sampling test hypothesis 
motivation indifference region allows choose risk levels independently true failure probability sufficiently close threshold indifferent plan accepted rejected 
sequential sampling 
sequential test number observations predetermined dependent outcome observations wald 
wald loc 
cit 
develops theory sequential analysis defines sequential probability ratio test see wald optimal testing simple hypothesis simple alternative sense minimizes expected number samples needed reach decision 
binary random variable unknown parameter pr sequential probability ratio test carried follows test hypothesis hypothesis 
stage test calculate ratio pr xi pr xi xi sample generated stage accept accept generate additional sample repeat termination test 
test procedure respects risk levels 

applied problem validating plan stage observed fn failures ratio compute fn fn fn fn purposes practical computation logarithms carry test follows 
inspection nth sample compute log fn log fn log continue sampling log log log terminate accepting hypothesis log log relaxation means risk levels low high 
slight approximation involved stopping criteria test 
see wald details 
terminate accepting log log alternatively compute acceptance number rejection number rn 
accept fn reject accept rn continue sampling 
log log acceptance number stage log nv rejection number log nv rn 
verification algorithm pieces needed specify plan verification algorithm 
algorithm describes steps procedure 
algorithm uses wald sequential probability ratio test input parameters 
addition parameter tmax needs specified sample generation algorithm verification procedure 
algorithm procedure verifying plan 


increment generate samples yn sf algorithm 

compute fn equation 

compute equation rn equation 

accept fn reject fn rn 
go step 
graphically represents execution verification algorithm plan parameters tmax set time units 
acceptance rejection lines correspond equations respectively 
curve starting lines represents number observed failures 
generating sample execution paths ended failure state curve crosses acceptance line means accept plan 
curve crossed rejection line rejected plan 
parameters confident true failure probability plan 
number samples algorithm needs inspect decision reached definite upper bound 
wald proves sequential probability ratio test terminates probability 
reject accept result executing verification algorithm plan 
probability small required sample size exceed twice times expected number required samples may desirable set upper bound nmax cases 
upper bound provided test terminate nmax wald loc 
cit 
suggests null hypothesis rejected accepted 
upper bound set sufficiently high times expected value truncating process negligible effect strength test 
performance performance verification algorithm depends factors 
separate factors groups domain dependent domain independent 
domain dependent factors affect performance algorithm generating samples yi 
main factors kind time period considered tmax mean values distribution functions mean values small relative tmax number transitions triggering simulation terminates high increasing time needed generate set samples 
note size state space plays minimal role 
initialization step need perform linear 
amounts clearing yi done quite efficiently bit vector represent set samples 
domain independent factor view number samples needed generated verification algorithm terminates 
show number depends true failure probability pf arguably dependent domain current plan ultimately determines pf estimate sample size needed independently particular domain plan motivating label domain independent 





pf average number samples cases 
sample size expect need fewer samples true failure probability indifference region 
pf significantly expect satisfy acceptance criterion early stage 
conversely pf number failures observed tend quickly exceed rejection number 
number samples required verification algorithm random variable depends outcome observations 
expected value called average sample number depends pf wald provides approximation formula expected sample size 
ep denote expected number samples required pf approximate value expectation log log ep log log probability sequential test terminates acceptance pf plots average sample number region close different choices 
see raising risk levels widening indifference region need fewer runs average reach decision 
gives opportunity trade quality performance 
truncated test 
mentioned earlier may want set upper limit nmax number samples generated 
equation help choose upper bound 
average sample number maximum close common slope acceptance rejection lines log log log average sample number point approximately log log es log log nmax es probability sequential test terminated reaches nmax nearly truncation negligible effect strength test 
related buridan uses notion plan failure similar threshold representing maximum acceptable failure probability kushmerick 
buridan implements methods plan assessment computing guaranteed upper bound failure probability 
cost obtaining guaranteed bound efficiency methods vary significantly domains 
approach trade efficiency accuracy adjusting risk levels 
difference world model allows external events dan actions represented limited notion time performed action represents discrete time step 
holds planners adopting model markov decision processes 
dean kanazawa closely related 
call probabilistic projection reason persistence propositions model markovian 
construct belief network order compute probabilistic predictions 
blythe uses similar approach computing failure probability plan subject external events 
probabilistic inference belief networks known np hard cooper current exact algorithms worst case exponential behavior 
blythe dean kanazawa consider approximate algorithms provide guaranteed error bounds convergence slow 
atkins durfee shin consider probabilistic extension circa similar 
approach analytical iterative algorithm state probability estimation 
state probability calculations heuristic approximations transition times quantitative error bounds provided algorithm 
furthermore propagate probabilities cycles state space lead serious underestimation problem addressed li 
alur courcoubetis dill describe algorithm verifying formulas specified language called tctl underlying gsmp world model 
tctl branching time temporal logic expressing real time properties lacks support expressing quantitative bounds probabilities 
aziz 
csl continuous stochastic logic formalism quantitative probability bounds expressed show problem verifying csl formulas decidable 
baier katoen hermanns describe implementation model checker analogous formalism 
underlying model continuous time markov chains 
difference model exponential probability distribution functions permitted 
probabilistic extension circa 
extended world model viewed generalized semi markov process 
discrete event simulation generate sample paths world model acceptance sampling theory minimize expected number samples needed determine failure probability sufficiently low 
differs probabilistic planners world model expressive 
able bound fraction erroneous classifications plan verifier 
sequential acceptance sampling need samples reach decision sufficient confidence user higher level deliberation scheduling module easily trade efficiency accuracy varying parameters 
combine importance sampling heidelberger acceptance sampling 
doing improve performance verification algorithm failure threshold close zero indifference region narrow 
interested developing techniques sensitive failure probability plan variations time limit tmax 
addition probabilistic information guiding plan generation needed 
mentioned obtain point estimates state probabilities sample execution paths guide planning effort states effectively pruning states search space limited resources planner 
investigate effectiveness pruning techniques 
acknowledgments 
material supported darpa ato space naval warfare systems center san diego contract 

opinions findings recommendations expressed material authors necessarily reflect views darpa government space naval warfare systems center san diego 
approved public release distribution unlimited 
alur courcoubetis dill 
modelchecking probabilistic real time systems 
albert monien artalejo eds proceedings th international colloquium automata languages programming volume lecture notes computer science 
madrid spain springer 
atkins durfee shin 
plan development local probabilistic models 
horvitz jensen eds proceedings twelfth conference uncertainty artificial intelligence 
portland morgan kaufmann publishers 
aziz singhal brayton 
verifying continuous time markov chains 
alur henzinger eds proceedings th international conference computer aided verification volume lecture notes computer science 
new brunswick nj springer 
baier katoen hermanns 
approximate symbolic model checking continuous time markov chains 
baeten eds proceedings th international conference concurrency theory volume lecture notes computer science 
eindhoven netherlands springer 
blythe 
planning external events 
de mantaras poole eds proceedings tenth conference uncertainty artificial intelligence 
seattle wa morgan kaufmann publishers 

statistical processes reliability engineering 
princeton nj van nostrand 
cooper 
computational complexity probabilistic inference bayesian belief networks 
artificial intelligence 
dean kanazawa 
model reasoning persistence causation 
computational intelligence 
glynn 
gsmp formalism discrete event systems 
proceedings ieee 
heidelberger 
fast simulation rare events queueing reliability models 
acm transactions modeling computer simulation 
kushmerick hanks weld 
algorithm probabilistic planning 
artificial intelligence 
li atkins durfee shin 
resource allocation limited real time agent temporal probabilistic world model 
working notes aaai spring symposium real time autonomous systems 
matthes 
zur theorie der 
ko ze sn ed transactions third prague conference information theory statistical decision functions random processes 
czechoslovakia publishing house academy sciences 
montgomery 
statistical quality control 
new york ny john wiley sons second edition 
musliner durfee shin 
circa cooperative intelligent real time control archi tecture 
ieee transactions systems man cybernetics 
musliner durfee shin 
world modeling dynamic construction real time control plans 
artificial intelligence 
mills 
planning certifying software system reliability 
ieee software 
schoppers 
universal plans reactive robots unpredictable environments 
mcdermott ed proceedings tenth international joint conference artificial intelligence 
milan italy morgan kaufmann publishers 

regenerative stochastic simulation 
boston ma academic press 
wald 
sequential tests statistical hypotheses 
annals mathematical statistics 
wald 
sequential analysis 
new york ny john wiley sons 
