tcp congestion control layered multicast data transfer lorenzo vicisano jon crowcroft dept computer science university college london gower street london wc bt uk email vicisano crowcroft cs ucl ac uk luigi rizzo dip 
di ing 
dell informazione universit di pisa pisa italy novel congestion control algorithm suitable cumulative layered data streams mbone 
algorithm behaves similarly tcp congestion control algorithms shares bandwidth fairly instances protocol tcp flows 
entirely receiver driven requires receiver status sender order scale large numbers receivers 
relies standard functionalities multicast routers suitable continuous stream reliable bulk data transfer 
illustrate algorithm characterize response losses analytically simulations analyse behaviour simulations experiments real networks 
show error recovery dealt independently congestion control fec techniques provide reliable bulk data transfer 
keywords congestion control multicast 
design data transfer protocols run top internet multicast service face fundamental problem congestion control 
network shared competing users uncontrolled aggressive flows bring network congestion collapse 
avoid protocol instances behave way achieve fair sharing network resources instances behaved protocols 
time multicast protocols effective congestion control come expense scalability wish address scenarios comprising thousands receivers 
problem important increasing diffusion bandwidth intensive multimedia tools video stimulate network reaching large heterogeneous groups users 
applications techniques proposed transmitting stream multiple data rates map different quality levels cumulative layered data organization 
proper data arrangements similar approach reliable transfer bulk data 
multicast routing provides basic mechanism distributing data different rates subsets multicast distribution trees 
joining leaving multicast groups receivers subtree principle adapt data rate available network capacity 
approach receivers able evaluate adapt network capacity act coordination algorithms scale large groups receivers 
requirement fair competitor behaved protocols tcp complicates problem devising suitable algorithm letting re email rizzo iet unipi dynamically choose appropriate data rate 
describe receiver driven congestion control algorithm tcp friendly suitable mbone 
support different bandwidths layered organization data letting receivers adapt available bandwidth joining multicast groups 
receiver takes decisions autonomously techniques synchronise receivers bottleneck belonging protocol instance achieve effective bandwidth 
explicit forms group membership making algorithm fully scalable simple implement sender receiver side 
previous works subject layered data organization implement form multicast congestion control 
novel results development congestion control algorithm competes fairly tcp flows achievement receiver synchronisation recurring explicit group membership protocols 
significant contributions lie evaluation algorithm interaction tcp analytical techniques simulations experiments real networks 
structured follows 
section ii briefly describe basic mechanisms congestion control algorithm relation throughput loss rate multicast group membership mbone layered data organization 
section iii describes detail congestion control algorithm section iv prove effectiveness analytical techniques simulations experiments real networks 
section briefly discusses application algorithm continuous streams shows techniques achieve reliable bulk data transfer preserving scalability optimizing usage network 
ii 
basic mechanisms section briefly review basic mechanism congestion control algorithm 
relation throughput loss rate ip networks explicit congestion notification mechanism 
response congestion dropping packets loss packets receiver reported sender interpreted congestion signal 
tion control algorithm react congestion signals reducing transmission rate 
relation packet loss rate throughput behaved session increasing values correspond decreasing values congestion control algorithms tcp various authors derived approximate relation throughput loss rate packet size round trip time ses sion constant range 
relation holds small values high loss rates tcp tends lose ack self clock session assumes chaotic behaviour actual throughput sharp decrease highly dependent length retransmission timeouts 
equation shows presence competing receivers bottleneck experiencing similar loss rate actual share bandwidth strongly depends apart variance competing tcp sessions reduce throughput similarly response losses 
fairness different protocols requires similar behaviour response losses comparable functional dependencies absolute throughput values response times 
equation capture completely behaviour control system 
important parameter control algorithm speed response variations controlled system case network conditions 
tcp congestion control response time order session time required sender receive feedback react 
multicast group membership forwarding multicast data mbone implemented multicast routers communicate hosts dedicated group membership protocol igmp 
packets multicast group forwarded network segment segment leads active receivers group nodes multicast routers serving active receivers 
join phase receiver joining new group sends igmp message router turn enable forwarding group possibly propagating information upstream router graft message 
join phase fast roughly rtt computed joining node router source blocking group 
leave phase receiver informs local router interested group anymore 
triggers polling phase multicast router checks receivers local subnet interested group 
active receivers exist router sends prune message group upstream multicast router forwarding group blocked 
absence active receivers determined timeout leave phase take considerable time seconds call leave delay 
joining leaving group set receivers acting coordination exercise simple control flow data subtree minimum duration period constrained leave delay 
layered organisation data congestion control protocol aimed distribution data possibly different quality set receivers different increasing bandwidths different multicast groups bandwidth poor network capacity 
problem solved efficient way cumulative layered data organisation layered data organisation brevity multicast groups layers 
layer car ries data bandwidth way receiver tune receive bandwidth joining appropriate number layers waste bandwidth receivers different requirements share links 
layered data organisation possible data transferred supports data carried bandwidth subset data carried bandwidth usually feasible multimedia data streams bulk data file suitable data arrangements minimize replications data shown 
cases problem finding suitable data organisation complex number layers grows 
scalability reasons suggest small number values available transmitter exponentially spaced receivers choose subscription level best matches available bandwidth 
iii 
congestion control multicast layered data congestion control mechanism designed transmitter sending data receivers mbone 
communication involve continuous stream video audio data reliable bulk data transfer file 
section ignore fact lost packets need retransmitted order complete data transfer problem tackled section unicast communications sender takes part congestion control changing sending rate congestion signals receives 
multicast communications approach problematic groups receivers different requirements may exist adapting needs set receivers penalize contrasting requirements 
proposals appeared literature achieve desired effect multicast router driving bottleneck modulate sending rate subtree 
possible layered data organisation gives receivers possibility modulate receive rate joining leaving layers 
adaptation heterogeneous requirements possible simple done independently subtree served multicast router 
consequence approach transmitter need take part congestion control layered data organisation 
algorithm receivers try infer status network congestion signals typically packet losses control flow incoming data pruning capability ip multicast routing 
receiver joins leaves layers depending received congestion signals 
strategy join leave layers chosen way emulate behaviour tcp generate similar relation throughput loss rate 
intuitively receiver subscription level behave follows loss experienced decrease subscription level losses experienced time increase subscription level 
proper choice bandwidth corresponding subscription level delay moving level algorithm mimics behaviour tcp additive increase multiplicative decrease yields relation throughput loss rate similar tcp parameters tuned yield response time comparable tcp congestion control 
unfortunately deal additional problems unicast communications simple algorithm adequate 
congestion control effective receivers router act uncoordinated way 
second length leave delay failed joint attempts joins layer cause bandwidth exceed bottleneck bandwidth long lasting effects 
phenomena severely compromise effectiveness algorithm need develop appropriate countermeasures 
synchronisation points receiver bottleneck synchronization receivers fundamental order pruning mechanism 
fact action receiver dropping layer leaving group effect receivers sharing bottleneck drop layer receiver causes congestion bottleneck adding new layer receiver interpret resulting losses consequence high level subscription drop layer receivers bottleneck different subscription levels bottleneck bandwidth allocated protocol instance fully exploited problems minimised join attempts different receivers coordinated 
unfortunately receivers tend diverge different start times propagation delays loss patterns history events experienced 
avoided explicit protocol receiver coordination pose scalability problems slow converge 
implicit coordination protocol synchronisation points sp 
sp correspond specially flagged packets data stream 
receiver join attempt immediately sp base decisions history events sp 
strategies help keeping receivers synch especially nearby nodes affected skews propagation delays losses caused background traffic 
deletion history sp serves avoid random events experienced receiver accumulate effects cause receivers diverge 
distance sp layer related time join attempt 
phenomenon illustrated point suggests receiver level join attempt receivers lower levels experience losses related failure 
overcome problem sp level subset sp previous level 
implications 
receiver join attempt receivers lower levels attempt consequence congestion signal cause divergent behaviours 
second receiver lower subscription level chances increase level aggregate receivers higher level 
receiver spend level doing sender initiated probes problems described previous section aggravated length leave delay join attempt especially failed consequences network long time 
join attempts consequently sp sufficiently far apart network settle 
furthermore optimisation algorithm able increase subscription level confidence attempt successful 
algorithm involves form sender initiated probe bandwidth consisting periodic generation short bursts packets followed equally long relaxation period packets sent 
bursts effect join attempt 
duration burst bandwidth effectively doubled bottleneck bandwidth sufficient queues build possibly cause packet losses increase packet interarrival times 
congestion signals interpreted signal lower subscription level hints increasing subscription level 
advantage sender initiated probes real join attempts surge packets follow failed join attempt leave delay just shorter duration burst recovery possible subsequent relaxation period 
note sender initiated probes mimic behaviour tcp sessions number occasions opening windows receiving ack mss transmit back back packets 
deaf period leave phase takes long time complete receivers subtree drop layer caused congestion 
naive application algorithm section iii probably result decreasing subscription level multiple times response failed join attempt 
overcome problem introduced deaf period loss subsequent decrease subscription level receiver react losses time order account slow response multicast router leave requests 
deaf period set slightly larger leave delay give multicast router sufficient time respond leave request 
congestion control algorithm section provide full description congestion control algorithm addition mechanisms discussed far 
assume different bandwidths offered increasing values exponentially spaced factor 
data transmitted multicast groups bandwidths bandwidth packets mally transmitted constant rate appropriately placed different layers call inter packet time layer additional parameters control behaviour algorithm represents distance bursts multiples represents number bursts synchronization points layer bursts duration back back packets sent transmission time 
burst interval transmission suspended 
interval follows transmissions occur nominal rate 
synchronisation points spaced proportionally bandwidth corresponding subscription level located burst corresponds packet burst layer 
shows sequence packet transmissions layers location synchronisation points 
distance sp subscription level constants fig 

transmission pattern different layers layers 
sequence packet transmissions bursts indicating arrangement packets various layers burst subsequent recovery time white squares 
location synchronisation points various layers vertical lines represent location bursts 
appear relation throughput loss rate discussed section iv 
multicast congestion control algorithms competing tcp protocol instances background traffic 
protocol evaluated exponentially distributed bandwidths parameters due space limitations main results analysis detailed information :10.1.1.102.1697
subscription levels increase sp decrease throughput versus loss rate time rules decrease loss experienced normal transmissions time previous decrease increase sp losses experienced burst preceding sp unchanged includes case losses experienced burst deaf period 
deaf period decrease serves avoid cascaded losses leave effectively complete 
relation throughput loss rate derived approximate steady state model system receiver oscillates subscription levels surround correct bandwidth 
approximate model throughput depends fraction time spent level turn depends loss rate experienced connection 
derive approximation throughput noted protocol depend heavily bandwidths exponentially distributed probes probes show performance improvement simulations :10.1.1.102.1697
main novel elements algorithm synchronisation points rules changing subscription levels 
iv 
performance analysis packet size inter packet time layer number packets bursts distance bursts synchronisation points lower level function represents burst loss rate computed accounting closely spaced closer losses single 
note left section evaluate performance congestion control algorithm means analytical techniques simulations simulator experiments real networks prototype implementation algorithm 
investigated start steady state behaviour adaptation changing network conditions fairness protocol instances tcp instances 
network topologies simulations shown transmitters receivers spread various nodes 
experiments simulation real measurements generally include multiple instances depending type data apply average rate burst equation similarity relation tcp 
apart multiplying constant equations reflect behaviour response losses 
parameter tuning parameters influence actual response losses algorithm steady state dynamic tuned achieve response losses tcp 
tcp sessions wide range rtt common values non local communications range 
reasons discuss paragraphs difficult achieve short response times aim high range 
response time distance bursts measured packets transmitted lowest level 
practice needs larger order bursts sufficiently far apart 
hand large synchronisation points distant making algorithm slower converge correct operating point 
experiment represents distance synchronisation points lowest level measured bursts distance measured packets 
contrasting requirements making large synchronisation points distant unavoidably forces high bandwidths 
lowest bandwidth session 
practical lower bounds acceptable values 
comes application data streams audio video transferred acceptable quality certain bandwidth 
second lower bound related speed response congestion control protocol 
distance synchronisation points packets lowering bandwidth means increasing distance synchronisation points 
reducing packet size possible certain extent overhead packet headers unacceptably large 
experiments packet size bytes 
target second synchronisation points lowest subscription level minimum values respectively translate minimum bandwidth kb differences tcp algorithm tries mimic behaviour tcp congestion control equations differ multiplying constant differences behaviours algorithms 
algorithm relative throughputs competing sessions experiencing loss rate depend distance rtt sender receiver 
respect tcp congestion control appear degree unfairness throughput inversely proportional rtt 
fact approaches appropriate having different targets tcp congestion control completely controlled sender way receiver reduce throughput delay generation making rtt appear larger really furthermore connections larger rtt responsive shorter rtt 
reasons acceptable bandwidth allocated evenly sessions different rtt seen sign unfairness 
congestion control algorithm lets receivers control throughput join leave mechanism need additional mechanism dependency rtt 
response time algorithm depend rtt usually longer times especially leave delay reasonable protocol instances get fig 

network topologies simulations 
share bandwidth irrespective rtt 
second difference protocol works controlling data rate tcp congestion control conservation packets principle new packet put network old packet leaves allows tcp traffic generation react quickly face shortterm network load changes 
hand heavily relies ack self clock mechanism making tcp break high loss rates discussed 
important difference algorithm limited set allowed bandwidths exponentially distributed tcp able adjust bandwidth finer granularity 
major consequences obtain worse exploitation available bandwidth big issue discuss minimum allowed bandwidth higher network sustain case high loss rates 
tcp minimum bandwidth roughly packet rtt throughput sharp decrease connections assume chaotic behaviour affected large retransmission timeouts 
possible principle implement behaviour similar tcp algorithm excessive losses experienced subscription level receiver disconnects layer resume reception time 
course receivers bottleneck act synchronously reasons explained section iii 
time constants involved mechanism extremely long seconds best 
resulting quality unacceptable applications audio video suggesting permanent temporary disconnection 
furthermore experience web browser congested networks suggests user try override timeouts long pushing reload button opening new connections defeating mechanism 
consequence believe proper approach deal high losses lies appropriately low values queue management mechanisms routers deal uncontrollable flows 
validation model inter protocol fairness validate analytical model simulated behaviour instances protocol sharing bottleneck link run implementation protocol real kbit sqrt loss rate fig 

relation throughput burst loss rate real measurements compared analytical results eq 
solid line 
protocol instances run concurrently represented symbol 
internet path 
simulations topology left red tail drop routers 
spread pairs sender receiver paths different delays 
senders started random times interval seconds receivers kept active seconds 
results see details matched closely model :10.1.1.102.1697
particular simulations red routers produced values close curve representing eq 
simulations tail drop routers gave slightly higher throughputs similar fig 
refers experiments real network 
similar experiment done implementation algorithm real internet path connecting subnets ucl london pisa 
path characterized maximum throughput slightly greater mb average rtt ms unloaded ms loaded traversing nodes directions route stable duration experiment 
traffic mbone generally congestion controlled order get significant results compete traffic set multicast tunnel throughput limitations multicast routers feeding subnets 
run concurrent instances protocol sharing links normal internet traffic 
results shown accord model prediction simulations 
actual throughput slightly higher analytical value motivated probable tail drop routers network cause bursty losses 
experiments evaluate fairness sharing bottleneck bandwidth instances protocol 
see protocol instances running concurrently similar throughput 
evaluate better feature computed fairness goodput kbit tcp ms rtt aggregate mcast time fig 

bandwidth sharing tcp connection top protocol instances bottom real network 
ms tcp packet size bytes 
index results simulations 
simulations protocol instances resulted range red tail drop 
cases values satisfactory particularly red 
parameter determined simulations fraction available bandwidth aggregate flow ranging instances instances 
coarse quantisation allowed throughputs leads non optimal utilisation available bandwidth phenomenon obviously evident fewer protocol instances 
significant problem typical backbone link multiple flows typically exist residual capacity 
fairness tcp second set simulations experiments run investigate behaviour protocol competing tcp instances 
ns simulator run multicast protocol instances previous experiments tcp connections path characterised ms rtt 
eq tcp packet size ms rtt aggressive protocol usual parameter setting 
simulation showed multicast protocol slightly aggressive due fact algorithm tends aggregate burst losses tcp words loss rate protocol sees lower congestion event rate tcp 
shows experiment performed real network 
testbed described run fairness index defined bytes throughput th protocol instance 
lies tween indicating instances get share instances gets bandwidth 
throughput kbit time fig 

throughput different receivers protocol instance starting different times different bottlenecks 
plot shows receivers aggregate stay sync properly 
stances protocol tcp connection network path 
tcp case case data rate evaluated application level averaging non overlapping windows seconds wide 
see network load entirely determined traffic started multicast transfers tcp connection available bottleneck bandwidth excluding non responsive protocols traffic started tcp throughput decreased accounting bandwidth multicast traffic 
see equations parameters full sized ethernet packets tcp rtt protocol aggressive tcp 
startup steady state dynamics final set experiments run determine dynamic behaviour algorithm 
particularly concerned startup behaviour see quickly new receiver synchronise receivers belonging protocol instance located bottleneck steady state dynamics verify receivers remain synch move adjacent layers 
topology right run instance protocol placing sender node receivers nodes receivers node bottleneck band width mb receivers nodes bottleneck bandwidth mb mb respectively 
bottleneck link crossed random uncorrelated traffic accounts half available bandwidth 
shows result experiment receivers node experience network conditions converge reasonably fast subscription level started different times 
keep synchronized run 
receivers stabilize lower subscription levels subject appreciable interference caused formers 
shows throughput seen application level similar experiment 
time run receivers throughput kbit time fig 

throughput receivers different bottlenecks competing tcp traffic 
competing tcp connection path bytes packet size 
notice tcp competes available bandwidth bottleneck receiver interfering little receivers achieving bandwidth sharing 
applications congestion control algorithm applicable continuous data streams reliable bulk data transfer 
general receivers receive packets transmitted sender layers subscription level low losses due congestion hopping layers 
noted congestion control protocol aims keeping loss rate low values 
effect missing packets obviously different continuous data streams reliable bulk file transfers 
continuous streams transfer continuous data streams delay constraints generally allow give hard guarantees integrity received data recovery lost packets generally unnecessary 
goal continuous data stream transfer data maximum achievable quality available bandwidth 
simply achieved layered data organisation subscription level corresponds data transmitted different quality 
desirable limit latency transferring data burst losses reasonably short 
contrasting requirements burst losses reduced techniques interleaving price increase latency 
regarding latency note sender initiated probe produces degree burstiness traffic requires seconds buffering receiving order produce uniform flow data 
reliable bulk data transfer come problem reliable bulk data transfer requires find proper layered data arrangement tcp fixed size data object effective way recovering packet may lost congestion jumps different layers 
assume transmitter starts sending packets soon receives request receiver continues transmission active receivers 
transmission done layers selectively forwarded multicast routers 
assume existence upper level session management protocol possibly collects feedback decide long continue transmissions select packets send 
approach follow fec techniques see :10.1.1.35.7747
principle problems finding suitable transmission order data achieving effective recovery losses solved passing packets object encoder produce large num ber encoded packets suffice reconstruct original data 
transmitter send packet takes new produced encoder 
provided packets transmitted twice time receiver needs complete packets 
encoding subset tion condition insures receiver collect different packets matter ones layer come order complete reception 
approach authors rmdp protocol reliable multicast protocol easily extended congestion control algorithm described 
fec encoding high redundancy packets equivalent data reconstruction solves problems 
scalability problems due presence uncorrelated losses different receivers receiver conduct recovery autonomously simply waiting packets come 
second need detailed feedback receivers received packets equally data reconstruction purposes 
third need devise special data arrangement different layers order avoid receiver sees packet 
main drawback fec consists potentially high encoding decoding costs 
overhead reduced making number techniques splitting files blocks small size applying fec sepa block fft techniques compute fec packets pre computing fec packets server storing disk probabilistic linear time algorithms pre sented fec encoding :10.1.1.35.5754
vi 
congestion control algorithm multicast data transfer mbone evaluated performance shown applicability continuous stream reliable bulk transfer 
algorithm require router support status sender completely receiver driver rely explicit protocol receiver synchronisation managing group membership 
analytical results simulations experiments real networks shown algorithm achieve fair sharing bottleneck bandwidth protocol instances tcp instances 
blahut theory practice error control codes addison wesley ma chiu jain analysis increase decrease algorithm hms congestion avoidance computer networks computer networks isdn systems pp 
deering multicast routing datagram internetwork phd thesis stanford university dec 
fenner internet group management protocol version internet draft working draft jan ds internic net internet drafts draft ietf igmp txt floyd fall router mechanisms support congestion control technical report ftp ftp ee lbl gov papers collapse ps 
jacobson congestion avoidance control acm sigcomm august stanford ca pp 
luby mitzenmacher shokrollahi spielman :10.1.1.35.5754
practical loss resilient codes proc 
ninth annual acm symp 
theory computing el paso texas may 
mathis semke mahdavi ott macroscopic behavior tcp congestion algorithm ccr vol july 
mccanne jacobson vetterli receiver driven layered multicast sigcomm august stanford ca pp 
ucb lbnl network simulator ns version www mash cs berkeley edu ns 
ott stationary distribution ideal tcp congestion avoidance technical report aug 
rizzo effective erasure codes reliable computer communication protocols ccr april pp :10.1.1.35.7747
source code athttp www iet unipi luigi vdm rizzo vicisano reliable multicast data distribution protocol software fec techniques proc 
fourth ieee workshop architecture implementation high performance communication systems beach greece june 
stevens tcp slow start congestion avoidance fast retransmit fast recovery algorithms rfc january 
shacham multipoint communication hierarchically encoded data proc 
ieee infocom pp 
zakhor multi rate subband coding video ieee trans 
image processing sept pp 
vicisano notes cumulative layered organisation data packets multiple streams variable rate www cs ucl ac uk staff vicisano layers ps vicisano rizzo crowcroft tcp congestion control layered multicast data transfer research note rn ucl july :10.1.1.102.1697
www cs ucl ac uk staff vicisano rlc ps 
