intention recognition situation calculus probability theory frameworks robert ana mara fernandez toulouse france robert cert fr toulouse france hotmail com 
method recognize agent intentions framework combines logic situation calculus probability theory 
method restricted contexts agent performs procedures library procedures system intends recognize agent intentions complete knowledge actions performed agent 
original aspect procedures defined human agents artificial agents 
consequence procedures may offer possibility kind actions actions may forbid perform specific actions 
problem different complex standard problem plan recognition 
select procedures partially match observations consider procedures greatest estimated probability 
estimation application bayes theorem specific heuristics 
heuristics depend history just observation 
prolog prototype method implemented 
agents interact important agent know agent intentions knowledge allows anticipate behavior 
information help agent intends control compatible intention 
agent sure knows agent intentions uncertain information better complete ignorance decision taken 
method proposed recognize agent intentions particular context pilot interacts aircraft 
specificity context pilot performs procedures student universidad de madrid 
defined handbook 
second specificity procedures defined terms commands performed turn switch reasonable assume performance commands perceived sensors aircraft 
possible design system instance part automatic pilot aircraft capacity observe commands performed pilot 
assumption system compare sequence observations procedure definitions handbook determine procedures match observations 
procedures best match assigned agent intentions 
define method recognize pilot intentions find solutions independent problems 
select language represent procedures formal terms 
define formal characterization procedures match observations 
define method select procedures best match assigned agent intention 
previous proposed solutions problems logical framework situation calculus 
situation calculus variant classical order logic reason convenient computational logic modal logics 
contribution propose solution problem framework combines situation calculus probability theory bayes theorem 
probabilities combination situation calculus deal deterministic actions quite different problem 
works similar objectives field plan recognition probabilities utility function 
baier uses framework situation calculus probabilities 
designed particular context natural language analysis game theory 
original feature case pilot procedures may allow command sequence prescribed commands may specified commands forbidden 
may happen pilot intention perform procedures parallel 
consequence problems complex standard problem plan recognition 
organized follows 
sections solutions problems recalled 
section method solve problem 
section start analysis typical example define general method compute probabilities define heuristics estimate probabilities apply method example show results fit intuitive requirements 
possible refinements extensions method 
method applied contexts shall general term agent pilot action command 
brief situation calculus golog extension logical framework situation calculus represent states world actions performed agent 
situation calculus typed order logic equality limited fragments second order 
language kinds predicates 
predicates truth value may change performance action called fluents 
exactly argument type situation argument 
predicates argument type situation 
example may predicates nationality nationality aircraft gear extended situation landing gear extended 
altitude situation aircraft altitude altitude gear extended fluents nationality fluent 
terms type situation may constant variable symbols type situation terms form designated function symbol term type action term type situation 
instance constant type situation extend gear retract gear constants type action terms type situation extend gear extend gear retract gear extend 
gear 
term retract gear extend gear denotes situation performance actions extend gear retract gear 
matter simplification notation 
denote 

grammar formulas situation calculus defined usual classical order logics 
successor relation defined set situations 
intuitively means situation reached situation sequence action 
semiformal terms smallest relation satisfies properties def define truth value fluents situation successor state axiom fluent 
example gear extended definition successor relation part situation calculus requires second order logic 
gear extended extend gear gear extended retract gear intuitive meaning axiom action cause gear extended true resp 
false action extend gear resp 
retract gear 
golog language programming language robots kinds agents 
expressive power algol semantics defined logic situation calculus 
programs terms represent complex actions defined operators 
simplicity considered operator sequence denoted test denoted non deterministic choice denoted 
represent called procedures added negation operator denoted sequence actions term denoted 
motivation extension explained example 
consider procedure called fire board described small private aircraft 
procedure says case engine fire pilot turns fuel feed sets full throttle sets mixture 
primitive actions commands respectively denoted fuel full throttle mixture procedure denoted fire board 
implicit procedure definition actions pilot action 
example call air traffic control 
implicit turning fuel feed turn fuel feed 
just common sense human explicit define formal method system observes pilot 
modified golog language fire board procedure represented fire board def fuel fuel full throttle fuel mixture abbreviation intuitively means sequence actions performance contain sequence actions performance 
case programs artificial agent need term operator artificial agent specified program 
basic difference program called procedure 
formal definition modified golog language atomic actions test actions procedures procedures procedures 
formal definition procedures defined formulas situation calculus language 
formulas denoted property dop intuitive meaning dop situation reached situation performance procedure 
formal semantics dop dop def atomic action 
dop def dop def dop def dop dop dop def dop dop dop def dop dop modified golog language gives solution problem mentioned 
doing procedure characterize fact sequence performed actions matches partial performance procedure sense sequence interpreted partial performance procedure property doing 
property guarantee agent performing procedure 
informal terms property doing holds conditions satisfied 
agent begun executing part 
agent completely executed 
actions performed prevent continuation execution 
step define property dom intuitive meaning dop shorter sequence actions dop sequence 
dom def dop dop define property dos intuitive meaning sequence actions satisfies conditions 
dos def start dom dom dom start means reformulated procedure form semantics dop dop 
condition expressed start dom strict interpretation condition expressed dom condition expressed dom 
definition doing doing def dos dos condition dos expresses execution begun ended condition dos expresses previous execution started ended 
intention recognition section presents method choosing procedures satisfy doing property assigned system agent intention 
assignment guaranteed correspond true agent intention due uncertainty sensible probabilities choice 
going formal presentation method give simple example intuitively show basic guidelines assumptions method 
simple example consider procedures assume situation sequence actions performed formal terms 
situation procedure compatible performed action doing doing doing 
adopted assumption 
assumption 
agent intention procedure actions defined procedure 
system knows agent intention intention started done action 
guidelines expected properties confused assumptions 
previous sections procedure variables 
specific constants assigned variables 
system accept probability agent intention equal 
accepted additional assumption assumption 
agent situation si doing sense doing si si probability intention independent si probability denoted 
define notations 
probability holds 
int si situation si agent intention formal terms expressed doing int procedure doing int int int int int int 
situation doing int doing doing 
fact action performed argument system believe agent intention believe intention 
int int int int 
sensible assume int si int si increase way 
int int greatest probability system believes agent intention intention 
notation 
bint si situation si system believes agent intention 
notation bint bint bint 
adopted general assumption 
assumption 
situation si doing si procedure doing si int si int si system believes si agent intention bint si 
reformulated bint iff doing procedure int int situation doing doing doing 
assume int si increased way int si int si increased 
procedures agent choice doing recommended action respectively doing precise say agent intention reach situation done 
action 
assumed recommended action probability corresponding procedure decreases observed action confirm intention procedure 
int int int int bint bint bint 
situation doing doing doing 
situation action recommended action recommended action 
int int 
compare procedures performed actions recommended recommended 
number performed actions recommended action action 
int int 
bint bint bint 
situation doing executed doing doing 
number recommended actions number recommended actions 
int int int int 
bint bint bint 
example derive general guidelines expressed terminology 
procedure definition call action prescribed action action explicitly appears procedure just preceded explicit action 
example form 

occurrence prescribed action 
notice procedure occurrences may prescribed actions procedure definition call action recommended action action explicitly appears procedure just preceded term form 
example form 



occurrence recommended action 
call set actions done agent observed system 
procedure definition call action tolerated action procedure form 

action 
example form 
set tolerated actions occurrence 
procedure definition call action restricted tolerated action procedure form 
ai 
ail 
action ai 
ail 
example form 

set restricted tolerated actions occurrence 
definitions formulate basic guidelines way 
guideline situation si performed action prescribed action int si greater int si 
guideline situation si performed action recommended action int si greater int si greater case prescribed action 
guideline situation si performed action tolerated action int si lower int si 
guideline situation si performed action restricted tolerated action fact int si greater lower int si depends cardinality set restricted tolerated actions 
adopted assumption evolution fact agent intention procedure 
assumption 
situation si doing si assumed agent si intention iff intention si 
assumption expressed formal terms follows 
doing int int logically equivalent conjunction 
doing int int doing int int assumption means agent intention persistent long procedure completely performed 
corresponds notion intention persistence proposed cohen levesque see 
assumption corresponds different idea 
idea action performed agent consistent fact doing situation agent intention performed action intention 
general method compute probabilities general method shall notations 

set actions performed agent observed system 
adopt assumption 
assumption 
assumed language definition set atomic action constant symbols assumption intuitively means actions performed agent observed system ignored system 
assumption consistent fact system believes agents intentions founded observations 
oi ith observation action performed system 
aji obs oi aji action performed agent observed system means observation action oi 
oi short hand denote proposition aji obs oi 
def 
oi def true initial situation 
si aji si int si probability situation si agent intention sequence observations bayes theorem int si int si int si oi int si int si int si oi oi int si int si oi int si int si doing si int si int si 
int si doing si int si int si 
oi int si int si oi oi int si int si oi int si adopt notations def oi int si def oi fi def int si fi int si formula allows regress computation int si situation sj doing sj heuristics estimate probabilities int si int si define heuristics estimate value fi restricted set procedures procedures form 
ak ak 
ak denotes atomic action absent denotes term form ai 
ail aij may equal 
form called linear normal form 
notice procedure doing 
notice form strong restricted form procedure transformed repeatedly applying transformation rule transforms 
get procedure form 
difference procedure linear normal form aks may denote atomic action test action ks absent general form may kind procedure 
going define estimation term fi case doing si 
estimation fi depends part performed situation si 
part defined property done si property done defined follows 
done def doing start dos dop definition condition dos guarantees part performed started performance condition dop guarantees part longer performed done intuitively means maximal part started ended instance previous example doing dos dop 
estimate fi accepted assumption 
assumption 
assumed ith observation independent previous observations action probability observed 
formal terms expressed oi oi shall notation oi ak express action aij observed observation action oi atomic action denoted ak notation oi express aij set ai 
ail ak ak action denoted ak 
terms fi estimated case doing si 
consider different cases 
case 
doing si 
case assumption int si doing si doing si imply si agent performed action observed action oi 
necessarily oi 
fi case 
doing si 
case 
form 
ak 
case 
form 
ak ak 
case absent 
assumption int si implies action performed si ak 
necessarily oi ak 
fi case 
form 
ak ak 
case 
oi ak 
general form ai 
ail 
guideline action performed agent si recommended action ak restricted tolerated action defined value defined function application domain supposed small respect 
fi 
case 
oi ak 
adopted assumption 
assumption 
assumed agent intention restricted tolerated actions probability performed agent 
action ai 
ail ak probability done 
fi 
case 
form 
case 
oi ak 
type situation case 
fi 
case 
oi ak 
type situation case 
fi 
case action performed agent si prescribed action cases 
fi conforms guideline case performed action recommended action cases 
fi 
fulfill guideline fi assign value case performed action tolerated action cases 

fi 
assumption fi fulfills guideline case performed action restricted tolerated action cases 

fi 
notice case rejected restricted tolerated action agent choice offered fi iff fi iff consistent 
guideline may fi fi depending values coming back example method compute iteratively values int si int si int si 
notations int si int si int si recommended actions tolerated actions get table si 
determine system believes agents intentions situations 
expected get bint bint bint 
bint bint bint 
bint bint 
bint 
bint 
bint 
method assign intentions agent computation estimation probability agent intention perform procedure 
parts computation method 
part section general assumptions 
second part section heuristics additional assumptions requires know value 
values determined application domain value tuned designer 
difference methods plan recognition procedures may terms form 
property doing allows selection procedure matches observations estimate probability occurrence observation oi consider part procedure performed 
estimated probabilities depend history just previous observation oi 
important original aspect method 
computation cost estimated probabilities evaluation properties doing done linear respect number observations procedure 
computation fast 
worth noting preliminary version method implemented prolog 
implementation great help check intuition simple examples 
works remove strong assumption independence ob oi int si oi order better estimation oi guarantee long sequence observations tolerated actions int si lower allow test actions 
temporal conditions procedure definitions 
acknowledgment 
grateful help probability theory 
errors responsibility authors 

albrecht zukerman nicholson 
bayesian models keyhole plan recognition adventure game 
user modeling user adapted interaction volume pages 


appelt pollack 
weighted abduction plan ascription 
user modeling user adapted interaction volume pages 


baier 
procedure recognition situation calculus 
nd international conference computer science society 
ieee computer society 

bauer 
integrating probabilistic reasoning plan recognition 
proceedings th european conference artificial intelligence 
john wiley sons 

blaylock allen 
corpus statistical goal recognition 
gottlob walsh editors proceedings th joint conference artificial intelligence pages 

boutilier reiter soutchanski thrun 
decision theoretic high level agent programming situation calculus 
proceedings aaai 


carberry 
incorporating default inferences plan recognition 
proceedings th national conference artificial intelligence pages 


charniak goldman 
bayesian model plan recognition 
artificial intelligence 

cohen levesque 
persistence intention commitment 
lansky georgeff editor reasoning actions plans pages usa 


mean agent performing typical procedure 
formal definition situation calculus 
lewis johnson editor international joint conference autonomous agents multiagent systems 
acm press 


de de un que con un 
technical report toulouse 

lukasiewicz 
game theoretic golog partial observability 
dignum dignum koenig kraus wooldridge editors proceedings th international conference autonomous agents multi agent systems 
acm press 

kautz 
formal theory plan recognition implementation 
allen kautz editors reasoning plans pages 
morgan kaufman publishers 

levesque reiter lesp rance lin scherl 
golog logic programming language dynamic domains 
journal logic programming 

mao gratch 
utility approach intention recognition 
proceedings aamas workshop agent tracking modeling agents observations 

parra nayak 
theories intentions framework situation calculus 
proceedings aamas workshop declarative agent languages technologies 

reiter 
knowledge action logical foundations specifying implementing dynamical systems 
mit press 
