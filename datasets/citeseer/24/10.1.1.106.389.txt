survey parallel genetic algorithms cant paz department computer science illinois genetic algorithms laboratory university illinois urbana champaign illigal ge uiuc edu 
genetic algorithms gas powerful search techniques successfully solve problems different disciplines 
parallel gas particularly easy implement promise substantial gains performance 
extensive research field 
survey attempts collect organize unified way representative publications parallel genetic algorithms 
organize literature presents categorization techniques parallelize gas shows examples 
majority research field concentrated parallel gas multiple populations survey focuses type algorithms 
describes significant problems modeling designing multi population parallel gas presents advancements 
keywords parallel genetic algorithms master slave genetic algorithms multiple demes hierarchical genetic algorithms 
genetic algorithms gas efficient search methods principles natural selection genetics 
applied successfully find acceptable solutions problems business engineering science gol 
gas generally able find solutions reasonable amounts time applied harder bigger problems increase time required find adequate solutions 
consequence multiple efforts gas faster promising choices parallel implementations 
objective collect organize relevant publications parallel gas 
order organize growing amount literature field presents categorization different types parallel implementations gas 
far popular parallel gas consist multiple populations evolve separately time exchange individuals occasionally 
type parallel gas called multi deme coarse grained distributed gas survey concentrates class algorithm 
describes major types parallel gas discusses briefly examples 
examples literature parallel gas applied particular problem intention enumerate instances parallel gas successful finding solutions highlight publications contributed growth field parallel gas ways 
survey examines detail publications introduce new attempt explain works mentions application problems show parallel gas useful real world just academic curiosity 
organized follows 
section brief genetic algorithms section describes categorization parallel gas 
review parallel gas begins section presentation early publications 
section describes master slave method parallelize gas 
sections examine literature parallel gas multiple populations section summarizes research fine grained parallel gas 
section deals hybrid methods parallelize gas 
section describes open problems modeling design advancements 
report ends summary project 

genetic algorithms quick section provides basic background material gas 
defines terms describes simple ga works complete tutorial 
interested readers may consult book goldberg gol detailed background information gas 
genetic algorithms stochastic search algorithms principles natural selection recombination 
attempt find optimal solution prob lem hand manipulating population candidate solutions 
population evaluated best solutions selected reproduce mate form generation 
number generations traits dominate population resulting increase quality solutions 
basic mechanism gas darwinian evolution bad traits eliminated population appear individuals survive process selection 
traits survive mixed recombination mating form better individuals 
mutation exists gas considered secondary operator 
function ensure diversity lost population ga continue explore 
notion traits formalized concept building blocks bbs string templates schemata match short portion individuals act unit influence fitness individuals 
prevailing theory suggests gas propagating bbs selection crossover 
follow goldberg deb thierens gol restrict notion building block shortest schemata contribute global optimum 
view juxtaposition bbs order particular string lead bb order separate bbs 
individuals composed binary string fixed length gas explore search space formed points 
initially population consists points chosen randomly heuristic generate solutions domain 
case portion population generated randomly ensure diversity solutions 
size population important influences ga find solutions time takes reach gol har 
population small adequate supply bbs difficult identify solutions 
population big ga waste computational resources processing unnecessary individuals 
balance quality solution time simple ga needs find exists parallel gas shall see affects design 
individual population fitness value 
general fitness payoff measure depends individual solves problem 
particular gas optimizers fitness individual value objective function point represented binary string 
selection uses fitness value identify individuals reproduce mate form generation 
simple gas operators loosely natural genetics explore search space crossover mutation 
crossover primary exploration mechanism gas 
operator takes random individuals selected form generation exchanges random substrings 
example consider strings length possible crossover points strings length example single crossover point chosen randomly indicated symbol 
exchanging substrings crossover point results new strings generation recombination operation take forms 
example point crossover possible point point uniform crossover 
crossover points result exploratory search increase chance destroying long bbs 
mutation usually considered secondary search operator 
function restore diversity may lost repeated application selection crossover 
operator alters random value string 
example take string assume position chosen randomly mutate 
new string 
nature probability applying mutation low gas probability crossover usually high 
ways ga method predetermined number generations function evaluations 
average quality population improve number generations 
common alternative halt ga individuals identical occur mutation 

classification parallel gas basic idea parallel programs divide task chunks solve chunks simultaneously multiple processors 
divide conquer approach applied gas different ways literature contains examples successful parallel implementations 
parallelization methods single population divide population relatively isolated subpopulations 
methods exploit massively parallel computer architectures better suited multicomputers fewer powerful processing elements 
classification parallel gas review similar ada gor lin extended include category 
main types parallel gas global single population gas single population fine grained multiple population coarsegrained gas 
master slave ga single panmictic population just simple ga evaluation fitness distributed processors see 
type parallel ga selection crossover consider entire population known global parallel gas 
fine grained parallel gas suited massively parallel computers consist spatially structured population 
selection mating restricted small neighborhood neighborhoods overlap permitting interaction individuals see schematic class gas 
ideal case individual processing element available 
workers master 
schematic master slave parallel ga master stores population executes ga operations distributes individuals slaves 
slaves evaluate fitness individuals 
multiple population multiple deme gas sophisticated consist subpopulations exchange individuals occasionally schematic 
exchange individuals called migration shall see sections controlled parameters 
multiple deme gas popular class parallel gas difficult understand effects migration fully understood 
multiple deme parallel gas introduce fundamental changes operation ga different behavior simple gas 
multiple deme parallel gas known different names 
known distributed gas usually implemented mimd computers 
computation communication ratio usually high occasionally called coarse grained gas 
multiple deme gas resemble island model population genetics considers relatively isolated demes parallel gas known island parallel gas 
size demes smaller population serial ga expect parallel ga converges faster 
compare performance serial parallel algorithms consider quality solutions case 
true smaller demes converge faster true quality solution poorer 
section presents theory predicts quality solutions extreme cases multi deme parallel gas allows fair comparisons serial gas 
important emphasize master slave parallelization method affect behavior algorithm methods change way ga works 
example master slave parallel gas selection takes account population parallel gas selection considers subset individuals 
master slave individuals population mate random mating methods mating restricted subset individuals 
final method parallelize gas combines multiple demes master slave fine grained gas 
call class algorithms hierarchical parallel gas 
schematic fine grained parallel ga class parallel gas spatially distributed population implemented efficiently massively parallel computers 

schematic multiple population parallel ga process simple ga infrequent communication populations 
higher level multiple deme algorithms single population parallel gas master slave fine grained lower level 
hierarchical parallel gas combines benefits components promises better performance 
section reviews results implementations hierarchical parallel gas 

early studies despite growing attention parallel computation received years idea building massively parallel computers older 
example late john holland proposed architecture parallel computers run undetermined number programs concurrently hol hol 
hardware holland computer composed relatively simple interconnected modules programs running machines modify executing mainly adapt failures hardware 
applications holland mind computer simulation evolution natural populations 
iterative circuit computers called built hardware massively parallel computers connection machine modular concept holland computers 
software flexible computers 
early study parallelize genetic algorithms conducted bet 
described global parallel implementations conventional ga ga generation gap replaces portion population generation analyzed efficiency algorithms 
analysis showed global parallel gas may efficiency close simd computers 
analyzed gradient optimizers identified bottlenecks limit parallel efficiency 
early study map genetic algorithms existing computer architectures grefenstette gre 
proposed prototypes parallel gas variations master slave scheme fourth multiple population ga prototype master processor stores population selects parents generation applies crossover mutation 
individuals sent slave processors evaluated return master generation 
second prototype similar clear division generations slave processor finishes evaluating individual returns master receives individual 
scheme eliminates need synchronize generation maintain high level processor utilization slave processors operate different speeds 
third prototype population stored shared memory accessed slaves evaluate individuals apply genetic operators independently 
grefenstette fourth prototype multiple population ga best individ processor broadcast generation 
complexity multiple deme parallel gas evident early proposal grefenstette raised interesting questions frequency migration destination topology effect migration preventing premature convergence 
prototype implemented time pet pet review results section 
grefenstette hinted possibility combining fourth prototype creating hierarchical parallel ga 
master slave parallelization section reviews master slave global parallelization method 
algorithm uses single population evaluation individuals application genetic operators done parallel 
serial ga individual may compete mate selection mating global 
global parallel gas usually implemented master slave programs master stores population slaves evaluate fitness 
common operation parallelized evaluation individuals fitness individual independent rest population need communicate phase 
evaluation individuals parallelized assigning fraction population processors available 
communication occurs slave receives subset individuals evaluate slaves return fitness values 
algorithm stops waits receive fitness values population proceeding generation algorithm synchronous 
synchronous master slave ga exactly properties simple ga speed difference 
possible implement asynchronous master slave ga algorithm wait slow processors exactly simple ga global parallel ga implementations synchronous rest assumes global parallel gas carry exact search simple gas 
global parallelization model assume underlying computer architecture implemented efficiently shared memory distributed memory computers 
shared memory multiprocessor population stored shared memory processor read individuals assigned write evaluation results back conflicts 
distributed memory computer population stored processor 
master processor responsible explicitly sending individuals processors slaves evaluation collecting results applying genetic operators produce generation 
number individuals assigned processor may constant cases multiuser environment utilization processors variable may necessary balance computational load processors dynamic scheduling algorithm guided self scheduling 
fogarty huang fog attempted evolve set rules pole balancing application takes considerable time simulate 
network transputers microprocessors designed specifically parallel computations 
transputer connect directly transputers communication arbitrary nodes handled retransmitting messages 
causes overhead communications attempt minimize fogarty huang connected transputers different topologies 
concluded configuration network significant difference 
obtained reasonable speed ups identified fast growing communication overhead impediment improvements speed 
abramson abr implemented ga shared memory computer encore multimax processors search efficient timetables schools 
reported limited speed ups blamed sections serial code critical path program results 
abramson mills perkins abr added distributed memory machine fujitsu ap processors experiments changed application train timetables modified code 
time reported significant identical speed ups processors computers speed ups degrade significantly processors added mainly due increase communications 
implementation global ga hauser nner hau 
different parallel computers obtained speed ups multiprocessor speed processors low communications overhead 
explain poor performance systems ksr inadequate scheduling computation threads processors system 
aspect gas parallelized application genetic operators 
crossover mutation parallelized idea partitioning population distributing multiple processors 
operators simple time required send individuals back forth offset performance gains 
communication overhead parallelization selection mainly forms selection need information entire population require communication 
bra parallelized different types global selection grid processors show algorithms optimal topology algorithms take time steps grid 
master slave parallel gas easy implement efficient method parallelization evaluation needs considerable computations 
method advantage altering search behavior ga apply directly theory available simple gas 

multiple deme parallel gas generation important characteristics multiple deme parallel gas relatively large subpopulations migration 
multiple deme gas popular parallel method papers written describing innumerable aspects details implementation 
obviously impossible review papers section presents influential papers relevant examples particular implementations applications 
probably systematic study parallel gas multiple populations grosso dissertation gro 
objective simulate interaction parallel subcomponents evolving population 
grosso simulated diploid individuals subcomponents gene population divided demes 
deme exchanged individuals fixed migration rate 
controlled experiments grosso improvement average population fitness faster smaller demes single large panmictic population 
confirms long held principle population genetics favorable traits spread faster demes small demes large 
observed demes isolated rapid rise fitness stopped lower fitness value large population 
words quality solution convergence worse isolated case single population 
low migration rate demes behaved independently explored different regions search space 
significant effect receiving deme quality solutions similar case demes isolated 
intermediate migration rates divided population solutions similar panmictic population 
observations indicate critical migration rate performance algorithm obstructed isolation demes partitioned population finds solutions quality panmictic population 
similar parallel ga grefenstette pet copy best individual deme sent neighbors generation 
purpose constant communication ensure mixing individuals 
grosso authors observed parallel gas high level communication solutions quality sequential ga single large panmictic population 
observations prompted questions unresolved today level communication necessary parallel ga behave panmictic ga 
cost communication communication cost small viable alternative design parallel gas research necessary understand effect migration quality search parallel gas able answer questions 
interesting important observations long ago time systematic studies parallel gas underway 
example tanese tan proposed parallel ga demes connected hyper cube topology 
tanese algorithm migration occurred fixed intervals processors dimension hypercube 
chosen probabilistically best individuals subpopulation replaced worst individuals receiving deme 
tanese carried sets experiments 
interval migrations set generations number processors varied 
tests migration rates varying number processors parallel ga results quality serial ga difficult see experimental results parallel ga solutions sooner serial ga range times large 
second set experiments tanese varied mutation crossover rates deme attempting find parameter values balance exploration exploitation 
third set experiments studied effect exchange frequency search results showed migrating frequently infrequently degraded performance algorithm 
year cohoon hedge martin richards noted certain similarities evolution solutions parallel ga theory punctuated equilibria coh 
theory proposed gould explain missing links fossil record 
states time populations equilibrium significant changes genetic composition changes environment start rapid evolutionary change 
important component environment population composition individuals population compete resources members 
arrival individuals populations equilibrium trigger evolutionary changes 
experiments parallel ga cohoon noticed relatively little change migrations new solutions shortly individuals exchanged 
cohoon linear placement problem benchmark experimented connecting demes mesh topology 
mentioned choice topology probably important performance parallel ga long high connectivity small diameter ensure adequate mixing time progresses 
note mesh topology chose densely connected small diameter number demes 
extended group vlsi application graph partitioning problem hypercube topology coh coh 
mesh topology nodes hypercube neighbors diameter hypercube shorter mesh 
tanese continued exhaustive experimental study frequency migrations number individuals exchanged time tan 
compared performance serial ga parallel gas communication 
algorithms total population size individuals executed generations 
tanese multi deme ga communication demes individuals find point run solutions quality single serial ga population individuals 
average quality final population lower parallel isolated ga migration final average quality increased significantly cases better final quality serial ga result interpreted carefully serial ga converge fully generations improvement possible 
details experiments derived study tanese dissertation tan 
belding bel confirms tanese findings royal road functions 
sent random destination neighbor hypercube topology author claimed experiments hypercube yielded similar results 
cases global optimum migration completely isolated cases 
point reviewed handful examples parallel gas may hypothesize reasons algorithms popular multiple deme gas simple extension serial ga recipe simple take conventional serial gas run node parallel computer predetermined times exchange individuals 
relatively little extra effort needed convert serial ga ga program serial ga remains subroutines need added implement migration 
coarse grain parallel computers easily available easy simulate network workstations single processor free software mpi pvm 
section reviewed papers initiated systematic research parallel gas multiple populations raised important questions area face today 
section reviews papers parallel gas show field matured began explore aspects algorithms 

coarse grained parallel gas second generation papers examined previous section recognize important issues emerging 
example parallel gas promising terms gains performance 
parallel gas complex serial counterparts 
particular migration individuals deme controlled parameters topology defines connections subpopulations migration rate controls individuals migrate migration interval affects frequency migrations 
late early research parallel gas began explore alternatives parallel gas faster understand better worked 
time theoretical studies parallel gas began appear empirical research attempted identify favorable parameters 
section reviews early theoretical experimental studies migration topologies 
period researchers began multiple population gas solve application problems section ends brief review 
directions field matured parallel gas began tested large difficult test functions 
remarkable example hlenbein born described parallel ga global optimum functions benchmarks optimization algorithms 
functions adopted researchers benchmarks empirical che gor 
hlenbein born local optimizer algorithm designed efficient powerful program clear results obtained credited distributed population local optimizer 
hlenbein believes parallel gas useful study evolution natural populations 
view shared perceive partitioned population occasional exchange individuals closer analogy natural process evolution single large population 
true parallel ga observe phenomena direct counterpart nature example favorable change chromosome spreads faster smaller demes large demes main intention majority researchers field design faster search algorithms 

early theoretical publications reviewed far experimental results wave publications describing successful implementations theoretical studies appeared 
theoretical study parallel gas necessary achieve deeper understanding algorithms utilize full potential 
probably attempt provide theoretical foundation performance parallel ga pet 
article described derivation schema theorem parallel gas randomly selected individuals broadcast generation 
calculations showed expected number trials allocated schemata bounded exponential function just serial gas 
important theoretical question determine conditions parallel ga find better solution serial ga starkweather whitley mathias sta important observations regarding question 
relatively isolated demes converge different solutions migration recombination may combine partial solutions 
starkweather speculated parallel ga low migration may find better solutions separable functions 
second observation recombination partial solutions results individuals lower fitness function separable serial ga advantage 

migration sign maturity field research started focus particular aspects parallel gas 
section reviews publications explore alternative migration schemes try parallel gas efficient 
majority multi deme parallel gas migration synchronous means occurs predetermined constant intervals 
migration may asynchronous demes communicate events occur 
example asynchronous migration grosso dissertation experimented delayed migration scheme migration enabled population close converge 
braun bra idea algorithm migration occurred demes converged completely author term degenerate purpose restoring diversity demes prevent premature convergence low quality solution 
migration strategy takai sato mun cant paz goldberg theoretical models predict quality solutions fully connected topology 
interesting question raised right time migrate migration occurs early run number correct building blocks may small influence search right direction expensive communication resources wasted 
different approach migration developed marin mar 
proposed centralized scheme slave processors execute ga population periodically send best partial results master process 
master process chooses fittest individuals far processor broadcasts slaves 
experimental results network workstations showed near linear speed ups obtained small number nodes authors claim approach scale larger networks communication infrequent 

communication topologies traditionally neglected component parallel gas topology interconnection demes 
topology important factor performance parallel ga determines fast slow solution disseminates demes 
topology dense connectivity short diameter solutions spread fast demes may quickly take population 
hand topology sparsely connected long diameter solutions spread slower demes isolated permitting appearance different solutions 
solutions may come time recombine form potentially better individuals 
communication topology important major factor cost migration 
instance densely connected topology may promote better mixing individuals entails higher communication costs 
general trend multi deme parallel gas static topologies specified run remain unchanged 
implementations parallel gas static topologies native topology computer available researchers 
example implementations hypercubes coh tan tan rings gor common 
empirical study showed parallel gas dense topologies find global solution fewer function evaluations gas sparsely connected ones 
study considered fully connected topologies hypercubes toroidal mesh unidirectional bidirectional rings 
major choice dynamic topology 
method deme restricted communicate fixed set demes sent demes meet criteria 
motivation dynamic topologies identify demes produce effect 
typically criteria choose deme destination includes measures diversity population mun measure genotypic distance populations lin representative individual population best 

applications application projects multiple population parallel gas published 
section mentions representative examples 
graph partitioning problem popular application multiple deme gas see example bessi re talbi cohoon martin richards coh talbi bessi re tal 
levine lev set partitioning problem outstanding 
algorithm global solutions problems integer variables 
performance measured quality solution iteration increased demes added 
li li hlenbein adequate solutions quadratic assignment problem combinatorial optimization application 
coarse grained parallel gas find solutions problem distributing computing loads processing nodes mimd computers neu talbi mun ser 
challenging application synthesis vlsi circuits 
davis liu elias dav different types parallel gas search solutions problem 
parallel gas multiple populations demes global ga uses worker processes evaluate population 
multiple deme gas demes isolated second demes communicate unspecified programmable schedule 
interesting contains uncommon elements parallel gas implemented linda parallel coordination language usually mis regarded slow second speed ups measured times takes find solution certain fixed quality serial parallel gas 
computing speed way gives significant measure performance parallel gas simply comparing time takes run gas certain number generations 

non traditional gas multiple population parallel gas traditional generational ga reviewed section 
non traditional gas parallelized improvements serial versions reported 
example mar davidor eco model dav nodes distributed algorithm explored different migration schemes varying complexity 
simplest scheme migration just collect results node run 
complex algorithms involved migration complete eco demes 
replacement policies explored marginal benefits 
genitor steady state ga individuals change generation 
distributed version genitor whi individuals migrated fixed intervals neighbors replaced worst individuals target deme 
significant improvement serial version reported original gordon whitley gor 
efforts parallelize messy gas gol 
messy gas phases 
primordial phase initial population created partial enumeration reduced tournament selection 
phase partial solutions primordial phase mixed 
primordial phase dominates execution time merkle lamont tried data distribution strategies speed phase mer extending previous 
results indicate significant differences quality solutions different distribution strategies significant gains execution time algorithm 
merkle gates lamont parallelized fast messy ga gol search optimal conformations met molecules mer 
problem algorithm showed speed ups processors nodes speed increase fast 
koza andre koz network transputers parallelize genetic programming 
report analysis computing memory requirements algorithm concluded transputers costeffective solution implement 
demes implementation connected mesh deme individuals 
authors experimented different migration rates reported super linear speed ups computational effort total time moderate migration rates 

fine grained parallel gas fine grained parallel gas population spatial structure limits interactions individuals 
individual compete mate neighbors neighborhoods overlap solutions may disseminate entire population 
robertson rob parallelized genetic algorithm classifier system connection machine 
parallelized selection parents selection classifiers replace mating crossover 
execution time implementation independent number classifiers number processing elements cm 
introduced gorges schleuter gor gor hlenbein 
population structure resembles ladder upper lower ends tied 
solve difficult combinatorial optimization problems great success 
linear population structure gor different mating strategies compared gor 
uses local hillclimbing algorithm improve fitness individuals population 
difficult isolate contribution spatial structure population search quality 
empirical results show effective optimization tool 
manderick man implemented fine grained parallel ga population distributed grid 
selection mating possible neighborhood authors observed performance algorithm degraded size neighborhood increased 
extreme size neighborhood big parallel ga equivalent single panmictic population 
authors analyzed algorithm theoretically subsequent years spi spi analysis showed deme size string length time complexity algorithm time steps depending selection scheme 
sarma de jong sar analyzed effects size shape neighborhood selection mechanism ratio radius neighborhood radius grid critical parameter determines selection pressure population 
analysis quantified time propagate solution population changed different neighborhood sizes 
common place individuals fine grained pga dimensional grid massively parallel computers processing elements connected topology 
computers global router send messages processor network higher cost topologies may simulated top grid 
sch compared effect different structures population fine grained gas 
graph partitioning problem benchmark test different population structures simulated maspar mp computer 
structures tested ring torus cube hypercube binary hypercube 
algorithm torus structure converged faster algorithms mention resulting quality 
andersson ferris tried different population structures replacement algorithms 
experimented rings hypercube meshes island structure individual deme overlapped demes 
concluded particular problem trying solve assembly line balancing ring island structures best 
baluja compared variations linear structure mesh bal bal mesh gave best results problems tested 
course fine grained parallel gas solve difficult application problems 
popular problem dimensional bin packing satisfactory solutions kr ger kr kr kr 
job shop scheduling problem popular ga literature tamaki nishikawa tam successfully applied fine grained gas find adequate solutions 
shapiro sha fine grained ga algorithm predict secondary structure rna 
native net topology maspar computer define neighborhood individual 
net topology connects processing element processors 
different logical topologies tested ga nearest neighbors nearest neighbors neighbors specified distance results poorest scheme consistently outperformed topology neighbors 
papers compare fine coarse grained parallel gas bal gor 
comparisons fine grained gas come ahead coarse grained gas just opposite 
problem comparisons absolute terms clear want minimize wall clock time maximize quality solution comparison particular criteria 
gordon whitley hm gor showed critical path finegrained algorithm shorter multiple population ga means processors available massively parallel gas need time finish execution regardless population size 
important note theoretical study include considerations communications bandwidth memory requirements 
gordon gor studied spatial locality memory different models parallel gas 
analysis useful determining adequate computing platform model 

hierarchical parallel algorithms researchers tried combine methods parallelize gas producing hierarchical parallel gas 
new hybrid algorithms add new degree complexity complicated scene parallel gas hy 
hierarchical ga combines multi deme ga upper level fine grained ga lower level 
manage keep complexity components 
methods parallelizing gas combined form hierarchy 
upper level hybrid parallel gas multiple population algorithms 
hybrids fine grained ga lower level see 
example gruau gru invented mixed parallel ga algorithm population 
schematic hierarchical parallel ga upper level hybrid multi deme parallel ga node master slave ga 
hybrid uses multi deme gas upper lower levels 
lower level migration rate faster communications topology denser upper level 
deme placed grid demes connected torus 
migration demes occurred regular intervals results reported novel neural network design training application 
updated gor ladder structure replaced ring ring longer diameter allows better differentiation individuals 
new version maintains subpopulations structured rings 
migration subpopulations possible deme converges receives best individual deme 
populations converge takes best second best individuals population uses initial population final run 
lin goodman punch lin multi population ga subpopulations 
interestingly ring topology sparse long diameter connect subpopulations deme structured torus 
authors compared hybrid simple ga fine grained ga multiple population gas ring topology uses demes variable deme sizes uses constant deme size individuals different number demes multi deme ga demes connected torus 
job shop scheduling problem benchmark noticed simple ga find solutions methods adding demes multiple population gas improved performance increasing total population size 
hybrid better solutions 
type hierarchical parallel ga uses master slave demes multi population ga see 
migration occurs demes evaluation individuals handled parallel 
approach introduce new analytic problems useful working complex applications objective functions need considerable amount computation time 
brown example method parallel gas showed find solution quality master slave parallel ga multi deme ga time 
interestingly similar concept invented goldberg gol context object oriented implementation community model parallel ga community multiple houses parents reproduce offspring evaluated 
multiple communities possible individuals migrate places 
third method parallel gas multi deme gas upper lower levels see 
idea force panmictic mixing lower level high migration rate dense topology low migration rate high level gol 
complexity hybrid equivalent multiple population ga consider groups panmictic subpopulations single deme 
method implemented 
hierarchical implementations reduce execution time components 
example consider particular domain optimal speed master slave ga optimal speed ga speed hierarchical ga combines methods 
advancements section summarizes advancements theoretical study parallel gas 
section presents result master slave gas short presentation deme sizing theory multiple population gas 
important observation master slave gas processors time evaluate fitness population decreases 
time cost sending individuals slaves increases 
tradeoff diminishing computation times increasing communication times entails optimal number slaves minimizes total execution time 
study concluded optimal population size time takes single function evaluation communications time 
optimal speed natural starting point investigation multiple population gas size demes size population probably parameter affects solution quality ga gol gol har 
cant paz goldberg extended simple ga population sizing model account bounding cases coarse grained gas 
bounding cases set isolated demes set fully connected demes 
case connected demes migration rate set highest possible value 
fitness ones 
deceptive bit trap function unity 
horizontal axis number bits set vertical axis fitness value 
difficulty function varied easily bits basin deceptive optimum reducing fitness difference global deceptive maxima 
test problem constructed concatenating copies function second test problem formed copies similar deceptive function bits 
population size major factor determine time ga needs find solution 
deme sizing models may predict execution time parallel ga compare time needed serial ga reach solution quality 
cant paz goldberg integrated deme sizing models model communications time predicted expected parallel speed ups bounding cases 
main theoretical analysis 
expected speed demes isolated significant see figures 
second speed better demes communicate 
optimal number demes associated deme size maximizes speed see 
idealized bounding models extended directions example consider smaller migration rates sparsely connected topologies 
fact optimal number demes limits processors reduce execution time 
optimal number demes wasteful result slower algorithm 
hierarchical parallel gas processors effectively reduce execution time pure multiple deme ga parallel gas complex course problems unresolved 
examples determine migration rate distributed demes behave single panmictic population determine adequate communications topology permits mixing solutions result excessive communication costs find optimal number demes maximizes reliability 
speedup bit trap demes speedup bit trap 
projected experimental speed ups test functions copies bit bit trap functions isolated demes 
thin lines show experimental results thick lines theoretical predictions 
quality demanded find copies correct 

summary reviewed representative publications parallel genetic algorithms 
review started classifying field categories global master slave parallelization fine grained algorithms multiple deme hierarchical parallel gas 
important contributions categories analyzed try identify issues affect design implementation class parallel gas existing parallel computers 
research parallel gas dominated multiple deme algorithms consequence survey focused 
survey multiple population gas revealed fundamental questions remain unanswered years identified 
class parallel gas complex behavior affected parameters 
way achieve greater understanding parallel gas study individual facets independently seen influential publications parallel gas concentrate aspect migration rates communication topology deme size ignoring making simplifying assumptions 
reviewed publications master slave fine grained parallel gas realized combination different parallelization strategies result faster algorithms 
particularly important consider hybridization parallel techniques light results predict existence optimal number demes 
gas applied larger difficult search problems necessary design faster algorithms retain capability finding acceptable solutions 
survey numerous examples show parallel gas demes speedup speedup bit trap demes bit trap demes 
projected experimental speed ups test functions copies bit bit trap functions fully connected demes 
quality requirement find correct copies 
capable combining speed efficacy reaching better understanding allow utilize better 
acknowledgments wish think david goldberg comments earlier version 
study sponsored air force office scientific research air force materiel command usaf numbers 
government authorized reproduce distribute reprints governmental purposes notwithstanding copyright notation thereon 
views contained authors interpreted necessarily representing official policies endorsements expressed implied air force office scientific research government 
cant paz supported fulbright garc fellowship 
abr abramson parallel genetic algorithm solving school timetabling problem 
proceedings fifteenth australian computer science conference vol 

abr abramson mills perkins parallelisation genetic algorithm computation efficient train schedules 
proceedings parallel computing transputers conference 
ada review parallel genetic algorithms bibliography 
tech 
rep version aristotle university thessaloniki thessaloniki greece 
anderson ferris genetic algorithm assembly line balancing problem 
integer programming combinatorial optimization proceedings conference held university waterloo waterloo 
university waterloo press 
bal baluja massively distributed parallel genetic algorithm 
tech 
rep 
cmu cs carnegie mellon university pittsburgh pa 
bal baluja structure performance fine grain parallelism genetic search 
forrest ed proceedings fifth international conference genetic algorithms morgan kaufmann san mateo ca 
bel belding distributed genetic algorithm revisited 
ed proceedings sixth international conference genetic algorithms morgan kaufmann san francisco ca 
talbi parallel genetic algorithm graph partitioning problem 
acm int 
conf 
supercomputing ics cologne germany july 
bet comparison genetic algorithms gradient optimizers parallel processors efficiency processing capacity 
tech 
rep university michigan logic computers group ann arbor mi 
brown parallel genetic algorithms distributed memory architectures 
atkins wagner eds transputer research applications ios press amsterdam bra braun solving travelling salesman problems genetic algorithms 
schwefel nner eds parallel problem solving nature springer verlag berlin 
bra andersen parallelising global selection evolutionary algorithms 
submitted journal parallel distributed computing january 
cant paz experimental results distributed genetic algorithms 
international symposium applied corporate computing mexico 
cant paz designing efficient master slave parallel genetic algorithms 
illigal report university illinois urbana champaign illinois genetic algorithms laboratory urbana il 
cant paz goldberg modeling idealized bounding cases parallel genetic algorithms 
koza deb dorigo fogel garzon iba riolo eds genetic programming proceedings second annual conference morgan kaufmann san francisco ca 
cant paz goldberg predicting speedups idealized bounding cases parallel genetic algorithms 
ck ed proceedings seventh international conference genetic algorithms morgan kaufmann san francisco 
che chen meyer genetic algorithm diversity minimization parallel implementation 
forrest ed proceedings fifth international conference genetic algorithms morgan kaufmann san mateo ca 
coh cohoon hegde martin richards punctuated equilibria parallel genetic algorithm 
grefenstette ed proceedings second international conference genetic algorithms lawrence erlbaum associates hillsdale nj 
coh cohoon martin richards genetic algorithms punctuated equilibria vlsi 
schwefel nner eds parallel problem solving nature springer verlag berlin 
coh cohoon martin richards multi population genetic algorithm solving partition problem hyper cubes 
belew booker eds proceedings fourth international conference genetic algorithms morgan kaufmann san mateo ca 
coh cohoon martin richards multi population genetic algorithm solving partition problem hyper cubes 
belew booker eds proceedings fourth international conference genetic algorithms morgan kaufmann san mateo ca 
dav davidor naturally occuring niche species phenomenon model results 
belew booker eds proceedings fourth international conference genetic algorithms morgan kaufmann san mateo ca 
dav davis liu elias vlsi circuit synthesis parallel genetic algorithm 
proceedings ieee conference evolutionary computation vol 
ieee press piscataway nj 
examination hypercube implementations genetic algorithms 
umt air force institute technology wright patterson air force base oh 
fog fogarty huang implementing genetic algorithm transputer parallel processing systems 
parallel problem solving nature 
gol goldberg genetic algorithms search optimization machine learning 
addison wesley reading ma 
gol goldberg korb deb messy genetic algorithms motivation analysis results 
complex systems vol 

tcga report 
gol goldberg deb comparative analysis selection schemes genetic algorithms 
foundations genetic algorithms vol 

tcga report 
gol goldberg deb clark genetic algorithms noise sizing populations 
complex systems vol 

gol goldberg deb kargupta harik rapid accurate optimization difficult problems fast messy genetic algorithms 
forrest ed proceedings fifth international conference genetic algorithms morgan kaufmann san mateo ca 
gol goldberg deb thierens better understanding mixing genetic algorithms 
journal society instrument control engineers vol 

gol goldberg genetic evolutionary algorithms come age 
communications acm vol 

gol goldberg june 
personal communication 
gor gorges schleuter population genetics approach genetic algorithms 
voigt hlenbein schwefel eds evolution optimization 
akademie verlag berlin 
gor gorges schleuter asynchronous parallel genetic optimization strategy 
schaffer ed proceedings third international conference genetic algorithms morgan kaufmann san mateo ca 
gor gorges schleuter explicit parallelism genetic algorithms population structures 
schwefel nner eds parallel problem solving nature springer verlag berlin 
gor gordon whitley hm dataflow parallelism genetic algorithms 
nner manderick eds parallel problem solving nature elsevier science amsterdam 
gor gorges schleuter comparison local mating strategies massively parallel genetic algorithms 
nner manderick eds parallel problem solving nature elsevier science amsterdam 
gor gordon whitley serial parallel genetic algorithms function optimizers 
forrest ed proceedings fifth international conference genetic algorithms morgan kaufmann san mateo ca 
gor gordon locality genetic algorithms 
proceedings ieee conference evolutionary computation vol 
ieee press piscataway nj 
gor gorges schleuter traveling salesman problem 
ck ed proceedings fourth international conference evolutionary computation ieee press piscataway nj 
gre grefenstette parallel adaptive algorithms function optimization 
tech 
rep 
cs vanderbilt university computer science department nashville tn 
gro grosso computer simulations genetic adaptation parallel subcomponent interaction model 
unpublished doctoral dissertation university michigan 
university microfilms 
gru gruau neural network synthesis cellular encoding genetic algorithm 
unpublished doctoral dissertation universite claude bernard lyon 
har harik cant paz goldberg miller gambler ruin problem genetic algorithms sizing populations 
proceedings ieee international conference evolutionary computation ieee press piscataway nj 
hau hauser nner implementation standard genetic algorithm mimd machines 
davidor schwefel nner eds parallel problem solving nature ppsn iii springer verlag berlin 
hol holland universal computer capable executing arbitrary number sub programs simultaneously 
proceedings eastern joint computer conference 
hol holland iterative circuit computers 
proceedings western joint computer conference 
koz koza andre parallel genetic programming network transputers 
tech 
rep 
stan cs tr stanford university stanford ca 
kr kr ger parallel genetic packing rectangles 
schwefel nner eds parallel problem solving nature springer verlag berlin 
kr kr ger massive parallel genetic packing 
numerical neural network applications 
kr kr ger parallel genetic packing transputers 
ed parallel genetic algorithms theory applications 
ios press amsterdam 
lev levine parallel genetic algorithm set partitioning problem 
tech 
rep 
anl argonne national laboratory mathematics computer science division argonne il 
li li parallel genetic algorithm quadratic assignment 
ammar ed proceedings ismm international conference 
parallel distributed computing systems acta press anaheim ca 
lin lin punch goodman coarse grain parallel genetic algorithms categorization new approach 
sixth ieee symposium parallel distributed processing ieee computer society press los alamitos ca october 
lin lin goodman punch investigating parallel genetic algorithms job shop scheduling problem 
angeline reynolds eberhart eds sixth international conference evolutionary programming springer verlag berlin april 
man manderick fine grained parallel genetic algorithms 
schaffer ed proceedings third international conference genetic algorithms morgan kaufmann san mateo ca 
mar effective communication distributed genetic algorithms 
master thesis hebrew university jerusalem israel 
mar marin genetic algorithms lan message passing architectures pvm application routing problem 
davidor schwefel nner eds parallel problem solving nature ppsn iii springer verlag berlin 
mer merkle gates lamont application parallel fast messy genetic algorithm protein folding problem 
rapport technique air force institute technology wright patterson afb ohio 
mer merkle lamont comparison parallel messy genetic algorithm data distribution strategies 
forrest ed proceedings fifth international conference genetic algorithms morgan kaufmann san mateo ca 
hlenbein parallel genetic algorithms population genetics combinatorial optimization 
voigt hlenbein schwefel eds evolution optimization 
akademie verlag berlin 
hlenbein parallel genetic algorithms population genetics combinatorial optimization 
schaffer ed proceedings third international conference genetic algorithms morgan kaufmann san mateo ca 
hlenbein evolution time space parallel genetic algorithm 
rawlins ed foundations genetic algorithms morgan kaufmann san mateo ca 
hlenbein born parallel genetic algorithm function optimizer 
belew booker eds proceedings fourth international conference genetic algorithms morgan kaufmann san mateo ca 
hlenbein darwin continent cycle theory simulation prisoner dilemma 
bourgine eds practice autonomous systems proceedings european conference artifical life mit press cambridge ma 
mun talbi parallel genetic algorithm mapping 
durand eds proceedings second symposium ii 
high performance computing montpellier france october 
mun takai sato efficient migration scheme subpopulation asynchronously parallel genetic algorithms 
forrest ed proceedings fifth international conference genetic algorithms page morgan kaufmann san mateo ca 
neu solving mapping problem experiences genetic algorithm 
schwefel nner eds parallel problem solving nature springer verlag berlin 
pet grefenstette parallel genetic algorithm 
grefenstette ed proceedings second international conference genetic algorithms lawrence erlbaum associates hillsdale nj 
pet grefenstette genetic algorithms hypercube multiprocessor 
hypercube multiprocessors 
pet theoretical investigation parallel genetic algorithm 
schaffer ed proceedings third international conference genetic algorithms morgan kaufmann san mateo ca 
rob robertson parallel implementation genetic algorithms classifier system 
grefenstette ed proceedings second international conference genetic algorithms lawrence erlbaum associates hillsdale nj 
sar sarma jong analysis effects neighborhood size shape local selection algorithms 
parallel problem solving nature iv springer verlag berlin 
sch implementation genetic algorithms various interconnection networks 
jane eds parallel computing transputer applications ios press amsterdam 
ser dynamic mapping load balancing parallel genetic algorithms 
proceedings ieee conference evolutionary computation vol 
ieee press piscataway nj 
sha shapiro massively parallel genetic algorithm rna secondary structure prediction 
journal supercomputing vol 

spi manderick genetic algorithm massively parallel computers 
hartmann eds parallel processing neural systems computers germany north holland amsterdam 
spi manderick massively parallel genetic algorithm implementation analysis 
belew booker eds proceedings fourth international conference genetic algorithms morgan kaufmann san mateo ca 
sta starkweather whitley mathias optimization distributed genetic algorithms 
schwefel nner eds parallel problem solving nature springer verlag berlin 
tal talbi bessi re parallel genetic algorithm graph partitioning problem 
proc 
international conference supercomputing cologne june 
tam tamaki nishikawa paralleled genetic neighborhood model application jobshop scheduling 
nner man eds parallel problem solving nature elsevier science amsterdam 
tan tanese parallel genetic algorithm hypercube 
grefenstette ed proceedings second international conference genetic algorithms lawrence erlbaum associates hillsdale nj 
tan tanese distributed genetic algorithms 
schaffer ed proceedings third international conference genetic algorithms morgan kaufmann san mateo ca 
tan tanese distributed genetic algorithms function optimization 
unpublished doctoral dissertation university michigan ann arbor 
whi whitley starkweather genitor ii distributed genetic algorithm 
appear journal experimental theoretical artificial intelligence 
