categorical models explicit substitutions neil ghani valeria de paiva eike ritter june concerns categorical semantics calculi extended explicit substitutions 
simply typed calculus indexed categories provide right categorical framework structures inherently non linear alternate models needed linear calculi extended explicit substitutions 
propose replace indexed categories presheaves obtain semantics specialised linear intuitionistic case 
basic models calculi linear intuitionistic explicit substitutions called linear cartesian context handling categories 
add extra categorical structure model connectives logic obtaining categories models fragment linear logic categories models simply typed calculus 
type constructor modelled monoidal adjunction category 
soundness completeness categorical model proven 
concerned mathematical foundations implementation linear functional programming languages 
usefulness linear functional programming language described papers abramsky abr wadler wad concern 
goal want describe linear categorical machine laf ccm lines ritter machine calculus constructions rit 
categorical machines curry howard triangle relating typed calculi intuitionistic logic categorical models 
best known example relates simply typed calculus positive fragment intuitionistic propositional logic ipl cartesian closed categories ccc 
university birmingham school computer science ccc ipl picture changes implementations simply typed calculus considered 
particular usual form reduction highly ine cient redexes contained may duplicated arbitrarily reduct 
environment machines seek avoid problem reducing terms environment redex contracted new substitution created added existing environment 
order reason machines require calculus environments de ned semantics interpreted 
case simply typed calculus calculi explicit substitutions proposed indexed categories provide correct semantic framework calculi 
models interpret substitutions base terms application substitution term re indexing 
shall see reformulating indexed categories take account linearity constraints gives categories 
triangle looks combinators cat ipl combinators derived internal language categories guarantees get curry howard triangle 
appeared literature implicitly ehrhard categories 
slightly di erent version jacob categories jac oriented implementations note consider categories models linear cartesian calculi explicit substitution fall semantic domain type constructor modelled monoidal adjunction structures 
similar situation arises linear logic 
curry howard correspondence linear calculus standard categorical models intuitionistic linear logic described example :10.1.1.31.8467
categorical models essentially symmetric monoidal closed categories extra structure model modality 
categorical combinators explain oriented implementations 
kinoshita san devised laf mac simply typed calculus counterparts machines obtained hard prove correct linear categorical machines designed implement linear logic methodology requires linear analogues modi cations described 
particular want linear calculus extended explicit substitutions categorical model calculus curry howard relationship 
calculus appears companion rewriting properties fragment system described 
concentrate re ned categorical models linear calculus extended explicit substitutions 
indexed categories models linear calculi explicit substitution inherently non linear structure 
asking form category requires identities turn correspond weakening calculus 
weaken notion indexed category presheaf functor set codomain cat call structure linear context handling category 
base linear context handling category thought category objects contexts morphisms substitutions su cient structure model primitive logic identity axioms cut 
describe cartesian context handling category name indicates deals primitive logic axioms cut usual structural rules contraction weakening 
add natural isomorphisms linear context handling categories model tensor unit linear implication call structures categories 
modelling contexts structure base logical connectives structure distinguishes models usual smcc semantic structure model behaviour contexts tensor connective 
similarly adds structure cartesian context handling category model intuitionistic implications conjunctions giving call category 
exponentials modalities linear logic modelled requiring monoidal adjunction bases category category 
nish proving soundness completeness term model construction 
summary de nition context handling categories motivated implementation calculi model environments terms 
category theory provides semantic structure internal language gives syntax explicit substitutions automatically related semantics curry howard correspondence 
theoretical 
level semantics dependent types usually terms indexed categories framework suited generalisation model linear dependent types 
context handling categories recall categorical machines extending curry howard correspondence cover calculi enriched explicit substitutions 
cartesian case traditional categorical semantics indexed categories base category contravariant functor op cat 
objects model contexts calculus morphisms interpret explicit substitutions interpret types terms calculus 
unfortunately indexed categories generalise linear setting identity ona bre corresponds non linear typing judgement rit ehr 
proposes uni ed semantic model specialises cartesian linear calculi explicit substitutions 
idea retain functor change codomain cat set replacing indexed categories presheaves removing need identities 
fully motivate de nition start reducing idea linear cartesian term assignment system explicit substitutions primitive form 
system components set types collection contexts obtained glueing linear cartesian manner variable type pairs 
contexts collection explicit substitutions judgements form linear case general substitution context type cartesian setting morphisms derived weakening contraction corresponds substitution context type context type collection terms usually judgements form rewrite dependent types comment substitution term judgement apply substitution term obtain term judgement list properties captured presheaf op 
set additional structure capture formation behaviour explicit substitutions 
precise de nition de nition 
symmetric monoidal category distinguished collection objects jbj 
linear context handling category functor op set exists natural isomorphism homb order model calculus cartesian contexts cartesian context handling categories de nition di ers requiring monoidal structure base product weakening contraction interpreted 
notion cartesian handling contexts implicit categorical modelling higher order typed calculi ehr hp 
de nition 
cartesian category distinguished collection objects jbj 
cartesian context handling category functor op set exists natural isomorphism homb generic objects generic morphisms generic elements write need functor morphisms 
monoidal unit denoted tensor product objects denoted similarly tensor product morphisms written 
addition cartesian write fst snd projections 
intuitively context handling categories associate object indexed set thought consisting terms type context typing judgements monoidal cartesian structure base category models behaviour contexts application substitution modelled see illustration 
natural transformation sub takes term forms substitution ht xi put parallel substitutions tensor product base 
yoneda lemma natural transformation replaced elements vara vara transformation vara 
suppress bracketing associated coherence questions ti xi ht tni modelling explicit substitution condition sub term natural isomorphisms replaced equations vara sub var id natural isomorphism hom linear setting consequences 
firstly context handling category determined upto isomorphism base category 
secondly substitutions extensional morphisms uniquely determined ects terms terms models calculi context handling categories compared standard categorical models constructing internal category 
objects category elements set morphisms bre identity ona term vara composition morphisms sub clearly internal category isomorphic full subcategory objects intensional context handling categories imagine weaker intensional de nition ask natural isomorphism hom retraction existence natural transformations sub term term sub concrete example intensional context handling category take base category free symmetric monoidal cartesian category generating object generating morphisms called id id fvar function maps var var var var var 
intentional context handling category sub var id extensionality fails 
situation analogous non extensional weak products product projections identity 
intensional context handling category general impossible de ne category outlined extensional context handling categories 
possible candidate identity term var general sub var compare intensional context handling categories standard categorical models calculi 
attempt full subcategory base generated fails categorical structure interpret type constructors de ned lift base absence extensionality 
concrete intensional context handling categories know extensional arti cially created consider intensional context handling categories sequel 
goal derive term calculus categorical model related curry howard correspondence purpose better behaved extensional context handling categories su ce 
cartesian model context handling categories model basic features explicit substitutions ability form explicit substitutions terms put parallel explicit substitutions apply terms 
course structure general insu cient calculus explicit substitutions mention underlying type structure 
section consider canonical extension simply typed calculus explicit substitutions called calculus consider extra categorical structure added cartesian context handling categories able interpret function spaces conjunctions 
calculus types calculus ground types function types product types raw expressions tt ht ti hix hf xi variable set variables 
term represents application explicit substitution term hix thought substitution variables su represents variables discarded 
substitution hf xi represents parallel composition substitution substitution term variable represents composition drop doing semantics 
substitutions models iterated substitution 
context form xn distinct variables types domain context set variables fx xng 
context set variables context nx obtained removing domain 
calculus term judgements form substitution judgements form judgements generated inference rules table 
inference rules declaring variables elimination rules standard 
free variables bound typed expression similarly free variables bound formed expression intention study calculus depth see rdp full presentation meta theory 
table typing judgements calculus term judgements declared ht ui substitution judgements hix nx hf xi second rule dom tu ai modelling calculus category cartesian context handling categories designed model behaviour explicit substitutions formation terms application terms 
add extra structure cartesian context handling categories able model type structure calculus 
type structure allows new terms formed terms interpreted natural approach require extra structure de ned de nition 
category cartesian handling category distinguished type types types addition terminal isomorphisms natural note addition function spaces implications specialisation de nition models dependent products indexed categories 
extensional structures isomorphic product 
may tempted de nition cartesian context handling categories simply requires closed products 
run counter philosophy semantics context concatenation connective related conceptually distinct 
de nition distinction clear treating type di erently context 
similarly distinguish type terminal object empty context 
calculus contains calculus model calculus contain model calculus category contain underlying ccc 
addition key meta theoretic properties calculus term rewrites term 
semantic counterpart ccc extend category 
theorem relationship clear theorem 
op cat extensional category 
full subcategory generated cartesian closed 
ii cartesian closed category set objects de ne functor op set homc extensional category 
iii op set extensional category category constructed ii ccc constructed isomorphic restriction full subcategory generated prove model calculus built ground types category types proposition 
op set category 
canonical interpretation map assigns term calculus set base types element bre assigns substitution morphism proof 
canonical interpretation types calculus elements product structure extends interpretation contexts objects de ne induction structure follows variable interpreted vara projection base abstraction application product projections interpreted natural transformations occurring de nition 
substitution hix interpreted projection composition 
hf xi sub right hand side pairing map respects equality judgements calculus relies substitution lemmata shows induction structure sub sn 
shows soundness categorical model 
similar structures categories considered 
jacobs jac de nes category indexed category op cat nite products morphisms bre morphisms base category condition bration de ned indexed category products 
category extensional category categories sets isomorphism substitutions terms identity 
multiplicative structure turn fragment linear logic 
linear context handling categories model way substitutions formed combined parallel sequential composition linear manner 
follow approach previous section consider adds structure linear context handling categories model logical connectives language 
require contain object model unit binary operations model tensor linear implication 
argued equal unit monoidal structure isomorphic 
similarly equal tensor isomorphic 
de nition 
category linear context handling category additional properties distinguished type types types ii type isomorphisms ni iii types natural isomorphism denote var ni vari theorem generalises linear setting category underlying smcc smcc extended category 
re ects fact linear calculi explicit substitutions contains underlying linear logic term explicit substitutions equal term underlying linear calculus 
theorem 
op set category 
full subcategory generated symmetric monoidal closed category 
ii symmetric monoidal closed category objects functor op set de ned homc category 
iii op set category category constructed ii underlying smc de ned naturally isomorphic restriction full subcategory generated proof 
proof theorem works 
categories provide models linear lambda calculi type structure extended explicit substitutions 
calculus raw terms substitutions tt hi hf xi term judgements form substitution judgements form judgements generated inference rules table 
firstly usual terms linear calculus secondly substitution constructs seen 
new forms substitution expressions 
required ensure context isomorphic context prove categories form sound model 
table linear calculus exponentials term judgements substitution judgements hi ts hf xi rules multiple premises permutation proposition 
op set category 
interpretation map sending terms linear calculus explicit substitutions ground types elements substitutions morphisms base 
proof 
proof similar proposition 
variables interpreted elements vara hi interpreted identity base parallel composition tensor sequential composition composition base 
isomorphism interpret term substitution similarly corresponding isomorphism unit interpret expressions 
veri cation map respects equality judgements relies substitution lemmata similar proposition 
exponentials standard categorical model exponentials linear logic kleisli construction see bie 
benton ben proposes equivalent construction monoidal adjunction cartesian closed category ccc symmetric monoidal closed category smcc :10.1.1.13.7158
ccc models non linear aspects calculus smcc models linear aspects 
functor smcc ccc forgetful functor treats linear morphisms arbitrary morphisms adjoint maps morphism including non linear ones linear morphism exponential type 
adaptation approach framework succinct kleisli construction followed 
de nition 
category category op set category op set monoidal adjunction fa conversely gb 
usual wish able move lnl categories categories back re ect syntactic inclusion dill embedding dill 
fact relationship extensional categories linear non linear categories expected theorem 
op set op set category 
full subcategory generated generated linear non linear category 
ii monoidal adjunction cartesian closed category objects symmetric monoidal closed category objects de ne functors op set homc op set homb category 
iii op set op set category category constructed ii monoidal adjunction constructed isomorphic original category 
proof 
proof theorem works 
interpretation linear calculus exponentials extended interpretation full linear calculus explicit substitutions category 
underlying linear calculus calculus developed barber called dill bp incorporates semantic separation linear non linear contexts directly syntax call calculus 
creation comonoids obvious componentwise sense course choice merely matter convenience connection syntax categorical semantics established bierman version linear calculus 
typing judgements table refer reader bp comprehensive treatment calculus 
previous section start proving soundness giving interpretation category 
strict extension calculus section containing new term constructs term elimination term associated substitution type constructor 
new feature dill contains linear intuitionistic variables contexts form intuitively weakening contraction permitted variables declared type constructor controls interaction intuitionistic linear zones context allowing terms type copied discarded 
formally types base types unit function tensor types 
raw expressions tu hi hf xii hf xli variable pattern form typing judgements form table 
interpreted category proposition 
interpretation base types category op set op set monoidal adjunction proof 
firstly interpret types types set fg 
gives interpretation contexts monoidal structure fg fg bm xn ym bm 
term judgement interpreted element substitution judgement interpreted map 
map de ned induction structure expressions cases similar analogues section 
new expressions fg sub vara id sub id id sub id xn xn derived multiplication comonad xn xn derived monoidal transformation 
term model section prove completeness categories models standard construction term model 
worth repeating known examples categorical models intuitionistic linear logic provide category models distinction context concatenation tensor connective aiming categories 
proceed sequence de nition categorical model 
fairly traditional categorical type theory textbook example see crole cro 
de ne structure involved omit lengthy routine veri cation structure required properties 
start de ning functor op set objects contexts morphisms substitution judgements certainly category supports monoidal structure 
take set types de ne set judgements set choose vara canonical variable set sub substitution ht xi 
linear context handling category 
extend structure cover tensor products linear implication 
isomorphism de ning tensor products jx jz jz jx recall purpose introducing substitutions guarantee existence isomorphisms isomorphism unit type modelled similarly 
natural isomorphisms required linear implication usual abstraction application 
turn exponentials 
category objects contexts morphisms tuples judgements ai context xn 
note substitutions corresponds exactly syntactic restrictions term substitutions arise meta theory 
composition substitution tuples variables forming identities 
take set types de ne op set setting set typing judgements cartesian context handling category 
category decomposition intuitionistic function spaces linear function spaces nish constructing category 
greatly simpli ed observing naturally isomorphic full subcategory objects form jx isomorphisms derived substitutions 
construct monoidal adjunction automatically lifts monoidal adjunction functor jz xn xn xn canonical choice variable 
de ne morphisms tj yj 
isomorphism judgements tj yj 
tn tm xi 
de ne objects jx right adjoint required natural isomorphism sets derivations follows isomorphism 
show required additional data form category 
shown theorem theorem 
term model category 
completeness follows standard argument 
theorem 
term model initial category set ground types sense category set ground types exists exactly structure preserving functor term model category 
proof 
standard argument applies equalities show term model category equalities 
modularly de ned new categorical models calculi extended explicit substitutions 
took intuitions indexed category theory alterations accomodate linear calculi framework cartesian calculi 
shown models appropriate relating established categorical models underlying calculi semantic counterparts key elements meta theory calculi explicit substitution 
reason describing new models goal designing machine linear lambda calculus conceptually clean easy prove correct 
corresponds rst step ongoing research project 
models derive linear lambda calculus explicit substitutions machine implemented alb 
peter dybjer martin hofmann andrea martin hyland discussions subject 
abr samson abramsky 
computational interpretations linear logic 
theoretical computer science 
alb 
machine linear logic explicit substitutions 
master thesis school computer science university birmingham 
benton bierman de paiva hyland :10.1.1.31.8467
term calculus intuitionistic linear logic 
bezem groote editors typed lambda calculi applications volume lecture notes computer science pages 
springer verlag 
ben nick benton :10.1.1.13.7158
mixed linear non linear logic proofs terms models 
proceedings computer science logic poland 
lecture notes computer science berlin heidelberg new york 
bie gavin bierman 
intuitionistic linear logic 
phd thesis university cambridge 
available technical report 
bp barber plotkin 
dual intuitionistic linear logic 
technical report lfcs university edinburgh 
ccm guy cousineau pierre louis curien michel mauny 
categorical machine 
science computer programming 
cro roy crole 
categories types 
cambridge university press 
ehr thomas ehrhard 
categorical semantics constructions 
third annual symposium logic computer science pages 
ieee 
ghani de paiva ritter 
linear explicit substitutions 
reader 

hp martin hyland andrew pitts 
theory constructions categorical semantics topos theoretic models 
contemporary mathematics 
jac bart jacobs 
simply typed untyped lambda calculus revisited 
michael fourman peter johnstone andrew pitts editors applications categories computer science lms lecture note series pages 
cambridge university press 
laf yves lafont 
linear machine 
theoretical computer science 
mac ian mackie 
functional programming language linear logic 
journal functional programming 
monica valeria de paiva eike ritter 
rewriting properties combinators intuitionistic linear logic 
proceedings workshop higher order algebra logic term rewriting pages 
lecture notes computer science berlin heidelberg new york 
rdp ritter de paiva 
explicit substitution names extended 
proc 
icalp lncs pages 
rit eike ritter 
categorical machines higher order lambda calculi 
theoretical computer science 
see seely 
linear logic autonomous categories cofree algebras 
contemporary mathematics 
wad philip wadler 
linear types change world 
broy jones editors programming concepts methods 
north holland april 
table typing judgements term judgements jx tu aj substitution judgements hix hf xii aj hf xli aj rules substitutions assume fresh applicable disjoint permutation 

