hacking model approach user interface design wilson johnson kelly cunningham markopoulos department computer science queen mary westfield college university london mile road london ns email pete dcs qmw ac uk british aerospace plc research centre po box bristol bs qw email kelly src bae uk british maritime technology orlando house road tw lz email uucp discusses role models design user interfaces particular emphasis integration different modelling stages 
concerned bridging gap psychologically motivated modelling approaches hci implementation oriented interaction models produce task informed user interface design process 
early version uide provides support role played models design process described exemplified models taken case study 
conclude assessment experiences discussion proceed 

keywords user interface design task modelling user modelling uide designers interactive systems creative design space constrained requirements originating widely varying perspectives 
user centred perspective come considerations tasks general user characteristics implementation platform come hardware software technology constraints application domain client organisations originate requirements 
despite fact user interface design methodologies encompass issues various requirements explicit design support environment 
consequence difficult ensure user centred requirements addressed early stages design carried forward stages 
wilson johnson kelly cunningham markopoulos adept novel design environment prototyping user interfaces addresses issues encouraging designer construct explicit models users tasks 
aims adept project twofold investigate knowledge users tasks inform design system support tasks second provide integrated model environment support user interface design development 
section motivates discussion role models tools design user interfaces 
ideas illustrated software demonstrator implemented adept project described third fourth sections 
fifth section discusses contribution status demonstrator assesses far gone goal integrated user interface design environment 

user interface design tools models user interface design user interface design difficult designers require effective models tools enable design process 
models serve explicit results analyses design tools serve support creation models new designs 
spite plethora reported areas remains gulf tool model approaches user interface design 
user interface management systems uimss represented earliest tools focus specifically development interaction component interactive system see hix myers overview subject 
aim promote rapid prototyping user interface separating user interface software application software partially automating design process 
general scheme designer parameterised generic uims model desired interaction concentrating dialogue uims generate user interface assume responsibility run time management interaction 
best systems offered designer tools design interaction model 
recognising effective support design stages encourage ease iterations prototypes modern user interface design environments uides place emphasis managing interaction emphasis supporting designer 
sophisticated uides garnet myers provides designer rich set primitives components collection graphical editors interface builders 
common uides garnet supports aspect design life cycle construction prototyping user interface software neglecting requirements specification evaluation 
surely time advances supporting entire user interface design process integrated environment 
exists significant body research role models hci 
different models serve purpose different stages design process wilson 
hacking model approach user interface design example user models describe users abilities beliefs task models express knowledge required procedures perform task dialogue models describe users interaction system architectural models provide paradigm construction interactive systems formal models provide specification interaction software tool support techniques cumbersome limited practical 
furthermore case models concerned user explicit rely designer intuition influence design 
models contribute design explicit explicit integrated design environment mentioned 
task design focus adept notion user interface design task centred 
model users existing knowledge task termed initial task model provides starting point design artefact support task 
generally accompanied statement design goals expressing general aims recognising problems existing task design artefact address 
example aspects existing task may error prone inefficient design goal rectify problems 
design goals may applied levels 
task may subject redesign accordance design goals second alternative artefact designs support task expressed task model design goals serve mechanism differentiating design solutions 
consequence exist artefact supports task directly generally greater distance existing designed tasks case 
user acquires new task knowledge consequence newly designed artefact term resultant task model 
clearly guarantee resultant task model designed task model creation artefact 
resultant task model may design scenario function initial task model design artefact 
similar philosophy notion task evolution carroll kellogg designed artefact opens new possibilities human tasks turn place requirements new artefacts called task artefact cycle 
remainder describes adept software demonstrator illustrates users existing task knowledge contribute design interactive system support task shows integrated tool support provided design process 
doing hope approach design user interfaces sound modelling basis arbitrary hacking 

adept design environment previous section motivated adept culminating crucial points 
models design process irrespective result analyses design explicit available integrated wilson johnson kelly cunningham markopoulos environment facilitates transfer knowledge modelling stage 
second point user interface design user centred take account users characteristics tasks wish carry 
adept achieves encompassing design task analysis specification generation run time system number modelling stages 
developed depth 
context set summarising models design environment outlining associated design philosophy 
number models central adept demonstrator task models user models interface models concrete interface models 
models support different stages user interface design life cycle 
task models adept represent knowledge possessed users recruited performing existing task knowledge required perform designed task 
user models provide perspective general user characteristics captured task models typically model levels expertise types knowledge system user group 
interface models aims provide high level description specification interface concrete interface models cims provide low level description interface instantiation cim implementation 
comparison resultant task model design task analysis initial task model application design rules designed task model interface model consequences design user group analysis user model refinement generation application design rules concrete interface model user interface 
summary models processes adept run time execution hacking model approach user interface design modified johnson shows models summarises utilised process user interface design section provides details 
various tools adept demonstrator support design processes manipulation models facilitating transitions modelling stage 
processes represented solid lines supported directly tools adept demonstrator remainder require development 
discussion focuses models tools individual entities task model editor graphical interface builder unique adept interest research 
description illustrated example models developed case study carried group london hospital 
task analysis performed task ray examination clinical diagnosis 
integrated design process user centred design philosophy starting point design interface component system analysis prospective users system 
distinct aspects task analysis second general analysis anticipated user group 
results analyses expressed task models user models respectively 
adept initial task model elicited task analysis procedure provides basis interface design information user model influence design select alternative solutions design space 
said design goal applied user interfaces prototyped adept demonstrator select design alternatives best suited user group characterised user model 
words promote user centred design 
mentioned section initial task model generally constitute design model cases task subject redesign directed satisfying design goals 
new task represented box labelled designed task model 
design stage involves moving redesigning task designing conceptual level interface support task expressed aim 
aim specifies interface achieved 
final stage development progression aim specification implementation cim 
stage adept demonstrator user model exerts influence implicit constraint user model dictates influence limited area 
additional user characteristics expressed user model provide guidance discriminating alternative cims satisfy aim specification 
preceding discussion suggests top approach design intention prescriptive design process designers free level abstraction find appropriate 
ultimately goal produce design environment sufficiently integrated consequence design decisions modelling level perceived level automatically designer control 
example consequence deleting wilson johnson kelly cunningham markopoulos component implementation level numeric slider percolate upwards repercussions task observed analysed 

adept demonstrator task model achieve user task approach user interface design task modelling technique required feed creation new designs 
existing task modelling techniques tal reisner tag payne green intended primarily mechanisms analysing existing designs predicting user performance modelling techniques feed new designs 
exceptions exist example diaper task knowledge structures tks johnson johnson suited expressing users existing task knowledge 
tks goal sub structure component describes users goals sub goals procedural component describes goals achieved terms sequences actions taxonomic sub structure component identifies task objects attributes actions performed objects 
clear components model tks direct relevance design user interface feed forward design 
areas design relevance obvious sequencing information task model feed design interaction sequences user interface task objects may realised interaction objects interface task actions may realised actions appropriate interaction object 
adept adopted modified version tks temporal relations essential part task modelling approach influenced related formal languages express task models models user interfaces johnson markopoulos johnson 
temporal relations specified goals sub goals procedures actions task model 
initially considered temporal relationships task components extended sequence interleaved parallel choice 
described informally follows goal procedure action components task model sequence components performed strict temporal sequence interleaved components performed simultaneously user alternating activities parallel components performed concurrently choice task components performed user choice execution task interleaved type particularly useful describing temporal relationships direct manipulation interfaces number tasks offer simultaneously user 
consider situation user word processing application open window electronic mail application 
tasks available simultaneously instant user may engaged tasks user interleaves activities switching windows 
temporal extensions hacking model approach user interface design tks similar included enhanced version uan described hartson gray discuss advantage interleave operator provides concise expression asynchronous behaviour possible state transition network possible state state change recorded explicitly 
notion allows possible transitions asynchronous tasks expressed implicitly 

task model editor approach adopted hartson gray dissimilar distinctions hartson gray term task model referring notation fact provide detailed description specification interaction design level detail comparable interface model adept 
extended uan focus adept complete wilson johnson kelly cunningham markopoulos methodology user interface design commencing representation users existing task knowledge 
shows current version adept task model editor supports designer editing browsing task models 
upper view editor contains graphical presentation goals sub goals procedures actions lower views display objects taxonomic sub structure descriptions 
tool supports syntax directed editing menu interface automatic graphical layout hiding information user control 
task models represented internally syntax trees facilitating alternative presentations user equivalent textual representation 
editor imposes restriction inherent underlying model temporal relation exist sub components component 
alternative view components considered certain type expresses temporal relationships sub components 
example goal denoted type sequence sub goals identified performed strict temporal sequence 
editor shown contains initial task model task small portion goal sub structure component visible upper view 
top level goal task take ray sequential goal denoted symbol component subgoals performed sequence initial consideration ray request logging request completed 
restriction significantly reduces clutter display task model simplifies editing operations 
necessary dummy nodes may introduced allow complex relationships expressed 
designing task model particularly novel aspect adept explicit notion redesigning task 
allows acknowledge important critical contribution users existing task knowledge recognising new artefacts designed specific intention changing task 
constrained design scenario allow designer creative freedom introduce new design ideas 
redesigning task adept encourages new ideas expressed terms task performed terms low level details screen design obscure designer potential consequences changes users 
task model editor supports user interface designer constructing initial task model redesigning task accordance design goals 
number activities involved designing task decide sub tasks initial task model supported new artefact 
initial task model describes complete task users perspective artefact designed may intended support portion task 
example fairly arbitrary decision case study support mainly sub task setting control panel disregard sub tasks positioning camera developing film 
sub tasks deleted involved physical actions hacking model approach user interface design collecting patient mental processes part task performer 
goals representing sub tasks may deleted true procedures actions 
new goals procedures actions may added task may restructured 
aspect redesign process introducing flexibility task description initial task models tend sequential nature deep hierarchic structure 
general moded interface design result appropriate temporal relations designed task designated interleaved sequential new artefact facilitates alternating activities 
clearly important design direct manipulation interfaces 
designed task referred computer task model represents task interactive system support 
explicit nature designed task model aim discussed section offers opportunity explore design alternatives early stage development life cycle 
achieved analysis animation models 

user model tool user model user modelling component adept provides information users additional contained task model captures general user characteristics 
detailed description form function kelly 
wilson johnson kelly cunningham markopoulos user model constitutes picture typical user modelled terms abilities knowledge styles information processing 
hierarchical structure includes models generic user task independent task dependent characteristics 
characteristics expressed simple facts held knowledge base 
example facts taken user model state low system experience systems infrequently high task experience follows system experience low systems infrequent task experience high interface designer instantiates new knowledge base user model facts group users specify task dependent task independent characteristics generic user level intended contain information applicable user groups 
activity supported user model tool adept demonstrator shown user model facts displayed upper left view 
user model shapes user interface development constraining set possible options design space 
achieved knowledge base incorporated user model tool displayed upper right view 
knowledge base incorporates design rules associate specific user characteristics usability knowledge user interface design guidelines 
example design rules state users moderate typing skills fill forms appropriate form interaction system experience low menus appropriate typing skills moderate fill forms system experience low menus matching design rules instantiated knowledge base user model facts results subset design rules applied design artefact user group performing task 
system experience low menus rule applicable task 
applicable design rules displayed lower right view tool 
interface model interface model aim important intermediate modelling stage transition task model implementation 
aim provides high level description interface specifying achieved useful expression design conceptual level 
designer edit elaborate aim editors browsers adept aim task model shown 
aim simple structure 
contains major types components groups interaction objects 
group essentially collection components include groups leading nested hierarchical structure 
group root tree represents complete interface 
descriptions interaction objects user interface form leaves tree aim 
aim level details interactive behaviour unimportant purpose interaction significant 
classified hacking model approach user interface design terms type input describe example numeric aio specifies user provide numeric input statement concerning interaction slider object type text field clearly numerous alternative implementations cim level satisfy description aio 

interface model editor task model temporal relations may specified components aim 
combination temporal information hierarchical structure aim groups important embedded sequencing information equivalent dialogue model uims 
tree translated dialogue specification notations example grammar formed terminal symbols 
aim structure emphasises relationship temporal aspects interaction guideline laying screens cim level 
indicates close relationship presentation dialogue ignored uimss 
wilson johnson kelly cunningham markopoulos designing interface model stage user interface design process move task oriented concepts interface oriented concepts 
represented transition designed task model aim 
view designed task model describes task terms task knowledge requirements carried designed artefact users perspective aim describes artefact support task computers perspective 
sideways move involving consideration form interface appropriate support designed task 
adept demonstrator simple automated process assists designer moving designed task aim attempting produce equivalent aim goals procedures task model replaced groups representing dialogue structure aim 
interesting aspect aim design destiny task actions 
level actions task model real activities task carried ultimately actions supported interaction objects user interface 
level aim designer needs decide form interaction best supports task action 
example task contained actions set current set voltage ray examination 
cases action set current voltage objects 
task actions replaced numeric aim illustrating choice aio influenced description objects involved task action 
relevant properties specified 
mentioned previously view interface design process view continuous process 
designers preference dictates proportion design carried task level aim level 
design activities continue aim level interface concepts similar occurred task oriented concepts aim may restructured flexibility may introduced part design process meet stated design goals 
concrete interface model concrete interface model cim platform independent description interface design detailed level interaction objects behaviour screen layout sequencing low level description user interface run time system may produced compiler interpreter tool 
demonstrator interpreter provides functionality 
furthermore translator tool demonstrator produces equivalent platform dependent implementation cim open look widget set 
adept committed particular implementation platform platforms accommodated writing alternative translators obvious choices motif widget set garnet gadgets 
interface design fine tuned cim level conventional graphical editors 
open look trademark hacking model approach user interface design generating concrete interface model cim developed aim refinement process carried designer 
experiment intelligent design automation demonstrator incorporates generator tool provide functionality 
generator fulfils number functions example selects cim interaction objects needed aio aim instantiates appropriately slider text field selected cim numeric aio aim 
performs complex calculations generate layouts desirable satisfy temporal constraints interaction aim 
sequencing information incorporated cim necessary new interaction objects created control context switches stages dialogue 
alternative user interfaces satisfy conceptual level design aim generator guided deciding design alternatives built heuristics input user centred design principles user model tool 
design constraints guide layout presentation 
doing implicit design goal applied level user interface suitable user group characterised user model facts 
interaction cim generator user model tool takes form question answer dialogues carried automatically processing aim 
cim generator poses questions user model tool attempts reply set applicable design rules 
dialogue displayed lower left view user model tool shown 
occasion situation arises cim generator poses question user model tool answer 
alternative solutions normal resolution question passed interface designer provided dialogue box answer 
long term solution appropriate rules added user model expressing recommended approach 

discussion adept successfully demonstrated novel approach user interface design 
integrated model view user interface design human factors contribution explicit 
large design problem number smaller ones tackled 
aims similar expressed neches describe mastermind step vision integration continuity entire life cycle user interface 
envisage knowledge design time run time environment 
anticipate various advantages environment incorporates explicit models including provision semi automated design critics early exploration design alternatives properly task user models 
adept focused task user models date mastermind focused intelligent design tools generic model high level specification interface similar philosophy aim adept 
mastermind commenced base existing tools integrated shared models adept set design new tools support requisite models 
wilson johnson kelly cunningham markopoulos adept demonstrator served purpose illustrating feasibility ideas scope limited example supports creation interfaces comprised set pre defined interaction objects 
development phase planned improve tools enrich models design environment 
particular information taxonomic sub structure task model utilised 
envisage elaborating object descriptions include details attributes relationships information basis design implementation new task specific interaction objects 
facilitate transfer knowledge task objects interface design involve enhancing aim replacing cim full architectural model lines pac coutaz 
user model demands enhance knowledge bases investigate sophisticated application design rules 
improved adept uide subject formal evaluation carried demonstrator 
particular interest evaluation interface design produced task design methodology design system produced conventional design techniques 
claim adept models suffice capture information relevant interface design 
clearly case task models user models important representations users task knowledge contributing factors include social physical environment iso application domain 
environment adept include explicit models factors design relevance ascertained 
discussions focused design advantages accrued explicit nature models adept combined fact history models held system 
potential benefit concerned evaluation phase user interface design covered 
history provide basis evaluating design alternatives comparison analysis models example initial task model compared alternative designed task models 
speculative benefit study history yield picture design process models progress task model implementation turn help understand best support design process 
studies design practice enhanced adding support design rationale notation 
maclean adept tools encouraging explicit documentation decisions design space respect design goals 
supplemented observation interview techniques 
spite fact user model tool contains knowledge base design rules adept environment tools models support designers ultimately leave design decisions hands 
examining design practice gain design knowledge add system 
knowledge bases support automation design process provision intelligent design guidance particular interest design constraints operate task model aim levels 
clearly system envisage termed user interface modelling design environment large 
adept gone way look models form heart system extended developed number directions produce sophisticated model design environment hacking model approach user interface design interactive systems 
way diverse strands user interface design drawn hopefully better design practice result 
grateful mario wolczko university manchester grapher implementation task model aim editors 
lynne british aerospace responsible design implementation user model tool 
tools adept project advanced design environments prototyping task models collaboration queen mary westfield college university london british aerospace plc british maritime technology led queen mary westfield college funded dti serc 
ied 
carroll kellogg task artifact cycle carroll ed designing interaction psychology human computer interface cambridge university press pp 

coutaz architecture models interactive software proc 
ecoop cook ed cambridge university press 
diaper task analysis knowledge descriptions method example task analysis human computer interaction diaper ed ellis horwood pp 

rex hartson philip gray temporal aspects tasks user action notation human computer interaction vol 
pp 

deborah hix generations user interface management systems ieee software vol 
pp 
sept iso iso ergonomic requirements office visual display terminals parts environmental requirements committee draft 
johnson johnson task knowledge structures psychological basis integration system design acta psychologica pp 

johnson markopoulos johnson task knowledge structures specification user task models interaction dialogues appear tauber ed task analysis system design 
peter johnson stephanie wilson panos markopoulos james adept advanced design environment prototyping task models demonstration proceedings interchi acm 
wilson johnson kelly cunningham markopoulos chris kelly lynne user modelling user interface design people computers vii proceedings hci conference cambridge university press pp 

allan maclean richard young victoria thomas moran questions options criteria elements design space analysis human computer interaction vol 
nos 
pp 

brad myers user interface tools survey ieee software vol 
pp 

jan brad myers dario guise roger dannenberg brad vander zanden david ed andrew philippe marchal comprehensive support graphical highly interactive user interfaces garnet user interface development environment ieee computer vol 
pp 

neches foley szekely sukaviriya luo kovacevic hudson knowledgeable development environments shared design models proceedings international workshop intelligent user interface acm press pp 

payne green task action grammars model mental representation task languages human computer interaction vol 
pp 

reisner formal grammars human factors design interactive graphics system ieee transactions software engineering vol 

wilson markopoulos johnson modelling perspectives user interface design proceedings east west conference human computer interaction pp 

