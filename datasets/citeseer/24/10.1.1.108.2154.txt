super peer routing strategies rdf peer peer networks wolfgang nejdl martin wolpers wolf siberski christoph schmitz mario schlosser ingo alexander ser learning lab lower university hannover hannover germany computation information structures institute technical university berlin berlin germany rdf networks number advantages compared simpler networks napster gnutella approaches distributed indices binary keys chord 
rdf networks allow complex extendable descriptions resources fixed limited ones provide complex query facilities metadata simple keyword searches 
discuss rdf networks edutella specific example new type networks schema networks describe super peer topologies networks 
super peer networks provide better scalability broadcast networks provide support inhomogeneous schema networks different metadata schemas ontologies crucial semantic web 
dynamic metadata routing indices stated rdf superpeer network supports sophisticated routing distribution strategies preparing ground advanced mediation clustering functionalities 
key words peer peer semantic web schema routing distributed rdf repositories routing protocols semantic networks email addresses nejdl de wolfgang nejdl wolpers de martin wolpers siberski de wolf siberski schmitz de christoph schmitz schlosser de mario schlosser de ingo cs tu berlin de alexander ser 
preprint submitted web semantics november super peer networks distributed rdf repositories applications quite successful exchanging music files networks simple attributes describe resources 
lot effort put refining topologies query routing functionalities networks simple systems napster gnutella inspired efficient infrastructures ones distributed hash tables chord :10.1.1.140.3129:10.1.1.105.3673
effort put extending representation query functionalities offered networks projects exploring expressive infrastructures slowly started move schema networks :10.1.1.17.2221
fixed schema keywords key dbms database research tsimmis tukwila napster local distributed edutella piazza directconnect gnutella kazaa grid chord peer peer fig 

schema capabilities distribution schema networks allow solve shortcomings networks restricted fixed metadata elements enabling truly expressive distributed data metadata repositories 
building peers explicit possibly heterogeneous schemas describing content implementing sophisticated routing strategies knowledge 
approach parallels developments distributed data management start evolve higher degree distribution far usually assumed static distribution query plans 
show schema systems step distributed networks advanced data management storage features see 
architectures take account typical characteristics systems local control data dynamic addition removal peers local knowledge available data schemas self organization optimization 
edutella project exploring issues arising context goal designing implementing schema infrastructure semantic web 
edutella relies metadata standards rdf rdf schema rdfs describe distributed resources uses basic primitives provided part jxta framework 
research approaches ones investigated bernstein aberer 
bernstein propose local relational model lrm enabling general queries translated local queries respect schema supported respective peer concept local translation coordination formulas translate different schemas 
aberer proposes schema peers local translations accommodate sophisticated information providers connected gnutella topology 
infrastructure discuss detail called super peer topology peers connect super peers build routing backbone network see general characteristics superpeer networks kazaa morpheus existing super peer systems 
responsibility super peer efficient query answer routing distribution execution query plans local routing indices super peer 
capabilities mediation transformation queries answers implemented super peer 
start describing general topology super peer network section discuss peers register network 
section describe schema aware routing indices needed query planning routing super peer network superpeers associated peers 
section discusses distributed routing indices 
section briefly introduces implementation superpeer network 
super peer networks schema systems peer usually created equal different characteristics respect capabilities available bandwidth storage space processing power 
discussed exploiting different capabilities network lead efficient network architecture small subset peers called super peers takes specific responsibilities peer aggregation query routing possibly mediation 
kazaa network uses simple version super peer architecture elaborate versions described 
super infrastructures usually exploit phase routing architecture routes queries super peer backbone distributes peers connected super peers 
step avoided super peers cache data connected peers 
super peer routing usually different kinds indexing routing tables discussed 
edutella super peer topology edutella super peers employ routing indices explicitly acknowledge semantic heterogeneity schema networks include schema information possible index information 
superpeer backbone responsible message routing integration mediation metadata 
scaling network large number super peers maintaining certain properties low network diameter requires guiding evolution network topology peer joins departures 
edutella network super peers arranged hypercube topology hypercup protocol 
simple example see 
fig 

hypercup super peer topology new super peer able join network asking integrated super peer carries peer integration protocol 
log messages sent order integrate new super peer maintain topology 
number super peers accommodated network peers missing order construct complete hypercube topology consists nodes dimensional binary hypercube super peers network occupy position hypercube 
new superpeers join network fill gaps hypercube topology possibly extend dimensionality hypercube 
advantages hypercup efficient guaranteed non redundant query broadcast restrict indices described section 
broadcasts node thought root specific spanning tree network 
topology allows log path length log number neighbors total number nodes network number super peers case 
topology vertex symmetric features inherent load balancing super peers 
topology carry efficient communication message forwarding super peers certain updates communicate broadcast super peers executed efficiently message overhead 
path log length exists super peers distinct schemas reached short number hops 
alternatives topology possible long guarantee spanning tree property super peer backbone exploit maintaining routing indices building distributed query plans section section 
peers connect super peer networks 
connect super peer forming star local network super peer 
turn super peer takes specific responsibilities peer aggregation query routing possibly mediation 
topology allows peers resources efficiently super peer provides necessary bandwidth processing power enable efficient reliable query processing answering 
registering peers super peers order avoid broadcasting query connected peers super peer introduce super peer peer routing indices forward query respective peers 
indices store information metadata usage peer 
includes schema information schemas attributes possibly conventional indices attribute values 
registration peer provides super peer metadata information publishing xml registration message 
advertisement encapsulates metadata description peers properties 
registration may involve quite large amount metadata build schema approaches successfully context mediator information systems 
peer register schema lom dc element set set properties information specific property values 
behavior super peers unpredictable network 
registration messages valid certain period peers periodically 
invalidating peers registrations periodically chose behavior similar protocols dynamic settings dhcp peers may leave network notice 
super peer fails connected peers re register super peer 
currently investigating deterministic reconnection strategies specify alternative super peers clustering strategies grouping similar peers terms supported schema 
index structures index updates super peers combination routing indices peers reduces workload peers significantly distributing queries appropriate subset possible peers see discusses routing indices various aggregation strategies content indices 
super peer peer routing indices level index sp index index describes characteristics peers connected specific super peer guides forwarding queries super peer connected peer 
furthermore forms basis second level indices sp sp indices derived sp indices facilitate routing super peer backbone 
indices contain information different granularities 
fig 

super peer peer routing index schema index 
schema level assume different peers support different schemas 
schemas uniquely identified respective namespace sp routing index contains schema identifier peers supporting respective schema 
property sets properties index 
routing indices contain properties sets thereof enabling peers support parts schemas 
properties uniquely identified namespace schema id property name form routing index entry peer ids properties 
property value range index 
properties contain values predefined hierarchical vocabulary index specifies taxonomies part taxonomy properties property value range 
common case edutella context semantic web quite applications standard vocabularies ontologies 
example peers characterized possible values dc subject field query forwarded peers managing ccs networks ccs artificial intelligence content sub hierarchies disjoint ccs software engineering sub hierarchy forwarded peers mesh vocabulary peers manage medical content 
note subsumption hierarchy taxonomy acm ccs aggregate routing information order reduce index size 
property value index 
properties may advantageous create value indices reduce network traffic 
case identical classical database index exception index entries refer resource peer providing 
index contains properties compared rest data stored peers 
string valued properties dc language lom context 
super peer super peer routing indices super peers connect hypercup protocol 
protocol enables efficient message broadcast indices restrict message propagation 
super peer super peer routing indices essentially extracts summaries local sp indices 
basically contain kind metadata information sp indices refer direct neighbors super peer shown 
queries forwarded super peer neighbors sp sp indices sent connected peers sp indices 
fig 

super peer super peer routing index sample sp sp routing index shown taken super peer sp 
see index contains metadata information different granularities 
example sp knows schema level neighbors sp sp sp dc namespace sp sp contain information described lom schema 
index contains index entries property value range combination classification hierarchy ccs networks common super concept ccs ethernet ccs clientserver acm ccs taxonomy 
granularity index sp schema property dc sp sp sp lom sp sp dc subject sp sp sp dc language sp sp lom context sp sp property dc subject ccs networks sp value range dc subject ccs software eng 
sp sp property lom context undergrad sp sp value dc language de sp sp fig 

sp sp index sp different granularities updating sp routing indices update sp index super peer occurs peer leaves super peer new peer registers metadata information registered peer changes new attributes added deleted 
case peer leaving super peer peer removed sp index respective super peer 
applies peer fails re register periodically 
case peer joining network re registering respective metadata schema information matched sp entries respective super peer 
sp routing index contains peers metadata peer stored index respective metadata peer added index 
algorithm formalize procedure define set schema elements si 
super peer spx stores set sx schema elements sp index 
sp index super peer spx considered mapping si pj 
new peer py registers super peer spx set sy schema elements 
sy sx add py list peers si sy sy sx sn sm update sp index adding new rows sn py sm py 
complete schema dc considered schema element updating sp sp routing indices consider update sp sp indices backbone modified described section 
assume sp modification triggers update process sp sp indices collect modifications period trigger sp sp update process 
assume super peers cluster peers schema characteristics peers connected super peer usually similar characteristics sp modifications trigger sp sp index updates frequently 
take example network example sp sp index sp shown new peer px registering super peer sp property dc language trigger update process metadata information exists sp index 
new peer py registers sp property dc created sp sp update process starts property included index 
fig 

hypercup topology spanning tree example sp sp update process 
remember super peers network organized hypercup topology implicitly defines super peer root spanning tree 
query routing takes place spanning trees restricted sp sp indices update sp sp indices done reverse direction 
updates super peer acts root spanning tree backward direction show super peer called example simple complete cube dimensions node neighbors 
order update sp sp indices update sp index superpeer spg build spanning tree super peer spg follows spg sends update message neighbors tagging edge label dimension message sent 
super peers receiving message update sp sp index accordingly forward update message superpeers tagged lower edge labels 
furthermore message change sp sp index receiving super peer spy forwarding stops 
spanning tree spg 
update done follows si sx sy add dimension spx list dimensions row si dimension exist 
si sx sy add new row si dimension spx adding new super peers 
adding new super peer bit complicated 
new super peer hypercup protocol takes care identifying new neighbors discussed 
process super peers responsible integrating new super peer 
cases new super peer fill vacant position hypercube temporarily administered responsible super peer 
process super peer holding additional sp sp sp index vacant position transfers indices new super peer 
new super peer opens new dimension take peers old super peer sp sp index split indices 
neighboring super peers update indices accordingly exchanging responsible super peer new super peer appropriate dimension 
immediate neighbors update necessary 
removing super peers 
hypercup protocol takes care super peer leaving backbone 
usually assume leaving super peer coordinates operation specifically asks appropriate super peer leaving super peer temporarily fills positions administer position 
process administering super peers take sp sp sp indices leaving super peer neighbors leaving superpeer administering ones update sp sp indices 
update required immediate neighbors 
peers leaving superpeer reconnect super peer vacant position 
case unexpected link failure neighbors determine closest regarding smallest hop distance super peer 
super peer coordinates administration open position procedure described 
peers failing super peer reconnect super peer possibly triggering sp sp update messages 
query routing motivation improved topologies networks usually query forwarding efficient 
goal forward queries appropriate peers answer queries 
easily achieved indices described previous section matching query elements super peer super peer super peer peer indices forward queries super peers peers support elements contained query 
match means peer understands answer specific query usually guarantee non empty answer set case property value entry 
fig 

routing example network algorithm described handles queries evaluated joining data peers 
process extending algorithm dynamically create query evaluation plans index information allow forwarding sub queries different peers combining results appropriately 
illustrate kind routing mechanism sample query find lectures german language area software engineering suitable undergraduates 
semantic web context query formalized dc schema document specific properties title creator subject lom schema provides learning material specific properties combination classification hierarchies acm computing classification system acm ccs subject field 
line rdf xml conventions identify properties name schema expressed namespace dc subject denotes property subject dc schema 
written formal manner query find resource property dc subject equal dc language equal de ccs lom context equal undergrad 
shows values requested query different granularities query asks dc lom schema level requests lom context value undergrad property value level shows peer sends sample query mentioned superpeer sp 
example query answered peers attached sp sp respectively 
contain metadata resources match query 
schema level index super peer sp forwards granularity query schema dc lom property dc subject dc language lom context property value range dc subject ccs sw engineering property value lom context undergrad dc language de fig 

query elements sample query different granularities sample query peer supports schemas lom dc 
property level index sample query forwarded sp peer sp dc subject dc language lom context 
obviously indices help exploit express regularities peer data distribution 
clustering peers similarity measures necessary ingredient improving index effectiveness query efficiency 
implementation currently process verifying performance protocol routing mechanisms 
simulate system protocol implemented algorithms current edutella framework 
existing edutella framework extended areas area consists support construction network super peers topologies hypercup topology discussed section 
second area introduces additional components super peer construction including services peer registration query routing table management 
services peer provides specified configuration 
services composed standard modules jxta endpoint handler manages service requests arriving jxta infrastructure service specific modules 
attached service service advertisement published network peer startup 
discovery published services provided jxta framework 
shows minimal service configuration super peer 
super peer provides services bind service 
bind service handles peer registration 
provider peers call service self description establish connection super peer 
bind service takes care hand shaking process updates sp indices accordingly 
jxta endpoint binding service execution pool binding processor bind service adv sp ris jxta endpoint routing service execution pool sp routing processor peer service registry execution pool sp sp routing processor service adv sp sp ris jxta endpoint topology service jxta endpoint query service execution pool query processor bind service routing service topology service query service fig 

super peer service configuration routing service 
service doing real 
routes queries receives appropriate peers super peers indices created binding topology service 
topology service 
topology service takes care maintaining super peer network topology keeps sp sp indices date 
new superpeer starts topology service connects topology service superpeer location new super peer network negotiated described 
new neighbors exchange sp sp routing information 
query service 
query service provides defined interface issue new query requests network 
requests distributed routing service 
communication service components peer done sending events monitoring listeners observer design pattern 
startup components configured services instantiated necessary observer relations created 
example query service doesn know query distributed 
routing service tagged matching actor query events configuration routing service registered listener query service 
way queries received query service passed routing services query events 
rdf networks number important advantages previous simple networks 
discussed rdf networks prime examples new kind networks schema networks 
peers provide explicit possibly heterogeneous schema descriptions content infrastructure ideally suited networks consisting heterogeneous information providers 
topology service adv query service adv identified super peer topology suitable topology schema networks discussed different kinds super peer indices describing data schema characteristics peers connected network 
super peer indices exploit rdf ability uniquely identify schemas schema attributes ontologies provide necessary ingredient schema aware peer topeer data management infrastructure 
discussed indices updated routing query distribution super peers peers super peer backbone network 
discussed current implementation context edutella project 
ratnasamy francis handley karp shenker scalable content addressable network proceedings conference applications technologies architectures protocols computer communications acm press new york ny usa 
stoica morris karger kaashoek balakrishnan chord scalable peer peer lookup service internet applications proceedings conference applications technologies architectures protocols computer communications acm press new york ny usa 
nejdl wolf qu decker sintek naeve nilsson palm risch edutella networking infrastructure rdf proceedings eleventh international world wide web conference 
bernstein giunchiglia kementsietsidis mylopoulos serafini data management peer peer computing vision proceedings fifth international workshop web databases madison wisconsin 
aberer hauswirth semantic gossiping database information systems research semantic web enterprises workshop university georgia falls state park georgia 
halevy ives mork tatarinov piazza data management infrastructure semantic web applications proceedings twelfth international world wide web conference budapest hungary 
gribble halevy ives suciu databases peer peer proceedings fourth international workshop web databases santa barbara ca usa 
edutella project edutella jxta org 
nejdl wolf staab edutella searching annotating resources rdf network proceedings semantic web workshop eleventh international world wide web conference honolulu hawaii usa 
lassila swick resource description framework model syntax specification www org tr rec rdf syntax feb 
brickley guha rdf vocabulary description language rdf schema www org tr rdf schema jan 
gong project jxta technology overview tech 
rep sun microsystems www jxta org project www docs pdf apr 
yang garcia molina designing super peer network ieee international conference data engineering 
yang garcia molina improving search peer peer systems proceedings nd international conference distributed computing systems vienna austria 
kazaa web site www kazaa com 
crespo garcia molina routing indices peer peer systems proceedings nd international conference distributed computing systems vienna austria 
nejdl wolpers siberski schmitz schlosser ser super peer routing clustering strategies rdf peerto peer networks proceedings twelfth international world wide web conference budapest hungary 
schlosser sintek decker nejdl hypercup hypercubes ontologies efficient search networks international workshop agents peer peer computing bologna italy 
kemper nejdl distributed queries query optimization schema peer peer systems international workshop databases information systems computing colocated th international conference large databases berlin germany 
wiederhold mediators architecture information systems ieee computer 

