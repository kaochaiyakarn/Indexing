national technical university athens department electrical computer engineering division computer science multidimensional semistructured data representing querying context dependent multifaceted information web yannis dissertation submitted national technical university athens part requirement degree doctor philosophy computer science 
athens greece june 
dissertation available english original greek editions 
national technical university athens department electrical computer engineering division computer science multidimensional semistructured data representing querying context dependent multifaceted information web dissertation submitted part requirement degree doctor philosophy computer science ioannis yannis sc 
physics university athens sc 
distinction computer science university college london supervisor professor sellis approved thesis examination committee th june 
sellis professor ntua panagiotis professor ntua ioannis vassiliou professor ntua afrati professor ntua manolis 
prof univ andreas professor ntua panos professor univ crete ioannis rights reserved parents 



















number people helped various ways complete 
supervisor sellis professor national technical university athens director knowledge database systems laboratory 
support guidance encouragement 
setting high scientific standards 
time effort spent especially stages 
important mixture balance integrity emits imposing environment feel privileged part 
go yannis vassiliou andreas professors national technical university athens serving thesis 
person want manolis assistant professor university 
collaboration formulating number answers related greater number questions especially difficult steps 
fun burning midnight oil preparing papers submission 
help establishing direction indispensable 
addition panos professor university crete panagiotis professor ntua afrati professor ntua serving thesis examination committee 
want spyropoulos research director software knowledge engineering laboratory skel national center scientific research 
tolerating disrupted pace jumping project development research vice versa 
believing years 
panos rondogiannis assistant professor university athens opening discussion lead topic 
students national technical university athens diploma thesis supervised christos vassilis andreas cristian 
panos contributed mssd implementations described 
dimitris dimitris influenced shape mxml collaboration research project resulted implementation mxml web server described 

members helped various discussions formulate background base quest research topic 
especially closer research interests theodore panos name just 
institute communication computer systems iccs supported year research 
am grateful 
want mother father brother panos support bearing absence complain 
cordial continuous encouragement support 
table contents 


problem thesis contribution 
thesis outline 
preliminaries 
databases world wide web 
semistructured data 
data models ssd 
ssd query languages 
xml 
xml syntax dtd 
xml related technologies 
xml query languages 
mssd mxml 
formalism context 
related 
context dimensions worlds mssd 
assumptions dimensions 
possible worlds 
context specifiers context operations 
context specifier clauses 
correspondence worlds 
clause expanded form 
clause extension 
clause expanded extension 
clause equality 
empty clause universal clause 
clause intersection 
mutually exclusive clauses 
clauses union difference 
clause subset 
context specifiers 
correspondence worlds 
context expanded form 
context extension 
context expanded extension 
context equality 
empty context universal context 
simplification context specifiers 
context intersection 
mutually exclusive contexts 
context union clause union 
clause union 
context union 
context difference clause difference 
clause difference 
context difference 
context subset 
properties context operations 
dependence dimensions 
context equality context subset 
context intersection context union context difference 
context expressions context conditions 
complexity context operations 
notation context specifiers 
summary 
data model mssd 
multidimensional entities 
multidimensional data graphs 
start oem 
representing multidimensional entities 
multidimensional data graphs 
set dimensions 
context propagation 
inherited context 
calculation inherited context 
significance inherited context 
inherited context root 
context coverage 
calculation context coverage 
significance context coverage 
context coverage root 
inherited coverage 
path inherited coverage 
significance inherited coverage 
graph context projection 
reduction 
reduction oem 
context deterministic graphs 
reduction oem 
oems holding worlds 
partial reduction 
reduction primitives 
canonical form 
multidimensional object exchange model 
mssd expressions 
summary 
multidimensional query language 
moem mql 
context path expressions 
incorporating context path expressions 
context path expressions canonical form 
evaluation context path expressions 
entity parts facet parts 
context qualifiers 
context qualifiers context specifiers 
context patterns 
context qualifiers context patterns 
context qualifiers context variables 
implied context qualifiers 
semantics context path expressions 
mql basics 
clause 
select clause 
clause 
clause 
context clause 
dimensions dimension domains mql 
advanced issues 
general context path expressions 
regular expressions 
wildcards 
path variables label variables 
nested mql queries 
construction results 
constructing entity edges context edges 
context path expressions select 
inferring edge labels 
grouping results 
reducing mql result graph 
implementation top lore 
transforming moem databases oem 
translating mql queries lorel 
context path expressions path expressions 
context variables clause 
transforming oem results multidimensional data graph 
summary 
mssd accommodate changes 
moem basic change operations 
representing oem histories moem 
moem model oem histories 
applying mssd properties 
implementation oem history 
representing changes moem databases 
querying changes mql 
querying oem histories 
querying moem histories 
related 
summary 
multidimensional xml 
incorporating context xml 
extend xml syntax 
multidimensional xml syntax 
dimensions applied elements 
dimensions applied attributes 
multidimensional dtd 
dimension declarations 
element declarations 
attribute declarations 
example 
properties mxml 
multidimensional paradigm 
viewing multidimensional ssd 
comprehensive example 
prototype implementation 
extending url 
system design 
system implementation 
summary 
system managing mssd 
system architecture 
multidimensional data manager 
general utility functions 
coordinator module 
update operations module 
import export module 
reduction operations module 
query subsystem 

summary 

appendix mql syntax specification 
syntax context path expressions 
mql syntax 

glossary 
list figures part bibliographical oem database 
point multidimensional space representing possible world 
graphical representation multidimensional entities 
alternative ways representing multidimensional entities 
multidimensional data graph example depicting context dependent recreation guide 
calculation inherited context 
subgraph holds world scale low shown 
restricting inherited context root 
context coverage relation extraction conventional oems 
graph annotated inherited coverage edges 
context deterministic context nondeterministic graphs 
oem produced reducing multidimensional data graph world 
problems extracting oem holds worlds 
subgraph produced partial reduction multidimensional data graph context 
transforming multidimensional data graph canonical form 
part graph depicted canonical form 
moem database context dependent recreation guide 
data paths matter 
results mql queries multidimensional data graphs 
finding empty inherited coverages context determinism violations database graph 
finding inaccessible facets incoming entity edge 
results mql queries 
evaluating mql queries lore infrastructure 
representing multidimensional data graph oem 
modeling oem basic change operations moem 
initial state example database oem history application 
example database couple sequences basic changes initial database state 
example database sequences basic changes database 
modeling moem basic change operations moem 
representing history multidimensional music club moem 
moem database canonical form supplemented inherited coverages edges 
partial reductions various contexts mql results 
moem canonical form 
results mql queries moem histories 
mxml mxsl relation 
mxml web server design 
submodules view extractor depicted submodules conventional web server depicted 
screenshot showing reply mxml web server 
architecture system 
sample screenshot 
initializing query subsystem graph database 
evaluating mql query displaying results 



contexts 
mssd multidimensional semistructured data 
dimensions 
worlds 

mssd multidimensional data graph 
object exchange model oem 
oem oem multidimensional oem oem 
oem reduction oem oem 
mql multidimensional query language oem context driven queries 
oem mql cross world queries 
mql lore lorel 
mssd oem oem mql 
oem mql oem oem 
xml xml multidimensional xml xml 
multidimensional paradigm 
mssd 
mql 
mssd 
mssd 
contrary traditional databases information systems number users known background great extent homogeneous web users share background apply conventions interpreting data 
users different perspectives information entities situation taken account web data models query languages 
information providers need manage variations essentially data targeted different consumer groups 
thesis argue web data able adapt different contexts capability managed flexible uniform way level database systems 
propose multidimensional data mssd information entities may manifest different facets context 
intuitive flexible way express context dimensions defined 
context viewed representing alternative worlds information obtains unambiguous interpretation 
operations contexts introduced properties examined detail 
data model mssd called multidimensional data graph proposed properties investigated exhaustively 
multidimensional data graph extends object exchange model oem graph model semistructured data order explicitly support multifaceted information 
multidimensional oem moem special case multidimensional data graph seen conventional oems holding different worlds 
oems obtained process reduction transforms multidimensional oem conventional oem holding world 
define multidimensional query language mql query language multidimensional data graphs treats context class citizen express context driven queries elegant way 
moem mql allow formulation cross world queries counterpart conventional data models query languages 
mql implemented top lore implementation provides comparison equivalent lorel queries 
assess approach applied mssd framework developed classical problem databases moem mql represent query histories oem databases 
moem mql proved powerful represent query oem histories moem histories 
example concepts introduce span directions discuss multidimensional xml mxml version xml incorporates context 
manipulating viewing multifaceted information propose multidimensional paradigm demonstrate prototype implementation 
implemented system managing mssd 
system encompasses graphical user interface supports interactive creation experimentation querying multidimensional data graphs mql 
believe mssd address important problem databases today global environment potential practically applied various domains 
mssd open number interesting directions research 
semistructured data ssd short term coined database research community describe information irregular structure 
information available today falls category including html xml web data 
number models query languages proposed years representing querying ssd 
thesis claim notion context pivotal databases global environment web propose new data model query language ssd context plays central role 
chapter state problem motivate approach 
list main contributions thesis refer material published moment writing lines 
close chapter thesis outline 
problem thesis contribution nature web posed number new problems bbc database research community 
problem traditional databases information systems number users known background great extent homogeneous web users share background apply conventions interpreting data 
users different perspectives entities situation taken account web data models query languages 
related issue information providers need manage different variations essentially data targeted different consumer groups 
similar problems appear integrating information various sources conceptual entity may exhibit different structure contain conflicting data 
problems call way represent handle information entities manifest different facets contents vary structure value 
simple example imagine product car laptop computer specification change country exported 
web page displayed devices different capabilities mobile phones pdas personal computers 
example report represented various degrees detail various languages 
solution create different report possible combination variations 
approach certainly practical involves excessive duplication information 
different variants associated parts entity 
prevents formulation interesting queries involve facets information entities example give low detail reports high detail facet satisfies specified condition 
motivating example consider line bookstore variety clients different needs treated differently bookstore policy 
students instance need browse books title author charged lower prices libraries 
libraries hand isbn book 
bookstore information tailored client placed request book isbn publisher prentice hall price book title programming language authors brian kernighan dennis ritchie publisher prentice hall price entries refer book 
corresponds library request second request student 
note customer type library student affects value objects price structure data different portion available data case hand 
addition customer type factor associated way information displayed second entry uses letters greater size word book behavior uncommon web applications 
capability adapt information characteristics prospective consumer currently part application logic programmed scratch different case 
envisage capability adapt part information managed uniform flexible way database systems 
alleviate burden developing ad hoc solutions applications pose simple queries aware dependency information facets parameters customer type 
existing web data models oem aqm suc query languages lorel aqm principle capable representing querying multifaceted entities fall short reasons follow 
hidden semantics addressing directly issue multiple facets responsibility application assign semantics ad hoc manner 
cumbersome notation representing multiple facets entity done elegant way 
duplication information ad hoc approach may lead duplicating information common undesirable 
need multifaceted entities exceeds boundaries web data 
seen wide spectrum diverse situations occasionally adopt ad hoc solutions limited effectiveness 
tangible example case shows applicability multifaceted information encountered microsoft powerpoint computer program creating displaying presentations includes feature called custom shows 
feature allows create presentation presentation 
creating multiple nearly identical presentations different audiences group name slides chapter discuss example detail explain mechanism generate display variants information entity 
shortcomings evident chapter investigate oem lorel represent query multifaceted information 
differ jump slides presentation custom shows allow include exclude portions single slide intended audience leads duplicating slides portions target audience 
ideally able mark part component presentation targeted particular audience subsequently specify audience presentation automatically tailored audience 
nice able pose useful questions show components slides targeted audiences audience 
go intended audience factors may affect presentation example consider case presentation duration adhere different time limits depending situation 
case pieces presentation material assigned different degrees priority importance allowing low priority information automatically omitted time limit short 
information presents different facets encountered probabilistic databases facets associated measure uncertainty express real world accurately 
relatively probabilistic extension relational model ds ds corresponding extension sql 
probabilistic features lately added xml nj uncertainty measure qualifies facets specialized semantics general cover factors may characterize variants data web 
influenced intensional html bro bro short web authoring language allows single web page different variants dynamically adapt world specified assigning single values number variables called dimensions 
follows document centric approach naming scheme encode worlds filenames document versions 
follows different direction central concept context represents set possible worlds dimensions express context assigned values combined conjunctions disjunctions formalize notion context introduce operations contexts focus data centric approach aims incorporate context data models query languages semistructured data 
thesis propose multidimensional semistructured data mssd short semistructured data different facets different contexts 
express context flexible intuitive way assigning values variables called dimensions 
main difference conventional multidimensional semistructured data context specifiers 
context specifiers syntactic constructs qualify pieces semistructured data specify sets worlds pieces hold 
world environment data obtain unambiguous interpretation defined assigning single value dimension 
way possible time variants information entity holding different set worlds 
information entity encompasses number variants called multidimensional entity variants called facets entity 
facets multidimensional entity may differ value structure turn multidimensional entities conventional information entities 
facet associated context defines conditions facet holding facet multidimensional entity 
main contributions thesis extracted line help section microsoft powerpoint entitled custom shows 

intuitive flexible way express context dimensions defined 
context viewed representing alternative worlds information obtains unambiguous interpretation 
operations contexts introduced properties examined detail 

multidimensional data graph data model mssd proposed properties investigated exhaustively 
multidimensional oem moem special case multidimensional data graph seen conventional oems holding different worlds 
oems obtained process reduction oem flexible mechanism information adaptation transforms multidimensional oem conventional oem holding world 

multidimensional query language mql defined 
mql query language multidimensional data graph moem treats context class citizen express context driven queries elegant way 
moem mql allow formulation cross world queries counterpart conventional data models query languages 
mql implemented top lore implementation provides comparison equivalent lorel queries 

assess approach apply mssd framework developed classical problem databases moem mql represent query histories oem databases 
moem mql proved powerful represent query oem histories moem histories 

example concepts introduce span directions discuss multidimensional xml mxml version xml incorporates context 
manipulating viewing multifaceted information propose multidimensional paradigm demonstrate prototype implementation 

implemented system managing mssd 
system encompasses graphical user interface supports interactive creation experimentation querying multidimensional data graphs mql 
role context managing multiple aspects data today global environment attracting increasing attention especially frame ubiquitous computing mobile computing ck 
believe mssd address important problem databases web open interesting directions research 
mssd potential practically applied various domains 
example web publishing platform np np object dbms extended support flexible domain independent model information delivery context plays pivotal role 
interesting direction mssd concepts problems disperse fields providing personalized information services adapting profiles consumers information integration modeling objects value structure vary sources digital libraries representing metadata conform similar formats representing geographical information possible dimensions scale theme 
part thesis published submitted publication sg gsk gsk gs sgm eps 
thesis outline thesis structured follows 
chapter review preliminary semistructured data xml focusing issues mentioned subsequent chapters 
state definition oem give examples lorel unql queries 
refer briefly xml related technologies dtd xsl query languages xml 
chapter develop formalism representing context variables called dimensions 
define context specifiers constraints possible values dimensions take 
give semantics context showing viewed set possible worlds world environment information obtains unambiguous interpretation 
define number context operations examine properties 
chapter introduce multidimensional data graph graph data model incorporates context specifiers treats multifaceted entities class citizens 
multifaceted entities may manifest different facets different worlds context specifiers qualify facets define constraints worlds facet may hold 
investigate properties multidimensional data graph define process reduction oem extracts multidimensional data graph conventional oem holding world 
properties multidimensional data graph define multidimensional oem moem special case multidimensional data graph strict conventional oems holding various worlds 
chapter multidimensional query language mql query language supports context multifaceted entities class citizens express queries 
context path expressions extend path expressions incorporating context qualifiers pose context conditions database graph 
addition context path expressions mql uses special clauses handling context clause express complex conditions contexts clause context creates new context variables construction results 
prototype implementation mql demonstrates mql query compares equivalent lorel query shows benefits treating context multifaceted entities class citizens 
chapter assess approach applying mssd framework developed classical problem databases moem mql represent query histories oem databases 
introduce basic change operations moem specify process encodes moem history oem database 
show temporal oem snapshots obtained moem process reduction oem oem history relevant implemented system 
give number mql query examples history sample oem database confirm expressiveness mql 
interesting point moem mql represent query oem histories moem histories 
chapter serves example concepts introduce previous chapters span directions proposes multidimensional xml mxml extension xml suitable representing data assume different facets different contexts 
propose extension dtd called multidimensional dtd describes logical structure mxml documents 
new paradigm called multidimensional paradigm manipulating displaying multifaceted contextdependent web data multidimensional xsl mxsl stylesheets 
describe system implements basic functionality multidimensional paradigm demonstrates user interact multidimensional document view different variants different worlds 
chapter system managing mssd implements essential concepts introduced thesis interactive creation experimentation querying multidimensional data graphs mql 
chapter concludes thesis summarizing contribution identifies directions research possible applications mssd 
preliminaries impact world wide web decade underestimated 
shortly invention widely accepted means information exchange communication commerce global scale 
web continues evolve promising technologies web services pap motivating visions semantic web web data machine readable machine understandable 
start database technology played important role web 
substantial part web content stored relational databases dynamically construct html html pages support electronic commerce applications 
need database support number ways soon devised connect databases web mal 
databases offer just back technology 
database research community rapidly recognized ssu sz sz web huge source information needs accessed manipulated benefit experience accumulated databases past decades 
data models query languages query optimization concurrency techniques adapted new framework posed web 
stated asilomar report database research bbc recommended long term goal database research information utility easy store organize access analyze majority human information online consequently databases complement document centric origins web data centric perspective 
follows refer briefly ways database technology applied flm web 
discuss semistructured data comprise data models query languages web proposed database community 
refer xml related technologies document centric origins adopted database community currently constitute active field database research 
databases world wide web success web attributed fact offered simple standard way universal exchange information 
brief key elements web html html markup language structures text visual rendering embodies intra document inter document links url url way identify resources internet simple protocol allows client connect server request resource 
simplified view web units information html documents identified urls 
paradigm information assumed structure web search engines employ techniques information retrieval obtain documents interest 
search engines database technologies yl preliminaries typically follow information retrieval methodology view query set filters keywords 
approach gives flexibility ease lacks accuracy completeness offered databases search engines return irrelevant documents recognize relevant documents 
hand database culture abs suggests data models entity relationship diagrams relational database schemas capture structure information query languages rely data models order access information 
principal characteristic database perspective separation logical view related models queries physical view related storage efficiency 
important distinction levels abstraction recognized document centric view web 
sense data centric document centric view web converge benefit 
number information integration systems developed effort give expressive homogeneous query interface heterogeneous information sources 
examples systems whirl coh coh coh ch information manifold lmss lsk tsimmis cgh ghi garlic chs hmn rs 
databases attempted adapt web multi tier architecture classical client server architecture 
multi tier architecture server data repository client interprets displays data middleware tier uses mediators wie integrating data various sources transforming data suitable form 
mediated information integration systems classified ull gp global schema defined views describing individual sources global predicates collections local sources mapped 
tsimmis approach uses network mediators wrappers extract information create unified view underlying sources 
data model introduced tsimmis called object exchange model oem language querying lorel aqm 
oem lorel lightweight object repository mag lore database management system especially semistructured data 
direction research apply database methodologies management web sites 
methodology designing hypermedia applications isb 
strudel ffk ffls ffls system creating managing web sites separates physical organization data logical view site presentation issues 
oem data model struql query language specifies declarative way structure sites 
system web site development amm amm mmac proposes data model adm describing hypertext collections language ulixes defining views incorporates set tools undertake construction web sites 
major contribution convergence databases web semistructured data xml 
follows review data models query languages semistructured data xml focusing topics subsequent chapters 
semistructured data traditional databases information structured conforms fixed schema defined advance 
database management systems schema store index data process queries updates 
hand web data may lack regular structure preliminaries may conform separate schema 
semistructured data suc bun suc ssd term coined describe information structured relational object oriented data completely unstructured 
examples semistructured data latex bibtex files rtf html xml files 
semistructured data may exhibit particularities 
variations structure data heterogeneity may take form missing fields address person missing duplicated fields phone numbers exist person changes representation prices may euros dollars 
data nested arbitrary depth relational model difficult 
structure may partial parts data may lack structure completely images parts may yield little structure plain text 
types indicative semistructured data adopt strict typing policy traditional databases 
embedded schema semistructured data schema separate data traditional databases 
words type objects external object instances 
caused semistructured data called self describing data sense schema exists part information 
schema large rapidly evolving variations structure larger schema 
addition web data changing rapidly unpredictably schemata evolve quick rate 
posteriori dataguide contrast traditional databases populated pre existing schema schema semistructured data extracted facilitate access information 
data models ssd data models ssd directed graphs order cope irregular structure deep nesting semistructured data 
popular model ssd object exchange model oem variations number occasions 
oem introduced tsimmis graph interconnected objects 
oem object defined tsimmis comprising object identifier oid label type value 
type set atomic types string integer 
respectively value set oids atomic value 
nodes graph model represent objects object set type points directed edges sub objects contained set value 
oem variation tsimmis attaches labels nodes objects 
oem variations strudel ffls lore mag aqm labels attached edges nodes 
labels attached nodes property objects hand labels attached edges property relation objects 
attaching labels edges allows nodes see node different names 
edge labeled variation oem data model unql bds bdhs bfs query language unstructured data 
variation notion object equality bisimulation isomorphism 
frame edge labeled variation oem 
specifically formal definition oem suc 
definition preliminaries oem graph quadruple set nodes partitioned complex atomic nodes vc va edges vc root property node reachable va assigns values atomic objects universe atomic values universe label names 
definition equivalent slightly different definition oem database aqm 
oem example taken abs 
part bibliographical oem database 
title database systems date book author smith biblio db book title database systems author date author roux oem nodes may object identifiers oids db 
convention oids oem preceded character 
oem tree general case oem graph 
particular oem rooted directed labeled multigraph valued leaves 
oem represented textually various ways aqm bfs 
adopting format ssd expressions appearing bfs abs suc oem represented shown example 
example db biblio book author roux author date title database systems book author smith date title database systems 
preliminaries curly brackets enclose objects may preceded optional object identifier 
syntax ssd expressions formally defined abs table extended backus naur form ebnf ebnf short 
symbols defined regular expression start capital letter example oid symbols defined ebnf start lowercase letter example ssd expr 
table syntax ssd expression 
ssd expr value oid value oid value ssd expr 
apart oem number graph models semistructured data proposed 
extension oem called delta oem introduced addressing problem representing histories changes oem databases 
chapter investigate aforementioned problem detail discuss similar approaches compare approach 
model semistructured data deviates oem proposed bdt edge labels pieces semistructured data 
extensible semistructured data model proposed uses sets properties form property name property value edge labels 
attaching properties graph rich metadata 
different properties may different semantics results model increased generality 
extension oem propose detail chapter 
ssd query languages number languages proposed querying data web flm suc abi query languages semistructured data 
classified categories flm generation web query languages second generation web query languages 
characteristic generation web query languages combine contentbased queries structure queries 
content search involves definition text patterns matched contents documents structure search involves definition graph patterns describing hyperlinks documents 
generation web query languages include websql mmm mmm ql ks weblog lss 
websql example finds pairs documents local site contains word database second remote site accessible link label returned results 
select url url label document www mysite start mentions database document anchor base url href url preliminaries websql models web relational database virtual relations document anchor 
document anchor tuple exists respective relation 
navigation starts known url symbol denote navigation server symbol denote navigation different server 
second generation web query languages web data manipulation languages sense access internal structure web objects able create new complex structures results query 
view web data close approach taken semistructured data models 
examples languages struql ffls ffls ffk florid weboql am 
struql query language web site management system strudel uses clause binding variables parts input graph database plus number clauses skolem functions construct new graph result 
florid declarative language logic formalism object oriented models 
weboql focuses graph restructuring operations supports webs data type allow model sets related hypertrees 
influential languages semistructured data unql bfs bdhs bds lorel aqm gmw 
unql uses patterns resemble ssd expressions bind variables nodes clause construct result graph select clause select title date biblio title date db evaluated database query returns title publication date papers published 
normal variables bind nodes unql uses label variables bind edge labels label variables possible transform database metadata regular data results 
unql queries translated structural recursion construct reminds patterns functional programming languages allows expressing queries transformations formalism 
lorel focuses expressive path expression constructs type coercions order facilitate formulation queries language intuitive 
query returns title author books papers published title contains database 
select author title db biblio book date title grep database evaluated database query returns answer equivalent ssd expression follows answer book author roux author title database systems book author smith title database systems 
preliminaries example demonstrates number lorel features 
path expression clause borrows syntax regular expressions fri match books papers database 
nodes bound variable clause filtered path expressions clause imply existential quantifier exists date greater 
path expression select clause implies nested query case author causes authors single book appear single book object results 
label answer default label lorel results labels book determined run time matching data path 
abs core language semistructured data outlined combines features unql lorel 
lorel unql core language base building multidimensional query language chapter 
xml way represent semistructured data extensible markup language xml wal cha xml 
xml proposed world wide web consortium flexible adaptable means information exchange web 
contrast hypertext markup language html html elements attributes predefined deal information xml define new elements attributes adapting different domains 
addition xml focuses structure information leaving presentation issues dealt subsequent steps 
xml solves problem parsing data web ad hoc manner provides framework developing standard tools extracting data interest web documents 
xml subset standard generalized markup language sgml sgml designed served received processed web 
document centric perspective xml perceived physical representation data format 
data centric perspective xml seen representation information logical level embeds metadata schema data 
point view focus querying data represented xml 
xml provides suitable framework convergence document centric data centric perceptions web abs 
xml syntax dtd xml document logical structure physical structure 
physically document composed units called entities 
entity may refer entities cause inclusion document 
document begins root document entity 
entities contain parsed data unparsed data 
parsed data characters form character data form markup 
markup encodes description storage layout logical structure document 
logical structure includes declarations elements comments character processing instructions 
data centric perspective follows focus logical structure xml documents specifically declarations elements 
example lists part xml document represents oem 
example database id db biblio preliminaries book id author roux author author author date date title database systems title book book id author smith author date date title database systems title book biblio database xml document contains elements delimited start tags tags empty element tags empty elements 
content element characters start tag tag 
elements type identified element name set attribute specifications 
attribute specification name value 
element declaration constrains type content element 
predefined types empty mixed children 
case children element type element content meaning child elements contained free character data 
case constraints include content model simple grammar denoting allowed types child elements order allowed appear grammar built choice lists sequence lists content particles 
case element type mixed content types child elements may constrained order number occurrences 
attribute list declarations may define set attributes element type establish type constraints attributes provide default values 
possible attribute types marked cdata denotes attribute value sequence characters 
case attribute declared things id implies unique identifier corresponding element idref element id attribute idrefs multiple elements id attributes 
attributes type id idref idrefs convert xml document tree graph allowing element referenced parent elements 
default value attribute may optionally contain keyword value required implied fixed def value just def value 
xml document said formed 
matches production labeled document xml defines grammar xml ebnf notation 

document defined 
matching document production implies elements rest single element called root document element content element 
order constitutes difference xml semistructured data models seen previous section 
document origins xml order elements important 
hand order objects important semistructured data models section 
preliminaries example doctype database element biblio book element book author date title element author date title published element author pcdata element date pcdata element title pcdata element published pcdata element pcdata attlist database id id required attlist book id id required define constraints logical structure storage layout xml documents document type definition dtd 
example shows dtd xml document example 
dtd contains markup declarations element type declarations attribute list declarations entity declarations notation declarations 
element type declarations attribute list declarations define constraints types contents xml elements attributes 
xml document valid respect dtd associated dtd complies constraints expressed dtd 
dtd section appear element contain markup declarations directly inside xml document point external document containing markup declarations case dtd document consists declaration subsets taken 
xml related technologies world wide web consortium responsible controlling promoting xml issues published number specifications related technologies exploit advance xml 
section overview briefly specifications important place picture rich web infrastructure 
dtds limited express 
instance dtd specify element price fixed precision real number attribute type idref point elements specific type 
reason xml schema proposed incorporate features cover requirements 
xml schema includes number predefined basic types defining new data types 
data types may complex types data types 
xml schema xml document 
dtd xml schema describes logical structure xml data address issue information semantics 
issue semantics important knowing piece data relates data allow build better search engines advanced applications 
resource description framework rdf rdf rdf provides general method resembles diagram describe semantic metadata xml documents 
describes resources identified uris uri properties 
rdf statements triads composed subject resource predicate property object property value associating property value pairs resources 
value property may literal resource 
rdf statements expressed xml 
preliminaries namespaces enable single xml document contain markup vocabulary defined number different dtds 
markup vocabulary consists element names attribute names 
name may declared different dtds different meaning type mixing dtds may result collision 
namespaces solve collision problem introducing global prefix precedes element attribute names 
xlink define links xml documents document parts resources general 
links powerful html links able assert relationships multiple resources 
possible attach metadata link describing attributes link 
xlink expressed xml may reside outside related documents 
resources identified uris want refer part inside xml document case xpointer specification 
mentioned xml restricts describing physical logical structure documents deal presentation issues 
presentation addressed xml stylesheets xsl xsl xsl transformations xslt xslt 
xsl language formatting xml xslt part xsl language transforming xml documents 
xslt document collection transformation rules operate source xml document produce new document 
result document may xml document html document document format depending transformation rules 
rule consists pattern template 
starting root patterns matched recursively source tree template instantiated produce part result tree 
parts source tree matched simply copied result tree 
xsl xslt expressed xml 
example xsl template match html head title book titles title head body book titles xsl select database biblio book xsl value select title br br xsl body html xsl template example shows part xslt document transforms xml example html document listing titles books 
notice xml namespaces global prefix xsl precedes elements defined part xslt 
xsl particular transformation part xslt considered limited query language xml abs bc 
xslt example database biblio book abbreviated form xpath 
xpath similar ssd path expressions starts node called context node continues sequence steps 
step axis gives navigational directions node test optional list predicates 
example consider xpath frame term context node completely different meaning 
chapter introduce context node special type node represents facets multidimensional entities 
preliminaries root descendant book child author position returns authors books xml example 
xpath descendant child axes book author node tests matched element names position predicate satisfied author book 
xml query languages mentioned previous section xsl seen xml query language 
expressiveness xsl query language limited abs bc 
importance powerful xml query language soon realized abi number objectives language fulfill compiled mai dff 
strong resemblance xml semistructured data models oem lorel adapted gmw xml great difficulty 
main changes incorporating features handling attributes attribute 
lorel query treat xml attribute dual way plain attributes edges pointing subelements 
additions range qualifiers order clause address ordering elements xml documents skolem functions construction results avoid multiple creations element 
contrast lorel xml ql dff dff query language designed directly xml 
data model xml ql xml graph variant familiar edge labeled directed graph comes flavors unordered ordered 
similarly unql xml ql uses clause binding variables element patterns construct clause creating resulting xml document 
xml ql supports tag variables similar label variables unql regular path expressions wildcards formulating powerful element patterns 
smith publ author smith date title www site edu biblio xml book construct title date smith publ element pattern xml ql query matches book elements document biblio xml see example contain author subelement value smith 
tag variable transfers element names book input document newly constructed elements 
result document constructed elements subelements root element smith publ 
query languages xml xml gl ccd graphical xml query language yatl cs functional programming languages xql xql language extends xsl 
comparisons xml query languages bc 
quilt crf xml query language borrows features xpath xql xml ql sql sql oql odmg lorel yatl 
structure quilt preliminaries flwr pronounced flower expressions may include return clauses 
variables bound clauses clauses provide bindings additional variables clauses filter tuple bindings generated return clauses construct results 
quilt query lists book authors example alphabetical order author books ordered publication date author list distinct document biblio xml author return author name text name document biblio xml book author return book title date book date descending author name author list quilt uses xpath navigating xml documents 
instance xpath document biblio xml book author matches book elements biblio xml author subelement value equal value variable xpath title causes title subelements books bound inserted results 
note quilt allows nesting expressions general flexible way 
quilt forms basis xquery xml query language endorsed 
mssd mxml thesis incorporate context semistructured data define multidimensional semistructured data mssd 
particular extend oem propose multidimensional data graph multidimensional oem moem data model mssd 
represent mssd textually introduce mssd expressions extension 
multidimensional query language mql integrates context features lorel unql 
extend xml dtd xsl define multidimensional xml mxml mxsl context plays principal role 
notion context supported part xml importance recognized indirectly 
xml defines special attribute xml lang may inserted xml documents specify language contents attribute values element 
chapter review previous context approach 
formalism context multidimensional semistructured data mssd short represent information entities assume different facets varying content value structure different contexts 
chapter introduces formalism expressing context variables called dimensions establishes correspondence context possible worlds 
addition number context operations defined properties investigated 
convenient notation proposed context expressions context conditions 
approach chapter sees context set constraints combined specify environments information obtains unambiguous meaning 
environment called world constraints expressed assigning values dimension variables 
context defined chapter aims flexible take account special characteristics dynamic nature web data 
web applications producers consumers context dependent information may idea context cover 
information producers obliged create constraints possible dimension information consumers able shift constraints frame interpretation possibly means additional dimensions 
able deal new dimensions changing meaning existing context expressions desirable integrating heterogeneous context dependent information various web sources 
related past decade notion context applied various fields computer science 
extensive bibliography review appears discusses context linguistics music software development machine learning networks artificial intelligence semantic model clustering nested associations categorization information bases web 
specifically web authors web pages diverse backgrounds knowledge culture aims availability metadata inconsistent context exploited full potential greater context web may help increase competition diversity web 
broadly speaking context tool reasoning viewpoints background beliefs abstraction mechanism helps dealing complexity heterogeneity partial knowledge 
follows focus number approaches interesting perspective 
context examined bun linguistic point view perceived depending set factors grouped general categories called dimensions 
distinction global aspects tend remain constant local aspects value change dynamically depending feedback application context 
approach define context assigning specific values formalism context dimensions 
apply context different frame say notion context addresses described bun global aspect factors 
context means formalizing reasoning subset global knowledge base approach called localization 
local model semantics proposed gg formalize principles principle locality reasoning uses part potentially available part forms context principle compatibility states exists compatibility reasoning performed different contexts 
local model semantics applied reasoning viewpoints principle locality deals having different views entity principle compatibility relates views consistent constructs 
stated os context global information systems capture realworld semantics object 
context may lead benefits 
economy representation context act mechanisms isolating accessing parts information way similar database views 
economy reasoning reasoning performed context associated single information source global database 
managing inconsistent information dealing integrating independent information sources inconsistency information may allowed long information remains consistent context user queries 
flexible semantics relation semantic proximity objects may vary context 
formalism local model semantics gg gs represent federated database set local models correspond different databases federated system 
formalism applied gs integrating information number autonomous agents operating field electronic commerce 
extension order logic called context logic integrating heterogeneous information sources incrementally 
source information source context holds original schema semantic context expresses implicit assumptions schema contains translation rules 
integrating context gathers rules semantic contexts integrating contexts provides unified model deals certain forms heterogeneity 
mm context provides generic viewpoint mechanism partition information base manageable fragments containing related objects 
idea developed tacs contexts operations contexts formally defined 
context associated lexicon turn associates global object identifiers set alternative names objects referenced 
object may different names different contexts 
objects context contexts leading arbitrarily deep nested structures 
operations defined include union intersection difference contexts 
configuration contexts represent complex objects composed particular versions components coordinate cooperation tasks persons documents 
chapter define operations contexts similar example context union context intersection context difference 
addition chapter specify reduction processes correspond viewpoint mechanisms project part available information depending context 
view context represented differs fundamentally 
mm tacs contexts objects acting containers objects relevant particular real formalism context world situation 
approach context metadata attached objects relations objects provides framework interpretation data 
interpretation framework context represents set possible worlds 
modal logics fit possible worlds qualify truth values propositions 
instance sentence see raining false world am athens date march may true world am place time 
analogously worlds mssd qualify information entities define variants information entity hold conditions variants interpreted 
worlds mssd expressed intuitive way name value pairs variables called dimensions 
similar constructs independently couple occasions 
np name value pairs characteristics language parameterise process automatic web publishing 
addition dimensions intensional html bro bro short web authoring language extends ideas proposed software versioning system pw 
allows single web page different variants dynamically adapt world 
worlds specified assigning single value dimension 
follows document centric approach naming scheme encode worlds filenames document versions 
influenced follows different direction context represents set possible worlds dimensions express context assigned values combined conjunctions disjunctions formalize notion context introduce operations contexts focus data centric approach aims incorporate context data models query languages semistructured data 
context dimensions worlds mssd main difference multidimensional conventional semistructured data lies concept multidimensional entity 
multidimensional entity information entity assumes different facets different conditions 
example consider case price book internet expressed euros dollars price multidimensional entity value currency euro currency dollar values facets price entity currency represented dimension variable defines circumstances facet holds words context facet holds 
price example context formed just dimension currency 
general case number dimensions participate formulating context 
example consider information document exist number different languages number physical formats varying degrees detail dimension language take values english spanish greek dimension format possible values pdf ps dimension detail low medium high 
contexts formed combining conditions assigning values dimensions facet document multidimensional entity hold low medium detail pdf format english language facet hold low detail pdf format greek language 
exchange rate time writing example euro dollars 
formalism context context define exact conditions various facets hold express requirements multidimensional entity evaluated facets selected 
instance requirements detail low language english greek constitute context matched previously mentioned facets document multidimensional entity 
assumptions dimensions rest chapter number assumptions dimensions dimension domains 
dimension names dimension values respective domains global scope meaning everybody 

dimensions orthogonal words value assigned affect value 

consider sets dimensions nonempty finite 

dimension domains assumed nonempty finite possible describe enumerating elements 
ways representation infinite domains may useful excluded outside scope 
true dimensions orthogonal interrelated domains 
context interpreted respect set dimensions relevant dimension domains 
addition order carry certain operations context take account dimensions dimension domains vd dependence examined defining relevant operation symbol adjacent operation symbol operation depends follows phrase respect short declares dependence set dimensions important point set dimensions considered problem may vary case case 
contrary domain vd dimension assumed case 
frame single problem set dimensions contain dimensions participate contexts involved 
dmin represent set containing dimensions appear contexts problem 
possible worlds alternative way view context notion world fundamental mssd 
world represents environment data obtain substance explained detail chapters 
term dimension data warehousing cd coll describe data qualify pieces information 
dimensions data warehousing considered orthogonal domains organized tree manner consider instance dimension continent values america europe asia africa australia dimension country values countries continent 
difference notions dimension data warehousing mssd data warehouses dimensions mainly navigate aggregate data mssd dimensions provide environment interpretation data 
formalism context provides complete specific guidance interpretation information 
consider dimensions discrete domains defining multidimensional space point space represents possible world depicted 
point multidimensional space representing possible world 
detail low medium high world language greek detail medium format ps pdf ps english spanish greek format language world defined assigning single value dimension stated formally definition 
definition dddd nonempty set dimension names dddd domain 
world respect dddd set pairs dddd dddd exactly belongs determining set dimension value pairs world set dimensions taken account 
set pairs represents world respect represent world respect set 
example consider sets language format language format detail domains shown 
set language greek format pdf world respect set language greek format pdf detail medium world respect 
set possible worlds respect set dimensions called universe instance universe set formalism context language english format pdf language english format ps language spanish format pdf language spanish format ps language greek format pdf language greek format ps definition universe dddd denoted ud set possible worlds respect dddd 
notion world gives insight context seen defining set worlds compact way 
section explain context expressed terms dimensions operations performed contexts including operations transform context set worlds represents 
context specifiers context operations context mssd expressed context specifiers syntactic constructs involving dimensions dimension values 
context specifiers qualify semistructured data pieces defining worlds pieces hold 
context specifiers important difference multidimensional conventional semistructured data 
context specifier interpreted set worlds basic operations context specifiers similar conventional set operations 
section define context intersection context union context difference context equality context superset subset 
operations context expansion context extension obtain actual set worlds represented context specifier 
additional operations context specifiers example cartesian product context specifiers defined 
section address possible context operation focus operations useful subsequent chapters 
additional operations cartesian product excluded need operations come frame thesis 
context specifier complex structure simpler structure called context specifier clause 
discuss context specifier clauses context operations proceed examine context specifiers operations 
context specifier clauses context specifier clause just clause structure called dimension specifier 
dimension specifier seen way express constraints value single dimension 
example consider proposition value dimension language english spanish corresponding dimension specifier language english spanish 
conjunction constraints concerns different dimension forms context specifier clause 
context specifier clause language greek detail low medium defines worlds language greek detail low medium 
structure called context specifier clause resembles horn clause ull kel pn pi correspond dimension specifiers corresponding facet multidimensional entity 
definition formalism context dddd nonempty set dimension names dddd domain 
dimension specifier dimension pair dddd power set context specifier clause cl set dimension specifiers dimension dddd exists dimension specifier cl number dimensions form context specifier clause words necessary context specifier clause contain element dimension specifier possible dimension 
omitting dimensions convenient shortcut meaning clear show context specifier clause transformed set worlds 
follows symbol cl standing clause identify context specifier clause variables operations 
convention useful distinguishing clause variables operations context specifier variables operations 
correspondence worlds correspondence context specifier clause set worlds represents defined follows 
definition dddd nonempty set dimension names dddd domain 
cl context specifier clause world respect dddd 
represented cl iff pair cl exists pair cl set worlds represented context specifier clause obtained operations clause expansion clause extension defined follows 
clause expanded form clause expansion cl unary operation takes context specifier clause cl returns context specifier clause cl 
clause expansion performed respect set dimensions sets dimension domains vd cl cl cl cl set clauses resulting clause cl called expanded form clause cl respect defined follows definition dddd nonempty set dimension names dddd domain 
cl context specifier clause 
clause expansion cl respect dddd called expanded form cl dddd denoted cl cl context specifier clause containing elements follows cl cl cl dddd pair cl cl cl expanded form context specifier clause equivalent clause respect sense represent set worlds respect proposition formalism context context specifier clause expanded form respect dddd represent set worlds dddd set dimensions dddd 
proof expanded form may contain additional constraints form dimension specifiers vd 
dimension specifiers effectively constraint possible values dimension may range domain vd 
definition cause exclusion world role omitted dimensions obvious dimension corresponding dimension specifier clause inclusion clause dimension specifier containing values dimension domain implied 
dimension specifiers expanded form clause correspondence dimensions obvious context specifier clause different expanded forms respect different sets dimensions 
example lang detail format en gr sp low med high pdf ps cl lang en sp format pdf cl lang en detail med high format ps cl lang gr format cl expanded forms respect cl cl lang en sp format pdf detail low med high cl cl lang en detail med high format ps cl cl lang gr format detail low med high cl cl lang en gr sp detail low med high format pdf ps example cl cl cl clause contains dimension specifiers dimension empty set legal context specifier clause expanded form covers complete domains dimensions shown cl example 
notice expanded form clause empty set expansion add dimension specifiers clause extension clause extension cl unary operation takes context specifier clause cl cl returns set sets dimension value pairs 
cl cl cl set clauses contains sets sets pairs clause extension defined 
stated definition belongs context specifier clause belong set dimensions definition formalism context clause extension context specifier clause cl dn vn denoted cl cl set defined follows cl cl cl cl cl dn vn vi vi 
extension clause cl set sets dimension value pairs 
determine set dimension value pairs represents world definition set dimensions taken account 
easy see dimension specifiers cl correspondence dimensions cl cl gives set worlds represented cl clause expansion guarantees condition fact definition proposition leads proposition set worlds dddd represented context specifier clause cl denoted wd cl clause extension expanded form dddd cl wd cl cl cl cl formula proof proposition wd cl wd cl cl 
show wd cl cl cl cl cl 
nonempty result expansion empty set extension take place 
easy see cl cl cl produces worlds line constraints dimension specifiers cl specified definition 
addition world conforms constraints cl cl cl cl 
example lang detail en gr sp low high cl lang en gr cl lang en detail low high cl detail hold 
cl cl lang en lang gr cl cl cl lang en detail low lang en detail high lang gr detail low lang gr detail high 
cl cl cl cl cl lang en detail low lang en detail high 
cl cl cl cl cl contrast case example expansion changed results clause extension case extension cl equal extension formalism context expanded form cl 
case example extension cl cl give worlds pairs dimension detail 
note set dimensions equal lang cl cl give worlds observation generalized context specifier clause represents single world represents nonempty set worlds clause expanded extension expansion extension give set worlds represented clause 
operation combines expansion extension introduced shorthand 
clause expanded extension cl unary operation takes context specifier clause cl returns set worlds clause expanded extension performed respect set dimensions sets dimension domains vd cl cl sw cl set clauses sw contains sets worlds clause expanded extension defined 
definition clause expanded extension context specifier clause cl denoted cl cl defined follows cl cl cl cl cl 
formula take form wd cl cl cl clause equality clause equality cl binary operation takes context specifier clauses cl cl returns boolean value 
cl cl cl boolean cl set clauses clause equality inequality defined follows definition dddd nonempty set dimension names dddd domain 
cl cl context specifier clauses 
cl cl clause equal denoted cl cl cl iff wd cl wd cl wd cl set worlds dddd represented cl iff wd cl wd cl cl cl clause equal denoted cl cl cl clause equality defined referring set dimensions defined respect particular proposition shows context specifier clauses clause equal set dimensions clause equal 
symbol cl proposition express clause equality checking clauses clause equality may need take account domains dimensions encountered clauses 
proposition formalism context cl cl context specifier clauses dddd dddd sets dimensions 
hold cl cl cl respect dddd cl cl cl respect dddd cl cl cl respect dddd cl cl cl respect dddd 
proof claims hold true 
lets assume 
cl cl cl wd cl wd cl 
world wd wd cl wd cl corresponds number worlds described follows 
dimension constraint exists contexts vd implied cl cl pair added wd vd get set worlds correspond wd represented cl cl 
wd cl wd cl claim holds 
similarly claim different world lead nonempty set different worlds 
follows cl cl cl cl cl cl shown cl cl cl imply cl cl cl 
consider dmin dmin dmin 
cl cl dmin cl implies cl cl cl cl cl cl 
claim holds 
similarly claim holds 
proposition assumption stated section sets dimensions consider contain dimensions encountered contexts involved 
dmin contains dimensions encountered cl cl cl cl cl cl cl cl cl cl cl cl cl cl dmin dmin 
conventional set equality sufficient comparing directly context specifier clauses possible clauses different forms represent set worlds respect set dimensions clauses clause equal represent set worlds regardless form 
example lang detail format en gr sp low high ps pdf cl lang en gr detail high format ps pdf cl lang en gr detail high cl lang en gr detail high format cl lang detail low high cl detail low high cl format ps pdf hold cl cl cl cl cl cl trivial case cl cl contain dimension specifiers cl cl dmin defined nonempty set 
case clause equality holds possible set dimensions 
cl cl cl cl cl cl formalism context example cl cl represent set worlds different forms 
formula cl cl represent world clause equal 
clauses cl cl clause equal represent possible world empty clause universal clause empty clause cl common symbol clauses represent world set dimensions hand universal clause cl common symbol clauses effectively impose constraints imply possible world set dimensions definition dddd nonempty set dimension names dddd domain 
cl context specifier clause wd cl set worlds respect dddd represented cl iff wd cl cl called empty clause denoted cl iff wd cl ud ud universe dddd cl called universal clause denoted cl notions empty clause universal clause defined referring set dimensions defined respect particular section stated requirement set dimensions contain dimensions encountered contexts involved 
dmin contain dimensions encountered clause cl 
easy see clause cl empty clause cl empty clause dmin dmin 
similarly cl universal clause cl universal clause dmin dmin formula definition gives wd cl cl cl cl formula wd cl cl cl cl ud formula definition formula formula take form wd cl cl cl wd cl cl cl ud formula definitions clause extension clause expansion clause cl contains dimension specifier form expanded form contain extension cl give empty set worlds 
addition clause represent empty set worlds contain dimension specifier determining clause empty clause universal clause needs take account domains dimensions encountered clause 
trivial case cl dmin defined nonempty set 
case cl universal clause possible set dimensions 
formalism context form 
cl stands clause cl cl clauses clause equal represent empty set worlds similarly clause cl contains exclusively dimension specifiers form vd cl expanded form contain exclusively dimension specifiers form vd extension cl give universe ud 
addition clause represent ud contain exclusively dimension specifiers form vd empty set 
cl stands clause cl cl contains exclusively dimension specifiers form vd cl 
clauses clause equal represent universe ud follows cl stands member set clause equal context specifier clauses representing empty set worlds similarly cl stands member set clause equal context specifier clauses representing universe note expanded form empty clause empty clause shown example cl cl cl 
case cl example shows expanded form universal clause universal clause covers complete domains dimensions interesting point clause universal clause possible set dimensions 
follows introduce special symbol representing clause empty clause possible set dimensions 
definition symbol stands clause containing dimension specifiers form dddd 
lang lang detail format detail format 
obviously cl wd possible set dimensions 
follows sign equality expressions form cl cl implies cl clause equal context specifier clauses represented cl equality expressed clause equality cl cl 
similarly sign equality expressions form cl cl implies cl clause equal context specifier clauses represented cl equality expressed clause equality cl cl 
clause intersection clause intersection cl binary operation takes context specifier clauses cl cl returns context specifier clause cl 
cl cl cl cl cl set clauses clause intersection defined 
obvious express clause empty clause possible set dimensions 
understand consider expression lang 
expression empty clause lang clause detail stated section dimensions appearing contexts included set dimensions 
definition formalism context cl cl context specifier clauses 
clause intersection cl cl cl context specifier clause cl cl pair cl cl pair cl cl cl 
definition cl cl contain dimension specifiers result empty set meaning possible world cl 
addition cl cl set dimensions 
example consider cl lang sp format pdf cl lang en gr detail med high cl lang gr en sp cl currency lang sp gr cl cl cl lang format pdf detail med high cl cl cl lang en gr detail med high cl cl cl currency lang sp gr easy see definition context specifier clause cl clause intersection universal clause cl gives clause clause equal cl clause intersection empty clause cl gives empty clause 
cl cl cl cl cl formula cl cl cl cl formula note formula clause equality conventional equality 
result clause intersection formula necessarily cl context specifier clause clause equal cl clause intersection clauses represents worlds common clauses shown proposition 
proposition cl cl context specifier clauses wd cl wd cl sets worlds dddd represent wd cl cl cl wd cl wd cl 
proof show cl cl cl cl cl cl cl cl cl right side result clause intersection contain dimension specifiers correspondence dimensions dimension specifiers cl cl cl cl correspondence dimensions obvious left side expression 
vl result left part exists vr result right vice versa 
cases vl corresponding dimension specifier exists cl cl 
case vl vd added expansion left side 
right side expanded forms cl cl contain vd formalism context result clause intersection contains vd 
vl vr vd 
corresponding dimension specifier exists cl cl 
vl vr vd 
dimension specifiers exist cl cl respectively 
case clause expansions affect process vl vr 
formula holds true 
step show cl cl cl cl cl cl cl cl cl cl cl cl note left side contains conventional set intersection right side contains clause intersection 
left right sides context specifier clauses participate expression expanded forms clause empty clause cl result sides empty set equation true 
follows assume clause contains dimension specifier 
suppose side results empty set 
result left side empty set dimension cl cl cl cl 
case common value extension takes possible combinations dimension values exist world result left side formed common values dimension 
cl cl cl cl cl right side result right side empty set 
way easy show result right side empty set result left side empty set 
remaining case result sides nonempty set worlds world consist pairs correspondence dimensions order worlds different contain pair pair 
lets assume exists world results left side included results right side 
clause extension transforms clauses worlds possible combination values dimension specifiers world contain pair world results right side contains pair 
result left side includes world containing pair expanded forms left side contain dimension specifiers respectively 
world results right side containing pair 
world results left side exists results right side 
way possible show world results right side exists results left side 
formula holds true 
formula formulas wd cl wd cl cl cl cl cl cl cl cl cl cl cl cl cl cl cl cl cl cl wd cl cl cl proves initial claim 
note clause intersection performed account specific set dimensions 
words cl cl cl cl cl cl cl cl cl cl identical 
addition shown proposition cl represents worlds common cl cl cl represents worlds common cl cl 
formalism context dmin contains dimensions encountered cl cl result clause intersection correctly interpreted dmin mutually exclusive clauses case interest clauses represent disjoint sets worlds 
clauses called mutually exclusive 
definition context specifier clauses cl cl mutually exclusive iff wd cl wd cl wd cl set worlds represented cl set dimensions dddd 
proposition see clauses mutually exclusive cl cl cl cl clauses mutually exclusive result clause intersection empty clause 
mutually exclusiveness defined referring set dimensions defined respect particular clause intersection depend follows clauses mutually exclusive mutually exclusive supersets dmin 
follows formula universal clause cl mutually exclusive clause empty clause 
formula see empty clause cl mutually exclusive clause including empty clauses 
example consider lang detail format en gr sp low high ps pdf cl lang sp format pdf cl lang en gr detail low high cl detail low high example cl cl mutually exclusive 
contrast cl cl mutually exclusive worlds lang sp format pdf detail low lang sp format pdf detail high covered cl cl 
clauses union difference context specifier clauses closed operation clause intersection easily seen definition 
possible define clause operations correspond set union set difference exhibit property 
exist sets worlds expressed single context specifier clause instance consider set worlds lang en detail low lang gr detail high 
problems lead section context specifiers essentially disjunctions context specifier clauses 
trivial case cl cl contain dimension specifiers dmin defined nonempty set 
case result clause intersection holds possible set dimensions 
formalism context sections union difference context specifiers introduced define union difference clauses 
sections clear general case clause union clause difference give context specifiers context specifier clauses 
clause subset clause subset cl proper clause subset cl binary operations take context specifier clauses cl cl return boolean value 
cl cl cl boolean cl set clauses cl cl cl boolean cl set clauses clause subset superset proper clause subset superset defined follows definition dddd nonempty set dimension names dddd domain 
cl cl context specifier clauses 
cl clause subset cl denoted cl cl cl equivalently cl clause superset cl denoted cl cl cl iff wd cl wd cl wd cl set worlds dddd represented cl case wd cl wd cl cl proper clause subset cl denoted cl cl cl equivalently cl proper clause superset cl denoted cl cl cl 
proposition shows clause subset expressed terms clause intersection clause equality exactly happens conventional set operations 
proposition context specifier clauses cl cl hold cl cl cl cl cl cl cl cl cl cl cl cl cl cl cl cl cl 
proof set dimensions consider left side expression true 
respect wd cl wd cl wd cl wd cl wd cl proposition wd cl cl cl wd cl 
definition cl cl cl cl cl 
way easy show right side expression holds left side holds 
expression obvious definitions operations involved 
clause proper subset superset defined referring set dimensions defined respect particular proposition clause intersection clause equality depend easy see dmin contains dimensions encountered cl cl cl cl cl cl cl cl cl cl cl cl cl cl dmin dmin 
checking clauses clause proper subset superset may need take account domains dimensions encountered clauses 
trivial case cl cl contain dimension specifiers dmin defined nonempty set 
case result proper clause subset holds possible set dimensions 
formalism context concerning empty clause universal clause obvious cl cl cl cl cl cl context specifier clause cl example lang detail format en gr sp low high ps pdf cl detail low high cl lang en gr detail low high format ps cl lang gr detail high format ps cl lang gr sp detail low hold cl cl cl cl cl cl cl cl context specifiers section introduce context specifiers contexts short define operations context specifiers context operations operations defined context specifier clauses clause operations 
mentioned section context specifier clause express possible set worlds 
context specifiers structures able represent set worlds 
definition context specifier nonempty set context specifier clauses cl cl cl 
stated symbol cl standing clause identify clause variables operations 
special symbol context specifier variables 
symbol standing context disambiguate necessary context operations hand clause operations conventional set operations 
correspondence worlds essentially context specifier disjunction context specifier clauses 
relation context specifiers worlds explained definition 
definition set worlds dddd represented context specifier union sets worlds dddd represented clauses contained context specifier 
wd wd cl wd cl wd cl cl cl cl formula formalism context proposition shows possible set worlds expressed context specifier 
proposition set worlds wn dddd exists context specifier wd proof formula formula wd elements form wi dk vk 
consider clause cl dk vk 
obvious formula wd cl wi 
consider context specifier containing clauses wi wd frame set dimensions terms context context specifier set worlds interchangeably 
proof proposition shows finite vd finite exists finite context specifier representing possible set worlds 
note set worlds represented number different context specifiers 
clauses context specifier may correspond overlapping sets worlds context specifier may contain infinite number clauses representing finite set worlds 
set worlds represented context specifier obtained formula operations clause expansion clause extension defined section 
alternatively possible directly operations context expansion context extension defined follows 
context expanded form context expansion unary operation takes context specifier returns context specifier 
context expansion performed respect set dimensions sets dimension domains vd set context specifiers resulting context called expanded form context respect defined follows definition dddd set dimension names cl cl cl context specifier 
context expansion respect dddd called expanded form dddd denoted context specifier cl cl cl cl cl cl 
clauses expanded form context specifier contain dimension specifiers correspond exactly dimensions expanded form context specifier equivalent context specifier respect sense represent set worlds respect proposition context specifier expanded form respect dddd represent set worlds dddd set dimensions dddd 
formalism context proof claim obvious formula proposition 
notice expanded form context contain empty set clause expansion return empty set 
context extension context extension unary operation takes context specifier returns set sets dimension value pairs 
set context specifiers context extension defined 
definition set contexts context extension context specifier cl cl cl denoted set cl cl cl cl cl cl 
set result clause extension contains dimension value pairs exactly dimensions 
contrast clause extension result context extension may contain sets different cardinality consisting pairs correspond different dimensions 
context extension context expansion context specifier give set worlds exactly happens clauses 
proposition worlds dddd represented context specifier context extension expanded form dddd wd formula proof cl cl cl context specifier 
definition definition cl cl cl cl cl cl cl cl cl cl cl cl cl cl cl 
expression formula equal wd cl wd cl wd cl formula equal wd 
context expanded extension context expansion context extension give set worlds represented context specifier 
operation combines context expansion context extension introduced shorthand 
context expanded extension unary operation takes context specifier returns set worlds context expanded extension performed respect set dimensions sets dimension domains vd sw set context specifiers sw contains sets worlds context expanded extension defined 
definition context expanded extension respect dddd context specifier denoted defined follows 
formalism context formula take form wd context equality context equality binary operation takes context specifiers returns boolean value 
boolean set contexts context equality inequality defined follows definition dddd nonempty set dimension names context specifiers 
context equal denoted iff wd wd wd set worlds dddd represented iff wd wd context equal denoted context equality defined referring set dimensions defined respect particular proposition shows context specifiers context equal set dimensions context equal 
symbol proposition express context equality proposition context specifiers dddd dddd sets dimensions 
hold respect dddd respect dddd respect dddd respect dddd 
proof similar proposition 
proposition assumption stated section sets dimensions consider contain dimensions encountered contexts involved 
dmin contains dimensions encountered dmin dmin 
conventional set equality sufficient comparing context specifiers directly possible context specifiers different form represent set worlds context specifiers context equal represent set worlds regardless form 
example lang detail format en gr sp low high ps pdf checking context specifiers context equality may need take account domains dimensions encountered context specifiers 
formalism context lang en gr detail high lang gr detail low lang en detail high lang gr detail low high detail low high format ps pdf lang gr sp detail low high lang en detail low high hold example contexts different forms represent set worlds context contains universal clause cl represents possible world context equal 
case contains clauses cover completely ud 
empty context universal context clause counterparts empty context common symbol contexts represent world set dimensions universal context common symbol contexts represent universe ud definition dddd nonempty set dimension names dddd domain 
context specifier wd set worlds represents respect dddd 
iff wd called empty context denoted iff wd ud ud universe dddd called universal context denoted empty context universal context defined referring set dimensions defined respect particular section stated requirement set dimensions contain dimensions encountered contexts involved 
dmin contain dimensions encountered context specifier 
easy see empty context empty context dmin dmin 
similarly universal context universal context dmin dmin 
formula definition gives wd formula wd ud formula definition formula formula take form wd determining context specifier empty context universal context needs take account domains dimensions encountered context specifier 
wd ud formalism context formula see empty context contain empty clauses 
stands context specifier form cl cl 
contexts context equal represent empty set worlds likewise context specifier form cl cl cl contains universal clause represented universal context apart context specifiers containing universal clause universal context covers kind context specifiers shown case example 
example lang detail en gr sp low high detail low high detail low lang en sp lang gr sp detail low high lang en detail low high example context specifiers universal contexts 
contexts contains universal clause 
context hand contain universal clause 
clauses taken represent possible worlds contexts represented context equal represent universe ud set dimensions evident stands member set context equal context specifiers representing empty set worlds similarly stands member set context equal context specifiers representing universe note expanded form empty context empty context expanded form universal context universal context 
interesting point context universal context respect possible set dimensions context empty context respect possible set dimensions 
follows sign equality expressions form implies context equal context specifiers represented equality expressed context equality 
similarly sign equality expressions form implies context equal context specifiers represented equality expressed context equality 
simplification context specifiers shown proposition context specifiers represent set worlds encompassing number context specifier clauses 
important realize clauses context specifier may represent overlapping sets worlds sets subsets redundancy affect operations context specifiers formalism context se mean increased complexity context operations 
useful express context specifiers economical way eliminating redundant elements 
example example demonstrates possible simplification cases 
starts number clauses continues combinations clauses context specifiers 
cl lang en gr cl lang en gr detail low high cl lang en gr detail low cl lang sp gr detail low cl cl cl 
cl cl cl cl 
cl cl 
cl cl cl cl cl cl cl cl cl cl cl cl lang en gr sp detail low cl cl cl cl cl cl lang en gr sp detail low note example cl cl cl cl cl 
explains possible alternative forms contexts clauses clause subsets contribute new worlds context 
holds true cl cl cl cl cl cl cl clause cl possible simplification context specifier involves elimination clauses subsets clauses context specifier 
context specifier contains universal clause cl clauses context specifier omitted universal clause represents possible world 
case example 
context specifier empty clauses cl contribute worlds final result 
clauses omitted context specifier set worlds represented context specifier change 
note possible omit clause context specifier context specifier defined nonempty set 
cases shown example 
context shows clauses combined single clause 
possible clauses differ just dimension specifier concerning dimension 
resulting clause consist dimension specifiers common clauses plus dimension specifier belongs clause belongs second 
considered case clause union returning clause explained section possible demonstrated example 
process simplification lead context specifier form 
worlds contexts context equal simplified forms may equal conventional set sense continue context equal 
shown example context specifier transformed context specifiers different form simplification possible 
dimension domains taken account determining universal contexts dealing dimension specifiers form vd may lead simplification clauses 
context intersection formalism context context intersection binary operation takes context specifiers returns context specifier 
set context specifiers context intersection defined follows definition context specifiers 
context intersection context specifier cl cl cl cl cl 
context intersection involves clause intersection pair clauses context specifiers 
example consider lang en gr detail high lang en detail low lang gr cl format ps pdf cl lang gr detail high cl lang en gr detail high format ps pdf context intersection context specifiers represents worlds common context specifiers shown proposition 
proposition context specifiers wd wd sets worlds dddd represent wd wd wd 
proof cl cl cl cl cl cl 
sequence definition formula proposition distributive property set union intersection formula wd wd cl cl cl cl cl cl cl cl cl wd cl cl cl wd cl cl cl wd cl cl cl wd cl wd cl wd cl wd cl wd cl wd cl wd cl wd cl wd cl wd cl wd cl wd cl wd wd 
proposition follows context intersection context specifier empty context gives empty context addition context specifier context intersection universal context gives context specifier represents worlds set dimensions formula formula formalism context note formula context equality conventional equality 
result context intersection formula necessarily context specifier context equal clause intersection context intersection performed account specific set dimensions 
words identical 
addition shown proposition represents worlds common represents worlds common 
dmin contains dimensions encountered result context intersection correctly interpreted dmin mutually exclusive contexts context specifiers mutually exclusive represent disjoint sets worlds 
definition context specifiers mutually exclusive iff wd wd wd set worlds represented set dimensions dddd 
proposition see contexts mutually exclusive contexts mutually exclusive result context intersection empty context context mutually exclusiveness defined referring set dimensions defined respect particular context intersection depend follows contexts mutually exclusive mutually exclusive supersets dmin 
follows formula empty context mutually exclusive context including empty contexts 
formula see universal context mutually exclusive context empty context 
context union clause union section mentioned context specifier clauses closed operations union difference 
cases union clauses represented single clause general case represented context specifier 
context specifiers hand closed operation context union 
defining context union define clause union 
clause union definition context union included completeness 
clause union clause union cl binary operation takes context specifier clauses cl cl returns context specifier cl cl cl cl set clauses set context specifiers clause union defined follows definition cl cl context specifier clauses 
clause union cl cl cl context specifier cl cl 
example consider formalism context cl lang en gr detail high cl lang en gr detail low cl lang sp detail low cl cl cl lang en gr detail high lang en gr detail low lang en gr detail high low cl cl cl lang en gr detail low lang sp detail low lang en gr sp detail low cl cl cl lang en gr detail high lang sp detail low interesting note case cl cl cl cl cl cl result context equal context containing clause cases union clauses expressed compactly single clause 
case cl cl cl factorization possible result expressed context specifier 
proposition cl cl context specifier clauses wd cl wd cl sets worlds dddd represent wd cl cl cl wd cl wd cl 
proof claim obvious definition formula 
note clause union performed account specific set dimensions 
dmin contains dimensions encountered result clause union correctly interpreted dmin context union context union binary operation takes context specifiers returns context specifier 
set context specifiers context union defined follows definition context specifiers 
context union context specifier 
context union context specifiers contains clauses context specifiers 
context union conventional set union introduced reasons uniformity notation 
example consider formalism context lang en gr detail high lang en detail low lang gr lang en gr detail high lang en detail low lang gr context union context specifiers represents union worlds specified contexts shown proposition 
proposition context specifiers wd wd sets worlds dddd represent wd wd wd 
proof cl cl cl cl cl cl 
definition formula wd wd cl cl cl cl cl cl wd cl wd cl wd cl wd cl wd cl wd cl wd wd 
proposition context union context specifier universal context gives universal context context specifier context union empty context gives context specifier represents worlds formula formula note formula context equality conventional equality 
result context union formula necessarily context specifier context equal context intersection context union performed account specific set dimensions 
words identical 
addition shown proposition represents worlds represents worlds 
dmin contains dimensions encountered result context union correctly interpreted dmin context difference clause difference section mentioned context specifier clauses closed operation difference 
just seen clause union cases difference clauses represented single clause general case represented context specifier 
context specifiers closed operation context difference 
defining context difference discuss clause difference 
clause difference clause difference cl binary operation takes context specifier clauses cl cl returns context specifier cl cl cl cl set clauses set context specifiers clause difference defined 
definition formalism context cl cl context specifier clauses 
clause difference cl cl denoted cl cl cl context specifier defined follows 
cl cl 

cl cl 

cl cl cl contains clauses dimension specifier cl cl clause di vi di vi cl di belongs dimension specifier cl cl clause di vi di vi cl belongs note cl definition cl possible set dimensions 
clause difference comprehended example 
example number cases clause difference listed 
reminder result clause difference context specifier 
en gr sp low medium high ps pdf html doc euro usd 
cl lang en gr detail low high cl lang en gr detail low cl cl cl lang detail low high lang en gr detail high 
cl lang en gr detail low high format pdf cl lang en gr detail low cl cl cl lang detail low high format pdf lang en gr detail high format pdf 
cl lang en gr detail low cl lang en gr detail low high cl cl cl lang detail low lang en gr detail 
cl lang en detail low medium high format pdf ps cl lang en detail low format pdf html doc cl cl cl lang detail low medium high format pdf ps lang en detail medium high format pdf ps lang en detail low medium high format ps 
cl lang en gr detail low high formalism context cl lang en format ps pdf currency usd cl cl cl lang gr detail low high lang en gr detail low high format html doc lang en gr detail low high currency euro cases covered definition result clause difference clauses exist dimension specifiers cl 
cases example clauses clause difference represent world clause results contain dimension specifiers correspond exactly dimension specifiers cl 
cases value dimension detail corresponding second clause result conventional set difference corresponding values cl cl 
note dimensions exist cl cl simply transferred result format case 
case demonstrates case cl contains dimensions exist cl 
dimension clause added result containing difference domain vd 
definition easy see hold universal clause cl empty clause cl cl cl cl formula cl cl cl cl formula cl cl cl formula rest clause operations clause difference defined way direct correspondence set worlds defined clauses specifically represents difference sets worlds defined involved clauses shown proposition 
proposition cl cl context specifier clauses wd cl wd cl sets worlds dddd represent wd cl cl cl wd cl wd cl 
proof note wd 
left side equality operates context specifier wd 
right side operate context specifier clauses 
formula see claim holds cl universal clause cl 
addition formula formula claim holds cl cl cl empty clause cl 
follows assume cl cl nonempty dimension specifiers cl form 
conditions covered case definition 
clause difference defined case definition represents worlds belong cl cl show follows 
consider clause represents worlds cl 
clause contain dimension specifiers dimension encountered cl omission dimension specifier constraint cause inclusion extra worlds represented cl trivial case vd cl 
consequently ways clause represent subset worlds cl contain dimension specifiers cl include additional dimension specifiers cl 
left worlds belong cl contain pairs formalism context cl 
cl cases correspond cases cl case clause cl represents worlds cl cl determined dimension cl case clause cl additional dimension specifier vd represent worlds cl cl determined dimension dimension specifier vd implied cl 
worlds represented clauses belong cl belong cl world properties outside clauses 
union worlds represented clauses clause dimension specifier cl give worlds cl exist cl 
case definition clauses form result cl cl cl union worlds represented clauses wd cl cl cl formula 
note cases example clause difference take account dimension domains just happens clause intersection clause union 
case see cl contains dimension specifier dimension contained cl vd domain taken account 
order keep vd picture introduced special syntax denote complement vd instance currency usd format ps pdf 
approach just transfer problem definition operations clause intersection 
section convenient notation context includes similar syntax dimension specifier complement 
meant syntactic shorthand dimension domains assumed finite discrete substitution possible complements eliminated performing context operations 
clause difference may occasionally need take account dimension domains considered stated section 
clause intersection clause union clause difference performed account specific set dimensions 
words cl cl cl cl cl cl identical 
addition shown proposition represents worlds covered cl cl represents worlds covered cl cl 
dmin contains dimensions encountered cl cl results clause difference correctly interpreted dmin context difference context difference binary operation takes context specifiers returns context specifier 
set context specifiers context difference defined terms clause difference context intersection context union 
definition cl cl cl cl cl cl context specifiers 
context difference denoted context specifier defined context union context specifiers cl cl cl cl cl cl cl cl cl cl 
context specifier called context complement formalism context set worlds represented context difference contexts equal difference sets worlds represented contexts proposition context specifiers holds wd wd wd 
proof lets assume cl cl cl cl cl cl 
formula wd wd wd cl wd cl wd cl wd cl wd cl wd cl wd cl wd cl wd cl wd cl wd cl wd cl wd cl wd cl 
proposition expression wd cl cl cl wd cl cl cl wd cl cl cl wd cl cl cl 
proposition expression wd cl cl cl cl cl cl wd cl cl cl cl cl cl proposition wd cl cl cl cl cl cl cl cl cl cl cl cl 
definition expression wd 
proposition hold universal contexts empty contexts formula formula formula note formula conventional equality context equality implied proposition 
formula derived definition formula 
definition see context difference defined terms context intersection context union clause difference performed account specific set dimensions 
dmin contains dimensions encountered results context difference correctly interpreted dmin context subset context subset proper context subset binary operations take context specifiers return boolean value 
boolean set contexts boolean set contexts context subset superset proper context subset superset defined follows definition dddd nonempty set dimension names dddd domain 
context specifiers 
context subset denoted equivalently context superset denoted iff wd wd wd set worlds dddd represented formalism context wd wd proper context subset denoted equivalently proper context superset denoted 
definition possible determine context specifier proper context subset context specifier comparing corresponding sets worlds addition context subset expressed terms context intersection context equality exactly happens conventional sets 
proposition context specifiers hold 
proof consider left side expression true 
wd wd wd wd wd proposition wd wd 
definition 
way right side expression holds left side holds 
expression obvious definitions operations involved 
context proper subset superset defined referring set dimensions defined respect particular proposition context intersection context equality depend easy see dmin contains dimensions encountered dmin dmin 
concerning empty context universal context obvious context specifier properties context operations section introduced number operations context specifier clauses context specifiers established relationship contexts sets worlds 
stated properties context operations specifically involve empty contexts universal contexts section investigate properties context operations detail 
context specifiers important property exhibited clauses closed operations context intersection context union context difference definitions operations easy see result context specifier 
case expanded form context specifier context specifier 
addition finite vd context specifiers involved finite result context operations including context extension finite 
follows assume finite context specifiers 
checking context specifiers context proper subset superset may need take account domains dimensions encountered contexts 
dependence dimensions formalism context context operations separated groups 
group consists operations performed account specific set dimensions context extension context intersection context union context difference context equality inequality proper context subset superset 
second group consists operations performed respect specific set dimensions marked symbol operation sign context expansion context expanded extension 
follows set aside operations transforming contexts sets worlds context expansion context extension context expanded extension 
focus context equality inequality proper context subset superset context intersection context union context difference form context expressions context conditions introduced section 
operations give results respect different sets dimensions 
specifically seen performed respect dmin contains dimensions encountered contexts involved operation 
result correctly interpreted superset dmin 
leads useful context equality inequality proper context subset superset context intersection context union context difference adding dimensions affect results operations performed 
possible perform context operations knowing actual set dimension time 
context equality inequality proper context subset superset consider dmin actual enhance efficiency 
context intersection context union consider domain dimension vmin set values encountered contexts involved operation 
easy realize results operations hold vd vd superset vmin 
necessary know dimension domains performing context intersection context union 
contrary context difference operation needs take account actual domains dimensions result may depend dimension domains 
reason context equality inequality proper context subset superset take account actual dimension domains 
context equality context subset section types equality context specifiers conventional set equality context equality 
conventional set equality explained section clause contains dimension specifier clause contain corresponding dimension specifier take account actual domain vd result context equality inequality depends dimension domains lang gr en context equal detail low high gr en low high context equal case 
case proper context subset superset expressed terms context intersection context equality inequality showed section 
formalism context useful compares form contexts worlds represent 
context equality hand defined sets worlds represented contexts 
conventional equality restrictive context equality 
words holds note opposite entailment left hold 
definition evident context equality reflexive 
symmetric 
transitive 
properties context equality equivalence relation sr defines equivalence classes set context specifiers 
specifically context specifier equivalence class relative context equality set context specifiers 
equivalence class contains contexts represent set worlds likewise proper context subset superset properties similar properties proper subset superset conventional sets 
context intersection context union context difference showed operations correspond conventional set operations intersection union difference view context specifiers set worlds represent 
easy prove properties conventional set operations intersection union difference hold corresponding context operations 
example give proof associative law context intersection 
note context equality conventional set equality 
proposition context intersection associative proof left right sides give context specifiers 
context equal represent set worlds note proposition wd wd wd wd 
associative property conventional set intersection expression equal wd 
indicative list basic properties context intersection context union 
idempotent associative commutative distributive formalism context addition easy see conventional intersection union context intersection context union monotone 
likewise context difference properties similar properties conventional set difference 
context expressions context conditions context expression expression comprised context specifiers joined context intersection context union context difference brackets defining precedence context operations 
context condition condition comprised context expressions compared context equality inequality proper context subset superset combined qualified brackets defining precedence 
replacing context specifier context equal context specifier yields equivalent context expression expression representing set worlds original context condition 
context expanded form simplified forms discussed section context specifier context equal substitute context expressions context conditions 
complexity context operations time complexities context operations discussed section number comparisons performed 
assume size problem represented number clauses context specifiers 
number greater number worlds overlapping clauses allowed 
furthermore operations context intersection context union context difference increase number clauses contained context specifiers assume set dimensions cardinality assume mean cardinality dimension domains number worlds defined assume context specifiers ordered manner dimension values dimension specifiers ordered numeric value alphabetically dimension specifiers inside clauses ordered lexicographical ordering dimension names 
section showed number clauses reduced simplifying context specifiers 
formalism context context intersection assume mean number dimension specifiers clauses mean number dimension values 
clause intersection clauses compare dimension specifiers dimension dimension value sets compared 
number comparisons performed worst case 
contains clauses contains clauses estimated total number comparisons worst case 
upper bounded frame problem set dimensions corresponding domains finite 
consider mean number clauses order time complexity worst case 
context union context union perform comparisons order time complexity 
context expanded extension contains number clauses expansion perform number comparisons worst case 
extension stage perform comparisons order time complexity worst case 
elimination duplicate worlds increase number comparisons 
particular elimination duplicate worlds requires comparisons pair clauses mean number worlds represented clauses total number comparisons context expanded extension elimination duplicates worst case order time complexity simply 
factor corresponding extra cost eliminating duplicate worlds avoided contains clauses mutually exclusive 
context intersection preserves quality words contain mutually exclusive clauses contains mutually exclusive clauses 
maintaining contexts form requires properly reform result context expression involves context unions context differences 
context equality assume number worlds represented comparisons worst case plus comparisons needed context expanded extension 
order time complexity worst case context expanded extension contain overlapping clauses mean number clauses 
clauses mutually exclusive order time complexity context equality worst case 
context subset context equality 
discussion leads consider context specifiers containing clauses mutually exclusive 
case context contain clauses worlds 
total number possible worlds assuming context specifiers consist mutually exclusive clauses order time complexity worst case follows 
context intersection remains 
context union 
context expanded extension context equality context subset 

formalism context notice cost maintaining context specifiers state clauses mutually exclusive falls context union context difference compare rearrange clauses 
stated section efficiency context equality inequality proper context subset superset enhanced considering dmin set dimensions dmin contains dimensions encountered contexts involved operation 
notation context specifiers previous sections formally defined context specifiers context operations 
section introduce simpler convenient syntax context specifiers context operations 
example examples context specifiers 
time 
lang greek detail low medium 
lang greek spanish detail high 
season summer season fall spring daytime noon 
time 
format pdf lang spanish 

example context specifier consists clause containing just dimension specifier formally written time 
context specifier consists clause contains dimension specifiers dimension lang dimension detail 
context specifier uses equal counterpart formal definition dimension specifiers 
just syntactic shorthand assume dimension domains known time contexts 
addition stated section assume finite dimension domains described enumerating elements 
possible find set complement implied operators express contexts way formal counterpart 
context specifier contains clauses represents worlds summer fall spring noon 
context specifier shows shorthand representing intervals bounded discrete totally ordered dimension domain 
context specifier consists clauses second clause contain corresponds universal clause third clause symbol corresponds empty clause 
formal counterpart context specifier universal context set dimensions formal counterpart context specifier empty context set dimensions 
grammar context specifiers table extended backus naur form ebnf ebnf short 
symbols defined regular expression start capital letter example symbols defined ebnf start lowercase letter example 
table syntax context specifiers 
formalism context 

expect legal context specifiers contain empty sets lang english detail lang english detail 
case implied detail ranges complete domain 
addition keyword shorthand complete domain dimension instance time context specifiers containing eventually substituted context equal context specifiers contain operators 
consequently cases dimension domains taken account performing operation notation context operations table follows 
table notation context operations 
operation symbol notation context equality context inequality context subset superset proper context subset superset context intersection context union context difference notation possible form context expressions context conditions lang greek detail low medium lang greek format pdf detail high lang english format pdf lang english format pdf obviously dimension specifier form completely omitted clause 
despite keyword useful shall see chapters discuss context patterns 
includes context intersection context union depend dimension domains 
summary formalism context contrary traditional databases information web associated underlying context 
chapter developed formalism representing context flexible intuitive way variables called dimensions 
context specifiers define contexts constraining possible values dimensions take combining dimension constraints conjunctions disjunctions 
gave semantics context showing viewed set possible worlds world environment information obtains unambiguous meaning 
defined number context operations combining comparing contexts proved operations observe correspondence conventional sets possible worlds 
investigated properties context operations discussed time complexities 
important advantage approach context operations performed knowledge dimensions involved incomplete case correspondence contexts sets worlds deferred knowledge dimensions complete 
proposed convenient notation expressing contexts context operations 
data model mssd previous chapter introduced context specifiers way represent context multiple dimensions explained semantics correspondence worlds defined number context operations formulate context expressions context conditions 
context specifiers key difference conventional data contextdependent multifaceted data called multidimensional data approach 
context specifiers play central role data models query languages multidimensional data 
chapter propose data model multidimensional semistructured data mssd called multidimensional object exchange model called multidimensional oem moem short 
moem particular case graph data model called multidimensional data graph incorporates context specifiers uses special nodes edges represent multidimensional entities 
semistructured culture schema exists part data embed context information graph model 
moem multidimensional data graph extend object exchange model aqm suc oem predominant graph model semistructured data originally designed stanford university part tsimmis project cgh ghi 
show moem number different oems holding different worlds 
need oem extension recognized problem representing histories changes oem databases addressed 
chapter discuss investigate problem detail 
model semistructured data deviates oem proposed bdt edge labels pieces semistructured data 
model propose views labels containing metadata data 
extensible semistructured data model proposed uses sets properties form property name property value edge labels 
attaching properties graph rich metadata 
different properties may different semantics results model increased generality hand formulation queries complicated 
goal approach represent information presents different facets 
leads common semantics metadata solely embody context information 
addition model retains oem labeled edges attaches context metadata new type edges graph models oem special cases model propose 
follows define notion multidimensional entity explain context specifiers multidimensional entities 
proceed multidimensional data graph investigate properties propagation context reduction context determinism canonical form 
properties define multidimensional oem special case multidimensional data graph 
introduce mssd expressions way textually represent multidimensional data graphs 
data model mssd multidimensional entities multidimensional data context qualify facets information entity stating conditions facet holds time providing frame interpreting information unambiguous way 
information entity comprised number facets holding number worlds called multidimensional entity 
definition multidimensional entity information entity encompasses zero facets corresponding contexts define worlds facet may hold 
facets multidimensional entity may multidimensional entities conventional information entities combination 
multidimensional entities cornerstone multidimensional data encompass context specifiers confined appear multidimensional entities keep information entities constitute facets entity 
multidimensional entity may number facets facets trivial case facets conventional information entities may different values note conventional information entities considered special case multidimensional entities exists facet holding possible world facet context universal context 
restrictions respective context facet facets multidimensional entity may qualified contexts overlap define common worlds empty contexts trivial case 
multidimensional entity obliged cover possible world facets world zero facets multidimensional entity may hold set worlds sw principal ways select facets multidimensional entity select facet holds world sw assume conjunction implied worlds sw 
second assume disjunction select facet holds world belongs sw 
facet holds world represented context say facet holds definition context specifier multidimensional entity 
fi facet ci context specifying worlds fi holds 
say fi holds iff ci 
context multidimensional entity fk fl fm facets hold say evaluates fk fl fm context multidimensional entity may evaluate zero facets 
note trivial case multidimensional entity facets evaluates facet 
conventional meant context dependent 
shall see section case multidimensional semistructured data facets multidimensional entity may types structure 
ways section defining reduction oem partial reduction respectively 
data model mssd stated facets multidimensional entity may different values 
specifically mssd facets multidimensional entity may different types words different structure 
line loose typing conventional semistructured data instances class objects may exhibit varying structure 
multidimensional data graphs section multidimensional data graph data model extends oem incorporating context specifiers 
oem similar graph web data models principle capable representing multidimensional entities fall short number reasons 
hidden semantics addressing directly issue multiple facets responsibility application assign semantics ad hoc manner 
cumbersome notation representing multiple facets entity done elegant way 
duplication information ad hoc approach may lead duplicating information common undesirable 
multidimensional data graphs avoid shortcomings treating multidimensional entities class citizens 
special nodes edges model multidimensional entities distinguish conventional ones 
addition notation context introduced previous chapter qualifying facets multidimensional entities 
seen chapter oem rooted directed labeled multigraph flexible tolerate irregularities semistructured data 
number oem variants proposed attach labels nodes edges mag aqm ffls bfs 
question labels attached nodes edges recurring graph models semistructured data xml approach gives answer 
labels attached nodes label property object nodes represent objects labels attached edges label property relation objects 
attaching labels edges allows nodes see node different names 
follows refer oem assume labels attached edges approach taken multidimensional data graphs 
formal definition oem adopt suc see chapter 
start oem 
essential component mssd model context specifiers 
context specifiers quite independent particular data model existing data model semistructured data considered infrastructure incorporating context specifiers 
investigating properties mssd level model expressive simple selected 
expressive capture essential aspects semistructured data 
simple possible number fundamental concepts extending new concepts entail unnecessary complications 
xml xml wal cha gained wide acceptance exchange format logical model web data xml strong candidate incorporating context data model mssd specifiers 
xml number syntax particularities complicates incorporation context specifiers 
specifically element xml document relate element different ways include element directly identifiers attributes special types idref idrefs 
ways syntactically different difference reflected xml graph data models 
ways basically describe element subelement relationship 
reason having ways describing essentially thing xml document element included parent elements 
syntactic mechanism idref attributes needed transform xml document tree flexible graph allow element shared parent elements 
desirable select model purged complications form basis investigating properties mssd 
reasons selecting oem starting point expressive simple represents information uniform consistent way 
uniformity easier incorporation new features context specifiers able concentrate new features affect small number fundamental concepts worrying secondary syntactic issues 
chapter introduce multidimensional xml mxml short context multidimensional entities xml 
representing multidimensional entities model multidimensional entities introduce new basic graph elements multidimensional nodes multidimensional node represents multidimensional entity group nodes constitute facets entity 
multidimensional nodes rectangular shape distinguish conventional circular nodes 
context edges context edges directed labeled edges connect multidimensional node facets 
label context edge pointing facet context specifier defines set worlds holds 
context edges drawn thick double lines distinguish conventional edges drawn single thin lines 
facets multidimensional entities represented conventional oem style circular nodes called context nodes 
nodes multidimensional data graph context multidimensional considered objects unique object identifier oid short 
oem oids convention preceded character 
follows terms node object interchangeably 
graphical representation multidimensional entities 
lang en format html lang gr det low det low med format pdf lang en gr format ps det high med format pdf lang en det low med lang gr det low med lang en format pdf data model mssd depicts couple multidimensional entities denoted 
multidimensional node represents multidimensional entity facets comprise context nodes multidimensional nodes 
facets hold disjoint sets worlds words world facet holds hand facets multidimensional entity comprise nodes hold common worlds 
context specifier lang en det med high format pdf multidimensional entity evaluates node node facet holds world covered 
context specifier lang en det med high format pdf lang gr context superset multidimensional entity evaluate nodes facets hold worlds covered 
seen previous chapter context specifiers may different forms represent set worlds 
consequently multidimensional entities may comprise different context specifiers essentially long respective context specifiers context equal 
addition multidimensional entities represented graphically number alternative ways time preserving worlds facet holds 
alternative ways representing multidimensional entities 
see pairs equivalent multidimensional entities 
pair shows nested multidimensional entities expressed flat multidimensional entities facets context nodes combining contexts context intersection 
pair shows context edges share source destination substituted note notation context specifiers introduced previous chapter examples formal notation continues definitions 
evident sections multidimensional data graphs equivalent multidimensional entities reduced identical oem graphs possible world 
data model mssd single context edge context union 
principles exhibited pairs easy show cyclic paths consisting context edges significant ignored depicted pair context example ignored represent world hold represented respectively 
pair shows conventional entity represented context node right considered multidimensional entity having facet holds world 
pair shows trivial case multidimensional entity facets equivalent entity having facets hold world 
multidimensional data graphs multidimensional data graph multidimensional entities conventional entities interconnected conventional oem edges drawn single thin lines 
lines called entity edges define relationships objects explained section terms node object interchangeably 
entity edges depart context nodes point context multidimensional nodes multidimensional node plays role surrogate facets 
existence kinds nodes kinds edges raises question node edge combinations meaningful 
constraints morphology multidimensional data graph context edge start context node 
entity edge start multidimensional node 
path multidimensional data graph consist context edges entity edges sequence 
oem context nodes divided complex atomic 
atomic objects value basic types integer real strings value complex object set object represented entity edges 
similarly value multidimensional object set object represented context edges 
equivalently edges may treated incorporated objects values considered right 
case values complex objects multidimensional objects assumed reserved values respectively 
follows formally define multidimensional data graph 
explained step function uses reserved values classify nodes multidimensional context complex context atomic 
definition cs set context specifiers set labels set atomic values 
multidimensional data graph finite directed edge labeled multigraph vmld vcxt ecxt eett 
set nodes consists multidimensional nodes context nodes vmld vcxt 
context nodes divided complex nodes atomic nodes vcxt vc va say context edges formulating cycle obsolete cyclic path ignored evaluating multidimensional entity 
special case cyclic path consists just context edge edge obsolete 
data model mssd 
set edges consists context edges entity edges ecxt eett ecxt vmld cs eett vc 

root property exists path node 
function assigns values nodes vmld vc va reserved values value function va assigns values atomic nodes 
note atomic nodes multidimensional data graph leaves leaves restricted atomic nodes kind node complex multidimensional 
addition root multidimensional data graph may context node multidimensional node 
easy recognize oem special case multidimensional data graph multidimensional nodes context edges leaves restricted atomic nodes 
multidimensional data graph example depicting contextdependent recreation guide 
music club recreation guide restaurant menu name address review parking name address review review parking season fall winter spring season summer detail high detail low score street floor detail high detail low score comments lang fr lang gr lang en city street zipcode city street comments score detail high season summer score comments lang gr daytime noon season summer daytime noon lang en terrace lang gr athens daytime evening daytime noon daytime evening daytime noon th multidimensional data graph example context dependent recreation guide simplicity graph fully developed atomic objects values attached 
dimensions respective domains follows season ranging summer fall winter spring daytime oem additional labeled edge points root order give name root extension graph corresponding semistructured database 
data model mssd ranging noon evening detail ranging high low lang ranging en fr gr 
restaurant oid normally operates fifth floor summer noon operates terrace 
floor oid multidimensional object atomic value depends dimensions season daytime 
having different value context objects different structure case facets multidimensional object address oid 
case music club oid operates different address summer rest year athens greece unusual clubs move south close sea summer period north city center rest year 
menu club available languages english french greek 
restaurant club number reviews detailed brief depending dimension detail 
addition couple alternative parking places depending time day expressed dimension daytime 
set dimensions context specifiers multidimensional data graph interpreted respect set dimensions assumed accompany graph 
important realize shown previous chapter necessary transforming context specifier set worlds context expansion context expanded extension rest context operations necessary take actual account 
reason follows assume set dimensions multidimensional data graph consists dimensions encountered explicitly stated 
dimension domains needed context operations context intersection context union context extension 
simplicity domain dimension assumed consist values dimension encountered multidimensional data graph explicitly stated 
important difference assumptions 
assumption concerning dimension domains just convention simplifying examples real application actual domains probably yield different results 
assumption concerning set dimensions seen optimization really matter actual set dimension context expansion context expanded extension needs performed 
context propagation context specifiers attached context edges intended contexts necessarily actual contexts respective facets 
understand consider multidimensional entity evaluates facet world pointed object hold survive father exist observation leads definition explicit context notion inherited context topic section 
definition data model mssd vmld vcxt ecxt eett multidimensional data graph 
explicit context edge ecxt eett 
context specifier attached context edge explicit context edge explicit context entity edge universal context denoted seen implying entity edges intended hold world 
nodes explicit context 
follows define explicit context path 
definition vmld vcxt ecxt eett multidimensional data graph gn edges define path ec ec ecn respective explicit contexts gn 
path explicit context ecp ec ec ecn 
path explicit context gives worlds path intended hold prescribed explicit contexts edges path 
inherited context explicit context considered true context boundaries single multidimensional entity 
entities connected multidimensional graph explicit context edge true context sense determine worlds destination node holds 
reason entity part pointed edge entity substance worlds substance 
conceived context holds inherited 
context propagated way combined constrained explicit context edge give inherited context edge 
edges nodes explicit context edges nodes inherited context 
important emphasize consider inherited contexts explicit contexts determining worlds node edge holds 
particular node edge holds world inherited context node edge covers follows node edge holds context inherited context context superset definition vmld vcxt ecxt eett multidimensional data graph icr inherited context node inherited context node icp ic ic icn ic ic icn inherited contexts edges lead node icq inherited context node edge departs ech explicit context inherited context edge context specifier ich ich icq ech ich represents set worlds 
introduce inherited coverage replace inherited context determining worlds node edge holds 
data model mssd condition definition inherited context edge discussed section 
calculation inherited context inherited context root known calculate inherited context node edge traversing graph breadth manner 
case graph contain cycles simple breadth traversal suffice node visit inherited context parents calculated possible find inherited context current node calculating inherited contexts incoming edges 
case depicted shows modified part graph 
inherited context edges written italics beneath explicit contexts labels context edges entity edges respectively 
inherited context node context union inherited contexts incoming edges 
example inherited context node detail low detail high context equal detail low high 
calculation inherited context 
review detail low detail low score detail low score detail high cuisine detail low high service detail low high detail high detail high comments detail high lang gr detail high lang gr lang en detail high lang en lang en detail low lang gr lang gr detail high lang en detail low detail high lang gr detail high lang gr lang gr lang gr lang gr things complicated case graph contains cycles 
inherited context node edge constitutes part cycle eventually defined terms 
shown cases fixed point ull exists gives inherited context node edge 
inherited context node depends edge eventually depends inherited context node 
suppose assume edge hypothetical inherited context marked bold 
data model mssd inherited context nodes edges result conforms fully definition inherited context far context unions context intersections concerned 
result conform condition definition stating inherited context edge represent set worlds 
correct inherited context nodes edges lang gr 
similar case demonstrated actual inherited contexts represent set worlds written edges italics 
find inherited context node start initial assumption lang gr inherited context edge 
calculate inherited context context edge node edge 
calculate inherited context gives different result time lang gr lang en detail low 
steps repeated changes occur inherited contexts nodes edges cycle results context equal previous pass 
process described applied strongly connected component multidimensional data graph na way evaluate fixed point 
turns exists fixed point giving inherited context context intersection context union monotone stated previous chapter 
addition composition monotone operations monotone 
number worlds represented context specifier set dimensions dimension domains assumed finite 
conditions ensure ull set context equations defining inherited contexts graph exists solution conforms definition 
solution fixed point context equations 
consequently problem calculating inherited contexts graph cycles rephrased evaluation fixed points 
na evaluation method repeat re calculating inherited contexts feeding results round changes observed results successive rounds calculations 
inherited context defined alternative way notion path inherited context 
definition vmld vcxt ecxt eett multidimensional data graph gn edges define path ic ic icn respective inherited contexts gn 
path inherited context icp ic ic icn 
path inherited context represents worlds edges path hold 
note definition nodes path including final nodes hold worlds 
proposition shows inherited context node defined terms path inherited context 
strongly connected component directed graph subgraph containing distinct nodes exists path proposition data model mssd inherited context node context union path inherited contexts paths start root lead proof lets consider world covered context union path inherited contexts 
necessarily covered inherited context edge pointing inherited context icq cover 
lets assume icq covers world covered context union path inherited contexts 
means inherited context edge pointing covers path starts root contains edge cover inherited context 
may emerged result preceded cycle 
remember definition allow cyclic introduce new unsolicited worlds inherited contexts requiring represent set worlds 
consequently inherited context context equal context union path inherited contexts paths start root lead proposition shows explicit contexts edges inherited contexts calculate path inherited context 
proposition vmld vcxt ecxt eett multidimensional data graph node inherited context icq path starts ecp path explicit context path inherited context icp icp icq ecp 
proof gn edges form path ic ic icn respective inherited contexts ec ec ecn respective explicit contexts edges 
definition path inherited context ci ic ic icn 
definition observe icq cover worlds ic ci context equal icq ic ic icn 
definition see inherited context edge cover worlds explicit context 
ci context subset ce icq ec ec ecn 
lets assume ce represents world covered ci 
covered icq ec ec ecn covered ic ic icn definition 
consequently ce context equal ci claim proven 
proposition proposition express inherited context node edge terms inherited context root explicit contexts edges avoiding recursion definition proposition inherited context node context union path inherited contexts path leading root node path inherited context context intersection explicit contexts edges path inherited context root 
similarly inherited context edge consider paths start root conclude edge 
proof proof evident proposition proposition definition 
data model mssd note graph contains cycles infinite number paths generated graph finite 
avoid generation infinite number paths pay attention traverse route multiple times 
alternative definition inherited context proposition transfers evaluation fixed points context specifiers worlds paths 
interesting point necessary take account set dimensions dimension domains calculating inherited contexts multidimensional data graph shown previous chapter context intersection context union depend domains dimensions significance inherited context starting root nodes edges multidimensional data graph hold world formulate subgraph holds multidimensional data graph may consolidate number graphs holding various contexts different subgraphs may substance different worlds 
inherited context node edge represents worlds node edge survives part subgraphs 
reason inherited context propagation constraints root leaves consequently inherited context node edge covers world constraint prevents node edge hold multidimensional data graph subgraphs hold various possible worlds multidimensional data graphs root definition inherited context inherited context edge covers world covered inherited contexts nodes edge connects 
edge holds world departure destination nodes hold words surviving edges point surviving node 
addition important stemming proposition inherited context node edge covers world node edge part path starts root path inherited context covers 
words nodes edges multidimensional data graph hold world accessible root path holds example context equality depends dimension domains 
shown proposition circles case example possible calculate inherited contexts context equality 
dimension domains necessary context specifiers graph contain syntax elements 
explicitly stated refer maximum subgraph holds entirely true see section introduce context coverage 
data model mssd subgraph holds world scale low shown 
contour scale low 
position scale low scale low scale low symbol scale low map city scale low scale low scale low 
scale low scale med scale med city scale med scale med scale med athens 
scale high contour scale med city scale med mountain scale med 


contour scale low 
position scale low scale low scale low symbol scale low map city scale low scale low scale low 
scale low athens simple example consider graph depicted represents cartographic information map displayed number different scales higher scales means features shown map 
scale low map oid consists rough contour oid area significant city oid 
scale medium map oid comprises detailed contour oid mountain oid couple cities oids 
map features may turn different facets depending scale determine presentation detail characteristics features 
example city oid facets low oid medium oid high oid scale 
low scale facet contains small symbol oid marking city map position oid symbol name oid city appear map 
high scale facet may detailed map city containing information blueprint streets buildings 
inherited context edges second line edge labels written italics 
inherited context nodes edges easy see node edge holds world 
example assuming world scale low node oid holds inherited context scale low med covers subgraph holds depicted 
notice edge scale high node high scale facet city oid inherited context empty context 
parts graph inherited context empty context hold world contained subgraph holding world 
emphasized parts important may contain useful information 
example consider data model mssd query graph give highest detail plan city low scale map athens 
answer query involve node inherited context empty context 
inherited context root definition inherited context follows inherited context root poses restriction graph 
intuitively constraining inherited context root project graph root hold world descendants may hold world 
consequently multidimensional data graph subgraph may hold world covered inherited context root 
easy see restrict inherited context root inherited contexts nodes edges graph respectively restricted 
proposition inherited context root restricted icr icr icr new inherited context node edge icr previous inherited context node edge 
proof proposition inherited context ic node edge pk pi path inherited context path starting root concluding node edge 
denote gi context intersection explicit contexts edges path ic icr icr icr gk icr inherited context root 
distributive law ic icr gk 
icr icr icr restricting root icr entails context intersection ic icr 
root holds possible world inherited context root universal context 
convenient assume inherited context root universal context 
shows restrict inherited contexts graph maintaining universal context inherited context root 
restricting inherited context root inherited context root oid want change new multidimensional node oid added points context edge having explicit context 
new node new root inherited context 
inherited context old root oid demonstrates method case initial root multidimensional node 
data model mssd point assume inherited context root multidimensional data graph universal context explicitly stated 
context coverage explained previous section multidimensional data graph may comprise number subgraphs multidimensional data graphs holding world 
point may remember leaves multidimensional data graph kind nodes atomic complex multidimensional leaves oem atomic nodes 
kinds graphs atomic nodes ones bare data question arises conditions leaves subgraph holds world atomic nodes 
order properly define relationship multidimensional data graph oem need way determine node multidimensional data graph reaches atomic nodes world 
achieved introducing notion context coverage 
context coverage nodes edges propagation explicit contexts leaves upwards root graph 
definition vmld vcxt ecxt eett multidimensional data graph node leaf 
context coverage leaf node context specifier vmld vc va node leaf 
context coverage internal node cv cv cv cv give context coverage edges depart node cvu context coverage edge points ech explicit context context coverage edge context specifier cvu ech represents set worlds 
context coverage similar inherited context explicit contexts propagating opposite direction 
calculation context coverage calculating context coverage essentially calculation inherited context discussed section 
propositions context coverage correspond section inherited context 
definition vmld vcxt ecxt eett multidimensional data graph gn edges define path cv cv respective context coverages gn 
path context coverage cvp cv cv 
required multidimensional data graph atomic nodes leaves guarantees leaves accessible world 
approach introduce multidimensional data graph general cover structure define moem restricted graph exhibits additional properties 
proposition data model mssd context coverage node context union path context coverages paths start lead leaf 
proof similar proposition 
proposition equivalently restated considering paths leading atomic nodes paths leading leaves complex multidimensional nodes contribute world context coverage proposition vmld vcxt ecxt eett multidimensional data graph node context coverage path leading ecp path explicit context path context coverage cvp cvp ecp 
proof similar proposition 
proposition context coverage node context union path context coverages path leading node atomic node path context coverage context intersection explicit contexts edges path 
similarly context coverage edge consider paths start edge atomic node 
proof proof evident proposition proposition definition 
addition simplification assumed context coverage atomic node universal context necessary take account proposition calculate path context coverage path leading atomic node 
evidently techniques calculating inherited context employed calculation context coverage 
simple way apply principle change direction edge graph calculate inherited context subgraph root atomic node initial graph 
proposition proposition context union inherited contexts atomic node node edge give context coverage node edge 
significance context coverage context coverage leaves complex nodes multidimensional nodes defined empty context denoted context coverage leaves atomic nodes defined universal context denoted 
stating obvious encodes rule atomic nodes leaves possible world complex multidimensional nodes leaves world 
proposition shows context coverage internal node represents worlds exists path atomic node 
clarify important example gives intuition cases possible extract multidimensional data graph conventional oem holding particular world 
data model mssd context coverage relation extraction conventional oems 
review detail low lang gr en score comments detail low lang gr en detail low detail low detail low lang gr lang gr lang gr lang en lang en lang en 
score review detail low score review detail low comments lang gr comments detail low lang gr score review comments detail low lang sp part oem representing restaurant review shown 
review object oid complex object consisting multidimensional subobjects score oid comments oid 
object score facet oid holding low detail comments facets oid oid holding worlds language greek english respectively 
inherited contexts edges written italics second line labels context coverages written bold italics third line labels 
multidimensional data graph left side subgraph holds world detail low lang gr discussed section nodes edges graph inherited context covers constitute subgraph 
easy see subgraph omit multidimensional nodes context edges get conventional oem holding depicted right side 
similar case occurs consider world detail low language english greek 
spanish possible languages consider world detail high lang sp possible extract oem holds 
reason leaves multidimensional data sub graph holding multidimensional nodes nodes omitted process extracting oem complex review object oid left children 
point notice context coverage review object review score 
data model mssd initial graph contains worlds possible extract oem contain world possible extract oem 
interesting case shown 
world detail low lang sp leaves graph left mixed atomic node oid multidimensional node oid ways deal situation strict typing approach requires review object structure type possible world 
condition graph left give oem 
varying structure approach relaxes strict type constraints allows review object different structure different worlds 
case possible extract oem holds shown right side 
approach adopted varying structure approach line varying structure exhibited semistructured data 
remember facets multidimensional entity may different structure multidimensional object different types different worlds 
addition approach adopted relates structure object world multidimensional subobjects provides alternative economical way vary structure different worlds 
worlds context node include structure child node atomic nodes icu icu inherited context context coverage strict typing approach probably best suited mssd certainly valid approach natural follow completely structured data 
conform strict typing approach definition context coverage modified follows context coverage internal complex node cv cv cv cv involving context intersection context union context coverage outgoing entity edges 
strict typing approach deserves attention frame mssd focus varying structure approach 
context coverage context node entity edge represents set worlds node edge allowed participate extracted oems imposed accessibility atomic nodes 
context coverage root proposition gives context coverage root directly inherited context atomic nodes 
possible complex nodes leaves subgraph holding world complex nodes appear leaves initial multidimensional data graph 
definition inherited context complex node internal initial multidimensional data graph appear leaf subgraph holding world 
complex nodes appear leaves subgraphs holding world treated way multidimensional nodes appear leaves example see node 
graph changing structure review multidimensional subobjects review multidimensional object facets different structures pointed directly proper context nodes 
proposition data model mssd multidimensional data graph 
context coverage root context union inherited contexts atomic nodes proof obvious proposition proposition proposition proposition 
world covered context coverage root exist atomic nodes accessible possible extract oem holding hand contained context coverage root subgraph holds give proper oem root access atomic node 
context coverage root multidimensional data graph represents worlds possible extract oems assumption implied statement explained section inherited context root universal context 
case worlds possible extract oems icr icr inherited context root context coverage root 
expression shall see section called inherited coverage applies root node edge multidimensional data graph 
inherited coverage seen inherited context node edge expresses accumulated constraints imposed ancestors graph context coverage expresses accumulated constraints imposed descendants 
context intersection gives inherited coverage node edge 
definition inherited coverage node edge multidimensional data graph ic cv ic inherited context cv context coverage node edge 
inherited coverage node edge represents worlds meaningful node edge exist 
world holds path starts root terminates atomic node comprises node edge 
data model mssd graph annotated inherited coverage edges 
parking daytime noon evening daytime noon daytime noon daytime evening daytime evening name street season summer daytime noon season summer daytime noon terrace restaurant address floor review detail low high season summer daytime noon season summer daytime noon th detail low detail low score detail low detail high detail high comments detail high lang gr en score detail high review lang gr detail high lang gr score lang en detail high lang en comments detail high lang gr detail high lang gr detail high lang gr shows part multidimensional data graph depicted annotated inherited coverage edges written bold beneath normal edge label 
note leaves considered atomic nodes values omitted simplicity 
accessibility atomic node necessary prerequisite node edge meaning world 
follows consider inherited coverage inherited context determining worlds node edge holds 
particular node edge holds world inherited coverage node edge covers follows node edge holds context inherited coverage context superset note inherited coverage context subset inherited context worlds node edge holds respect inherited coverage subset worlds node edge holds respect inherited context 
path inherited coverage analogy path inherited context path context coverage follows introduce path inherited coverage 
definition path inherited coverage path multidimensional data graph icp cvp icp path inherited context cvp path context coverage propositions give alternative ways calculate path inherited coverage 
proposition data model mssd vmld vcxt ecxt eett multidimensional data graph gn edges define path respective inherited coverages gn 
path inherited coverage 
proof obvious definition definition definition 
proposition vmld vcxt ecxt eett multidimensional data graph nodes path starts concludes icq inherited context cvu context coverage ecp path explicit context path inherited coverage icq cvu ecp 
proof obvious proposition proposition 
notice path path inherited coverage definition definition inherited coverage node including final nodes context superset 
path inherited coverage represents worlds nodes edges path hold 
significance inherited coverage shown section nodes edges multidimensional data graph hold world respect inherited contexts formulate subgraph root holds evidently subgraph pruned take nodes edges hold respect inherited coverages 
lets discuss properties pruned subgraph 
node belongs root belongs 
addition exists path leading belongs inherited context icq context coverage contains proposition icq contains exists path root icr ec ec ecn contains ec ec ecn explicit contexts edges path 
contained icr ec ec ecn proposition path inherited coverage proposition inherited coverage edge contains edge node part follows root root 
edge belongs nodes belong emanates definition context coverage 
leaves exclusively atomic nodes 
particular atomic nodes inherited context contains understand consider multidimensional nodes complex nodes leaves part context coverages contain world 
lets assume multidimensional node leaf appears leaf part inherited context contains inherited contexts edges departing contain consequently reason edges departing part context coverages contain case context coverage contain data model mssd part reasons complex node internal appear leaf summarizing components multidimensional data graph hold world respect inherited coverage formulate subgraph multidimensional data graph having root leaves exclusively atomic nodes section discuss process reduction oem see possible extract conventional oem holding subgraph 
easy see generalize contexts represent single world 
particular properties shown single world hold consider contexts representing world 
case reduction oem world discussed detail section 
meaning inherited coverage clear 
inherited coverage node edge multidimensional data graph represents worlds node edge taken account extracting conventional oems particular inherited coverage context node gives worlds node part conventional oem 
node access atomic node world part oem holding worlds contained inherited coverage considered 
addition shown item world exists path root holds inherited coverage root contains 
similarly inherited coverage entity edge gives worlds edge part conventional oem 
graph context projection proposition shown restrict inherited context root inherited contexts nodes edges graph respectively restricted 
context coverages nodes edges graph affected case inherited coverages nodes edges respectively restricted just inherited contexts 
proposition inherited context root restricted icr icr icr new inherited coverage node edge icr previous inherited coverage node edge 
proof obvious definition proposition 
restricting inherited context root depicted restrict worlds nodes edges hold oems extracted 
project graph worlds represented new inherited context root 
consequently graph context projection multidimensional data graph context involves steps restriction inherited context original root shown 
adjustment inherited coverages nodes edges graph dictated proposition 
property difference subgraphs seen section formulated inherited context inherited coverage 
data model mssd graph context projection similar process partial reduction discuss section 
partial reduction goes eliminates nodes edges hold world projected graph 
reduction evident multidimensional data graph may comprise number conventional oems holding different worlds 
previous sections discussed conditions necessary sufficient order able extract oem holding world 
particular showed extract oems worlds represented inherited coverage root 
addition showed inherited coverage context node entity edge represents worlds node edge part oem incorporated graph 
reduction process eliminates nodes edges multidimensional data graph resulting subgraph elements satisfy criteria 
criteria inherited coverage refer multidimensional data graph assume inherited coverages nodes edges calculated known 
inherited coverages need re calculated graph changed reductions may occur moment user request example 
section specify algorithm performs reduction oem holding world multidimensional data graph 
explain partial reduction reduces multidimensional data graph new multidimensional data sub graph interesting properties 
show types reduction decomposed basic operations 
reduction oem reducing multidimensional data graph oem holding world important know context deterministic graph 
section defines concept section follows presents reduction oem world final section discusses oems hold worlds 
context deterministic graphs seen possible multidimensional entity encompass facets holding world 
notion context determinism imposes restrictions issue 
particular context deterministic multidimensional data graphs facets multidimensional entity conventional information entities words context nodes accessible disjoint sets worlds 
applies directly multidimensional entities graph 
definition vmld vcxt ecxt eett multidimensional data graph 
say context deterministic iff world multidimensional node root node pointed entity edge holds pn paths start terminate context nodes consist solely context edges inherited coverage contains paths pn terminate context node 
data model mssd obviously context represents worlds pk pj hold lead different context nodes graph context deterministic 
graph context represents world start multidimensional node pointed entity edge navigate context node consecutive context edges hold words context deterministic graph entity edge pointing multidimensional node associated context node non empty context context deterministic context nondeterministic graphs 
worlds dim val val val val val val dim val val val val val val consider example 
order simplify graphs intuitive context specifiers appear sets worlds represent 
correspondence table top left corner assume dimensions domains val val val val val respectively 
edge label explicit context appears line second line shows inherited coverage bold 
multidimensional data graph context nondeterministic multidimensional node root connected context nodes context edges hold world particular world 
hand graph 

multidimensional nodes interest node 
node irrelevant root pointed entity edge 
node leaf connected context node 
node connected context nodes paths consist exclusively context edges 
paths hold disjoint sets worlds equivalently path inherited coverages respectively mutually exclusive 
world paths may hold path holds data model mssd path holds 
paths lead context node oid graph context deterministic 
alternative definition graph context deterministic iff multidimensional node root pointed entity edge true respective context unions path inherited coverages paths consecutive context edges lead context nodes mutually exclusive 
section see canonical form multidimensional data graph allows check graph context deterministic simpler intuitive way 
reduction oem context deterministic multidimensional data graph vmld vcxt ecxt eett context specifier represents single world process extracts conventional oem ow holds ow 
remove node edge inherited coverage context superset 
eett vmld remove eett add eett exist context node path context edges leads addition root node vmld set node context node path context edges leads 
return ow vcxt eett 
oem ow facet multidimensional data graph lets discuss process detail 
seen section step process remaining nodes edges properties hold form subgraph multidimensional data graph root leaves exclusively atomic nodes 
section claimed possible extract oem subgraph 
oem construction effectively performed step process 
step takes entity edge points multidimensional node point context node seen section node facet accessible context deterministic 
addition node exist access atomic node eliminated step 
consequently entity edge pointing multidimensional node properly redirected point correct context node substituting path context edges 
note edge identical redirected exists identical edges removed 
similar process applied root ensure root context respect set dimensions dmin dmin contains exactly dimensions appear 
trivial case dimensions appear context specifiers exclusively form world respect arbitrary considered reduction oem result identical possible world set dimensions 
data model mssd node 
step entity edge points context node context node possibly root pointed entity edge 
step gets ride remaining multidimensional nodes context edges 
function assigns values nodes initial graph assign values nodes ow 
explained section world covered inherited coverage root possible extract oem holding case step process node edge left formulate subgraph empty graph returned 
process assumed context deterministic multidimensional data graph 
graph context nondeterministic may world context nodes correspond single entity edge step 
addition may discover candidate roots 
cases possible construct oem hold world possible combinations candidate nodes creating oem combination 
possibility construct single oem containing holding facets entity different objects 
context deterministic graphs ensure world exists oem holding world 
frame mainly interested multidimensional data graphs 
example reduction oem consider multidimensional data graph 
applying process graph world season summer detail low daytime noon lang gr get oem graph depicted 
leaves atomic nodes simplicity omitted values 
notice parking multidimensional entities oids represented object oid 
notice comment object oid excluded resulting oem 
oem produced reducing multidimensional data graph world 
menu name zipcode street address city athens music club review recreation guide parking restaurant parking name street review address season summer detail low daytime noon lang gr floor terrace review score score simplicity term world refer context specifier representing exactly world 
data model mssd time complexity process estimated follows 
step involves operation context subset node edge graph assuming nodes edges cost step cost context subset 
step scans entity edges find pointing multidimensional nodes number entity edges ett ett number comparisons 
mean number consecutive context edges leading context node cost exceed ett ett comparisons 
process performed root total cost step ett ett comparisons 
total cost process exceed cost context subset ett ett comparisons 
consider number edges representative size problem assume cost context subset upper bounded 
nodes node root incoming edge ett order time complexity 
oems holding worlds previous section introduced process extracts multidimensional data graph oem holding world question arises process generalized contexts representing world generalized process take input multidimensional data graph non empty context produce oem oc holding problems extracting oem holds worlds 
detail low detail high detail high low illustrates example process 
graph reduced oem holding context detail high low represents worlds 
inherited coverages edges follows inherited coverage inherited coverage detail worlds section considered respect dmin contains exactly dimensions appear context specifiers multidimensional data graph 
considering additional dimensions affect problem discuss section 
meaning extracting oem hold world 
data model mssd high low inherited coverages context edges respective explicit contexts 
subgraph holds shown 
notice node subgraph atomic node leaf 
case appear represented single world property section guarantees leaves subgraph exclusively atomic nodes initial graph 
property apply extraction subgraphs world 
eliminating illegal leaves solve problem shown oem graph 
note elimination may propagate upwards suppose edge node exist eliminating leave complex object children reduction oem empty graph 
addition property section property section apply extraction subgraphs world 
consequence graph elements hold context may formulate multidimensional data sub graph context represents world 
example suppose nodes pointed new node 
node hold context detail high low path root node hold context 
examples show process contexts representing world 
generalized process need take account possibility illegal leaves nodes inaccessible root 
oem oc holding consist graph elements common oems ow world covered oc may comprise common graph element may introduce illegal leaves may accessible root path holds initial approach extract oc way similar extracting ow led oem exhibit interesting properties especially meaningful 
problem emanates assumption oc formulated graph elements hold case single world contexts 
step back meaningful notion oem holds non empty context multidimensional data graph context say reduced oem oc holds iff reduced oem oc world covered process reducing oem holding non empty context comprises steps apply process get oem ow holds world covered checking reduction world result oem ow 
reduction oem context obviously restrictive reduction oem single world 
latest definition reduction oem context detail high low graph possible type reduction uses context single world input partial reduction topic section 
case reduction result empty graph mean reducing oem initial graph worlds detail high low gives empty graph result true 
partial reduction data model mssd multidimensional data graph vmld vcxt ecxt eett context partial reduction extracts subgraph consisting nodes edges hold worlds represented contrast reduction oem result partial reduction multidimensional data graph 
process performs partial reduction 
gc 
remove node edge inherited coverage 
return gc vmld vcxt ecxt eett 
effect step process removes nodes edges hold worlds covered remaining nodes edges hold worlds graph gc returned step subgraph multidimensional data graph root addition leaves gc exclusively atomic nodes 
understand consider node edge gc holds world part subgraph gw holds shown section gw multidimensional data graph root atomic nodes leaves 
obviously nodes edges gw belong gc 
consequently gc subgraphs gw represented follows gc multidimensional data graph root leaves atomic nodes 
evident oem holds extracted extracted gc provided gc contains oems hold world covered note empty context process return empty graph 
universal context parts pruned hold world 
graph result applying process multidimensional data graph context detail low lang gr 
leaves graph atomic nodes simplicity omitted values 
notice oem graph depicted result reduction oem graph obtained reducing oem graph 
season summer detail low daytime noon lang gr detail low lang gr 
data model mssd subgraph produced partial reduction multidimensional data graph context menu name city street zipcode address season fall winter spring season summer lang gr review city street athens music club detail low recreation guide parking restaurant name street address floor season summer daytime noon terrace daytime evening daytime noon daytime noon daytime evening parking detail low lang gr review th review detail low season summer daytime noon time complexity process estimated follows 
step involves operation context intersection check context equality node edge graph 
assuming nodes edges total cost process cost context intersection cost context equality 
consider number edges representative size problem assume costs context intersection context equality upper bounded 
nodes node root incoming edge 
order time complexity 
reduction primitives interesting notice context represents single world step process section yields result step process section 
leads consider number primitives reduction processes listed graph context projection discussed detail section 
considered respect dmin 
additional dimensions play significant role situation 
score score data model mssd graph context pruning eliminates node edge inherited coverage may return empty multidimensional data graph result 
graph de contextualization applied multidimensional data graph returns graph multidimensional nodes context edges 
entity edge redirected point context node pointing described step process section entity edges point context nodes multidimensional nodes context edges removed graph 
obvious process introduced section equivalent graph context projection graph context pruning sequence 
difference graph context projection introduces extra multidimensional node new root corresponding context edge labeled reduction context 
process described section equivalent graph context projection single world graph context pruning graph de contextualization sequence 
reduction oem de contextualizing result partial reduction single world 
canonical form section seen multidimensional entities represented number equivalent ways number examples depicted 
follows multidimensional data graphs contain different equivalent representations multidimensional entities different essentially express information 
observation leads definition canonical form cf short multidimensional data graph 
definition multidimensional data graph canonical form iff root multidimensional node entity edge points multidimensional node context edge points context node 
graph canonical form context node facet multidimensional node facets multidimensional nodes exclusively context nodes conventional information entities 
multidimensional data graph vmld vcxt ecxt eett transform canonical form gcf process 
gcf cf 
root context node add new multidimensional node context edge new root 
de contextualization correctly entity edge correspond exactly context node 
shown correspondence guaranteed initial graph graph context projection single world graph context pruning 
result de contextualization may oem graph input graph leaves atomic nodes de contextualized graph retain leaves 
graph context projection graph context pruning ensure leaves input graph 
data model mssd 
context node pointed entity edge form add new multidimensional node context edge substitute incoming entity edge entity edge 

multidimensional node root pointed entity edge context node accessible paths hn consecutive context edges remove context edges exist add new context edge context union path explicit contexts hn 

remove context edges pointing multidimensional nodes 
remove multidimensional nodes root pointed entity edge context edges departing nodes 

return new graph gcf vmld vcxt ecxt eett 
intuition step step process cf step step 
process add delete context nodes entity edges entity edges may redirected depicted 
multidimensional nodes context edges may added deleted way change conditions determine context node holds 
example consider entity edge node access context node paths consecutive context edges 
corresponding canonical form entity edge node access context node single context edge explicit context combines constraints expressed paths 
note second path contains cycle additional constraints expressed second path represent subset worlds path 
cyclic paths excluded step explicit context corresponding edge canonical form 
point observe node pointed entity edge exist canonical form conditions expressed respective explicit contexts incorporated explicit contexts nodes 
transforming multidimensional data graph canonical form 
data model mssd see step step transformation affect inherited context context coverage entity edges node 
true step step see entity edges nodes 
remember proposition expresses inherited context context union path explicit contexts contribution worlds edge inherited context node instance remains transformation canonical form 
similar case proposition contribution edge instance context coverage node 
consequently inherited context context coverage context nodes entity edges original graph preserved canonical form 
easy see multidimensional node original graph access world context nodes consecutive context edges definition happens canonical form graph vice versa 
context determinism maintained canonical form proposition graph context deterministic canonical form graph context nondeterministic canonical form 
proof obvious process cf transformation canonical form 
graph canonical form simple determine graph context deterministic proposition graph canonical form context deterministic iff multidimensional node inherited coverages edges departing mutually exclusive 
proof obvious 
evidently explicit contexts edges mutually exclusive graph context deterministic inherited coverage edge context subset explicit context 
opposite true explicit contexts may mutually exclusive graph context deterministic 
notice allowed multidimensional node context deterministic graph context edges inherited coverages empty contexts mutually exclusive context empty contexts 
graph gcf returned process cf multidimensional data graph context nodes original graph number entity edges connecting corresponding identical form entities equivalent constraints expressing conditions facets hold 
multidimensional data graph corresponds multidimensional data graph gcf canonical form effectively contains information important consequence stems discussion stated proposition proposition multidimensional data graph gcf canonical form 
world ow ow gcf ow ow identical oem graphs 
data model mssd proof explained canonical form maintains inherited coverages context nodes entity edges maintains proposition 
proposition obvious process gcf 
canonical form gcf multidimensional data graph free redundant dependencies multidimensional entities avoids number anomalies may occur refer graph left side suppose explicit context context edge updated 
affect multidimensional entity represented node entity represented 
side effect update anomaly 
new facet added multidimensional entity represented node edge facet indirectly added multidimensional entity represented node 
side effect insertion anomaly 
edge removed entity represented node longer facet 
cause node lose accessibility node 
side effect deletion anomaly 
anomalies avoided canonical form gcf examples graph right side 
property canonical form possible path formed repeated succession context edge entity edge 
consecutive context edges consecutive entity edges graph canonical form 
property formulating evaluating context path expressions queries topic chapter 
data model mssd part graph depicted canonical form 
parking daytime evening daytime noon restaurant name street address terrace review th season summer daytime noon season summer daytime noon review detail high detail low floor score score comments lang gr lang en score comments detail high lang gr example consider shows canonical form restaurant object graph 
multidimensional object exchange model having investigated properties multidimensional data graphs define special type multidimensional data graph called multidimensional object exchange model multidimensional oem moem short 
definition multidimensional object exchange model moem multidimensional data graph node edge inherited coverage example moem consider multidimensional data graph depicted 
hand graph moem inherited context inherited coverage edge scale high node empty context 
node edge moem holds world 
applies root inherited coverage root contains world moem comprises conventional oem holding world 
addition leaves moem hold world leaves exclusively atomic nodes 
context node entity edge moem participates conventional oem data model mssd moem reduced 
obviously oem special case multidimensional oem multidimensional nodes context edges 
checking multidimensional data graph moem involves steps calculate inherited coverages nodes edges sure empty context examine context determinism 
easy see canonical form moem moem pointed transformation canonical form preserves context determinism inherited coverages context nodes entity edges 
concerning inherited coverages multidimensional nodes context edges empty context result transformation 
stated canonical form mcf moem contains essentially information reduced exactly oems context deterministic multidimensional data graph obtain maximum subgraph moem partially reducing universal context 
partial reduction prune nodes edges hold world leaving inherited coverage nodes edges exist seen section surviving nodes edges connected root surviving paths 
mssd expressions pointed chapter syntactic basis expressing semistructured data 
define mssd expression extending ssd expression incorporate context specifiers 
grammar mssd expression table extended backus naur form ebnf ebnf short 
symbols defined regular expression start capital letter example symbols defined ebnf start lowercase letter example 
table syntax mssd expression 
mssd expr value oid value oid value mssd expr 
mssd expr 
evident corresponds multidimensional nodes correspond context nodes 
conventions abs concerning syntax labels object identifiers ssd expressions apply 
grammar context specifiers previous chapter 
mssd expression example describes music club oid 
opposite necessarily true multidimensional data graph moem may canonical form moem 
instance consider multidimensional data graph containing multidimensional node leaf pointed entity edge 
moem empty inherited coverage 
canonical form gcf contain eliminated transformation process gcf may moem 
data model mssd example menu lang gr lang en lang fr name address season summer zipcode street city athens season fall winter spring city street review detail low detail high score comments parking daytime evening daytime noon correctly express moem corresponding mssd expression consistent 
consistency mssd expressions similar consistency abs ssd expressions 
mssd expression consistent hold object identifier defined 
object identifier defined object identifier considered defined assigned value 
effect consistency mssd expression requires leaf node assigned exactly value 
moem corresponds consistent mssd expression multidimensional data graph 
general case multidimensional data graph may leaves complex multidimensional objects atomic values 
inconsistent mssd expression represent graph may lead ambiguity object consists oid outgoing edges atomic value may correspond leaf context node leaf multidimensional node multidimensional data graph 
ambiguity lifted know ambiguous represents canonical form multidimensional data graph node type determined type incoming edges 
type node encoded oid making problem implementation issue 
case multidimensional data graph leaves atomic objects represented need ambiguity resolving measures 
summary chapter incorporated context specifiers graph data model semistructured data defined multidimensional data graph 
multidimensional data graph conventional labeled edges entity edges define relationships multidimensional entities information entities may manifest different facets different worlds 
context specifiers qualify facets define worlds facet holds 
contexts attached graph model refer specific multidimensional entity facilitates developing maintenance 
actual contexts calculated automatically process traverses graph takes multidimensional entities account 
investigating properties multidimensional data graph discussed contexts propagate graph defined data model mssd explicit context context qualifies facets 
explicit context expresses worlds facet potentially holds meaning boundaries single multidimensional entity 
inherited context requirement object may hold worlds parent object holds 
inherited context expresses worlds graph elements hold imposed explicit context constraints accumulated root leaves 
context coverage requirement object may hold worlds access atomic node 
context coverage expresses worlds graph elements hold imposed explicit context constraints accumulated leaves root 
inherited coverage element graph represents worlds common inherited context context coverage element 
inherited coverage states worlds graph element holds 
context propagation showed conventional oems holding world extracted multidimensional data graph gave conditions extractions take place 
part conditions discussed context deterministic graphs process reduces oem multidimensional data graph world 
addition described partial reduction multidimensional data graph context 
reductions operations may take place moment inherited coverages calculated graph changed 
redundant dependencies multidimensional entities may cause anomalies maintaining multidimensional data graph 
canonical form avoids anomalies transforming initial graph better structured graph 
defined multidimensional oem moem special case multidimensional data graph strict conventional oems holding various worlds 
specified mssd expression syntax expressing textually multidimensional data graphs 
multidimensional query language previous chapter proposed multidimensional oem moem short data model context dependent multifaceted semistructured data 
moem special case graph data model called multidimensional data graph 
examined properties multidimensional data graph detail showed moem relates oem graph model conventional semistructured data 
chapter introduce multidimensional query language mql short query language multidimensional semistructured data 
mql treats context class citizen suited querying moem graphs 
mql querying multidimensional data graphs general interested similarly oem database aqm suc define moem database database model moem graph 
follows assume mql queries posed moem databases explicitly stated 
frame address issue database updates focus retrievals 
goal demonstrate conventional query languages extended incorporate context central role 
principles shaping retrieval part mql designing update part 
follows start motivating approach 
discuss context path expressions key point mql 
continue mql followed discussion advanced issues 
conclude chapter outlining prototype implementation mql 
complete syntax specification context path expressions mql appendix moem mql 
section motivate proposal moem mql 
simply put query query context important selecting right data 
plain examples natural language give impression context driven queries difference conventional queries 
argue comes context driven queries mql powerful convenient conventional query languages time simple context issue 
important point mql uses additional graph elements incorporated moem order reply context driven queries 
conventional mean context dependent accurately context unaware 
mql require underlying graph context deterministic exclusively non empty inherited coverages 
notice underlying graph multidimensional complex nodes leaves allowed multidimensional data graph result mql query may multidimensional data sub graph multidimensional complex nodes leaves 
discussion qualitative difference querying moem multidimensional data graph see section 
multidimensional query language examples context dependent recreation guide illustrated previous chapter depicted 
suppose moem database reduced oem database ow world simple mql query qw expressed query qw ow 
example moem consider query give addresses restaurants summer low detail greek 
equivalent query qw give addresses restaurants posed oem facet ow holds world season summer detail low daytime noon lang gr 
reducing ow necessary step evaluating processing take place directly may preferable terms performance 
intuitively qw navigating moem entity edges guide navigation moem context edges 
lang gr moem database context dependent recreation guide 
lang en menu lang fr season fall winter spring season summer name city street zipcode address city street athens review music club recreation guide parking detail high detail low score restaurant name street address floor season summer daytime noon terrace daytime evening daytime noon daytime noon daytime evening comments parking review season summer daytime noon th review detail high detail low score score score comments lang gr lang en comments detail high lang gr addition queries fact multidimensional data graph groups facets entities allows different cross world type context driven queries 
query type expressed qw information needed answer contained single oem 
example consider music club object query give name address winter club summer address provided 
variation give clubs address year 
query checks address holds context covering possible values dimension season 
consequently mql takes advantage multidimensional nodes pose queries relate facets single multidimensional entity 
mql extends ideas query languages proposed conventional semistructured data especially lorel aqm unql bfs underlying data model oem 
lorel particular additional xml variant gmw powerful bc intuitive features appealing 
multidimensional oem multidimensional query language context primary role mql path expressions combined context information give context path expressions query conditions construction results may involve contexts 
result context driven queries difficult impossible formulate query language semistructured data expressed compact elegant way mql naturally possible encode context dependent information conventional graph model oem pose queries contain context information language lorel 
advantage mql twofold 
syntactic context driven queries mql typically shorter readable equivalent lorel queries easier formulate error prone 
semantic mql moem recognize context allow complex conditions context operations expressed supported lorel oem 
enhanced querying capabilities mql partly due extensions oem incorporated multidimensional data graph context edges multidimensional nodes 
view queries multidimensional oem answer mql justify oem extensions introduced previous chapter 
capacity cross world queries shows moem graph collection oems decomposed 
context path expressions query languages semistructured data path expressions reach arbitrary depths data graph abs 
similarly mql incorporates context path expressions define navigation patterns multidimensional data graphs 
context path expressions cornerstone mql 
lorel distinguishes aqm simple path expressions allow retrieval objects specifying sequence labels graph general path expressions powerful form advanced features wildcards regular expressions 
reasons presentation clarity follow analogous distinction simple context path expressions explained section general context path expressions described section 
section starts presenting context path expressions explaining evaluate nodes 
introduce context qualifiers context path expressions state conditions context 
follows describe certain parts context path expressions implied leading forms readable closer conventional path expressions 
close section discussion semantics context path expressions 
comparison mql lorel queries refer section discuss translation mql queries equivalent lorel queries 
example encoding seen section oem represent multidimensional oem 
multidimensional query language incorporating context path expressions simple path expression lorel sequence ln ln labels object identifier variable denoting object 
similarly context path expressions start object identifier variable denoting object moem object identifiers partitioned disjoint sets context nodes multidimensional nodes leads distinct types object variables variable denotes context object type variable denotes multidimensional object type 
context path expressions kinds components navigate entity edges context edges entity part component facet part component 
entity parts start dot define navigation patterns entity edges facet parts start double colon define navigation patterns context edges 
remember entity edges depart context nodes context edges depart multidimensional nodes dots seen corresponding context nodes double colons corresponding multidimensional nodes 
context path expressions canonical form paths multidimensional data graph consist number entity edges context edges order 
entity parts facet parts strict correspondence matching edges know exact structure graph form context path expression entity parts facet parts proper order 
problem able create context path expressions precise knowledge succession entity edges context edges graph 
addition explained previous chapter different graph structures equivalent far represented information concerned 
example consecutive context edges path substituted single context edge suitable explicit context context path expression match equivalent path structures describing exhaustively possible edge successions 
achieve goals build context path expressions canonical form multidimensional data graph 
quote previous chapter multidimensional data graph canonical form possible path formed repeated succession context edge entity edge 
consecutive context edges consecutive entity edges graph canonical form 
building context path expressions canonical form means fixed order entity context edges match entity facet parts 
furthermore means context path expression identical evaluation graphs canonical form 
consequently simple context path expressions consist object identifier object variable followed number entity parts facet parts succeeding 
context object identifier variable immediately followed entity part multidimensional object identifier variable followed facet part 
section explain context path expression may start entity part corresponding root graph 
stated previous chapter terms node object interchangeably 
explained previous chapter explicit context context intersection explicit contexts consecutive context edges 
multidimensional query language example possible forms simple context path expressions ei indicates entity parts fi indicates facet parts 
en fn en en fn en fn en en fn shown context path expressions example entity parts facet parts alternate successively 
context path expression starts context object identifier followed directly entity part matched entity edges departing 
context path expression starts context object variable identifier 
notice numbered entity facet parts pairs pair pair starting entity part 
intuition pair corresponds single label li conventional path expressions 
analogous way example starts multidimensional object identifier followed facet part matched context edges departing starts multidimensional object variable identifier 
context path expression ends entity part facet part 
case demonstrates handy convention oem moem root graph represented unique edge points root depart node 
edge labeled name database root pointed edge labeled recreation guide 
root canonical form multidimensional data graph multidimensional node edge question entity edge implied entity part 
note context path expressions special entity part conventional path expressions label root considered object identifier 
evaluation context path expressions context path expression evaluates set context objects set multidimensional objects 
depends part context path expression part facet part example context path expression evaluates set context nodes hand part entity part evaluates set multidimensional nodes 
oem data path aqm sequence ln exists edge lk object ok object ok oem graph may data paths match simple path expression ln 
similarly data paths context data path multidimensional data graph sequence ln exists edge label lk inherited coverage object ok object ok note edge context edge label explicit context 
inherited coverages necessary identifying edges useful matching context data path context path expression explained 
multidimensional data graph may context data paths match context path expression 
nodes matching context data paths form result set context path expression 
assumed context path expressions target moem databases canonical form important realize necessary transform graph multidimensional query language canonical form order evaluate context path expression 
graph canonical form context data paths exhibit regularity context path expressions entity edge succeeding context edge repeatedly 
case direct correspondence individual components context data paths context path expressions facilitates matching process 
general case graph canonical form matching process adjust correspondence individual components context data paths context path expressions simulate canonical form see section certain parts context path expressions omitted complicates things 
keep things simple follows assume moem databases canonical form 
entity parts facet parts pointed determine context data path matches context path expression entity edges compared entity parts context edges compared facet parts sequence 
entity part form form entity edge label inherited coverage qualifier 
facet part form form explicit context qualifier inherited coverage qualifier 
explicit context qualifiers constitute necessary component facets parts matched explicit context corresponding context edges 
inherited coverage qualifiers optional entity parts facet parts matched inherited coverage path path inherited coverage defined previous chapter 
inherited coverage qualifiers explicit context qualifiers syntax instances context qualifiers 
context qualifiers constructs express conditions contexts 
basic case context qualifier just context specifier denoting worlds matching context cover 
example context path expressions refer canonical form graph 
lang gr recreation guide music club menu recreation guide music club menu lang gr recreation guide music club menu recreation guide music club address recreation guide music club review detail high context path expression example context qualifier lang gr compared path inherited coverage paths start root conclude menu facet 
specifically matches path inherited coverages context superset lang gr 
context qualifiers explicit context qualifiers match context edge context context superset empty context 
moem database evaluates set 
case happens evaluate inherited coverage qualifier matches path inherited coverage explicit context qualifier lang gr example facet part may matched sequence consecutive context edges graph canonical form 
subtle point canonical form may contain additional multidimensional nodes target context path expressions 
evaluation process assumes graph canonical form implement consistent oid scheme implied multidimensional nodes 
multidimensional query language matches explicit contexts context superset lang gr 
happen evaluate result moem database conceptually different returns menu facets accessible root path holds lang gr returns menu facets corresponding explicit context lang gr irrespective facets hold world 
case context qualifiers empty contexts menu facet matches context path expression result 
note grouping results takes place music club contained menu multidimensional objects matching menu facets returned flat result set indication objects set facets menu 
context path expression example returns set multidimensional nodes specifically set 
inherited coverage qualifier demands path leading root address multidimensional node hold possible world 
case shows context path expression contain inherited coverage qualifiers 
looks review objects accessible path holding possible world returns review facets corresponding explicit context detail high irrespective worlds hold 
context qualifier inherited coverage qualifier compared path inherited coverage paths conclude review multidimensional nodes 
second inherited coverage qualifier qualifies context edges depart review multidimensional nodes 
case path consists single context edge 
meaning second inherited coverage qualifier context edges pointing review facets may hold set worlds 
inherited coverage qualifier marks start path qualifies path previous inherited coverage qualifier context path expression 
context qualifiers context path expressions somewhat verbose difficult follow see section cases implied leading easier compact forms context path expressions 
explaining cases context qualifiers omitted context qualifiers detail 
context qualifiers context qualifiers context path expressions state conditions contexts associated edges paths satisfy 
context qualifier take form context specifier context pattern context variable 
context qualifiers context specifiers context qualifier form context specifier expresses condition context stating match context superset 
words worlds represented context qualifier covered matching context context path expression lb matches words returns menu nodes exist conventional oem holding worlds specified lang gr 
explained detail section 
restrictive requiring contexts contain world common 
trivial case empty contexts canonical form context deterministic graph condition inherited coverage context edge context superset context met context edge multidimensional entity 
case multidimensional query language paths starting consist entity edge labeled lb inherited coverage followed context edge inherited coverage explicit context 
empty context specifier subset context context qualifier plays role context wildcard matches edge context 
empty context way essentially turns context conditions 
example context path expression lb entity part lb match entity edges labeled lb irrespective inherited coverage facet part match context edges inherited coverage superset irrespective explicit context 
example consider lb context edge allowed explicit context lb entity edge may path inherited coverage 
facet part match context edge 
stated inherited coverage qualifiers qualify paths consist edges may affect subsequent entity facet parts 
example context path expression lb context qualifier matched inherited coverage lb path inherited coverage path entity edge labeled lb context edge explicit context covering 
interesting observe inherited coverage qualifier form context specifier repeated corresponding path changing evaluation context path expression 
context specifiers context path expression equivalent context path expression inherited coverage qualifier matched inherited coverage single edge 
shown proposition proposition path multidimensional data graph context qualifier form context specifier 
matches path inherited coverage iff matches inherited coverages edges proof matches inherited coverages edges comprise context subset inherited coverages 
means context subset context intersection inherited coverages 
matches path inherited coverage conversely matches path inherited coverage context subset path inherited coverage means context subset inherited coverage edge matches inherited coverages edges emphasized property inherited coverage qualifiers holds form context specifiers 
inherited coverage qualifiers context patterns context variables give equivalent context path expressions repeated path qualify 
context deterministic graphs assuming non empty contexts context edge match inherited coverage qualifier 
result restrictive approach allows context qualifiers uniquely specify facets multidimensional entities 
path consists single edge path inherited coverage inherited coverage edge 
context patterns multidimensional query language context patterns allow express contexts specifying dimensions rest take value 
syntax context patterns identical context specifiers difference character follows opening bracket signifying context pattern clause context pattern contain dimension specifier empty clause universal clause specified pattern applied syntactic level level worlds demonstrated example 
example en gr sp low high ps pdf html detail low lang en gr format pdf detail low format pdf lang en format ps lang gr sp context conditions context patterns cond lang gr true cond lang gr en detail low true cond lang gr en detail low false cond lang en detail high lang gr detail low true example condition cond holds true 
demands context covers world language greek irrespective value dimensions 
symbol context subset declares lang may take values different gr worlds covered long world value lang gr 
condition cond holds true 
states cover worlds language greek low detail worlds language english low detail irrespective value dimensions 
symbol context equality implies world fall categories 
condition cond false context covers worlds match pattern example world lang en detail high format ps 
condition cond true 
uses context pattern clauses demands covers world language english detail high plus world language greek detail low context condition context pattern may compared context specifier context equality inequality proper context subset superset 
straightforward way evaluate context conditions involve context patterns transform equivalent context conditions contain context patterns 
informally remove character context pattern time remove dimension specifiers part context specifier context pattern contain empty clauses universal clauses 
instance dimension specifiers respective cases 
notice context patterns clauses cond differ patterns having clause 
context specifiers clauses set worlds expressed single clause 
multidimensional query language correspond dimension context pattern instance cond example give lang gr en detail low detail low lang en lang gr sp context condition solely context specifiers 
context equality true initial condition involves context pattern hold 
context patterns participate context intersection context union context difference 
case context patterns mask context specifiers screening dimensions interfering dimension values shown 
example en gr sp low high ps pdf html examples context operations involve context patterns 
lang gr sp lang en gr detail low lang gr 
lang gr detail low lang en detail low format html lang gr en detail low 
format pdf ps lang en sp lang sp lang en 
format pdf ps detail low format ps format pdf context conditions context operations example remove character context pattern time remove dimension specifiers context specifier correspond dimension context pattern carry context operation context specifiers 
context qualifiers context patterns context pattern context qualifier asserts condition corresponding edge path context context superset context pattern 
example context path expression lb matches paths starting consist entity edge labeled lb inherited coverage followed context edge inherited coverage explicit context 
example consider lb inherited coverage qualifier matched path inherited coverage complete path referring moem database context path expression care taken remove dimension specifiers form dimension presence clause empty clause substitute clause empty clause 
care taken remove dimension specifiers form dimension presence clause empty clause substitute clause empty clause 
pointed contrast context specifiers repeated path qualifies front lb resulting context path expression equivalent original 
see lang gr inherited coverages edges path lang gr detail low lang gr detail high 
path inherited coverage empty context match context pattern inherited coverages individual edges match context pattern 
multidimensional query language daytime noon recreation guide restaurant address floor seeks floor facets occasionally restaurants operate evaluates 
node included restaurant operates summer node included autumn winter spring 
notice context specifier daytime noon context pattern result empty set 
context qualifiers context variables apart context object variables denoted multidimensional object variables denoted context path expressions context variables bind context specifiers denoted 
context variable appears place inherited coverage qualifier explicit context qualifier binds corresponding path inherited coverage explicit context respectively 
example lets consider context path expression lb contain context variables 
context path expression matches paths starting object consist entity edge labeled lb followed context edge inherited coverage context superset 
lets assume context path expression matches context data paths cdp leading node cdp leading node 
result context path expression set triplets xi value yi value 
specifically xi inherited coverage edge labeled lb context data path yi explicit context context edge 
example context variable binds path inherited coverage paths start include sequence entity edge labeled context edge explicit context covers entity edge labeled way context variables similar label variables unql bfs difference bind contexts labels 
context variables mql specify complex conditions contexts participate construction new graphs result queries 
implied context qualifiers simplify context path expressions readable context qualifiers omitted certain cases 
context qualifier missing default value assumed 
default value context qualifiers empty context impose restrictions edge path contexts 
implying context qualifiers demonstrated example 
example pair context path expressions equivalent number context qualifiers implied second implied context qualifiers appear explicitly 
context qualifiers ci appear context specifiers context patterns context variables 

notice difference context variable context object variable 
multidimensional query language 

example occurrence inherited coverage qualifier appears facet part 
case inherited coverage qualifier unqualified part path implied default context qualifier 
pair shows context path expression facet part exist missing altogether 
facet part exist missing 
case default context qualifier assumed explicit context qualifier implied facet parts 
pair context path expressions start multidimensional object variable followed facet part 
facet part missing implying facet part matches context edge 
pair combines cases shown pairs 
interesting point pair facet part 
explicit context qualifier omitted facet part introduces inherited coverage qualifier position 
missing taken explicit context qualifier 
facet parts implied entity parts implied 
legal context path expressions similarly query languages semistructured data mql context path expression may followed object variable binds set result nodes 
fact facet parts may missing raises issue discussed section type nodes context path expression evaluates 
mentioned section part facet part context path expression evaluates set context nodes part entity part evaluates set multidimensional nodes 
facet part may context path expression just signify result set context nodes elegant 
fortunately omit facet part object variable coercion achieve goal demonstrated example follows 
example pair consists context path expressions followed object variable imposes coercion type result nodes second equivalent context path expression coercion take place 
omitting object variable context path expression pair changes evaluation multidimensional nodes 


example shows context path expression followed context object variable evaluates context objects irrespective ends entity facet part 
specifically context object variable context path expression concludes entity part implies addition facet part context path expression 
context object variable cause coercion level context path expression 
multidimensional query language entity parts implied multidimensional object variables cause coercion analogous context object variables 
expressions multidimensional object variable facet part example illegal expressions coercion context path expression possible 
seen example multidimensional object variable causes facet part implied context path expression 
interesting note context path expression example form conventional path expression context qualifiers facet parts missing 
implies conventional path expressions special case context path expressions context conditions turned example context path expressions followed object variable refer moem database 
lang gr recreation guide music club menu recreation guide music club menu lang gr recreation guide music club menu recreation guide music club address recreation guide music club review detail high daytime noon recreation guide restaurant address floor recreation guide restaurant parking recreation guide restaurant parking example cases equivalent corresponding cases example difference context qualifiers implied missing 
explanation follows example relevant comparison shows immediately context path expressions example intuitive easier formulate 
case explained section evaluates set daytime noon daytime evening value tuple corresponds variable second value variable case happens give result path binds consists parking entity edge succeeding context edge path consists context edge 
notice practice requires different names variables variables cases different type principle identifier respectively introducing ambiguities 
summarize simple steps complete missing context qualifiers context path expression 

explicit context qualifiers facet part implied determined proper succession entity facet parts coercion context object variables default value assumed 

inherited coverage qualifiers part context path expression entity part facet part contain inherited coverage qualifier default value assumed 
previous chapter mentioned oem special case multidimensional data graph 
conventional oem multidimensional counterpart po conventional path expression pm multidimensional counterpart easy see evaluating po gives results evaluating pm multidimensional query language section aims give insight context path expressions attempting qualitative analysis meaning 
semantics context path expressions section interpret context path expressions terms conventional path expressions oems explain comparative potential inherited coverage qualifiers explicit context qualifiers multidimensional data graphs 
start context path expression cpe lets assume cpe evaluates node multidimensional data graph assume context specifier represents worlds wn reducing worlds gives oems respectively 
node returned conventional path expression evaluated 
properties path inherited coverage node returned cpe edges relevant context nodes corresponding context data path form data path survives 
say context path expression cpe form conventional path expression counterpart evaluation superset evaluation cpe see nodes evaluates belong evaluation cpe examine corresponding data paths 
data path leading exists exists corresponding context data path returned cpe 
point requires attention data path survive 
illustrates example 
data paths matter 
lang gr moem lang en lang gr lang en depicts multidimensional data graph happens moem depict oems hold worlds lang gr multidimensional query language lang en respectively 
difference oid middle node 
path expression returns evaluated context path expression lang gr en returns empty set evaluated 
consequently evaluate nodes just common result sets corresponding data paths include oids traversed nodes identical 
lets consider context path expression cpe context path expression comprehended consider context path expressions cpe cpe respectively cpe cpe similar cpe discussion cpe applies cpe cpe 
object variable binds matching nodes cpe 
matching node treated root cpe returns nodes accessible edge worlds specified 
obviously cpe equivalent pair cpe cpe sense cpe evaluates set nodes binds context path expressions cpe thought specifying path nodes sets worlds jumping different oem reductions 
context path expressions discussed section viewed joins oem nodes oem data paths hold different worlds 
related issue position context qualifier context path expression 
consider database employees context representing valid time context path expressions cpe cpe cpe respectively db employee salary db employee salary db employee salary context path expression cpe evaluates salary context objects exists path db employee salary conventional oem holds time instance 
context path expression cpe restrictive cpe allows path leading employee facets hold world specifically cpe requires path db employee exist oem holds time instance salary edges exist oem holds time instance 
join performed employee facets salary edges depart 
node returned cpe exists note possible write cpe break facet parts multidimensional object variables context specifiers shown proposition inherited coverage qualifier context specifier repeated path qualifies 
context pattern context variable corresponding path qualified 
similar way context pattern context variable corresponding path qualified 
database moem path hold world 
multidimensional query language oem holds time instance salary edge pointing node edge departs path node root particular oem specified 
context path expressions cpe focus specific parts moem qualify context objects relations path 
note path inherited coverage instance database path db employee context superset cpe cpe equivalent 
explanation case node returned cpe data path corresponds db employee exists oem exist oem holds time instance returned cpe 
may form cpe queries cpe usually inherited coverage edges database universal context edges may left inherited coverage qualifier 
discussion applies cpe 
difference cpe cpe requires salary facet exist oem holding time instance node accessible path db employee salary oem holds time instance 
hand cpe requires salary facet salary edge corresponding employee facet exist oem holding time instance 
interesting issue comparative expressiveness non empty context qualifiers multidimensional data graphs 
inherited coverage qualifiers strong inherited coverages empty contexts 
hand multidimensional data graphs may exist subgraphs empty inherited coverage meaning hold world essentially reduces navigational possibilities context path expressions 
non empty inherited coverage qualifiers context path expression access solely moem sub part multidimensional data graph 
pointed previous chapter meaningful queries multidimensional data graphs involving facets hold world potential hold world non empty explicit context 
queries formulated explicit context qualifiers give low level navigation capability context path expressions 
context path expressions examined section evaluate context objects 
reason possible render semantics multidimensional object conventional oems 
mql basics multidimensional query language mql short query languages semistructured data particular lorel aqm extends context path expressions additional clauses manipulate context 
concentrate context related issues starting point basic core language described abs incorporates essential features lorel unql bfs time simple easy extend 
mql retains main characteristics lorel powerful path expressions type 
main aim mql formulation context driven queries focus features explained depth example coercion rules 
mql semantics relegated lorel semantics ultimately odmg odmg section implement mql top lore specify mql queries translated equivalent lorel queries 
mql comprises clauses multidimensional query language select results template context context variable definitions context path expressions predicate context predicate select clause exist mql query rest clauses optional 
generally speaking clause results variable bindings considered clauses filter bound values considered context clause defines new context variables select clause select clause considered constructs result graph 
follows describe clauses 
clause role clause introduce variables attached context path expressions 
output clause set tuples tuple containing variable bindings matching context data path 
recreation guide restaurant season winter address floor season summer daytime noon address floor evaluated moem database clause gives set single tuple tuple values correspond variables 
clause written recreation guide restaurant season winter address floor season summer daytime noon address floor lorel curly brackets introduce object variables middle long paths 
object variables curly brackets context multidimensional 
multidimensional object variables appear immediately facet part explained section 
important point inherited coverage qualifier context specifier proposition clause equivalent context variable context pattern clauses equivalent refers path inherited coverage multidimensional query language individual edges curly brackets convenient way introduce object variables middle context path expressions time allows context variables context patterns qualify long paths 
notice case context qualifier qualifies path qualify second default inherited coverage qualifier implied case object variables embedded context path expression need include inherited coverage qualifier qualify complete path 
select clause select clause constructs results 
result mql query multidimensional data graph form mssd expression constructed template provided select clause 
query select restaurant name winter floor recreation guide restaurant season winter address floor name evaluated database returns mssd expression restaurant name winter floor th gives results query pictorially 
simplicity graph display value leaf node represents name restaurant write value 
notice multidimensional object variable binds implied multidimensional node introduced transformation moem canonical form 
explains universal context results 
facilitate comparisons indicate query results oids objects appear database 
keep mind oids query results necessarily oids corresponding objects database 
context variables expression predicate equivalent expression predicate multidimensional query language results mql queries multidimensional data graphs 
name winter floor 
restaurant th parking availability parking availability parking available 
daytime evening parking 
available daytime evening 
parking available daytime evening parking 
available daytime evening variables appear select projected variable bindings coming clause resulting multiset bag new tuples set keyword distinct 
instance case different restaurant objects different values point name floor objects identical tuples results keyword distinct follows select 
duplicate elimination objects oid 
seen mssd expression template select clause contain multidimensional object variables context object variables place object values 
contain context variables shown query select parking availability parking available recreation guide music club parking context variable binds explicit contexts correspond parking facets result query mssd expression parking availability parking available daytime evening parking availability parking available daytime noon results shown graph 
notice values context variable string values objects result similar query follows select parking available recreation guide music club parking result query brevity graph complete 
assume parking facets complex objects 
consider atomic 
replaced 
similar case lorel label variables path variables convert metadata label names data string values objects result 
multidimensional query language parking available daytime evening parking available daytime noon depicts results query graph 
observe parking availability omitted objects parking available longer grouped pairs 
reason variables bound pairs parent object reflect results information value corresponds value lost 
context variables place context edge labels template select specifying explicit context context edges results 
section discusses advanced features select including omission labels context path expressions examines complex cases constructing mql results 
clause clause differ lorel counterpart filters results exactly way select restaurant name winter floor recreation guide restaurant season winter address floor season summer daytime noon address floor name terrace query returns name restaurant floor operates winter restaurants operate terrace summer 
important realize restaurant points name multidimensional object comprises facets restaurant participate different restaurant objects result query name facet 
happens mql group objects automatically creates objects results tuples variable bindings 
grouping objects discussed section 
interesting point coercion comparison terrace exactly lorel 
variable bound object compared string 
normally comparison give false type mismatch coercion returns true value object currently bound equal string address contain floor facet holding summer cause type error simply fail condition coercion facilitates formulation queries data varying structure irregular types missing fields 
coercion mql way lorel alleviates need know value number string allows compare value object allows compare objects coercion take place equality determined comparing oids 
lorel operator force coercion comparison values comparison oids 
lorel special value nil indicates object binding variable common case semistructured data structure varying 
presence nil condition condition false 
addition nil value cause creation new object result graph 
multidimensional query language object set objects implying existential operator 
query shows example select name recreation guide restaurant name review score expression review score ends facet part evaluates set context objects compared numeric value 
facet part necessary mql forces evaluation context objects context path expressions compared strings numeric values 
query interpreted select name recreation guide restaurant name exists review score facet part context path expression optional context object variable forces evaluation context objects 
query contexts implied context qualifiers default impose conditions contexts 
note lorel query meaning syntactically similar particular mql query mql context features mql queries simple formulate lorel queries 
effect context path expressions imply parts clause 
example consider select club menu name exists recreation guide menu query uses context path expression select labels omitted mssd expression template 
issues addressed section 
wildcard matches entity edge label discussed section 
variables introduced part context path expressions clauses example select 
context path expression implies clause select club menu name recreation guide menu exists evaluated database form clause binds tuples nil 
binding corresponds restaurant variable binds special value nil restaurant object contain menu 
second tuple fails condition select returns club menu object 
condition second club menu object containing just name object included results 
clause clause plays role clause contexts expresses context conditions context variables introduced clauses 
context predicate satisfied tuple variable bindings tuple filtered 
multidimensional query language select row context menu recreation guide music club menu lang gr en query uses context variable transform context metadata database normal data result graph filter unwanted nodes clause 
returns menus music clubs greek english corresponding explicit context 
similar clause context predicate clause may contain context variables context specifiers context patterns context operation symbols brackets keywords 
complete specification syntax clause appendix context clause context clause defines new context variables subsequently select clause constructing result graph 
values newly introduced context variables calculated separately tuple variable bindings passed select clauses results inserted corresponding tuple augment 
select menu worlds context union recreation guide music club menu oid query uses context aggregate function union compute worlds exists menu facet music club oid 
function oid returns oid object string 
evaluated moem result mssd expression menu worlds lang gr en fr example consider query select comments language contents context lang recreation guide comments returns comments facet actual comments language 
symbol wildcard matches path explained section 
keyword shorthand complete domain dimension 
query binds context variable inherited coverages context edges leading comments facets 
inherited coverage may contain dimensions lang example dimension detail 
dimensions screened context clause context intersection context pattern lang 
way contains languages facet holds leaving dimensions 
context patterns context intersection context union context difference mask context specifiers described section 
context clause may define number context variables separated commas 
context variable defined context clause appear right side keyword variable definition clause 
variable definition right side multidimensional query language contain context variables context specifiers context patterns context operation symbols brackets context aggregate functions union intersect function extension turns context worlds 
reality context specifiers returned extension may represent worlds strict sense function assumes set dimensions contains dimensions appear current context argument 
specifically function extension produces new set context specifiers context bound context variable follows parameter value nil contains universal clause set containing nil returned parameter value empty context empty set returned case set context specifiers correspond context extension parameter value returned 
example shows extension context argument extension lang gr en detail low lang gr detail low lang en detail low lets assume context variable fi result set extension value vi si subset tuples variable bindings extension called value vi 
new set tuples variable bindings calling extension fi si 
symbol represents cartesian product set union cartesian products section demonstrate extension example query 
complete specification syntax context clause appendix dimensions dimension domains mql shown previous chapters necessary know actual set dimensions order carry context operations mql 
mql know set dimensions database computes context operations context specifiers hand 
seen certain context operations necessary know dimension domains dimensions involved 
assume dimension mql complete information access information concerning domain dimension 
advanced issues features query languages semistructured data orthogonal context driven queries easily incorporated mql require attention 
intention show context incorporated query language focus 
section continue presentation mql key issues general context path expressions nested mql queries construction results 
parameter bound context variable context specifier 
case context specifier union intersect return 
multidimensional query language general context path expressions general context path expressions extend simple context path expressions powerful syntax gives mql flexibility pose queries exact knowledge database structure 
general context path expressions feature regular expressions wildcards 
section introduce mql label variables path variables part general context path expressions closely related 
regular expressions core language abs mql uses regular expressions fri levels level entity edge labels level entity parts facet parts example follows looks review facets objects name contains music music detail high mm review quotes signifies regular expressions apply level labels level entity parts facet parts 
mm matches labels music club live music hall 
means sequence zero characters 
context pattern detail high denotes corresponding path inherited coverage contain world detail high 
example uses regular expressions level entity parts facet parts looks menu facets greek music clubs restaurants lang gr recreation guide music club restaurant menu regular expressions levels combined shown example theater zip season summer address code zip context path expression label entity edge departing theater facet starts zip inherited coverage qualifier implied defaults path 
alternatively theater facet may lead address edge corresponding address facet followed code edge edge label starts zip 
case inherited coverage qualifier path starts address season summer 
regular expressions level entity edge labels straightforward hand level entity parts facet parts requires attention 
legal sequences entity parts facet parts general context path expression component short component may forms 
symbol means disjunction means occurrences means occurrences means occurrences 
third level contexts express constraints certain dimensions fully defining context specifier 
covered context patterns section 
remember context path expression contain facet parts facet parts implied 
theater entity edge followed context edge leading theater facet 
multidimensional query language avoid formulation illegal context path expressions label facet parts stacked distinguish kinds components depending type initial final parts starts entity part ends entity part 
starts entity part ends facet part 
starts facet part ends facet part 
starts facet part ends entity part 
legal initial part allowed follow final part disjunction components kind 
symbols components 
allowed 
generally speaking variables introduced components 
type variable appear component context variables placed inherited coverage qualifiers context variables appear explicit context qualifiers components 
case context variable appears disjunction depending matching context data path value may special value nil concerning symbols inherited coverage qualifiers component occurrence repeated subsequent occurrences instance component quality high part signifies expressions form quality high part part part 
notice inherited coverage qualifier quality high qualifies complete path repeated individual part entity edge 
kleene closure introduces problem graph databases contain cycles regular expression terminating may match infinite number data paths 
number ways deal issue allow crossing object twice matching regular expression aqm 
wildcards wildcards useful labels path known relative position path known 
mentioned empty context qualifier behaves context wildcard matching context 
analogously wildcard matches entity edge label 
example consider context path expression uses wildcard regular expression matches low detail review facet database deeply nested similarly nil object variables presence nil context condition context condition false 
addition nil value context variable cause creation new object result graph 
context operations nil evaluate nil presence nil context aggregate functions ignored 
mentioned extension nil returns set containing nil 
shown section repeating inherited coverage qualifier path qualifies results equivalent context path expression qualifier form context specifier 
qualifier context pattern context variable new context path expression equivalent original 
inherited coverage qualifiers occurrence allow context patterns context variables regular expressions qualify paths individual edges 
multidimensional query language recreation guide review detail low wildcard denote path consisting zero entity edge context edge pairs 
particular stands component signifying expressions form 
hand shorthand component signifies expressions form example written recreation guide review detail low wildcard preceded inherited coverage qualifier component stands signifies expressions form component stands signifies expressions form facet part entity part pairs 
path variables label variables mql incorporates path variables encountered lorel label variables encountered unql 
path variables form bind context data paths defined section 
clause test context data paths equality select clause output context data paths query results 
bound path variable appear function strips context data path oids inherited coverages transforms sequence entity edge labels context edge labels form ec ec 
path variable appears select new node created result graph bound path having path string value 
select distinct menu greek recreation guide menu lang gr query returns paths lead menu multidimensional objects comprise greek facet 
part context path expression corresponds path variable enclosed brackets path variable binds matching context data paths start root facet context node menu edge departs 
different context data paths different clubs give path sequence edge labels distinct duplicate elimination 
moem path returned consists entity edge context edge 
menu greek music club query uses wildcards path variables detect edges database hold world 
implied final part entity part expression legal facet part 
similarly implied final part facet part expression illegal 
path variable analogous function lorel repeating character 
contrast lorel mql considers part path variable identifier 
select violation root union select violation root multidimensional query language query union separate queries 
query uses path variable bind context edge empty inherited coverage second uses path variable bind entity edge empty inherited coverage 
keyword union merges roots result graphs common root eliminates duplicate edges departing new root 
form final results depicted 
value object corresponds context edge value second entity edge empty inherited coverage ec denotes explicit context label denotes entity edge label 
multidimensional data graph node empty inherited coverage incoming outgoing edges empty inherited coverage 
query return violation object database contain edge node empty inherited coverage 
ensure database graph moem need check context deterministic 
query returns pairs context edges violate context determinism pairs exist select cxt violation cxt edge cxt edge root result query form depicted case union intersect perform respective operations queries duplicate edges considered edges label lead objects corresponding object database 
note actual violation cxt violation objects result graph corresponding mirror bindings multidimensional query language finding empty inherited coverages context determinism violations database graph 
violation ec violation violation label 
cxt violation cxt violation cxt violation cxt edge cxt edge 
cxt edge cxt edge ec 
ec label variables form bind entity edge labels 
label variable bind context edge labels case labels explicit contexts context variables 
label variables seen special case path variables expressed binding path consists single entity edge 
benefit having label variables separate variable type place entity edge labels constructing results pointed abs label variables hide specific subobjects object results 
consider query select recreation guide name query label variable binds labels entity edges depart root facets lead context edge name multidimensional objects 
variable binds entity edge label wildcard matches entity edge label 
query returns name multidimensional objects pointed entity edges denote corresponding establishment type music club restaurant 
label variables appear place object values select converting database metadata data results 
mql query select distinct restaurant attr recreation guide restaurant 
returns different attributes restaurants database object values path variable construct edges results path string general case legal label edge 
section presents example query uses context variable hide facets objects depending explicit contexts labels context edges 
label variables similar way hide multidimensional objects depending labels entity edges 
restaurant attr name restaurant attr address restaurant attr review restaurant attr parking multidimensional query language notice mql encloses values label variables quotes object values template select clause 
summarizing label variables bind entity edge labels context variables explicit context qualifiers bind context edge labels explicit contexts 
hand path variable bind entity edges context edges sequence edge label template select constructing results 
label variables path variables usually attached wildcards components bind matching parts graph 
component allowed contain objects variables enclosed path variables label variables context variables explicit context qualifiers 
context path expressions contain variables called augmented general context path expressions syntax formally specified appendix nested mql queries mql queries nested 
subquery may appear select clause query new nodes created inner query incorporated results outer query 
inner queries variables bound outer queries select club comments select gr comments lang gr comments recreation guide query variable binds music club restaurant multidimensional objects 
binding inner query gets comments facets greek irrespective deep database graph 
result outer query groups matching comments facets restaurant music club belong mentioned section happen automatically mql 
evaluated graph query returns club comments gr comments club comments gr comments gr comments line corresponds music club second club comments contains comments restaurant 
notice inherited coverage qualifier lang gr exist query second line results include node 
interesting point multidimensional object variable context object variable reason want group comments multidimensional entity refer particular club facet 
music club multidimensional entity consists single facet general case comprise facets leading number comments nodes 
comparison similar query group comments select gr comments recreation guide lang gr comments query gives gr comments gr comments gr comments multidimensional query language section mentioned aggregate functions union context clause relevant example section returned worlds exists menu facet music club specific oid 
example elaborates returns available menu languages restaurant music club database 
select place select place name menu langs context union lang menu name recreation guide example uses nested query group contexts applying aggregate function 
specifically outer query binds variable music clubs restaurants 
music club restaurant multidimensional object inner query binds variable name facets context variable inherited coverage context edges lead menu facets 
context union inherited coverages computed context clause current music club restaurant aggregate function union 
result aggregate function context specifier representing worlds menu facet holds specific place music club restaurant 
context specifier may include dimensions lang example detail season restrict result lang intersect context specifier context pattern lang screens dimension specifiers refer lang 
mentioned shorthand complete domain dimension 
denotes languages exists world menu facet holds 
evaluated graph query returns mssd expression place place name menu langs lang gr en fr place place name place object corresponds music club 
second place object corresponds restaurant contain menu langs object variable bound nil 
restrict results objects contain menu add clause exists menu query 
observe name multidimensional object music club restaurant facets corresponding place object contain place name menu langs pairs 
multidimensional object variable avoid repetition pairs appear music club restaurant contains name multidimensional objects 
grouping hypothetically name objects place require additional nested query 
moem facets multidimensional entity accessible incoming entity edge may hold common world incoming edge 
depending name entity edge label multidimensional entity different facets may accessible corresponding worlds 
query follows finds facets accessible incoming entity edges entity edge database 
multidimensional query language select ett edge id cxt edges select id root result query form graph 
finding inaccessible facets incoming entity edge 
label ett edge ett edge ett edge id cxt edges id cxt edges 
id ec id 
ec entity edge object id specifies edge object cxt edges contains ids inaccessible context edges leading inaccessible context objects 
facets multidimensional entity accessible entity edge corresponding cxt edges id children observe context variable introduced outer query inner query determine entity edge context edge hold common world 
construction results result mql query multidimensional data graph form 
mql constructs results template specified select clause 
due fact multidimensional data graph types nodes types edges mql cover possibilities results conventional semistructured data 
follows explain distinct types nodes edges handled mql constructing results 
discuss context path expressions select clause 
discuss mql partially reduce case result graph contain complex nodes leaves 
legal mql result multidimensional data graph 
section explain keyword holding eliminates nodes 
id id 
id 
multidimensional query language result graph returning subgraph node edge holds world 
constructing entity edges context edges context path expressions built canonical form multidimensional data graph result graph mql query needs canonical form 
constructing results mql needs ensure edges departing node correct type entity edges depart context nodes context edges depart multidimensional nodes 
mql results constructed basis template select clause defines sequence context nodes multidimensional nodes results 
template curly brackets 
signify context objects angle brackets signify multidimensional objects 
template contain place entity edge label string comply entity edge label syntax 
string label entity edges results 
label variable 
entity edges created results having labels values bound label variable 
template contain place context edge label string comply context specifier syntax 
context edges string label created results 
context variable 
context edges created results having labels context specifiers bound context variable 
summarizing mssd expression template contain edge labels strings label variables curly brackets context objects context specifiers context variables angle brackets multidimensional objects 
template contain type variable object values context object variables multidimensional object variables context variables label variables path variables 
especially root result graph curly angle brackets omitted template 
type root node implied type labels consider equivalent queries select recreation guide comments select recreation guide comments effect queries copy context edges point comments facet database results difference context edge inherited coverage database explicit context results 
comments facets gathered multidimensional object root result graph context edges depart obviously template specifies edge departing root edges agree type root context multidimensional 
multidimensional query language detail high detail high lang gr detail high lang en detail high lang gr fact root multidimensional object explicitly declared query angle brackets confine mssd expression template select clause 
second query fact deduced context variable appears place edge label 
results depicted graph 
detail high 
results mql queries 
detail high lang gr detail high lang en detail high lang gr 


comments comments detail high detail high lang en detail high lang gr detail high lang gr 

comments comprehensible comments 
comprehensible comments 
comprehensible comments detail high lang gr lang gr lang en nested query refines example retains original grouping comments facets respective multidimensional objects 
curly brackets outer query angle brackets inner query correspond root omitted 
shows results pictorially 
select comments select recreation guide comments result query textual form comments detail high comments detail high lang gr detail high lang en comments detail high lang gr example consider query uses context variable hide results comments facets languages understood user 
filtering incomprehensible comments done clause 
detail case context variable binds explicit contexts inherited coverages 



multidimensional query language select comprehensible comments select lang gr en fr sp recreation guide comments graph results 
multidimensional comments object bound entity edge labeled comprehensible comments created points multidimensional node 
multidimensional node root inner query corresponds node current value fact comment facets greek english french spanish copied database results 
context path expressions select context path expressions appear select clause 
query select gr comments recreation guide lang gr comments equivalent query select gr comments recreation guide lang gr comments seen section returns comments facets greek database gr comments gr comments gr comments shown equivalent queries context path expression appears select clause clause may inferred exactly lorel aqm 
context path expression select facet part case query cause evaluation context objects 
context path expression ends entity part lang gr comments query follows results query contain multidimensional objects multidimensional object variable select comments recreation guide lang gr comments select comments recreation guide lang gr comments comments comments comments oid denote multidimensional node facet node introduced transformation graph canonical form 
inferring edge labels edge labels omitted mssd expression template select 
case issues arise infer missing edge labels results determine type root node 
concerning issue mentioned section multidimensional query language brackets indicate type root mql looks type edge label 
allowed omit brackets edge labels time labels missing brackets 
continue issue 
queries similar preceding queries edge labels missing mssd expression template 
query returns comments facets greek second returns comments multidimensional objects comprise facet greek select recreation guide lang gr comments select recreation guide lang gr comments queries context path expressions enclosed curly brackets declare root result graph context object 
curly brackets cause entity edges created labeled entity edge matching context data path leads respective node database 
case hand entity edge labeled comments context path expression contains wildcards regular expressions label results label database edge leading corresponding object 
viewed label variable select obj var cxt path expr obj var missing entity edge label inferred default label answer constructing result graph 
possible root results multidimensional object 
causes context edges created labeled final context edge matching context data path leads respective node database 
effect means explicit contexts copied results paired facets qualify database select recreation guide lang gr comments query equivalent select recreation guide lang gr comments evaluated graph query returns lang gr detail high lang gr order infer context edge labels final edge corresponding context data path context edge 
case context edge label inferred defaults empty context explicit context context edges results 
section introduces omission edge labels context path expressions select edge labels may omitted irrespective context path expressions exist select rules inferring missing edge labels case 
instance entity edge label inferred label user defined object template select clause may contain variable 
multidimensional query language grouping results seen previous sections nested queries group results 
alternative way group results context path expressions select clause bound clause select club comments gr comments lang gr comments recreation guide club comments gr comments club comments gr comments gr comments context path expression select interpreted second clause part implied nested query 
query equivalent nested query example section returns comment facets greek grouped establishment music club restaurant 
possible omit labels front context path expressions case inferred described previous section select club comments lang gr comments recreation guide equivalent nested query select club comments select lang gr comments recreation guide results difference inferred comments label gr comments label 
observe equivalent queries context path expressions conclude different parts 
context path expressions select context object variables force evaluation context objects 
context path expressions select conclude proper part entity part evaluation multidimensional objects facet part evaluation context objects 
context path expression select may viewed inner query 
compare queries results 
select name name winter floor recreation guide restaurant season winter address floor answer name name winter floor answer select name name winter floor recreation guide restaurant season winter address floor multidimensional query language answer name name name winter floor answer 
queries return restaurant name facets floor operates winter 
outer curly brackets imply missing entity edge label defaults answer keep restaurant names winter floor restaurant common parent object 
difference query context path expression name enclosed brackets second query enclosed brackets 
query context path expression equivalent inner query sense return graph single root binding 
name edges point name facets restaurant 
second query encloses context path expression brackets seen denoting root type equivalent inner query curly context angle multidimensional 
result restaurant name edge points object considered root implied inner query parent name facets 
important point context path expression select treated mql way result achieved inner query depends grouping brackets template select clause 
semantics context path expression select explained select label cpe cpe select label yx cpe cpe yx variable yx evaluates set value label attached root results mql creates node value label edges depart node leading values corresponding yx 
hand label attached root results separate nodes values created values sets bound yx grouped root 
reducing mql result graph irrespective database moem graph returned mql query may contain nodes edges hold world 
want ensure node edge results holds world 
keyword holding follows keyword select select clause causes removal nodes edges empty inherited coverage 
shown previous chapter result process multidimensional data graph leaves exclusively atomic nodes contains nodes edges survive part conventional oem holding world 
case result graph mql query context deterministic holding guarantees query return moem 
process operation takes place returning results query applied complete graph constructed mssd expression template select template variables substituted bound values inner queries evaluated 
order remove nodes edges hold world inherited coverages result graph need calculated 
multidimensional query language effect holding causes described previous chapter graph context pruning 
seen previous chapter combination graph context projection context graph context pruning equivalent partial reduction context consider query select holding guide facets detail low detail high recreation guide variable binds root database template pointed couple context edges explicit contexts detail low detail high 
context edges project database respective contexts keyword holding causes nodes edges empty inherited coverage removed 
result graph comprises partial reductions database context detail low context detail high 
query returns graph structure root multidimensional node departing context edges lead possible facets database hold world 
select holding context extension recreation guide variable binds root database context variable binds inherited coverage root 
remember inherited coverage root represents exactly worlds graph reduced oems 
context variable binds worlds function extension mentioned section turns context worlds represents 
effect context variable select new context edge constructed world database reduced oem context edges explicit contexts correspond worlds projecting separately database worlds 
previous chapter reduction oem world equivalent graph context projection context representing graph context pruning graph 
consequently result query graph comprising separate oem facets database difference decontextualized 
means multidimensional nodes context edges significant removed leaving oem facets moem form 
implementation top lore analogously lorel implemented top object database aqm implemented mql top lore mag 
prototype mql implementation consists application initialized moem database receives mql queries returns multidimensional data graphs results queries 
application interfaces lore back 
chosen lore basis implementing mql interesting see mql query query effect inherited coverage root contain universal clause 
explained previously context extension context defined contains universal clause extension returns nil 
case context edges created result holding applied consists multidimensional root node 
multidimensional query language compares equivalent lorel query moem expressed conventional oem 
evaluating mql queries lore infrastructure 
mql query query rewriting lorel query moem database result 
data graph oem oem oem database result oem graph architecture shown 
process want implement depicted dashed line starts mql query passes moem database concludes multidimensional data graph result query 
process takes place depicted normal line shows lorel query evaluated oem database returns oem graph result 
line ellipse shaped boxes part lore controlled application programming interface provides 
main issue define transformation multidimensional data graphs oems properties reverse transformation exists recovered possible translate mql query qm equivalent lorel query ql 
equivalent mean qm evaluated returns ql evaluated returns 
answer qm computed evaluating ql applying reverse transformation results ql 
transformations mql query translation depicted thick horizontal arrows 
application things implements arrows performs key steps 
converts moem database oem database database lore 

translates mql query lorel query passed lore evaluation oem database 
multidimensional query language 
gets results lore converts oem back multidimensional data graph 
multidimensional data graph step result mql query step evaluated moem database step 
step initializes database corresponds gray horizontal arrow steps carried time mql query submitted 
follows focus specifying key steps listed 
actual application implements evaluates mql queries part comprehensive system mssd chapter 
transforming moem databases oem order transform moem oem oem elements represent moem elements counterpart oem context edges multidimensional nodes context edges represented oem edges special label multidimensional nodes correspond oem nodes special edges depart 
find way encode context oem 
context just appear string value context specifier 
reason lorel understand notion context context driven queries translated lorel queries context encoded way lorel understand handle 
contexts encoded include explicit contexts inherited coverages edges play important role context path expressions mql queries 
representing multidimensional data graph oem 
icw icw icw cxt facet ett ett facet icw ett facet cxt icw cxt icw icw icw icw facet cxt icw multidimensional query language gives intuition transformation 
presents simple multidimensional data graph oem counterpart nodes capital letter correspond nodes respective lowercase letter observe edge additional node exists splitting edge oem edges 
role node group encoded context corresponding multidimensional data graph edge 
number reserved labels special meaning 
reserved labels start underscore ett facet cxt icw 
entity edge represented edge label edge labeled ett 
context edge represented edge labeled facet edge labeled cxt 
explicit contexts inherited coverages edges converted worlds represent possible worlds mapped integers edges labeled icw point enumerated worlds integers belong inherited coverages edges labeled point enumerated worlds integers belong explicit contexts 
actual transformation process multidimensional data graph vmld vcxt ecxt eett oem 
process assumes exists mapping possible worlds integers 

world add new atomic node vcxt corresponds world having value respective integer 

move nodes vmld vcxt complex nodes 

edge eett add new complex node vcxt 
replace new edges ett eett 
world represented inherited coverage add edge icw eett corresponds world 

edge ecxt add new complex node vcxt 
remove ecxt add edges facet cxt eett 
world represented inherited coverage add edge icw eett corresponds world 
world represented explicit context add edge eett corresponds world 

return vcxt eett 
atomic nodes correspond worlds may pointed edge unreachable root 
easily avoided adding nodes vcxt moment steps step 
alternatively unreachable nodes removed process 
leave implementation 
addition function updated include values new nodes 
notice multidimensional data graph complex nodes multidimensional nodes leaves resulting oem complex nodes leaves 
step represent complex leaves multidimensional data graph oem atomic nodes reserved value multidimensional leaves oem atomic nodes reserved value 
guarantee multidimensional data graph transformed valid oem reverse transformation encoding context requires set dimensions known contrast moem mql represent query mssd 
multidimensional query language possible identify leaf nodes 
mainly interested transforming moem databases leaves exclusively atomic nodes 
translating mql queries lorel mql queries translated equivalent lorel queries evaluated oem transformation defined previous section 
translation moem database canonical form transformation oem takes place 
allows context path expressions built canonical form translated equivalent conventional path expressions 
section specify translation supports major features mql order get impression equivalent lorel query look 
addressed features mql difficult impossible translate regular expressions context path expressions general context path expressions 
left mql features essential purpose example context clause context patterns 
specify translation select clause mql select clauses mql lorel similar semantically 
spite similarity select clauses languages differ defining graph variable bindings hung 
consequently select clause mql translated returned graph constructed lorel interpretation mql select clause 
prohibitive simple demonstrative queries 
context path expressions path expressions facilitate comprehension translated lorel queries hub identifier nodes ett edge departs mld nodes facet edge departs hub nodes cxt edge departs 
addition denote integers mapped worlds 
start simple mql clause label assume context specifier representing worlds correspond 
proposition context specifier repeated path qualifies clause written label clause written mql label equivalent lorel expression label hub hub ett mld mld facet hub hub cxt hub icw hub icw hub icw hub icw hub icw hub icw multidimensional query language clause states inherited coverages moem edges contain worlds specified 
observe variables declare node equal condition false consider complete mql query select restaurant name winter floor recreation guide restaurant season winter address floor season summer daytime noon address floor name terrace brevity denote context specifier season winter denote season summer daytime noon 
mql query written select restaurant name winter floor recreation guide restaurant address floor address floor name terrace equivalent lorel query select restaurant name winter floor recreation guide hub hub ett facet hub hub cxt restaurant hub hub ett facet hub hub cxt address hub hub ett facet hub hub cxt floor hub hub ett facet hub hub cxt variables way lorel implies condition multidimensional query language address hub hub ett facet hub hub cxt floor hub hub ett facet hub hub cxt name hub hub ett facet hub hub cxt terrace predicate hub predicate hub predicate hub predicate hub predicate hub predicate hub predicate hub predicate hub expressions predicate var ensure corresponding edges proper inherited coverage 
expression predicate var replaced var icw var icw var icw integers correspond worlds respective inherited coverage qualifier hub hub hub hub inherited coverage qualifier season winter hub hub hub hub inherited coverage qualifier season summer daytime noon 
edges correspond variables hub hub hub hub hub hub inherited coverage inherited coverage qualifier empty context included 
framework straightforward translate mql queries contain multidimensional object variables 
analytical form mql query example contains multidimensional object variables correspond variables equivalent lorel query 
addition easy accommodate explicit context qualifiers 
facet part ci ce result predicate form var icw var icw var icw var var correspond worlds inherited coverage qualifier ci correspond worlds explicit context qualifier ce 
translate wildcard mql wildcard lorel possible translate mql queries contain wildcard 
specifically inherited coverage qualifier path empty context possible translate mql queries regular expressions 
reason introduce multidimensional query language variables unknown path assert conditions corresponding inherited coverages 
context variables clause consider mql query select comments recreation guide restaurant review comments detail high lang gr uses context variable find comment facets greek high detail step express context specifiers lorel queries 
suppose detail high represents worlds correspond 
lorel query express detail high select recreation guide icw lets detail high refer query lang gr refer similar lorel query expresses lang gr 
addition symbol var refer lorel query expresses path inherited coverage review comments value context variable 
lorel query hub icw intersect hub icw intersect hub icw intersect hub icw query evaluates worlds edges path hold 
expressed contexts queries evaluating sets nodes represent worlds express context subset relation queries 
assuming query expresses context query context condition context subset implemented predicate left query exists right query left right left right variables range worlds left right side symbol respectively 
mql query translated lorel query select comments recreation guide hub hub ett facet hub hub cxt restaurant hub hub ett facet hub hub cxt review hub hub ett facet hub hub cxt query expressed simpler way general case sake example 
multidimensional query language comments hub hub ett facet hub hub cxt left var intersect detail high exists right lang gr left right lorel queries similar way possible implement context operations clause 
transforming oem results multidimensional data graph lore returns result lorel query oem graph explained oem graph transformed multidimensional data graph result original mql query 
process transforms oem multidimensional data graph 

represent multidimensional data graph vmld vcxt ecxt eett vcxt eett vmld ecxt empty sets 

edge eett reserved label remove vcxt 
remove ett eett add edge eett 
remove edges icw eett 

edge facet eett move vcxt vmld moved remove vcxt 
nodes eett apply context union corresponding worlds get context specifier remove cxt eett add edge ecxt 
remove edges icw eett 

remove vcxt nodes correspond worlds 

return vmld vcxt ecxt eett 
step removes atomic nodes integer values correspond possible worlds 
nodes easily spotted moment unreachable root process function may include value assignments nodes exist 
notice order reconstruct context specifiers step needs mapping worlds integers transforming moem database oem 
summary chapter multidimensional query language mql short query language multidimensional semistructured data 
focus mql queries queries context taken account choosing right data 
encoded xml 
multidimensional query language mql largely lorel retains major contributions path expressions coercion 
addition introduces number new features order manipulate context queries 
context mql recognized treated class citizen 
directly support context conditions context operations mql uses additional clauses 
handle complex data model 
data model mql multidimensional data graph uses types nodes types edges representing multidimensional information entities facets 
calls new way navigate define access patterns graphs 
affects way result graphs constructed 
address issues defined context path expressions incorporate context conventional path expressions employ canonical form multidimensional data graphs formulate context aware access patterns 
context path expressions context specifiers context variables context patterns pose context conditions database graph 
enhanced context path expressions integrating regular expressions way allows meaningful combinations edge types 
interesting point class context path expressions viewed defining joins conventional oems hold different worlds 
introduced mql special clauses handling context clause expresses conditions context clause context creates new context variables construction results 
examined select clause detail focused construction results consist types nodes types edges context path expressions select 
explained mql reduces result graph making properties previous chapter 
complete discussion mql number features particularly affected context path variables label variables nested queries 
appendix formally define syntax context path expressions mql 
prototype implementation mql demonstrates mql query compares equivalent lorel query context driven queries mql moem obviously far expressive elegant lorel oem conventional queries mql context path expressions simple formulate lorel conventional path expressions 
view potential mssd expressiveness mql justify extensions oem introduced previous chapter 
additional element types multidimensional data graph mql formulate cross world queries counterpart context unaware databases 
mssd accommodate changes multidimensional semistructured data mssd semistructured data different facets different contexts 
various aspects mssd explicated previous chapters 
context defined representing alternative worlds expressed assigning values set user defined variables called dimensions 
notion context incorporated oem leading multidimensional oem moem graph model mssd 
multidimensional query language mql proposed posing context driven queries mssd 
chapter developed previous chapters give solution specific problem example application order demonstrate potential mssd 
problem stated follows oem graph comprises database way represent dynamically changes database occur keeping history transitions able subsequently query changes 
follows start reminding definitions oem basic change operations introducing basic change operations moem 
define way moem represent history oem database 
discuss multidimensional data graph properties applied case representing oem histories show temporal oem snapshots obtained reducing moem 
system implements follow example scenario demonstrates underlying moem database accommodate changes oem database 
furthermore show moem capable model changes occurring oem databases multidimensional oem databases 
demonstrate mql pose various queries history evolving oem moem databases 
compare approach previous representing querying histories semistructured databases 
moem basic change operations conventional oem graph defined suc aqm quadruple set nodes set labeled directed edges string special node called root function mapping node atomic value type integer string reserved value denotes complex object 
order modify oem database basic change operations identified 
nid val creates new node nid new node oid nid val atomic value reserved value node reachable root path 
mssd accommodate changes nid val changes value existing object nid new value val 
node nid outgoing edges case old value edges removed prior updating value 
adds new edge labeled object object nodes exist exist removes existing edge 
nodes exist moem database vmld vcxt ecxt eett introduce basic operations changing remember vmld vcxt set nodes ecxt eett set edges cid val new context node created 
identifier cid new occur vcxt 
value val atomic value type reserved value cid val changes value cid vcxt val 
node outgoing edges 
mid new multidimensional node created 
identifier mid new occur vmld 
cid id creates new entity edge label node cid node id cid vcxt id cid id removes entity edge cid id edge cid id exist eett 
mid cxt id creates new context edge context cxt label node mid node id mid vmld id mid cxt id removes context edge mid cxt id context edge mid cxt id exist ecxt 
oem moem object deletion achieved edge removal oem moem persistence object determined object reachable root 
result single basic operation leads inconsistent state instance new object created temporarily unreachable root 
practice typical sequence un basic operations ui corresponds higher level modification database 
associating higher level modifications timestamp oem history defined sequence pairs denotes set basic change operations corresponds associated timestamp 
note single sequence newly created node may unreachable root considered deleted 
sequence unreachable nodes considered deleted referenced subsequent operations 
basic change operations apply multidimensional data graphs general chapter focus 
mssd accommodate changes representing oem histories moem section give detailed explanation way moem represent changes oem database 
discuss multidimensional data graph properties inherited coverage reduction apply case representing oem histories 
particular show reduction oem partial reduction obtain temporal snapshots oem database 
moem model oem histories approach map oem basic change operations moem basic operations way new facets object created changes occur object 
manner initial oem database transformed moem graph uses dimension domain time represent oem history valid assume time domain linear discrete 
assume reserved value start start representing time 
reserved value representing current time 
time period context node holding node corresponding multidimensional entity denoted qualifying context node context specifier form tn 
remember context specifiers syntactic shorthand vn discrete totally ordered domains means values vi vi vn 
initial oem database transformed multidimensional data graph show section moem 
mssd accommodate changes modeling oem basic change operations moem 
lab lab lab lab start lab lab lab lab lab lab lab start lab lab start lab lab lab lab lab lab lab lab lab lab lab lab lab lab start lab lab lab lab lab lab gives intuition correspondence oem moem operations 
consider sets basic change operations timestamps respectively 
shows moem representation atomic object value changed call basic change operation 
shows result operation shows result operation multidimensional entity 
interesting notice oem basic change operations similar update object atomic complex mapped moem operations update new facet original object 
creating new node result additional moem operations new node subsequently linked rest graph set ui operation cause new object facet created 
worth noting changes induced oem basic change operations affect localized parts moem graph propagate graph 
shown oem object may correspond number moem objects different oids perceived oid change history oem object 
implementation issue real problem 
having outlined approach give detailed specification 
utility functions procedures defined moem 
mssd accommodate changes 
id md id id id returns multidimensional node context node exists 
id vcxt exists element mid cxt id ecxt id id mid returned 
id vcxt corresponding context edge exists id returned 
id vmld id returned 
assume multidimensional node pointing context node words cid vcxt mid mid cxt cid ecxt 
notice property moem specific problem special way moem graph constructed representing histories apply general case 

boolean cid cid vcxt 
checks context node cid created current set basic change operations 
function change operations progress returns true cid created set 
returns false cid created previous set operations 

procedure id id vcxt creates new multidimensional node mid pointing id redirects incoming edges id mid 
note procedure alters graph information modeled graph multidimensional entity created procedure node id facet holding world id mid mid start id id eett mid id 
procedure id id ts id id vcxt ts id currently facet multidimensional entity id new facet 
procedure arranges context specifiers accordingly 
id id ts md id id md id ts id md id ts id step show oem basic change operation implemented basic moem operations 
assume oem operations part set timestamp ts node context node corresponding multidimensional entity entity exists 
changes happen current snapshot oem corresponds facets moem multidimensional entities 
context node holding current time node context specifier form 
initial graph resulting graph canonical form 
mssd accommodate changes newval oem change operation created value updated directly process terminates 
pointed multidimensional node new multidimensional node created having context node context specifier start 
new facet created value newval facet adjusting relevant context specifiers 
node updated outgoing edges edge copying takes place contrast case 
newval exists cxt ecxt newval ts newval oem change operation created directly new edge added process terminates 
pointed multidimensional node new multidimensional node created having context node context specifier start 
new clone facet created copying outgoing edges case context specifiers adjusted ts taken account facet depicted ts 
new edge specified basic change operation added facet 
note frame representing changes moem constructed way entity edge point directly context node qc exists context edge qm cxt qc points corresponding multidimensional node qm qm exists 
achieved function md combination 
exists cxt ecxt ts eett md md oem change operation process essentially difference removing edge process adding 
calls replaced calls arguments 
mssd accommodate changes val oem change operation basic change operation mapped val steps 
new facets created new edges added connect node rest graph 
applying mssd properties previous section explained history oem database incorporated moem graph multidimensional nodes context edges 
shown graph moem graph 
obviously multidimensional data graph order moem graph context deterministic node edge non empty inherited coverage 
section examine mssd properties context determinism inherited coverage reduction applied particular case representing oem histories 
show multidimensional data graph constructed specified section moem furthermore moem special characteristics generally encountered 
multidimensional data graph produced process specified section multidimensional entity multidimensional node facets en cn context specifiers respective context edges 
process section guarantees special properties context edges point context nodes en exclusively context nodes 
context node ei facet multidimensional node context edge point ei 
multidimensional node possibly root pointed entity edge 
time instance world 
leaf nodes exclusively atomic nodes procedure constructs context edges multidimensional entity explicit contexts cn define disjoint sets worlds 
consequently inherited coverages context edges mutually exclusive context subsets corresponding explicit contexts 
special property world start navigate context node context edges hold context deterministic 
addition procedures seen form start cn form context union cn start explicit contexts cn cover complete start time range case corresponding inherited coverages holds assuming successive states database history non empty oems leaves atomic nodes 
mssd accommodate changes denote true life span entity facets 
lets discuss context coverage 
special properties context coverage context nodes multidimensional nodes entity edges start universal context 
context coverage context edge explicit context 
case representing oem histories context coverage propagate constraints node edge inherited coverage coincides inherited context 
lets examine meaning inherited context multidimensional entity corresponds node existed time evolution oem graph 
facets correspond oem changes affected node 
edges pointing correspond edges pointed node time evolution oem graph 
addition inherited context edges pointing allow en survive world 
ei explicit context ci inherited context context node ei 
seen start cn facets en incoming edges restrict explicit contexts inherited context may value greater start inherited context en may second value smaller 
easy see elements empty inherited coverage context deterministic moem 
addition inherited coverage root universal context meaning time instance start reduce oem holding consequently oem database moem database represents history possible specify time instance time domain reduce oem database holding snapshot time instance possible apply partial reduction set time instances tn 
case moem sub graph returned encompassing oem snapshots tn 
implementation oem history oem history application developed java java cl implements method described section representing oem histories 
seen oem history employs multi document interface mdi internal window displaying data graph 
main windows displays moem graph corresponds internal model application shows current state oem database 
furthermore user ask snapshot database time instance time domain oem graph separate window 
toolbar left side contains buttons correspond oem basic change operations window oem depicting current state database 
reality buttons invoke operations update internal moem data model application model maintained oem history 
current oem database result moem reduction oem world 
tick button left toolbar removes nodes accessible root 
button toolbar marks sequence basic change operations specified section 
mssd accommodate changes commits changes database common timestamp 
operations moem reduction oem initiated upper toolbar application menu 
initial state example database oem history application 
see initial state oem database containing information employees corresponding moem graph 
right window displays underlying moem model left window displays result moem reduction 
mssd accommodate changes example database couple sequences basic changes initial database state 
shows current state oem database corresponding moem graph couple change sequences 
time instance salary john increased 
time instance new employee called peter joined salary 
example database sequences basic changes database 
mssd accommodate changes change sequences applied 
salary peter increased time instance quite peter left time instance 
note shown left window display current oem 
depicts snapshot oem database time instance obtained reducing oem moem right window 
snapshot identical initial state database change occurred time instance 
representing changes moem databases representing history oem databases moem interesting property 
section show moem expressive model histories 
words moem database evolving time possible maintain moem database represents history approach similar section show moem basic change operations applied mapped number moem basic change operations way represents history gives intuition mapping basic operations 
context edge labels cn denote context specifiers involving number dimensions dimension defined section 
note dimension preclude dimensions range time domains 
moem operations depicted basic operations occurring corresponding graphs show operations transform 
simplicity graphs left side contain context specifiers dimension timestamps 
easy envisage case left side timestamps progressively increase value look follow similar pattern 
general multidimensional data graph constructed represent changes occurring multidimensional data graph section oem shown moem assuming successive states history non empty 
lab mssd accommodate changes modeling moem basic change operations moem 
lab lab lab lab lab lab lab lab lab lab lab lab lab lab lab lab start lab lab start lab lab lab lab lab lab lab lab lab lab lab lab lab lab lab start lab lab lab lab shows facet oid value changed call 
shows result operation 
depicts basic operation 
moem basic operations shown similar difference entity edge removed facet added 
addition similar adding context edge removed 
moem basic operations mapped record change new nodes connected rest graph calls 
moem graph constructed process outlined represents history moem database contrast case oem histories world defined giving value single dimension representing time case moem histories world involves general dimensions including time dimension specifying time instance define set worlds set dimensions may combination values respective domains 
order get temporal snapshot partial reduction 
applying process partial reduction time instance get snapshot mssd accommodate changes moem database possible apply partial reduction set time instances tn 
case moem sub graph returned encompassing moem snapshots tn 
representing history multidimensional music club moem 
music club season fall winter spring season summer city street zipcode name address city street athens review detail high detail low score comments start detail high detail low score season fall winter spring season summer season season summer fall winter spring comments start city zipcode street name address street city athens music club example consider moem graph represents history multidimensional music club 
initial state database depicted contain nodes outgoing edges introduced change operations 
sequences changes occurred time instance summer address club changed address different street zipcode time instance review score changed 
sequence changes involves redirection context edge points newly added node node 
redirection achieved call subsequent call addressed 
second sequence changes call node addressed 
querying changes mql approach keeps different versions object change encompassing histories corresponding multidimensional entities strict step taken obtain temporal snapshot database context edges explicit context concerning dimension significant removed 
step considered similar de contextualization defined chapter 
city street review mssd accommodate changes collection object snapshots 
interesting notice simpler representation allowed reduction database temporal snapshots context edges depart multidimensional root lead graphs database states occurred labeled valid period corresponding database state 
effect method keeps copy database sequence basic change operations clearly waste space allows reduction straightforward way 
important benefit representing changes level multidimensional entities collection database snapshots stems queries formulate retrieve information evolution entities 
section give examples queries demonstrate mql frame current problem 
start querying histories oem databases continue querying histories moem databases 
querying oem histories query examples moem database depicted 
context path expressions mql queries matched canonical form moem database path inherited coverage powerful property multidimensional data graphs 
facilitate comprehension queries depicts database transformed canonical form supplemented inherited coverages edges appear boldface characters 
shown transformation canonical form introduced multidimensional nodes 
important note transformation underlying moem database canonical form take place stage evolution oem database 
process specified section modeling oem histories equally applied underlying moem canonical form single exception moem canonical form need maintain canonical form new oem nodes created 
cover exception simple extension incorporated new context node created result val multidimensional node context edge pointing context node created 
effect moem database canonical form process section simplified considerably 
specifically longer necessary call procedure id create multidimensional node transformation canonical form introduced multidimensional nodes needed go minor point context edges created transformation canonical form explicit context universal context context edges created id explicit context start case universal context representing possible world 
mssd accommodate changes moem database canonical form supplemented inherited coverages edges 
employee start name start john start start start start start employee start salary start start start db start start employee employee name peter salary start multidimensional entities database model oem objects may submitted changes mql queries entities interpreted queries history corresponding oem objects 
simple get value oem object specific time instance 
query follows returns salary peter time instance select salary db employee salary name peter result query mssd expression salary 
context path expression db employee salary equivalent conventional path expression db employee salary evaluated conventional oem holds time instance 
object variable binds salary facet exists mssd accommodate changes oem 
result returned example path leading node holds time instances 
salary object returned single salary facet holds time period 
similar query returns name employee salary time instance greater equal select name db employee salary name result name peter 
retrieve information concerning history oem object 
query returns peter salaries periods valid select db employee salary name peter context variable binds inherited coverage context edges leading salary facets turn explicit context results result graph consists multidimensional root couple context edges depart leading context nodes 
observe inherited coverage context edge leading node database reflects fact peter joined time instance 
similar way inherited coverage context edge leading node database reflects fact peter left time instance 
inherited coverages appear explicit contexts results 
query retrieves time instances change occurred peter salary select period change db employee salary name peter result period change period change result indicates time instance change occurred salary peter 
notice context variable string value new atomic objects result 
smallest greatest values result denote life span salary multidimensional entity case happens continuous interval 
possible get life span multidimensional entity directly shown query follows mssd accommodate changes select lifespan context union db employee salary name peter clause context introduce new context variable context union values bound 
result lifespan 
get values oem object valid anytime period 
query looks peter salaries period 
select db employee salary name peter value context variable binds path inherited coverage represents time instances oems hold containing path leading value clause filter salary facets hold time instances 
query returns time instance greater time instance node returned 
period salary exists time instance peter left 
notice difference previous example looks salary holding period 
find oem object specific value 
query returns period john salary 
select valid time db employee salary name john result valid time valid time valid time context variable binds path inherited coverages paths database leading node exist objects result 
taken give period salary john 
want period single object context clause introducing new variable union 
alternatively different context path expression clause select valid time db employee salary name john case corresponds path consists context edge leading salary facet result valid time gives period salary john 
possible pose general questions history oem database 
mssd accommodate changes query follows finds oem objects changed creation select constant object value period db count query uses wildcard matches zero entity edge context edge pairs wildcard matches single entity edge 
object variable binds multidimensional object database corresponds root 
clause filters multidimensional objects facet 
remember moem canonical form context object facet multidimensional object multidimensional object associated context object facet 
result returned query select constant object value period db exploits fact oem object changed corresponding moem context object pointed context edge explicit context universal context 
example query returns employees salary changed time instance 
select employee data name salary valid period db employee salary name result employee data name john salary valid period clause checks period salary facet holds context superset period time 
notice node included results inherited coverage correctly indicates fact time instance salary ceased exist 
combine values valid times different oem objects formulate queries find value object object having specified value 
query returns salary ies john time peter salary select john salary db employee salary employee salary name john name peter result query john salary 
possible decompose multidimensional entity dimension mssd accommodate changes query gives snapshots time called acme select holding db name acme object variable binds multidimensional object exists facet name acme variables bind inherited coverages facets respectively select construct new multidimensional entity inherited coverages explicit contexts keyword holding causes nodes edges empty inherited coverage result graph removed 
effect holding causes partial reduction subgraphs bound corresponding contexts bound 
assuming name database acme final result depicted john partial reductions various contexts mql results 
name employee start salary start name employee salary employee john peter name start salary name employee john salary graph contains subgraphs state evolution 
subgraph node root corresponds state way facets point acme name included results long exists facet pointing acme multidimensional entity 
compare case clause contained name acme 
database inherited coverages edges leading facets happen explicit contexts 
mentioned previous chapter facilitate comprehension queries indicate query results oids objects appear database 
keep mind oids query results necessarily oids corresponding objects database 
clearly shown database object repeated results oid 
mssd accommodate changes time instance 
time employee called john 
second subgraph node root corresponds period 
period employees john peter 
notice john contains salary salary relevant period 
third subgraph node root corresponds period time 
period john employee salary remains unchanged 
observe reduction context time instance multidimensional node corresponding subgraph point exactly context node partial reduction analogous reduction oem time instance 
querying moem histories addition querying oem histories mql query histories moem databases 
section example queries moem histories focusing differences querying oem histories 
example queries moem depicted fact moem transformed canonical form 
observe transformation canonical form introduced new multidimensional nodes removed multidimensional nodes 
moem canonical form 
name start season fall winter spring city zipcode street start season summer address street city athens music club season summer city street review detail high detail low start score detail low comments start mssd accommodate changes plain vanilla query returns review music club time instance low detail select review detail low music club review result mssd expression review 
simple query specifies values dimensions related review gets review facet result 
may interested specifying constraints dimensions 
see representing moem histories dimension normally dimensions context specifiers 
want isolate dimension queries pose constraints dimension irrespective values dimensions 
elegant way achieve context patterns introduced previous chapter 
query retrieves music club address es time instance irrespective values dimensions select address music club address context pattern matches path inherited coverages contain world query returns objects 
step elaborates previous query returns addresses contexts addresses hold select address music club address result address start season fall winter spring season summer query uses context variable return contexts correspond address facets 
step suppose interested getting back dimension specified clause 
query returns results contexts containing dimension season select address context season music club address result address season fall winter spring season summer context clause uses context pattern season screen dimensions season contexts bound 
query demonstrates value versatility context patterns 
amplify observe context patterns query 
returns addresses hold exactly time instance irrespective values dimensions select address music club address mssd accommodate changes query returns object 
example query retrieves current address name clubs time instance located athens zipcode select club name name address music club address address city athens zipcode result query depicted shows club time instance located athens zipcode currently addresses summer rest year 
results mql queries moem histories 
name club address start season fall winter spring city street city street athens athens season summer detail high score start detail high comments detail low detail high score comments query follows returns reviews hold time instance actual valid time irrespective dimensions select context music club review result mssd accommodate changes start score comments result encompasses review facets hold time instance 
notice dimension appears contexts result dimensions detail screened context pattern 
query demonstrates context patterns manipulate contexts involve dimensions elegant powerful way 
final example query reduces partially review multidimensional object contexts 
select holding detail high music club review shows result graph 
multidimensional object variable binds node keyword holding causes nodes edges irrelevant reduction context removed subgraph 
partial reduction detail high gives review contents high detail time instance partial reduction gives review contents detail hold time instance 
related ability model temporal dimension real world essential computer applications 
past decades substantial amount research extending databases support time sa os tg bcw org 
addition research investigates ways incorporating time semistructured data gs xml gs gm gra sd 
problem representing querying changes semistructured data studied delta oem short proposed 
graph model extends oem annotations containing temporal information 
basic change operations considered authors order modify oem graph 
operations mapped types annotations 
annotations tags attached node edge containing information encodes history changes node edge 
oem basic change operation takes place new annotation added affected node edge stating type operation timestamp case old value object 
modifications suggested basic change operations take place edge removal results just annotating edge 
query databases query language proposed 
extends lorel constructs called annotation expressions placed path expressions matched annotations graph 
annotation expressions may contain time variables allow stating conditions timestamps 
deals single time instances time intervals introducing special keywords annotation expressions snap 
approach key concepts 
quite different changes represented introducing new facets adding annotations 
similar moem give snapshot oem database mssd accommodate changes time instance process reduction oem 
principal difference query languages stems expect different representations oem histories 
annotation expressions maintains central role notion oem basic change operations apply specific element occur specific time instance 
starting basis builds higher level concepts example element holding time interval complete path holding time instance 
hand notion oem basic change operations exist mql 
mql queries addressed results operations kept facets multidimensional entities 
central notion mql context means mql directly handles valid time intervals database elements database paths 
special graph modeling dynamic aspects semistructured data called semistructured temporal graph proposed 
graph node edge label includes part stating valid interval node edge 
modifications graph cause changes temporal part labels affected nodes edges 
approach representing temporal xml documents proposed leaf data nodes alternative values holding time period 
model allow dimensions time explicitly support facets varying structure nodes leaves 
approaches representing time xml include gm gra 
xpath data model extended support transaction time 
query language xpath extended transaction time axis enable access past states 
constructs extract compare times proposed 
sd xpath data model query language extended include valid time xpath extended axis access valid time nodes 
important advantage mssd approaches managing ssd histories mssd applied variety problems different fields representing valid time just possible applications mssd 
moem suitable modeling entities different facets problem encountered web representation semistructured database histories seen special case problem 
properties processes defined general case mssd path inherited coverage reduction oem partial reduction change case representing semistructured histories 
similarly mql especially querying histories semistructured databases targeted general case context dependent semistructured data 
concepts proposed part moem mql wider confined frame specific problem 
showed sections moem mql capable representing querying moem histories having introduce additional concepts 
summary chapter explained depth multidimensional oem graph model context dependent semistructured data represent history oem database 
introduced basic change operations moem specified pseudocode process encodes moem history oem database 
discussed multidimensional data graph properties apply particular case showed temporal oem snapshots obtained moem 
oem history implemented system demonstrated example process underlying moem database model changes oem 
addition showed mssd accommodate changes moem capable model changes occurring conventional oem databases moem databases 
important benefit approach stems queries posed oem histories moem histories 
approach maintains snapshots successive states object facets multidimensional entity 
allows formulation queries relate different states different object various time instances 
number mql query examples confirmed expressiveness mql value features example context patterns 
view example application moem mql demonstrates potential mssd 
applicability moem mql exhausted representing histories semistructured data 
context dependent data increasing importance global environment web mssd applied problems disperse domains delivery personalized information services information integration objects vary value structure sources representing querying geographical information possible dimensions scale theme 
multidimensional xml extensible markup language xml short markup language standard data representation exchange web xml wal cha 
xml resembles hypertext markup language html html short html focuses structure data presentation 
xml seen document centric perspective data centric 
document centric view originates sgml sgml markup language inspired design xml sees xml way embed web documents information structure 
data centric perspective perceives xml language suitable expressing semistructured data exchanging data web 
perspective emphasis querying describing relationships pieces data way similar database schema 
main characteristic xml extensibility terms defining new element types falls short comes representing information display different facets different contexts 
simple example imagine report needs represented various degrees detail various languages 
solution create different xml document possible combination variations attach kind label indicating context document 
approach certainly practical involves excessive duplication information 
different facets different documents associated parts entity 
ideas problem handled sgm multidimensional xml mxml short 
preliminary thoughts representing time mxml discussed 
chapter consolidate published gsk gsk 
specifically describe mxml extends syntax xml allowing context specifiers qualify elements attributes specify worlds document components meaning 
propose paradigm viewing context dependent web data system implements basic functionality multidimensional paradigm 
mxml influenced intensional html bro bro short web authoring language extends ideas proposed software versioning system pw 
allows single web page different variants dynamically adapt context 
main difference mxml projection main difference xml html emphasis encoding structure presentation data 
idea incorporating multiple dimensions languages new 
glu functional programming language allows user declare dimensions define entities vary dimensions 
language spirit glu developed domain logic programming od ise sw multidimensional version perl perl 
mssd started attempt incorporate context xml soon turned oem simpler basis tackle emerging multidimensional xml problems 
follows mxml completed example ideas introduced previous chapters expand directions 
incorporating context xml multidimensional xml document mxml document short context may qualify elements attributes 
element content depends dimensions called multidimensional element attribute value depends dimensions called multidimensional attribute 
section introduce mxml extension xml syntax encompasses context specifiers represent multidimensional entities 
focus part documents corresponds logical structure information address issues related physical structure xml documents 
assume mxml retains xml syntax referencing dtd xsl files 
extend xml syntax 
keen preservation standards may view fact mxml modifies syntax xml disadvantage 
alternative approach define mxml conventional dtd xml instance extending xml syntax namespaces combine domain specific dtds 
reasons chosen extend syntax xml context wide variety unrelated domains view web data models languages support context class citizen 
defining mxml conventional dtd feel context demoted role potential web underestimated 
xml fact represent multifaceted elements help reserved symbols defined conventional dtd 
order express multidimensional attributes extending xml syntax attributes turned special kind xml elements 
problem approach context aware xml verbose xml understandable machine unsuitable demonstrating humans essential point 
essential point context multifaceted information hidden difficult interpretation weird syntax 
explained chapter view xml logical model data physical format 
supporting context explicitly level facilitate context aware query languages xml 
context driven queries easier formulate concepts correspond directly underlying data model 
reasons adequate extend xml syntax 
validity context aware multidimensional data models languages established may reasonable practical purposes express multifaceted information conventional xml xml extension mxml 
multidimensional xml syntax syntax xml extended follows order incorporate context specifies 
multidimensional xml multidimensional element form element name attribute specification context specifier element name attribute specification element content element name 
context specifier element name attribute specification element content element name element name multidimensional element denoted preceding element name special symbol encloses context elements constitute facets multidimensional element holding worlds specified corresponding context specifier 
context elements form conventional xml elements 
context elements belonging multidimensional element name name multidimensional element 
multidimensional attribute form attribute name context specifier attribute value 
context specifier attribute value multidimensional attribute expressed attribute value set context value pairs 
context qualified values holding value attribute corresponding context 
example shows part mxml document describing imaginary multidimensional menu restaurant 
example mxml describing menu restaurant 
restaurant menu salad name chef salad vegetarian season summer season summer comment language english detail low comment traditional salad comment language english detail high comment salad long history roots tradition town 
comment language french detail low high comment une comment comment multidimensional xml price season summer price eur price default price eur price price ingredient tomato ingredient ingredient season summer ingredient bacon ingredient ingredient ingredient olive oil ingredient ingredient occasion special ingredient special supplier season spring summer sp default sp name special sauce name remarks order days advance remarks ingredient default ingredient normal sauce ingredient ingredient salad ingredients 
salad menu items 
menu supplier sp name john smith name address xyz street address supplier supplier sp peter brown supplier restaurant context specifiers integral parts context elements qualify 
addition default context specifier shorthand worlds covered context specifiers multidimensional entity 
multidimensional data graph root mxml document conventional element multidimensional element 
dimensions applied elements multidimensional elements contain context elements context elements may contain multidimensional elements conventional elements combination multidimensional data graph multidimensional nodes point multidimensional nodes 
mxml multidimensional element contain multidimensional element multidimensional attributes multidimensional elements 
multidimensional xml arbitrary depth 
context elements multidimensional element required content conform structural constraints defined dtd 
dimensions affect content element aspect structure value 
effect context element value consider multidimensional element comment example value depends dimensions language detail 
context specifier third context element comment language french detail low high 
result value comment language french detail low language french detail high une 
effect context element structure context specifiers affect element structure 
example consider fourth ingredient salad example element ingredient contains subelements name remarks context occasion special values dimension occasion denoted context specifier default contains subelements 
notice necessary multidimensional element context elements possible world 
example multidimensional element ingredient season summer ingredient bacon ingredient ingredient example facet context season summer 
case multidimensional element attribute equivalent conventional element attribute 
example consider element ingredient example ingredient tomato ingredient fact shorthand ingredient ingredient tomato ingredient ingredient dimensions applied attributes xml document piece data expressed attribute expressed element 
reverse true attributes complex type 
perspective expressing multidimensional data important difference elements attributes attributes associating elements id idref idrefs attribute types seen analogous element subelement relationship 
elements attributes considered conceptually equivalent holds elements principle hold attributes 
mxml context elements conventional elements form considered different categories different declarations see section 
multidimensional xml multidimensional element context element attributes conventional multidimensional different context elements exactly child elements 
context specifiers determine attributes element world 
notice example salad ingredient attribute special supplier context occasion special value occasion denoted default element ingredient attributes 
attributes type id attached multidimensional elements context conventional elements attributes type idref idrefs attached context conventional elements 
attributes types idref idrefs context conventional elements able point multidimensional conventional context elements 
attribute attached multidimensional elements type id 
multidimensional elements pointed idref attributes attributes point elements attributes type id multidimensional attributes 
attribute special supplier fourth ingredient element example value sp worlds covered season spring summer value sp world represented default 
notice value attribute pointing supplier element attribute points different supplier elements depending values dimension season 
example consider multidimensional attribute vegetarian element salad tags salad suitable depending dimension season 
multidimensional dtd xml document type definition xml dtd short specification defines constraints logical structure xml documents 
section propose extension dtd called multidimensional dtd short takes context dimensions account describes logical structure mxml documents 
mxml document valid respect conforms constraints declared 
dimension declarations dimensions declared dimension dimension name dimension domain dimension declarations declare dimension associate set possible values 
example declaration dimension language english french id attributes multidimensional elements referencing convey information instance isdn book survive world 
context element mxml pointed multidimensional element contains 
pointed multidimensional attributes 
similar moem node pointed number multidimensional nodes 
multidimensional xml denotes language dimension name defines domain set english french 
alternatively possible declare dimension domain uri dimension branch server mxml branches html element declarations conventional dtd syntax declaring conventional elements 
multidimensional element declarations deal multidimensional elements context elements 
multidimensional element declarations form element name associated dimensions type decl set dimensions multidimensional element depends replaces associated dimensions 
example declaration comment language detail pcdata element comment declared multidimensional element depends dimensions language detail 
multidimensional element declarations possible define varying structural constraints context elements multidimensional element 
example declaration ingredient season occasion occasion special name remarks 
pcdata default pcdata type element ingredient declared name remarks 
pcdata value dimension occasion special world type element ingredient declared pcdata 
attribute declarations attribute declarations extended take account multidimensional attributes 
example declaration attlist salad name cdata required vegetarian season cdata implied element salad declared attributes name vegetarian 
value attribute name depend dimensions value attribute vegetarian depends dimension season 
attribute declarations allow declaring attribute contexts absent contexts 
example declaration multidimensional xml attlist ingredient occasion special special supplier season idref required element ingredient declared attribute special supplier worlds value dimension occasion special 
worlds element ingredient attributes 
declaration attlist element name attribute name id uses character declare attribute type id multidimensional element 
example example mxml document example 
example mxml example 
doctype dimension language english french dimension detail low high exhaustive dimension season spring summer fall winter dimension occasion special normal element restaurant menu supplier element menu salad dessert element salad comment price ingredient attlist salad name cdata required vegetarian season cdata implied comment language detail pcdata price season pcdata ingredient season occasion occasion special name remarks 
pcdata default pcdata attlist ingredient occasion special special supplier season idref required element name pcdata element remarks pcdata element supplier name address attlist supplier id required example declares document example depends dimensions dimension language domain english french dimension detail domain low high exhaustive dimension season domain spring summer fall winter dimension occasion domain special normal 
conventional elements menu salad multidimensional elements comment price ingredient declared 
properties mxml multidimensional xml evident mxml documents turned multidimensional data graphs considering mxml multidimensional elements multidimensional attributes corresponding multidimensional nodes 
mxml attributes type idref idrefs represented multidimensional data graph edges pointing referenced object entity edges conventional attributes context edges multidimensional attributes multidimensional data graph moem flexible representing mssd mxml 
due xml document centric origins syntax mxml impose limitations encountered multidimensional data graph moem 
example possible represent mxml path consecutive context edges multidimensional data graph expressed mxml consider canonical form 
properties multidimensional data graph apply mxml 
concepts explicit context inherited context context coverage inherited coverage path inherited coverage context determinism mxml multidimensional data graph 
addition processes reduction oem partial reduction adjusted mxml 
mxml document represents fact set conventional xml documents 
world mxml document reduced conventional xml document facet multidimensional document example demonstrates reduction xml shows conventional xml facet mxml example holds world language english detail low season summer occasion special 
example xml facet mxml example 
restaurant menu salad name chef salad vegetarian comment traditional salad comment price eur price ingredient tomato ingredient ingredient olive oil ingredient ingredient special supplier sp name special sauce name remarks order days advance remarks ingredient salad ingredients 
salad menu items 
menu note order able distinguish idref idrefs attributes attributes need consult corresponding attribute types declared 
consecutive context edges represented multidimensional attribute referencing multidimensional element 
multidimensional xml supplier sp name john smith name address xyz street address supplier supplier sp peter brown supplier restaurant notion formed mxml extension notion formed xml xml 
xml formedness criteria hold elements attributes mxml 
addition formed mxml document context deterministic contain exclusively elements attributes non empty inherited coverage 
multidimensional data graph represents formed mxml moem 
multidimensional paradigm web information entities may assume different facets different contexts lead new paradigm manipulating viewing context dependent web data 
refer new paradigm multidimensional paradigm 
section explain paradigm propose mxml documents multidimensional xsl stylesheets demonstrate comprehensive example 
viewing multidimensional ssd xml address issue information user 
extensible stylesheet language xsl xsl short offers solution 
xsl document containing instructions information xml documents 
addition possible select pieces data xml document transform format instance html xsl transformations xslt xslt short 
important note xsl stylesheets xml documents conform xml syntax 
xsl stylesheet applied specific xml document result displayed web browser 
number xsl documents applied xml document giving different ways view document parts 
multidimensional paradigm allows single document number facets holding different worlds 
information document encoded suitable markup language mxml 
world specified mxml document reduced conventional xml document constitutes facet world 
decomposition mxml document number conventional xml facets depicted worlds denoted wn 
multidimensional xml mxml mxsl relation 
mxml 
xml xml xml xsl xml xml xsl xml xml xsl xml xsl stylesheets xml documents principles hold xsl stylesheets 
multidimensional xsl stylesheet mxsl short encodes set conventional xsl stylesheets facet mxsl specific world 
conventional xsl mxsl associated xml mxml document 
possible world holding xsl facet applied holding xml facet display document world 
relation mxml mxsl pictorially 
note possible worlds mxsl may identical corresponding mxml 
number additional dimensions mxsl may define alternative presentations xml document 
hand dimensions mxml document may appear corresponding mxsl order establish correspondence holding mxml mxsl facets 
comprehensive example example shows mxml document book exists different editions english greek 
element book subelements described 
isbn publisher multidimensional elements depend dimension edition 
elements title authors remain possible world 
element price multidimensional element value depends dimensions edition customer type 
element translator substance worlds edition value greek 
xml kn 
mxsl multidimensional xml example mxml containing multidimensional information book 
book isbn edition greek isbn isbn edition english isbn isbn isbn title programming language title authors author brian kernighan author author dennis ritchie author authors publisher edition english publisher prentice hall publisher edition greek publisher publisher publisher translator edition greek translator thomas translator translator price edition english customer type individual price price edition english customer type library price price edition english customer type student price price edition greek customer type individual price price edition greek customer type library price price edition greek customer type student price price price book mxml example mxsl stylesheet mxml document example specifies various facets mxml example 
example mxsl mxml example 
xsl template match div style size large font size pt size normal font size pt book div span customer type library span style font size pt isbn xsl value select book isbn span multidimensional xml customer type individual student span style font size pt title xsl value select book title authors xsl value select book authors wrapper edition greek wrapper translator xsl value select book translator wrapper wrapper span span span style font size pt publisher xsl value select book publisher span span style font size pt price xsl value select book price span xsl template isbn shown request information library title authors shown potential client individual student 
notice wrapper element defined xsl elegantly mxsl exclude translator case request concerns original language edition book 
general mxsl may contain multidimensional versions elements attributes defined conventional xsl 
elements publisher price displayed case 
constraint dimensions appear context specifiers mxsl 
may appear corresponding mxml document case dimensions customer type edition example different case dimension size example exist mxml 
world edition greek customer type student size large mxml document example reduced conventional xml document shown example 
fact dimension size appear mxml example problem complete domain size implied context specifiers 
example xml facet mxml example 
book isbn isbn title programming language title authors author brian kernighan author author dennis ritchie author authors publisher publisher translator thomas translator specified xsl wrapper element semantics acts carrier formatting properties applied contents 
price price book multidimensional xml world mxsl stylesheet example reduced xsl stylesheet shown example 
example xsl facet mxsl example 
xsl template match div style font size pt book div span style font size pt title xsl value select book title authors xsl value select book authors wrapper translator xsl value select book translator wrapper span span style font size pt publisher xsl value select book publisher span span style font size pt price xsl value select book price span xsl template result applying xsl stylesheet example xml document example looks book title programming language authors brian kernighan dennis ritchie translator thomas publisher price result analogous process world edition english customer type library size normal look book isbn publisher prentice hall price prototype implementation section describe prototype system demonstrates basic principles multidimensional paradigm proposed 
implemented system called mxml web server web server capable handling mxml mxsl multidimensional data 
typical scenario user asks mxml document conventional web browser prompted select values dimensions associated requested document 
user specified world server sends corresponding xml xsl facets displayed browser 
user change values multidimensional xml dimensions observe different worlds associated different views multidimensional document 
important point multidimensional paradigm reduction process mxml mxsl take place server client 
system implements functionality server side mainly reasons compatibility existing web browsers 
general case dimensions considered server side partial reduction order eliminate irrelevant data reduce size response rest dimensions handled client side reasons privacy minimizing number subsequent requests 
flexibility exploited mxml domains electronic commerce user modeling 
extending url url url short uniform resource locator standard way specify resource available internet 
extended syntax url order enable handle multidimensional information 
extended url form host port path context search difference conventional url token context added 
extended url request facet document named books mxml edition english customer type student 
books mxml edition english customer type student system design system comprises software modules illustrated 
modules request analyzer mxml request view extractor mxml response composer conventional web server 
paragraphs shall briefly describe functionality modules sub modules discuss role system operation 
mxml web server design 
mxml web server client final response xml html text 
conventional web server normal request response multidimensional xml internet client request request analyzer mxml response composer client request type mxml request xml xsl status information xml html text files client mxml request mxml file identifier user context view extractor mxml file mxsl file file repository request analyzer request analyzer responsible determining type client requests 
types requests normal requests refer html xml text files mxml requests refer mxml files 
request normal type conventional web server handles 
request involves mxml document mxml request invoked 
mxml request module decomposes mxml request sections 
sections comprise mxml request mxml file identifier user context request type 
sections sent view extractor module third sent directly mxml response composer 
view extractor module combines information provided mxml request corresponding mxml mxsl files order serve request 
view extractor consists sub modules called mxml parser mxml specializer depicted 
mxml parser mxml parser uses requested mxml file identifier provided mxml request access corresponding mxml mxsl file file repository 
role parse file generate corresponding mxml mxsl parse tree 
mxml specializer mxml specializer uses parse tree generated mxml parser plus user context provided mxml request generate context specific xml xsl file 
reduction multidimensional xml xml case user context represents single world partial reduction case user context represents world 
type produced file passed mxml response composer status information 
sub modules view extractor depicted sub modules conventional web server depicted 
file repository view mxml file extractor context specific xml mxml parse tree mxml parser mxsl file mxml specializer context specific xsl mxsl parse tree status information requested mxml file identifier user context conventional web server request analyzer normal request response composer response response sender final response xml html text 
response mxml request response composer mxml response composer mxml response composer constructs response sends response sender dispatches response client 
conventional web server conventional web server implements essential features conventional web server 
consists sub modules shown 
case type request normal response composer sub module conventional web server constructs response case type request mxml request response produced mxml response composer passed response sender sub module conventional web server 
response composer response composer analyzes normal requests constructs responses sent client 
depicted submodule engaged request type normal 
response sender response sender responsible sending response client 
stated response originate response composer mxml response composer 
system implementation multidimensional xml system components described previous section fact implemented separate programs 
mxml web server view extractor developed java java cl 
view extractor implemented kr 
mxml document requested example document menu mxml mxml web server determines dimensions involved respective domains checking corresponding exists scanning mxml document adding extra dimensions appear mxsl document 
mxml web server presents user drop lists assigning values dimensions depicted upper left dimension frame 
screenshot showing reply mxml web server 
screenshot mxml web server replying request menu mxml season spring detail high language english context specifier extended url composed dynamically javascript code values selected user dimension drop lists upper left dimension frame 
notice dimension exists value corresponding drop list 
meaning value specified multidimensional xml dimension 
consequently context specifier contains specifies world 
contain specifies exactly world 
upper right action frame allows user view mxml source code mxsl source code 
selected context specifies exactly world user may see xml xsl sources corresponding facets world plus final output document 
source code final document displayed lower output frame shows multidimensional menu restaurant world season spring detail high language english 
context specified user represents world output frame displays mxml mxsl produced partial reduction context case output frame displays fixed message final document stating final document appear user give value dimension 
summary chapter proposed multidimensional xml mxml short extension xml suitable representing data assume facets different value different structure different contexts 
mxml elements attributes may depend number dimensions define worlds facets elements attributes hold 
proposed extension dtd called multidimensional dtd short describes logical structure mxml documents 
discussed properties mxml relation multidimensional data graph moem gave examples mxml document reduced conventional xml document world 
addition new paradigm handling multifaceted context dependent web data 
new paradigm called multidimensional paradigm comprises representation manipulation presentation issues 
discussed presentation mxml documents multidimensional xsl mxsl stylesheets 
described design system implements basic functionality multidimensional paradigm demonstrates user interact multidimensional document view different variants different worlds 
possible user specify possible context 
example context season spring winter season summer detail low formulated dimension frame 
main objective implemented system reduction xml specific world partial reduction set worlds supported marginally 
system managing mssd chapter system implements essential concepts previous chapters supports management multidimensional semistructured data 
particular moem basic change operations defined chapter system allows development maintenance multidimensional data graphs displayed graphical interactive environment 
implements context operations introduced chapter calculates inherited context graphs defined chapter 
performs reduction oem partial reduction transformation canonical form results operations displayed new graphs interactive environment manipulated just original graphs 
system load save variety formats including mssd expressions mxml 
encompasses query subsystem evaluates mql queries described chapter 
system implemented java java cl play role infrastructure developing new applications mssd tools need supported functionality 
application oem history chapter relies system perform lower level operations mssd 
graphical user interface handling querying multidimensional data graphs provides interactive way system 
follows give overview system discuss basic components 
system architecture implemented system prototype mssd infrastructure comprises set tools processes creating manipulating querying multidimensional data graphs 
system directly graphical user interface provide support applications need mssd framework 
architecture system shown 
discuss briefly various components 
system managing mssd architecture system 

data graph oem history application update operations import export context operations parser new applications coverage calculation mxml parser repository manager multidimensional data manager coordinator reduction operations query subsystem canonical form native format parser mssd expression mxml native format 
data manager 
multidimensional data graph component consists main memory data structures hold graph representations mssd 
repository physical storage medium loading saving mssd files 
number formats supported mssd expressions mxml native format 
multidimensional data manager mdm short mdm responsible managing multidimensional data graphs moem graphs 
comprises set modules support creation maintenance querying multidimensional semistructured data 
mdm converts graph representation formats order save mssd files loads graphs files various mssd formats 
mdm discussed section 
graphical user interface mdm 
provides easy interactive access various functions mdm graph creation maintenance querying 
detail section 
mdm application programming interface mdm api library commands gives access functionality system 
new applications able existing mssd infrastructure issuing commands form script language 
component implemented 
system managing mssd applications new applications built top system functionality mdm api 
addition applications system directly case oem history described detail chapter 
mdm obviously important components topic sections 
multidimensional data manager modules included mdm shown 
start number utility functions appear box bottom mdm directly accessible mdm modules 
general utility functions context operations implements operations context specifiers defined chapter including context intersection context union simplification context specifiers 
inherited coverage calculator compute inherited coverages multidimensional data graphs 
moment inherited context calculated techniques calculating context coverage inherited coverage explained chapter 
calculating inherited context graph traversed breadth manner starting root 
simple fixed point algorithm implemented deal cycles graph 
canonical form transforms graph canonical form 
rest processes parse expressions various formats save graph file load graph file 
mssd expression parser mxml parser native format parser parse mssd expressions mxml native format expressions respectively 
coordinator module external components communicate mdm coordinator module 
job decompose incoming requests number basic operations assign operations appropriate modules inside mdm 
example consider case user removes edge graph graphical interface 
coordinator accepts request mdm gui update operations module responsible carrying modifications 
coordinator notifies mdm gui redisplay graph 
update operations module update operations module carries modifications multidimensional data graph 
implements basic change operations introduced chapter 
conventional oem multidimensional data graph object deletion achieved edge removal persistence object determined object system managing mssd reachable root graph 
module requested check graph inaccessible nodes automatically removed 
import export module multidimensional data graph encoded stored file number different formats 
currently system supports different formats mssd expressions defined chapter multidimensional xml defined chapter native format expressions 
import export module handles storing loading process graph formats 
contrast formats native format expressions retain position screen nodes edges graph 
node described line form nodeid nodetype xpos ypos value nodeid oid node nodetype type node atomic complex multidimensional xpos ypos node coordinates screen canvas value value node 
addition true node root graph true node reachable root 
edge described line form value node departure destination node specifies edge context edge entity edge value edge label context specifier explicit context edge context edge string label edge entity edge 
reduction operations module module implements reduction oem holding specific world partial reduction context 
processes defined chapter 
system currently uses inherited context implement reduction inherited coverage described chapter 
reason stated section system moment calculate context coverage 
consequence possible cases reduction oem return graph complex nodes leaves 
query subsystem query subsystem implements mql top lore mag described detail chapter 
responsible executing mql queries multidimensional data graph producing new multidimensional data graphs results queries 
mentioned section system currently calculate context coverage 
reason evaluating mql queries inherited context graphs inherited coverage 
system implemented java runs operating system supported java 
hand lore runs linux lin puts constraint system want query subsystem operational 
solve implemented server program java acts intermediary query subsystem lore exchanges system managing mssd data systems special protocol 
server program operates linux machine lore allows system lore machine 
section describes gives concrete view query subsystem 
graphical user interface gives access functionality multidimensional data manager 
shows sample screenshot displaying graph multidimensional recreation guide example previous chapters 
right side dialog box prompts user specify world reduce graph oem 
sample screenshot 
employs multi document interface mdi windows open simultaneously displaying different graph 
operations performed menu items toolbar buttons effect graph window currently focus 
buttons positioned toolbars placed upper left sides main window 
toolbar left side contains buttons system managing mssd corresponding basic change operations modify graph 
starting top toolbar arrow labeled button allows multiple selection transposition nodes display area 
buttons correspond operations adding updating nodes adding removing edges 
button performs consistency check graph removes nodes accessible root 
upper toolbar contains buttons 
opens empty window designing new graph 
second button creates graph importing native format expressions button exports graph native format 
button tick symbol checks validity graph button reduce graph oem holding specified world 
partial reduction performed application menu 
possible display hide explicit contexts labels edges button 
button calls inherited coverage calculator causes inherited contexts appear screen 
couple buttons open mql query window window showing integers encode worlds explained chapter 
button operations performed menu 
create graph mssd expression mxml document export existing graph formats 
file import export menu items correspond operations 
native format expressions store position nodes screen useful saving loading unfinished graphs process saving loading native format perform consistency checking hanging nodes subgraphs removed 
hand graph checked consistency importing exporting mssd expressions mxml documents 
shows screenshot having initialized query subsystem 
initialization query subsystem performs steps graph window focus transformed new graph gcf canonical form possible worlds encoded integers graph gcf transformed equivalent oem process defined chapter resulting oem passed lore current database 
notion validity defined sg context coverage powerful concept validity obsolete 
moment inherited contexts calculated displayed inherited coverages 
system managing mssd initializing query subsystem graph database 
shown selecting initialize db menu user open new window graph database canonical form equivalent oem graph passed lore 
right window displays equivalent oem graph database appears left window 
addition user open dialog box lists integers encode worlds 
query subsystem initialized mql query window displayed 
thick black border identifies mql query window 
mql query inserted upper part window typing loading text file 
pressing button lorel equivalent equivalent lorel query appears lower part mql query window 
equivalent lorel query span lines possible display separate window equivalent lorel query shown lower left part 
defined chapter 
system managing mssd evaluating mql query displaying results 
submit button mql query window submits equivalent lorel query lore gets back result xml document 
pressing show result button steps performed xml document result transformed oem graph oem graph transformed multidimensional data graph process defined chapter multidimensional data graph displayed new window final result mql query 
small window graph lower part displays result mql query appears upper left part 
graph form conventional oem multidimensional data graph happens context nodes entity edges 
integers encode worlds converted back context specifiers results 
small window upper right part displays list integers worlds encode 
mql queries submitted moem database order change database graph query subsystem re initialized initialize db menu item 
close db menu item terminate careful look may reveal minor differences mql query mql syntax specified chapter 
reason query subsystem implements version mql syntactic differences current version defined chapter 
system managing mssd connection lore perform cleanup operations multidimensional data manager lore 
summary chapter system managing mssd implements essential concepts introduced previous chapters infrastructure development new mssd tools applications 
discussed architecture system modules operation graphical user interface supports interactive creation experimentation querying multidimensional data graphs mql 
contrary traditional databases information systems number users known background great extent homogeneous web users share background apply conventions interpreting data 
users different perspectives information entities situation taken account web data models query languages 
information providers need manage different variations essentially data targeted different consumer groups 
thesis propose multidimensional data mssd information entities may manifest different facets context 
follows summarizes approach contribution thesis 
developed formalism representing context flexible intuitive way variables called dimensions 
context specifiers define contexts constraining possible values dimensions take combining dimension constraints conjunctions disjunctions 
gave semantics context showing viewed set possible worlds world environment information obtains unambiguous interpretation 
defined number context operations combining comparing contexts examined properties time complexities 
important advantage approach context operations performed knowledge dimensions involved incomplete case correspondence contexts sets worlds deferred knowledge dimensions complete 
proposed multidimensional data graph graph data model mssd incorporates context specifiers 
multidimensional data graph labeled edges define relationships multidimensional entities information entities may manifest different facets different worlds 
context specifiers qualify facets define constraints worlds facet may hold 
order get actual worlds graph elements really hold take account accumulated constraints propagate root leaves leaves root 
propagation context ensures child node holds worlds parent node holds node holds worlds access atomic node 
principles defined true context node edge calculated frame graph 
context called inherited coverage path inherited coverage represents worlds complete path holds 
showed conventional oems holding world extracted multidimensional data graph gave conditions extractions take place 
part conditions discussed context deterministic graphs process reduces oem context deterministic multidimensional data graph world 
addition described partial reduction multidimensional data graph context 
process transforms multidimensional data graph canonical form defined 
redundant dependencies multidimensional entities may cause anomalies maintaining multidimensional data graph canonical form avoids anomalies transforming initial graph better structured graph 
important property graph canonical form path regular structure useful formulating queries 
having investigated properties multidimensional data graph depth introduced multidimensional oem moem special case multidimensional data graph strict conventional oems holding various worlds 
specified mssd expression syntax expressing textually multidimensional data graphs 
specified multidimensional query language mql query language multidimensional semistructured data 
mql supports context multifaceted entities class citizens express context driven queries 
mql largely lorel retains major contributions path expressions coercion 
defined context path expressions extend path expressions incorporating context qualifiers 
context qualifiers context specifiers context variables context patterns pose context conditions database graph 
showed class context path expressions viewed defining joins conventional oems hold different worlds 
mql uses special clauses handling context clause expresses conditions context clause context creates new context variables construction results 
addition keyword holding apply partial reduction result graph 
prototype implementation mql demonstrated mql query compares equivalent lorel query queries mql moem obviously far expressive elegant lorel oem conventional queries mql context path expressions simple formulate lorel conventional path expressions 
view potential mssd expressiveness mql justify extensions oem introduced multidimensional data graph 
additional node edge types multidimensional data graph mql formulate cross world queries counterpart context unaware databases 
assess approach applied mssd framework developed classical problem databases moem mql represent query histories oem databases 
explained detail moem represent history oem database 
introduced basic change operations moem specified pseudocode process encodes moem history oem database 
discussed multidimensional data graph properties apply particular case showed temporal oem snapshots obtained moem 
oem history implemented system demonstrated example process underlying moem database model changes oem 
addition showed moem capable model changes occurring conventional oem databases moem databases 
important benefit approach stems queries posed oem histories moem histories 
approach maintains snapshots successive states object facets multidimensional entity 
allows formulation queries relate different states different object various time instances 
number mql query examples confirmed expressiveness mql value features example context patterns 
example concepts introduced span directions discussed multidimensional xml mxml extension xml suitable representing data assume different value different structure different contexts 
mxml elements attributes may depend number dimensions define worlds facets elements attributes hold 
proposed extension dtd called multidimensional dtd describes logical structure mxml documents 
discussed properties mxml gave examples mxml document reduced conventional xml document world 
new paradigm handling multifaceted context dependent web data 
new paradigm called multidimensional paradigm comprises representation manipulation presentation issues 
discussed presentation mxml documents multidimensional xsl mxsl stylesheets 
described design system implements basic functionality multidimensional paradigm demonstrates user interact multidimensional document view different variants different worlds 
system managing mssd implements essential concepts introduced thesis infrastructure development new mssd tools applications 
discussed architecture system modules operation graphical user interface supports interactive creation experimentation querying multidimensional data graphs mql 
opens number directions research describe briefly follows 
context representation assumed dimensions orthogonal domains flat sets enumerating elements 
real world applications comply assumptions 
interesting support dimensions orthogonal domains hierarchical structure investigate affects notion context context operations 
context aware data models efficient algorithms calculating inherited coverages multidimensional data graph open issue 
addition schemata moem databases include dimensions useful formulating queries 
context nondeterministic graphs examined detail 
interesting issue methods context visualize data models facilitate update maintenance information 
important concepts properties multidimensional data graph applied types data models order develop object relational databases support context class citizen 
mql evaluation mql queries involves number open research directions storage multidimensional data graphs access methods optimization context driven queries 
addition mql extended handle updates multidimensional data graphs 
representing histories oem databases moem represent database histories assumed time linear 
supporting branching time interesting direction useful number real world applications 
case changes may occur temporal snapshot database current snapshot 
support hierarchical dimension domains step direction 
mxml xml related technologies currently active research area 
rigorous investigation context introduced technologies needed including query languages xml 
interesting adapt xml approach representing histories oem databases able represent histories xml data 
role context managing multiple aspects web data attracting increasing attention 
believe mssd address important problem databases today global environment potential practically applied various domains 
interesting direction mssd concepts problems disperse fields providing personalized information services adapting profiles consumers 
information integration modeling objects value structure vary sources 
digital libraries representing metadata conform similar identical formats depending source 
representing geographical information possible dimensions scale theme 
appendix mql syntax specification follows specify syntax context path expressions mql extended backus naur form ebnf ebnf short 
symbols start capital letter defined regular expression example za symbols analyzed 
include identifier denotes strings variables indicate oids context multidimensional objects respectively denotes string labels entity edges 
symbols start lowercase letter defined ebnf production included 
included productions represent regular expressions entity edge labels strings respectively 
ebnf productions chapter 
syntax context path expressions context path expressions defined bottom manner 
table gives productions variable types mql 
table variables 
identifier identifier identifier identifier identifier table defines syntax context patterns context qualifiers 
table context pattern context qualifier 
table defines syntax entity parts facet parts 
entity parts may followed label variable facet parts may include context variable explicit mql syntax specification context qualifier named augmented parts 
root part defined special entity part dot 
table entity part facet part 






table gives syntax rules components 
types components defined depending types final parts 
productions allow facet part follow facet part 
table general context path expression components 
ett ett ett ett ett facet ett ett ett ett facet 
ett facet ett facet facet facet facet facet facet facet ett facet ett facet facet facet facet facet facet ett 
ett ett ett ett facet ett ett ett ett table components augmented label path object variables allowed inside components 
augmented component context variable explicit context qualifier sort label variable context edges allowed inside component augmented components correspond qualified components lorel aqm 
mql syntax specification table augmented general context path expression components 
ett ett ett ett ett ett facet ett ett ett ett facet facet ett facet ett facet facet facet facet facet facet facet ett facet ett facet facet facet facet facet ett ett ett ett ett ett facet ett ett ett ett table defines context path expressions identifier type followed augmented component compatible type augmented component may comprise number augmented components 
types context path expressions distinguished depending type final part 
table context path expressions 
ett ett ett ett facet facet facet facet ett facet having defined context path expressions continue syntax mql se 
mql syntax mql syntax specification syntax rules mql listed top manner 
table gives structure mql query 
distinguish types queries depending type edges depart root results specified select clause 
queries type combine results union intersect 
table top level structure mql queries 
query union intersect union intersect select holding 
distinct 
select holding 
distinct 
context 

predicate 

table defines syntax mssd expression template select 
label template missing outer brackets define type root missing 
mql syntax specification table template results select clause 






query table defines atomic values may take place objects template select clause comparisons 
table object values template select clause 
variable constant oid variable constant abs facet count variable mod min max sum avg table specifies definition new context variable context clause 
mql syntax specification table components context clause 
extension union intersect table gives syntax clause component consisting context path expression object variable compatible type 
table components clause 
facet 

ett 



table defines syntax clause 
table structure clause 
predicate predicate predicate predicate predicate predicate predicate 
exists variable exists facet predicate exists ett predicate facet predicate ett predicate true false table defines syntax clause 
table structure clause 
mql syntax specification concludes syntax specification mql 
abi serge abiteboul 
querying semi structured data 
proceedings th international conference database theory icdt delphi greece january 
abi serge abiteboul 
views xml 
proceedings th acm sigact sigmod sigart symposium principles database systems pods may 
abs serge abiteboul peter buneman dan suciu 
data web relations semistructured data xml 
morgan kaufmann 
ashcroft jagannathan 
intensional language parallel applications programming 
parallel functional languages compilers pages 
acm press 
ashcroft jagannathan wadge 
multidimensional programming 
oxford university press 
am gustavo arocena alberto mendelzon 
weboql restructuring documents databases webs 
proceedings international conference data engineering icde orlando florida 
amm paolo atzeni mecca paolo merialdo 
weave web 
proceedings rd international conference large databases vldb athens greece august 
amm paolo atzeni mecca paolo merialdo 
semistructured structured data web going back forth 
sigmod record december 
aqm serge abiteboul quass jason mchugh jennifer widom jannet wiener 
lorel query language semistructured data 
international journal digital libraries april 
yoshikawa 
data model temporal xml documents 
proceedings th international conference database expert systems applications dexa london september 
lecture notes computer science lncs pages springer verlag 
bbc phil bernstein michael brodie stefano ceri david dewitt mike franklin hector garcia molina jim gray jerry held joe hellerstein jagadish michael lesk dave maier jeff naughton hamid pirahesh mike stonebraker jeff ullman 
asilomar report database research 
sigmod record 
bc angela stefano ceri 
comparative analysis xml query languages 
sigmod record march 
bcw chomicki wolper 
temporal deductive databases 
temporal databases theory design implementation pages 
benjamin cummings publishing 
bdhs peter buneman susan davidson gerd hillebrand dan suciu 
query language optimization techniques unstructured data 
proceedings acm international conference management data 
bds peter buneman susan davidson dan suciu 
programming constructs unstructured data 
proceedings workshop database programming languages italy 
bdt peter buneman deutsch wang tan 
deterministic model semistructured data 
workshop query processing semistructured data non standard data formats 
bfs peter buneman mary fernandez dan suciu 
unql query language algebra semistructured data structural recursion 
journal 
sergey brin rajeev motwani lawrence page terry winograd 
web pocket 
bulletin ieee computer society technical committee data engineering june 
bro brown 
design implementation 
proceedings th international symposium languages intensional programming pages 
bro brown 
intensional html practical approach 
master thesis department computer science victoria canada 
bun harry bunt 
context dialog control 
think quarterly 
bun peter buneman 
semistructured data tutorial 
proceedings acm symposium principles database systems pods pages tucson arizona 
sudarshan chawathe serge abiteboul jennifer widom 
representing querying changes semistructured data 
proceedings th international conference data engineering orlando florida february 
sudarshan chawathe serge abiteboul jennifer widom 
managing historical semistructured data 
theory practice object systems 
ccd stefano ceri sara fraternali stefano paraboschi letizia tanca 
xml gl graphical language querying restructuring xml documents 
busi di pages como italy 
cd chaudhuri dayal 
overview data warehousing olap technology 
sigmod record march 
cgh sudarshan chawathe hector garcia molina joachim hammer kelly ireland yannis papakonstantinou jeffrey ullman jennifer widom 
tsimmis project integration heterogeneous information sources 
proceedings conference information processing society japan ipsj pages tokyo japan october 
ch william cohen haym hirsh 
joins generalize text classification whirl 
proceedings th international conference knowledge discovery data mining 
cha sudarshan chawathe 
describing manipulating xml data 
bulletin ieee computer society technical committee data engineering september 
chs carey haas schwarz arya cody fagin flickner niblack petkovic thomas williams wimmers 
heterogeneous multimedia information systems garlic approach 
proceedings international workshop research issues data engineering march 
ck chen david kotz 
survey context aware mobile computing research 
dartmouth college computer science technical report tr november 
ftp ftp cs dartmouth edu tr tr ps cl patrick chan lee 
java class libraries annotated 
addison wesley 
coh william cohen 
integration heterogeneous databases common domains queries textual similarity 
acm sigmod conference june 
coh william cohen 
whirl approach integration overview 
aaai workshop ai information integration 
coh william cohen 
web reasons structured collections text 
proceedings nd international conference autonomous agents agents minneapolis may 
coll 
olap relational multidimensional database systems 
sigmod record september 
crf don chamberlin jonathan robie daniela florescu 
quilt xml query language heterogeneous data sources 
proceedings rd international acm sigmod workshop web databases webdb dallas texas may 
cs sophie cluet sim 
yatl functional declarative language xml 
draft manuscript may 
research bell labs com user simeon icfp ps hlen jensen 
capturing multiple aspects semistructured data 
proceedings th international conference large data bases vldb pages 
dff deutsch mary fernandez daniela florescu alon levy david maier dan suciu 
querying xml data 
bulletin ieee computer society technical committee data engineering september 
dff deutsch mary fernandez daniela florescu alon levy dan suciu 
query language xml 
proceedings th international world wide web conference www toronto canada may 
damiani tanca 
modeling users navigation history 
proceedings workshop intelligent techniques web personalization usa august 
ds dey sumit sarkar 
probabilistic relational model algebra 
acm transactions database systems tods september 
ds dey sumit sarkar 
psql query language probabilistic relational data 
data knowledge engineering dke 
curtis 
observing transaction time semantics 
proceedings nd international conference web information systems engineering wise kyoto japan december 
ieee computer press pages 
ebnf iso international organization standardization 
iso iec 
extended backus naur form ebnf 
eps yannis 
query evaluation system multidimensional semistructured data 
appear proceedings st conference informatics bci thessaloniki greece november 
adam farquhar angela richard fikes pratt 
integrating information sources context logic 
proceedings aaai spring symposium information gathering distributed heterogeneous environments 
ffk fernandez florescu kang levy suciu 
catching boat strudel experiences web site management system 
proceedings acm sigmod international conference management data sigmod seattle 
ffls mary fernandez daniela florescu alon levy dan suciu 
query language web site management system 
sigmod record september 
ffls mary fernandez daniela florescu alon levy dan suciu 
web site management strudel approach 
bulletin ieee computer society technical committee data engineering june 
fit melvin fitting 
basic modal logic 
handbook logic artificial intelligence logic programming volume oxford university press 
flm daniela florescu alon levy alberto mendelzon 
database techniques world wide web survey 
sigmod record september 
fri jeffrey 
mastering regular expressions 
reilly 
mary fernandez sim philip wadler 
xml query languages experiences exemplars 
draft manuscript communication xml query working group september 
research bell labs com user simeon xquery html gg chiara ghidini fausto giunchiglia 
local model semantics contextual reasoning locality compatibility 
artificial intelligence pages 
ghi hector garcia molina joachim hammer kelly ireland yannis papakonstantinou jeffrey ullman jennifer widom 
integrating accessing heterogeneous information sources tsimmis 
proceedings aaai symposium information gathering stanford california march 
fausto giunchiglia 
contextual reasoning 
special issue le xvi pages 
gm 
valid web xml xsl infrastructure temporal management web documents 
proceedings st international conference advances information systems pages turkey october 
gmw roy goldman jason mchugh jennifer widom 
semistructured data xml migrating lore data model query language 
proceedings nd international workshop web databases webdb philadelphia pennsylvania june 
gp luis gravano yannis papakonstantinou 
mediating internet 
bulletin ieee computer society technical committee data engineering june 
hector garcia molina yannis papakonstantinou quass anand rajaraman yehoshua sagiv jeffrey ullman vassalos jennifer widom 
tsimmis approach mediation data models languages 
journal intelligent information systems march april 
gra fabio 
xml representation management temporal information web cultural heritage applications 
data science journal 
venkat vijay raghavan william rajesh 
information retrieval world wide web 
ieee internet computing september october 
gs manolis yannis 
representing changes xml documents dimensions 
appear proceedings xml database symposium conjunction vldb berlin germany september 
gs fabio maria rita 
extending temporal database concepts world wide web 
proceedings national conference advanced database systems pages italy june 
gs ghidini serafini 
model theoretic semantics information integration 
proceedings th international conference artificial intelligence methodology systems applications bulgaria 
gs ghidini luciano serafini 
information integration electronic commerce 
proceedings workshop agent mediated electronic trading minneapolis 
gsk manolis yannis dimitris dimitris 
web system handling multidimensional information mxml 
proceedings th east european conference advances databases information systems adbis september 
lecture notes computer science lncs pages springer verlag 
gsk manolis yannis dimitris 
incorporating dimensions xml dtd 
proceedings th international conference database expert systems applications dexa munich germany september 
lecture notes computer science lncs pages springer verlag 
laura haas donald kossmann edward wimmers jun yang 
optimizer heterogenous systems nonstandard data search capabilities 
bulletin ieee computer society technical committee data engineering 
rainer der georg lausen bertram lud scher christian 
declarative semantics web queries 
proceedings th international conference deductive object oriented databases dood switzerland december 
hmn haas miller roth schwarz wimmers 
transforming heterogeneous data database middleware integration 
bulletin ieee computer society technical committee data engineering 
html world wide web consortium 
html specification 
www org tr html fielding gettys mogul frystyk nielsen berners lee 
version 
www ietf org rfc rfc txt isb tom edward stohr balasubramanian 
rmm methodology structured hypermedia design 
communications acm august 
java sun microsystems java 
java sun com jensen clifford gadia segev snodgrass 
glossary temporal database concepts 
sigmod record september 
netscape communications javascript 
www netscape com eng mozilla handbook javascript kel john kelly 
essence logic 
prentice hall 
thomas kirk alon levy yehoshua sagiv divesh srivastava 
information manifold 
proceedings aaai spring symposium information gathering distributed heterogeneous environments stanford california march 
kr brian kernighan dennis ritchie 
programming language 
prentice hall 
ks david konopnicki oded shmueli 
qs query system world wide web 
proceedings st international conference large databases vldb zurich switzerland 
lin linux online 
www linux org lmss alon levy alberto mendelzon yehoshua sagiv divesh srivastava 
answering queries views 
proceedings th acm sigact sigmod sigart symposium principles database systems san jose california 
lsk alon levy divesh srivastava thomas kirk 
data model query evaluation global information systems 
journal intelligent information systems special issue networked information discovery retrieval 
lss laks lakshmanan sadri iyer subramanian 
declarative language querying restructuring web 
proceedings th international workshop research issues data engineering ride new orleans february 
mag mchugh abiteboul goldman quass widom 
lore database management system semistructured data 
sigmod record september 
mai david maier 
database desiderata xml query language 
www org ql ql pp maier html mal susan 
resistance futile web assimilate database 
bulletin ieee computer society technical committee data engineering june 
manolis yannis ioannidis 
representing time dependent information multidimensional xml 
proceedings rd international conference information technology interfaces iti croatia june 
manolis yannis ioannidis 
representing time dependent information multidimensional xml 
journal computing information technology 
mm john mylopoulos 
partitioning information bases contexts 
proceedings rd international conference cooperative information systems coopis pages vienna austria may 
mmac mecca paolo merialdo paolo atzeni crescenzi 
short araneus guide web site development 
proceedings acm sigmod workshop web databases webdb philadelphia pennsylvania june 
mmm alberto mendelzon george mihaila tova milo 
querying world wide web 
proceedings st international conference parallel distributed information systems pdis 
mmm alberto mendelzon george mihaila tova milo 
querying world wide web 
international journal digital libraries april 
nj andrew jagadish 
probabilistic data xml 
proceedings th international conference large databases vldb hong kong china 
rv algorithms temporal query operators xml databases 
proceedings edbt workshops 
lecture notes computer science lncs pages springer verlag 
np norrie 
empowering databases context dependent information delivery 
appear proceedings caise workshop ubiquitous mobile information collaboration systems austria june 
np norrie 
state structure xml web publishing framework 
appear proceedings th international conference advanced information systems engineering caise austria june 
od orgun du 
multi dimensional logic programming theoretical foundations 
theoretical computer science 
odmg rick cattell object database standard odmg release 
morgan kaufmann publishers 
barbara elisa letizia tanca 
temporal aspects semistructured data 
proceedings th international symposium temporal representation reasoning time pages 
org orgun 
temporal deductive databases 
computational intelligence 
os lu richard snodgrass 
temporal real time databases survey 
ieee transactions knowledge data engineering august 
os aris ouksel amit sheth 
semantic interoperability global information systems brief research area special section 
sigmod record 
pap michael papazoglou 
web services phenomenon concepts technologies current trends research directions 
tutorial th international conference advanced information systems engineering caise toronto canada may 
perl perl programming language 
www perl org yannis papakonstantinou hector garcia molina jeffrey ullman 
mediation system declarative specifications 
proceedings international conference data engineering pages new orleans february 
yannis papakonstantinou hector garcia molina jennifer widom 
object exchange heterogeneous information sources 
proceedings international conference data engineering pages taipei taiwan 
pw plaice wadge 
new approach version control 
ieee transactions software engineering 
rdf world wide web consortium 
resource description framework rdf schema specification 
www org tr pr rdf schema rdf world wide web consortium 
resource description framework rdf model syntax specification 
www org tr rec rdf syntax rs mary roth peter schwarz 
don scrap wrap 
wrapper architecture legacy data sources 
proceedings rd international conference large databases vldb athens greece august 
sa snodgrass ahn 
taxonomy time databases 
proceedings acm sigmod international conference management data pages 
sd shang 
adding valid time xpath 
proceedings database network information systems 
lecture notes computer science lncs pages springer verlag 
sg yannis manolis 
multidimensional semistructured data representing context dependent information web 
proceedings th international conference advanced information systems engineering caise toronto canada may 
lecture notes computer science lncs vol 
pages springer verlag 
yannis manolis christos vassilis 
accommodating changes semistructured databases multidimensional oem 
proceedings th east european conference advances databases information systems adbis bratislava slovakia september 
lecture notes computer science lncs pages springer verlag 
yannis manolis christos vassilis 
representing querying histories semistructured databases multidimensional oem 
appear information systems journal 
sgm yannis manolis 
representing context dependent information multidimensional xml 
proceedings th european conference research advanced technology digital libraries ecdl lisbon september 
lecture notes computer science lncs pages springer verlag 
sgml iso international organization standardization 
iso 
information processing text office systems standard generalized markup language sgml 
edition 
yannis manolis panos rondogiannis 
multidimensional xml 
proceedings rd international workshop distributed communities web quebec city canada june 
lecture notes computer science lncs pages springer verlag 
yannis nikos panos 
direct database access www browsers greek 
proceedings conference new information technology athens greece 
yannis sellis 
implementing query language context dependent semistructured data 
submitted publication 
sql international organization standardization iso 
information technology database language sql 
standard 
iso iec 
sr william robinson 
discrete mathematics computer science applications 
benjamin cummings publishing 
ssu avi silberschatz mike stonebraker jeff ullman editors 
database research achievements opportunities st century 
report nsf workshop database systems research may 
suc dan suciu 
management semistructured data 
sigmod record december 
suc dan suciu 
overview semistructured data 
sigact news december 
sw wadge 
ise general tools software systems 
intensional programming ii pages 
world scientific 
world wide web consortium 
semantic web 
www org sw sz avi silberschatz stan zdonik 
strategic directions database systems breaking box 
acm computer surveys december 
sz avi silberschatz stan zdonik 
database systems breaking box 
sigmod record september 
tacs panos nikos 
context information bases 
proceedings rd international conference cooperative information systems coopis new york city 
tg gopinath 
efficient management time evolving databases 
ieee transactions knowledge data engineering august 

contextualization abstraction mechanism information modeling 
phd thesis university crete greece 
ull jeffrey ullman 
principles database knowledge base systems vol 

computer science press 
ull jeffrey ullman 
information integration logical views 
proceedings th international conference database theory icdt delphi greece january 
uri berners lee fielding irvine masinter 
uniform resource identifiers uri generic syntax 
www ietf org rfc rfc txt url berners lee masinter 
uniform resource locators url 
www ietf org rfc rfc txt world wide web consortium 
www org wal norman 
guide xml 
world wide web journal xml principles tools techniques 
wadge brown schraefel 
intensional html 
proceedings th international workshop principles digital document processing march 
lecture notes computer science lncs pages springer verlag 
wie gio wiederhold 
mediators architecture information systems 
ieee computer magazine march 
world wide web consortium 
xml linking language xlink 
www org tr xlink xml world wide web consortium 
extensible markup language xml second edition 
www org tr world wide web consortium 
namespaces xml 
www org tr rec xml names world wide web consortium 
xml path language xpath 
www org tr xpath world wide web consortium 
xml pointer language xpointer 
www org tr xql world wide web consortium 
xml query language xql 
www org ql ql pp xql html world wide web consortium 
xml query requirements 
www org tr req world wide web consortium 
xquery xml query language 
www org tr xquery world wide web consortium 
xml schema part primer 
www org tr xmlschema world wide web consortium 
xml schema part structures 
www org tr xmlschema world wide web consortium 
xml schema part datatypes 
www org tr xmlschema xsl world wide web consortium 
extensible stylesheet language xsl version 
www org tr xsl xslt world wide web consortium 
xsl transformations xslt version 
www org tr xslt 
intensional html 
master thesis department computer science victoria canada 
yl dik lun lee 
wise world wide web resource database system 
ieee transactions knowledge data engineering august 
zaniolo ceri faloutsos snodgrass subrahmanian zicari 
advanced database systems 
morgan publishers san francisco california 
vassilis christos yannis manolis 
infrastructure manipulating multidimensional semistructured data 
proceedings st data management symposium athens greece july 
yannis kostas 
specification mechanism direct access databases www 
proceedings th conference informatics ioannina greece 
glossary angle brackets atomic node bag basic change operations bisimulation branching time browser canonical form child element clause clause expanded extension clause expansion clause extension coercion complex node conceptual concurrency conjunction context context aggregate function context clause context coverage context data path context edge context element context equal context expanded extension glossary context node context path expression context pattern context qualifier context specifier context specifier clause context variable context wildcard context deterministic context driven query core language cross world query curly brackets data access method data centric de contextualization default dimension dimension specifier disjunction domain empty clause empty context entity edge entity part expanded form explicit context facet facet part fixed point algorithm formalism format framework glossary general path expression global graph context projection graph context pruning graph database graph de contextualization graph model graphical interface history oem database holding facet holds index information entity information integration infrastructure inherited context inherited coverage interactive interface join keyword fixed point legal link mark language mediator metadata middleware tier module multidimensional attribute multidimensional data graph multidimensional dtd dtd dtd multidimensional element glossary multidimensional entity multidimensional node multidimensional oem moem oem multidimensional paradigm multidimensional query language mql mql multidimensional semistructured data multidimensional xml mxml xml xml multidimensional xsl mxsl xsl xsl multifaceted entity multi tier notation object identifier oid online partial reduction path explicit context path inherited coverage possible worlds predicate probabilistic process reasoning reduction oem regular expressions run time scope square brackets start tag string strongly connected component stylesheet template temporal oem snapshot timestamp glossary underlying universal clause universal context valid time validity web web server web site formed respect world wide web wrapper xml parsed data xml 
