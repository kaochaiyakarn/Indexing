solve problem obtaining answers queries posed mediated integration system local view paradigm consistent wrt certain global integrity constraints 
query program combined logic programming specifications stable model semantics class minimal global instances class repairs 
logic programs consistently querying data integration systems bravo bertossi universidad de chile carleton university departamento de ciencia de computation school computer science santiago chile 
ottawa canada ing puc cl bertossi scs carleton ca reasons database may inconsistent wrt certain integrity constraints ics 
situation possibly data consistent 
arenas consistent data single relational database characterized data invariant minimal consistency true repaired versions original instance repairs 
arenas greco etal mechanisms developed retrieving consistent answer queries posed inconsistent database 
independent data sources integrated inconsistencies wrt global ics occur specially sources virtually integrated means mediator data sources kept completely independent 
mediator provides global schema interface responsible generating query plans answer global queries retrieving data sets sources combining final answer set user 
local view lav common paradigm data integration describes data source set views global schema 
global view gav defines global relation view set relations sources lenzerini survey 
query answering harder lav abiteboul 
side lav approach allows flexibility new sources integrated existing system 
flexibility add new sources having consider sources system inconsistencies wrt global ics 
example consider lav global integration system global relation source relations vi described view definitions 
global functional dependency fd violated pair tuples 
virtual integration system mediator solve potential inconsistencies query plan generated 
bertossi lav approach methodology generating query plans compute answers limited forms queries consistent wrt restricted class universal ics 
limitation comes step query transformation consistent query answering performed arenas 
query plans generated transformed query 
bertossi provides right semantics mediated integrated systems see section 
example example continued pose global system query ans obtain answers ans ans ans ans 
tuples ans ans returned consistent answers wrt fd lav approach assuming sources arc open incomplete abiteboul solve problem retrieving consistent answers global queries 
consider arbitrary universal ics referential ics consequence ics database praxis abiteboul 
view definitions conjunctive queries global queries expressed datalog extensions negation 
methodology summarized follows 
section minimal legal global instances mediated system specified means logic programs stable model answer sets semantics 
section repairs minimal global instances specified stable models disjunctive logic programs 
programs contain annotation constants specify repairs single relational databases ai 
section consistent answers queries obtained running query program combination previous specification programs 
preliminaries global schemas view definitions global schema modeled finite set relations rn fixed domain relation ai data integration data integration data integration specification repairs global system etal repairs single relational databases specified disjunctive logic programs stable model semantics 
approach works arbitrary universal referential ics sense repairs database correspond stable models program 
briefly explain programs specify repairs integration systems 
database predicates program expanded extra argument filled set new annotation constants 
atom outside original database annotated ta fd 
annotations ta fa considered advisory values solve conflicts database ics 
atom gets derived annotation fa means advise false delete database 
similarly atom gets annotation ta inserted database 
example consider integrity constraint inconsistent database instance 
logic program effect repairing database 
single local repair steps obtained deriving annotations ta fa 
done ic considered isolation may interacting ics repair process may take steps stabilize point 
order achieve annotations 
example groups annotations fd fa atom rules 

derived annotations give feedback bodies rules produce local single repair steps propagation changes triggered rule 

annotations just read literals inside resp 
outside repair 
achieved means rules 
interpret models database repairs 
program rules 
depend ics 
say repair violations 
rules 
contain database atoms 
rules 
capture cwa 
rules 
denial program constraints discard models contain atom annotated ta fa 
program stable definition combines program specification minimal legal instances repairs 
tuple variables appearing database atoms rule 
data integration rules 
repair referential ics deletion tuples insertion null values propagated ics 
purpose consider definition instance associated choice model consistent answers ements global schema positive occurrence predicates say replaced negative occurrence say 
program query predicate ans collects answers particular order queries expressed strati certain answers monotone 
interested just minimal answers considering consistency issues computed general approach far specifying means disjunctive logic programs stable model semantics database repairs mediated integration system open sources lav approach 
consistent answers queries posed system computed running query program specification database repairs skeptical cautious stable model semantics 
specification repairs achieved specifying class minimal global legal instances integration system 
best knowledge specification lav paradigm global instances logic programming formalism 
specification inspired inverse rules algorithms auxiliary functions replaced auxiliary predicates forced functional means non deterministic choice operator 
methodology works conjunctive view definitions extended disjunctive views corresponding extension inverse rules algorithm duschka 
wrt ics queries handle approach works arbitrary universal referential integrity constrains queries expressed datalog programs 
consequence current approach consistent query answering subsumes extends methodologies bertossi integration systems stand relational databases 
reasons space just mention optimizations specification programs execution 
materialization cwa avoided program transformation 
classes common ics identified head cycle free consequence transformed non disjunctive program ben eliyahu 
program split lifschitz program specifies minimal legal instances program specifies repairs query program 
non stratified models computed bottom fixpoints iterative operator second locally stratified przymusinski 
query program stratified original query order consistent answers eventually computed bottomup evaluation mechanism 
successfully experimented dlv eiter 
current implementations disjunctive stable models semantics effective database applications possible evaluate open queries form guided query massive grounding program second considering completely constructed stable model program 
data integration wrt related papers query answering mediated integration systems assumption certain global ics hold treated duschka cali 
assume global ics hold 
logic programming specifications repairs single relational databases arenas greco 
considers integration systems gav approach satisfy global key dependencies 
legal instances allowed flexible allowing computed views accommodate satisfaction ics 
sense notion repair implicit legal instances repairs considered 
view definitions expressed datalog queries queries global system conjunctive 
repairs global system specified normal programs stable model semantics 
bertossi possibly inconsistent integration systems lav approach considered 
notion repair minimal legal instance introduced 
algorithm query transformation mechanism arenas applied firstorder queries 
resulting query may contain negation run top extension inverse algorithm case stratified datalog queries 
approach limited restrictions query transformation methodology 
acknowledgments funded carleton university start nserc 
bertossi faculty fellow ibm center advanced studies toronto lab 
grateful pablo alvaro cortes ariel nicola leone alberto mendelzon useful conversations 
abiteboul abiteboul hull vianu foundations databases 
addison wesley 
abiteboul abiteboul duschka complexity answering queries materialized views 
proc 
acm pods pp 

arenas arenas bertossi chomicki consistent query answers inconsistent databases 
proc 
acm pods pp 

arenas arenas bertossi chomicki specifying querying database repairs logic programs exceptions 
flexible query answering systems 
developments 
larsen 
eds springer pp 

bertossi repairing databases annotated predicate logic 
proc 
international workshop non monotonic reasoning 
benferhat giunchiglia eds pp 

bertossi bravo characterizing computing semantically correct answers databases annotated logic answer sets 
semantics databases springer lncs pp 

ben eliyahu ben eliyahu dechter propositional semantics disjunctive logic programs 
annals mathematics artificial intelligence 
bertossi bertossi chomicki cortes gutierrez consistent answers integrated data sources 
flexible query answering systems springer lnai pp 

cali cali calvanese de giacomo data integration integrity constraints 
proc 
caise springer lncs pp 

duschka duschka query planning optimization information integration 
phd thesis stanford university december 
duschka duschka genesereth levy recursive query plans data integration 
logic programming 
eiter eiter faber leone pfeifer declarative problem solving dlv 
logic artificial intelligence 
minker ed kluwer pp 

pedreschi zaniolo non determinism deductive databases 
proc 
dood springer lncs pp 

pedreschi zaniolo semantics expressive power nondeterministic constructs deductive databases 
computer system sciences 
minker logic approach data integration 
theory practice logic programming 
greco greco greco logic programming approach integration repairing querying inconsistent databases 
proc 
iclp springer lncs pp 

query rewriting views presence functional inclusion dependencies 
information systems 
lenzerini rosati source inconsistency incompleteness data integration 
proc 
krdb 
lenzerini lenzerini data integration theoretical perspective 
proc 
acm pods pp 

lifschitz lifschitz turner splitting logic program 
proc 
iclp 
mit press pp 

przymusinski przymusinski stable semantics disjunctive programs 
new generation computing 
data integration 
