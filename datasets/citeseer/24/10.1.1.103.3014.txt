arxiv cs nov design analysis nonbinary ldpc codes arbitrary discrete memoryless channels amir student member ieee david senior member ieee analysis iterative decoding coset ldpc codes gf designed arbitrary discrete memoryless channels particularly nonbinary asymmetric channels 
random coset analysis produce effect similar output symmetry binary channels 
show random selection nonzero elements gf parity check matrix induces permutation invariance property densities decoder messages simplifies analysis approximation 
generalize properties including symmetry stability analysis binary ldpc codes 
show gaussian approximation entire dimensional distribution vector messages described single scalar parameter distributions binary ldpc messages 
apply property develop exit charts codes 
appropriately designed signal constellations obtain substantial shaping gains 
simulation results indicate codes outperform multilevel codes short block lengths 
simulation results awgn channel including results db unconstrained shannon limit restricted signal constellation spectral efficiency bits hz 
index terms bandwidth efficient coding coset codes iterative decoding low density parity check ldpc codes 
seminal richardson developed extensive analysis ldpc codes memoryless binary input output symmetric channels 
analysis designed edge distributions ldpc codes rates remarkably close capacity channels 
analysis restricted channels 
rules important channels including bandwidth efficient channels require nonbinary channel alphabets 
design nonbinary codes hou suggested starting binary ldpc codes components multilevel code mlc bit interleaved coded modulation scheme 
nonbinary channels typically appear ieee trans 
inf 
theory submitted october revised accepted publication november 
authors school electrical engineering tel aviv university ramat aviv tel aviv israel mail abn eng tau ac il eng tau ac il 
research supported israel science foundation equipment israel science foundation school computer science tel aviv university fellowship weinstein research institute signal processing tel aviv university 
material part st annual allerton conference communications control computing monticello illinois october ieee international symposium information theory adelaide australia 
output symmetric posing problem analysis 
overcome problem hou coset ldpc codes plain ldpc codes 
coset ldpc codes suggested kav ci context ldpc codes channels intersymbol interference isi 
mlc codes frequently decoded multistage parallel decoding respectively 
methods suboptimal comparison methods rely belief propagation decoding full belief propagation decoding considered mlc variant ldpc called bqc ldpc :10.1.1.96.1683
methods involve computations difficult analyze 
alternative approach designing nonbinary codes starts nonbinary ldpc codes 
gallager defined arbitrary alphabet ldpc codes modulo arithmetic 
nonbinary ldpc codes considered davey mackay context codes binary input channels 
definition uses galois field gf arithmetic 
focus gf ldpc codes similar suggested 
considered coset gf ldpc codes maximum likelihood ml decoding :10.1.1.96.1683
showed appropriately designed coset gf ldpc codes capable achieving capacity discrete memoryless channel 
examine coset gf ldpc codes iterative decoding 
straightforward implementation nonbinary belief propagation decoder large decoding complexity 
discuss implementation method suggested richardson urbanke section uses multidimensional discrete fourier transform dft 
coupled efficient algorithm computing multidimensional dft method reduces complexity dramatically discussed binary mlc schemes full belief propagation decoding 
binary ldpc codes bpsk signals typically symbols code alphabet transmitting awgn channel 
similarly nonbinary ldpc codes straightforward choice pam qam signal constellation simulations 
constellations codes exhibit shaping loss high snr approaches db 
carefully selecting signal constellation substantial shaping gain achieved 
approaches discuss quantization mapping ideas gallager mceliece nonuniform spacing sun van :10.1.1.96.1683
important aid analysis binary ldpc codes density evolution proposed richardson urbanke 
density evolution enables computing exact threshold binary ldpc codes asymptotically large block lengths 
density evolution chung able irregular ldpc codes db shannon limit binary input awgn channel 
efficient algorithms computing density evolution proposed 
density evolution heavily reliant output symmetry typical binary channels 
show focusing coset codes enables extension concepts density evolution nonbinary ldpc codes 
examine codes random coset setting average performance evaluated possible multistage decoding involves transferring hard decision decoded codeword soft decision component code 
benefit feedback decision subsequent decoders 
parallel decoding codes bounded away capacity discussed 
realizations coset vector 
approach similar kav ci binary channels isi 
random coset analysis enables generalize properties analysis binary ldpc including zero codeword assumption symmetry property densities 
approximations density evolution proposed gaussian assumption 
approximations track dimensional surrogates true densities easier implement 
different approach develop dimensional surrogates compute lower bounds decoding threshold 
binary ldpc codes problem finding efficient algorithm computing density evolution nonbinary ldpc codes remains open 
result fact messages transferred nonbinary belief propagation multidimensional vectors scalar values 
just storing density non scalar random variable requires amount memory exponential alphabet size 
show approximation surrogates possible 
ldpc codes gf nonzero elements sparse parity check matrix selected random gf 
show random selection induces additional symmetry property distributions tracked density evolution call permutation invariance 
permutation invariance generalize stability property binary ldpc codes 
gaussian approximation nonbinary ldpc considered li context transmission binary input channels 
approximation uses dimensional vector parameters characterize densities messages assumption densities approximately gaussian 
show assuming permutation invariance densities may fact described scalar dimensional parameters densities binary ldpc 
binary ldpc codes commonly designed exit charts suggested brink 
exit charts gaussian approximation density evolution 
generalization approximation extend exit charts coset gf ldpc codes 
exit charts design codes spectral efficiencies including codes spectral efficiency bits hz db unconstrained shannon limit transmission restricted signal constellation 
best knowledge best codes designed spectral efficiency 
compare coset gf ldpc codes codes constructed multilevel coding turbo tcm provide simulation results indicate codes outperform schemes short block lengths 
organized follows introducing notation section ii section iii formally define coset ldpc codes gf ensembles codes discuss mappings channel alphabet 
section iv belief propagation decoding coset gf ldpc codes discuss efficient implementation 
section discuss zero codeword assumption symmetry channel equivalence 
section vi density evolution nonbinary ldpc permutation invariance 
develop note approach generalizing density evolution asymmetric binary channels proposed require zero codeword assumption 
placed section easy notations required understand section iii 
stability property gaussian approximation 
section vii discuss design ldpc codes exit charts simulation results 
section viii compare codes multilevel coding turbo tcm 
section ix presents ideas research concludes 
general notation ii 
notation vectors typically denoted boldface random variables denoted upper case letters instantiations lower case allow exception rule random variables gf enable notation 
simplicity generally assume discrete random variables exception involving gaussian approximation 
generalization continuous variables immediate 
probability llr vectors important difference nonbinary binary ldpc decoders messages multidimensional vectors scalar values 
binary decoders possible representations messages plain likelihood probability vectors log likelihood ratio llr vectors 
dimensional probability vector vector xq real numbers xi xi 
indices message vector components interpreted elements gf 
index taken mean ith element gf enumeration field elements assume indices correspond zero elements field respectively 
probability vector llr values associated defined wi log xi definition borrowed 
notice 
define llr vector representation dimensional vector wq 
convenience defined belonging vector allow refer implicit understanding equal zero 
llr vector components corresponding probability vector probability vector produced obtained xi llr wi wk shorthand notation denote llr vector representation probability vector similarly llr vector corresponding probability vector representation 
probability vector random variable defined dimensional random variable xq takes valid probability vector values 
llr vector random variable dimensional random variable wq 
operations probability vector element gf define operator way note different definition shortly llr vectors addition performed gf 
defined set xg define number elements gf satisfying example assuming gf addition 
note similarly define xg note operation reversible similarly reversible appendix summarize additional properties operators 
context llr vectors define operation differently 
llr vector define corresponding probability vector 
llr llr 
obtain wi wg operation similarly defined llr llr 
operation resulting definition coincides definition probability vectors wi iii 
coset gf ldpc codes defined section iii defining ldpc codes gf 
proceed section iii define coset gf ldpc codes 
section iii define concept mappings coset gf ldpc codes tailored specific channels 
section iii discuss ensembles coset gf ldpc codes 
ldpc codes gf gf ldpc code defined way similar binary ldpc codes bipartite tanner graph 
graph variable left nodes corresponding codeword symbols check right nodes corresponding parity checks 
important differences distinguish gf ldpc codes binary counterparts 
firstly codeword elements selected entire field gf 
variable node assigned symbol gf just binary digit 
secondly edge tanner graph label gi gf defined 
illustrates labels edges adjacent check node ldpc code bipartite graph digits represent nonzero elements gf 
fig 

schematic diagram gf ldpc bipartite graph 
word components gf codeword check node equation holds gi jci set variable nodes adjacent gf ldpc code parity check matrix easily obtained bipartite graph see :10.1.1.96.1683
binary ldpc codes say gf ldpc code regular variable nodes tanner graph degree check nodes degree 
say irregular 
coset gf ldpc codes mentioned section plain gf ldpc codes useful consider coset codes 
doing follow example elias binary codes 
definition length linear code length vector gf code obtained adding codewords called coset code 
note addition performed componentwise gf 
called coset vector 
coset codes see valuable asset rigorous analysis easily accounted decoding process 
mapping channel signal set binary ldpc codes bpsk signals typically symbols code alphabet 
nonbinary ldpc denote signal constellation mapping code alphabet gf 
designing codes transmission awgn channel pulse amplitude modulation pam quadrature amplitude modulation qam constellation straightforward choice section viii codes pam signal constellation 
show careful attention design signal constellation produce substantial gain performance 
shown ensembles gf ldpc codes resemble uniform random coding ensembles :10.1.1.96.1683
empirical distribution gf symbols nearly codewords approximately uniform 
equivalently codeword pr gf randomly selected codeword symbol 
codes useful transmission symmetric channels capacity achieving distribution uniform fig 

example quantization mapping 

approach capacity asymmetric channels overcome shaping gap need symbol distribution nonuniform 
example approach capacity awgn channel need distribution resemble gaussian distribution 
solution problem variant idea gallager 
approach begins mapping symbols gf code alphabet channel input alphabet 
typically code alphabet larger channel input alphabet 
mapping gf symbols channel symbol mapping control probability channel symbol 
example fig 
examine channel alphabet quantization mapping designed achieve distribution digits represent elements gf 
call mapping mapping 
formally define quantization mapping follows definition rational probability assignment form na quantization associated mapping set gf elements number elements mapped 
quantizations designed finite channel input alphabets rational valued probability assignments 
probability assignments approximated arbitrarily close 
independently similar approach developed mackay note approach involve coset codes 
similar approach designing mappings sun van suitable channels continuous input alphabets awgn channel 
mapping code symbols channel symbol mapping set channel input signals non uniformly spaced 
approximate gaussian input distribution example signals spaced densely zero 
mapping gf define mapping vector symbols gf vector obtained applying symbols 
mapping code code obtained applying mapping codewords 
source word fig 

encoding coset gf ldpc codes standard gf ldpc encoder mapping coset gf ldpc codeword useful model coset gf ldpc encoding sequence operations shown 
incoming message encoded codeword underlying gf ldpc code coset vector added mapping applied 
sequel refer resulting codeword coset gf ldpc codeword strictly speaking mapping included definition 
resulting codeword transmitted channel 

ensembles coset gf ldpc codes case standard binary ldpc codes analysis coset gf ldpc focuses average behavior codes selected random ensemble codes 
method due luby construct irregular bipartite tanner graphs 
graphs characterized probability vectors 
convenience define polynomials ix jx tanner graph fraction edges left degree fraction edges right degree letting denote total number edges obtain left nodes degree je right nodes degree letting denote number left nodes denotes number right nodes luby suggested method constructing bipartite graphs 
edges originating left nodes numbered procedure applied edges originating right nodes 
permutation chosen uniform probability space permutations 

edge numbered left side associated edge numbered right side 
note occasionally multiple edges may link pair nodes 
gf ldpc code constructed tanner graph random selection labels uniform probability gf edge 
mapping coset gf ldpc code created applying coset gf ldpc code 
coset vector generated random uniform selection components gf 
summarizing random selection code coset gf ldpc ensemble amounts random construction tanner graph random selection labels random selection coset vector 
rate coset gf ldpc code equal rate underlying gf ldpc code 
design rate gf ldpc code defined dj ci value lower bound true rate code measured ary symbols channel 
definition decoder iv 
belief propagation decoding coset gf ldpc codes coset gf ldpc belief propagation decoder gallager kschischang 
decoder attempts recover codeword underlying gf ldpc code 
decoding consists alternating rightbound leftbound iterations 
rightbound iteration messages sent variable nodes check nodes 
leftbound iteration opposite occurs 
note terminology rightbound message produced left node variable node leftbound message produced right node check node 
mentioned section ii decoder messages dimensional probability vectors scalar values standard binary ldpc 
algorithm perform steps alternately rightbound iteration 
edges parallel iteration zero set rightbound message initial message components defined follows pr yi vi pr yi yi vi channel output element coset vector corresponding variable node addition operation vi performed gf 
iteration number rk di di di degree node di denote incoming leftbound messages edges denoting set nodes adjacent leftbound iteration 
edges parallel set components leftbound message follows lk gf dj gd dj degree node dj denote rightbound messages edges labels edges 
denotes label edge 
summations multiplications indices labels gn performed gf 
note equivalent simpler expression shortly 
rightbound leftbound message variable node element xk represents estimate posteriori probability app corresponding code symbol channel observations corresponding neighborhood graph elaborate section iv 
decision associated defined follows decoder decides symbol maximizes xk 
maximum obtained indices uniform random selection 
analysis focus probability rightbound leftbound message erroneous corresponds incorrect decision 
practical setting decoder stops fixed number decoding iterations computes variable node final vector app values 
vector computed replacing 
unique variable node rightbound leftbound messages compute final decision value 
consider expression computing leftbound messages 
useful equivalent expression dj gd entire leftbound vector component operator defined 
gf convolution operator defined operation vectors produces vector components gf gf subtraction evaluated gf 
definitions useful dj definitions may rewritten dj standard binary ldpc belief propagation decoder coset gf ldpc decoder equivalent formulation llr messages 
algorithm perform steps alternately rightbound iteration 
edges parallel iteration zero set llr rightbound message components defined follows iteration number pr yi vi log pr yi vi di di degree node di denote incoming leftbound llr messages edges 
addition vectors performed componentwise 
leftbound iteration 
rightbound messages converted llr plain likelihood representation 
expression applied obtain plain likelihood representation leftbound messages 
leftbound messages converted back corresponding llr representation 
versions decoder similar execution times 
llr representation useful analysis decoders performance 
note developed alternative decoder uses llr representation require conversion plain likelihood representation leftbound iteration algorithm 
efficient implementation compute rightbound messages save time computing numerators separately normalizing sum 
variable node degree di computation rightbound message takes di computations 
straightforward computation leftbound messages check node degree dj complexity dj leftbound message total messages combined 
review method due richardson urbanke developed decoding standard gf ldpc codes significantly reduces complexity 
method assumes plain likelihood representation messages 
relevant implementation algorithm uses llr representation algorithm leftbound messages computed converting plain likelihood representation applying converting back llr representation 
properties galois fields see extensive discussion 
galois fields gf exist values equal prime number positive integer 
element gf represented dimensional vector 
sum difference gf elements corresponds sum difference vectors evaluated modulo sums differences vectors components 
consider gf convolution operator defined process computing leftbound message 
replace gf indices vector representations expression rewritten consider example simple case 
mod mod mod right hand side output dimensional cyclic convolution evaluated 
general case dimensional cyclic convolution 
convolution equivalently evaluated dimensional dft dft idft idft page 
rewritten dj idft dft multiplication dft vectors performed componentwise evaluated gd 
denote dft vector dimensional probability vector components related equations page dft idft efficient computation dft possible successively applying single dimensional dft dimensions turn shown algorithm page algorithm vector dft return iteration algorithm dfts computed 
dft requires floating point multiplications floating point additions compute components entire algorithm requires multiplications additions 
idft computed similar manner 
note reduction complexity obtained number theoretic transforms winograd fft 
results reduce complexity leftbound computation check node computing dfts rightbound messages dft vectors compute convolutions 
resulting complexity check node dj mpq dj dj 
element sum computation dfts second multiplications dfts messages 
significant improvement comparison straightforward approach 
note dft particularly attractive elements form floating point multiplications eliminated dft involves additions subtractions 
complexity check node dj mq dj dj 
furthermore quantities real valued complex valued arithmetic needed 
additional improvement order dj mpq dj general case necessarily achieved method suggested davey mackay 
method produces negligible improvement high values dj elaborated 
neighborhood graphs tree assumption conclude section briefly review concepts neighborhood graphs tree assumption 
concepts developed context standard binary ldpc codes carry coset gf ldpc codes 
definition richardson urbanke neighborhood graph depth spanned edge induced graph containing edges nodes directed paths length iteration rightbound message produced variable node check node vector app values code symbol information observed neighborhood depth 
similarly leftbound message information observed neighborhood depth 
app values produced belief propagation decoders computed tree assumption say tree assumption satisfied node context computing message neighborhood graph message tree 
asymptotically large block lengths tree assumption satisfied high probability particular node 
finite block lengths neighborhood graph frequently contains cycles tree 
cases discussed appendix ii 
simulation results indicate belief propagation decoder produces remarkable performance tree assumption strictly satisfied 
coset gf ldpc analysis random coset setting important aid analysis coset gf ldpc codes randomly selected coset vector construction 
examine decoder single coset gf ldpc code focus set codes 
fixed gf ldpc code mapping consider behavior coset gf ldpc code constructed randomly selected coset vector refer random coset analysis 
approach random space consists random channel transitions random realizations coset vector random coset vector produces effect similar output symmetry usually required analysis standard ldpc codes 
note random assumed selected advance known decoder 
coset vector section keep underlying gf ldpc code fixed 
section vi consider concepts context selecting underlying ldpc code random ensemble 
zero codeword assumption important property standard binary ldpc decoders probability decoding error equal transmitted codeword 
property central analysis methods enables conditioning analysis assumption zero codeword transmitted 
called independence assumption 
bpsk alphabet codeword referred codeword 
coset gf ldpc codes lemma 
lemma assume discrete memoryless channel 
consider analysis random coset setting coset gf ldpc code constructed fixed gf ldpc code denote conditional bit block probability decoding error iteration assuming codeword sent averaged possible values coset vector independent proof lemma provided appendix iii 
lemma enables condition analysis results assumption transmitted codeword corresponds underlying ldpc code 
symmetry message distributions symmetry property introduced richardson urbanke major tool analysis standard binary ldpc codes 
section generalize definition ary random variables analysis coset gf ldpc decoders 
provide versions definition probability vector random variables second llr vector random variables 
definition probability vector random variable symmetric probability vector expression holds defined section pr context llr vector random variables lemma 
lemma llr vector random variable 
random variable llr symmetric satisfies llr vectors gf 
pr wi pr proof lemma provided appendix iii 
sequel adopt lemma definition symmetry discussing variables llr representation 
note simple case llr vector degenerates scalar value coincides symmetry binary codes defined 
examine message produced node pr pr theorem assume discrete memoryless channel consider coset gf ldpc code constructed random coset setting fixed gf ldpc code denote message produced node tanner graph coset gf ldpc code iteration belief propagation decoding 
tree assumption satisfied zero codeword assumption random variable symmetric 
proof theorem provided appendix iii 
transmitted symbol equivalent channel apply mapping fig 

equivalent channel model coset gf ldpc codes 
channel equivalence physical channel compute app values output vector simple gf ldpc codes unsuitable arbitrary channels simpler analyze coset gf ldpc codes decoders 
fig 
presents structure coset gf ldpc encoding decoding 
transmitted symbol underlying code coset symbol 
evaluated gf input mapper mapper output physical channel output 
discussed shortly 
comparing coset gf ldpc decoder decoder underlying gf ldpc code may observe difference exists computation initial messages messages app values corresponding single channel observation 
computed decoders proceed exactly way 
desirable operations unique coset gf ldpc codes channel examine equivalent model employs simple gf ldpc codes decoders 
consider channel obtained encapsulating addition random coset symbol mapping computation app values channel model 
input channel symbol code alphabet output probability vector app values 
decoder gf ldpc code raw channel output compute new vector app values 
soon show computed vector fact identical definition definition pr denote transition probabilities channel input alphabet gf output alphabet consists dimensional probability vectors 
channel cyclic symmetric exists probability function defined sets probability vectors pr yi lemma assume cyclic symmetric channel 
app denote app values channel output app proof lemma provided appendix iii 
returning context equivalent model lemma cases interest symbol gf ldpc codeword 
section consider general theoretical case input channel arbitrary gf symbol 
lemma equivalent channel fig 
cyclic symmetric 
proof lemma provided appendix iii 
initial messages computed performance coset gf ldpc gf ldpc decoding algorithms function messages 
obtained performance coset gf ldpc decoder random coset setting original physical channel identical performance underlying gf ldpc decoder equivalent channel 
result enables shift discussion coset gf ldpc codes arbitrary channels gf ldpc codes cyclic symmetric channels 
note cyclic symmetric channel symmetric sense defined gallager page 
capacity achieving distribution uniform 
indicates gf ldpc codes approximately uniformly distributed code spectrum see suitably designed :10.1.1.96.1683
relate capacity equivalent channel physical channel 
precisely show equivalent channel capacity equal equiprobable signalling capacity physical channel mapping denoted defined 
random variables corresponding fig 

related physical channel transition probabilities 
assume uniformly distributed define 
equal capacity transmission physical channel input alphabet generated random uniform selection 
lemma capacity equivalent channel fig 
equal 
proof lemma provided appendix iii 
code codewords lemma viewed generalization channel equivalence lemma 
lemma probability function symmetric probability vector random variable 
consider cyclic symmetric channel transition probabilities pr 
assuming symbol zero transmitted cyclic symmetric channel initial messages gf ldpc decoder distributed 
proof lemma straightforward definitions lemma 
refer cyclic symmetric channel defined lemma equivalent channel corresponding 
note lemma remains valid switch llr representation 
replace llr equivalent llr define pr defined 
vi 
analysis density evolution section consider density evolution coset gf ldpc codes analysis 
precise computation coset gf ldpc version algorithm generally possible practice 
algorithm valuable analysis purposes 
defining density evolution section vi examine application concentration theorem symmetry 
proceed section vi consider permutation invariance important property densities tracked algorithm 
apply permutation invariance section vi generalize stability property coset gf ldpc codes section vi obtain approximation density evolution gaussian assumption 
density evolution definition coset gf ldpc density evolution binary ldpc codes 
description intended completeness text focuses differences unique coset gf ldpc codes 
reader referred complete rigorous development 
density evolution tracks distributions messages produced belief propagation averaged possible neighborhood graphs 
random space comprised random channel transitions random selection code coset gf ldpc ensemble see section iii random selection edge graph 
random space include transmitted codeword assumed fixed zero codeword discussion section 
denote initial message edge rt rightbound message iteration lt leftbound message iteration neighborhood graph associated rt lt assumed tree case neglected 
notation discussing plain likelihood representation density evolution 
llr vector representation denote llr vector representations rt lt simplify notation assume random variables discrete valued track probability functions densities 
discussion focuses plain likelihood representation 
translation llr representation straightforward 
initial message 
probability function computed manner 
pr pr random variables denoting channel output coset vector components channel output alphabet components defined replacing yi vi expression equal pr pr received transmitted leftbound messages 
lt obtained 
rightbound messages replaced independent random variables distributed rt assumed independent 
similarly labels replaced independent random variables uniformly distributed gf 
formally maximal right degree 
dj define pr dj dj gd gf gd dj dj pr gn gn pr rt set probability vectors components dj defined 
gn random variable corresponding nth label pr gn pr rt obtained recursively previous iteration belief propagation 
probability function lt obtained pr lt dj dj pr dj rightbound messages 
probability function equal rt obtained 
leftbound messages initial message replaced independent random variables distributed lt respectively 
formally maximal left degree 
di define pr di pr di pr lt components di defined 
pr pr lt obtained recursively previous iterations belief propagation 
probability function rt obtained pr rt di di pr di theoretically algorithm sufficient compute desired densities 
practice major problem fact quantities memory required store probability density dimensional message grows exponentially instance quantization levels dimension amount memory required ary code order alternative method describing densities algorithm realizable 
noteworthy algorithm approximated monte carlo simulations 
discuss probability message examined density evolution erroneous 
message corresponds incorrect decision regarding variable node directed sent 
zero codeword assumption true transmitted code symbol underlying ldpc code relevant variable node assumed zero 
assume message fixed probability vector suppose greater elements xi 
decision criterion belief propagation decoder described section iv decoder correctly decide zero 
similarly exists index xi decoder incorrectly decide maximum achieved indices decoder correctly decide zero probability definition probability vector pe probability error decision vector example pe pe pe 
quantization means operation performed discrete quantizer context definition 
random variable define sum probability vectors 
pe pe pr consider pe rt 
corresponds probability error randomly selected edge iteration richardson urbanke proved concentration theorem states block length approaches infinity bit error rate iteration converges similarly defined probability error 
convergence probability exponentially replacing bit symbol error rate theorem carries coset gf ldpc density evolution unchanged 
pe rt sequence error probabilities produced density evolution 
desirable property sequence theorem 
theorem nonincreasing proof theorem similar theorem omitted 
section considered symmetry context message corresponding fixed underlying gf ldpc code fixed edge tanner graph 
consider relevance context density evolution assumes random underlying ldpc code random edge 
theorem random variables rt lt symmetric 
proof theorem provided appendix iv 
permutation invariance induced labels permutation invariance key property coset gf ldpc codes allows approximation densities dimensional functionals greatly simplifying analysis 
definition permutation inferred operation elements probability vector 
provide definition consider leftbound message computed process belief propagation decoding 
gf consider dj gd dj gd density evolution label random variable independent labels rightbound messages consequently dj similarly fixed distributed identically independent dj random variable distributed identically leads definition definition probability vector random variable permutation invariant fixed gf random variable distributed identically definition assumes plain likelihood representation carries straightforwardly llr represen tation lemma easy verify lemma llr vector random variable llr 
permutation invariant fixed gf random variable distributed identically give idea permutation invariance useful important lemmas involving permutation invariant random variables 
lemmas examine marginal random variables 
lemma valid probability vector llr vector representation 
lemma probability vector llr vector random variable 
permutation invariant random variables xi xj wi wj identically distributed 
proof lemma provided appendix iv 
lemma symmetric llr vector random variable 
assume permutation invariant 
wk symmetric binary sense defined 
note lemma apply plain likelihood representation 
proof lemma provided appendix iv 
consider definition definition probability vector random variable define random permutation denoted random variable equal randomly selected gf uniform probability independent definition llr vector representation identical 
lemma links permutation invariance random permutation 
lemma probability vector llr vector random variable permutation invariant exists probability vector llr vector random variable 
appendix iv additional useful lemmas involve permutation invariance 
theorem discusses permutation invariance relevance distributions tracked density evolution 
theorem rt lt defined section vi 
lt permutation invariant 
rt rt label edge associated message 
rt symmetric permutation invariant satisfies pe rt pe rt 
random permutation replacing computation density evolution affect densities lt rt 
random variable symmetric permutation invariant satisfies pe pe 
proof theorem provided appendix iv 
distributions involved density evolution permutation invariant theorem enables focus attention permutation invariant random variables 
interest distribution rightbound message rt confined error probability implied 
may examine rt 
similarly interest initial message confined effect distribution rt lt may examine stability stability condition introduced richardson necessary sufficient condition probability error approach arbitrarily close zero assuming dropped value iteration 
condition important aid design ldpc codes low error floors 
section generalize stability condition coset gf ldpc codes 
discrete memoryless channel transition probabilities pr mapping define channel parameter 
gf pr pr example consider awgn channel noise variance 
case obtained similar manner example 
exp appendix iv concept non degeneracy mappings channels taken :10.1.1.96.1683
assumptions strictly smaller 
assume non degeneracy definitions theorem 
ready state stability condition coset gf ldpc codes theorem assume triplet coset gf ldpc ensemble designed discrete memoryless channel 
denote probability distribution function initial message density evolution 
pe rt denote average probability error iteration density evolution 
assume exp neighborhood zero denotes element llr representation 
exists positive constant iterations exists positive constant approaches zero approaches infinity 
iteration note requirement exp typically satisfied channel interest 
proof part theorem provided appendix proof part provided appendix vi 
outlines proofs provided 
proof part generalization proof provided richardson 
proof begins observing distributions iteration symmetric may equivalently modelled app values corresponding outputs channel 
erasure decomposition lemma output channel modelled output degraded erasure channel 
proof proceeds replacing distributions iteration erasure channel equivalents shows probability error new distributions lower bounded nonzero constant 
true channel degraded version erasure channel true probability error lower bounded nonzero constant 
returning context coset gf ldpc codes observe theorem random variable rt iteration symmetric lemma modelled app values outputs cyclic symmetric channel 
show cyclic symmetric channel modelled degraded channel appropriately defined 
continuation proof follows lines 
proof part generalization proof 
proof tracks dimensional functional distribution message denoted 
show rightbound messages consecutive iterations satisfy rt rt rt order taylor expansions proceed show rt rt rt 
theorem conditions small rt rt rt rt descends zero 
details including relation rt provided appendix vi 
gaussian approximation binary ldpc chung observed rightbound messages density evolution approximated gaussian random variables 
furthermore symmetry messages binary ldpc decoding implies mean variance random variable related 
distribution symmetric gaussian random variable may described single parameter 
property observed brink essential development exit charts 
context nonbinary ldpc codes li obtained description dimensional messages gaussian assumption parameters 
theorem symmetry permutation invariance defined sections vi reduce number parameters 
key property enables generalization exit charts coset gf ldpc codes 
note theorem assumes continuous gaussian distribution 
definition symmetry llr vector random variables lemma extended continuous distributions replacing probability function probability density function 
theorem llr vector random variable gaussian distributed mean covariance matrix 
assume probability density function exists nonsingular 
symmetric permutation invariant exists 

mi 
proof theorem provided appendix vii 
gaussian symmetric permutation invariant random variable completely described single parameter 
sections vii vii discuss validity gaussian assumption coset gf ldpc codes 
vii 
design coset gf ldpc codes binary ldpc codes design edge distributions frequently done extrinsic information transfer exit charts 
exit charts particularly suited designing ldpc codes awgn channels 
section develop exit charts coset gf codes 
assume section transmission awgn channels 
exit charts formally exit charts track mutual information transmitted code symbol average variable node rightbound leftbound message transmitted edge emanating 
information zero message independent transmitted code symbol probability error information approaches probability error approaches zero 
note assume base log function mutual information 
taken represent distribution message density evolution entire distribution message iteration recorded exit charts assumed faithful surrogate shortly elaborate done 
exit charts curves functions computed vnd variable node decoder curve cnd check node decoder curve corresponding rightbound leftbound steps density evolution respectively 
argument curve denoted ia value curve denoted 
vnd curve ia interpreted equal functional lt applied distribution leftbound messages lt iteration output interpreted equal rt rt rightbound message produced rightbound iteration 
cnd curve opposite occurs 
note density evolution densities tracked iteration vnd cnd curves evaluated possible value argument ia decoding trajectory produces approximation functionals lt rt iteration may computed see discussion trajectory 
decoding process predicted converge decoding iteration comprised leftbound rightbound iteration resulting rt increased comparison ia rt previous iteration 
require nd cnd ia ia ia 
equivalently nd ia cnd ia 
exit chart cnd curve plotted ia axes reversed see example fig 

decoding process predicted converge vnd curve strictly greater reversed axes cnd curve 
surrogate leftbound rightbound message iteration belief propagation 
strictly speaking approximation requires knowledge distribution primarily knowledge definition notation denote code codeword symbol 
distinction meanings context discussion 
conditional distribution pr assume uniformly distributed 
shown lemma appendix iii messages coset gf ldpc decoder satisfy pr pr may restrict analysis conditional distribution pr 
lemma tree assumption defined satisfies log wi proof lemma provided appendix viii 
note lemma appendix iii may replace conditioning conditioning transmission zero codeword 
remainder section assume distributions conditioned zero codeword assumption 
development exit charts binary ldpc codes brink confine attention llr message distributions gaussian symmetric 
assumptions message distribution uniquely described variance value evaluate applied corresponding gaussian distribution 
result denoted shown monotonically increasing 
defined 
applied obtain describes corresponding distribution uniquely defines entire distribution gaussian assumption strictly true 
binary ldpc codes assuming transmission awgn channel distributions rightbound messages approximately gaussian mixtures irregular codes 
distributions leftbound messages resemble spikes 
exit method continues model distributions gaussian 
simulation results provided indicate approach produces close prediction performance binary ldpc codes 
coset gf ldpc codes discuss methods designing exit charts 
method models llr vector messages distributions gaussian random variables example 
modelling enables evaluate vnd cnd curves approximations developed greatly simplifying computation 
modelling rightbound message distributions coset gf ldpc gaussian accurate binary ldpc codes 
explain section vii results distribution initial messages gaussian awgn channel 
section vii develop alternative approach models rightbound distributions accurately 
apply approach section vii produce alternative method computing exit charts 
method vnd cnd curves difficult compute 
method produces codes approximately db better performance 
computation exit charts method method confine attention distributions permutation invariant symmetric gaussian 
theorem assumptions dimensional llr vector message distribution uniquely defined parameter 
proceed define manner similar 
appendix viii show monotonically increasing defined 
distribution may obtained way 
method compute vnd cnd curves development brink binary ldpc codes 
vnd curve 
rightbound message sum incoming leftbound messages initial message 
ia denote mutual information functionals incoming leftbound messages initial messages respectively 
lemma equals equiprobable signalling capacity channel mapping 
may obtained numerically evaluating defined section 
left degree nd ia denote value vnd curve confined distribution rightbound messages edges left degree employ approximation holds tree assumption initial incoming leftbound messages gaussian 
nd ia ia validity approximation relies observation rightbound message equal sum leftbound messages independently distributed initial message tree assumption 
ia variance leftbound messages variance initial message variance rightbound message ia cnd curve 
cnd ia denote value cnd curve confined distribution leftbound messages edges right degree cnd ia ia approximation similar approximation relies sharon 
context coset gf ldpc codes verified effectiveness empirically 
edge distribution pair nd ia cnd ia iie nd ia jie cnd ia code design may performed fixing right distribution computing 
constraints design 
strictly speaking rightbound messages permutation invariant 
appendix viii show pose problem derivation exit charts 
required valid probability vector 

ensure decoding convergence require nd cnd explained section vii belonging discrete fine grid 
design process seeks maximize equivalent maximizing design rate code 
typically done linear program 
similar process design fixed 
accurate modelling message distributions provide accurate model rightbound messages mentioned section vii 
focus simplicity regular ldpc codes 
observe computation rightbound message involves summation leftbound messages sum typically approximated gaussian random variable sum initial message added 
binary ldpc codes transmission awgn channel results initial message gaussian distributed assuming zero codeword transmitted 
rightbound messages closely approximated gaussian random variable 
coset gf ldpc codes initial message approximated gaussian random variable illustrated lemma lemma consider initial message produced variable node zero codeword assumption llr representation 
assume transmission awgn channel noise variance mapping 
coset symbol variable node initial message noise produced channel dimensional vectors dependent components proof lemma straightforward observation received channel output analysis assume random coset symbol uniformly distributed gf 
random variables values determined mapping noise variance distribution channel noise determined distribution initial messages determined fig 
presents empirical distribution llr messages stages decoding process observed simulations 
code coset gf ldpc 
llr messages case dimensional 
distribution initial messages fig 
seen mixture dimensional gaussian curves predicted lemma 
leftbound messages iteration shown fig 

model distribution gaussian resembles spike distribution gaussian random variable situation similar binary ldpc 
fig 
presents sum leftbound messages computed process evaluating 
predicted sum approximated gaussian random variable 
rightbound messages iteration fig 

quantification quality approximation scope discussion 
approximated understood heuristic sense context suitability design exit charts 
discussion model distribution rightbound messages sum random vectors 
distributed initial messages second intermediate sum leftbound messages modelled gaussian intermediate value second random variable symmetric permutation invariant 
may seen fact leftbound messages symmetric permutation invariant theorems lemmas appendix iii appendix iv 
theorem characterized single parameter 
summarizing approximate distribution rightbound messages determined parameters determine distribution initial message determines distribution intermediate value 
computation exit charts method second method designing exit charts differs section vii modelling initial rightbound message distributions discussion section vii 
continue model leftbound messages gaussian 
value define jr fixed parameters manner analogous discussed section vii 
jr equals applied rightbound distribution corresponding 
exit chart fixed 
remaining parameter determines rightbound distribution defined computation jr discussed appendix viii 
method compute vnd cnd curves 
vnd curve 
left degree evaluate nd ia defined manner analogous nd ia section vii approximation nd ia jr ia cnd curve 
cnd ia defined manner analogous cnd ia section vii 
parameters conjunction ia charac distribution rightbound messages input check nodes 
computation cnd ia done empirically elaborated appendix viii 
edge distribution pair evaluate nd ia cnd ia computed nd ia cnd ia expressions similar 
note jr needs computed choice 
cnd needs computed value needs computed choice note irregular codes number leftbound variables summed random variable distributed distribution random variable resembles gaussian mixture gaussian random variable 
continue model gaussian example set binary codes 
see appendix viii accurate discussion matter 
initial messages leftbound messages sum leftbound messages prior addition initial message 
fig 

empirical distributions messages ternary coset ldpc code rightbound messages 
design edge distributions may performed linear programming manner section vii 
details provided section vii 
design examples designed codes spectral efficiencies bits hz bits dimension bits hz bits dimension awgn channel 
constructions method section vii compute exit charts 
matlab source code provided 
code bits hz set alphabet size 
nonuniformly spaced signal constellation discussion section iii 
constellation obtained applying method variation method suggested sun van 
unique points 
xq computed pr xi xi pr pr xq 
signal constellation obtained scaling result average energy 
mapping code alphabet elements listed ascending order representation gf elements binary numbers 
note simulations indicate different mappings typically render performance 
fixed iteratively applied linear programming obtain fixing obtain better 
require nd cnd sections vii vii enforced stringent condition designing 
required nd cnd equals equals zero 
similarly designing required cnd nd linear programming iterations obtained edge distributions 
code rate gf symbols channel equal bits channel spectral efficiency bits hz 
interestingly code right irregular typical binary ldpc codes 
fig 
presents exit chart code computed method 
note cnd curve fig 
ia 
discussed appendix viii 
simulation results indicate successful decoding snr db 
block length symbols decoding typically converged approximately iterations 
symbol error rate simulations approximately unconstrained shannon limit restricted signal constellation rate db gap limit db 
result shaping gap bits hz approximately db 
obtain interesting insight figures considering equiprobable signalling shannon limit constellation defined equiprobable signalling capacity introduced section 
bits hz limit equals db 
equiprobable signalling shannon limit best hope design method edge distributions code 
gap code threshold limit just db indicating effectiveness exit chart design method 
equiprobable signalling shannon limit pam constellation bits hz db 
gap limit discussed limit constellation db 
shaping gain obtained nonuniform signal constellation 
code bits hz set alphabet size 
method construct vnd cnd vnd cnd vnd curve cnd curve fig 

exit chart computed method code spectral efficiency bits hz snr db 
nonuniformly spaced signal constellation 
mapping signal constellation 
fixed applied iteration linear programming obtain 
code rate gf symbols channel equal bits channel spectral efficiency bits hz 
fig 
presents exit charts code methods 
simulation results indicate successful decoding snr db awgn channel 
block length symbols decoding typically converged approximately iterations 
symbol error rate simulations exactly zero 
applied approximation density evolution monte carlo simulations mentioned section vi obtained similar results 
gap code threshold unconstrained shannon limit bits hz db db 
result shaping gap bits hz db 
equiprobable signalling shannon limit signal constellation bits hz db 
gap code threshold limit db 
viii 
comparison bandwidth efficient coding schemes simulation results section vii indicate coset gf ldpc codes remarkable performance bandwidth efficient channels 
section compare performance multilevel coding binary ldpc component codes turbo tcm 
vnd cnd vnd cnd vnd curve cnd curve exit chart computed method snr db 
fig 

exit charts code spectral efficiency bits hz 
comparison multilevel coding mlc vnd cnd vnd cnd vnd curve cnd curve exit chart computed method snr hou simulations mlc awgn channel spectral efficiency bits hz equal bit dimension pam constellation 
equiprobable signalling shannon limit pam rate db snr 
best results obtained multistage decoding msd 
block length symbols best code capable transmission db shannon limit average ber composed binary ldpc component codes maximum left degrees 
designed edge distributions coset gf ldpc codes spectral efficiency signal constellation ber 
code edge distributions 
simulations block length indicate code capable transmission db shannon limit simulations substantial advantage mlc ldpc code capable transmission db shannon limit 
code obtained superior performance price increased decoding complexity comparison mlc code 
designed second code lower decoding complexity order compare schemes complexity restricted 
code edge distributions 
simulation results indicate code capable reliable transmission db shannon limit 
code maximum left degree lower mlc code 
consequently lower level connectivity tanner graph implying slightly better performance achieved comparable decoding complexity 
precise comparison decoding complexities codes account entire edge distributions just section assume equiprobable signalling refer shannon limit 
db 
maximum left degrees number decoding iterations 
comparison scope 
hou experimented large block length symbols 
best code capable transmission db shannon limit 
slightly smaller block length symbols discussed code capable transmission db shannon limit simulations slightly inferior performance 
may attributed smaller block length availability density evolution design binary mlc component ldpc codes large block lengths 
hou obtained remarkable performance large block lengths price increased decoding complexity maximum left degrees component codes 
argued increasing decoding complexity produce improved performance mentioned block length believe true increasing maximum left degree result increase tanner graph connectivity 
short block lengths dramatically increase number cycles graph reducing performance 
summarizing simulations indicate coset gf ldpc advantage mlc ldpc codes short block lengths terms gap shannon limit 
result assumes restriction decoding complexity 
simulations indicate decoding complexity restricted schemes admit comparable performance 
case research required order provide accurate comparison schemes 
comparison turbo trellis coded modulation turbo tcm robertson rz experimented turbo tcm spectral efficiencies block lengths 
highest spectral efficiency experimented bits hz 
qam constellation best results achieved block length qam symbols 
obtained ber snr db 
equiprobable signalling shannon limit bits hz db result approximately db shannon limit 
experimented pam constellation block length pam symbols dimensional equivalents dimensional qam qam symbols 
code edge distributions 
simulation results indicate symbol error rate snr db simulations 
result db shannon limit exceeds result db 
suggestions research ix 
nonuniform labels 
labels gf ldpc codes defined section iii randomly selected gf uniform probability 
davey mackay gf ldpc codes binary channels suggested selecting differently 
interesting investigate approach possibly approaches selection labels applied coset gf ldpc codes nonbinary channels 
density evolution 
section vi discussed difficulty efficiently computing density evolution nonbinary codes 
assumption discussion densities represented grid form assuming llr vector representation requiring amount memory order efficient approach experiment forms quantization tailored density 
tried applying lloyd max algorithm design quantizers density 
computation algorithm coupled actual application quantizer computationally complex 
alternative approach gaussian approximation described section vi design effective quantizers 
surrogates distributions 
functional ex denoting message binary ldpc decoder lower bound approximate asymptotic performance binary ldpc codes 
interesting find similar scalar functional bound performance coset gf ldpc codes 
possibility experiment function defined appendix vi 
comparison ary erasure channel 
channel output symbol equal input probability erasure probability 
analysis luby ldpc codes binary erasure channels immediately applicable gf ldpc codes channels 
may possible gain insight coset gf ldpc codes analysis 
better mappings 
mapping function section vii designed concept developed heuristically 
research may uncover better mapping methods 
additional channels 
development section vii focuses awgn channels 
interesting extend development additional types channel 
additional applications 
coset gf ldpc codes transmission binary dirty channel 
applying appropriately designed quantization mapping discussed section iii binary code produced codewords empirical distribution approximately bernoulli 
applications bandwidth efficient transmission similarly profit codewords nonuniform empirical distribution 
coset ldpc codes nonbinary ldpc ensembles called bqc ldpc mqc ldpc considered coset gf ldpc :10.1.1.96.1683
random coset analysis defined section applies codes 
similarly zero codeword assumption lemma symmetry message distributions definition theorem apply codes 
mqc ldpc evaluated modulo arithmetic gf 
bqc ldpc decoders scalar messages symmetry coincides standard binary definition 
channel equivalence defined section applies mqc ldpc codes bqc ldpc 
concluding remarks coset gf ldpc codes natural extension binary ldpc codes nonbinary channels 
main contribution generalization analysis developed richardson chung brink binary ldpc codes coset gf ldpc codes 
random coset analysis helps overcome absence output symmetry 
generalized zero codeword assumption symmetry property channel equivalence 
random selection nonzero elements parity check matrix labels induces permutation invariance messages 
density evolution realizable permutation invariance enables analysis stability property approximation exit charts 
analysis gf ldpc codes interesting decoding complexity prohibitive 
richardson urbanke suggested multidimensional dft 
coupled efficient recursive algorithm computation dft dramatically reduces decoding complexity coset gf ldpc attractive option 
focus decoding problem noteworthy done richardson urbanke efficient encoding binary ldpc codes immediately applicable coset gf ldpc codes 
simulation purposes pleasing side effect generalization zero codeword assumption encoder needs implemented 
random coset setting simulations may performed zero codeword underlying ldpc code 
quantization non uniform spaced mapping produces substantial shaping gain 
coupled generalization exit charts enabled obtain codes db shannon limit spectral efficiency bits hz 
best knowledge best codes spectral efficiency 
research lines section ix may possibly narrow gap shannon limit 
lemma gf gf appendix properties operators proof identities proved examining kth index side equation 
third identity obtained second observing fourth identity straightforward 
lemma gf gf 
tanner graph 
fig 

neighborhood graph cycles neighborhood graph 
virtual neighbor hood graph denotes result applying operation elements proof identity obtained lemma identity 
second identity straightforward 
appendix ii neighborhood graphs cycles fig 
gives example case neighborhood graph contains cycles 
neighborhood graph corresponds tanner graph fig 

neighborhood graph contains cycles app values computed belief propagation decoder correspond virtual neighborhood graph 
graph nodes contained cycles duplicated artificially create tree structure 
example fig 
variable node produced duplicating 
app values computed virtual code implied graph 
virtual sense false assumptions regarding channel model transmitted code 
fig 
channel model falsely assumes nodes correspond different channel observations 
preliminary lemmas appendix iii proofs section proofs section focus properties message produced iteration coset gf ldpc belief propagation node assuming underlying code fixed message function see frey elaborate discussion 
channel output coset vector denote 
may rightbound message variable node leftbound message variable node 
cases denote variable node involved lemma 
lemma codeword channel output arbitrary coset vector 
ci value codeword position ci left hand side evaluated componentwise gf 
right hand side notation 
proof mk satisfies mk pr transmitted received expression estimate true app value 
code decoder ldpc code code defined parity checks neighborhood graph spanned defined section iv appendix ii 
random variable representing transmitted codeword prior addition coset vector value position vectors constructed including values nodes contained neighborhood graph node define similarly 
neighborhood graph contains cycles virtual neighborhood graph defined appendix ii 
variable node duplicate copies graph elements true duplicate entries decoder assumes codewords equally pr received transmitted mk pr received transmitted equivalently obtain mk pr pr word having constructed true codeword satisfies parity checks neighborhood graph codeword changing variables set condition ci mk ci pr mk ci pr ci mk examine denotes rightbound leftbound message variable node iteration belief propagation 
random variables representing coset vector channel output vectors respectively 
lemma gf value pr ci defined sense codewords satisfy probability vectors pr transmitted pr transmitted proof consider transmission arbitrary coset vector compared transmission coset vector cases transmitted signal channel probability obtaining particular identical 
word satisfies ci 
linear lemma appendix iii implies obtain ci pr transmitted pr transmitted uniformly distributed averaging possible values completes proof 
lemma useful section vii 
lemma gf pr ci pr ci proof proof follows direct lines lemma 
zero codeword codeword satisfies ci pr ci pr transmitted pr ci pr transmitted ci pr transmitted pr transmitted averaging possible values completes proof 
proof lemma codeword 
denote event error message produced variable node iteration assuming channel output coset vector true codeword recalling decision rule section iv decoder decides argmax mk mk defined appendix iii 
lemma appendix iii obtain maximum mk obtained maximum mk obtained ci 
cases word transmitted channel probability obtaining channel output 
obtain averaging instances obtain proof lemma assume symmetric prove 
arbitrary llr vector llr defined respectively 
wi pr pr xi xi pr pr relied lemmas appendix 
proves 
pr pr assume prove symmetric 
defined 
pr pr pr equality obtained fact lemma appendix added pr exactly times 
continue pr pr wi pr pr wi pr pr equality results recalling llr vectors 
obtain symmetric desired 
proof theorem variable node associated message produced defined lemma appendix iii 
defined proof lemma 
notation may equivalently denote message produced 
message fact function channel observations coset vector elements contained neighborhood graph spanning corollary follows immediately proof lemma 
corollary codeword defined value codeword position corresponding variable node return random variable corresponding message produced equal 
assume plain likelihood representation messages 
arbitrary probability vector 
assume zero codeword transmitted random space consists random selection random channel transitions 
pr pr block length code note function neighborhood graph spanning function iteration number 
set vectors gf union nonintersecting cosets gf set coset representatives respect vector gf denote unique vectors satisfy 
channel output portion coset vector 
corollary rewrite pr examining pr pr pr pr pr pr pr pr examine pr random space confined random selection coset vector equivalently random selection 
applying corollary assuming 
assumed exists index equivalently 
assume simplicity 
unique index satisfies pr pr pr transmitted received key observation proof tree assumption corresponds ml zl 
pr zl consider general case arbitrary case exactly indices lk satisfying lk arguments pr pr lk transmitted received pr lk transmitted received lk lk recalling proves 
pr sum symmetric variables lemma section vi 
pr pr lemma independent llr vector random variables 
symmetric symmetric 
proof proof relies observation gf llr vectors llr vector gf arbitrary element 
proof lemma pr wi definition component app satisfies pr pr wi pr ai pr bi pr app pr pr pr constant independent dependent selected sum vector components 
app yi yi output equivalent channel probability vector 
sum components 

obtain desired result proof lemma app yi random variable denoting equivalent channel output assume equivalent channel input denoted fig 
zero 
corresponds vector app probabilities computed physical channel output coset vector component invoke theorem obtain probability vector pr pr note theorem requires entire transmitted codeword zero symbol particular discrete channel time 
initial message function single channel output relax requirement considering code contains single symbol 
arbitrary symbol code alphabet 
applying lemma appendix iii single symbol code obtain equivalent channel cyclic symmetric 
proof lemma pr pr pr yi pr consider set random variables defined fig 

input equivalent channel 
coset symbol evaluated gf 
physical channel input physical channel output related channel transition probabilities 
app equals output equivalent channel deterministic function equivalent channel symmetric choice uniformly distributed renders equal equivalent channel capacity 
choice renders uniformly distributed 
show 
log pr pr pr log pr log pr pr log yi pr pr pr log yx denotes physical channel output alphabet yx denotes element index number pr log pr pr log pr pr set probability vectors 
lemma definition probability function pr log definition probability vector yi combining completes proof 
proof theorem pr log yin yi yin pr log yi log yx appendix iv proofs section vi prove theorem rt 
rt message iteration averaged possibilities neighborhood tree tt pr rt pr rt tt pr tt tt tt pr rt tt pr tt equation obtained theorem 
pr rt tt pr rt pr rt tt pr tt rt symmetric desired obtained special case 
proof lt similar 
proof lemma evaluated gf proof identical 
proof lemma pr xi pr pr xi pr xj observe wk wk 
pr wk pr wk pr wk wk pr pr pr wk result having obtained lemma 
proof lemma pr prove lemma probability vector representation 
proof llr vector representation identical 
assume show permutation invariant 
gf randomly selected definition gf arbitrary random variable independent distributed identically identically distributed arbitrary obtain permutation invariant 
assume permutation invariant 
consider uniformly random gf independent equivalently show independent pr pr pr result having obtained definition permutation invariant 
true independent desired 
lemmas involving permutation invariance lemmas appendices iv vi section vi 
lemmas apply probability vector llr representations vectors 
lemma random permutation pe pe 
proof lemma obtained fact operation leaves element unchanged 
lemma symmetric random variable random permutation symmetric 
proof pr gf pr pr derivation fact see lemma appendix see lemma appendix 
pr pr pr combining obtain conclude proof 
pr pr lemma permutation invariant random permutation identically distributed 
proof lemma straightforward definitions 
lemmas discuss permutation invariance context llr representation random variables 
lemma independent permutation invariant llr vector random variables 
permutation invariant 
proof gf arbitrary llr vector 
pr pr pr pr pr pr pr arbitrary implies permutation invariant desired 
pr pr lemma llr vector random variables 
independent random variables uniformly distributed gf independent identically distributed 
proof equalities consider expressions 
identically distributed identically distributed independent independent holds replace identically distributed 
proof similar 
proof theorem lt permutation invariant discussion section vi part theorem proved 
rt rt label randomly selected uniformly gf 
rt random permutation rt lemma permutation invariant 
rt symmetric lemma appendix iv pe rt pe rt lemma appendix iv 
proves part theorem 
permutation invariant construction 
rt random permutation rt 
switching llr representation obtained applying expression 
leftbound messages permutation invariant lemma appendix iv sum di permutation invariant 
lemma appendix iv distribution may equivalently computed replacing instantiation instantiation distribution lt computed density evolution recursively rt 
discussion implies replacing affect density 
remainder part theorem obtained lemmas 
non degeneracy channels mappings mapping non degenerate exists integer number elements satisfying multiple quantization mapping mapping replaced simpler quantization alphabet size equally attain desired input distribution 
nonuniform spaced mapping number elements mapped requirement typically observed 
channel non degenerate exist values pr pr belonging channel output alphabet 
proof mapping channel non degenerate having defined follows direct lines provided dx appendix :10.1.1.96.1683
appendix proof part theorem section prove necessity condition theorem 
proof generalization proof provided richardson 
outline proof provided section vi 
channel defining channel cyclic symmetric channel examining properties 
development subsection general put context proof subsection 
definition pr denote transition probabilities cyclic symmetric channel see definition 
corresponding channel defined input alphabet 
output alphabet output alphabet original cyclic symmetric channel 
transition probabilities pr defined follows probability vectors pr defined definition 
pr yi max yq yi max yq obtained ordering elements sequence yq descending order selecting second largest 
means maximum sequence elements obtained equal maximum 
output alphabet elements define pr defined lemma discusses channel pr lemma channel satisfies properties transition probability function valid 
original cyclic symmetric channel represented degraded version channel 
proof represented concatenation channel channel input channel output 
easy verify pr definition 
rest proof follows observation vectors recall pr pr 
pr pr pr pr pr define transition probability function pr pr easy verify concatenation channel produces transition probabilities pr original cyclic symmetric channel 
channel longer cyclic symmetric 
apply belief propagation decoder outputs channel lemma apply initial messages identical channel outputs 
lemma summarizes important properties initial message distribution zero codeword assumption 
lemma denote message distribution initial iteration belief propagation decoding channel assumption zero symbol transmitted 
written pe probability function satisfies pe pe zi distribution takes vector vector yi probability confused defined 
proof probability vector define pe pr channel output pr channel output 
pe examine pe 
denote channel output 
definition zi pr normalization constant dependent selected sum vector elements zq 
examine possibilities assume maximum yq obtained 
index second largest element yq obtained 
pr pr assume maximum obtained imax 
easy observe 
assume maximum yq obtained 
imax index obtains maximum 
pr pr imax cases exists index zi required 
examine 
assuming symbol transmitted probability obtaining output symbol set zero 
input symbol capable producing output probability greater zero input 
decoder produces initial message probability required 
consider transmission original cyclic symmetric channel 
pe uncoded map probability error 
pe corresponding probability channel 
erasure decomposition lemma similarly defined pe pe equal erasure channel erasure probability 
lemma examine channel 
lemma inequalities hold proof pe pe channel symmetric cyclic symmetric pr pr pr pr 
decoding error independent transmitted symbol may assume symbol 
consider channel output map decoder decides symbol maximum app value 
symbol exists random decision maximizing symbols 
denote vector app values corresponding lemma probability distributed pe 
recalling messages distributed pe error probability 
pe 
lemma cyclic symmetric channel degraded version channel 
pe pe 
prove pe 
assume symbol transmitted 
recall examining decoder performance cyclic symmetric channel channel 
lemma vector app values map decision identical channel output 
pe defined definition 
show inequality holds pr pe pr maximum yq obtained pr pr 
case decoder correctly decides 
pe satisfied 
case pr pr 
pe obtain trivially 
pe pe pr pr remainder proof complete proof show probability error iteration small 
rt denote rightbound messages iteration 
lemma manner similar rt may equivalently obtained initial message cyclic symmetric channel 
replace channel corresponding channel obtain lower bound probability error subsequent iterations 
rt denote respective messages replacement 
remainder proof switch log likelihood representation messages 
denote llr vector representation rt 
adopting notation qn denote distribution denotes distribution initial message true cyclic symmetric channel 
llr messages lemma pe satisfies pe pe wi iterations density evolution density manner similar equivalent binary case qn defined theorem 
correspond random permutations pe resulting effect randomly selected labels respectively denotes convolution 
denote distribution random label edge sent 
lemma appendix iv obtain random permutation distributed lemma appendix iv probability error assuming zero symbol selected qn 
letting pe qn denote probability error pe qn pe defining probability function pe qn wi recalling pe satisfies probability exists index wi 
random permutation transfer wi index probability 
denote marginal distribution element lemma symmetrically distributed binary sense 
development similarly relying results page obtain lim log log exp limit valid need see exp neighborhood zero appears conditions theorem 
need show see 
proven shortly 
examine exp 
lemma exp proof recalling random permutation initial message observe exp exp exp examine exp 
recalling denotes random channel output denotes random coset symbol exp pr pr pr pr pr pr combining definition obtain 
pr pr ready show 
recall discussion section vi 
jensen inequality obtain log exp log exp proceed proof 
log lim log log remainder proof follows direct lines provided primarily completeness 
combining obtain arbitrary large pe qn appropriately selecting obtain large pe qn denotes function dependent cx constant exists constant pe qn return examine probabilities error true channel prior replacement messages channel 
true channel degraded relation channel pe qn 
lemma exists satisfied 
lemma asserts 
pe qn contradicts theorem 
obtain desired result appendix vi proof part theorem consequently section prove sufficiency condition theorem 
proof generalization proof provided binary coset gf ldpc 
outline proof provided section vi 
note proof denote functions exists constant dependent iteration number interested pe rt defined rt rightbound message defined section vi 
analyzing differently defined rt 
probability vector random variable 
operator defined follows xi random permutation definition random permutation definition equivalent xk 
letting llr obtain ee note equation coincides bhattacharya parameter equation 
lemma appendix obtain initial message defined section vi 
develop convenient expression 
lemma denote probability vector symmetric random variable 
ef gf xixj proof xi xi outer expectation sets inner expectation conditioned particular set focus inner expectation 
xi xi pr pr equality obtained way 
fact lemma appendix 
xi xk invariant permutation elements 
constant vectors set rewrite xi plugging completes proof 
examine function 
lemma probability vector 
proof obtained trivially observing elements sum nonnegative 
prove xi xj xi xj xi xi xi xi applying jensen inequality obtain xi probability vector define max xq 
lemma relates functions 
lemma proof imax index achieves maximum xq 
consider 
particular element xixj assume loss generality imax 
definition xi imax xk 
definition xj 
xixj 
gf definition exist imax xi 
combining inequalities proves lemma 
state main lemma proof xi lemma set probability vectors 
denotes gf convolution defined 
proof examining case 
denote simplify analysis assume max aq 
may assume apply shift imax move maximum zero 
operation affect 
easy verify imax imax operation affect 
similarly assume max bq 
definition examine elements sum 
examine case 
ajb bj ajb bj ajb bj aj bj aj bj result case similarly obtained 
assume element participate sum 
inserting obtain aib bi ajb bj ai bi aj bj equality having obtained lemma 
easily obtain desired result case observing remainder proof obtained induction lemma 
lemma obtain results lemma rt satisfies rt rt rt proof consider rt 
rt obtained applying random permutation obtain lemma fact invariant permutation rt ef rt ef rt rt 
may examine rt 
similarly examine lt lt assume right degree check node lt distributed rt 
lemma 
lt ef ef ef ef averaging possible values obtain rt rt lt rt rt rt rt rt rt turn examine rt 
assume variable node degree rt produced deg 
applying rt rt rt deg di distributed lt 
theorem di permutation invariant lemma appendix iv distributed identically random permutations di obtain rt applying reordering elements obtain rt deg deg lt deg lt deg second equality obtained 
equality obtained 
averaging values deg obtain rt lt function definition polynomial non negative coefficients 
nondecreasing range 
obtain 
lemma examines convergence zero rt 
lemma exists rt iteration limt rt 
proof taylor expansion function rt rt rt rt rt equality obtained definition function 
plugging obtain rt rt rt taylor expansion obtain rt rt rt rt rt rt rt exists rt rt rt rt positive constant smaller 
induction holds 
rt definition sequence rt converges zero 
lemma links operator desired pe defined 
lemma symmetric probability vector random variable 
pe proof showing pe 
pe pe pr pe pr pr result obtained way 
outer sum sets im denote indices achieve max xq 
pe im 
symmetry obtain pe im xi im xi pr lemma appendix 
continue development pe xi xmax pr im xmax pr pr result pe obtained fact constant vectors lemmas jensen inequality ef qe pe proves pe 
second inequality observe xi pe pr xi pr xi pr inequality obtained markov inequality 
combining obtain desired result pe 
consider value lemma 
setting lemma pe rt rt rt converges zero 
applying lemma implies pe rt converges zero completes proof part theorem 
appendix vii proof theorem observing gaussian symmetric arbitrary llr vector log log exp det log exp det wi log assume symmetric permutation invariant prove 
permutation invariant lemma mi mj 
denote 
mq 
proving 
prove contradiction assume 
consider marginal distribution wi gaussian 
mi pdf wi satisfies fi fi 
lemma wi symmetric binary sense 
fi fi 
combining equations yields fi 
wi deterministic zero variance leads contradicts theorem condition nonsingular 
xi show conditions uniquely define 
symmetric assume symmetric matrices satisfied substituting respectively 
show subtracting equation obtain convenience li denote matrix corresponding linear transformation ing twice respect obtain dli 
may rewritten dli observe arbitrary 
simple algebraic lead dm dm dm letting obtain denotes euclidean norm 

consider vectors wish show vectors linearly independent 
mi mi mk 
recall section ii evaluated gf 
previous discussion mi 

put vectors matrix defined mk matrix mk matrix 

vi easy verify inverse nonsingular columns vectors linearly independent 
linearly independent vectors satisfy 
obtain desired 
consider matrix show obtain implied 
purpose show choice satisfies 
wk wk treat sums separately wj wk qm wk wj wk wk wk wk wi wk wk wi wk set indices 
recalling wk wi wi wk wk wi wk wk mq wi wk wi wk wi wk wi turn second sum 
development similar sum obtain sum wk wk wi wj wi combining obtain wi wi wk mq wi qm satisfies desired 
completes proof 
wk wi wi assume prove symmetric permutation invariant 
clear reordering elements effect distribution permutation invariant 
prove symmetry observe development relies remains valid 
proof lemma lemma appendix iii appendix viii proofs section vii pr pr log pr logq pr pr pr pr second summation equations llr vectors nonzero probability 
lemma condition tree assumption satisfied 
theorem conditional distribution symmetric recalling lemma appendix iii 
pr logq pr logq pr logq wk pr wj pr wj wk wj wk wj wk third summation obtain changing variables evaluated gf pr log changing variables second summation obtain sum independent obtain pr log wj pr logq wj follows fact definition see section ii 
permutation invariance assumption exit method section discuss fine point assumption permutation invariance development exit charts method section vii 
strictly speaking initial message rightbound messages permutation invariant 
show may shift attention defined theorem symmetric permutation invariant 
show evaluated equal respectively 
straightforward observe right hand side invariant fixed permutation elements random vector random permutation effect value 
discussion appendix iv random permutations respectively 
obtained desired result 
proceed show derivation approximation nd section vii justified replace discussion appendix iv may obtained replacing instantiation instantiation obtained expressions obtained discussion derivation approximation nd see appendix vii remains justified 
discussion appendix iv distribution lt obtained rt distribution rt required computation 
approximation cnd section vii verified empirically require justification 
gaussian messages initial messages awgn channel gaussian llr vector random variable defined theorem 
pr transition probabilities cyclic symmetric channel defined see lemma section 
show channel effect dimensional awgn channel 
examining pr 
pr pr pr channel output conditioned transmission distributed operation defined linear 
gaussian mean defined covariance matrix denote 
cov wk wl cov wk wl define convenience recall section ii evaluated gf 
evaluating easily observed 
implies cyclic symmetric channel defined distributed dimensional awgn channel noise distributed input alphabet noise input alphabet functions 
definition channel cyclic symmetric llr vector initial messages ldpc decoding satisfy channel output 
sequel consider channels input alphabet independent 
purpose consider channel output obtained result equivalent awgn channel input alphabet noise distributed 
letting obtain defined matrix substituted multiplication fool initial messages ldpc decoding summarize results lemma 
lemma consider transmission dimensional awgn channel assume zero mean noise covariance matrix defined matrix substituted assume mapping code alphabet defined llr representation defined 
denote dimensional channel output denote llr vector initial message 
random variable denote initial message conditioned zero codeword assumption 
gaussian distributed satisfies properties computation examine lines analogous development brink binary codes 
appendix viii showed gaussian distributed theorem characterized may equivalently obtained initial message zero codeword assumption dimensional awgn channel characterized parameter 
capacity channel 
parameter infers ordering awgn channels channels greater degraded respect channels lower monotonically increasing defined 
approaches zero 
similarly lim lim compute need evaluate gaussian random variable defined theorem 
evaluate values fine grid range selected applied polynomial best fit obtain approximation note operation performed resulting polynomial approximations codes 
equivalent evaluated numerically computing dimensional integral expectation defined 
case distribution multidimensional difficult evaluate 
evaluate right hand side empirically generating random samples theorem 
computation jr computation jr performed lines analogous computation described appendix viii 
compute jr fixed values values fine grid range 
apply polynomial best fit obtain approximation jr approximation 
compute jr point discussed grid evaluate right hand side replacing rightbound llr vector message empirically 
samples obtained adding samples initial messages intermediate values 
samples initial messages produced lemma coset symbol randomly selected uniform probability 
samples intermediate values produced theorem 
note satisfies jr greater zero 
results fact distribution rightbound message corresponding equal initial message 
letting defined range 
computation cnd ia development begins lines appendices viii viii 
compute cnd ia fixed values values ia fine grid 
apply polynomial best fit obtain approximation range 
compute cnd ia point discussed grid evaluate right hand side empirically 
applying ia obtain value characterizes llr vector rightbound message distribution 
produce samples rightbound messages described appendix viii 
produce samples labels gf required compute leftbound samples label samples generated uniform random selection 
samples empirically evaluate right hand side replacing obtain cnd ia 
note computing effect final result 
cnd ia defined section vii discussed appendix viii defined 
interval exit chart analysis section vii 
acknowledgment authors anonymous reviewers associate editor comments help 
application ldpc codes arbitrary discrete memoryless channels ieee trans :10.1.1.96.1683
inform 
theory vol pp 
march 
iterative decoding ldpc codes arbitrary discrete memoryless channels st annual allerton conf 
commun cont 
comp monticello il october 
caire shamai superposition coding side information channels submitted ieee trans 
inform 
theory 
matlab source code exit charts www eng tau ac il publications htm blahut theory practice error control codes addison wesley publishing 
miller bounds performance belief propagation decoding ieee trans 
inform 
theory vol pp 
january 
caire biglieri bit interleaved coded modulation ieee trans 
inform 
theory vol pp 
may 

chung forney richardson urbanke design low density parity check codes db shannon limit ieee commun 
lett vol 
pp 
february 

chung richardson urbanke analysis sum product decoding low density parity check codes gaussian approximation vol 
pp 
february 
davey mackay low density parity check codes gf ieee comm 
letters vol 
pp 
june 
multidimensional digital signal processing prentice hall 
elias coding noisy channels ire conv 
rec vol 
pp 
march 
forney jr modulation coding linear gaussian channels ieee trans 
inform 
theory vol 
pp 
october 
sommer turbo codes non uniform qam constellations 
proc 
ieee icc vol 
pp 

helsinki finland june 
frey koetter vardy signal space characterization iterative decoding ieee trans 
inform 
theory vol 
pp 
february 
gallager low density parity check codes press cambridge massachusetts 
gallager information theory reliable communication john wiley sons 
hou siegel pfister capacity approaching bandwidth efficient coded modulation schemes low density parity check codes ieee trans 
inform 
theory vol 
pp 
september 
kav ci ma mitzenmacher binary intersymbol interference channels gallager codes density evolution code performance bounds ieee trans 
inform 
theory vol 
pp 
july graph codes iterative decoding ph dissertation available etd caltech edu 
kschischang frey 
loeliger factor graphs sum product algorithm ieee trans 
inform 
theory vol 
pp 
february 
li fair analysis nonbinary ldpc codes gaussian approximation proceedings ieee international symposium information theory yokohama japan pp 

luby mitzenmacher shokrollahi spielman efficient erasure correcting codes ieee trans 
inform 
theory vol 
pp 

luby mitzenmacher shokrollahi spielman improved low density parity check codes irregular graphs ieee trans 
inform 
theory vol 
pp 

mceliece effective nonstandard channels ieee information theory society newsletter vol 
december pp 

mackay sparse low density parity check codes channels cross talk proc 
paris france march april richardson urbanke efficient encoding low density parity check codes ieee trans 
inform 
theory vol 
pp 
february 
richardson urbanke capacity low density parity check codes message passing decoding ieee trans 
inform 
theory vol 
pp 
february 
richardson shokrollahi urbanke design capacity approaching irregular low density parity check codes ieee trans 
inform 
theory vol 
pp 
february 
robertson rz bandwidth efficient turbo trellis coded modulation punctured component codes ieee 
sel 
areas comm vol 
pp 
february 
sharon exit functions gaussian channel proc 
th annu 
allerton conf 
communication control computers allerton il oct pp 

shwartz weiss large deviations performance analysis 
london chapman hall 

sun van approaching capacity equiprobable signaling gaussian channel ieee trans 
inform 
theory vol 
pp 
september 
tanner recursive approach low complexity codes ieee trans 
inform 
theory vol 
pp 
september 
brink kramer design low density parity check codes modulation detection ieee trans 
comm vol pp 
april 
brink convergence behavior iteratively decoded parallel concatenated codes ieee trans 
comm vol pp 
october 
ma kav ci iteratively decodable codes bridging shaping gap communications channels asilomar conference signals systems computers pacific grove ca november 
wang kulkarni poor density evolution asymmetric channels submitted ieee trans 
inform 
theory september 
log domain decoding ldpc codes gf proc 
ieee intern 
conf 
commun paris france june pp 


