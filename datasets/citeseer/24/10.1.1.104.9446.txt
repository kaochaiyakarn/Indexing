efficient top query evaluation probabilistic data extended version tr christopher dan suciu university washington dept computer science engineering mail suciu cs washington edu modern enterprise applications forced deal unreliable inconsistent imprecise information 
probabilistic databases model data naturally sql query evaluation probabilistic databases difficult previous approaches restricted sql queries computed approximate probabilities scale shown precise query evaluation theoretically hard 
describe novel approach computes ranks efficiently top answers sql query probabilistic database 
restriction top answers natural imprecisions data lead large number answers low quality users interested answers highest probabilities 
idea algorithm run parallel monte carlo simulations candidate answer approximate probability extent needed compute correctly top answers 
algorithms certain sense provably optimal scales large databases measured running times seconds complex sql queries large database tuples probabilistic 
additional contributions include optimization techniques simple data model probabilistic data achieves completeness sql views 
number applications today need manage data imprecise 
example imprecisions arise fuzzy object matching multiple databases data extracted automatically unstructured text automatic schema alignments sensor data activity recognition data 
cases possible eliminate imprecisions completely usually costly manual removal ambiguous matches data cleaning cases complete removal possible human activity recognition 
modern enterprise applications forced deal unreliable imprecise information tolerate imprecisions especially applications search business intelligence 
system tolerates imprecisions needs able rank query results degree uncertainty 
goal develop techniques manage automatically imprecisions data rank query answers 
purpose probabilistic database 
simplistic definition tuple belongs database probability value 
tuple probabilistic event tuples may correlated events 
major difficulty probabilistic databases consist evaluating queries correctly efficiently 
suciu shown sql queries complete data complexity rules efficient algorithms exact probabilities 
approach combine top style queries approximate algorithms computing probabilities 
managing imprecisions data meaningful information lies exact values output probabilities ranking queries answers 
shift focus computing asin title customer rating 
asin director asin actor mid genre year mid aid aid asin mid 
schema fragment imdb amazon database fuzzy match table output probabilities finding ordering top answers 
restricting just answers justified context dealing imprecisions data tuples query answer low quality probability users interested seeing highly ranked answers 
approach develop novel query evaluation algorithm computing top answers provable theoretical guarantees 
problem address 
sql query number return user highest ranked answers sorted output probabilities 
compute probabilities luby karp monte carlo simulation algorithm mc compute approximation desired precision 
naive application mc run sufficiently large number steps query answer compute probability high precision sort answers return top contrast describe algorithm called ms concentrates simulation steps top answers simulates sufficient number steps ensure top prove ms theoretically optimal strong sense factor non deterministic optimal algorithm magically knows steps simulate answer deterministic algorithm better 
variations ms computing set top answers computing sorting set top answers time algorithm outputs answers order 

stopped time 
experiments show ms exploits gracefully running times essentially linear ms dramatically efficient naive application mc 
additional contributions 
complement ms optimizations 
pushes probabilistic processing query engine safe example independent probabilities multiplied disjoint probabilities added done sql engine 
give precise conditions computations pushed engine 
optimization prunes number candidate answers need simulated computing lower upper bound probability 
optimizations provably correct preserve probabilistic semantics queries 
second additional contribution show adding sql views probabilistic tables obtains representation formalism complete possible worlds semantics 
formalism database consists probabilistic tables similar barbara plus sql views probabilistic deterministic tables 
prerequisite representation system query processor evaluate efficiently complex sql queries probabilistic databases queries arise inevitably views expanded user queries complete representation system direct application query evaluation method described 
challenges illustrate challenges faced query evaluation probabilistic databases application integrates internet movie database imdb com movie reviews amazon com tuples integrated database 
simplified schema shown fig 
running example 
amazon products dvds case identified unique amazon standard identification number asin dvd object subobjects customer reviews actors director imdb schema self explanatory 
value integrating data sources lies combining detailed movie data imdb customers ratings 
approximation algorithms substituted 
asin mid twelve monkeys monkeys twelve monkeys monk twelve monkeys love love story 
fuzzy matches table stores asin mid values included review tile movie title readability 
imprecisions probabilities source imprecision integrating sources movie titles don match twelve monkeys monkeys done 
done 
problem detecting representations denote object intensively studied referred deduplication record linkage merge purge :10.1.1.19.9539
perfect object matching impossible possible costly requires specialized domain specific algorithms 
approach rely existing domain independent methods change way outputs 
currently fuzzy match methods thresholded similarity function approach relies threshold value classify objects matches non matches 
compromise lead false positives threshold value low false negatives high 
contrast approach system retains similarity scores handles probabilistic data 
computed similarity score pair movie title review title comparing sets grams resulted number interpret confidence score stored table called fig 
shows simplified fragment consisting tuples 

tuple contains asin value review amazon mid value movie imdb 
amazon review asin refers movie title monkeys movies imdb database twelve monkeys twelve monkeys monk 
tuples correct exclusive disjoint probabilities respectively 
note necessary condition tuples exclusive events normalized similarity scores enforce condition 
similarly movie review monkey love refer imdb movies probabilities respectively 
assume matches review independent matches second review 
summarizes mapped fuzzy object matches probabilities 
discuss briefly types imprecisions sec 

possible worlds semantics table representation probabilistic database superscript indicates representation contains explicit probabilities 
meaning probability distribution possible instances possible worlds table asin mid 
possible instance consists subset tuples contain tuples asin probability computed natural fashion 
example set tuples possible world probability probability 
example possible worlds obtained 
note asin key key need store multiple possible matches asin 
sql queries consider sql queries standard syntax modified semantics 
illustrate consider query find directors produced highly rated comedy low rated drama years apart sql expression fig 

evaluated probabilistic database answers confidence score show fig 
lists answers highest probabilities total answers 
semantics probabilities follows 
probability answer woody allen sum probabilities possible worlds woody allen answer query 
probability score represents confidence woody allen answer query imprecisions data 
input probabilities computed heuristics little semantics actual values probabilities ranking results meaningful woody allen answer george answer say th ranked answer 
select distinct director ax asin ax asin asin asin ax mid mid mid mid genre comedy genre drama abs year year rating rating 
query retrieving directors produced highly rated comedy low rated drama years apart 
rank director woody allen ralph fred ray george stewart 

top query answers challenges query evaluation poses major challenges 
computing exact output probabilities computationally hard 
data complexity query fig complete shown results meaning algorithm computing probabilities exactly essentially needs iterate possible worlds 
previous probabilistic databases avoided issue ways 
barbara requires sql queries include keys tables disallowing duplicate elimination 
rules query fig 
query include keys tables clause 
included keys select clause director answer listed multiple times pair movies satisfies criterion example directors occurred average times 
impossible rank directors 
lakshmanan computes probability intervals exact probabilities 
luby karp algorithm approximate probabilities arbitrary precision precision controlled 
fact complex query wider approximation intervals strategies conservatively account wide range possible correlations input probabilities 
example combining average different probabilities compute probability single director resulting interval degenerates directors 
method order rank outputs ordering intervals midpoints results low precision 
fuhr uses exponential time algorithm essentially iterates possible worlds support answer 
impractical setting 
considers safe queries query safe 
second challenge number potential answers need compute probabilities large example answers 
low probability exists highly matches movies reviews 
system spends large amounts time computing probabilities precisely users inspecting just 
approach focuses computation top answers highest probabilities 
naive way find top probabilities compute probabilities select top approximate probabilities degree needed guarantee top answers correct ones ranking top answers correct 
running example run approximation algorithm steps say top answers order identify rank run steps remaining answers approximate probabilities needed guarantee top 
turns orders magnitude efficient naive approach 
major challenge don know tuples top know probabilities solution main contribution 
limitations restrict data model probabilities listed explicitly 
example person table salary age attributes values correlated probability distributions model needs enumerate explicitly combinations salary age 
smith smith smith 
allows correlated attributes long joint distribution represented explicitly 
contrast bayesian networks extensions probabilistic relational models allow correlations expressed concisely 
handle continuous attribute values handle case attribute temperature normal distribution mean done 
organization sec 
describes basic probabilistic data model ms algorithm described sections optimizations sec 

extend data model sec 
report experiments sec 
conclude sec 

background probabilistic databases introduce basic probabilistic data model extend sec 

possible worlds fix relational schema consisting relation names 
rm set attributes attr ri key key ri attr ri relation name ri define probabilistic database probability distribution possible worlds definition 
probabilistic database schema pair 
wn set database instances probability distribution wj 
instance wj wj called possible world 
intuition exact state database uncertain possible instances instance probability 
representation course impractical enumerate possible worlds probabilities 
represent probabilistic database modified schema called probabilistic schema contains explicit probabilities superscript 
consists modified relation names 
rp schema ri case deterministic attr attr ri key attr ri 
second case probabilistic impose constraints attribute values real numbers values key ri attributes sum key ri 
define database instance schema represents probabilistic database schema denoted mod 
simplify discussion assume consists single relation name 
am 
bn notation key 
am consider instance table 
note key consists attributes just 
define possible worlds 
wn consists subsets wj attributes form key 
wj define probability wj defined follows 
exists tuple wj unique probability tuple 
tuple sum 
definition 
database instance schema mod probabilistic database schema obtained described 
example simple illustration consider schema fig 

tables 
deterministic asin mid represents possible worlds asin mid 
instance fig 
possible worlds illustrated fig 

restrictions 

asin mid mod wi wi 
illustration example dnf formulas tuples probabilistic database 
tuples possible worlds 
interpret tuple boolean propositional variable possible world truth assignment propositional variables follows ti true ti ti false ti consider dnf formula tuples clearly true worlds false 
define probability sum worlds true 
continuing example expression true possible worlds probability 
queries syntax consider sql queries schema top select agg agg 
group aggregate operators sum count sum min max support avg 
discuss having clause study 
semantics define meaning query probabilistic database 
wn 
intuitively answer query table 
agg agg 





answer form consists tuple group attributes meaning occurs answer possible world tuple aggregate attributes meaning expected values aggregates possible worlds return probability answer 
simple illustration query fig 
instance aggregates group distinct answers shown fig 

define query semantics formally 
standard sql semantics answers possible world wj tuples form values attributes aggregate values 
denote wj predicate wj contains answer form denote wj function returns unique value wj wj true undefined wj false 
recall standard definitions probability predicate conditional expected value function wj true wj true wj wj wj definition 
probabilistic db define wj wj representation define mod 
context top query return tuples highest probabilities queries dnf formulas approach query evaluation compute probabilities certain dnf formulas constructed running modified sql query called expanded query qe representation qe derived replacing select clause removing group clause 
qe select 
rm eq 
evaluate qe database engine instance obtain set answers tuple form 
tm 
tm rp define boolean expression associated 
tm may compute eliminating duplicate tuples multiplying probabilities tuples exclusive case 
partition group attributes 
gn 
group 
gn define dnf boolean expression valiant shown computing probability dnf formula complete general 
group denote tuple independent choice 
prove theorem 
consists tuples 
gn ei ai sum ai ei ai ai ai max ai definition gives query semantics terms possible worlds theorem shows rephrase terms dnf expressions tuples 
example consider query fig 

extended query obtained removing group clause removing distinct replacing select clause select tables 

answer returned qe contains tuple variables defined clause ax 
ax probabilistic tuples added superscript indicate range row returned qe defines boolean formula ax probability algorithm luby karp algorithm computing probability dnf formula ti eq ti disjunct eq 
fix order disjuncts 
tm repeat choose randomly disjunct ti choose randomly truth assignment ti true forall tj false times return axp axp asin byp asin axp mid byp mid axp asin byp asin axp mid byp mid axp byp axp asin byp asin axp mid byp mid group rows directors group ax byp 
byp construct dnf formula axp byp 
director probability give dnf computing probability complete 
summary rephrased query evaluation problem problem evaluating query answer probability dnf formulas dnf formula occurring expression max similarly min 
focus computing eq 
monte carlo simulation monte carlo algorithm repeatedly chooses random possible world computes truth value boolean expression eq probability approximated frequency true 
luby karp described variant shown algorithm better guarantees naive mc 
purposes details luby karp algorithm important important running steps algorithm guarantees high probability interval width shrinks increases 
formally theorem 
define log represents number tuples group number disjuncts dnf formula number steps executed luby karp algorithm 

value belongs probability top query evaluation describe algorithm 
query eq instance stored sql database engine compute top answers 
evaluation parts evaluating extended sql query qe engine grouping answer tuples running monte carlo simulation group middleware compute probabilities returning top probabilities 
describe basic algorithm discuss optimizations section 
ms model problem follows 
set 
gn objects unknown probabilities 
pn number goal find set objects highest probabilities denoted topk discuss sort set 
way observe objects probabilities means simulation algorithm running steps object returns approximation interval probability assume happen 
assumptions simulation algorithm unknown probabilities original bound 
implies bounds 
convergence limn limn precision 
progress 
separation pi pj 
example empty critical region case case case 
illustration ms 
separation assumption topk unique solution ties assumptions solution naively round robin algorithm 
setting object group tuples probability eq 

simulation algorithm luby karp 
assumption holds strictly convergence revisit address 
intuition algorithm computes topk running simulations objects 
initializes intervals 
bn repeatedly chooses simulate gi step 
point execution object gi simulated ni steps interval ni ni ai bi omit superscript clear 
total number steps groups ni 
consider top left fig 

simulated groups clearly top may dominated don know st nd 
unclear object top 
certain top 
intervals ai bi aj bj bi aj say second 
say intervals separated case know pi pj bi aj due separation assumption 
say set intervals separated exists set exactly intervals interval interval algorithm searching topk simulate intervals finds separation prove topk uniquely determined case outputs topk cost algorithm number steps termination 
golden standard nondeterministic algorithm opt obviously optimal 
opt knows exactly steps simulate gi opt steps holds intervals opt opt opt opt nn nn bn separated sum opt opt ni minimal 
multiple optimal solutions opt chooses arbitrarily 
clearly oracle algorithm implemented practice 
goal derive deterministic algorithm comes close opt 
example see difficulties consider objects probabilities current intervals say simulating step 
correct top answer don know separated know possible 
suppose decide simulate repeatedly 
clearly optimal 
example may require huge number simulation steps increases may take simulation step decrease betting may perform arbitrarily worse opt know choose simulate 
symmetrically bet cases perform worse opt 
round robin reasonable strategy simulate alternatively 
cost twice opt case steps move little relative order remains unchanged 
th step decreases dramatically changing order 
round robin finishes steps 
steps simulate wasted changes tiny difference 
opt chooses simulate cost half round robin 
fact deterministic algorithm better twice cost opt 
round robin algorithm perform worse opt 
consider objects 
gn 
round robin may perform times worse opt cases choosing right object bet exclusively optimal round robin wastes simulation steps objects cost opt notations definitions non negative numbers 
xn necessarily distinct define topk 
xn largest value 
formally permutation xi xi 
xin topk defined xik set 
definition 
critical region top objects bottom objects topk 
topk 
bn gi ai gi bi check topk topk bi implies definition intervals aj bj ai bi proves claim 
fig 
illustrates critical regions 
important property critical region intervals separation iff critical region empty proof omitted lack space case return topk illustrated upper right fig 
top objects clearly right critical region 
assume 
call object gi ai bi contains critical region ai bi 

intervals ai bi bi 
may satisfy ai satisfy ai 
ai bi call upper bi lower ai double 
algorithm shown algorithm 
step picks intervals simulate cases see fig 
tries double ai bi tries find upper lower pair exists means left endpoint ai right endpoint bi 
case exists maximal contains pick simulate may intervals may equal 
iteration re compute critical region empty return set intervals critical region 
previous discussion algorithm clearly correct returns topk terminates 
convergence assumption follows algorithm terminates 
algorithm algorithm ms topk 
gn 
bn case exists double simulate step case exists upper lower simulate step case pick maximal simulate step update eq return topk gi ai analysis prove algorithm optimal factor opt deterministic algorithm better 
point algorithm execution say interval ai bi slack ni opt slack algorithm safely simulate doing worse opt 
lemma 
ai bi 
cases ai bi slack upper top 
lower top 
double 
contains maximal 
proof 
see note opt find intervals ni ni upper nj nj opt find intervals ones ni opt ni opt nj opt ni due progress assumption 
follows opt simulate step ni bring ni order separate top 
similar 
prove assume interval topk case symmetric 
consider intervals bj say aj bj topk opt separate proving aj bj ai bi 
ai aj aj bj included ai bi aj bj ai aj 
separate opt reduce aj bj point simulate ai bi 
assume mc algorithm return point interval bn forall opt simulate ai bi 
theorem 
cost algorithm ms topk opt 
deterministic algorithm computing top exists instance cost cn opt proof 
sketch main idea example omit lack space 
prove notice step algorithm simulates intervals suffices prove slack cases 
double simulated clearly slack 
second upper lower simulated order slack top top case opt simulate separated slack 
third upper lower simulate largest seen slack 
corollary 
deterministic algorithm finding topk 
instance cost ms topk twice cost exists instance cost greater times cost ms topk 
discussion variations extensions query answering need compute top answers sort 
variation ms call ms 
compute top tk ms topk 
compute sets sequence tk ms topk ni tk tk ms topk ni tk 
ms topk ni step set tj top answers compute top identifies th ranked object 
top objects identified reverse order 
ms topk ni denotes algorithm ms topk line initialize intervals ai bi continues previous left 
algorithm optimal proved theorem similar omit lack space 
second variation time algorithm computes returns top answers order knowing user time 
algorithm starts identifying top element ms topk finds remaining groups decreasing order tj ms topk bj bj 
tj 
slack 
shows cost opt prove opt notices iteration simulates single interval note algorithm optimal finding top elements advantage time nature 
prevents semi join optimization discussed requires knowledge revisiting assumptions precision holds mc algorithm probabilistic sense 
example running luby karp algorithm steps bn 
choice confidence affects convergence rate bn log size group 
context user chooses global parameter requires groups precise confidence 
assuming equal confidences system sets group implies 
sill appears log choose small values affecting significantly running time precision holds practical purposes 
separation assumption problematic practice probabilities equal close 
simply rely second parameter critical region rank uncertain groups midpoints intervals 
progress stated hold monte carlo simulation technique 
lastly progress statement opt intervals contained intervals see 
observe interval precision holds weaker variant progress suffices infinitely 
limit exists convergence assumption implies statement 
choosing appropriately ensure constant number errors high probability 
importantly weaker assumptions satisfied alg 

choice affects running time precision recall 
discuss system sensitivity sec 

note restriction intervals collapse forall important 
true practice mc algorithm 
pure theoretical observation note assumption proof lemma fails fact deterministic algorithm constant factor opt 
consider searching top objects intervals start initial configuration 
opt picks winner object interval simulation step collapses opt finishes step deterministic algorithm touch intervals 
improvements may wonder adversarial model intervals may shrink arbitrary unpredictable rates strong 
theory may possible design algorithm finds topk exploiting specific rates intervals shrink see bounds th 

note result factor improvement ms algorithm due corollary 
optimizations optimizations reduces number groups simulated simple pruning technique second reduces sizes groups pushing processing middleware engine 
techniques provably correct guaranteed preserve query semantics 
pruning simple upper lower bounds probability group max ti ti ti computed easily allow compute critical region eq prune groups starting ms improvements pairs disjoint tuples group condition checked statically upper bound tighten ti 
safe subqueries probabilities pushed engine multiplying probabilities tuples independent adding tuples disjoint 
achieved running sql query subset tables original query sq select agg group agg sum prod sum 
pm prod 
pm pi optimization works 
query eq choose subset tables set attributes include attributes relations join relations 
construct subquery sq subexpression normal table probability possible worlds key certain subset conditions met rewriting correct 
tuple probability computed agg correct output tuples having value disjoint tuples tuples having different values independent tuples probability independent tuple original query joins 
recall key denotes set key attributes possible worlds check proposition 
consider query sq 
attr denote attributes relation include attribute technically belongs attr sq denote union attr relations sq 

agg sum computed correctly iff key attr sq attr 

agg prod computed correctly iff attr sq key 
check proposition 
consider query sq 

output tuples having values disjoint events iff key attr 

output tuples having different values independent events iff key 
check need check relations sq occur rest query example consider probabilistic tables asin reviewer asin possible worlds keys key asin reviewer key asin key note contain independent tuples 
consider query top select distinct reviewer asin asin query optimized observing subquery safe subquery pi sq select asin sum group asin output subquery table tmp asin treated base probabilistic table possible world key asin probability attribute see verify subquery satisfies conditions safe subquery condition prop 

asin attr sq asin 
see key attr sq attr condition met 
condition prop 

asin claiming asin key tmp 
prop 
holds trivially 
prop 
holds key condition holds event tables outside tmp distinct inside 
having verified subquery safe rewrite query making sq subquery safe plan top select distinct reviewer sq tmp asin tmp asin table tmp asin computed inside engine treated base query ms rest ms remains unchanged 
new query number groups original query group smaller probabilistic computation pushed engine 
complete probabilistic model complete representation formalism probabilistic database represent probabilistic data def 

formalism described sec 
barbara incomplete represents independent exclusive tuples 
formalisms described literature incomplete complex practical 
example model suciu strict subset barbara allows independent tuples incomplete 
fuhr describe complete model tables complex impractical 
widom advance hypothesis representation formalism incomplete unintuitive impractical proposes layered approach simple intuitive incomplete model top complete complex model bottom 
show extend simple representation formalism described sec 
sql views obtains complete representation system 
sql views intuitive database users believe system quite intuitive practical 
prerequisite representation system query processor evaluate complex sql queries probabilistic databases user query needs expanded view definitions results complex expression 
complete representation system describe direct application efficient query processing techniques described sec 

definition 
probabilistic schema views pv consists probabilistic schema 
rp associated deterministic schema see sec 
set sql view definitions form vi qi vi relation name qi select distinct sql query 
instance pv instance meaning denoted mod probability distribution possible worlds schema 
vk obtained intuitively probability distribution mod 
wn ignoring views evaluating views possible world wj 
formally write wj instance consisting relations relations 
rm wj plus relations 
vk obtained evaluating views 
probabilistic tuples exclusive tuples table name avg 
max hmm 
case studies imprecisions query avg max name groups group group prob 
size size tables sp sp sp sp ss sl ls ll 
query stats lan definition 
mod 
wn wj wj users formulate queries schema pv instance pv possible worlds semantics query semantics simply mod 
computed expanding views query evaluating rewritten query normal way views 
show completeness formalism 
schemas consists relation names possibly instance denote instance obtained dropping tables probability distribution schema denote probability distribution 
theorem completeness 
deterministic schema relation names 
exists probabilistic schema pv relations views probability distribution exists instance pv 
mod 
proof 
prove general case similar 
define wid wid key corresponding deterministic counterpart wid defined empty key deterministic key wid key 
define view select distinct wid wid prove claim 
wn set possible worlds wj instance 
pn probabilities 
construct follows 
create distinct identifiers 
wn wp table 
wn pn represent worlds exclusive tuples key 
table wj wj 
follows immediately possible worlds mod 
wn wn world consisting table table table probabilities 
pn proves theorem 
experiments section evaluate approach experimentally 
address questions scale probabilistic databases modeling imprecisions new query evaluation method compare current state art effective ms naive approach effective optimizations sensitive system performance choice 
setup experiments run dual processor intel xenon ghz machine ram gb disks 
operating system linux kernel version high mem build 
database db udb trial edition 
due licensing restrictions db able cores 
indexes configuration parameters buffer pools tuned hand 
methodology running time perform experiment times dropping highest lowest average remaining runs 
naive simulation method capped minutes 
experiment force database terminate connections 
experiments run repeatedly minimize caching effects cache allowed warm 
precision recall experiments precision recall defined fraction top answers returned method evaluated overlap correct set top answers 
order compute compute exact tuple probabilities intractable 
approximate values returned simulation algorithm low settings 
case studies empirical study modeled imprecisions application domains 
integrates imdb movie database reviews amazon described simplified form sec 
sources imprecisions fuzzy object matches titles actors directors confidence amazon reviews people review useful 
second application integrates imdb reviews collected usenet site reviews free text information extraction techniques retrieve review movie rating 
imprecisions generated information extraction tools 
third application human activity recognition data obtained body worn sensors 
data collected different sensors accelerometer audio ir visible light high frequency light barometric pressure humidity temperature compass shoulder mounted multi sensor board collected rate second classified classes human activity 
subject time unit 
classes riding elevator driving car riding bicycle walking stairs jogging walking standing sitting 
imprecisions come classification procedure results probability distribution activities 
fig 
shows brief summaries probabilistic data applications 
required base probabilistic tables sql views complex probabilistic correlations 
addition probabilistic data imdb large deterministic tables movies actors casts shown part query processor input experiments important evaluation 
query performance report measurements data set imdb amazon integration largest richest 
processor performance affected query parameters number groups denoted sec 
average size group 
additional experiments shown noticed performance affected number probabilistic tables query sec 
roughly corresponds number sources evidence imprecise data 
choosing parameter small large obtained classes queries denote ss sl ls ll respectively chose query form class show fig 

queries ss years anthony hopkins appear highly rated movie 
system returns top answer year sl find actors pulp fiction bad movies years pulp fiction 
top answers samuel jackson christopher ftp ftp uu net usenet rec arts movies reviews running engine time log scale ms sp ms sp ms sp ms sp ss sl ls ll precision running times ms lan precision recall naive strategies simulation steps topk simulation steps ss sl ls ll bucket index total number simulation steps query ss number simulation steps bucket query ss running time ss sl ls ll precision ll precision ll running time ls precision ls running time epsilon effect running time effect precision running time 
experimental evaluation ls find directors low rated movie 
top answers richard wars tim king final run ll find directors low rated drama high rated comedy years apart 
top answer woody allen stated confidence precision parameters algorithm run ms sec 
finds top sorts 
comparison methods state art query evaluation probabilistic databases compute query answer exactly complete monte carlo simulation call method naive approximate probabilities strategies ignoring correlations 
results larger running times ms see fig 
note logarithmic scale naive method timed ls ll queries 
approximation method faster ms results running time max lower precision recall due fact ignores correlations imprecisions shown fig 

note monte carlo simulation precision recall improved running longer room improvement approximate method 
note queries ls flattened precision recall 
queries reached reached total number groups answers worse looks order wrong 
clearly shows ignore correlations modeling imprecisions data 
analysis main idea algorithm tries spend simulation steps top buckets 
tested experimentally total number simulation steps varies buckets simulation steps spent 
show results ss 
fig 
shows total number simulation steps function topk algorithm finds top set sorting algorithm finds sorts top set 
graph clearly shows benefits low values number increases linearly second shows topk number steps essentially independent simulation steps spent separation line top rest 
deeper views graph fig 
shows group bucket simulation steps spent 
example simulation steps spent buckets highest order probability 
graph illustrates interesting things correctly concentrates simulation steps top buckets increases bucket number number simulation steps bucket increase 
spikes graphs correspond clusters probabilities ms spend simulation steps separate 
fig 
shows effect measured running time query 
expected running time scales linearly fewer answer user requests faster retrieved 
effectiveness optimizations tested optimizations semijoin pruning safe query rewriting 
semijoin pruning effective queries large number buckets ls ll harmless 
performed pruning middleware additional cost total running time negligible 
safe plan rewriting sp interesting study highly non trivial 
fig 
shows significant improvements factors running times buckets large sl ll modest improvements cases 
query time engine differed queries issued different case sl engine time larger 
fig 
shows sp optimization affects average group size explains better running times 
sensitivity parameters tested system sensitivity parameters see sec 

recall theoretical running time log 
fig 
shows precision recall total running time function queries ll ls sp turned 
running time normalized golden standard 
increases precision recall quickly approaches upper values running time increases slowly dramatically 
price pay high precision recall experiments 
room tune queries precision recall running time significantly golden standard 
similar graphs differ boring precisions recall reaches fast running time independent 
graphs look horizontal lines 
choose wide range degrading precision recall performance 
described method answering top queries probabilistic databases applications imprecisions data 
proven technique near optimal validated experimentally 
optimization describe improve performance 
rohit surajit chaudhuri venkatesh ganti 
eliminating fuzzy duplicates data warehouses 
vldb pages 
daniel barbara hector garcia molina porter 
management probabilistic data 
ieee trans 
knowl 
data eng 
surajit chaudhuri kris venkatesh ganti rajeev motwani 
robust efficient fuzzy match online data cleaning 
sigmod pages 
suciu 
efficient query evaluation probabilistic databases 
vldb toronto canada 
das sarma halevy widom 
working models uncertain data 
icde 
deshpande guestrin madden hellerstein hong 
model driven data acquisition sensor networks 
vldb pages 
fellegi sunter 
theory record linkage 
journal american statistical society volume pages 
norbert fuhr thomas 
probabilistic relational algebra integration information retrieval database systems 
acm trans 
inf 
syst 
helena galhardas daniela florescu dennis shasha eric simon cristian augustin 
declarative data cleaning language model algorithms 
vldb pages 
gu baxter vickers chris 
record linkage current practice directions 
technical report 
mauricio hernandez salvatore stolfo 
merge purge problem large databases 
sigmod pages 
imielinski 
incomplete information relational databases 
journal acm october 
richard karp michael luby 
monte carlo algorithms enumeration reliability problems 
stoc 
lakshmanan leone ross subrahmanian 
flexible probabilistic database system 
acm trans 
database syst 
lester choudhury kern borriello 
hybrid discriminative generative approach modeling human activities 
ijcai pages 
re suciu 
evaluation having queries probabilistic databases 
submitted 
valiant 
complexity enumeration reliability problems 
siam comput 
stephen fienberg william cohen pradeep 
comparison string distance metrics name matching tasks 
pages 
william winkler 
state record linkage current research problems 
technical report statistical research division bureau census 
appendix high level goal section establish negligible number steps respect optimal progress assumption holds 
result contained allows show extremely high probability algorithm takes op op steps achieving stated competitive ratio 
progress holds estimator jumps smaller distance difference bounds 
see high probability estimator jumps relatively large number steps 
take simulation steps difference confidence bounds lemma progress holds long equation holds tells iff high probability progress holds 

technical aside assume underlying distribution true probabilities keeping competitive result free distributional assumptions 
specifically follows random choices results experiment underlying probabilities chosen adversarially 
introduce notation define random variables estimation lemma prove main result 
notation random variables number iterations current interval consider fixed probability progress violated take steps 
denote fixed true probability interval size function bounding function log random variables main random variables 
represents value estimator draws 
represents value random draws observe described sequential independent random variables sums independent trials 
summarize properties random variables 
sums indicators yi xj notation obvious extension estimate steps 
random variable written terms independent rvs decompositions helpful progress conditions progress violated conditions met 

bounds shrink lemma 
constant 
holds proof 
apply taylor theorem cauchy remainder form 
chernoff version bounds technical trick bounds 
tx apply markov inequality 
optimize choice lower probability 
progress violated union bound justified markov job select value minimizes expression 
expectation term prove lemma shows terms wish control infact 
words value error bounded 
lemma 

proof 
calculation decomposition eq 
need 
tx 
tn term tx tx tn independence tx pn tx definition tx independence xi expectation factoring ee en exp rules observe term goes desired 
second term tn deal second expectation term 
yi exp np argument observe term go 
corollary 

high probability proof 
know choose markov bound denominator lemma 
choice proof 
combining lemma tm log tm log mt log lemma mt log progress violated take satisfies substitution yields take log progress violated probability simplifies violation log exponentially small probability number variance errors exponentially small 
applying chebyshev inequality conclude exponentially high probability errors steps fixed theorem 
probability progres holds number steps tends exponentially quickly 

long optimality ratio preserved 

