acird intelligent internet document organization retrieval hua lin meng chang chen jan ming ho ming huang institute information science academia sinica taipei taiwan department engineering science national cheng kung university taiwan presents intelligent internet information system automatic classifier internet resource discovery acird uses machine learning techniques organize retrieve internet documents 
acird consists knowledge acquisition process document classifier phase search engine 
knowledge acquisition process acird automatically learns classification knowledge classified internet documents 
document classifier applies learned classification knowledge classify newly collected internet documents classes 
experimental results indicate acird performs better human experts knowledge acquisition document classification 
learned classification knowledge class lattice acird phase search engine responds user queries hierarchically structured navigable results conventional flat ranked document list greatly aids users locating information numerous diversified internet documents 
index terms document classification data mining information retrieval search engine 

explosive growth internet revolutionized working living patterns evolved major source information communication medium 
huge amount information internet created information overflow phenomenon 
alleviate problem internet search engines topic directories available users 
search engines altavista infoseek able retrieve internet documents response user query 
alternatively topic directories yahoo allow users search relevant documents browsing topic hierarchy 
search engines designed efficiently organize access large collection documents 
number documents available internet huge thousands documents may retrieved search engines query terms example average query length terms reported 
experiments performed october 
facts reflect situation 
query education university hits altavista hits infoseek hits webcrawler 
ranking large number documents terms produce order documents meets user information needs 
consequently user retrieve uninteresting documents obtaining desired information 
search engines applied relevance feedback expand refine query documents selected user 
relevance feedback may ineffective grasping user true intention selected documents extremely difficult 
conceptual gap document developers users enlarges difference retrieval results user expectations 
due richness language culture internet web developers users may different terms expressions represent concept term describe different things 
term search engines frequently retrieve documents virtually thousands desired users desired documents may retrieved 
instance term search engines match term airline schedule documents term flight schedule query terms considered meaning 
consulting thesaurus may resolve problem 
problem arises term may different meanings different contexts term bank building thesaurus specific domain solve problem 
static thesaurus handle shifting semantics terms internet environment owing diversity dynamic nature 
current topic directory systems suffer bottleneck manual classification newly collected documents 
example yahoo largest directory system internet contains roughly links topic hierarchy editors needed classify web pages total number documents directory systems database search engines 
focus directory systems assigning internet documents right topics speeding increasing size database 
traditional measures information retrieval precision recall search engines low precision rates results retrieved topic directories suffer low recall rates small databases 
achieve balanced precision recall rates allow users access needed documents rapidly organizing documents set classes prerequisite efficiently managing retrieving internet documents 
system acird automatic classifier internet resource discovery designed achieve searchenginewatch com reports directories html october 
iis sinica edu tw acird class htm efficient effective internet document organization retrieval 
system learns classification knowledge classified documents 
mines association rules terms explore implicit term semantics infers term associations order refine classification knowledge classes class lattice 
facilitate internet search system uses phase search mechanism presents hierarchically navigable view user 
rest organized follows 
section reviews related works 
section introduces functions acird 
section introduce conceptual model define terminology 
section discusses acird learning model detail 
section presents experiments automatic classification documents justify design decisions acird 
section introduces phase search method 
contributions areas section 
related section reviews works related study internet information retrieval document classification data mining 
internet information retrieval previous studies information retrieval ir systems focused mainly improving retrieval efficiency term indexing query reformulation techniques 
term document processing initially extracts terms documents pre constructed dictionary words stemming rules 
terms extracted widely method called tf idf variations applied determine weights terms 
document represented set terms weights 
similarity measure query document direct product corresponding term vectors cosine value vectors multi dimensional vector space 
indicate degree relevance documents queries retrieved documents ranked list measure 
alternatively string indexing approach indexes strings possible sub strings terms term approach particularly useful arbitrary length string search string matching address matching character language search including oriental languages chinese japanese 
notably storage requirement string indexing approach higher term indexing approach 
addition complicated data structures take time retrieval 
superior retrieving exactly matched strings string indexing approach inappropriate internet information discovery tasks users give conceptual descriptions exact strings 
investigations developed string indexing technologies including pat tree signature files enhance performance various search functions prefix searching range searching longest repetition searching significant frequent searching regular expression searching :10.1.1.39.3129
search functions rarely internet 
current search engines employ variety ir techniques differences related indexing representation querying implementation 
indexing 
search engines gather internet html documents web pages user submissions means automatic internet robots called spiders crawlers 
conventional ir systems search engines index set words phrases efficient retrieval 
search engines attempt determine index concepts documents 
example excite knows relationship exists related concepts elderly people senior citizens rich format html search engines enhance weights terms significance tags 
representation 
search engines employ full text indexing fast matching queries documents documents represented set term weight pairs case conventional ir systems 
topic directory systems provide key word search functions represent web pages term weight indexes 
addition store pages topic hierarchy developed maintained manually 
querying 
search engines employ functions refine numerous search results 
example search engines provide boolean operators derive precise results 
functions exact phrase matching sorting pages corresponding sites restricting search specified sites useful refining search results 
implementation 
internet search engines topic directory systems need cope dynamic internet environment contrast stable context ir systems 
web pages created modified deleted frequently requires systems equipped dynamic storage structures efficient indexing mechanisms 
implementation intelligent internet robots challenging issue internet web page collection 
currently hundreds search engines apply technologies ir internet 
popular search engines famous rich indexes fast response 
general search www excite com info search help engines borrow indexing ranking methods ir improve performance adding advanced hardware sophisticated software 
user satisfaction suffers matched documents returned search engines documents returned 
learn current status popular web search engines readers refer search engine watch document classification data mining approaches classify documents divided main camps manual classification automatic classification 
manual classification documents time consuming expensive infeasible handling huge number internet documents 
automatic classification classification knowledge acquired domain experts learned automatically training documents :10.1.1.39.3129
acquiring knowledge domain experts relatively effective expensive terms time knowledge maintenance 
furthermore acquired knowledge may incomplete require complicated models theories apply 
contrary classification knowledge automatically learned training documents efficient accuracy constrained employed learning model training data 
text categorization studies focused information retrieval :10.1.1.39.3129
document classification text categorization focuses internet html documents general texts 
document classification involves automatic grouping documents 
studies addressed issue adopting similarity document retrieval relevance feedback text filtering text categorization text clustering :10.1.1.123.6726
example uses similarity measurement category ranking method determine best category input document 
uses vector space model document representation unsupervised learning document classification reinforcement learning user modeling filter documents content user specific interests 
inquery employs different classification techniques nearest neighbor approach belief scores distance metric bayesian independence classifiers relevance feedback 
goldszmidt sahami proposed document clustering probabilistic overlap documents document clusters 
previous machine learning studies developed algorithms tested fields medicine finance 
widely algorithms including id searchenginewatch com cn aq algorithm applied structured training data non structured textual data document classification problem 
correspondingly approaches document classification feature sets characterize documents apply algorithms bayesian classifiers nearest neighbor method rule induction algorithms mixed approaches inquery classify documents :10.1.1.39.3129
concentrating document classification process learning algorithms systems ignore diversity documents terms semantics 
learning applications characterized feature attribute value pair assumption fixed semantics 
semantics feature varies different domains 
example document feature apple different meanings domains computer food mining association rules applied discover important associations items transactions 
conventional application mining item associations finding optimal item arrangement supermarket allow customers gather conveniently 
study apply mining association rules explore semantics features document 

acird system acird automatically collects classifies internet documents efficient effective management retrieval 
acird initially focuses improving expensive time consuming manual classification process internet search engines 
employing classification knowledge learned manually classified internet documents acird automatically classifies newly collected internet documents 
classification knowledge class lattice enables phase searching presents search results hierarchical view ranked document list conventional internet document retrieval 
design decisions measurement metrics aim reach integral goal acird auto learning auto classification phase searching 
section provides overview acird subsequent sections details component 
fig 
schematically shows workflow acird 
domain expert provides class lattice worldview document domain set training data internet documents manually assigned classes 
classification learner learns training data generates classification knowledge called class indexes classes class lattice 
internet robot automatically collects documents internet preprocessing process extracts features documents 
document classifier proceeds assign appropriate classes incoming documents 
internet users query acird phase search engine matches queries knowledge documents classes presents hierarchical view users facilitate information discovery job 
study focus internet html documents referred objects 
object assigned unique id parsed document index set terms weights stored database 
set term weight pairs form feature vector representing object knowledge 
inverted indexes pointing occurring objects terms generated efficient access learning accessing 
internet documents human expert documents class lattice training doc 
internet robot document classifier classified doc 
knowledge base class lattice training doc 
doc 
stream doc 
indexes class indexes preprocessing process database classification learner class class indexes doc 
indexes phase search engine fig 

major components workflow acird 
doc 
indexes class lattice presents worldview acird 
lattice node represents class parent node super set child node 
nodes parent nodes universal node referred general nodes nodes child node null node specific nodes 
automatic learning classification process acird consists phases training phase testing phase 
training phase training data consist set manually classified documents 
learning process learns classification knowledge sequence specific classes general classes class lattice 
specific classes classification knowledge generalized knowledge objects class 
classes knowledge generalized child classes direct objects objects belong class child classes 
knowledge classification learned technique mining association rules employed discover term associations inside class enhance classification knowledge 
term query result internet user associations highly depend class domain best scope apply term associations refine classification knowledge single class 
previous study demonstrated mined term association enhance term semantics dramatically 
testing phase classifier employs learned classification knowledge assign classes test documents usually newly collected documents assignments compared classes assigned human experts verify quality learned knowledge 
acird provides phase search engine allows users efficiently effectively retrieve interesting documents interactive navigation returned class hierarchy sequence ranked documents 
phase search user query string parsed formulated sequence terms called query term vector 
similarity matching vector space model applied determine relevance query classes class lattice stored objects 
note class object knowledge represented term vectors 
phase class level search performed query term vector determine qualified classes form shrunken view class lattice 
user decides explore qualified class returned class hierarchy query term vector employed calculate relevance subclasses selected class 
user decides explore objects class called object level search acird matches retrieves qualified documents class 
phase search reduces search domain presents hierarchical conceptual view aid user locating interesting information 

acird conceptual model section define terminology introduce conceptual model acird 
entity denoted lower case letter set series entities upper case letter 
example denote class represent set classes 
describe system entities notations parentheses high level concepts continuing low level ones 
acird lattice class lattice consists set classes acird nodes set relations edges connect nodes parent node edge super set child node 
total number classes denoted class class node acird possesses knowledge generalized subclasses direct objects class 
number intermediate subclasses objects object html document consists paragraphs pg enclosed html tags 
object belongs classes acird paragraph pg consists series sentences subsequently consists terms 
paragraph pg informative enclosed informative html tags defined 
term word excluding words extracted sentences informative 
term support value object appears 
support sup calculated term frequency weight html tags quantifies importance object knowledge know set selected terms supports object sup know represented term support graph tsg directed edge label denoted know sup ti number extracted terms know classification knowledge class know set terms term support value sup know generalized know direct objects classification knowledge child classes 
similar know know represented graph tsg directed edge labeled number terms know denoted know sup ti class process mining association rules applied mine associations terms know mined rules called term associations pair terms corresponding confidence conf 
strongly connected graph term association ti graph tag generated considering terms nodes term associations edges labeled conf ti class term semantics network tsn constructed union tsg tag tsn represent semantics class relations terms class 
perfect term support pts algorithm applied promote sup ti edges tsn algorithm obtains optimal path path maximum value possible paths tsn value associated path product confidence values edges path support term path conf 

optimal support denoted sup defined value keyword term passes filtering process filters terms pre specified conditions 
keyword sup defined membership grade mg application pts filtering process refines know produce refined classification knowledge know 
search engine automatic classifier acird 

acird learning model know knowledge base employed phase section describe learning model acird detail 
training phase acird adopts supervised learning techniques treats previously classified documents training objects 
testing phase described section 
acird applies machine learning techniques learn classification knowledge shown fig 

learning method applied class acird lattice specific classes general ones 
document preprocessed weighted term vector 
dimension vector reduced feature selection process order reduce complexity learning 
specific class knowledge class know generalized knowledge objects class represented term support graph tsg 
classes specific classes learning process initial weighted term vectors originate subclasses direct objects 
mining association algorithm applied mine associations terms tsg represented term association graph tag 
combining tsg tag derives term semantic network tsn 
tsn refined produce tsn know class 
iteration refinement process terms may promoted 
promoted terms may promote terms promotion process applied recursively stable state reached 
documents stable preprocessing process classification knowledge refiner classification knowledge tsn term vector refined classification knowledge tsn term association miner fig 

learning model acird 
preprocessing process knowledge representation feature selection process object knowledge tsg classification knowledge learner classification knowledge tsg preprocessing process consists parsers html parser term parser 
html parser parses object paragraphs determines weights judging associated html tags 
term parser partitions paragraphs sentences extracts terms sentences 
term parser calculates term supports weight assigned html parser term frequency 
html parser html document consists paragraphs associated html tags indicate importance provide meta level information 
web developers highlight contents html tags titles headings 
addition meta tags allow developers add extra information classifications keywords document 
apparently implications tags considered indexing documents 
acird human experts assign adjust weights html tags observing outcomes numerous experiments order improve classification accuracy 
html tags classified types informative 
paragraphs enclosed tags classification keyword meta title hn consist meta knowledge documents significant contents provided users 
informative tags highest weights 

tags br affect semantics document omitted 
uninformative 
contents enclosed tags area col script comment invisible users 
tags corresponding contents excluded 
statistical 
contents enclosed tags applet object script stored database statistical purposes 
html parser implemented stacks html tags paragraphs 
algorithm executed document scan computational complexity term parser term parser partitions paragraph sentences extracts terms sentences counts term frequency tf term 
term extracted object support value sup measured tf html weight defined equation 
value normalized range indicates importance term representing object sup sup ti ti tf ti ij sup ti max sup ti tags tf term frequency sentence ij sup normalized maximum 
weighted tag sentence may tag maximum weight tags calculate term support 
acird tf maximum tag weight calculate term support tf idf weighting approach 
inverted document frequency idf designed enhance discriminating capability high frequency terms critical hierarchical learning model phase search discovery model 
acird high frequency term considered represent class may generalized classification knowledge parent class discriminator objects class 
designed handle multi lingual documents acird currently supports english chinese 
english extracted term stemmed 
character language chinese sentence segmented meaningful multi character terms 
may apparent characters sentence term parser uses pre constructed term base structured tree quickly match extract meaningful terms 
term parser extracts chinese terms heuristics long term resolve ambiguity 
terms part term parser extracts longer 
addition rules chinese term segmentation feature selection mainly due grouping terms objects done means sorting process 
complexity log learning classification knowledge process learning classification knowledge generalizes object knowledge know knowledge specific class know induction learning generalizes obtained class knowledge upper classes 
learning process applied specific classes continuing general classes 
conventional learning methods values features training objects true false term occurs object terms assumed equally important degree term support object class neglected 
amend shortcoming define support denoted sup equation 
similar sup normalized sup sup sup sup ti max sup sup term support object class sup normalized sup 
support term non specific class obtained support term direct objects child classes shown eq 

note number objects child class affects contribution class super class sup sup sup ti child class class sup ti max sup ti sup sup ti ti normalized direct object number sup ti objects 
algorithm classification knowledge learner described 

specific classes general classes apply preprocessing feature selection processes objects 

specific class calculate term support class eq 

computational complexity complexity grouping terms objects class sorting complexity log 
classes calculate term support class eq 

regarding child classes direct objects complexity cost grouping terms child classes objects log complexity special general learning process log due diversity internet documents number terms class large term support generally low 
instance fig 
line represents distribution term support class 
learning results terms class average support fairly low 
reveals term supports located low support range 
feature selection process needed reduce low support terms know threshold average remaining terms class terms terms 
filtering 
filtering process may remove meaningful low supports terms aliases terms closely related high support terms 
alleviate problem propose method uses mining association technique discover term associations class apply result enhance supports filtered terms 
mining term association fig 
distribution term supports classes training data 
feature selection process class level sophisticated object level 
know generally larger know know generalized classification knowledge object knowledge 
second terms object consistent semantics representation class 
object typically written web developer simple filtering method threshold value perform satisfactorily 
hand common observe meaning forms representations associations promising candidate mining 
reasons acird applies mining association rule process mine term associations assumptions term corresponds item 
ii informative paragraph corresponds transaction 
iii class corresponds transaction database 
term support graph tsg learning classification knowledge document extracting terms mining association rules term semantic network tsn term association graph tag document document document fig 

construction term semantic network 
concentrating objects class classes merit low computational complexity due resulting small database size 
size database large simple mining association algorithm apriori efficiently applied 
study consider term associations cost mining term associations class know 
define confidence conf support sup term association ti follows conf df ti df ti stands number documents contain df term df indicates number documents contain df ti stands number documents class confidence considered degree association terms employed classification knowledge refiner refine know know support percentage transactions supporting associated rules considered metric correctness rules 
example know class art contains term supports sup exhibition art 
sup art art exhibition may filtered know due low support value 
mining term associations class art acird identifies term association exhibition art conf 
sup 
assume rule support considered exhibition art exhibition art useful 
definition exhibition art sup defined previous section sup exhibition art sup increased exhibition art conf sup art art 
inference process promotes support value exhibition pass filter 
term associations class mined tsn obtained shown fig 

tsg denotes term supports class tag represents term associations class tsn represents union tsg tag tsn tsg tag refinement classification knowledge term associations asymmetric exist pair terms tag tsn form strongly connected digraphs 
determine sup term possible paths term class node considered 
tsn total number possible paths terms class number terms 
experiments average number terms class exhaustive search infeasible 
support value term association employed filter remove rarely terms computationally expensive small number terms 
instance class terms creates possible paths 
efficient algorithm deemed necessary 









novel pts algorithm locate sup terms class polynomial time 
definition sup max conf conf 
conf sup tk ty tz tz conf sup range larger number edges path tk tz implies smaller value product 
restated sub path optimal path optimal path 
proposed greedy heuristics algorithm follows heuristics 
divide terms tsn groups empty 
time find term maximum repeat empty 
perfect term support pts algorithm 
initial state step initializes contains term maximum sup sup sup max sup sup 
step updates conf empty continue initially contains terms sup move sup partitions terms groups sup contains 
sup necessary denotes latest term added steps edge sup sup 

sup 
step locates term maximum sup max sup output sup conf sup sup inserts 
proved pts algorithm obtains optimal solution computation complexity know pts efficiently promote non representative terms exploring associations representative terms 
fig 
illustrates effect pts 
left hand side non representative terms tsn 
refinement pts right hand side graph terms promoted representative associations representative terms 
non representative terms corresponding associations eliminated reduce learning complexity 
support support tsn support support support effects knowledge refinement process support mg representative term non representative term representative term optimize tsn fig 

pts refinement tsn 
experiment designed compare know optimized tsn mg mg mg know mg know includes class keywords selected human experts 
class human experts selected terms considered representative class set internet documents 
selected terms sorted number times selected basis judging quality learned knowledge 
precision recall rates defined follows precision know know recall know know experiment results indicate knowledge refining process refines knowledge contents classification knowledge 
trade precision recall different feature selection criteria examined 
types criteria evaluate outcomes experiment results 
top know sup sorted descending order 
terms selected keywords threshold 
criterion select terms sup 
table summarizes experiment results 
pts applied lowest precision due high selection standards 
recall low reason 
observation implies induction process learn implicit association terms correctly generalizes knowledge objects classes 
contrast case pts applied pts increased precision recall top criterion promotes important non representative terms expense removing important terms top criterion selected fixed number terms 
threshold criterion pts dramatically increased recall decreasing precision increased number keywords promoting terms 
experimental results confirm induction process knowledge refining process discover hidden semantics terms 
results demonstrate acceptable compromise precision recall achieved carefully chosen selection criterion 
component acird learning model executed polynomial time knowledge refinement achieved finite number iterations total complexity polynomial 
table 
performance pts algorithm classification knowledge 
pts algorithm pts algorithm selection criterion precision recall precision recall top top threshold threshold 
evaluation acird automatic classification section describe testing phase learning process 
learned knowledge acird classifier automatically categorizes newly collected internet objects 
object classifier assigns classes compared classes assigned human experts evaluate classification accuracy 
series experiments analyses revealed know provides high quality suggestions classifying internet documents 
similarity measurement sim sup mg sup mg mg sup mg membership grade sup norm object norm class 
common ter sup ti support acird classifier uses conventional similarity measurement cosine value feature vectors documents classes defined equation owing imprecise nature class concept class assignment object exactly true false addition categorizing object class impractical object may conceptually related classes 
input object acird classifier gives best classes closest intention object 
classification accuracy estimated criterion expert assigned class testing object located set best matched classes 
experiment results average threshold fig 

classification accuracy assigning testing objects specific classes 
experiment classes acird specific classes training objects testing objects sets objects disjoint manually classified 
learning process human experts extracted keywords class classification knowledge benchmark denoted processes run know know fig 
summarizes results testing know know denoted users pts pts respectively 
result obtained naive bayes classifier denoted naive bayes included comparison widely text classification 
results know quality par manually extracted classification knowledge know terms accuracy class assignment objects perform better naive bayes classifier 
classification accuracy cases low 
closely examining training testing sets reveals classes contain insufficient training objects training testing objects contain keywords non text pages link pages 
experiment designed circumvent situation 
testing process performed twelve general classes acird resulting classification accuracy shown fig 

top accuracy know increased 
increase due sufficient number training objects testing classes total number testing classes reduced 
fig 

classification accuracy assigning testing objects general classes 
table lists number objects keywords twelve general classes 
table distribution numbers objects skewed classes exhibit problem insufficient training objects keywords 
investigate problem performed set experiments classes sufficient number training objects keywords 
experiment testing class training objects 
number testing classes reduced 
classes contained sufficient number training objects classes referred trained classes refined classification knowledge trained classification knowledge 
fig 
top classification accuracy markedly higher 
reveals classes contained sufficient number training objects learning model learn accurate classification knowledge human arts humanities social sciences society culture natural sciences computer internet health news information education government state companies entertainment recreation experts 
intuitively number classes factor affects classification accuracy 
results shown fig 
accuracy classification twelve general classes trained classes comparable 
instance top accuracies top respectively 
result interesting shows number classes major factor 
table 
distribution training objects general classes 
class name objects keywords companies entertainment recreation computer internet education society culture government state news information health arts social science natural science humanities 
phase search engine fig 

classification accuracy trained classes 
search engines reply user queries list ranked documents time consuming inconvenient users retrieve needed documents 
acird provides phase search allows users perform class level searching object level searching 
utilizing phase search users relate information needs classes acird navigate classes locate retrieve needed documents 
procedure executed iteratively user obtains needed information 
ensuring effectiveness phase search requires terms user queries class level search know applying know return relevant classes 
conjecture query terms know investigated means analysis user query log 
analysis user query log internet queries analyzed user log collected october 
terms extracted queries frequencies counted 
distinct terms user log denoted set ct log queries 
keyword know ct log count assigned count term ct log count keyword 
count applied measure recall rate 
number retained keywords know served measure index rate rate coverage know log ct regarding query terms query log baseline recall rate index rate defined follows recall rate total count index rate number keywords know total ct log know number query terms ct log table 
total counts recall rate vs number keywords index rate 
line query terms user log filter threshold know total needs number keywords th th th th th th th th th th th observe change recall index rates keyword selection process uses different thresholds denoted th table lists counts recall rate number keywords index rate test 
table case th keyword eliminated indexed keywords covered information needs double index size query terms 
th remaining keywords covered information needs index rate 
sufficiently high recall rate phase search able shrink searching domain reduced class lattice efficient effective searching compromising user information needs 
phase search method query string object level search class parse keyword info 
needs class class search search objects sequence query keywords subclass search user selects desired class conventional search fig 

processing flow phase search 
class level search ranked classes match query analyses show likelihood performing class level search information loss 
class level searching structured presentation acird provides conventional searching including object level searching searching objects escape users 
briefly reviewing return class level search user navigate class lattice choose apply object level search particular class 
fig 
shows block diagram phase search 
operations described 

process query string parse query string sequence keywords 

perform class level search examine sub classes designated class initially root calculate relevance scores sort classes scores descending order 
return general classes parent child classes satisfy query return parent class user 
generate result html format 

execute object level search class retrieve objects designated class associated query terms calculate object relevance score sort objects scores descending order 
generate findings html format 

search objects retrieve objects related query terms calculate object relevance score sort objects scores decreasing order 
findings html format 
examples phase search user gives query interesting technical magazine search desired objects phase search 
fig 

class level search query result matched classes 
fig 
search objects class query result objects class 
fig 
presents query returns highest level classes satisfying query obtained class level search 
column refined search class presents class names user resume query class clicking class name 
column object class shows links direct lists objects class including objects subclasses shown fig 
objects class technical journals lists class direct objects shown fig 

mg membership grade indicates normalized relevance score 
fig 
object level search query result direct objects class 
user interested class technical journal clicked perform object level search search findings shown fig 

column class presents classes object belongs class hyperlink links back class node 
fig 

object level search query result objects designated classes 
fig 
summarizes results search objects conventional search engines 
example contains total relevant objects 
comparison relevant classes returned class level search visiting locating information links extremely inefficient 

fig 

search objects query result objects 
class internet document management access system acird 
results demonstrate machine learning data mining techniques capable generating accurate classification knowledge 
classification knowledge classifier automatically satisfactorily classify internet documents classes class lattice 
analysis user query log classification knowledge serve meta index shrink searching domain enable retrieval potentially desirable documents efficiently 
addition class level search returns comprehensible organization classes 
users associate queries classes navigate classes perform object level search obtain desired documents 
manner system helps users discover information large number internet documents 
learning model extended incrementally learn changes internet 
addition classification accuracy learning methods classifier room improvement 
related issues worth closer examination study 
example examine feasibility extending mining term associations classes automatically construct thesaurus corresponds semantics terms specific domain 
analyzing user query log allow system learn extract new terms words mp icq cgi order expand term base acird 
partially supported nsc contract nsc 
agrawal imielinski swami mining association rules sets items large databases proceedings acm sigmod international conference management data may 
agrawal srikant fast algorithms mining association rules proceedings th international conference vldb september 
apte damerau weiss automated learning decision rules text categorization acm transactions information systems vol :10.1.1.39.3129
july pp 

chien pat tree keyword extraction chinese information retrieval proceedings acm sigir international conference information retrieval 
clark niblett cn induction algorithm machine learning journal vol 
pp 

cormen leiserson rivest algorithms mit press 
croft implementing ranking strategies text signatures acm transactions office information systems vol 
jan pp 

cutting pedersen optimizations dynamic inverted index maintenance th international conference research development information retrieval 
duda hart pattern classification scene analysis john wiley sons new york 
frakes baeza yates information retrieval data structures algorithms prentice hall :10.1.1.39.3129
fuhr models retrieval probabilistic indexing information processing management vol 
pp 

goldszmidt sahami probabilistic approach full text document clustering tr ms sri international robotics stanford edu users sahami papers dir gm clustering ps 
jing croft association thesaurus information retrieval umass technical report cs umass edu info ps gz 
jones jackson automatically obtained classifications information retrieval information processing management ip vol 
pp 

jones needham automatic term classification retrieval information processing management vol 
pp 

croft new probabilistic model text classification retrieval umass computer science technical report ir cs umass edu info ir html 
larkey croft combining classifiers text categorization acm sigir pp 

berners lee hypertext markup language andrew andrew cmu edu rfc rfc html 
lewis evaluation phrasal clustered representations text categorization task acm sigir pp 

lewis william gale training text classifiers uncertainty sampling acm sigir 
lin chen ho huang design automatic classifier internet resource discovery international symposium multi technology information processing december pp 

lin shih chen ho kao huang extracting classification knowledge internet documents semantics approach acm sigir pp 

lin shih chen ho kao huang collaborative internet documents access scheme acird international computer symposium software engineering database systems ics 
michalski hong aq inductive learning system overview experiments technical report isg uiucdcs department computer science university illinois urbana 
mostafa mukhopadhyay lam multilevel approach intelligent information filtering model system evaluation acm transactions information systems vol 
october pp 

quinlan induction decision trees machine learning vol 
pp 

quinlan programs machine learning morgan kaufmann publishers 
san mateo ca 
salton automatic information organization retrieval mcgraw hill 
salton buckley yu evaluation term dependence models information retrieval lncs pp 

salton mcgill modern information retrieval mcgraw hill 
salton automatic text processing transformation analysis retrieval information computer addison wesley 
salton buckley improving retrieval performance relevance feedback journal american society information science vol 
pp 

shasha wang new techniques best match retrieval acm transactions office information systems vol 
january pp 

srikant agrawal mining quantitative association rules large relational tables proceedings acm sigmod international conference management data june 
yang expert network effective efficient learning human decisions text categorization retrieval acm sigir pp 

yu meng park framework effective retrieval acm transactions database systems vol 
pp 

lam ying lee world wide web resource discovery system world wide web journal vol 
winter 
associate editor ieee transaction multimedia 
program chair symposium real time media systems taipei general chair international symposium multi technology information processing general chair ieee 
steering committee member vlsi design cad symposium program committee member previous conferences including icdcs ieee workshop dependable real time commerce systems dare min huang born taiwan 
received degree engineering science national cheng kung university taiwan ph degrees electrical engineering university arizona tucson az respectively 
department engineering science national cheng kung university professor 
research interests include distributed multimedia systems machine learning real time systems 
dr huang member ieee computer society association artificial intelligence chinese fuzzy systems association 
winner long term award best thesis supervision 

