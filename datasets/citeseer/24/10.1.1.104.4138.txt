myths formal methods jonathan bowen oxford university michael hinchey university new myths anthony hall pub believe formal methods merely mathematicians sign knowing mean shortened led correct results 
people naturally tried find happened really meant 
years thy succeeded 
sawyer mathematician delight 
methods gaining tacit seminal article listed myths nature academic exercise form men tal relation acceptance outside application formal methods real world problems 
media system development today years successful formal methods little applications formal methods re help situation 
popular 
authors address main contentious software engineering practice 
areas press science journals formal methods subjected deep criticism myths essence formal method worse extreme 
observations industrial mathematically technique describing system 
formal meth hall myths believe certain extent projects 
ods people systematically specify develop verify system 
propagated media 
fortunately today myths held show box page basic public computer science formal methods re large system terms somewhat confused 
ers 
concern new clear despite years myths propagated people understand exactly receiving certain tacit formal methods acceptance system develop applied ment community 
reexamine hall cl ieee july myths box page fol lowing lead address new myths formal methods 
myth formal delay da process 
formal methods projects run notoriously schedule 
assume problem inherent formal methods irrational 
projects delayed specialists lacked ability lacked experience determining long development take 
estimating project cost major headache development team 
follow old adage estimate cost double re underestimate 
determining development time equally difficult ii fact intertwined 
number models developed cover cost estimation 
famous barry boehm model weights various factors organization history system development 
problem 
crux successful model cost development time estimation historical information details levels experience familiarity problem 
traditional development methods information available 
historical information projects formal development techniques scarce applied formal methods sufficient number projects 
surveys formal development highlights successes failures eventually provide information require 
publicized projects specialized domains producing data limited 
conventional developments applications domains process control provide useful data 
despite difficulties formal methods projects development time significantly reduced 
inmos floating point unit 
occam transformation system finished months ahead schedule application ibm cics system resulted percent savings development costs 
myth formal methods lack tools 
just late early case computer aided reduce bugs tool support seen way increase produc tivity accuracy formal develop ment 
projects place great sis tool support means coincidental follows trend expect result integrated support formal specifi cation just case sup port system development traditional structured methods 
formal methods incorporate tool support method 
category specification languages executable subsets obj formal methods incorporate theorem provers key component larch larch prover nqthm successor moore structured programming tools seen prover higher order logic sup way increase programmer pro ported hol hall myths revisited hall articulated myths formal methods myth guarantee 
myth formal program proving 
myth formal fbr safety critical myth met require high trained mathematicians 
myth increase cost development 
myth font users 
myth format wed real large scale software 
myths formal methods guarantee perfect software eliminate need testing myth serious ramifications system development naive users formal methods take seriously 
claims formal methods proving programs correct myth useful safety critical systems myth untrue quite detrimental 
successful applications non safety critical domains helped clarify points 
derivation simple formal specifications complex problems successful development formal methods projects budget myths application formal methods requires highly trained mathematicians myth increases development costs myth 
successful participation users system development formal methods ruled myth formal methods unacceptable users myth 
successful application formal methods large scale complex systems received media attention put beliefs formal methods real large scale systems myth 

ieee software pvs prototype verification system 
basic tools widely available today 
example supported pc sun type checking system available anonymous protocol noncommercial purposes fuzz commercial type checker runs unix dos 
integrated packages typesetting specification checking include log cambridge microsoft windows imperial software technology zola incorporates tactical proof system york software engineering tool suite supports refinement ada code 
mural system developed university supports construction vdm specifications refinements proof assistant users generate proof obligations verify internal consistency specifications 
fdr formal systems europe model checker csp ing sequential processes 
cri computer resources international produces associated toolset raise development method rigorous approach industrial software engineering comprehensive successor vdm 
icl uses higher order logic support specification verification motivated approach attention focused tailoring various generic theorem provers model specification languages implementation obj slow success reported hol toolset zermelo fraenkel set theory 
expect emphasis placed integrated support environments intended support mal development stages initial functional specifications design specifications refinement 
environments support specification animation proof properties proofs correctness 
toolkits integrated integrated programming support environments support version control configuration management development larger teams 
facilitate harmonious development addressing development process 
integrating environments exist toolkits formal represent steps right structured yb sl tool ox methods supports formal development vdm sl offer full expect cycle support 
standard type checkers static semantics checkers 
developers enter vdm sl specifications ascii 
interpreter supports executable constructs vdm sl allowing form tion specification testing ex specifications debugged integrated debugger testing information automatically generated 
pretty printer uses ascii input generate vdm sl specifica tions latex format 
toolkit core set integrated tools augment abrial method associated tool formal software development address ing industrial needs development process 
believe method represent generation formal methods true similar toolkits certainly form basis formal development envi ronments 
myth formal methods replace traditional engineering design methods 
major criticisms formal methods formal systems 
provide support formal notation mal specification language form deductive apparatus proof system fail support methodological aspects traditional structured development methods 
context engineering discipline method describes process conducted 
context system engineering method consists underlying development model language languages defined ordered steps guidance applying coherent manner called formal methods address issues 
support design principles traditional methods top design stepwise refinement place little emphasis underlying development model provide little guidance development proceed 
structured development methods model boehm spiral model hand generally support stages system life cycle requirements elicitation maintenance 
general underlying models recognize iterative nature system development 
formal development methods assume specification followed design implementation strict sequence 
unrealistic view development developer complex systems revisit requirements specification stages development 
hall disputes myths formal methods unacceptable users require significant mathematical ability traditional design methods excel requirements elicitation interaction users 
offer notations understood serve basis contract 
traditional structured methods severely limited offer ways reason validity specification certain requirements mutually exclusive 
discovered implementation implementation 
formal methods course july allow possibility reasoning requirements completeness interactions 
formal methods re placing traditional engineering design methods major area research integration structured formal methods 
integration leads true development method fully supports software life cycle lows developers formal tech niques specification design phases supporting refinement exe code proof properties 
result views system letting developers con aspects interest 
people suggest inte approach lets structured design serve basis insights formal specification 
idea clearly 
opponents argue ap proach allows structured design guide formal specification development severely restricts levels abstraction goes principles formal specification techniques 
proponents integration argue approach easier users unskilled formal spec ification techniques aids size complexity management pro vides way structure specifications approaches method integration vary running structured formal methods parallel formally specify ing transformations structured method notations formal specification languages 
success reported technique 
problem meth ods addressed different likelihood benefits highlighted low 
cases development teams ade interact 
example project underway british aerospace traditional formal develop ment methods parallel 
de velopment teams permitted communicate formal approach subject standards re views certified 
project aim investigate form methods better fit current development practices 
integrated approaches integration include translation structured systems analysis design methodology part saz project integration yourdon modern structured formalized manner integration various structured notations vdm csp 
approaches may great potential parallel approach applied realistic systems 
myth formal method apply 
formal methods applied equally hardware design software development 
motivations hol theorem prover verify parts viper microprocessor 
systems applied hardware verification include boyer moore esterel nuprl occam transformation system veritas proof tools 
model checking important checking hardware designs state space small techniques binary decision diagrams handle impressive number states 
convincing complete hardware verification exercise computational logic fm microprocessor verified gate level netlist representation boyer moore theorem prover 
netlist list component gates interactions 
inmos provides examples realworld industrial 
transputer floating point unit verified starting formalized ieee floating standard 
occam transformation system transform high level program low level microcode means proven algebraic laws 
parts new transputer pipeline architecture formalized csp defining formal methods highly publicized accounts formal methods application number known systems nuclear power plant uk ibm cics system airbus aircraft helped bring industrial application mal methods wider audience 
basic terms formal specification confusing 
example alternative definitions glossary issued ieee 
specification written approved accordance established standards 

specification written formal notation proof correctness 
accepted formal methods communi ty may widespread acceptance circles 
search ation csp online acronym database cited commercial sub routine package speed protocol control switching point com sequential choice people working formal methods 
search vdm reveal term vienna development method virtual dos machine virtual device may may desirable bed fellows 
ambiguity basic terminology formal notations practitioners trained result find easier ignore investigate 
ieee software formal methods resources electronic distribution lists formal methods related topics including forum request comlab ox ac uk vdm forum vdm forum request ac uk larch interest group larch interest request src dec com obj forum request comlab 
ox ac uk 
spawned comp specification electronic newsgroup read regularly people worldwide 
newsgroup devoted speci fication general camp 
specification regularly gen discussions formal methods traditional structured meth ods object oriented design camp 
software eng newsgroup 
established mailing list university idaho formal re st cs edu ad dresses formal methods gene notation new ez user group addresses edu issues re quest comlab ox ac uk 
addition newsletter checked correctness 
collection papers experts field covers applications detail approach hardware development hardware compilation 
allows high level program compiled directly netlist sim ple components tions 
required field programmable gate arrays allows done en software process devices circuit configured ac cording static ram contents chip route particularly ieee technical seg ment committee engineering complex computer systems ieee tsc request cl cam ac 
uk addresses issues related formal methods mal methods education 
anon ftp archives including online reg revised comprehensive bibliography 
global world wide web electronic hypertext system rapidly lar provides support formal methods 
useful starting point www 
comlab ox ac formal methods html provides pointers electronic archives ed formal methods lets download tools hol pvs 

proceed ings formal methods europe predecessors vdm symposium available nger verlag notes science series refinement workshops user meetings verlag computing series 
series contain pro ceedings shops conferences formal methods 
papers mal methods established number conferences regular conference devoted formal methods 
workshop industrial strength formal specification techniques may represent step direction see report pp 

mal methods gaining momentum main journals tions devoted formal meth ods europe uk specifically 
include forma 
aspects computing formal methods system design facs newsletter run formal methods europe british computer society special interest group formal aspects com puting science oth ers 
tbe computer software engineering journal information regularly publish articles related formal methods run plan run special issues subject useful rapid prototyping 
possible prove compilation process correct 
case burden reduced con need prove hardware correct separate compilation 
example mi compiled hardware describing cessor interpreter written high level language 
additions changes instruction set easily editing interpreter recompiling hardware additional proof far journals devoted specifically formal methods highly respected journals ieee transactions engineering journal oj tbe acm popular periodicals computer ieee communications acm regularly publish relevant articles 
ieee computer ieee coordinated successful issues formal methods 
january ieee special issue safety critical systems devoted considerable attention formal methods newly launched journal high integrity systems 

popular courses run logica cambridge praxis formal systems europe oxford university computing laboratory 
percent courses focus notation 
formal systems runs csp course uk 
denmark offers formal methods course vdm vdm 
correctness required 
approach provably correct hardware software codesign possible 
unified proof framework facilitate jl ration design trade offs interac tions hardware software formal manner 
point heard argument formal david parnas mcmaster uni elegant required 
untrue 
versity proposed standard software reasoning occasions safety systems nuclear power difficult 
lotos standardized formal methods sense overkill stations 
ontario hydro developed international situations number standards procedures zation standardization proposed able 
fact formal methods framework set draft standards vdm recommended system cor procedures develop standards set forth sound concern 
clearly ap ment 
standards proce structs associated plies safety security critical applies systems need want ensure system avoid catastrophic developed canadian licensees mandate formal methods formal semantics making standards easier read people specifications assuming pointless course conform consequences failure 
farthest reaching don standard formal methods moment 
reflect th pointless reflect desirable required 
standards bodies formal specification languages making standards unambiguous believe formal methods necessary system development deny opinions active users opinions developments active users 
evolved formal strongly recommended required ods 
formal methods certain classes certain classes applica outlets practitioners applications tions required discuss draft standards seek advice international electrotechnical solutions problems difficulties commission specifically mentions tem practitioners 
chief logic formal methods outlets various distribution lists ccs csp hol lotos obj vdm myth books periodicals conferences 
development safety crit list examples box ical systems 
european space formal methods supported 
page 
cy suggests vdm augmented time stories formal methods particular natural language descriptions start formal development vdm csp ccs taught specify safety critical solitary activity lone struggle 
uk undergraduate computer requirements 
advocates today support formal ence courses 
quite correctness review process 
media attention common nsf formal proof test go interest formal workshop sought establish ing 
uk ministry defence draft methods grown albeit curriculum teaching formal methods interim defence standards small base 
object ori undergraduate programs 
mandate extensive formal methods quickly hope regular event ma methods 
draft standard great com help establish formal forth guidelines requirements puter industry 
long gone days ods regular component include formal notation lone researchers worked devel versity curricula 
number specification safety critical com oping appropriate notations calculi 
ally courses available ponents analysis compo development popular general tailored client consistency completeness 
ma methods owes needs 
safety critical software tions people method validated verified includes originators 
cases researchers ma proofs rigorous informal practitioners extended languages myth correctness proofs con support particular needs adding static dynamic analysis 
useful unsound op formal methods people draft standard deals data structures extending formal methods 
classification hazard analysis languages module widespread belief electronic components object oriented concepts 
ponents formal methods apply defense equipment mandates certain trade aspects system development 
formal methods 
expressiveness language truth 
canada atomic energy control levels abstraction supports 
supporters board commissioned conjunction making language expressive fa ma methods recognize ap ieee software proaches better 
lines code thousands pages coming collection papers user interface design example specifications 
clearly appro play part describing difficult developer de priate apologies einstein system de ma methods useful termine formalize exact re velopment formal neces scale 
human computer inter sary mov formal 
research required action outset project 
formal methods develop formal methods 
cases user interface config develop number support tools example esprit basic various color combinations conventional development methods search project provably correct certain conditions case tool de terns investigating theoretical denote undesirable situation 
scribed hall 
formal methods techniques allow great difficulty de help re formal development systems user interface verse engineering analysis toolset fied framework requirements look feel 
appropriateness cobol lloyd register 
specification program hardware 
particular interface subjective matter projects addition working group really amenable formal defining reusable software architectures industrial academic partners 
sev greatly simplified decomposition established 
joint meetings beer somewhat successful approaches function components tween project working groups formal specification user interfaces protocols interaction com years allows free general conformance testing falls ponents 
flow ideas 
hope domain informal reasoning 
best knowledge ideas indus areas formal methods oriented collaborative project possible formalization im extensively develop formal meth 
practical resources time ods support tools described myth 
formal methods panacea money 
successful formal methods exceptions vdm sl approach projects involve application toolbox addition formally help improve system reliability 
ma methods critical portions sys developed proof checker hol 
quote bbc radio intern development 
rarely littlewood ma methods applied aspects centre software reliability city system development 
ow technology transfer pro university london ibm cics project ii cess formal methods research 
want build systems cited major successful application practice facilitated 
start ultra high reliability provide formal methods tenth real links industry complex functionality want entire system sub academia required success guarantee going formal techniques ful formal methods bet high reliability 
involved hundreds thousands ter publicized 
edited forth 
acknowledgments anthony hall inspiring article authoring fall prentice hall hemel uk appear www 
myths formal methods jonathan bowen funded uk comlab ox ac uk archive formal methods physical sciences research council epsrc 
case ed john wiley 
mike hinchey funded icl 
sons newyork 

france integrating structured analysis formal pp 

specification techniques dec 
hall myths formal methods ieee ware sept 
mechanized reasoning hardware design hoare pp 
gordon eds prentice hall englewood cliffs nj 

gibbs software chronic crisis sn nt sept 
bowen formal methods safety critical standards pm 
pp 

ware engineering standards symp ieee cs press los alamitos 
boehm economics prentice hall englewood calif pp 

cliffs nj 

bowen safety critical systems formal methods 
hart craigen ralston experience formal standards ware engineering july pp 

methods critical systems jan pp 


formal hinchey bowen eds 
dix forma systems academic calif 
press san diego july jonathan bowen senior researcher oxford university computing laboratory 
worked field computing industry academia 
currently manages esprit wg working group european partners working area provably correct hardware software codesign 
interests include formal specifica tion provably correct compilation rapid pro logic programming tion hardware compilation safety critical sys tems online museums 
bowen received ma engineering science oxford univer sity 
won iee charles premium award 
chairs 
user group conference chair zum international conference users member ieee computer society acm 
euromicro 
mike hey researcher univer sity cambridge computer laboratory professor real time computing tory new jersey institute technology 
research interests include formal specification formal methods real time systems concurrency method integration case visual program ming environments 
published widely various aspects software engineering author editor books software development formal methods 
received bsc computer science university limerick ireland msc computation oxford university phd computer science university cambridge 
user group program chair zum tional conference users editor newsletter tbe ieee computer society technical segment committee engineering complex computer systems 
member ieee acm ams associate fellow institute 
address questions article bowen oxford university computing laboratory wolfson building rd ox qd uk jonathan bowen comlab ox ac uk comlab ox ac uk ou ple jonathan bowen html hinchey university cambridge computer laboratory new museums site pembroke st cambridge cb qg uk mike hinchey cl cam ac uk www cl cam ac uk users ieee software contact local chair victor pl ent 
barcelona tek fax mail ibm net organized esec steering committee hosted support fifth engineering tutorials domain analysis reuse practical approach prieto diaz fairfax usa software iterative development process philippe vancouver canada software design implementation components mehdi jazayeri georg austria computer security santa barbara usa role formal specifications software test hans martin kiel germany keynote speakers object oriented databases needed bancilhon france object oriented databases needed meyer usa personal commitment software quality humphrey usa panel trends open distributed platforms chair leon spain papers big tourist resort mediterranean coast km sw barcelona 
please register 
early registered delegates pay get better accommodation 
september peak season 
executive chair botella barcelona spain program chair wilhelm schafer paderborn germany tutorial chair gregor engels leiden netherlands information www fib upc es esec html 
