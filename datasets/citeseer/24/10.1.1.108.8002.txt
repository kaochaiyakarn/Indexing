automatically personalizing user interfaces daniel weld corin anderson pedro domingos oren etzioni krzysztof gajos lau steve wolf man department computer science engineering university washington box seattle wa usa todays computer interfaces size fits 
users little programming experience limited opportunities customize interface task habits 
furthermore overhead induced generic interfaces proportionately greater small form factor pdas embedded applications wearable devices 
automatic personalization may greatly enhance user productivity requires advances customization explicit user initiated change adaptation interface initiated change response routine user behavior 
order improve customization easier users direct changes 
order improve adaptation better predict user behavior navigate inherent tension dynamism automatic adaptation stability required order user predict computers behavior maintain control 
surveys decade customization adaptation university washington distilling lessons learned 
today software mass produced plethora features designed satisfy user 
different people working different tasks different styles way organize features way essential functionality convenient 
consider word processing example people automatic line numbering legal secretaries couldn survive 
shift away desktop pervasive computing greatly exacerbates problem inspired software reasons 
shift quiet office ubiquitous introduces complex environmental factors increase differences usage patterns distinct individuals single user require different features depending context 
second form current address google parkway mountain view ca current address ibm tj watson research center box yorktown heights ny factor mobile devices enormously variable desktop machines example ratio large small desktop display size varies factor cell phone 
wisdom user centered design documented lewis 
user needs device characteristics diverge traditional design methodology intensive user studies unscalable 
user deserves personalized interface designed device hand providing simple access commands features need aren ethnomethodologists designers manage interpret respond studies 
resources scale number users users computing devices 
term adaptation denote personalization automatically performed interface explicit user directives 
customization mean personalization directly requested user 
argument adaptivity customization scalable approaches personalization 
interfaces automatically adapt capabilities device hand network connectivity individual user activities location context users able guide control adaptation variety customization mechanisms 
customization adaptation course existing desktop applications allow limited customization letting user select menus visible add buttons toolbars define macros add custom functionality scripting languages visual basic 
customization important users fail customize effectively 
users comfortable macros regular expressions scripting languages programmers busy invest necessary time order speed sessions 
challenge create improved methods users direct interface rearrange functionality appearance recover inappropriate adaptations 
similarly systems support limited adaptation users don appreciate 
defaults remember option directory selected simple helpful microsoft smart menus office invited speakers assistant guesses fall far mark 
danger adaptivity potential create confusing inconsistency rob user control 
challenge develop datamining algorithms accurately predict user behavior navigate tension rapid adaptation little inefficient seek interface metaphors increase user control 
deep deployment successful customization adaptation methods maximize benefit broad range applications 
ideally deep deployment uniform layer operating systems level records clickstream data applications supports ubiquitous personalization 
interfaces described declarative representations developed model interface community foley puerta deploying personalization methods os layer bring advantages 
consistency behavior applications 
second knowledge user activity application may improve adaptation interface 
third cross application personalization may offer highest benefit users common tasks involve patterns connecting programs 
outline rest describe sequence projects making progress vision 
underlying techniques range continuum user expository progression follows vector customization pure adaptation 
way compare related endeavors summarize lessons learned 
customization command internet softbots project etzioni weld marked genesis intelligent user interfaces university washington 
acting personal assistant softbot supported qualitatively different kind human computer interface 
users able highlevel requests softbot search weld inference etzioni knowledge determine satisfy request 
furthermore softbot able tolerate recover ambiguity omissions errors requests 
core softbot handle goals specified expressive subset order logic modal operators handling time distinguishing information gathering goals requested state changes golden weld 
labeled softbot goal oriented interface human requests specified user wanted softbot responsible deciding satisfy request 
users uncomfortable logical notation provided forms oriented interface front 
unfortunately forms approach unscalable goal specification challenge users 
response investigated research directions reliable natural language interfaces popescu yates programming demonstration lau 
programming demonstration hard users specify goals natural objective design interface watch user normal behavior help appropriate 
case repetitive tasks amounts programming demonstration pbd 
course pbd studied extensively cypher previous systems heuristic domainspecific 
sought domain independent approach suitable deep deployment offered expressiveness scripting language ease macro recording verbatim recorder accompanying brittleness 
pbd interface resembles keystroke macro interface generalizes demonstrated actions robust program different situations 
useful think pbd interface having components segmentation determines user executing automatable task trace induction predicts user doing prefix activity trace facilitation manages user interaction aid user completing task 
focus trace induction phase 
formalized pbd trace induction learning problem follows 
repetitive task may solved program loop iteration solves instance task 
pbd system infer correct program demonstration iterations 
action move select copy paste 
user performs demonstration causes change state application defines mapping editor states 
modeled problem inferring function maps state observations state prior user action 
pbd presents particularly challenging machine learning problem users extremely reluctant provide training instances 
learner able generalize small number iterations 
order useful wide range programs learnable 
problem combines weak bias demand low sample complexity 
solution called version space algebra lets application designer combine multiple strong biases achieve weaker tailored application reducing statistical bias increase variance 
addition learning system able interact gracefully user presenting comprehensible hypotheses user feedback account 
version space algebra addresses issue 
version space algebra originally developed concept learning version space subset hypothesis space consistent set training instances mitchell 
partial order candidate hypotheses may represent version space implicitly boundary sets manage updates efficiently 
version space algebra defines transformation operators union join combining simple invited speakers algebraic specification version space smartedit program 
version spaces complex ones 
developed probabilistic framework reasoning likelihood hypothesis composite version space 
constructing library reusable domainindependent component version spaces combined set primitive spaces form bias learning text editing programs smartedit pbd implementation 
smartedit implementation verified utility version space algebra pbd smartedit emacs editor 
user notices perform repetitive task clicks button start pbd recorder 
instance task clicks button mark demonstration 
smartedit initializes version space recorded state sequence training example 
user continues type smartedit updates version space action 
parallel smartedit displays action thinks user perform confidence prediction 
probabilities calculated voting version space 
user confident smartedit learned procedure may execute single step fully autonomous mode 
explored number ways structuring user dialog learner including decision theoretic control wolfman aspects facilitation require study 
version space algebra provides smartedit benefits efficient methods incremental update voting explicit enumeration version space lau flexibility 
varying algebraic formulation hypothesis space experimented version spaces learning single loop programs traces varying amounts segmentation information learning programs multiple nested loops 
experiments observations empirical studies validated approach range scenarios bibliographic reformatting html conversion information extraction 
show program generalizes correctly invited speakers scenarios learned quickly training examples 
informal user study confirmed smartedit usability usefulness showed novice smartedit users perform tasks quickly concisely pbd 
learned negative lesson started widespread distribution despite incorporation emacs relatively people smartedit frequently 
conclude overhead macro recorder interface relatively high 
repetitive tasks short easier manually avoid cognitive load complex customization 
similar results users customize relatively little mackay customization facilities complex 
conjecture widespread pbd adoption requires automatic segmentation adaptation mechanisms described section may provide capability 
adapting user behavior ai community long standing interest adaptive interfaces 
calendar apprentice dent machine learning predict meeting location durations 
research similar email classification maes kozierok led important principle incorporation imperfect behavioral predictions interface defaults effective way minimize cost user inevitable poor predictions 
horvitz decision theoretic framework horvitz resulted additional principles graceful degradation service prediction expected utility disambiguation dialogs function user time attention timeouts minimize cost prediction errors 
adaptive interfaces focussed initially website design perkowitz etzioni led algorithms datamining web logs discover aggregate patterns powered automatic creation index pages perkowitz etzioni 
concentrated mining individual behavior patterns generating personalized sites display small wireless devices anderson emphasis information goal seeking behavior common wireless internet general browsing surfing 
proteus system modeled adaptation search space possible websites 
site modification operators included highlighting text adding shortcut links eliding parts pages 
adopted decision theoretic approach guiding search expected utility calculations model cost manipulating small pda screen fetching pages slow wireless connection 
small user study revealed important lessons 
part adaptations ones proteus suggested useful shortcuts elided content useless user 
cost deleting important parts page high 
reweighting utility function led conservative behavior ironic office assistant violates horvitz principles developed microsoft research 
main dialog box print command clicking properties button default setup tab displayed clicking features tab user select double sided printing user click ok twice 
problem accurate behavior prediction central interface adaptation discuss section 
second problem stemmed fact frequently users didn find shortcut link proteus added appropriate place 
shortcut naming usually blame raised general issue saliency discuss section 
predicting user behavior high quality adaptation requires ability learn extremely accurate model user behavior 
comparison existing techniques showed mixture markov models best predictive power anderson 
shortcuts generated mixture model saved users navigational effort 
models performed poorly data sparse models situations user exploring new parts interface performing task similar performed frequently context shopping cart checkout new store 
remedy problem developed relational markov models rmms generalization markov models overlays relational structure states anderson 
intuitively rmms markov models probabilistic relational models prms baysian networks friedman 
rmms generalize markov models partitioning states classes class associated ary relation members class correspond instantiated distinct ground values 
domain variable hierarchically structured smoothing called shrinkage carried cross product hierarchies 
rmms possible generalize observed states 
example suppose user surfing commerce web site goes page cd page containing biography 
ordinary markov model infer user visiting page pearl jam cd rmm able infer user go pearl jam biography 
rmms effective learning possible domains large heterogeneous state spaces sparse data 
experiments academic commerce websites show rmms trained instances perform markov models trained instances anderson 
currently extending rmms incorporating structure way dynamic bayes nets extend markov models see 
partitioned dynamicity experience unnoticed shortcuts showed saliency essential adaptive mechanism introduces new commands options interface ensure user finds 
furthermore mechanism take care obscure important existing functionality 
way increase saliency minimizing cognitive associated adaptivity partition dynamism segregate dynamic static areas interface 
number designed adaptive interfaces exhibit property 
example news stories advertisements yahoo change continuously layout fixed adaptation causes little distress users 
contrast automatic menu shortening feature microsoft office violates partitioned dynamicity location commands menus changes unpredictably 
powerpoint xp insert symbol command provides example 
previous versions required long sequence clicks select correct font navigate desired symbol dialog box xp version symbols area 
conjecture partitioned dynamicity useful general principle adaptation interfaces 
invited speakers state machine printing dialogs example user path darkened 
users accustomed changes dynamic area changes don disturb conceptual model norman 
existing navigational patterns remain unchanged users maintain control adaptation unhelpful 
alternative dual interface approach shares benefits partitioned dynamicity trades convenience screen real estate 
example adapting desktop dialogs believe proteus architecture developed adaptive websites useful desktop application setting 
story board example suppose user wishes print word document 
figures show requires user actions 
user presses ctrl print current document 
click properties yields setup options 
clicking features tab uncovers sided printing options click selects book style duplex 
ok clicked twice close properties window confirm printing 
individual user executes pattern hundreds times choosing duplex printing system recognize provide shortcut 
shows possible result main screen partitioned dynamicity duplex options new default value added 
example assume user chosen tablet duplex value 
shortcut system deleted value casting duplex variable boolean 
result duplex option rendered simple space efficient checkbox 
course user desired tablet format windows office xp hp printer 
course design particular interaction result today software engineering process similar designs exist adaptation promising invited speakers adaptation duplex printing default visible main print dialog 
discarding infrequently tablet value variable cast boolean simple space efficient check box widget 
find unchanged features tab 
restricting state variable set valid values type casting just representative transformations exist 
note possible perform transformations interface represented declarative language 
section discusses additional benefits representation 
adapting device characteristics trend mobile ubiquitous computing resulted device form factors input mechanisms nearly impossible designer target manually 
furthermore shown previous section parts interface may generated dynamically response particular usage patterns 
building automated solution called supple 
researchers laid useful foundations 
starting foley ai model ui community developed declarative interface representation languages supple uses extension representation developed pebbles nichols ai 
researchers explored methods compiling declarative ul representation concrete form specific target device 
example pebbles uses hand constructed decision tree task approaches include hierarchical templates szekely ai stylesheets schreiber tools facilitating argue problem simply solved mru default options duplex restructuring dialogs 
changing defaults dangerous visible user 
different pda screen resolutions supple generates different interfaces household controller 
manual design eisenstein 
method higher level encoding design terms design patterns lin landay 
contrast adopt theoretic framework search design highest expected utility satisfy device constraints 
supple prototype focusses screen size constraints uses utility function models expected ease interface operations widget 
multiple interface actions necessary complete task tabs selected panes navigated confirmation buttons pressed costs combined linearly 
shows different interfaces possible generated supple deemed optimal differing amounts available screen space 
current supple implementation accepts input arbitrary probability distribution command usage framework supports user adaptation described previous section 
example supple independence assumption regarding command practice people commands sequence human designers recognize corresponding widgets 
computing expected utility interface relative recorded trace individual user commands supple able automatically duplicate form design optimization personalized manner 
effective personalization requires improved methods adaptation change implicit user behavior customization change guided explicit user requests 
interfaces automatically adapt capabilities device hand network connectivity user activities location context 
wish provide customization guidance users able control adaptation process level 
briefly surveyed projects university washington investigating issues codified emerging principles users find hard specify goals effective induce user behavior 
version space algebra allows application designer combine multiple strong biases achieve weaker tailored application reducing statistical bias increase variance 
benefits model ui design long recognized foley increasingly apparent declarative models essential set transformations currying casting facilitate adaptation 
adaptive mechanisms imperfect cost users errors considered alongside advantages 
theory provides powerful framework analysis horvitz utilities learned user behavior derived device models 
certain interface mechanisms defaults automatic timeouts minimize cost errors increase value adaptation 
partitioned dynamicity offers way manage adaptivity minimizing user cognitive load 
way enhance user experience improving prediction user behavior 
rmms smooth abstraction lattice defined relational structure exceptionally accurate predicting sequential behavior user action sparse data 
acknowledgments james landay helpful discussions 
research funded part office naval research invited speakers national science foundation iri iis dl career award 
anderson anderson domingos weld 
adaptive web navigation wireless devices 
ijcai aug 
anderson anderson domingos weld 
personalizing web sites mobile users 
www may 
anderson anderson domingos weld 
relational markov models 
kdd aug 
cypher allen cypher editor 
watch programming demonstration 
mit press 
dent etal dent mcdermott mitchell zabowski 
personal learning apprentice 
aaai pages july 
eisenstein eisenstein vanderdonckt puerta 
applying model techniques development uis mobile computers 
iui pages 
etzioni weld etzioni weld 
interface internet 
acm 
etzioni etal etzioni golden weld 
sound efficient closed world reasoning planning 
artificial intelligence january 
foley foley kim kovacevic murray 
defining interfaces high level abstraction 
ieee software jan 
friedman friedman getoor koller 
learning probabilistic relational models 
ijcai aug 
golden weld golden weld 
representing sensing actions middle ground revisited 
kr pages 
horvitz eric horvitz 
principles mixed initiative user interfaces 
chi pages 
acm press may 
lau lau pedro domingos daniel weld 
version space algebra application programming demonstration 
icml pages june 
lewis lewis 
task centered user interface design practical 
university colorado boulder 
lin landay lin landay 
tool early stage design prototyping user interfaces 
th international conference distributed multimedia systems pages 
mackay mackay 
triggers barriers customizing software 
chi pages 
acm press 
invited speakers maes kozierok pattie maes kozierok 
learning interface agents 
aaai pages 
baecker booth 
evaluation multiple interface design solution software 
chi 
mitchell mitchell 
generalization search 
artificial intelligence 
nichols nichols myers higgins hughes harris rosenfeld 
generating remote control interfaces complex appliances 
uist pages 
norman norman 
invisible computer 
mit press 
perkowitz etzioni perkowitz etzioni 
adaptive web sites challenge 
ijcai aug 
perkowitz etzioni perkowitz etzioni 
adaptive web sites conceptual framework case study 
artificial intelligence 
popescu popescu etzioni kautz 
high precision natural language interfaces databases graph theoretic approach 
iui jan 
puerta puerta 
mecano project comprehensive integrated support model interface development 
pages june 
domingos weld 
dynamic probabilistic relational models 
ijcai aug 
schreiber schreiber 
specification generation user interfaces boss system 
pages 
szekely szekely luo neches 
interface builders model interface tools 
interchi pages 
acm press 
weld weld 
planning control software agents 
aips 
wolfman steven wolfman lau pedro domingos daniel weld 
mixed initiative interfaces learning tasks smartedit talks back 
iui pages santa fe usa january 
yates yates etzioni weld 
reliable natural language interfaces household appliances 
iui 

