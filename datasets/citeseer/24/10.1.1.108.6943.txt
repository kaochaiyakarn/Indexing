evaluation probabilistic queries imprecise data constantly evolving environments cheng prabhakar hong kong polytechnic university hung hom kowloon hong kong email comp edu hk purdue university west lafayette usa email uci edu cs purdue edu sensors employed monitor continuously changing entities locations moving ob jects temperature 
sensor readings reported database system subsequently answer queries 
due continuous changes values limited resources net bandwidth battery power database may able keep track actual values entities 
queries old values may produce incorrect answers 
degree uncertainty actual data value database value limited place confidence answers queries 
generally query answers augmented probabilistic guarantees validity answers 
study probabilistic query evaluation uncertain data 
classification queries nature result set 
class develop algorithms computing probabilistic answers provide efficient indexing numeric solutions 
address important issue measuring quality answers queries provide algorithms efficiently pulling data relevant sensors moving objects order improve quality executing queries 
extensive experiments shorter version appeared sigmod www cs purdue edu homes papers sigmod pdf 
manuscript contains new materials new section section efficient evaluation probabilistic queries disk uncertainty indexing numerical methods examined new sets experimental results section realistic simulation model method time series analysis obtaining probability density function uncertainty model appendix enhancement probability query evaluation algorithms handle special cases uncertainty appendix discussions section detailed examples 
corresponding author 
performed examine effectiveness data update policies 
index terms data uncertainty constantly evolving environments probabilistic queries query quality entropy data caching sensors perform continuous monitoring status environment 
sensor readings reported application making decisions answering user queries 
example air conditioning system building may employ temperature sensors adjust ture office 
aircraft equipped sensors track wind speed radars detect report aircraft location military system 
applications usually include database server sensor readings sent 
limited network bandwidth battery power imply practical server record exact status entity monitors time instant 
particular value entity temperature location monitored constantly evolving recorded data value may differ actual value 
correct value sensor reading known update received database estimate actual state environment times 
specifically inherent uncertainty associated constantly changing sensor data received 
recorded temperature possible current temperature bound current temperature example sensor data uncertainty 
inherent uncertainty data affects accuracy answers queries 
illustrates query determines sensor reports lower temperature reading 
data available database query returns result 
reality temperature readings changed values case correct answer 
sistla identify type data dynamic attribute value changes time explicitly updated database 
example database incorrectly assumes recorded value actual value produces incorrect results 
uncertainty data providing meaningful answers appears futile exercise 
argue applications values objects change drastically short period time degree rate change object may constrained 
example temperature recorded sensor may change degree minutes 
information help solve problem 
consider example 
suppose provide guarantee time query evaluated actual values monitored deviations dx dy respectively shown 
information state confidence yields minimum value 
general uncertainty objects may allow identify single object minimum value 
example possibility recording minimum value reading may lower similar situation exists types queries request numerical value lowest temperature reading providing single value may infeasible due uncertainty object value 
providing definite answer database associate different levels confidence answer probability uncertainty queried objects 
idea probabilistic answers queries uncertain data constantly changing database sensors moving object database briefly studied wolfson :10.1.1.108.6943
considered range queries context moving object database 
objects assumed move straight lines known average speed 
answers queries consist objects identities probability object located specified range 
cheng considered problem answering probabilistic nearest neighbor queries moving object database model 
extend notion probabilistic queries cover broader class queries include aggregate queries compute answers number objects 
discuss importance nature answers requested query identity object versus value 
example show significant difference queries object minimum temperature versus minimum temperature 
proposed uncertainty model general adapted easily vast class applications dealing constantly changing environments 
techniques compatible common models uncertainty proposed :10.1.1.108.6943
probabilities answer allow user place appropriate confidence answer opposed having incorrect answer answer 
depending application may choose report object highest probability having minimum value objects probability exceeds minimum probability threshold 
proposed able models 
answering aggregate queries minimum challenging range queries presence uncertainty 
answer probabilistic range query consists set objects non zero probability object lies query range 
object probability determined uncertainty object value query range 
aggregate queries interplay multiple objects critical 
resulting probabilities influenced uncertainty objects attribute values 
example probability minimum value affected relative value bounds investigate queries evaluated aid velocity constrained index numerical techniques 
probabilistic answer reflects certain level uncertainty results uncertainty queried object values 
uncertainty objects reduced eliminated completely uncertainty result improves 
example knowledge value object arguably state falls query range probability 
hand value known perfectly state confidence object falls outside query range 
quality result measured degree ambiguity answer 
need metrics evaluate quality probabilistic answer 
propose metrics evaluating quality probabilistic answers 
shall see different metrics suitable different classes queries 
quality query result may acceptable certain applications definite result may desirable 
poor quality directly related uncertainty object values possibility improving results delay query quality improves 
unreasonable solution due increased query response time 
database request updates objects sensors solution incurs heavy load resources 
propose request updates objects queried furthermore improve quality query result 
heuristics experimental evaluation 
policies attempt optimize constrained resource network bandwidth server improve average query quality 
examine relationship network bandwidth usage probabilistic queries scenario queries contradicting properties concurrently executed 
noted imprecision query answers inherent problem due uncertainty actual values dynamic attribute contrast problem providing approximate answers improved performance accuracy traded efficiency 
sum contributions general data model capture uncertainty constantly evolving data broad classification probabilistic queries uncertain data efficient evaluation techniques probabilistic queries metrics quantifying quality answers probabilistic queries policies improving quality probabilistic answers resource constraints experimental results performance probabilistic queries 
rest organized follows 
section describe general model uncertainty concept probabilistic queries 
sections discuss algorithms evaluating different kinds probabilistic queries 
section indexing numeric methods handling practical issues query evaluation discussed 
section discusses quality metrics appropriate queries proposes update policies improve query answer quality 
experimental evaluation effectiveness update policies section 
section discusses related section concludes 
probabilistic queries section describe model uncertainty considered 
generic model accommodate large number application paradigms 
model introduce number probabilistic queries 
uncertainty model popular model uncertainty dynamic attribute point time actual value certain bound reported value 
actual value changes sensor reports new value database possibly changes example describes moving object model location object dynamic attribute object reports location server deviation reported location exceeds threshold :10.1.1.108.6943
model assumes attribute value changes known speed speed may change time value reported 
models include uncertainty 
example exact speed direction movement object known 
model requires updates server object speed direction changes 
purpose discussion exact model uncertainty unimportant 
required time query execution range possible values attribute interest known 
interested queries dynamic attribute set database objects assume real valued attribute models algorithms extended domains integer higher dimensions uncertainty queries 
denote th object ti value attribute ti ti 

treat ti independent continuous random variables 
uncertainty ti characterized definitions pdf abbreviate term probability density function definition uncertainty interval ti time instant denoted ui interval li ui li ui real valued functions conditions ui li ti li ui hold 
definition uncertainty pdf ti time denoted fi pdf random variable ti fi ui 
fi pdf property ui li fi dx 
definition specifies uncertainty ti time instant terms closed interval probability distribution ti interval 
notice definition specifies uncertainty interval evolves time nature pdf fi inside uncertainty interval 
requirement fi value outside uncertainty interval 
usually scope uncertainty determined recorded value time elapsed update application specific assumptions 
example may decide ua contains values distance reported value time update obtained maximum rate change value 
trivial pdf uniform distribution ti uniformly distributed inside ui 
words fi equals ui li ti ui assuming ui li 
noted uniform distribution represents worst case uncertainty uncertain scenario uncertainty interval 
example pdf gaussian distribution 
general exact pdf application dependent 
pdf known application accurate pdf required refer readers appendix simple method pdf estimation 
general pdf expressed arithmetic expressions modeled form histograms 
classification probabilistic queries classification probabilistic queries examples common representative queries class 
identify important dimensions classifying database queries 
queries classified nature answers 
entity query returns set objects satisfy condition query 
value query returns single value examples include querying value particular sensor computing average value subset sensor readings 
second criterion classifying queries aggregation involved 
term aggregation loosely refer queries interplay objects determines result 
definitions letter entity queries value queries 

value non aggregate class simplest type query discussions 
returns attribute value object answer involves aggregate operators 
example probabilistic query class definition probabilistic single value query object tk returns pdf tk example wind speed recorded sensor observe definition expresses answer terms bounded probabilistic value single value 
notice dx 
entity non aggregate class type query returns set objects satisfies condition query independent objects 
typical example query returns set objects satisfying user specified interval definition probabilistic range query erq closed interval erq returns set tuples ti pi pi non zero probability ti 
erq sensor networks location monitoring 
example erq ask sensor return temperature values user specified interval 

entity aggregate class third class query returns set objects satisfy aggregate condition 
definitions typical queries class 
definition probabilistic minimum maximum query eminq eminq returns set tuples ti pi pi non zero probability ti minimum maximum value objects definition probabilistic nearest neighbor query value returns set tuples ti pi pi non zero probability ti minimum objects queries wide application aggregating information data streams sensor networks 
example may want acquire identity sensor yields maximum temperature value region monitored sensors 
nearest neighbor queries widely location databases 
notice queries condition ti pi holds 

value aggregate class final class involves aggregate operators return single value 
examples include query class entity value aggregate eminq vminq non aggregate erq answer probabilistic ti pi pi answer non probabilistic ti table classification probabilistic queries 
definition probabilistic average sum query returns random variable average sum values objects pdf satisfying definition probabilistic minimum maximum value query vminq vminq returns random variable minimum maximum value objects pdf satisfying typical example queries inquire minimum pressure value sensors monitoring sensor network 
aggregate queries return answers form probabilistic distribution closed interval dx 
table summarizes basic properties probabilistic queries discussed 
illustrating difference probabilistic non probabilistic queries row table lists forms answers expected probability information augmented result queries non probabilistic version query returns object maximum values recorded values ti seen probabilistic queries provide information answers non probabilistic counterparts 
example 
illustrate properties probabilistic queries simple example 
readings sensors different uncertainty interval queried time 
suppose set database objects record information sensors object attribute store sensor reading 
assume reading actual value chance located point uncertainty interval actual value chance lying outside interval fsi 
bounded uniform distribution function 
denote uncertainty interval si time lsi 
value 
non probabilistic version may return object values equal maximum recorded value bound current value illustrating probabilistic queries 
applied time give result ls ls 
suppose erq represented interval invoked time find reading inside uncertainty intervals derived readings time respectively :10.1.1.39.8267:10.1.1.108.6943
reading inside probability satisfying erq 
reading outside probability located inside 
partially overlap chance satisfying query 
example result erq 
eminq issued time 
observe high probability having minimum value large portion smaller value 
reading high chance located portion fs uniform distribution 
reading chance yielding minimum value values inside smaller 
result eminq example 
hand return result value higher readings sensors assured yields maximum value 
query value shown results 
value aggregate query applied scenario bounded pdf returned 
issued result distribution ls ls ls ls interval sum readings sensors 
result pdf ls ls ls ls 
results vminq probability distributions ls ls respectively values ranges non zero probability value satisfying queries 
evaluating entity queries section examine probabilistic entity queries introduced section answered 
start discussion erq followed complex algorithm answering 
show algorithm answering easily changed eminq 
evaluation erq recall erq returns set tuples ti pi pi non zero probability ti interval 
evaluate erq time instant object pi computed follows amount overlap oi ui oi ui 
oi zero width assured ti lie pi ti included result 
calculate probability ti inside integrating fi oi pi oi fi dx return result ti pi pi 
evaluation appendix discusses special case 
illustrating algorithm 
processing involves evaluating probability attribute object ti closest nearest neighbor value case erq longer determine probability object independent objects 
recall returns set tuples ti pi pi denotes non zero probability ti minimum value ti 
set objects considered set tuples returned query 
algorithm consists phases pruning bounding evaluation 
phases filter objects values chance closest final phase evaluation core solution ti remains probability ti nearest neighbor computed 

ui ni li ui ni li ii 
ni ui li ui fi ui fi li 
min fi 
ni ti 
return algorithm pruning phase 

pruning phase 
consider uncertainty intervals 
smallest difference larger largest difference immediately conclude part answer actual value far possible chance closer observation eliminate objects algorithm shown 
algorithm ni fi record closest farthest possible values ti respectively 
steps assign proper values ni fi 
inside interval ui ni taken point 
ni li ui depending value closer fi assigned similar manner 
phase contains minimal set objects considered query value ti closest shows recorded values ti time uncertainty intervals shown 
see removed consideration uncertainty interval completely closer 
shows result phase 

bounding phase 
object need look portion uncertainty interval located farther conceptually drawing bounding interval length centered portion uncertainty interval outside ignored 
shows bounding interval length illustrates result phase 

evaluation phase 
bounding interval aim calculate object probability nearest neighbor pruning phase ni point ui nearest call ni near distance ti ni 
denote interval length centered iq 
pi probability ti located inside iq pri pdf ri ri ti 
presents algorithm 
note ti uncertainty ui exactly equal ti evaluation phase algorithm needs modified 
issue discussed appendix rest discussions assume non zero uncertainty 


sort elements ascending order ni rename sorted elements 


pi nj nj ii 
pi pi ti pi 
return pri pk dr algorithm evaluation phase 
evaluation pi pri 
understand evaluation phase works crucial know obtain pi 
introduced pi probability ti located inside iq 
illustrate evaluation pi 
ni return 
fi return 
oi ui iq 
return oi fi dx computation pi 
need compute pri pdf denoting ti equals upper lower bound iq 
pi differentiable function pri derivative pi 
evaluation pi 
explain pi probability ti closest computed 
prob probability ti ti min tk 
equation outlines structure solution pi ni prob dr correctness equation depends correctly consider probability ti nearest neighbor possible value interval ui sum probability values 
recall ni represents shortest distance ui bounding interval need consider 
equation expands width interval iq length mid point ni 
value ui lie upper bound lower bound iq ni 
words gradually increasing width iq visit value ui evaluates probability ti ti nearest neighbor rewrite formula pri pk follows pi ni ni prob ti prob tk dr pi pk dr observe pk term registers probability tk farther ti efficient computation pi 
note pk value nk 
means nk pk tk effect computation pi 
equation evaluated numerically considering objects term integration step unnecessarily expensive 
technique reduce number objects evaluated 
method sorts objects near distance integration interval ni broken number intervals points defined near distance objects 
probability object having value closest evaluated interval way similar equation consider tk non zero pk 
pi equal sum probability values intervals 
final formula pi pi nj nj pri pk dr considering objects term equation handles objects interval nj nj 
optimization shown 
example 
previous example illustrate evaluation phase works 
objects 
captured shows result objects sorted ascending order near distance axis absolute difference ti equals probability pi ti nearest neighbor equal integral probability ti nearest neighbor interval ni 
illustrating evaluation phase 
see evaluate uncertainty intervals computing 
equation tells evaluated integrating 
objects sorted ni need consider 
split sub intervals 
need consider uncertainty intervals range range range 
issues numerical integration compute equation discussed section 
nearest neighbor require inside farther condition captured pri dr second represented pk equation 
probability nearest neighbor pr dr final value equal sum probability values intervals pr dr pr pk dr pr pk dr evaluation eminq answering eminq equivalent answering equal minimum lower bound ui modify algorithm solve eminq evaluating minimum value li uncertainty intervals 
set value 
obtain results eminq algorithm 
solving symmetric solving eminq set maximum ui 
evaluating value queries evaluation evaluating simple definition object tk needs considered 
suppose executed time answer returned uncertainty information tk time lk uk fk lk uk 
evaluation consider case want find sum random variables uncertainty intervals objects 
notice values answer non zero probability values lie range 
inside interval pdf random variable min max dy suppose non zero 
sum require non zero 
conditions derive integration interval non zero 
generalize result summing uncertainty intervals objects picking intervals summing formula resulting interval add interval 
process repeated finish adding intervals 
resulting interval form li ui essentially division number objects aggregation applied 
evaluation vminq answer vminq need find lower bound upper bound pdf pdf minimum value recall section order answer eminq set minimum lower bound uncertainty intervals obtain bounding interval bounding phase explore uncertainty intervals find item minimum value 
interval exactly interval determines region possible minimum values 
order answer vminq phases eminq projection pruning bounding find interval 
evaluation phase replaced algorithm shown 
steps sort objects ascending order ni 
steps represents range possible values 
step evaluates value sampled sampling technique discussed section 
sorted uncertainty intervals ascending order ni need consider objects 
specifically value interval nj nj need consider objects 
tj evaluating 
nj nj formula pri pk pair represents 
inserted set step iii 
step returns lower bound upper bound minimum value distribution minimum values 

sort elements ascending order ni rename sorted elements 


nj nj 
return ii 
pri pk iii 
evaluation phase vminq 

handled analogous fashion 
efficient processing probabilistic queries section address problem computing answers probabilistic queries efficiently 
general query evaluation algorithms section incur sources overhead identifying objects non zero probability satisfying query 
example erq needs find intervals non zero overlap 
computation probability object relevant query 
example probability object nearest neighbor computed evaluation phase 
tackle overhead disk indexing solution 
second problem discuss numeric method balances efficiency precision 
indexing uncertainty intervals structure vci 
execution time query significantly affected number objects need con sidered 
large database impractical evaluate object answering query 
particular large database impractical retrieve uncertainty interval object check object non zero probability satisfying erq 
similarly afford checking interval decide final output pruning phase 
important reduce number objects examination 
traditional queries indexes purpose 
notice order retrieve required object disk hash table technique ids objects extendible hashing sufficient purpose 
indexes required objects examined 
discuss indexing issues queries 
queries discuss special purpose data structure facilitate execution 
key challenge indexing solution uncertainty intervals efficient updating index uncertainty intervals grow li ui shrink due update grow possibly different li ui 
view problem indexing moving objects dimensional space value interested sensor modeled location object moving straight line 
index simple general handle various queries propose 
reasons chosen velocity constrained index vci originally proposed indexing moving objects 
briefly describe structure queries 
interested readers referred details 
vci restriction imposed data values rates growth uncertainty interval bounds li ui exceed certain threshold 
rate threshold potentially adjusted sensor wants change value faster current maximum rate 
maximum growing rates uncertainty intervals objects construction index 
vci dimensional tree index structure 
differs tree node additional field rmax maximum possible rate change objects fall node 
index initiated sensor values point time 
construction similar tree field rmax node adjusted ensure equal largest rate change ti ti sub tree 
split node rmax entry simply copied new node 
leaf level maximum growing rate indexed uncertainty interval stored just maximum growing rate leaf node 
illustrates example vci 
new sensor update received value noted database done secondary index hash table 
change vci 
index time process query actual values sensors different recorded index 
minimum bounding rectangles mbr tree contain new values 
object node question value change faster maximum rate stored node 
expand mbr rmax expanded mbr guaranteed contain uncertainty intervals sub tree 
index updated 
index retrieve relevant intervals queries ways erq 
erq performed easily range search interval vci 
search reaches leaf nodes uncertainty interval object retrieved determine overlaps 

algorithm similar known nearest neighbor nn algorithm proposed 
algorithm uses measures mbr determine search sub tree mindist minmaxdist 
query point mbr index structure mindist minimum possible distance point sub tree mbr 
minmaxdist minimum distance guarantee point sub tree distance closer 
distance computed fact mbr minimal object touching edges mbr 
searching nearest neighbor algorithm keeps track guaranteed minimum distance smallest value minmaxdist distance actual point seen far 
mbr mindist larger distance need searched 
algorithm easily adapted uncertain data vci order improve efficiency pruning phase 
finding nearest object goal utilize vci identify subset objects possibly nearest neighbors uncertainty intervals 
exactly set objects intervals intersect bounding interval 
search algorithm proceeds exactly fashion regular nn algorithm differences 
reaches leaf node computes maximum distance points uncertainty interval minimum value seen far called pruning distance 
conventional nn algorithm processing index node algorithm computes mindist minmaxdist parameters 
parameters adjusted take account fact sensor values may changed 
mindist minmaxdist reduced increased rmax rmax maximum rate change stored node 
search sensor value possibly closer pruning distance uncertainty interval object recorded 
search objects returned pruned set objects 
eminq vminq 
recall sections queries undergo pruning phase set minimum li maximum ui vci help set appropriately 
find li retrieve lower bound mbr root vci call 
set rmax lowest possible value sensors index 
maximum ui similar way 
complexity analysis 
assume objects page fanout items 
space time complexity hash table respectively 
space complexity vci exactly tree plus cost maintain current locations 
assume fill factor leaves get leaves levels gives nodes plus cost storing current locations larger space needed hold coordinates integers ids objects 
time complexity erq vci evaluating range query tree expanded mbrs 
cost evaluating pruning phase evaluation nearest neighbor query nn tree 
best case height tree 
worst case nodes tree 
average case depends distribution data query point tree order insertion time creation maximum speed moving objects 
detailed cost analysis range queries take data factors account 
evaluating uncertainty intervals intervals relevant query identified issue accurate efficient computation probability values 
observation query evaluation algorithms employ costly integration operations 
example erq pi evaluated integrating fi oi 
queries eminq require integration operations frequently step evaluation phase 
important implement operations carefully optimize query performance 
algebraic expressions functions integrated pi pri simple easily evaluate integrals hand 
integration functions difficult integrated hand may replace mathematical series taylor series 
truncate series desired degree accuracy handle possibly simpler integration expressions 
situations may algebraic representation integral function fi represented histogram 
general need numeric integration methods get approximate answers 
integrate function integration interval numeric methods divide area curve small stripes equal width 
dx equal sum area stripes 
answer accuracy depends width stripe 
may trade accuracy execution time 
choosing right value query difficult 
particular evaluation phase evaluate integrals points defined nis 
interval width integral differ control accuracy integrals algorithm employ value 
large value may accurate small integration interval small may integration large interval unnecessarily slow 
value fixed adaptive length integration interval 
define inverse number small stripes numeric method integration interval width ni ni example stripes numeric method 
integration interval 
controls precision adjusting number stripes adaptive length integration interval 
done sensitivity experiments simulation data decide value ensures precision efficiency 
method speed evaluation phase expense lesser degree accuracy reduce number candidates bounding phase completed 
example set threshold remove uncertainty interval fraction overlap bounding interval quality probabilistic results discuss metrics measuring quality results returned probabilistic queries 
metrics may exist standard deviation metrics described serve purpose measuring quality reasonably 
interesting see different metrics suitable different query classes 
entity non aggregate queries queries belong entity non aggregate query class suffices define quality metric ti pi individually independent tuples result 
object satisfies query independent presence objects 
illustrate point explaining metric erq defined 
erq query range result best sure ti completely inside outside 
uncertainty arises sure value ti inside 
confident ti inside large part ui overlaps pi large 
likewise confident ti outside small portion ui overlaps pi small 
worst case happens pi tell ti satisfies range query 
reasonable metric quality pi pi equation measure difference pi 
highest value equals obtained pi equals lowest value equals occurs pi equals 
value equation varies large value represents quality 
define score erq score erq pi set tuples ti pi returned erq 
essentially equation evaluates average tuples notice defining metric erq equation defined ti disregarding objects 
general define quality metrics entity non aggregate query class define quality object individually 
score obtained averaging quality value object 
entity aggregate queries contrary entity non aggregate query observe entity aggregate query object appears result depends existence objects 
example consider sets answers eminq 
tell answer better 
identify important components quality class entropy interval width 
entropy 

xn possible messages respective non zero probabilities 
xn xi 
entropy message 
xn xi log xi entropy measures average number bits required encode amount information carried 
equals exists xi certain xi message uncertainty associated hand attains maximum value log messages equally 
recall result queries defined class returned set consisting tuples ti pi 
view set messages probability pi 
property pi holds 
measures uncertainty answer queries lower value uncertainty associated bounding interval 
uncertainty answer depends factor bounding interval queries studied portions uncertainty intervals lie considered 
notice width determined width uncertainty intervals associated objects large width result large uncertainty intervals 
small indicates uncertainty intervals objects participate final result query small 
extreme case uncertainty intervals participant objects zero width width zero 
width gives indicator uncertain query answer illustrating entropy width affect quality answers entity aggregate queries 
figures show uncertainty intervals inside bounding interval lower entropy lower entropy 
uncertainty smaller bounding intervals 
shows different scenarios uncertainty intervals bounding phase eminq 

assume uniform distribution uncertainty intervals equal probability having minimum value obvious greater chance minimum value equation answer enjoys lower degree uncertainty 
uncertainty intervals half respectively 
lower entropy value 
uncertainty intervals smaller actual values certain 
yield probabilistic result close far apart 
answering eminq reasonable get sensor data distinguish yields minimum value update values 
shown section lower score achieved due larger value trigger updates frequently 
quality entity aggregate queries decided factors entropy result set width scores defined follows score entity aggregate query width notice query answer gets high score low width low 
particular width zero maximum score 
value queries recall results returned value queries form probability distribution values interval 
measure quality queries concept differential entropy defined follows log dx differential entropy continuous random variable probability density function defined interval 
similar notion entropy measures uncertainty associated value attains maximum value log uniformly distributed 

random variable uncertainty uniform distribution positive entropy value negative entropy value 
differential entropy measure quality value queries 
specifically apply equation measure uncertainty inherent answer 
lower differential entropy value better quality answer 
particular value value high entropy low 
define score probabilistic value query score value query quality value query measured uncertainty associated result lower uncertainty higher score obtained indicated equation 
improving answer quality section discuss update policies improve quality probabilistic queries defined section 
assume sensors cooperate central server sensor respond update requests sensor sending newest value server system model described 
suppose execution probabilistic query slack time available query 
server improve quality answers query requesting updates sensors uncertainty intervals sensor data reduced potentially resulting improvement answer quality 
ideally system demand updates sensors involved query practical limited bandwidth environment 
issue improve quality updates possible 
depending types queries propose number update policies 
improving quality erq policy choosing objects update erq simple choose object minimum value computed formula attempt improve score erq 
improving quality queries classes policies 
type policies called global update policy focus freshness database 
glb rr 
policy server picks sensor update round robin fashion 
policy ensures item gets fair chance refreshed 
second batch policies called local update policies refresh data required queries active system set objects uncertainty intervals overlapping bounding interval eminq 
policies examples group 
loc rr 
policy basically glb rr objects relevant query involved 
set relevant object changes needs tell irrelevant objects sending updates inform new relevant objects report 

minmin 
object lower upper bound uncertainty interval equal lower upper bound chosen update 
object may large chance having minimum maximum value 
updating object reduce width consequently size candidate set 
quality result improved 


heuristic simply chooses uncertainty interval maximum width update attempt reduce overlapping uncertainty intervals 


heuristic check ti overlaps effect entropy choose update value ti suppose ti updated uncertainty interval shrink single value 
new uncertainty point uncertainty interval update 
value uncertainty interval update evaluate entropy assuming ui shrinks value update 
mean entropy values computed 
object yields minimum expected entropy updated 
strategy expensive evaluate investigate section 
experimental results section experimentally test various update policies described section 
simulation model parameter values 
discuss experimental results 
simulation model conduct discrete event simulation 
model consists server fixed network bandwidth messages second sensors 
sensor update value uncertainty interval sensor stored server 
specifically update sensor ti time specifies current value sensor ti rate ti uncertainty region centered ti grows 
time instant update uncertainty interval ui sensor ti ti ti ti 
distribution values interval assumed uniform 
actual values sensors modeled random walks normalized domain 
maximum rate change individual sensors uniformly distributed rmax 
time instant value sensor lies current uncertainty interval specified update sent server 
update sent sensor sensor value close edge current uncertainty region requested query 
consider different queries eminq vminq 
queries arrive server poisson distribution arrival rate assumed query processing time assumed negligible measure physical time required processing query :10.1.1.108.6943
query executed subset sensors size 
subsets selected randomly hot cold distribution sensors selected time 
maximum number concurrent queries limited nq 
query allowed request updates sensors improve answer quality 
query stopped fixed time interval 
figures section show averages 
param default meaning accuracy computation mse domain attribute rmax maximum rate change sec nq maximum concurrent queries query arrival rate query sec cardinality query subset query active time sec network bandwidth msg sec maximum updates query concurrent updates query table simulation parameters default values 
number steps accuracy vs number steps time secs number steps response time vs number steps experiment studied effect precision computation method described section 
measured accuracy result mean squared error mse short computed result true result evaluated relatively larger number integration steps 
shows accuracy vminq minmin policy drops initially remains low steps 
illustrates time required computing probabilistic query increases integration steps 
environmental values steps balance query accuracy computation overhead 
bandwidth utilization section study effect utilizing free network bandwidth performance update policies benefit assigning fixed amount bandwidth refreshing data randomly 
free bandwidth unused 
method amount bandwidth required update policy section reserved remaining network bandwidth left unused 
say method take advantage free bandwidth 
appropriate situations battery power sensors scarce activated necessary 
observe vminq scores increase bandwidth increases exception glb rr policy 
higher bandwidth updates requested queries received faster 
higher bandwidth uncertainty intervals freshly updated sensors tend smaller lower bandwidth 
smaller uncertainty intervals translate smaller uncertainty result set consequently higher score 
glb rr demands updates sensors regardless needed queries performs poorly 
loc rr performs worse minmin update sensor largest uncertainty interval 
minmin slightly better uncertainty interval chooses large width bounding interval value attribute tends higher probability minimum 
measure performance update policy terms query completion time response time 
shows results 
see policies exhibit performance boost bandwidth increases 
reason bandwidth available data server updated faster 
leads smaller uncertainty intervals evaluated queries allows finish earlier 
importantly local policies request updates sensors left pruning phase minmin loc rr show comparable performance results significantly better global policy glb rr request updates sensor values needed queries 
bandwidth glb rr loc rr minmin vminq score vs free bandwidth unused bandwidth glb rr loc rr minmin minmin vminq score vs free bandwidth global update time secs bandwidth glb rr loc rr minmin vminq response time vs free bandwidth unused time secs bandwidth glb rr loc rr minmin minmin vminq response time vs free bandwidth global update free bandwidth global update 
policy background process server utilizes free available network bandwidth requesting updates randomly selected sensors order keep data freshness reduce uncertainty 
figures show results policy shapes analogous figures 
response times local update policies reduced 
note bandwidth utilization policy may result increased power consumption sensors compared policy may applicable situations sensor power limited 
fixed bandwidth global update 
policy similar fixes part bandwidth updating data randomly 
goal sure data guaranteed certain degree freshness 
policy works high bandwidth performance deteriorates bandwidth low 
observed figures minmin curve fixed loc rr minmin goal score bandwidth eminq score reaching goal quality time secs bandwidth loc rr minmin response time reaching goal quality bandwidth equal 
performance worse policy policy uses true free bandwidth left global updates carried bandwidth left 
contrary policy fixes portion bandwidth global randomized update bandwidth local update policy shown previously superior global update policy 
due superiority policy section 
reaching goal quality examine different policies achieve quality value limited amount time 
fig ures show results eminq 
set experiments examine different policies achieve goal quality score time constraint 
experiments query evaluation stopped results soon goal quality score reached 
result glb rr shown score far goal score 
bandwidth low shown policies updates obtained slowly reach desired minmin able reach goal score smaller bandwidth value loc rr 
reason loc rr may choose sensor largest uncertainty interval update 
quality improves slower case policies 
response time loc rr worse policies 
bandwidth eminq score time secs bandwidth response time recall sensor selected best expected improvement entropy 
policy costly evaluate order compute expected entropy getting update particular sensor needs compute corresponding integral 
repeated sensor 
improve performance policy approximate expected entropy value small number steps numerical method computes integral 
larger value higher quality approximation price higher processing cost 
figures show result policy values policy performs best performance comparable minmin equal 
running vminq concurrently experiment studies effect having different types queries vminq running concurrently system 
shows queries average scores fraction vminq mixture queries various update policies 
vminq 
policies names form meaning policy vminq policy 
observe minmin curve shows best performance minmin best update policy vminq shown previous experiments similarly best 
doing best policy vminq 
minmin policy yields worst performance inappropriate policy query vminq 
minmin minmin minmin minmin fraction vminq mix vminq score mix queries interesting observation curves concave downwards 
vminq queries tend target similar subsets sensors sensor values refreshed vminq reused 
fraction vminq queries decreases number queries increases 
sensors interest queries different required vminq queries 
sensors refreshed vminq queries reused queries system spend extra workload serve queries 
performance vminq queries deteriorate data refreshed queries useful bandwidth available reduced 
increases proportion reusable data available vminq decreases bandwidth contention vminq worsens resulting drop 
similarly explain drop fraction decreased 
consequently concave curve obtained minimum 
non uniform distribution rerun experiments change underlying uncertainty pdf fi changed uniform distribution arbitrary non uniform distribution 
purpose test robustness generic algorithm arbitrary probability distribution function examine change results 
specifically fi form loc rr minmin bandwidth eminq score non uniform distribu tion bandwidth glb rr loc rr minmin vminq score non uniform distribu tion li li li li li li fi li li li ui 
equal ui li notice fi conforms constraints described definition 
show effect network bandwidth scores eminq vminq figures respectively 
graph glb rr eminq omitted score lower policies 
see results resemble closely previous graphs glb rr worse local update policies minmin edge policies achieving highest score 
results similar previous graphs omitted 
conclude findings limited uniform distribution hold arbitrary distribution experiment 
related researchers studied approximate answers queries subset data 
studied approximate answers set valued queries query answer contains set objects single valued queries query answer contains single value 
exact answer approximated sets certain set subset possible set superset techniques precomputation sampling synopses produce statistical results 
efforts investigate approximate answers subset exact values data addresses probabilistic answers imprecise values data 
problem balancing tradeoff precision performance querying replicated data studied olston 
model cache server keep track exact values sensor sources due limited network bandwidth 
storing actual value server cache interval item stored current value located 
query answered intervals actual values fetched sources 
problem minimizing update cost error bound specified aggregate queries studied 
algorithms tuning intervals data items stored cache best performance proposed 
problem minimizing divergence server sources limited amount bandwidth discussed 
khanna extend olston proposing online algorithm identifies set elements minimum update cost query answered error bound 
models precision discussed absolute relative rank 
absolute relative precision model answer called precise actual value deviates additive multiplicative factor 
rank precision model deal selection problems identifies element rank answer called precise rank lies interval 
works discussed probability distribution values inside uncertainty interval tool quantifying uncertainty considered 
discussions queries uncertain data limited scope aggregate functions 
contrast adopts notion probability provides paradigm answering general queries involving uncertainty 
discuss probabilistic queries consider probabilistic range queries nearest neighbor queries moving object database model :10.1.1.108.6943
study general uncertainty model applied sensor data define quality probabilistic query results best knowledge addressed 
problem indexing dimensional uncertain data answering probabilistic thresh old range query studied 
probabilistic threshold range query probabilistic range query additional requirement objects probability higher user defined value qualified answers 
extends indexing solution support uncertain data high dimensional space 
problems studied papers different aspects uncertainty intervals works time invariant uncertainty intervals change time probability threshold constraint required works studied range queries indexing solutions different classes queries 
related field fuzzy probabilistic statistical databases 
discussed comprehensive characterization uncertainty different data types including fuzzy sets fuzzy intervals 
probabilistic databases discussed augment probability value relational tuple specify probability presence 
derive information data fuzziness statistical databases employed keep track past histories provide information current data trend 
works consider issues constantly evolving data handle inherent uncertainty discussed 
focus associating linguistics fuzziness defining fuzzy queries employee low salary uncertainty numerical domain 
quality query probabilistic database discussed observed database augmented probability function truth values set atomic statements database 
assume actual database known case 
quality reliability measured terms difference observed database actual database quality metrics defined actual database basis comparison 
studied problem augmenting probability information queries uncertain data 
propose flexible model uncertainty defined lower upper bound pdf values inside bounds 
explain probabilistic queries classified dimensions aggregate non aggregate queries entity value 
algorithms computing typical queries query class demonstrated 
efficient data structures uncertainty index computation methods introduced 
metrics measuring quality answers queries 
proposed evaluated experimentally update heuristics improving quality results 
results highlight benefit local updates policies global ones request updates sensors including irrelevant queries 
illustrated different ways utilizing free network bandwidth improve data freshness cost higher sensor power consumption 
compared different update heuristics showed effectiveness mix different queries executed concurrently 
illustrated algorithms results applicable arbitrary distribution functions 
step study interesting queries uncertain data reverse neighbor queries joins 
examine processing probabilistic threshold query probabilistic query probability threshold objects probability values greater included answers 
studied probabilistic threshold range queries 
looking optimization methods speed evaluation probabilistic threshold queries 
acknowledgments portions supported nsf career iis nsf ccr nsf ccr intel phd fellowship 
sistla wolfson chamberlain dao querying uncertain position moving objects temporal databases research practice 
wolfson sistla chamberlain yesha updating querying databases track mobile units distributed parallel databases :10.1.1.108.6943
cheng prabhakar querying imprecise data moving object environments proc 
th ieee intl 
conf 
data engineering india 
jensen querying trajectories line mobile objects acm international workshop data engineering wireless mobile access 
prabhakar xia aref query indexing velocity constrained indexing scalable techniques continuous queries moving objects ieee transactions computers special section data management mobile computing 
deshpande guestrin madden hellerstein hong model driven data acquisition sensor networks proc 
th intl 
conf 
large data bases 
roussopoulos kelley vincent nearest neighbor queries proc 
acm sigmod int 
conf 
management data san jose ca pp 

theodoridis sellis model prediction tree performance proc 
acm pods pp 

shannon mathematical theory communication university illinois press 
olston widom best effort cache synchronization source cooperation proc 
acm sigmod intl 
conf 
management data pp 

cheng prabhakar evaluating probabilistic queries imprecise data proc :10.1.1.108.6943
acm sigmod intl 
conf 
management data 
liu producing approximate answers set single valued queries journal systems software 
poosala ganti fast approximate query answering precomputed statistics proc 
th intl 
conf 
data engineering 
gibbons matias new sampling summary statistics improving approximate query answers proc 
acm sigmod intl 
conf 
management data 
acharya gibbons poosala ramaswamy join synopses approximate query answering proc 
acm sigmod intl 
conf 
management data 
olston widom offering precision performance tradeoff aggregation queries replicated data proc 
th intl 
conf 
large data bases 
olston loo widom adaptive precision setting cached approximate values proc 
acm sigmod intl 
conf 
management data 
khanna tan computing functions uncertainty th acm symposium principles database systems 
cheng xia prabhakar shah vitter efficient indexing methods probabilistic threshold queries uncertain data proc 
th intl 
conf 
large data bases 
tao cheng xiao kao prabhakar indexing multi dimensional uncertain data arbitrary probability density functions proc 
st intl 
conf 
large data bases 
uncertainty nested relational database model elsevier data knowledge engineering 
barbar garcia molina porter management probabilistic data ieee trans 
knowledge data engineering 
lakshmanan leone ross subrahmanian flexible probabilistic database system acm trans 
database syst 

suciu efficient query evaluation probabilistic databases proc 
th vldb conference 
shoshani olap statistical databases similarities differences proc 
acm pods 
gr del gurevich hirsch complexity query reliability proc 
acm pods 
chatfield analysis time series chapman hall 
schreiber nonlinear time series analysis cambridge university press 
chatfield time series forecasting chapman hall crc 
davis time series forecasting springer 
inferring probability density function assume probability density functions current values sensors fi available 
information readily known 
section briefly discuss method predicting inferring pdfs history information 
reader reminded problem inferring pdfs interesting rich topic 
details 
currently generic solution applicable situations 
active participation expert time series analysis required tries different methods possibly utilizes domain specific knowledge 
time series set observations xt recorded specific time deal discrete time series ones set times observations discrete 
time series analysis utilizes notion time series model assumes xt realization sequence random variables xt studies statistical properties sequence second order moments joint distributions 
objective analyzing time series relevant prediction aka forecasting study values time series 
analyst try decompose series xt components easier study 
possibly require applying transformations considering new time series produced log values xt 
briefly approach analyzing time series advanced approaches values depend external factors reader referred 
case classical decomposition model xt represented mt st yt mt slowly changing function showing trend series st seasonal component function known period yt random variable called random noise component residuals 
usually yt required conform certain restrictions yt stationary time series 
knowing yt stationary time series allow analyst specific mathematical apparatus analysis 
simplest methods estimating trend component mt include finite moving average filter exponential smoothing curve fitting regression 
case finite moving average filter mt estimated xt exponential smoothing mt estimated xt mt parameter 
curve fitting method estimating mt analyst certain assumptions curve assume polynomial certain degree square estimation method get curve parameters coefficient polynomial result best fit 
similarly methods estimating seasonal component st inferring properties residuals yt 
note knowledge components decomposition allows estimate pdfs interest 
example mt st sin yt predict pdf time pdf sin 
model assumed sensor sends updates periodically server 
update includes current value sensor 
current previous updates sensor done measurements case send current value values stored period previous update till current update 
allow create better estimation pdf approaches described 
know time series analysis reader referred introductory book book material section described detail 
forecasting issues discussed 
attribute values zero uncertainty attribute value said zero uncertainty uncertainty time time ui recorded value ti discuss change solutions kind attribute values 
evaluation erq erq algorithm section evaluates overlapping interval oi ui 
ui point width oi zero algorithm fail detect ui overlaps 
handle case test ui point 
true examine ui lies immediately conclude ui overlaps return ti 
ti pi simply returned 
evaluation eminq recall pi probability ui lies iq 
ui point contained inside iq pi equals 
write pi follows ui pi step function derivative pri undefined 
pri step evaluation phase eminq algorithm 
solve problem insert routine step 
additional steps evaluate probability pi objects values farther ui pi pj ui attribute values zero uncertainty value probability nearest neighbor catered counter called counts number zero uncertainty attributes value probability evaluated pi 
ui point pi ii 
iii 
uj ui pi pi pj ui ii 
iv 
ti pi skip steps continue step evaluation vminq routine handling zero uncertainty 
evaluation queries involves pri step undefined zero uncertainty attribute values 
notice zero uncertainty attribute obey ui zero uncertainty attribute value probability minimum maximum contributes probability minimum maximum value 
result replace step ii ui point pk pri pk 
