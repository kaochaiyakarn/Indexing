grammatical inference automate information extraction web theodore hong keith clark department computing imperial college science technology medicine queen gate london sw bz united kingdom doc ic ac uk 
world wide web contains wealth semistructured information sources give partial overlapping views domains real estate listings book prices 
partial sources effectively integrated single view typically formatted diverse ways human viewing extracting data integration difficult challenge 
existing learning systems task generally hardcoded ad hoc heuristics restricted domains structures recognize require manual training 
describe principled method automatically generating extraction wrappers grammatical inference recognize general structures rely manually labelled examples 
domain specific knowledge explicitly separated form declarative rules 
method demonstrated test setting extracting real estate listings web pages integrating interactive data visualization tool dynamic queries 
world wide web contains wealth information resources considered semistructured data sources sources containing data fielded constrained global schema 
example documents product catalogs staff directories classified advertisement listings fall category 
multiple sources provide partial overlapping views underlying domain 
result interest trying combine cross disparate data sources single integrated view 
parsing web pages information extraction significant obstacle 
markup formatting web sources provides hints record field structure structure obscured presentation aspects formatting intended human viewing wide variation formats site site 
manually constructing extraction wrappers tedious time consuming large number sites covered need keep date frequent formatting changes 
propose grammatical inference automate construction wrappers facilitate process information extraction 
grammatical inference subfield machine learning concerned inferring formal descriptions sets examples 
application inference formal grammars generalized structural descriptions documents 
applying inference algorithm training sample web pages site learn grammar describing format structure 
domain specific knowledge encoded declarative rules identify productions corresponding records fields 
grammar compiled wrapper extracts data pages 
data pages website typically follow common site format particularly dynamically created scripts wrappers able operate rest pages 
process largely automated making easy re generate wrappers sites change formatting 
explored machine learning wrapper creation previous systems generally relied hardcoded ad hoc heuristics manual labelling examples restricted domains structures recognize 
method principled objective method inferring structure description language context free grammars high expressive power 
avoid manual intervention far possible explicitly separate domain specific knowledge declarative rules 
characteristics system easier broadly applicable different domains 
real estate domain example demonstrate approach extract property listings set mock web pages 
briefly show interactive data visualization tool dynamic queries exploring resulting high dimensional data space 
rest organized follows sect 
introduce formal background grammatical inference describing inference algorithm sect 

apply algorithm real estate domain sect 

related discussed sect 
sect 
gives 
grammatical inference grammatical inference class inductive inference target formal language set strings alphabet hypothesis space family grammars 
objective infer consistent grammar unknown target language finite set examples 
classical approach grammatical inference gold introduced notion identification limit 
notion concerned limiting behavior inference algorithm infinite sequence examples 
formally complete presentation language infinite sequence ordered pairs string appears 
inference method run larger larger initial segments complete presentation generate infinite sequence guesses said identify limit exists number guesses gi gn equivalent approach directly applicable web document task positive examples available actual documents existing site 
gold showed class languages containing finite languages infinite language identified limit positive examples negative ones 
example classes regular context free languages fit criterion 
problem task constrained 
positive examples inferencer basis choosing hypotheses general language consisting strings specific language consisting exactly examples seen far 
inference algorithm approach inference problem differently search simplest grammar consistent fit provided sample assumption simple grammars convey meaningful structure 
introduce learning bias constrain search starting specialized grammar high fit low simplicity applying various transformations generalize simplify retaining fit 
guide process take set stochastic context free grammars hypothesis space define complexity function terms description length 
stochastic contextfree grammars context free grammars probabilities attached productions 
probabilities aid inference providing additional information relative weight alternative productions example alternatives nonterminal equally important just noise 
information useful assessing relative complexity performing simplifications extracting data 
measuring grammar complexity stochastic context free grammar productions associated probabilities 



xn wn wn 
wn mn pn pn 
pn mn xi nonterminals wij alternatives pij probabilities associated alternatives mn pij 
cook define complexity mn log pij wij wij second complexity function wij strings 
definition intuitively desirable properties complexity sum complexities productions complexity production sum complexities alternatives 
complexity alternative components information theoretic information content probability complexity string produced 
complexity string function length proportions distinct symbols log ki log ki length contains distinct symbols occurring 
kr times respectively 
longer varied strings rated complex 
inference search formulate goal looking simplest consistent grammar search space grammars cost function complexity function starting point grammar simply generates training set perfect fit 
wm 
pm 
wm strings occurring set 
pm relative frequencies 
strings different pi equal pi may vary strings appear set 
initial grammar generally high complexity 
perform search considering various transformation steps lower complexity generalize grammar retaining fit 
transformations 
substitution substring occurs multiple times different alternatives grammar csd create new rule replace occurrences transformation helps identify subunits structure 
example applied productions john eating cake mary eating bread separate eating rule 

disjunction substrings occur similar contexts grammar atb create new rule replace occurrences transformation introduces generalization context 
example applied productions john throws john catches propose throws catches alternatives production 

expansion remove rule 
replacing alternative mentions set alternatives replaced reverse previous substitutions disjunctions 

truncation remove alternatives having low probability redistribute probability remaining alternatives 
remove noise threshold 

normalization merge redundant alternatives drop productions inaccessible reached start symbol blocking result nonterminal rewritten 
necessary clean grammars show full extent simplification resulting transformation 
variations transformations considered 
practical reasons branching factor possible search steps large exceeding perform searching greedy deterministic hillclimbing strategy 
simulated annealing possibility examining 
example parenthesis expressions demonstrate algorithm consider language balanced parenthesis strings 
take set strings length training set frequencies shown justified sample initial grammar complexity substrings candidates substitution 
greatest reduction complexity obtained substituting 
appears alternative simply substitute 
resulting grammar complexity ss sss ss repeated substrings ss 
choosing gives ss sss ss ss ss normalizing merging redundant alternatives summing associated probabilities obtain grammar complexity ss sss ss 
final set repeated substrings ss ss lowers complexity 
gives ss ss normalizing usual grammar parenthesis language ss 
final complexity 
notice probabilities generate set strings length recover string frequencies original sample 
example substitution normalization operations general transformations may needed 
information extraction tested algorithm set mock web pages containing london real estate listings 
pages followed general layout see figs 
contained varying numbers listings page containing pictures described property 
set pages taken training set algorithm attempted construct suitable description extraction wrappers generated 
grammatical inference phase web pages training set converted strings alphabet html tag types text 
done discarding html attributes tags encountered tags type anchor start tags treated alphabet symbol 
free text occurring tags converted symbol text 
transformation assume structure mainly tag type level focus level ignoring variations text attributes href values 
example contact links hr href mailto sales com hr href mailto help com bee estate agents transformed string hr text page string alternative initial grammar perfect fit high complexity html head 
table tr td text br text 
html html head 
table tr td img text br 
html 
fig 

sample real estate listing page 
inference algorithm ran seconds pentium examined candidate grammars lowering complexity value see fig 
quality curve 
final grammar html head title text title head body text table table address text address body html tr td text br text br text td tr img br 
interpret structure follows 
start symbol represents complete page 
page begins fixed header followed occurrences represents single listing 
listing consists table row data optionally containing image page terminated fixed trailer 
process dtd document type definition specification defines html language 
definition html dtd general structure describing html documents useful close fit particular set pages 
account constraints dtd transformations example keep blocks elements split useful refinement algorithm 
alternately different approach altogether start general html dtd specialize training set starting specific grammar generalizing 
html head title listings southwest london title head body southwest london table border width tr td new kings road sw br pound br quiet studio flat garden situated rear converted building heart 
contact 
td tr 
domain specific phase fig 

part html source fig 

grammatical inference phase performs coarse segmentation page units varying sizes corresponding different nonterminals 
complete segmentation need apply domain specific knowledge determine units correspond records segment fields records 
domain knowledge expressed declarative information extraction rules domain fields 
rule consists field name type plus regular expression defining context field appear 
rules executed applying regular expression chunk text 
match specified portion matching text extracted value field 
disjunctions define multiple contexts field 
example real estate domain default set rules number price pound string telephone boolean garden garden yard rule says price looks form pound sign followed number 
part match delimited braces returned field value 
second declares telephone number string digits interspersed dashes field value 
third defines boolean attribute true strings garden yard 
rules applied units discovered grammatical inference phase 
precisely procedure 
parse training pages inferred grammar 
occurrence nonterminal collect text appearing parse tree associated chunk 
page shown fig 
nonterminal associated chunk containing text page associated chunks containing text listing associated chunks containing text 
complexity arbitrary units steps fig 

quality curve real estate grammar search 
apply information extraction rules chunk 
chunk yields multiple matches rules probably contains record 
rules match chunk probably smaller record 
nonterminal matching rules duplicate matches assumed correspond record case wrapper generation phase having identified nonterminal corresponding listing record compile grammar wrapper extracts records pages chunks text applies domain rules extract typed fields records 
point user manually add additional site specific rules fine tuning 
rules may optionally qualified piece number restrict match range particular piece section text corresponding specific text symbol chunk 
example rules string address string description specify address part piece appearing comma description entire content third piece 
running wrapper sample page yields records shown table 
wrappers data sources generated system extract records integrate resulting data combined database 
partial database available may helping identify domain fields formulate extraction rules 
table 
partial listing extracted records 
address price garden description new kings road quiet studio flat 
addison gardens particularly quiet convenient 
court floor studio 
jeffreys road sized lower ground floor 
note complete integration may possible nature data origin multiple collections semistructured text 
extraction rules may fail records fields may sites place records site 
complete overview significant value 
final step database input data mining information integration system 
see example describes interactive real estate visualization system dynamic queries see fig 
screenshot 
system sliders continuously set selection criteria properties shown color coded points map naturally rapidly explore data space 
preliminary results qualitatively encouraging rigorous testing remains done quantify performance real world data terms recognition rates necessary determine robust method different conditions get stuck local optima switching simulated annealing may useful difficulty identifying records properly 
related grammatical inference generate structural descriptions tagged sgml documents dictionaries textbooks freitag explored grammatical inference find field boundaries free text 
large amount done developing inference algorithms presents useful overview 
integrating data multiple websites carried number researchers 
krulwich bargainfinder able scan product listings prices set line web stores extract unified ordered table 
entirely hand coded wrappers tailored specifically source site 
shopbot went step various ad hoc heuristics automate wrapper building online stores extremely domain specific 
kushmerick extended defining classes wrappers induced labelled examples ashish knoblock built toolkit semi automatically generating wrappers hardcoded heuristics 
fig 

screenshot interactive real estate visualization system 
craven describe inductive logic programming algorithm learning wrappers labelled examples 
cohen introduced method learning general extraction procedure pairs page specific wrappers pages wrap method restricted simple list structures 
induces wrappers unlabelled examples restricted simple table structures 
ghani combined extraction data corporate websites data mining resulting information 
tsimmis project system aimed integrating web data sources main focus query planning reasoning source capabilities information extraction performed hand coded wrappers 
demonstrated principled method generating information extraction wrappers grammatical inference enables integration information multiple web sources 
approach require overhead manually labelled examples applicable general structures ought easily adaptable variety domains domain knowledge expressed simple declarative rules 
preliminary results necessary test inference algorithm complicated web pages real world sources different domains conduct rigorous quantitative evaluation 
examine simulated annealing search 
acknowledgments author acknowledges support marshall aid commission 
material supported national science foundation graduate fellowship 

abiteboul querying semi structured data database theory th international conference icdt delphi greece 
springer 

automatic generation sgml content models electronic publishing origination dissemination design 

ashish knoblock semi automatic wrapper generation internet information sources second ifcis international conference cooperative information systems coopis kiawah island sc usa 
ieee cs press 

baker trainable grammars speech recognition speech communication papers th meeting acoustical society america 

chawathe garcia molina hammer ireland papakonstantinou ullman widom tsimmis project integration heterogenous information sources proceedings th meeting information processing society japan ipsj 


cohen recognizing structure web pages similarity queries proceedings sixteenth national conference artificial intelligence aaai orlando fl usa 
aaai press 

cook rosenfeld aronson grammatical inference hill climbing informational sciences 

craven dipasquo freitag mccallum mitchell nigam slattery learning construct knowledge bases world wide web artificial intelligence 

doorenbos etzioni weld scalable comparison shopping agent world wide web international conference autonomous agents agents marina del rey ca usa 
acm press 

freitag grammatical inference improve precision information extraction icml workshop automata induction grammatical inference language acquisition nashville tn usa 


gao sterling automatic wrapper generation multiple online services asia pacific web conference hong kong 


ghani jones mladeni nigam slattery data mining symbolic knowledge extracted web kdd workshop text mining boston ma usa 


gold language identification limit information control 

hong visualizing real estate property information web information visualization 
ieee computer society los alamitos ca 

krulwich bargainfinder agent comparison price shopping internet bots internet 
sams publishing 

kushmerick wrapper induction efficiency expressiveness artificial intelligence 

sakakibara advances grammatical inference theoretical computer science 
