effect delay spike sctp tcp reno eifel wireless mobile environment fu mohammed school computer science university oklahoma norman ok 
eifel proposed solution enhance performance tcp delay spikes wireless mobile environment 
evaluates compares performance sctp tcp eifel delay spikes 
shown eifel performs better tcp reno sctp packet losses opposite true packets lost presence delay spikes 
results show higher link bandwidth increase data throughput sctp tcp reno eifel 
stream control transmission protocol sctp developed reliable transport protocol ip network 
sctp congestion control retransmission schemes similar tcp 
sctp tcp designed wireline environments mind assume slow gradual changes rtt 
wireless mobile networks encounter delay spikes frequently wireline networks 
delay spike defined situation rtt suddenly increases drops sharply back previous value 
delay spikes wireless mobile environment may occur due hand cells physical disconnection wireless link link level recovery rlc layer preemption data traffic higher priority traffic 
delay spikes resulting spurious timeout st spurious fast retransmission sfr lead serious performance penalty tcp 
eifel algorithm proposed alleviate performance penalty case tcp 
eifel requires sender receiver support tcp timestamp option turn requires additional bytes tcp header 
alternative proposals eifel 
objective evaluate compare impact delay spikes performance sctp tcp reno eifel various wireless scenarios suggest appropriate protocols depending reported supported national aeronautics space administration nasa 
nag ieee william satellite networks architectures branch nasa glenn research center rd ms cleveland oh 
link queue sender receiver fig 

simulation topology 
network conditions 
rest organized follows behavior performance tcp reno eifel sctp presence delay spikes lossless lossy networks studied secs 
ii iii respectively 
recommendations appropriate transport layer protocol sec 
iv followed concluding remarks sec 
ii 
effect delay spike lossless network section ns simulator illustrate impact delay spike tcp reno eifel sctp loss free network 
simulation setup simulation topology shown fig 

link delay seconds uplink downlink 
delay spike occurs uplink time sand lasting seconds 
link bandwidth kbps section results range link bandwidths kbps mbps sec 
ii 
effect delay spike tcp reno sender segment plot tcp reno sender receiver shown fig 

delay spike causes timeouts points fig fig resulting spurious go back retransmission segments starting point fig sfr segment point fig 
detailed description st sfr full sized version 
rfc proposed bug fix disables fast retransmissions segments outstanding timeout acked :10.1.1.47.6408
fast retransmission point fig eliminated bug fix 
segment data arrive link queue ack rcvd timeout timeout time seconds fig 

spurious transmission spurious fast retransmission tcp reno 
segment data arrive link queue ack rcvd timeout timeout time seconds fig 

detecting spurious timeout eifel 
effect delay spike eifel fig 
shows sender segment plot eifel algorithm 
sender gets ack original segment point fig detects spurious timeout timestamp option 
result contrary fig 
tcp reno segments retransmitted 
dupacks generated receiver spurious retransmissions eliminated 
effect delay spike sctp sctp tcp reno rto estimation algorithm sctp suffers spurious timeout exhibits go back behavior point fig 
news sctp free spurious fast retransmission 
sender receives series duplicate sacks acknowledging segment point fig doesn sfr segment 
sack allows sctp sender determine duplicate sack acknowledging segment due spurious retransmission due lost segment possible tcp reno 
segment data arrive link queue ack rcvd time seconds fig 

spurious timeout sctp due delay spike 
performance comparison lossless network section compare performance protocols link bandwidths varying kbps mbps small large receiver window rwnd sizes 
bandwidths kbps correspond gprs data rates cs cs coding schemes higher bandwidths mbps available wireless networks 
performance criteria throughput measured number segments delivered receiver second ftp session 
throughput link bandwidth kb sctp eifel reno fig 

performance comparison protocols large rwnd 
low bandwidths upto kbps large rwnd spurious timeouts continuous reception acks delay spike prevents sender spurious timeouts 
throughput sets figs 
large segments small segments rwnd respectively 
figs 
slightly lower throughput sctp compared tcp due fact data acknowledgment segments sctp byte headers respectively 
eifel achieves higher throughput throughput link bandwidth kb sctp eifel reno fig 

performance comparison protocols small rwnd 
eliminating go back retransmission see sec 
ii reverting congestion window detection st reason drop throughput near kbps large rwnd see fig 
higher bandwidth provides lower rto estimation results second timeout delay spike 
consequently sender enters congestion avoidance starting low value mss value ssthresh timeout 
iii 
effect delay spike packet losses section extend study sec 
ii include packet losses due congestion topology link delays 
large rwnd segments queue size segments 
small rwnd segments limited queue size segments induce packet losses 
comparison behavior protocols figs 
show behavior tcp reno eifel sctp respectively presence delay spike packet losses :10.1.1.47.6408
delay spike segments released queue segments dropped due queue overflow queue size limited 
go back retransmission tcp reno sctp caused delay spike effectively recovers lost segments see loss segments doesn effect tcp reno sctp 
eifel detects spurious timeout timestamp resumes transmitting new segments starting point fig 
sender fast retransmit segment point fig rest lost segments retransmitted timeout point fig 
observed behavior remains unchanged presence types losses link errors 
segment data arrive link queue ack rcvd packet drop queue overflow timeout time seconds fig 

tcp reno delay spike packet loss 
packet queue overflow data arrive link queue ack rcvd packet drop time seconds fig 

eifel delay spike packet loss bug fix disabled 
timeout rto increased seconds 
resulting transmission stall seconds 
performance comparison lossy network figs 
show throughput protocols large small rwnd respectively lossy environment 
protocol experience drop throughput near kbps large rwnd reason described sec 
ii 
fig 
shows large rwnd low bandwidth sctp performs better tcp reno eifel support provided sctp sack early detection lost segments retransmitted waiting timeout 
large rwnd high bandwidth spurious timeouts caused delay spike 
dupacks arrive sender acknowledging spuriously retransmitted segments clock new data tcp reno sctp 
phenomenon observed bandwidths small rwnd thisis spurious timeouts happen small rwnd 
segment data arrive link queue ack rcvd packet drop queue overflow timeout time seconds fig 

sctp delay spike packet loss 
throughput link bandwidth kb sctp eifel reno fig 

performance presence packet losses large rwnd 
values link bandwidths rwnd see figs 
eifel worst performance packets lost delay spikes 
transmission stalls discussed sec 
iii 
iv 
results recommendations results secs ii iii ranked performance protocols descending order different cases link bandwidths receiver window packet loss table wireless mobile environment delay spikes recommend eifel lossless network 
lossy network small link bandwidth large receiver window sctp cases lossy network tcp reno 
shown presence delay spikes packet loss sctp tcp reno similar performance eifel higher performance 
throughput link bandwidth kb sctp eifel reno fig 

performance delay spike packet losses small rwnd 
table relative performance protocols descending order 
rwnd small rwnd rwnd large rwnd 
low link bw high link bw rwnd rwnd rwnd rwnd eifel eifel eifel eifel delay reno reno reno reno spike sctp sctp sctp sctp fig fig fig fig reno sctp reno reno delay sctp reno sctp sctp spike eifel eifel eifel eifel loss fig fig fig fig case delay spikes packet losses eifel suffers long transmission stalls tcp reno sctp better performance eifel 
recommendations protocols networks engineers switch protocols depending network conditions 
stewart xie stream control transmission protocol ietf rfc october 
ludwig making tcp robust delay spikes internet draft draft tcp delay spikes txt february 
effect delays tcp performance ifip personal wireless communications august 
katz algorithm making tcp robust spurious retransmission acm computer communications review vol 
pp 
january 
ludwig tcp retransmit flag internet draft tcp flag txt november 
ludwig link layer analysis general packet radio service gsm san diego pp 
april 
fu effect delay spike sctp tcp reno eifel wireless mobile environment tech 
rep computer science university oklahoma www cs ou edu july 
floyd henderson newreno modification tcp fast recovery algorithm ietf rfc april :10.1.1.47.6408

