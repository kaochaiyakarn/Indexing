planetp gossiping build content addressable peer peer information sharing communities francisco matias acuna christopher richard martin thu nguyen cs rutgers edu 
planetp peer peer content search retrieval infrastructure targeting communities wishing share large sets text documents 
computing attractive model information sharing ad hoc groups users low cost entry explicit model resource scaling 
communities grow key challenge finding relevant information 
address challenge design centers indexing content search retrieval scalable name object location focus systems 
planetp takes novel approach replicating global directory compact summary index peer gossiping 
planetp leverages information approximate state art document ranking algorithm help users locate relevant information large communal data set 
prototype implementation simulation show possible design gossiping algorithm reliably maintains copy communal state peer requires modest amount bandwidth ii content search retrieval algorithm tracks performance original ranking algorithm closely giving communities search retrieval algorithm possible assuming centralized server iii planetp gossiping search retrieval algorithms scale communities peers 
planetp peer peer content search retrieval infrastructure targeted communities planetp supported part nsf eia eia 
technical report dcs tr department computer science rutgers university rd piscataway nj may wishing share large sets text documents scientific publications news articles legal documents computing communal resources provided directly members community attractive model information sharing ad hoc groups users low cost entry natural scaling model 
users wishing share information form community existing computing resources 
individuals join community bring resources allowing community grow naturally 
measurements community rutgers show users sharing tb data open communities gnutella achieved greater sizes :10.1.1.160.7346
value information sharing community directly proportional size larger communities provide information individual users provide greater value 
communities grow locating information critical challenge 
designed planetp specifically meet challenge 
existing systems focus providing efficient extremely scalable object location service design centers indexing content search retrieval core :10.1.1.115.4299:10.1.1.28.5987:10.1.1.105.3673
design motivated success internet search engines argues content addressing intuitive paradigm users manage access large volumes information 
targeting model planetp face constraints applicable current internet search engines 
include centralized administration management coordination communal resources may fluctuate rapidly un kn kn planetp community dynamic set peers wishing share set documents distributed peers local data stores 
peers continually gossip help maintain local copy global directory content search retrieval 
predictably presence peers online uncontrolled unpredictable resources typically fragmented potentially spread wide geographic areas 
constraints mean planetp employ current model practiced internet search engines crawl information sources bring shared information centralized location massive computing power allow clients query centralized information repository 
planetp takes opposite approach replicating compact summary entire index peer gossiping 
specifically members planetp community agree continually gossip changes community help maintain local copy global directory 
directory contains names addresses current members bloom filter member summarizes set terms contained documents shared member :10.1.1.20.2080
member uses copy directory query retrieve matching documents collective information store community 
additionally peers optionally choose implement information brokerage service consistent hashing optimize location new rapidly changing data 
example document introduced community publishing peer may wish fact information brokerage service peers find document waiting new bloom filter generated gossiped 
note systems chord planetp information brokerage service serves optimize performance :10.1.1.105.3673
planetp services critically depend gossiping information brokerage service 
explicit design decision gossiping suited environment peers may come go freely gossiping abrupt leaving absence subset peers 
help users better navigate large sets documents planetp implements search retrieval engine state art text ranking algorithm 
naive implementation ranking algorithm require peer inverted index entire community costly terms bandwidth storage 
show algorithm approximated planetp bloom filter summaries peers inverted indexes gathered peer 
designing prototyping planetp contributions show content search retrieval engine approximating state ofthe art text ranking algorithm built specific context computing show gossiping appropriate mechanism replicating information community benchmark collections smart trec show search retrieval algorithm matches performance original ranking algorithm despite accuracy gives compact summary individual inverted index :10.1.1.46.8448
show planetp gossiping algorithm content search retrieval algorithm scale communities peers local data stores bloom filters planetp maintains local data store peer information sharing community 
planetp assumes basic unit storage xml document allowing index arbitrary data search retrieval regardless applications create manipulate data 
peer publishes xml document planetp wishes share document 
published xml document contains text possibly links external files 
planetp indexes text simulation data suggest planetp scale peers concerns 
admit users modem speed connectivity difficult download index summary global directory join community 
second simultaneously joining large number new members large indexes share require large aggregate gossiping network volume 
published xml document linked external files known type postscript pdf text providing backward compatibility peers share search non xml documents 
published xml document stored local data store publishing peer external files stored planetp 
planetp stores terms extracted published documents local inverted index 
planetp summarizes inverted index peer bloom filter shall seen diffuses summary entire community support communal content search retrieval :10.1.1.20.2080
briefly bloom filter array bits represent set strings case set terms peer inverted index 
filter computed obtaining indices term set typically different hashing functions setting bit index 
bloom filter ask term member set computing indices checking bits 
bloom filters give false positive false negative 
set bloom filters summarizing peers inverted indexes easily compute subset peers may contain documents relevant query 
choose bloom filters provide important advantages bloom filter relatively efficient summary mechanism example support false positive rate hash functions need kb summarize terms kb terms 
previous studies file systems shown majority files change slowly 
information collections display characteristic bloom filters planetp place little load community searches bulk slowly changing data 
peers independently trade accuracy storage 
example peer may choose combine filters peers save space trade contact set peers query hits combined filter 
ability independently trading accuracy storage particularly useful peers running memory constrained devices hand held devices 
currently xml tags indexed simply normal terms 
extend planetp structure provided xml tags near 
peer know documents relevant query exist peers currently line 
missing documents current systems searching peer arrange rendezvous line peers reconnect obtain needed information 
gossiping heart planetp gossiping algorithm planetp uses gossiping replicate global directory includes list peers ip addresses bloom filters peer community 
events change directory require gossiping include joining new member rejoin previously line member change bloom filter 
gossip leaving temporary permanent peer 
peer discovers peer offline attempt communicate fails 
marks peer line directory gossip information 
peer comes back line presence eventually gossiped entire community peer marked offline directory changes status back line 
peer marked line continuously time information dropped directory assumption peer left community permanently 
planetp gossiping algorithm novel combination rumor anti entropy previously introduced demers partial anti entropy algorithm improved performance significantly dynamic environments 
demers algorithm works follows 
suppose peer learns change directory just updated bloom filter 
seconds randomly chooses target peer believed currently line attempts tell change 
heard change records new information attempts spread rumor doing 
contacts peers row knows change stops spreading rumor 
process leave residual set peers hear rumor dies peer performs anti entropy operation 
example implementation algorithm tenth round currently new information peer send anti entropy message rumor 
anti entropy message asks target send summary entire directory gets summary parses see updated information 
asks needed information 
combination push pull anti entropy helps reliably spread new information 
dynamic environment rumors may arrive peers leaving coming time required spread particular rumor highly variable combined algorithm 
high arrival rate new rumors forces rate anti entropy minimum tenth round 
peer unlucky contact peer missing particular rumor may tens rounds rumor reaches 
fix increase frequency performing anti entropy say round fifth round 
unfortunately anti entropy expensive summary entire directory sent 
expending bandwidth reducing efficiency gossiping 
decided extend round partial anti entropy exchange works follows 
sends rumor message piggybacks ids small number rumors learned longer actively spreading 
check see missing learned pull information partial anti entropy requires extra message case know 
amount data piggybacked message small order tens bytes 
inclusion partial anti entropy step significantly reduced variation time required inform entire community particular new piece information requiring bandwidth performed anti entropy 
planetp currently uses base gossiping interval seconds accommodate peers relatively slow communication links 
planetp dynamically adjusts base interval reduce bandwidth usage system reached stable configuration 
peer rumor spread maintains count number times contacted peer directory 
count reaches gossip threshold currently set increases gossiping interval slow constant currently set seconds increasing gossiping interval resets zero continues 
manner gossip interval gradually increase maximum minutes 
hand receives rumor message finds new piece information anti entropy immediately resets gossiping interval default order efficiently diffuse new information 
dynamically adapting gossiping interval advantages 
need define termination condition probabilistic nature algorithm 
second global consistency achieved bandwidth negligible short time 
information brokerage gossiping elegant solution maintaining copy global directory peer enabling peers accurately search entire communal data store disadvantages new rapidly changing information spreads slowly minutes communities thousands peers current settings information diffuse relevant small subset community 
address limitations peers planetp choose implement information brokerage service uses consistent hashing publish locate information 
mentioned service optimization necessary part planetp 
particular service guarantee safety information published 
member leaves abruptly passing portion published data data lost 
show unreliable service useful optimization discussing semantic file system building planetp section 
planetp information brokerage service works follows 
information published brokerage ser various constants parameters current simulation tuned needed particular community 
vice xml snippet set associated keys terms discard time 
network brokers consistent hashing partition key space 
particular active member chooses unique broker id predetermined range 
members arrange ring ids 
map key broker compute hash key 
send snippet key broker id successor ring 
snippet discarded discard time expires 
real complexity implementing service lies handling dynamic joining leaving members 
space constraints fact service central refer interested reader longer technical report details part implementation 
content search retrieval planetp supports types searches exhaustive search expect applications written top planetp selective search suitable user initiated searches uses vector space ranking model choose subset documents relevant query 
exhaustive search exhaustively search planetp data store application poses query represented conjunction keys separated white spaces 
query planetp searches bloom filters local directory obtain list candidate peers may documents matching query 
planetp contacts candidate peers appropriate brokers retrieve matching xml documents 
contacted peers replied set retrieved documents returned caller 
persistent queries 
planetp supports persistent queries exhaustive searches 
persistent queries allow peers specify interest new information entering system having constantly poll providing way applications implement traditional distributed mechanisms condition variables publish subscribe communication tuple spaces posting persistent query poster pro vides object invoked new matching snippet new bloom filter received new snippet published brokers 
vector space ranking provide selective search help users better navigate large sets documents implemented distributed ranking algorithm vector space model state art text ranking algorithm :10.1.1.51.7802
section give brief description vector space ranking model discuss changes introduced adapt algorithm planetp 
background 
vector space ranking model document query abstractly represented vector dimension associated distinct term space dimensions possible distinct terms 
value component vector represents importance term typically referred weight term document query 
query rank relevance documents query measuring similarity query vector candidate document vectors 
similarity vectors generally measured cosine angle computable equation represents weight term query weight term document means term means term typically hand dropped denominator equation constant documents 
popular method assigning term weights called tfxidf rule 
basic idea tfxidf combination term frequency tf document inverse term shows documents collection idf balance fact terms frequently document important describe meaning terms appear documents collection useful differentiating documents particular query 
existing literature includes ways implementing tfxidf rule 
adopt system equations suggested witten number documents collection lection number times term appears document resulting similarity measure number times term appears col number terms document planetp :10.1.1.51.7802
implement relevance ranking directly planetp necessary information 
approximate function breaking ranking problem sub problems ranking peers likelihood peer having documents relevant query deciding number peers contact ranking documents returned peers 
node ranking problem 
rank peers introduce measure called inverse peer frequency ipf 
term ipf computed number peers community number peers documents term 
similar idf idea metric term index peer useful differentiating peers particular query 
idf ipf conveniently computed bloom filters collected peer number bloom filters num ber hits term bloom filters 
definition ipf propose relevance measure ranking peers ipf simply weighted sum query terms contained peer weighted useful term differentiate peers term query set terms represented bloom filter peer resulting relevance peer query intuitively scheme gives peers contain terms query highest ranking 
peers contain different subsets terms ranked power terms differentiating peers potentially relevant documents 
selection problem 
communities grow size feasible desirable contact large subset peers query 
established relevance ordering peers query decide contact 
address problem assume user specifies upper limit number documents returned response query 
simple solution selection problem contact peers order relevance ranking retrieved documents 
unfortunately obvious approach leads terrible retrieval performance :10.1.1.40.8955
address problem introduce heuristic adaptively determining stopping point 
relevance ordering peers contact top bottom 
maintain relevance ordering documents returned equation ipf substituted idf contacting peers documents returned sequence peers fail contribute top ranked documents 
intuitively idea get initial set documents keep contacting nodes chance able provide documents contribute top relatively high 
experimental results number known document collections see section propose function size community 
note algorithm contacting peers reduce query response time choose contact peers groups peers time 
parallel algorithm trades potentially contacting peers unnecessarily shorter response time 
pfs example application implemented pfs personal semantic file system show various components planetp provide useful infrastructure information sharing 
pfs provides similar functionality semantic file system defined gifford 
pfs novelty lies fact supports content querying dynamic community users requiring centralized indexing 
pfs manage storage directly 
files stored local file system peer files shared community published pfs uses planetp possible entire community search files content 
user uses pfs share documents create personal semantic namespace set shared documents 
currently namespace private single user 
semantic file system directory created pfs user poses query 
pfs creates links files match query resulting directory 
file created modified matches query pfs update directory link file 
building query subdirectory equivalent refining query containing directory 
pfs comprised components explorer file server pfs core 
explorer provides gui interface user 
file server simple web server provides functions return url local pathname return content appropriate file response get operation 
user publishes file pfs core obtains url file file server 
pfs embeds url pointer file xml snippet publishes planetp automatically indexes file 
pfs asks planetp publish xml snippet information brokerage service frequently appearing terms file discard time minutes 
terms automatically summarized bloom filter 
dual publication allow peers find file short time publication searching key appears file 
keys newly published file new bloom filter computed diffused system 
user creates directory pfs poses name persistent exhaustive query planetp 
file names extracted snippets returned planetp entered directory 
pfs automatically updates directories addition planetp persistent query upcalls 
updates removal file deleted owner modified longer map directory query difficult 
user opens directory pfs checks time directory updated 
time greater fixed threshold pfs entire query get rid stale files 
planetp able implement pfs weeks week designing pfs graphical interface 
planetp performance turn evaluating planetp performance concentrating planetp gossiping algorithm content search retrieval engine 
refer interested reader performance information brokerage service 
running number micro benchmarks prototype implementation give idea cost basic planetp operations prototype written entirely java currently stands lines code 
study scalability planetp gossiping algorithm terms time required distribute information required bandwidth 
study effectiveness planetp content search retrieval algorithm number benchmark data collections 
micro benchmarks start measuring costs planetp basic operations manipulation bloom filters managing inverted index local data store peer 
table lists operations costs measured mhz pentium iii pc mb memory running linux kernel ibm jvm 
observe optimized implementation ease implementation data structures implemented java collections framework costs jit compilation quite reasonable 
example takes operation cost jit ms cost jit ms bloom filter insertion 
keys 
keys bloom filter search 
keys 
keys bloom filter compress 
keys filter 
keys filter bloom filter decompress 
keys filter 
keys filter insertion inverted index 
keys 
keys search inverted index 
keys 
keys table costs planetp basic operations 
cost fixed overhead plus marginal key overhead just example cost inserting keys bloom filter operation cost ms cpu gossiping time ms base gossiping interval sec max gossiping interval sec network bw kb mb message header size bytes keys bf bytes keys bf bytes bf summary bytes peer summary bytes table constants simulation planetp gossiping algorithm 
second create bloom filter terms 
takes ms search query terms bloom filters 
currently compress bloom filters reduce gossiping bandwidth constant size kb bloom filters ease implementation 
chosen size summarize terms error 
compression scheme compression uses golomb codes encode runs outperforms gzip specific context 
table shows decompression occur frequently reasonably efficient time 
certainly move variable size filters compression may longer needed 
gossiping built simulator assess reliability scalability planetp gossiping algorithm 
measurements prototype parameterize simulator table list parameters 
validated simulator comparing results numbers measured cluster mhz pentium iii pcs mb memory running linux kernel blackdown jvm version 
switched blackdown jvm study smaller memory footprint ibm jvm 
switch jvm resource requirements effectively limited peers machine allowing validate simulation community sizes peers 
propagating new information 
studying time required gossip new bloom filter summarizing terms stable communities various sizes 
words planetp sends diffs bloom filters save bandwidth scenario simulates addition new terms peer inverted index 
measuring propagation time important window time peers directories inconsistent peers may able find new modified documents 
plots simulated propagation times scenarios lan peers connected mbps links 
peers planetp gossiping algorithm 
lan ae peers connected mbps links 
peers push anti entropy propagate information opposed planetp combined algorithm 
anti entropy approaches successfully synchronize smaller communities name dropper bayou deno :10.1.1.40.8955:10.1.1.160.7346
fact gossiping algorithm push pull anti entropy previous works 
quickly realized required bandwidth grew rapidly community size moved rumor 
dsl peers connected kbps links 
time sec dsl lan ae lan dsl mix dsl peers bytes lan ae lan peers bytes dsl dsl dsl peers time aggregated network volume average peer bandwidth required propagate single bloom filter containing keys vs community size 
peers planetp gossiping algorithm 
gossiping interval seconds respectively :10.1.1.46.8448
mix peers connected mixture link speeds 
measurements gnutella napster communities reported saroiu create mixture follows kbps kbps mbps mbps mbps links :10.1.1.160.7346
shows aggregate network volume propagate new piece information community 
shows average peer gossiping bandwidth propagation period dsl dsl dsl 
graphs observations 
propagation time log function community size implying gossiping new information scalable 
example propagation time community peers dsl seconds rising community peers 
dsl continued simulation community sizes 
propagation time seconds 
change diffused entire community total number bytes sent modest implying gossiping scalable 
example propagation new keys requires total mb sent leading peer average bandwidth requirement gossiping interval seconds 
easily trade propagation time gossiping bandwidth increasing decreasing gossiping interval slower gossiping rate means slower convergence lower bandwidth usage 
algorithm significantly outperforms uses anti entropy propagation time network volume 
respect network volume anti entropy requires communication entire directory summary form difference making message size proportional community size 
planetp information spread partial anti entropy message sizes proportional number changes propagated community size 
respect propagation time push algorithm trouble locating peers receive piece new information outperformed push pull algorithm 
joining new members 
assess expense having new members join established community 
perform slightly different experiment previous performing experiment lead similar required network volume bandwidth somewhat higher assume new member propagating bloom filter representing keys 
experiment start community peers wait views membership consistent 
new peers attempt join community simultaneously 
measure time required members consistent view community required bandwidth time 
experiment peer set share keys rest community bloom filters 
plots time reach consistency vs perc lan lan npa perc mix mix mix mix lan bytes time sec time required complete gossiping dynamic events set peers joining community normal operation dynamic community peers coming going lan npa gossiping algorithm partial anti entropy component join refers peer arrives back online wishing share new keys rejoin refers peer arrives back online new information share 
aggregated gossiping bandwidth second 
time sec lan dsl mix peers time required peers simultaneously join community stable online peers wishing share keys 
number joining peers initial community nodes 
results show sufficient bandwidth lan consistency reached approximately seconds minutes community grows 
contrast propagating change joining process bandwidth intensive joining member retrieve bloom filters representing total keys existing community 
having members join means bloom filters representing keys gossiped community 
result convergence times communities interconnected dsl speed links approximately twice lan connected communities 
convergence times mix connected communities unacceptable possibly requiring minutes hours 
draw results 
worst case scenario planetp expect occur peers dsl higher connectivity planetp quite 
second need modify planetp accommodate users modem speed connections 
particular join time download entire directory take long 
example download bloom filters transfer mb takes minutes modem connection 
exclude peers dsl speed need allow new modem connected peer acquire directory pieces longer period time 
need support form proxy search modem connected peers ask peers better connectivity help searches 
decided modify gossiping algorithm bandwidth aware assuming peers learn connectivity speed 
motivation flat gossiping algorithm penalizes community spread information fast slow members go 
modify basic planetp gossiping algorithm peers faster connectivity preferentially gossip peers slower connectivity preferentially gossip 
idea implemented follows 
peers divided classes fast slow 
fast includes peers kb connectivity better 
slow includes peers connected modems 
fast peer binary decision talk fast slow peer 
probability choosing slow peer 
binary decision peer chooses particular peer randomly appropriate pool 
performing anti entropy fast peer chooses fast peer 
slow peer chooses slow guy slow target peer source rumor case chooses fast peer initial target 
performing anti entropy slow peer chooses node equal probability 
study effects modified algorithm 
dynamic operation 
study planetp gossiping performs dynamic community leaving peers 
studying potential interference different rumors peers rejoin community different times 
experiment follows 
stable community online peers peers join community poisson process average interarrival rate seconds 
plots cumulative percentage events convergence time long arrival event known community planetp gossiping algorithm happens partial included 
observe partial anti entropy overlapping rumors interfere causing larger variation convergence times 
complete exposition study dynamic community behavior 
total membership community members 
members online time 
members online average minutes offline average minutes 
online offline times generated poisson process 
time peer rejoins online community new keys 
parameters roughly measurements reported saroiu number new keys shared occasionally meant representative real communities :10.1.1.160.7346
plots cumulative percentage events convergence time 
observe sufficient bandwidth convergence time tight perc lan mix mix mix convergence time dynamic community members 
seconds 
mix community bandwidth aware gossiping algorithm allows peers fast connections learn events peers slow connections 
peers fast connections convergence times variable 
fast peers talk slow peers progress may impeded 
looking closer fast nodes convergence time nodes able see fast nodes quickly lan case 
plots aggregate bandwidth time 
graph shows normal operation community requires little bandwidth ranging kb mb entire community 
plots cumulative percentage events convergence time dynamic community peers 
lan mix 
mix gives convergence time joins rejoins fast peers convergence condition fast peers need learn event 
mix gives convergence time joins rejoins slow peers convergence condition 
observe bandwidth aware gossiping algorithm allow fast peers learn new events quite efficiently 
time harm slow peers fact slow anyway bandwidth limitations 
summary 
results set experiments suggest gossiping works reliably scales range peers 
concerns scaling level time required download entire set bloom filters peer joins community peer bandwidth limited aggregate bandwidth required new members join community 
search efficiency turn assessing performance planetp search retrieval engine 
measure performance accepted metrics recall precision defined follows 
relevant docs 
user total 
relevant docs 
collection 
relevant docs 
user total 
docs 
user query posted user 
tures fraction relevant documents search retrieval algorithm able identify user 
describes irrelevant material user may look find relevant material 
ideally retrieve relevant documents single irrelevant 
obtain recall precision 
ideally want contact peers possible achieve recall precision 
assess planetp performance comparing achieved recall precision original idf algorithm 
match tfxidf performance confident planetp provides state art search retrieval capabilities despite accuracy gives gossiping bloom filters entire inverted index 
collections documents associated queries human relevance ranking measure planetp performance table presents main characteristics collections 
collections cacm med cran cisi previously collected buckley evaluate smart :10.1.1.46.8448
collections comprised small fragments text summaries relatively small size 
cap textual content documents compared link analysis done google web search engines collection ap extracted trec collection includes full articles associated press published :10.1.1.109.4049
measure planetp recall precision collections built simulator distributes documents set virtual peers runs evaluates different search retrieval algorithms 
distribution documents simulation follows weibull function motivated observing current file sharing communities 
study uniform distribution show planetp equally contact peers documents spread community :10.1.1.40.8955
compare planetp tfxidf assume optimistic implementation idf peer community full inverted index word count needed run tfxidf ranking equation 
query tfxidf compute top ranking documents contact exact peers required retrieve documents 
cases tfxidf simulator pre process traces doing word removal stemming 
tries eliminate frequently words second tries conflate words root running run 
plots tfxidf planetp average recall precision provided queries functions ap collection 
show results collection save space results representative collections 
refer reader web site www panic lab rutgers edu results collections 
plots planetp recall community size constant 
plots number peers contacted observations 
adaptive stopping condition planetp tracks performance tfxidf closely 
performs slightly worse tfxidf catches larger fact collections ipf slightly outperforms tfxidf large performance difference negligible interesting consider outperform tfxidf possible tfxidf correct 
case finding lower ranked documents determined relevant queries highly ranked documents returned tfxidf relevant 
recall precision trace queries documents number words collection size mbs cacm med cran cisi ap table characteristic collections evaluate planetp search retrieval capabilities 
idf idf recall best average recall precision ap collection distributed peers 
idf tfxidf 
ipf ad adaptive stopping heuristic weibull distribution documents 
planetp recall function community size fix 
number peers contacted requesting different numbers documents 
ipf ad adaptive stopping heuristic 
best minimum number nodes contacted retrieve documents relevance judgments 
second planetp scales maintaining constant recall precision communities peers shown save space 
study scalability point traces sufficiently large 
planetp adaptive stopping heuristic critical performance 
number peers grow planetp contact peers achieve recall precision 
adaptive stopping heuristic allows planetp efficiently 
fact plan starts contact peers may indication linear dependency stopping heuristic may aggressive 
planetp probably need contact peers point planetp recall catches tfxidf fact outperforms slightly collections 
see related current systems napster gnutella kazaa tremendously successful music video sharing communities search engines limited :10.1.1.13.2446
goal planetp increase power users locate information communities 
focused tightly text information appropriate collections scientific documents legal documents inventory databases contrast existing systems research efforts seek provide illusion having global hash table shared members community 
frameworks tapestry pastry chord different techniques spread key value pairs community route queries member data stored :10.1.1.140.3129:10.1.1.51.7802:10.1.1.51.7802:10.1.1.13.2446:10.1.1.111.1818:10.1.1.28.5987:10.1.1.105.3673
systems differ planetp key design decisions 
planetp explicitly decided replicate global directory gossiping limits planetp scalability 
advantage get worry happens parts global hash table members sign abruptly community 
entire community collaborate spread information peer share putting publishing burden entirely sharing peer 
second focused content search retrieval attempting provide similar service web search engines systems explored 
addition systems planetp resembles previous done tuple spaces models :10.1.1.13.3464
discussion body related scope 
system herald started study self organizing solutions environments similar 
proposed building publish subscribe system replicated servers networks 
related planetp information retrieval goals cori gloss address problems database selection ranking fusion distributed collections :10.1.1.46.8448:10.1.1.40.8955
studies done french show scale nodes :10.1.1.38.7535
different ranking techniques rely similar collection statistics 
cases amount information rank nodes significantly smaller having global inverted index 
gloss needs space global index 
gloss cori assume existence server hierarchy servers available users decide collections contact 
planetp want empower peers autonomously distribute bloom filters widely answer queries presence network node failures 
computing potentially powerful model information sharing ad hoc communities users 
communities grow size locating information distributed large number peers problematic 
planetp information sharing infrastructure indexes communal documents supports distributed content search retrieval 
thesis search paradigm small set relevant terms locate documents natural locating documents name 
useful search retrieval algorithm successfully locate information user searching presenting unrelated information 
planetp encompasses novel design decision support effective search engine 
planetp randomized gossiping effectively tolerates dynamicity inherent communities 
second planetp approximates state art text document ranking algorithm vector space model instantiated tfxidf ranking rule 
naive implementation tfxidf require peer community access inverted index entire community 
show tfxidf approximated compact summary bloom filter peer inverted index 
contributions show content search retrieval engine approximating stateof art text ranking algorithm built specific context computing show gossiping appropriate mechanism replicating information community show search retrieval algorithm matches performance tfxidf giving communities search retrieval algorithm possible assuming centralized server 
show planetp gossiping algorithm content search retrieval algorithm scale communities peers 
bloom :10.1.1.20.2080:10.1.1.20.2080
space time trade offs hash coding allowable errors 
communications acm 
brin page :10.1.1.109.4049
anatomy large scale hypertextual web search engine 
computer networks isdn systems 
buckley :10.1.1.46.8448
implementation smart information retrieval system 
technical report tr cornell university 
cabrera jones theimer 
herald achieving global event notification service 
proceedings th workshop hot topics operating systems hotos viii may 
callan lu croft :10.1.1.46.8448:10.1.1.40.8955
searching distributed collections inference networks proceedings th annual international acm sigir conference research development information retrieval pages 
acuna nguyen :10.1.1.40.8955
text content search retrieval ad hoc communities 
technical report dcs tr department computer science rutgers university apr 
acuna martin nguyen 
planetp infrastructure support information sharing 
technical report dcs tr department computer science rutgers university nov 
demers greene hauser irish larson shenker sturgis swinehart terry 
epidemic algorithms replicated database maintenance 
proceedings sixth annual acm symposium principles distributed computing pages 
demers petersen spreitzer terry theimer welch :10.1.1.40.8955
bayou architecture support data sharing mobile users 
proceedings ieee workshop mobile computing systems applications 
douglis feldmann krishnamurthy mogul :10.1.1.13.3464
rate change metrics live study world wide web 
usenix symposium internet technologies systems 
eugster felber guerraoui :10.1.1.13.3464
kermarrec 
faces publish subscribe 
technical report dsc id epfl 
french powell callan viles prey mou :10.1.1.38.7535
comparing performance database selection algorithms 
research development information retrieval pages 
gelernter 
generative communication linda 
acm transactions programming languages systems 
gifford jouvelot sheldon jr semantic file systems 
proceedings th acm symposium operating systems principles 
gnutella 
gnutella wego com 
golomb 
run length encodings 
ieee transactions information theory 
gravano garcia molina tomasic 
effectiveness gloss text database discovery problem 
proceedings acm sigmod conference pages 
harchol balter leighton lewin 
resource discovery distributed networks 
symposium principles distributed computing pages 
harman 
overview trec conference 
proceedings th annual international acm sigir conference research development information retrieval 
karger lehman leighton panigrahy levine lewin 
consistent hashing random trees distributed caching protocols relieving hot spots world wide web 
acm symposium theory computing pages 
kazaa 
www kazaa com 
keleher cetintemel :10.1.1.160.7346
consistency management deno 
appear journal special topics mobile networking applications monet 
kubiatowicz bindel chen eaton geels gummadi rhea weatherspoon weimer wells zhao :10.1.1.160.7346
oceanstore architecture global scale persistent storage 
proceedings acm asplos 
napster :10.1.1.13.2446
www napster com 
ratnasamy francis handley karp shenker :10.1.1.140.3129:10.1.1.51.7802:10.1.1.13.2446
scalable content addressable network 
proceedings acm sigcomm conference 
roselli lorch anderson :10.1.1.51.7802:10.1.1.51.7802
comparison file system workloads 
proceedings usenix annual technical conference june 
rowstron druschel :10.1.1.51.7802:10.1.1.28.5987
pastry scalable distributed object location routing large scale peerto peer systems 
proceedings ifip acm international conference distributed systems platforms middleware 
salton wang yang 
vector space model information retrieval 
journal american society information science volume pages 
saroiu gummadi gribble :10.1.1.160.7346
measurement study peer peer file sharing systems 
proceedings multimedia computing networking mmcn 
stoica morris karger kaashoek balakrishnan :10.1.1.105.3673
chord scalable peer peer lookup service internet applications 
proceedings acm sigcomm conference 
witten moffat bell :10.1.1.51.7802
managing gigabytes compressing indexing documents images 
morgan kaufmann san francisco second edition 
zhao kubiatowicz joseph :10.1.1.111.1818
tapestry infrastructure fault tolerant wide area location routing 
technical report ucb csd university california berkeley 

