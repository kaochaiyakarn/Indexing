regression available bandwidth measurements bob mats bj dept computer systems uppsala university box se uppsala sweden 
mail bob mats docs uu se phone fax method estimating available bandwidth network path 
extension enhancement bandwidth measurement method topp 
topp actively probes network path sending probe packets predetermined time pattern 
enhancement involves formalized estimation algorithm constrained linear regression 
algorithm bandwidth measurements fully automated requiring assistance user 
show method able estimate bottlenecks detected packet train methods probe 
addition inferring available bandwidth method gives estimate link bandwidth congested link network path 
link bandwidth estimates limited rate inject probe packets network 
keywords probing available bandwidth congestion packet pair estimation analysis 
measure available bandwidth network path attracted research efforts years 
notion available bandwidth imprecise definitions 
define available bandwidth unused portion link bandwidth link unused link bandwidth 
knowing amount bandwidth available useful situations 
example network applications adapt network conditions hand order preserve network stability 
words need ensure send rate match network capacity available bandwidth 
supported part ericsson connected project 
example point admission control 
endpoint routers try measure available bandwidth path new flow 
flow accepted available bandwidth accommodate 
third area routing 
typically paths hosts internet 
choice route available bandwidth path available bandwidth chosen route 
new analysis method estimating available bandwidth network hosts 
enhancement topp probing method applications described 
enhancement formalizes estimation problem includes estimation algorithm constrained linear regression 
possible fully automate bandwidth measurement process 
topp network friendly avoiding stress network unnecessarily 
sends separated pairs probe packets varying intra pair spacing network path 
keeping pairs sepa rated risk router queues overflowing due probe traffic minimized 
time values corresponding dispersion spacing time packets pair flow network path receiver form bandwidth estimates 
measurements topp performed way order avoid problems asymmetric routes self interference probe traffic shared media networks 
enhanced analysis topp tractable properties earlier proposed methods measuring available bandwidth able estimate available bandwidth bottlenecks hidden packet train methods :10.1.1.28.9234:10.1.1.17.2405
require fair queueing policy routers traditional packet pair technique 
handle network paths consisting hops opposed method 
fair queueing assumption packet pair mentioned topp method uses pairs packets obtain time values form bandwidth estimates 
method lends ideas keshav packet pair technique turn builds observations jacobson 
packet pair pairs equally sized packets sent back back network path 
keshav showed assumption fair queueing routers dispersion packets pair inversely proportional available bandwidth 
probe packet train methods attempt overcome fair queueing requirement packet pair technique carter crovella proposed probe method :10.1.1.17.2405
packet pair probe packet dispersion technique 
sending pairs packets probe sends trains packets back back packet train method 
available bandwidth estimate calculated size train divided time spacing packet 
assumption probe estimate valid routers service packets come serve fcfs dominating policy internet 
similar ideas exploited set ssthresh variable tcp 
flights segments packet trains estimates available bandwidth calculated similarly probe 
ssthresh variable determines tcp slow start phase ends 
ideally happen tcp sending rate equal available bandwidth 
proper value ssthresh product connection rtt available bandwidth 
dovrolis shown assumption probe packet train techniques invalid 
bandwidth estimates equal available bandwidth routers fcfs queuing policy 
statement elaborated 
dovrolis proposes method primarily intended estimate link bandwidths robustly 
part analysis shows estimate available bandwidth albeit paths consisting link 
method limitation 
able estimate available bandwidth paths consisting links routers fcfs policy policies variants fair queueing 
roadmap rest organized follows 
section introduces assumptions definitions 
hidden bottleneck problem described section 
section describe probing method 
enhanced analysis method sections 
section technique estimate parameters detected congestible links described 
section presents algorithm automated bottleneck estimation 
section show results experiments 
section drawn discussed 
assumptions definitions bandwidth definitions bandwidth definitions link bandwidth data transmission rate certain link 
call lowest link bandwidth network path bottleneck link bandwidth 
proportional share bandwidth connection share certain link bandwidth share proportion connection part total offered bandwidth 
implemented come served router policies 
proportional share bandwidth receiver side effectively probe uses metric available bandwidth 
surplus bandwidth currently unused bandwidth certain link 
call link lowest surplus bandwidth surplus bottleneck bandwidth 
metric definition available bandwidth network path 
network model section model measured probing rate depends offered rate cross traffic rates number links network path 
sender ln ln receiver rate different flows pass network 
pis rates probe flow xis rates aggregated cross traffic flows lis link bandwidths links path 
assume proportional sharing links paths 
assumption multihop path get proportional share bandwidth pi receiver hop offered load sender cross traffic hop xi si li xi 
pi pi pi si pi xi pi li pi si measured rate hop receiver path spanning links pn 
means scenario successively increase offered rate get rate reaches surplus bottleneck bandwidth sb hop rate receiver correspond proportional share bandwidth link illustrated 
graph rate receiver increases point surplus bottleneck bandwidth sb si sb 
rate receiver function offered bandwidth points congestible links see text detected indicated symbol 
continuing increase sb may eventually reach second lowest surplus bandwidth path 
graph grows equation 
assume surplus links appear get pj pi xi li xi li xj xi li lj continuing line reasoning find measured proportional share bandwidth receiver assume number links path 
model measured bandwidth function offered bandwidth estimate link bottleneck bandwidth surplus bottleneck bandwidth proportional share bandwidth path 
call link congestible particular offered load pi si 
congestible links detectable probing method 
link congestible depends surplus bandwidth links upstream 
probing varying offered loads call link congestible certain probing session maximum offered load session link congestible 
generalizations assumptions multichannel links link channels operated parallel packets arrive closely may distributed different channels 
violates single path assumption packets channels 
topp uses trains packet pairs multi channel links potential problem second packet probe pair may queue packet 
topp overestimate available bandwidth 
way overcome problem replace pairs short bursts bunches containing probe packets 
technique proposed paxson shows number probe packets burst nb links nb channels handled 
short bursts possible extension topp probing method rest packet pairs assumption links single channel links 
impact rate priority scheduling come serve routers topp probing flows average get proportional shares link bandwidth 
discuss topp measure scheduling principles weighted fair queueing wfq priority scheduling 
principles implemented existing commercial routers 
principles packets scheduled transmitted flow id class ways sort 
topp packet pair flow sorted class flows 
topp gives expected correct surplus bottleneck bandwidth flow perceive class principles 
fixed priority 
topp method report surplus bandwidth average left band width higher priority flows probe flow taken want 
wfq 
wfq similar rate systems flows classes reserved bandwidth 
topp flow shares class flows get proportional share reserved bandwidth class provided flows interleaved fcfs 
wfq scheduler allocates unused bandwidth class classes consume allocated share fair way 
depending load classes perceived bandwidth topp probe flow may vary reserved share full link bandwidth topp correctly estimate average surplus bandwidth perceived flow class 
effect packet dropping principles queue handlers routers switches drop packets buffer overflow controlled drops random early dropping red 
drops controlled limited specific flows invariant flows 
loss packet packet pair detected topp algorithm packet pair discarded calculations 
general loss statistical accuracy partly compensated additional packet pairs 
tail dropping red topp packets dropped rate flows 
controlled drops topp packets experience drops weight topp flow 
packet pairs get correct estimation 
hidden bottleneck problem bandwidth measurement methods assumptions congestible link link bandwidth bottleneck surplus bandwidth bottleneck coincide 
packet pair packet train techniques assumptions hazardous 
key problem cases parameters needed calculate valid estimate unknown 
assumption violated techniques estimate estimate available bandwidth 
assumption violated available bandwidth estimated clearly desirable network stability point view 
illustrated examples assumed generate probe traffic mbps mbps 
example assume path consisting mbps link followed mbps link mbps mbps 
cross traffic mbps merge probe traffic mbps link mbps link cross traffic mbps 
mbps mbps 
sending probe train rate mbps yield mbps middle network mbps receiver 
calculations second part equation twice output rate link mbps taken offered rate link 
measured rate receiver mbps 
problem impossible calculate observed intermediate values unknown 
surplus bottleneck value hidden congestible link 
second example assume mbps link followed mbps link 
furthermore assume mbps cross traffic mbps link cross traffic mbps link 
mbps mbps mbps mbps 
measured rate receiver mbps 
link bandwidth known surplus bottleneck value rewrite second part equation 
problem example unknown 
incorrect assumption link bottleneck surplus bottleneck estimated link bandwidth estimation tool probe :10.1.1.17.2405
example estimate mbps 
turn equation give surplus bandwidth mbps 
compared true surplus bandwidth mbps 
surplus bottleneck value hidden link bottleneck surplus bottleneck coincide 
equation easy show available bandwidth estimated assumption violated 
lb lb surplus bandwidth mbps example calculated link bottleneck bandwidth lb mbps example 
lb lb available bandwidth estimated 
packet pair packet train technique predict high surplus value unable separate characteristics links involved 
call phenomenon hidden bottleneck problem surplus bottleneck visible number probing tools 
topp method able find mbps hidden bottleneck examples shown sections 
network friendly probing topp topp separate phases 
active probing phase pairs probe packets injected network 
second phase analysis phase bandwidth estimates calculated dispersion measured receiver probe packets 
probing phase aims topp probing phase network friendly avoiding stress network unnecessarily 
important reasons existing traffic probe path suffer risk skewing measurements due heavy transient load probe traffic reduced 
achieve goal probe traffic generated way 
starting rate min separated pairs equally sized probe packets sent destination host 
pairs pair 
offered rate size probe packet time spacing packets sent offered rate increased set probe pairs sent 
increased amount set probe pairs sent 
goes offered rate reaches rate marks probe phase 
nl offered rate levels 
illustrates probe phase 
max min min topp probe sequence showing stepwise increase offered bandwidth time 
black dot corresponds pair probe packets 
ts time spacing consecutive pairs size probe packets time spacing packets pair offered rate achieved 
receiving side probe packets time stamped reception 
packets received timeout exceeded deal lost packets time stamps sent back probing host 
analysis phase traditional packet pair technique analysis phase relies principle bottleneck spacing effect 
packets time separation transmitted link service time qb packets leave link separated qb 
qb indicating link service transmit packets rate arrived 
size packets time separation experienced bandwidth link estimated ts keshav original packet pair method directly available bandwidth estimate 
topp analysis simply intermediate value calculation final estimate explained 
offered rate corresponding time stamps 
reduce value offered rate mean values set time stamps calculated 
ri value offered rate applying equation ri values size probe packets estimates bandwidth nl offered rate levels calculated 
assumptions network section equation gives relationship bandwidth estimate offered bandwidth 
nl 
rest analysis observation follows discussion section probe packets sent offered rate level hops surplus bandwidth congested 
sequence offered rates 
nl increasing congestible links may detected studying sequence 
nl 
details discussed sections 
analysis method analysis want find link bandwidth surplus bandwidth congestible links 
particular want obtain estimates surplus bottleneck link surplus bandwidth link available bandwidth 
intuitively 
find parameters equation performing regression pi pi pairs respect equation 
desirable avoid non linear regression required pi pi values directly 
applying known transformation pi pi equation resulting equation linear shown single link case probe path contains link links congestible 
furthermore pn known intermediate pi values unknown 
transformation described applied pairs effectively get cascaded linearization 
shows plot function corresponding 
comparing plots seen curved segments linear segments break points 
observation successive segments common join points curve continuous 
formally prove observations true straightforward exercise algebra omit 
pi pi plot function segments indicate links congestible 
transformed model consequently constrained segmented linear model written join point constraints number congestible links errors 
linear segment corresponds effect imposed reaching surplus bandwidth congestible link furthermore sb surplus bottleneck 
rest section discusses estimation values corresponding values 
reader comfortable idea estimate values may choose skip section 
segmented linear regression overview theory segmented linear regression 
follows unconstrained square estimate segment estimate ob tained continuity constraint ignored 
furthermore constrained square estimate segment way obtaining estimates variant method lagrange multipliers 
method making relevant adjustments shown 
general locations breakpoints unknown estimated 
suppose breakpoints known general case considered section 
breakpoints divided categories depending fall successive offered rates ii coincide offered rate 
hudson shows constrained segmented linear models ok ok 
constrained estimates unconstrained estimates regression simpler 
full constrained regression performed 
minimum residual sum squares achieved hypercube vertices defined points regions breakpoints belong 
estimated remaining issue obtain estimates congestible links 
problem estimates cascaded linearization general corresponding link linearizations turns intermediate pi congestible links deducted recursively order congestible links known 
consequently link estimated values obtained 
shown topp able directly estimate values surplus bottleneck link 
fact expressed equation 
surplus link incoming rate equals initially offered rate 
parameters estimated surplus bottleneck link order congestible links known pi pi link second smallest surplus bandwidth calculated 
new regression performed corresponding values eventually obtained 
recursive procedure continued congestible link 
practice separate regressions performed recursive step 
link parameters expressed directly terms cascaded parameters 
case order congestible links unknown discussed section 
determining congestible links estimated functions approximating linear segments graph calculate parameters congestible links 
congestible link 
path linearize equation separate congestible link way linearized forming function 
form pi pi function pi 
order simplify equations introduce parameters ui vi shorthands si li li respectively 
rewrite resulting equation pi ui 
get linear equation congestible link parameters ui vi 
want find values ui vi congestible links 
link able calculate see link bandwidth li vi surplus bandwidth corresponds linearization equation 
linearization equation si li ui 
congestible links physical order sender numbered 
surplus order starting surplus bottleneck sb named 
path congestible links basic example 
probing path get graph non horizontal linear segments segment segment 
measured bandwidth segment affected surplus bottleneck link 
segment uniquely identifies link link ub vb results regression analysis directly identify parameters ub vb 
second segment segment 
measured bandwidth segment affected links lowest physical order links defined link followed link 
equations equations second segment expressed 
note priori know physical order links solutions exist equation system 
know segment parameters link link alternative uc vc solution pairs exist depending upstream downstream noted point alternative link parameter estimations correct respect proportional sharing links 
irrespectively graph specifically values correctly describe proportional share application experience 
correctly determine important parameters upper bandwidth bound bottleneck link bandwidth see lower bandwidth bound bottleneck surplus bandwidth correct proportional share bandwidth independently upstream downstream clear situations application information needs knowing characteristics links knowing physical order 
situations application kind network management tool application exact knowledge link order 
way find additional information order establish proper link order 
unfortunately information graph directly determine correct physical order links need additional information 
partial solution suggest estimate link bandwidth bottleneck 
done applying techniques described topp time values :10.1.1.17.2405
link bandwidth bottleneck proper value vc uc determined know link bandwidth lc vc lc 
solution link bandwidth bottleneck 
alternative solution find link order tool pathchar variants 
point applications need know characteristics link link link estimated correctly independent physical order links 
algorithm case full knowledge section details topp analysis described assumed breakpoints order congestible links known 
obviously case real measurement situations 
way determining breakpoints study graph plotted visually identify 
approach disadvantage difficult automate 
certain visually identified breakpoints result best square estimate smallest residual sum squares 
build method initially devised hudson extended williams 
method iterative basic idea assumptions types locations breakpoints perform regressions assumption 
tuple breakpoint values give smallest total minimum sum segment constraints solution 
underlying assumption number segments known 
real measurements case 
rest section describes algorithm detail discusses estimate reader may choose skip section 
details algorithm explained earlier breakpoints divided categories breakpoints laying successive offered rates ii breakpoints coinciding offered rate 
algorithm starts searching solutions breakpoints belong category 
fail solutions breakpoints category ii investigated 
simplify presentation assume 
unconstrained segment furthermore constrained linear regression 
algorithm pseudo code 
algorithm set rmin nl assume obtain linear regression 
nl assume obtain rmin calculate linear regressions 
holds holds set rmin perform constrained regressions oi rmin set rmin solution gives rmin 
calculation done constraints 
constrained regressions done lagrange multiplier method mentioned section 
noted step simplified 
test vertices hypercube rectangle fact optimum entire boundary hypercube 
simplification done williams 
nl small williams mentions order errors introduced acceptable 
parameters segment estimated values surplus bottleneck link calculated equation 
possible values remaining congestible links calculated described section 
additional loops algorithm extra breakpoint 
authors experiences links congestible practice 
probably quite rare 
returning estimate obtained 
approach taken calculate second derivative curve search local maxima 
maxima correspond breakpoints derivative constant sides breakpoint course different values slope changes 
discrete set pairs derivatives approximated 
second approximated directly oi suitable choice 
algorithm started estimated counting number local maxima approximation second derivative 
process computationally feasible hard automate 
optimizations iterative nature algorithm computationally expensive number breakpoints large number offered rates large 
number possible optimizations enhance performance briefly list 
addition estimating second derivative regions algorithm searches breakpoints narrow 
performing regressions order described algorithm different sums products recalculated completely 
merely need adjusted addition subtraction single observation 
argue breakpoints belong category small 
possible optimization simply skip second step algorithm altogether 
search solutions boundary hypercube vertices described 
experiments evaluate enhanced topp analysis particular new algorithm section performed simulations networks simulator ns 
reason choosing simulations means evaluation advantage verifiable reproducible 
addition simulations testing controlled conditions possible 
different choices parameter values tested identical network conditions 
achieving real measurements internet difficult 
setup network topology simulations illustrated 
mbps ethernet lans connected wan consisting router nodes shaded circles 
link bandwidths delays wan links varied depending simulation 
generate cross traffic wan number nodes connected router nodes 
cross traffic nodes illustrated boxes 
cross traffic simulations generated pareto traffic generators lan lan network topology ns simulations section 
shape parameter set default value 
packet sizes cross traffic flows varied interval bytes averages bytes 
nodes generate receive probe traffic drawn 
measurements size probe packets equals maximum transfer unit mtu probe path 
motivation choice packet size time resolution set upper limit rate measured dictated equation 
furthermore previous large probe packets result accurate estimates 
desirable maximize probe packet size 
want avoid fragmentation probe packets 
mtu suitable probe packet size 
simulations mtu chosen size largest possible ethernet frame bytes 
measurements give example different steps analysis study scenario congestible links network path 
link link bandwidth mbps surplus bandwidth mbps 
surplus bottleneck link 
congestible links link bandwidth mbps surplus bandwidth mbps 
topology surplus bottleneck upstream second congestible link 
addition congestible links links see cross traffic links congestible 
simulations link bandwidths non congestible links order magnitude congestible links 
measured bandwidth offered bandwidth mbps measured bandwidth plotted offered bandwidth scenario congestible links 
surplus bottleneck link mbps mbps followed link mbps mbps 
offered probe traffic generated parameters min mbps max mbps 
probe packet reception times measured bandwidth calculated 
shows function graph seen offered rate increased variance measured rate increases increased interference cross traffic 
ratio offered measured offered bandwidth mbps linearized plot corresponding graph 
apply linearizing transformation linear regression performed 
shows resulting values plotted graph different segments visible previous graph 
order find number segments calculate approximation second derivative curve equation 
simulations value give best result 
choice critical change marginal effect 
reduce oscillations get smoother curve calculated moving average approximated second 
resulting curve shown 
determine number segments looked local maxima curve 
addition simple heuristic reduce regions searched breakpoints 
assumed breakpoints located regions local maxima values second maximum 
second derivative offered mbps approximation second derivative plot equation 
number segments breakpoint regions established algorithm applied data 
resulting regression lines shown 
parameters segment calculate values congestible links 
values example half table 
results table shows estimated link surplus bandwidths measurements network con link 
measurements show accuracy analysis method 
table varied link surplus bandwidths order show automated analysis able find surplus bottleneck 
seen analysis job finding bottlenecks estimated values accurate 
link bandwidth estimation mbps measurements accurate slope corresponding regression line smaller higher link bandwidths sensitive disturbances 
comparison column table contains probe estimates 
consistently significantly table estimated link surplus bandwidths congestible link mbps link bw mbps surplus 
probe higher surplus bottleneck bandwidths 
surprising probe effectively uses pro share bandwidth metric available bandwidth 
link bandwidth surplus bottle neck known surplus bottleneck value calculated probe estimate equation 
example probe estimate row mbps surplus mbps mbps 
practice link bandwidth congestible link unknown approach feasible 
assumption congestible link link bottleneck capacity estimated methods probe 
assumption wrong true surplus bottleneck bandwidth hidden available bandwidth estimated described section 
having congestible link estimate link accurately reasonable job estimating subsequent congestible links 
point accuracy subsequent link estimations matter research measurements reasons show problem estimating link scenarios estimation subsequent links quite accurate 
table shows estimations congestible links 
links scenario mbps link mbps surplus mbps link mbps surplus links earlier examples 
link variants described section shown links assumed smallest surplus ssf order non ssf order 
boldface highlight estimation alternative assume correct physical link order 
seen table link link estimated high accuracy estimation method able estimate second link bandwidth accuracy order known 
order known mean values possible orders yield reasonable estimates 
table estimated bandwidths congestible links mbps link bw mbps surplus mbps link bw mbps surplus 
order link variant ssf probe non ssf ssf probe non ssf fourth row row contain probe estimates orderings 
significantly higher surplus bottleneck bandwidth mbps 
simulations illustrate hidden bottleneck problem 
case impossible calculate surplus bottleneck value congestible links 
surplus bottleneck bandwidth naively calculated link bottleneck value mbps surplus estimates mbps mbps mbps mbps respectively link bottleneck value known estimated properly 
cases result significant estimation available bandwidth 
worth stressing calculations surplus bottleneck bandwidth probe estimates assumptions hold 
link congestible surplus bottleneck link bottleneck coincide 
surplus estimates obtained bogus correspond scenario probe flow experienced 
order show type case atypical table shows set link measurements time link surplus bandwidths 
estimations quite accurate 
note detected links higher link bandwidth maximum offered rate mbps 
probe estimates rows larger measurements link bandwidth surplus bottleneck mbps mbps table 
naive calculation surplus bottleneck value probe estimates similar ones previous measurements fact table estimated bandwidths congestible links mbps link bw mbps surplus mbps link bw mbps surplus 
order link variant ssf probe non ssf ssf probe non ssf yield quite reasonable estimates 
case mbps second mbps 
estimates bogus correspond scenario experienced probe flow 
link scenarios congestible links analysis method accurate estimating link 
second link estimated accuracy know correct link order lacking knowledge estimate mean values lowest obtained values reasonable 
concluding remarks simulation study draw proportional share bandwidth metric available bandwidth sustainable rate 
able detect estimate link surplus bandwidths hidden probing methods packet trains 
congestible links high link bandwidth difficult estimate links lower band width 
slope linear segments corresponding high bandwidth links smaller sensitive disturbances 
corroborated studies 
algorithm implemented computationally intensive needs optimized perfor mance 
aim study emphasize feasibility performance algorithm 
intend improve algorithm computationally efficient 
particular investigate certain properties model utilized respect 
study physical order congestible links determined 
authors research group mathematical statistics department uppsala university fruitful discussions suggestions helped improve quality 
mark allman vern paxson 
estimating network path properties 
sigcomm conference proceedings pages cambridge ma usa august september 
acm sigcomm computer communication review 
mats bj bob 
impact ethernet capture effect bandwidth measurements 
networking conference proceedings pages paris france may 
burden 
numerical analysis th ed 
pws kent boston 
robert carter mark crovella :10.1.1.17.2405
measuring bottleneck link speed packet switched networks 
technical report tr boston university computer science department boston ma usa march 
allen downey 
pathchar estimate internet link characteristics 
sigcomm conference proceedings pages cambridge ma usa august september 
acm sigcomm computer communication review 
dovrolis ramanathan david moore 
packet dispersion tech niques measure 
ieee infocom conference proceedings pages xxx yyy anchorage ak usa april 
sally floyd van jacobson 
random early detection gateways congestion avoidance 
ieee acm trans 
networking pages august 
kelly 
distributed connection acceptance control connectionless network 
proceedings itc edinburgh uk june 
hoe 
improving start behaviour congestion scheme tcp 
sigcomm conference proceedings pages stanford ca usa derek hudson 
fitting segmented curves join points estimated 
journal american statistical association 
van jacobson 
congestion avoidance control 
sigcomm conference pages stanford ca usa august 
van jacobson 
pathchar tool infer characteristics internet paths 
mathematical sciences research institute msri slides available ftp ftp ee lbl gov pathchar april 
srinivasan keshav 
control theoretic approach flow control 
sigcomm conference proceed ings pages rich switzerland september 
acm sigcomm computer communication review 
helmut 
exact algorithm estimating breakpoints segmented generalized linear models 
computational statistics pages 
kevin lai mary baker 
measuring bandwidth 
ieee infocom conference proceedings new york usa march 
kevin lai mary baker 
measuring link bandwidth deterministic model packet delay 
sigcomm conference proceedings stockholm sweden august september 
mascolo gerla wang tcp westwood bandwidth estimation enhanced transport wireless links 
special issue acm wireless networks journal mobile communication computation information selected papers mobicom 
steven mccanne sally floyd kevin fall kannan varadhan network simulator ns 
www mash cs berkeley edu ns bob mats bj 
new probing analysis method estimating bandwidth bottlenecks 
global internet conference proceedings san francisco ca usa november 
bob mats bj 
come serve packet scheduling implications tcp 
technical report department information technology uppsala university 
vern paxson 
measurements analysis internet dynamics 
ph dissertation university california berkeley april 
wild 
nonlinear regression 
john wiley sons new york 

linear regression analysis 
john wiley sons new york 

discrimination regression models determine pattern enzyme synthesis synchronous cell cultures 
biometrics 

