august tr wv appear acm transactions computational logic system interaction structure alessio guglielmi international center computational logic technische universit dresden dresden germany alessio guglielmi name introduces logical system called bv extends multiplicative linear logic non commutative self dual logical operator 
extension particularly challenging sequent calculus far achieved 
natural new formalism called calculus structures main contribution 
structures formulae subject certain equational laws typical sequents 
calculus structures obtained generalising sequent calculus way new top symmetry derivations observed employs inference rules rewrite inside structures depth 
properties addition allowing design bv yield modular proof cut elimination 
categories subject descriptors mathematical logic formal languages mathematical logic proof theory general terms theory additional key words phrases deep inference calculus structures cut elimination self duality linear logic pomset logic mix rule symmetry enterprise wanted define deductive system mixing commutative non commutative logical operators 
specific variant looking conservative extension multiplicative linear logic plus mix obtained adding self dual non commutative connective 
problem studied mainly retor proof nets logic called pomset logic cut elimination despite efforts able far provide sequent system logic 
challenge bring pomset logic realm sequent calculus reasons interesting see simple logic requires effort expressed universal proof theoretical formalism 
wants extend pomset logic expressive logics sequent calculus usually better formalism proof nets versatile example exponentials additives 
colleagues research surprising deep reasons kind logic expressible sequent calculus simple formalism call calculus structures able express self dual non commutativity great ease 
fact self dual non commutative alessio guglielmi operators naturally generate class provable formulae proofs depend accessing subformulae arbitrary depths impossible challenge sequent calculus 
new formalism general sequent calculus logics involutive negation classical linear logic allows refined proof theory possible sequent calculus sacrificing simplicity 
particular rules calculus structures access arbitrarily nested subformulae 
represents research program calculus structures focuses designing deductive system characteristics mentioned pomset logic 
open logic pomset logic 
conjecture logic crucial step missing time writing equivalence proof 
planned series papers dedicated part certain semantic idea show cut elimination 
second part tiu show defined sequent system 
third part colleagues hopefully show equivalence pomset logic way explaining impossible find sequent system pomset logic 
results shown stra burger :10.1.1.16.4445
pomset logic naturally derives study coherence spaces multiplicative linear logic see girard self dual operator close correspondence sequential operators defined example process algebras 
cut elimination procedure proof nets pomset logic gets non commutative links naturally induces computational model sequentiality plays role important parallelism interesting light curry howard correspondence 
non commutative logics important linguistics dating back lambek calculus 
semantic origins bv motivated reasons pomset logic essentially non commutativity brings sequentiality sequentiality archetypal algebraic composition human computer languages 
self dual non commutativity captures precisely sequentiality notion process algebras ccs place shows 
concrete level simple logic help understand linguistic phenomena 
provide simple deductive system prove cut elimination 
hand different level experiment tuning workbench ambitious proof theoretical problems studied 
new formalism calculus structures proof theoretical methods associated 
calculus structures generalisation sided sequent calculus called gentzen sch tte calculus see example 
logics involutive negation de morgan laws defined sided sequent calculus case translating calculus structures trivial uninteresting operation 
calculus structures interesting possibility defining logics employing concepts fundamentally different sequent calculus 
isolate ideas deep inference inference rules calculus structures operate inside expressions confined outermost subformulae roots system interaction structure formula trees 
top symmetry contrary sequent calculus natural deduction formalisms derivations essentially trees new formalism derivations flipped upside negated remain valid corresponds equivalent 
ideas find simple technical realisation employing unifying notion structure 
borrowed terminology belnap general tradition philosophical substructural logics structure expression intermediate sided sequent formula 
precisely ordinary logical formula modulo equational theory kind typically imposed sequents 
practical viewpoint logical connectives disappear particular connectives root formula trees logical rules structural opposed logical sense deal relative position substructures structure 
structures kind expression allowed inference rules simply rewriting rules structures name calculus structures 
course freedom allowed formalism dangerous 
wild way lose property 
cautious defining rules main part research understanding defining methodologies necessary making educated profitable new freedom 
main point note calculus structures possible proof theory define cut rule cut elimination sense just sequent calculus 
analogue subformula property guarantees rule cut special rules finite applicability 
features calculus structures closer sequent calculus formalism 
hand cut elimination calculus structures completely different sequent calculus systems designed deep inference feature 
fact sequent calculus cut elimination procedure depends crucially existence root connective case calculus structures 
complication comes essentially deep inference luckily top symmetry contributes simplifying situation considerably 
consequence symmetry fact cut rule reduced trivially atomic version principal formulae atoms 
perfect dual typical sequent calculus fact generic identity rules replaced atomic counterparts 
introduce existing techniques proving cut elimination calculus structures call splitting called decomposition see best conjunction splitting :10.1.1.16.4445
important difference calculus structures respect sequent calculus cut rule equivalently divided rules 
rules infinitary atomic cut rules decomposition cut shown admissible 
advantage wide range equivalent systems combination admissible rules varying degrees expressiveness proof construction 
admissible rules fact independent admissibility shown indepen alessio guglielmi dently way splitting 
big logical systems linear logic easily get tens thousands equivalent systems effort 
modularity ultimately possible top symmetry modularity course important conceptually typical computer science applications 
ideas structure deep inference top symmetry come certain combinatorial graph representation logical formulae call relation webs 
relation webs semantics distributed computational model compact representation formulae independently justifies equational theory imposed structures induces extremely natural notion rewriting independently coherence spaces formalism 
relation webs play crucial role tiu proof inadequacy sequent calculus deep inference shown essential feature feature sequent calculus possess 
argue relation webs having broad applicability 
fact certain characterisation theorem relation webs crucial treatment scales generic case logic number different multiplicative logical relations 
relation webs justify structure fragment rules responsible combinatorial behaviour logic independently negation 
interaction fragment rules corresponding identity cut sequent calculus rules depend negation 
fragment enjoys nice interpretation relation webs integration interaction structure fragments best studied calculus structures owing relatively poor development relation webs far 
decided underscore importance interaction structure title reasons believe key understand new way proof theoretical phenomena 
give hard evidence belief phase collect evidence study deductive systems attempting philosophical explanation observations 
hand studied number systems fit interaction structure pattern outlined invite reader form personal opinion matter reading papers classical linear logic extensions :10.1.1.16.4445
summary contributions new proof theoretical formalism calculus structures allows express new logical systems proof theoretical properties special interest computer science formalism comes new non trivial techniques proving proof theoretical results 
deductive system logic extends multiplicative linear logic logical operator interpretation broad notion sequentiality 
combinatorial representation formulae called relation web allows independent semantic justification section introduces structures relation webs informal representation structures help understanding intuitively 
section introduces calculus structures derives cut rule starting system interaction structure relation webs 
cut elimination discussed section 
section show conservative extension linear logic plus mix 
structures relation webs notion structure complicated useful intuitive idea relates traditional proof theoretical notions 
roughly structure formula sequent see soon captures aspects proof nets 
way understand structures matters graph representation 
subsection dedicated structures representation second relation webs 
structures structures capture aspects proofs appropriate start introducing example proof construction multiplicative linear logic management structures independent interest 
sided sequent presentation multiplicative conjunction times linear logic defined instances seen elementary steps computation corresponds bottom building proof 
perspective called proof search computation proof construction paradigm 
point view rule serious flaw rule applied decide split context main formula formulae multiset ways assign 
exponential source probably unwanted non determinism 
course adopt approach external sequent calculus implementation controls rule posteriori commitment time rule applied resources context necessity search proof ideally updating actual instance rule valid proof formed 
lazy approach similar general unifiers having decide instantiate quantified variables 
course reasonable solution adopted hodas miller case intuitionistic linear logic 
remains curiosity problem solved inside deductive system 
create clusters formulae corresponding contexts split formula picked demand 
traditional sequent calculus solution achievable simple means 
really counts building proof bottom way sequent calculus frontier hypotheses natural structure simply multiset 
need keep tree structure takes care nesting clusters 
consider example proof multiplicative alessio guglielmi linear logic negation atom connective called par id id id case appropriate partitions contexts got proof 
consider graphs tree structure left representation proof 
times connected formulae linked roots simple arcs formulae relation call copar times 
par connected formulae connected roots arcs special relation represented bow 
purpose distinguish pars equivalently put copar arcs 
graph left proof net axiom links consider partial representation proof deals rule instances 
example important invite reader get back reading 
deductive mechanism going see take care rule instances multiplicative linear logic proof absent graphs 
graph right obtained left horizontal mirror image lower part row atoms directing arcs 
nodes atoms meaning keeping things 
redundant kind structure probably silly linear logic anyway main interest partitioning times context 
slightly generalise structures order include new non commutative logical relation called seq top symmetry trivial 
formally deal graphs introduce bit syntax alternative linear logic 
language formula proved written expressions called structures 
binary connectives defining logical relations consider relations induced context meaning example rh par structure structures inside system interaction structure considered connected pars 
par commutative associative commutativity associativity equivalences decidable distinguish structures ordering nesting par structure par 
true copar copar structure rh properties par 
definition infinitely positive atoms infinitely negative atoms 
atoms matter positive negative denoted 
structures denoted generated unit atom 
sh called seq structure sh called par structure sh called copar structure negation structure negated atom negative atom positive positive negative 
designate special atom hole denoted purpose indicate specific place structure structures plugged structures hole appear scope negation denoted called structure contexts 
structure substructure context 
notation structural brackets kind surround content hole hole braces omitted 
example stands 
notation letter implicitly establishes class object belongs example write denote structure necessarily saying explicitly structure 
structures rh rh rh respectively represented rh rh rh arrows non seq structures seq structure context omitted 
associativity holds seq structures commutativity 
contrarily commutative counterparts live consider horizontal line space seq structures time 
example consider structures correspond left right expressions intuitive understanding nodes represent points space time order induced arcs mapped consistently total order consider time 
structures par interact times span par arc alessio guglielmi connects rest structure 
structures copar interact 
considered structures par interact structures copar 
matter interpretation structures seq allowed interact stay different time spans 
subsection shows possible rewritings central structure respect space temporal intuition 
get back 
turn attention negation 
negation involutive obeys usual de morgan laws par copar switches 
natural state sh sh time reversed negation 
behaviour negation respect seq accord similar case retor pomset logic commutative non commutative linear logic derived coherence semantics 
applying laws negation pushed inward atoms 
equip structures decidable equivalence relation takes care associativity commutativity negation 
places burden realising properties pattern matching abilities structural rules system 
happens sequent systems exchange rule commutativity sequents contraction rule idempotency kinds structures enjoy associativity par copar commutative 
definition structures considered equivalent modulo relation minimal equivalence relation defined axioms 
stand finite non empty sequences structures 
structure structure context said normal form negated structures appearing atoms unit appears atoms appear brackets eliminated maintaining equivalence 
structures structure proper seq structure proper par structure proper copar 
structure context proper seq context proper par context proper copar context structure proper seq proper par proper copar 
structures normal forms contain seq structures called flat normal form contain seq 
set equations minimal course real reason minimise 
structures equivalent normal form equivalent normal previous structures flat 
structures considered equivalent structure proper seq proper par proper copar proper seq proper seq context proper par context 
structures equivalently considered normal form negations pushed inward atoms negation axioms units removed extra brackets associativity singleton laws 
structure equivalent unit atom mutually exclusively proper seq proper par proper copar 
please note negation obeys de morgan equivalences par copar seq self dual ordering maintained negation 
reader equation 
unit slightly different traditional associativity singleton unit system interaction structure commutativity negation contextual closure fig 
syntactic equivalence logical units 
case just convenient syntactic mark allows get compact form inference rules plan interpret semantically 
anyway consistent formal systems units collapse unique logical operators example multiplicative linear logic mix nullary mix logic conservative extension see 
definition structure talk atom occurrences considering atoms appearing distinct example indexing atoms equal get different indices atom occurrences atom structure atom occurrence negative atom 
indicates set atom occurrences appearing size cardinality expression atom occurrences outside structures consider distinct possibly multiple appearances atom 
defined multiset atoms normal form 
note note occ occ occ occ true disjoint assume loss generality 
relation webs informal graphic representation structures seen partly justifies choice equations imposed structures 
weak justification relies representation intuitively appealing 
subsection offer strong justification 
see representation structures time formal relation webs 
contrary space time representation relation webs immediate correspondence alessio guglielmi inference rules going see important features unique relation web equivalence class structures 
formal derived relation webs asking certain conservation property hold manipulate relation webs 
relation webs sort semantics gives independent faithful account inference rules 
develop relation structure fragment establish tiu results inadequacy sequent calculus relation webs show certain structures provable 
readers wish understand behaviour possibly relation sequent calculus linear logic need read subsection 
safe ignore relation webs read rest exception subsection 
consider rh establish distinct atoms appearing ri appearing rj relation holds symmetric 
analogously distinct structures copar induce atoms relation example relations determined symmetric relations omitted example 
add sh induces relation atoms si sj symmetric 
definition structure normal form structural relations seq par copar minimal sets occ hold structure normal form associate structural relations obtained normal forms yield 
quadruple occ called relation web simply web subscripts necessary 
sets atom occurrences write indicate situations hold respectively represent structural relations occurrences atoms drawing dashed arrows represent negations structural relations 
example relations determined relation web 
graphical notation structural relations extensively please note graphs obtained structural relations space time ones representing structures 
system interaction structure structure occ flat iff 
easy see definitions atoms substructure structural relation respect atoms context surrounding substructure proposition structure atom occurrences respectively respectively atom occurrences syntax structures equivalence help focus system meaning representation 
structure picture minimum amount ink ambiguity certain situation really matters atoms mutual structural relations web structure displays information 
bunch atoms assigning structural relations couples guarantee produce valid structure 
questions order assignment relations atoms give structure structures having web equivalent 
subsection answers questions 
point reader hurry knows jump immediately section reading statement theorem 
follows characterisation structures terms properties structural relations 
intriguing expected call square property 
help simpler case series parallel orders studied 
theorem shows certain properties necessary structures 
theorem associated structural relations properties hold distinct atom occurrences reflexive 
holds 
relations mutually inverse relations transitive relations symmetric triangular property holds square property 
alessio guglielmi proof ands readily proved relevant definitions 
consider challenging cases ofs ands 
suppose possible cases structure contexts 
combinations generate similar possibilities 
proceed structural induction structure atom occurrences trivially distinct occurrences requested consider situations atom occurrences 
structures choose apply induction hypothesis consider cases considers help 
falsify hypothesis ofs situation consider suppose ofs false suppose true contradicts assumption 
analogously hypothesis ofs true scattered true 
argument simplified holding symmetry applies tos ands 
triangular property says structures configuration may triangle sides represent structural relation 
square property may represented transitivity taken account example structure shown diagram 
enjoying commutativity cases par copar simpler 
see happens par 
say informally square exactly sides diagonals nature forming simple path disregarding orientation 
relations transitive consider 
saw necessary structure 
am going show sufficient 
proof consists recursively finding suitable partitions set atom occurrences equipped structural relations 
able partition parts holds go ahead recursively recover structure 
need establish straightforward preliminary notions 
definition web candidate quadruple set atom occurrences web candidates couple partition iff system interaction structure fig 
square property fig 
square property partition iff partition iff web candidate relation may defined implicitly 
course webs successful 
web candidates 
am ready show thats constitute adequate characterisation structures 
important note conditions checked atoms time means algorithm checks conditions implemented locally network processors representing structure 
fran ois lamarche proposes different compact axiomatisation 
alessio guglielmi encourage reader check proof trying think task distributed algorithm 
theorem hold web candidate structure web 
proof proceed induction cardinality build structure 

bys consider case atom occurrences 
see enforce existence partition 
suppose partition exists consisting 
hold induction hypothesis structures exist 
take definition bys ands 
proceed analogously form partition take partition take role ensuring correct formation partition 
show partition exists hypotheses consisting 
construct sets atom occurrences incrementally starting building family couples step element added union added step final step gives partition 
non deterministic algorithm 
step take distinct atom occurrences randomly chosen holds ands apply 
iterative step disjoint non empty sets occurrences atom occurrences structural relation atom occurrences pick 
cases 
rearrange order meet requirements 
proceed cases 
situation represented left stands transitivity symmetry triangular property cases possible case represented central diagram right 
consider case similar 
bys ands element element partition disjoint sets disjoint sets way course situation represented left system interaction structure case ofs square property analogously resulting situation simplified transitivity shown right 
take case 
take 
empty take case 
analogous argument case situation represented left diagram stands entails possibilities right consider case triangular property partition way situation represented left square property enforces situation right define appropriate partition 
take case 

take empty take case 
cases managed analogous way 
case similar case 
final step algorithm occurs atom occurrences left partition 
previous proof reader puzzled seeing bottom construction atoms gathered bigger bigger structures starting alessio guglielmi correspond smallest substructures structure built 
problem approach symmetric contrary approach atoms participate time building structure 
feel symmetry construction important expected developments aside mathematically respectable property 
core proof relies combined action triangular square properties 
reduces problem case structural relations involved decide remaining undecided side square 
procedure generalised case different kinds context allowed structures 
fact going back proof theorem easy see thats ands depend number quality different structural relations uniqueness turn guaranteed inherently unambiguous constitution structures 
algorithm proof non deterministic reasonably answer inevitable question structure corresponding web unique 
turns modulo equivalence course theorem shows 
lemma structure partition respectively partition partition structures respectively 
proof occ web candidates form partition ofw structure falls cases 
th holds ti ti proper seq case ti ti fact suppose contrary suppose ti argument holds ti conditions 
possible find 
violates hypothesis 
atom occurrences ti come 
case tk atom occurrences tk th atom occurrences cases 
take 
tk tk 
th 
violates hypothesis 
case impossible 
argument case 
lemma proved partition ofw similar argument holds partitions simpler fact worry seq orders case 
theorem structures equivalent web 
proof part trivial concentrate 
structures normal form prove ifw proceed structural induction base cases trivially get suppose couple partition ofw ofw lemma system interaction structure andw andw induction hypothesis applies 
similar arguments hold synthesis formal system section synthesise formal see approximately symmetric closure technicalities cost repetition believe useful provide informal account see 
intuitions valid general calculus structures seen special case definition convenient syntax intuitive albeit vague space time interpretation 
getting back previous example consider problem designing system equivalent conservatively extending multiplicative linear logic 
system deal structures having problem non deterministic partitioning context seen 
partitioning branches double premiss inference rules doomed lose possibilities left open want retain 
see job single premiss rules 
dealing copar constraint requires big departure gentzen sequents style sequent calculus formula decomposed main connective context split 
calculus structures formula moved formula way determined local structure context stays fixed 
underlying claim provides evidence gentzen sequent systems tree structure derivations perfectly fit traditional logics classical logic necessarily new exotic ones multiplicative core linear logic 
better address issue concluding remarks 
just notice calculus structures radical regarding logical rules rules applying connectives completely disappear favour structural rules 
structures expressive tree organisation sequent derivation 
inference rules capable controlling happens premisses respect rules sequent calculus having control inference rules yields efficient management resources 
definition inference rule scheme kind name rule premiss rule names denoted 
inference rule premiss missing 
premiss instance inference rule equivalent instance said trivial said non trivial 
formal system set inference rules formal systems denoted derivation certain formal system finite sequence instances inference rules system alessio guglielmi communicate communicate communicate communicate communicate communicate fig 
communication direction growth derivation consist just structure derivations denoted 
premiss topmost inference rule instance derivation called premiss derivation bottommost inference rule instance called derivation premiss derivations consisting structure structure 
derivation premiss inference rules indicated name omitted 
length derivation number instances inference rules appearing 
systems strongly equivalent derivation exists derivation vice versa 
sequent calculus complementary dynamic views derivations adapt case top view premisses join trees form new derivation grows called deductive viewpoint 
bottom view starting point inference rules reach desired premisses called proof construction viewpoint 
moment try assign traditional special meaning action making derivation grow upward downward 
symmetry broken logical axiom concept proof stays firmly tradition 
choosing single premiss rules situation extensive symmetry derivations sequences inferences top symmetry par copar kind structure different names seq self dual symmetric intuitive interpretation communication meant possibility interaction 
state affairs represented arrows stand direction growth derivation please take picture informal intuitive suggestion 
interaction course involve negation linear logic realised identity logical axiom example 
time deal structural relations seq par copar involve negation 
logical rules conservation laws 
consider template rule call merge system interaction structure want determine laws obey 
rule says structures communicate context replaced structure choose 
say structure atoms conserves structural relations atoms free 
things conserved atoms number polarity space temporal relations communicating structures 
turns works want cut elimination add third law conservation preserves sort integrity 
law says 
get back condition probably obscure 
sake symmetry add replaced 
preceding laws find natural definition relation webs 
consider set denoted called merge set collect structures respect conditions 
know obtain structures characterisation relation webs studied previous section 
course limited practical requires picking structures large difficult compute set 
luckily characterise merge set recursively straightforward process unfolding obtain simple rules equivalently switch seq rules 
situation communication occurs structures copar going downward derivation 
look explicit instances rule called structure arguments symmetric ones merge rule obtain rules 
switch rule new called 
rules form 
rule ofq 
premiss negated exchanged respect corresponding rule 
perfect top symmetry expected 
point just add interaction rules form correspond identity axioms cut rules 
surprise dealing identity cut calculus structures shows interesting property 
fact possible switch rules replace generic version version deals atoms 
consequence insistence maintaining top symmetry 
fact entails important properties helps considerably simplifying cut elimination argument alessio guglielmi separates normal cut rule rules dealing negation interaction order structure 
properties exhibited systems calculus structures simplest example studied far 
subsection interaction insists derivability results responsible separation cut rule 
plan section merge rules derived relation webs subsection 
second third subsections derive call structure fragment fourth subsection study interaction fragment properties structure 
merge rules relation webs intuitively interacting means allowing application inference rules final purpose annihilating atoms 
briefly mentioned structures par context allowed interact derivation par par 
dually structures copar context interact going downward going upward 
structures seq context interact going going derivation 
structures extremes possibilities interaction gather intermediate situations merge set subsection give definitions merge set 
semantic nature second 
prove fact equivalent second definition pave way extraction simple inference rules compute merge set subject subsection 
subsection skipped readers ignoring relation webs 
firstly consider notion immersion structure 
definition say immersed atom occurrences atom occurrences occ occ structural relations respected example structures immersed 
substructures 
structure find structures immersed simply choosing atoms possible ways 
suppose set occ chosen bew occ 
consider web candidate 
theorem structure exists structure immersed definition unique modulo equivalence theorem 
compose structures 
definition part natural part motivated need getting cut elimination theorem 
definition structures occ merge set set structures immersed occ occ occ system interaction structure distinct atom occurrences occ occ hold confusion arises denote merge set elements 
merge set obtained free way provided atoms relations conserved 
constraints imposed 
time intuitive priori understanding condition offer important technical posteriori removing leads impossibility eliminating cuts 
helpful visualising possibilities interaction case say 
ignoring symmetric cases due permutations possibilities allowed means diagrams examples structures shown 
case ruled square see theorem structure having representation case ruled specifically equivalently example andm considered conservation laws 
enforces strict application immersion relation atoms conserved structural relations structures merged 
understand consider applies forbids inclusion means point view communication considered modules integrity violated enters vice versa happen single module results communication modules 
situation considered integrity conservation 
alessio guglielmi naturally extend merge operator sets structures sets structures define set 
properties law composition 
turns immediately set unit commutative 
associativity hold consider instance 
course definition implicit helpful syntactic setting 
move step syntax definition builds merge set recursively 
definition structures merge set recursively defined minimal set structures holds hold invite reader check examples new definition merge set 
note possible unit case merge set contains structures kind effect definition put restriction way build merge set couple structures external shape par copar 
condition definition uniform possible contexts 
example put allowed consider 
promised am going prove equivalence definitions 
theorem definitions equivalent 
proof indicate respectively merge operators defined 
prove structures proceed structural induction base cases inductive cases system interaction structure structures occ occ occ occ occ see 
induction hypothesis definition definition holds induction hypothesis definition holds get 
qh 
qh holds qi qi proper par 
qk 
qh qk occ occ qk occ fact suppose distinct structures say qk ql enjoy property leads contradicting 
suppose qk ql assuming qk ql independently take impossible 
qk 
qh atom occurrences partly partly qm atom occurrences suppose argument occ qm occ qm qm 
qh qm qm occ holds induction hypothesis definition 
definition holds trivially 
suppose induction hypothesis consider fact check 
condition holds true easily checked valid 
argument applies case analogous case 
merge set behaves respect negation theorem iff proof negation exchanges par copar symmetrically definitions merge set 
matter definitions merge atoms negative 
structure fragment remember consider communication possibility interact 
natural say structures communicate interleaved element merge alessio guglielmi set chosen 
merging structures eliminates course possibilities interaction relations conserved relation atom atom needs 
making derivation grow means narrowing direction growth freedom interacting amount communication structures involved 
definition inference andg called respectively merge system called merge inference rules give rise particular situation clearly shows intermediate position structures merge set andg friendly involve merge set hard obtain general 
hide simple relations different kinds context 
replaced simpler rules obtain rules process unfolding definition 
definition inference rule derivable formal system instance exists derivation unfolding ofg shown 
informal argument rigorous 
rule instantiates rules base inductive definition merge set 
inductive cases considered instances 
rules instances respectively 
rules respectively instances derivable ones rule vacuous rule equivalent instance 
replaced derivable derivable case avoid infinite regress derivable 
dual argument holds forg shown 
please note rule rule 
theorems unfolding argument rigorous give name newly discovered inference rules 
definition inference called respectively seq switch system interaction structure fig 
unfolding merge rule fig 
unfolding rule system called core symmetric basic 
core fragment system developing corresponds precisely structure fragment 
systems core proper fragment structure particular true extension studied 
refer reader definition core fragment show alessio guglielmi small system discrimination 
rules trivial way premiss equivalent example kinds context seq par copar possible ways context directly immersed different 
turns possible nesting appears premiss exactly rule 
law creation rules clear point surprise premisses exchanged submitted negation 
please note switch 
rule switch common fragments merge replaced switch corresponding seq rule 
theorem derivable 
proof instance ofg proceed structural induction definition 
base cases 
case 
inductive cases consider holds 
consider argument holds suppose case preceding ones applies 
suppose apply induction hypothesis apply induction hypothesis system interaction structure fig 
seq switch rules apply induction hypothesis theorem proof 
theorem derivable 
theorem strongly equivalent 
proof immediately follows theorems fact rules instances shows rules graphical representation 
get intuitive understanding rules better stick particular viewpoint consider derivations bottom proof construction perspective 
models mutual behaviour seq par communication seq structures interact parts provided order respected 
rule puts limitation way context interact structures seq 
consider structures communicate situations communicates possible alessio guglielmi contrary impossible interact time interact notable instance ofq non communicating structures proved fortiori proved context communicate 
test checking understanding rule verifying instances meet similar difficult cases proof splitting theorem 
mutual behaviour par copar 
way understanding rule considering times rule linear logic formulae multisets formulae 
system par context plays role comma linear logic right side sequents essentially connective copar plays role connective 
branches derivation generated application rule communicate proof construction 
applying rule choose part context communicates formula times relation case interact difference linear logic case linear logic rule early choice partition context system 
situation times rule realised switch ra ra ra course applications independent certain part context brought communicate inside copar demand search proof done inside sequent system linear logic 
notable instance course reminiscent linear logic especially 
formally investigate relation system linear logic section 
system interaction structure fig 
possible rewritings central structure proof search units rules particularly flexible example illustrates proof construction considering rewriting structures going upward derivation 
central structure applicable entire time span structure 
going upward derivation means deciding making choices substructure interacts 
left structure brought communication single application ofq right brought communication application ofq ofs 
seq maintains ordering copar acts switch structures coming outside 
point test reader trying prove proposition 
models mutual behaviour copar seq 
substructure communicates 
rewriting structure difference respect limits ability substructures interact example structure communication possible reach state communicates communicates longer possible rewriting structure fall copar relation 
notable instance ofq establishing intuitively sound ask adds derivable 
turns immediately derivable 
just consider derivation mimicked analogously derivation alessio guglielmi show derivable 
achieve admissibility ofq stronger system treat negation introducing rules interaction 
dealing structures looking polarity atoms 
interested knowing certain atom just fact certain place contained atom 
interaction consider information carried atoms realising communication atoms dual negation 
deal subsection 
comments structure fragment combinatorial core system building maintaining order broader sense usual mathematical notion 
retor studies properties proof nets pomset logic extension linear logic noncommutative connective derived coherence semantics 
shows rewriting system yields cut elimination certain proof nets 
rewriting system essentially equivalent 
retor got rewriting rules study inclusion relation series parallel orders 
series parallel orders basis definition structures retor result mine similar come underlying combinatorial phenomena 
difference mine rewriting system applies rules cut elimination procedure directly obtain inference rules 
interesting characterise derivability terms structural relations 
precisely natural ordering relation due retor 
relation compares energy structures compares number interactions possible 
goes derivation choices fewer possibilities interaction left 
point view goal search proof cooling structure zero 
definition structures partial order relation defined occ think definition adequate characterise derivability weaker version disallows cut elimination definition weak merge system wg wg andg definition merge set adopted required 
integrity conservation par copar enforced 
show strongly equivalent ws ws believe statement true conjecture iff exists 
system interaction structure time see easy argument prove long 
anyway really interesting problem finding improved definition adding conditions webs conjecture holds chances necessary new condition webs teach cut elimination correspond having turn introduced having cut elimination 
definition useful non trivial rule instance holds rule instances trivial see 
theorem structure set derivations trivial rule instance appears finite holds similar set derivations premiss proof immediately follows fact set structures atom occurrences finite fact finite number instances rules applicable structure 
remember consider structures equivalence classes 
interaction definition inference andi called respectively interaction cut inference called respectively atomic interaction atomic atomic cut ai ai interaction natural law conservation 
atomic interaction course corresponds identity axiom sequent calculus complementary atoms direct communication annihilate disappear time structure immersed 
think charge conserved 
add rule hesitation able produce derivations structure correspond proof linear logic context partitioning problem 
consider example alessio guglielmi possibilities ai ai ai ai ai ai derivations atoms annihilated brought direct communication demand 
notice derivation right atoms annihilated nested inside structure 
behaved systems replaced ands see easily 
way interaction complex structures reduced atomic combinatorial machinery 
cut rule linear logic represented syntax left realised derivation right obtained live symmetric world surprising cut admits symmetric factorisation respect interaction rule cut equivalently replaced system ai 
atomic certain point going forward time particle anti particle pop empty space 
contrarily happening nature immediately annihilate order energy conserved 
process system lead having cut elimination forbidden integrity see definition 
fact consider ai ea ai ea ed ws ea ed ai ea ai weak switch instance comply conservation law integrity atoms indexed help checking condition 
energy conserved proof essential cut interaction indirectly allowed system interaction structure ai ai fig 
derivability relations auxiliary atoms created ad hoc 
mandatory having cut elimination copar structures introduced cut copar context precisely guarantees 
conserved integrity communication enters vice versa 
forbidden broken rebuilt larger copar prevents communicating pieces original turn mutual communication sequential composition 
course ai instances ofi andi 
interesting question andi derivable respectively ai ai derivable ai ai 
relations derivability provide map means rule derivable system theorem derivable ai 
proof base cases perform structural induction case 
atom instance ofi instance 
inductive cases apply induction hypothesis apply induction hypothesis ons analogous case 
theorem derivable ai 
proof argument symmetric proof theorem 
just see alessio guglielmi derivations involved inductive cases reduction ofi andi andg successful test internal symmetries system building 
ultimate test course cut elimination 
derivability cut system containing atomic cut peculiar calculus structures usually just admissibility cut matter atomic 
example property sequent system linear logic system enjoys derivability identity system containing atomic identity 
reason simple polarity inference rules sequent calculus main connective going derivation goes right direction factorisation identity wrong cut 
reduction atomic cuts take place linear logic eliminating cuts proofs 
performing appropriate permutations rule instances proof typical reduction occur cut cut cut compare situation second derivation shown proof theorem stand constitute context 
case main connectives principal formulae introduced immediately cut guaranteed proofs 
system scope reduction atomic cuts broader structures introduced cut introduced atom atom atomic cuts 
get back question interdependence ofg andg posed preceding section interaction rules see andg mutually derivable 
theorem rule derivable symmetrically rule derivable 
proof rule instances theorem replace respectively system interaction structure corollary derivable symmetrically derivable 
rule scheme obtained exchanging negating premiss 
rule derivable system instance replaced means basically imaginable fragment reduced corresponding rules cut rule 
surprise course perfectly analogous spirit happens sequent calculus 
reader may wonder reason emphasise dealing fragment 
consider derivable system andq derivable ai 
mutual dependence andi 
put simplest rules give name resulting system 
definition system ai ai shown called symmetric basic system ai ai fragments respectively 
easy theorem provides systems equivalent theorem strongly equivalent systems ai ai 
proof prove strong equivalence system replaced ai theorem ai theorem theorem 
conversely instance ofi ofi instances ofg corollary replaced 
proceed analogously 
system ai equivalent instance ofi theorem 
proceed analogously ai 
alessio guglielmi ai ai fig 
symmetric basic sbv strong equivalence ai ai remarkable entire fragment common andq concentrated 
see 
rules enjoy important property certain notion computational cost constant 
check atoms dual negation erase introduce dual atoms depending interpretation 
inq rearrange pointers structures involved looking structures think graphical representation saw 
rules enjoys property rules involve inspecting structures act 
please note logical axioms derivations may grow indefinitely directions ai may 
breaking symmetry cut rule admissible 
just look derivations cut rule replaceable rule atomic cut rule produces matter atoms 
course want look admissibility proofs special derivations matter consumed 
proof intrinsically asymmetric object side formula proved logical axioms case emptiness 
logical axioms proofs 
add logical axiom break symmetry adding 
get structure negation provable 
point carrying symmetry am interested non symmetric idea leave symmetry broken 
definition logical axiom rule called unit ai system interaction structure fig 
basic bv proof derivation topmost inference instance unit rule 
proofs denoted 
formal system proves proof written name omitted 
systems weakly equivalent prove structures 
please note occur derivation top 
course defined provability possibility observing top derivation introducing 
prefer traditional way logical axioms allow extensions express complex provability observations formal systems definitions 
definition inference rule admissible formal system proof exists proof course derivability implies admissibility 
result break symmetry cut rule superfluous proofs meaning production matter really necessary order annihilate possible 
turns admissible fragment excluding switch belongs fragment necessary observing provability 
remains formal definition system ai called basic section organised subsections splitting theorem proved second applied proving admissible splitting theorem expected technically complex 
exchange effort general ordinary cut elimination applicable logical systems currently studying 
splitting theorem classical arguments proving cut elimination sequent calculus rely property principal formulae cut active branches determine rules applied immediately cut 
consequence fact formulae root connective logical rules hinge formula 
property hold calculus structures 
rules alessio guglielmi applied deep inside structures happen cut 
complicates considerably task proving cut elimination 
hand great simplification possible calculus structures reduction cut atomic form 
remaining difficulty understanding happens going proof atoms produced atomic cut 
atoms atomic cut produced inside structure belong distinct branches sequent calculus complex interactions context possible 
consequence techniques largely different traditional ones 
approaches cut elimination calculus structures explored papers relied permutations rules authors relied semantics :10.1.1.16.4445:10.1.1.16.4445
third technique called splitting advantage uniform permutations yields simpler case analysis 
establishes deep connection sequent calculus fragments systems allow sequent calculus presentation case commutative fragment 
systems expressed sequent calculus method appears entirely general independent sequent calculus complete semantics 
splitting best understood considering sequent system weakening contraction 
consider example multiplicative linear logic proof sequent formula contains subformula know sure proof instance rule splits context 
situation corresponds consider shown left proof sequent composed pieces 
calculus structures different proofs correspond sequent calculus differ different possible sequencing rules rules calculus structures smaller granularity larger applicability 
proofs fits scheme right 
precisely illustrates idea splitting technique 
derivation implements context reduction proper splitting 
state general principles follows system interaction structure context reduction provable reduced going proof structure provable 
example reduced shallow splitting provable reduced going proof provable 
example reduced 
context reduction turn proved splitting core matter 
biggest difficulty resides proving splitting mainly requires finding right induction measure 
need establish easy propositions express obvious properties induced rules implicitly rest 
proposition size premiss derivation greater size 
proposition bv provable provable provable provable 
calculus structures course similar term rewriting system especially intuitive bias considering derivations growing bottom fashion 
case direction rewriting occurs clear natural terminology rewriting systems inference rules 
definition inference rules kind called redex contractum rule instance 
theorem shallow splitting structures structure provable exist bv provable provable exist bv provable proof derivations appearing argument consider lexicographic order natural numbers defined iff alessio guglielmi consider statements occ proof length occ proof length statement theorem equivalent 
consider measure proof induction measure 
base case trivial see inductive ones 
assume theorem trivially proved proposition 
reason assume prove andc 
size proof length consider bottom rule instance proof assume non trivial induction hypothesis applies 
reason position redex 
possibilities ai cases exhaust possibilities redex inside ai consider redex inside analogous previous case 
redex inside ai consider ai ai system interaction structure redex inside analogous situations ones seen 
cases exhaust possibilities apply induction hypothesis get occ occ instance trivial apply induction hypothesis get take build similar argument holds proof apply induction hypothesis get alessio guglielmi occ occ instance trivial apply induction hypothesis get build similar argument holds proof redex inside analogous situations ones seen case 
possibility proof apply induction hypothesis get occ occ trivial apply induction hypothesis get 
build system interaction structure size proof length consider bottom rule instance proof assume non trivial induction hypothesis applies 
reason position redex 
possibilities ai analogous case 
redex inside analogous situations ones seen case 
possibility proof apply induction hypothesis get occ occ instance trivial apply induction hypothesis get build alessio guglielmi similar argument holds proof redex inside analogous situations ones seen case 
cases exhaust possibilities apply induction hypothesis get occ occ occ holds trivial apply twice induction hypothesis get take build system interaction structure apply induction hypothesis get occ occ instance trivial apply induction hypothesis get build theorem context reduction structures contexts provable exists structure structures exist derivations bv bv proof induction size 
base case trivial 
inductive cases proposition proofs applying induction hypothesis find build bv bv provable argument applies 
proper par theorem proved possibilities alessio guglielmi theorem exist bv bv applying induction hypothesis get bv bv bv bv bv proceed analogously 
analogous previous case 
analogous case 
corollary splitting structures contexts provable exist structures structures exists derivation bv provable exist structures structures exists derivation bv cases proofs bv bv proof apply theorem apply theorem 
admissibility fragment start admissibility ofq 
broke symmetry informally consider interaction phenomenon occurs inside par contexts going upward derivation 
take aq instance system interaction structure process rewriting structure unit axiom structures vanish atoms inside participate interactions 
consider atoms annihilate atoms 
possibilities inside inside 
ask application ofq contributes essential way vanishing get application ofq just introduces new constraints structure obtain 
argument holds conclude far provability concerned disposable 
argument essentially entirely correct reader see problem reasonable amenable direct implementation admissibility proof 
fact study unfortunately certain special cases argument requires complexity case analysis 
proof uses splitting direct opinion illuminating 
theorem admissible proof consider proof bv corollary exist derivations bv bv bv alessio guglielmi theorem sr st sr st sr st bv build proof sr bv st bv sr st bv bv sr st sr st bv st sr st st sr st sr bv sr st sr st sr st sr st sr st sr st bv bv bv st repeat inductively argument starting top proof eliminating instances 
consider structure certain point going building proof ai creates complementary atoms cut suppose creation atoms proof atoms communicate eventually annihilated atoms job killing 
proceeding top leave copar context hosts newly created atoms 
means proof structures point going upward enter copar carrying killer atoms 
essentially consider case structures proved situation system interaction structure communicate resources needed annihilate come inside 
consider alternative situation original atoms created 
structures inside enter copar live par structural relation 
reach structure fact enter original copar context distinct uses rules 
replaces remain par context 
merged come direct communication example complementary atoms eliminated application 
provable annihilated resources coming 
shows original cut superfluous continue applying argument cut instances 
implement idea theorem state easy proposition 
proposition context structures exists derivation alessio guglielmi theorem admissible proof consider proof bv ai corollary exist derivations bv bv bv consider proof context bv ai bv instance occurrence interacts occurrence coming 
replace occurrence obtain proof 
analogously transform proof 
build proof twice proposition 
bv bv ai bv bv repeat inductively argument starting top proof ai eliminating instances 
admissible fragment ai 
theorems strongly equivalent system ai bv 
theorem sbv equivalent 
proof proof eliminate instances starting top 
atom proved consistent 
consistency property reinforced theorem proof particularly interesting system interaction structure theorem provable provable provided 
proof proof ai get sbv flipping proof 
provable provable impossible 
theorem decidable structure provable proof set derivations look finite trivial instances rules applied limitation see subsection 
cut free sequent systems enjoy subformula property premisses rule instances contain subformulae formulae 
case different connectives split formulae parts go premisses analogous 
apart cut rule rules lower energy formula see subsection property mentioned ands atom occurrences diminish number 
sense get simpler structures going building derivation 
consequence subformula property systems modular respect connectives system remove connective dual negation relative rules affecting provability formulae connectives 
similar situation occurs consider employ seq structural relation just flat structures 
system appropriate definition called flat system ai 
deducing flat structures means remaining flat horizontal line structural relations commutative 
theorem flat structure provable provable proof proof flat structure transform object changing seq context appearing structure par context 
proof instances ofq trivial eliminated way obtaining proof key result correspondence linear logic going see section 
relation linear logic linear logic course main source inspiration 
section show extends multiplicative fragment linear logic conserving provability bv alessio guglielmi id fig 
mix mix commutative fragment 
version linear logic talk multiplicative fragment units 
see necessary fits naturally scheme consistent results employed 
definition system multiplicative linear logic units rule mix denoted mix formulae denoted built atoms binary connectives called respectively par times negation necessary brackets disambiguate expressions 
negation defined de morgan laws formulae considered equivalent modulo relation 
sequents denoted expressions kind ah comma formulae ah stands multiset union 
multisets formulae denoted 
example sequent formulae 
derivations denoted trees represented sequents called premisses finite number possibly zero instances inference rules applied 
derivation premisses proof denoted 
linear logic formulae correspond flat structures structures seq contexts appear different unit 
system interaction structure definition function transforms formulae mix flat structures inductive definition domain extended sequents way 
ah ah fairly obvious result section ability mimic derivations mix 
course 
need firstly establish restrict interaction rules flat structures seq rules necessary 
lemma rules restricted case flat derivable ai ai respectively 
proof proof just special case ones theorems 
theorem derivation mix exists proof derivation mix proceed structural induction 
cases possible take formula take proof obtained av unfolding instance ofi lemma 
shape suppose shape 
take exists induction hypothesis 
mix derivation left suppose suppose instance alessio guglielmi trivial 
cases induction hypothesis derivations 

denote derivation obtained structure appearing hole analogously 
take respectively derivations 


av 

corollary provable mix provable produces inherently different derivations mix saw bound application rules main connective 
natural question point proves mll mix answer 
need inverse transformation definition function transforms non unit normal flat structures formulae mix inductive definition formulae range considered modulo equivalence relation generated commutativity associativity equivalent structures domain brought equivalent formulae 
definition extended non normal non unit flat structures obvious way 
theorem non unit flat structure provable provable mix 
proof proof known properties provability mix provable provable context formula hole filled 
admissible mix 
system interaction structure property easily provable induction structure second standard order cut elimination argument 
prove theorem proceed induction length proof base case id ai take inductive cases corresponding bottom rule instance proof mix corresponding induction hypothesis proof bottom inference rule instance firstly prove fact provability mix similar property provable 
proceed induction structure 
inductive cases id tl tl tl 
base cases id tl mix id tl coming back main proof ai id tl tl id tl id take cut bottom inference rule instance iss applied property proof take cut id id id alessio guglielmi cuts eliminated property proofs obtained inductive cases transformed cut free proofs mix 
correspondence mix respect provability complete common language theorem non unit flat structure provable provable mll mix 
proof follows theorems 
correspondence linear logic extended multiplicative units follows 
respectively units connectives 
consider adding mix inference rules usual rules third abramsky jagadeesan nullary version mix rules collapse provable 
means left essentially single unit map unit effort 
question answered possible design formal system tradition proof theory simple properties universally recognised fundamental ones concurrent management information 
system come analysis local properties computation sending receiving atomic message preventing information exchanged turning finite bounded switch 
float purely philosophical realm decided apply principles concrete problem extending multiplicative core linear logic noncommutative operator 
investigation took form experiment give account summarises results achieved 
departed rigid scheme sequent calculus conceived call calculus structures 
tool designing various formal systems differences sequent calculus structures take place formulae sequents difference way look 
formulae trees built binary connectives structures collections atom occurrences couple occurrences bound structural relation 
certain laws hold structures purpose establish modularity properties 
characterised class structures terms properties structural relations possess move frees idiosyncrasies syntax say structures essentially determined inner structural relations 
system interaction structure idea main connective natural think inference rules act rewrite structures 
limit employing single premiss rules 
move sense show get analogous feature subformula property 
fact happens derivations read bottom wise progressively limiting range choices interaction happen 
vice versa read topdown wise making weaker weaker assertions times places interactions occur 
calculus structures building commutative non commutative system implicit way 
idea define structural relations interested think simple conservation laws sense try find rules complexity minimal implement conservation laws 
starting point mentioned definition structures built structural relations discussed 
idea structures freely merge provided doing original structural relations conserved 
think derivability notion simpler possesses analogues subformula property 
having unfolded symmetric rules having added rules interaction discovered cut rule admissible 
interaction rules simply recognise structures dual negation primitive modify dealt order structural relations having mind limited objective getting cut elimination 
reason solving problem difficult 
result definition adds previous merging law axiom call integrity conservation 
giving cut elimination definition surprising property producing exactly multiplicative linear logic plus desired non commutative extension 
remarkable get core part linear logic simple minded natural purely syntactic approach essentially ideas symmetry conservation 
resulting system bv simple order managed rules interaction intuitive semantics hesitate call beautiful 
success calculus structures dealing non commutativity stems simple fact 
consider seq rule sequent calculus able mimic get derivation substructures premiss copar seq 
strong prevents certain communications allowed inq 
problem sequent calculus double premiss rules perform conjunction premisses need finer 
mean impossible devise sequent systems deal non commutativity commutativity 
works alessio guglielmi fact successful attempt task far know 
authors manage build multiplicative linear sequent system connectives commutative non commutative couple contains conjunction disjunction 
system expanded contain linear logic classical logic 
price pay opinion simplicity 
despite simplifications sequents provided technically sophisticated quite complex order structure 
conflicts belief systems simple useful course subjective matter 
pfenning devise natural deduction intuitionistic sequent system form non commutative linear logic obtained refinement intuitionistic linear logic 
approach essentially aimed logic programming attempt intimate coexistence commutative non commutative relations logic captures non commutativity hypotheses 
intrinsic intuitionistic asymmetry systems prevents having involutive negation 
having perfect symmetry negation dual entities communicate absolute prerequisite point view logical foundations concurrency 
say systems pfenning satisfying solution specific foundational problem 
papers know related apart retor ones discussed places 
know compare system basis promise groundwork applications research 
matter fact formal systems discussed issue having introduced new proof theoretical methodology 
cut rule admissible system principle candidate applications automated deduction logic programming direct comparison done linear logic course study uniform proofs 
respect miller defined formal equivalent linear logic 
biggest problem proof construction field eliminating possible unnecessary spurious non determinism bottom search proof forum succeeds eliminating non determinism due permutability inference rules linear logic employs clever technique called focusing due andreoli keep search proof certain choices done computation 
unfortunately intimately tied sequent calculus forum suffers context partitioning problem times rule 
interesting see system subjected treatment andreoli miller performed linear logic lead system properties forum class non commutativity context partitioning problem 
purpose situation extensions quite different sequent calculus 
examples shows reductions may occur structure building derivation 
just single active area corresponding main connective active areas corresponding formulae sequent 
fact big difference sequent calculus definite improvement point view concurrency 
system interaction structure hand non determinism undesirable calculus structures non deterministic sequent calculus 
non determinism sequent calculus analysis rule permutations recombination 
true calculus structures yields permutations non determinism time offers possibilities recombination 
call decomposition theorems derivations rearranged composed fixed sequence segments carried disjoint subsystems original system 
example multiplicative exponential linear logic exhibits disjoint subsystems enjoy property different rearrangements 
flexibility counterpart formalisms sequent calculus natural deduction proof nets 
success taming nondeterminism obtained able faithfully capture fragment containing prefix operator 
say far obvious calculus structures weak strong applications proof construction 
question logical reason confine rewriting certain selected places logical structures just happen external 
calculus structures atoms suitable structural relations may participate rewriting time 
principle important applications 
conservation principles outlined course semantic ideas 
application led discovery inference rules 
possible semantic ideas get characterisation derivability larger larger fragments 
problem stated solution lead semantic characterisation derivability combinatorial core system 
interest characterisation envisaged fact involve checking natural ordering relation induced structural relations 
know investigation give inspiring semantics starting point 
games semantics definitely explore 
gives semantics mix multiplicative linear logic fragment linear logic strictly included system 
semantics fully complete proof nets winning strategy denotes unique cut free proof net 
derivations calculus structures interleave parts corresponding hypothetical proof nets happens sequent calculus obvious firstly establish proof nets system 
fact proof net usually stands derivations differing information net proof nets closer objects semantics derivations 
natural candidate case retor notion proof net mix features non commutative connective 
connective appears similar mine hope third projected resolve question 
justified introduce new calculus new proof theoretical methodology simply solve problem non commutativity 
calculus structures just solving problem 
far people group dealt classical logic contains concise elegant cut elimination proof linear logic conservative extension alessio guglielmi multiplicative exponential linear logic modal logics yetter non commutative logic :10.1.1.16.4445
able mentioned logics entirely local way meaning application rule bounded computational cost including contraction managing additive contexts 
general obtain properties atomicity locality modularity aforementioned decomposition theorems possible proof theoretical formalism 
currently implementing deductive systems calculus structures starting 
express belief reader 
think construction formal system computer science local notions semantics employed example simple laws conservation important global ones denotational semantics derivations say 
global perspective enforced cut elimination 
words believe start bottom languages properties want model try sense 
cut elimination anyway prevent making worst mistakes 
doing way rewarded merge rules space temporal interpretation outcome unexpected beauty 
acknowledgments supported part marie curie tmr post doc inria nancy 
started project encouraged dale miller taught lot proof theory 
horst reichel listened put interesting questions preliminary versions 
giorgio levi encouraging endeavour 
minimalist spirit listened enjoyed music michael philip glass 
jim lipton carefully read discussed related issues helpful 
pietro di great source encouragement especially liked directly inspired splitting theorem 
tiu nder kai br nnler lutz stra burger paola steffen lldobler checked details kai lutz mistakes early versions cut elimination argument eventually led discover splitting 
christian retor having introduced fascinating problem non commutativity linear logic deeply influenced ideas subject 
roy dyckhoff fran ois lamarche amount dedicated shape owes careful reading checking 
samson abramsky radha jagadeesan 
games full completeness multiplicative linear system interaction structure logic 
journal symbolic logic jun 
michele paul 
non commutative logic multiplicative fragment 
annals pure applied logic 
jean marc andreoli 
logic programming focusing proofs linear logic 
journal logic computation 
denis philippe de groote christian retor 
complete axiomatisation inclusion series parallel orders 
comon editor rewriting techniques applications rta volume lecture notes computer science pages 
springer verlag 
kai br nnler 
atomic cut elimination classical logic 
baaz editors csl volume lecture notes computer science pages 
springer verlag 
url www iam unibe ch kai papers short pdf 
kai br nnler 
restrictions contraction 
logic journal igpl 
url www iam unibe ch kai papers pdf 
kai br nnler 
deep inference symmetry classical proofs 
logos verlag berlin 
url www iam unibe ch kai papers phd pdf 
kai br nnler alessio guglielmi 
order system finite choice premises 
vincent hendricks fabian pedersen uwe heinrich wansing editors order logic revisited 
logos verlag 
url www iam unibe ch kai papers pdf 
kai br nnler tiu :10.1.1.16.4445
local system classical logic 
nieuwenhuis voronkov editors lpar volume lecture notes artificial intelligence pages 
springer verlag 
url www iam unibe ch kai papers lpar pdf 
paola 
purely logical account sequentiality proof search 
peter stuckey editor logic programming th international conference volume lecture notes computer science pages 
springer verlag 
url www ki inf tu dresden de paola pdf 
pietro di 
structures multiplicative cyclic linear logic vs 
technical report universit di udine 
accepted csl 
url www dimi pietro papers soft copy ps ps gz 
jean yves girard 
linear logic 
theoretical computer science 
alessio guglielmi lutz stra burger :10.1.1.16.4445
non commutativity mell calculus structures 
fribourg editor csl volume lecture notes computer science pages 
springer verlag 
url www ki inf tu dresden de res pap pdf 
alessio guglielmi lutz stra burger 
non commutative extension mell 
baaz voronkov editors lpar volume lecture notes artificial intelligence pages 
springer verlag 
url www ki inf tu dresden de lutz nel pdf 
joshua hodas dale miller 
logic programming fragment intuitionistic linear logic 
information computation may 
ozan 
implementing system bv calculus structures maude 
proceedings esslli student session pages universit henri poincar nancy france 
th european summer school logic language information 
url www informatik uni leipzig de ozan papers esslli pdf 
ozan 
system bv equalities unit 
appear proceedings th international symposium computer information sciences 
url www informatik uni leipzig de ozan papers pdf 
alessio guglielmi fran ois lamarche 
note algebraic terms representation means relations 
preparation 
url www loria fr lamarche 
joachim lambek 
mathematics sentence structure 
american mathematical monthly 
dale miller 
forum multiple specification logic 
theoretical computer science 
robin milner 
communication concurrency 
international series computer science 
prentice hall 
rolf 
computationally tractable classes ordered sets 
rival editor algorithms order pages 
kluwer academic publishers dordrecht 
belnap jr display logic 
journal philosophical logic 
jeff frank pfenning 
relating natural deduction sequent calculus intuitionistic non commutative linear logic 
electronic notes theoretical computer science 
url www elsevier nl locate entcs volume html 
greg 
substructural logics 
routledge 
christian retor 
th se de doctorat sp math matiques universit paris february 
christian retor 
pomset logic non commutative extension classical linear logic 
ph 
de groote hindley editors tlca volume lecture notes computer science pages 
christian retor 
pomset logic calculus directed 
editors dynamic perspectives logic linguistics pages 
roma 
available inria rapport de recherche rr 
paul 
non commutative logic ii sequent calculus phase semantics 
mathematical structures computer science 
charles stewart 
systematic proof theory modal logics 
technical report wv technische universit dresden 
accepted advances modal logic 
url www linearity org cas papers pdf 
lutz stra burger 
local system linear logic 
baaz voronkov editors lpar volume lecture notes artificial intelligence pages 
springer verlag 
url www ki inf tu dresden de lutz lls lpar pdf 
lutz stra burger 
linear logic calculus structures 
phd thesis technische universit dresden 
url www ki inf tu dresden de lutz pdf 
lutz stra burger 
mell calculus structures 
theoretical computer science 
url www ki inf tu dresden de lutz els pdf 
lutz stra burger 
system nel undecidable 
de elaine luc lia figueiredo editors th workshop logic language information computation volume electronic notes theoretical computer science 
url www ki inf tu dresden de lutz pdf 
tiu 
system interaction structure ii need deep inference 
preparation 
url www lix polytechnique fr tiu deep pdf 
tiu 
properties logical system calculus structures 
technical report wv technische universit dresden 
url www cse psu edu tiu pdf 
troelstra schwichtenberg 
basic proof theory volume cambridge tracts theoretical computer science 
cambridge university press 
received august revised may accepted july 
system interaction structure 
