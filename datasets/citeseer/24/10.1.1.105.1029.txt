post secure resilient cooperative messaging system alan mislove post charles reis paul peter druschel dan wallach xavier pierre sens jean michel post cooperative decentralized messaging system supports traditional services electronic mail email news instant messaging collaborative applications shared calendars whiteboards 
existing implementations services post highly resilient secure scalable rely dedicated servers 
post built peer peer overlay network consisting participants desktop computers 
sketch post basic messaging infrastructure provides shared secure single copy message storage metadata notification 
example application sketch post construct cooperative secure email service called epost 
messaging systems traditional email news instant messaging shared calendars bulletin boards successful widely distributed applications 
currently services implemented client server model 
messages stored routed dedicated servers hosting set user accounts 
partial centralization requires substantial infrastructure costs system scaled large numbers users 
client server model limits reliability servers single point failure attack system users support 
additionally maintenance administration costs significant large organizations 
post cooperative infrastructure leverages resources users desktop workstations provide messaging services 
post provides fundamental services applications persistent single copy message storage user metadata notification 
wide range messaging applications constructed top post services 
post built structured overlay network providing scalability resilience self organization 
users contribute resources post system cpu disk space network bandwidth return able rice university houston tx usa lip universit paris vi paris france services 
post assumes participating nodes suffer byzantine failures 
stronger failure assumptions may unrealistic scenarios participating hosts belong single organization single compromised node may able disrupt critical messaging services disclose confidential messages 
sketch design post infrastructure describe cooperative secure email system built top post 
conventional email services epost system provides secure email services default requires dedicated servers 
furthermore due strong sender authentication epost efficient spam defense easier 
chose email initial application post understood high availability security demands challenging driver post systems general 
remainder organized follows 
section provides background information pastry past scribe building blocks post 
section sketches design post infrastructure 
section sketch design cooperative email system example post application 
section discusses integrating post existing messaging systems 
section outlines related section reports status project section concludes 
background section briefly describe pastry past scribe building blocks post 
pastry structured overlay network designed self organizing highly scalable fault tolerant :10.1.1.28.5987
pastry node object assigned unique identifier chosen large id space referred nodeid key respectively 
message key pastry efficiently route message node nodeid numerically closest key 
past storage system built top pastry viewed distributed hash table :10.1.1.110.5867
stored item past bit key referred handle replicas object stored nodes nodeids numerically closest object handle 
past maintains invariant object replicated nodes regardless node addition failure 
nodeid assignment random nodes suffer correlated failures 
past relies pastry secure routing ensure replicas stored correct nodes despite presence malicious nodes may attempt prevent 
assume nodes faulty replica set 
variant past post store types data content hash blocks public key blocks certificate blocks 
content hash blocks stored cryptographic hash block contents handle 
publickey blocks contain monotonically increasing timestamps signed private key stored cryptographic hash corresponding public key handle 
certificate blocks signed trusted third party bind public key name email address 
block stored cryptographic hash name handle 
content hash blocks authenticated obtaining single replica verifying contents match handle 
content hash blocks public key blocks mutable 
prevent rollback attacks malicious storage nodes necessary obtain replicas choose authentic block timestamp 
certificate blocks require signature verification known public key trusted third party 
scribe scalable multicast system built top pastry :10.1.1.20.299
scribe group bit groupid serves address group 
nodes subscribed group form multicast tree consisting union pastry routes group members node nodeid numerically closest groupid 
post architecture generic messaging system post provides fundamental services shared secure single copy message store user metadata notification 
services combined implement variety collaborative applications email news instant messaging shared calendars whiteboards 
typical pattern users create messages inserted encrypted form secure store 
send message user group notification service provide recipient necessary information locate decrypt message 
recipients may modify personal metadata incorporate message view private mail folder 
post assumes existence certificate authority 
authority signs certificates binding user unique name email address public key 
authority issues nodeid certificates required secure routing pastry 
furthermore authority may require user owns nodeid bound live ip address forcing user contribute node system 
users access system node assumed user trusts local node refered trusted node private key 
design post assume objects stored past deleted 
assume amount available disk space system increasing greater total storage requirements reasonable expect environment participant required contribute portion desktop local disk 
user accounts user post system possesses account associated identity certificate 
certificate stored certificate block past secure hash user name handle 
associated account user identity block contains xml description user contact address user current trusted node public metadata associated account 
identity block stored public key block past signed user private key 
user account associated scribe group notification groupid equal cryptographic hash user public key 
secure message storage post provides shared secure message storage facility 
application provided message data encrypted technique known convergent encryption 
convergent encryption allows message disclosed selected recipients ensuring copies cleartext message inserted different users map ciphertext requiring single copy ciphertext stored 
application wishes store message post computes cryptographic hash uses hash key encrypt efficient symmetric cipher stores resulting ciphertext handle secure hash ciphertext 
decrypt message user know hash cleartext 
notification purpose notification alert user availability message provide appropriate decryption key 
common case notification requires obtaining contact address recipient identity block may require lookup recipient certificate block certificate cached sender 
notification message sent recipient contact address contains secure hash message ciphertext decryption key encrypted recipient public key signed sender 
practice notification complicated sender recipient line time 
handle case sender may delegate delivering notification message set random nodes 
user wishes send notification message user trusted node line sends notification request message nodes numerically closest random pastry key message encrypted separately contains signature indicating message valid 
nodes responsible delivering notification message contained notification request message nodes stores message subscribes scribe group rooted hash public key 
additionally nodes periodically check recipient identity block updated contact address ping address 
user line trusted node periodically publishes message scribe group rooted hash public key notifying subscribers presence current contact address 
presence message may contain application specific data state user 
receipt message subscribers deliver notification sending contact address 
assumption nodes faulty notification guaranteed delivered 
post relies scribe timely delivery 
scribe messages lost due failures notification eventually delivered due periodic pings checks recipient identity block 
user metadata post provides facility allows applications maintain user metadata refers stored messages interest user 
facility provides single writer logs applications represent changes application metadata 
instance email application log insert delete records keep track state user mail folder 
general logs track state newsgroup shared calendar arbitrary data structure 
post represents logs blocks past 
log head stored public key block past contains location log record 
handles log heads may stored user identity block log record message 
log record stored past content hash block contains applicationspecific metadata handle record log 
applications optionally encrypt contents log records depending intended set readers 
straightforward implementation log head log record stored different set past nodes 
allow efficient log traversal post stores clusters consecutive log records past node handle records 
deal partially filled clusters log head contains additional handle referring record partially filled cluster 
handle identifies cluster past 
optimization possible reduce overhead log traversals including caching log records clients snapshots 
post applications may periodically insert snapshots metadata past making log traversal necessary snapshot 
similar ideas ivy order represent file metadata file system :10.1.1.119.567
discussion post provides single writer logs mechanism maintain mutable state system 
avoids cost complexity general byzantine fault tolerant replicated state machine 
confident post restricted mechanism mutable state flexible efficient email instant messaging especially snapshot clustering optimizations post uses 
conjecture sufficient applications shared calendars 
believe cooperative applications exist may require flexible mechanism maintaining mutable state 
support applications authors lip currently investigating additional byzantine faulttolerant mechanisms maintaining multi writer mutable state 
mechanisms target applications supporting large number writers allowing disconnected operations 
example electronic mail section sketch design serverless email system epost top post infrastructure 
goal leverage post build secure scalable highly resilient email system leveraging resources participating desktop computers 
system epost promises increased resilience greater scalability lower cost remains open question advantages sufficient completely displace existing server email infrastructure 
chose pursue epost reasons 
epost designed deployed incrementally allowing individual organizations adopt relying existing standards infrastructure communication organizations 
second existing applications email mission critical demands high reliability security availability 
challenging driver development post generally underlying infrastructure 
overview epost user expected run daemon program desktop computer implements pastry past scribe post protocols contributes cpu network bandwidth disk storage system 
daemon acts smtp imap server allowing user utilize conventional email client programs 
daemon assumed trusted user holds user private key 
participating nodes system assumed trusted user 
message storage epost email messages received email client program parsed mime components message message body attachments stored separate messages post 
frequently circulated attachments stored system 
message components inserted post sender epost daemon notification message sent recipient 
sending message attachment large number recipients requires little additional storage overhead sending single recipient 
messages forwarded sent different users original message data need stored original message reused 
convergent encryption post known secure encrypting short messages highly structured content text vulnerable known cleartext attacks 
avoid loss confidentiality small message bodies padded epost number random bits 
measure defeats single copy storage concern small size affected messages 
due necessary data replication past storage overhead message higher post compared conventional server email system 
effect partly offset post single copy store eliminates large amounts duplication due large widely circulated email attachments 
exploiting typically underutilized disk space desktop computers compensate overhead 
delivery delivery new email accomplished post notification service 
sender constructs notification message containing basic header information names sender recipients subject timestamp body attachments message 
sender requests local post service deliver notification recipients 
noteworthy mention epost extends recipient control current systems allowing recipient append message mailbox simply ignore notification spam filter 
metadata mail folder represented post log 
log entry represents change state associated folder addition deletion message 
furthermore log written owner content encrypted epost preserves expected semantics current email systems 
describe log record representing insertion email message user inbox folder 
types log records analogous 
email insertion record contains content message mime header message handle decryption key signature sender encrypted recipient public key 
recipient verify message sent stated sender parties confidence intended recipient able read message 
example user sent message user subject message text time insertion record inbox discussion default epost provides strong confidentiality authentication message integrity 
high probability system able tolerate fraction faulty malicious nodes loss data service 
relies pastry secure routing facilities data replication techniques achieve robustness wide range attacks including denial service 
analysis experimentation necessary determine appropriate assumptions fraction faulty nodes various environments appropriate levels replication 
results prior study filesystems corporate environments indicate modest levels replication yield high availability 
simplest configuration participating post nodes form single pastry ring message inserted post replicated set random nodes system 
practice desirable replicate message inserted user nodes user organization 
scoped insertion leads better network locality provides effective defense denial service attacks aimed exhausting system storage 
permits better node failure rate estimations fault assumptions organization may permit conservative replication levels 
scoped insertion approach fits naturally intranets arises naturally epost deployed incrementally 
scoped insertion supported minor extensions post past omit details due lack space 
interesting note epost provides better spam prevention current email systems 
epost notification messages signed sender possible build effective spam block lists 
block lists compiled user basis possibly shared users 
additionally epost limit rate sending messages requiring senders solve small cryptographic puzzles allowed send notification messages 
effect normal epost users slow bulk 
mailing lists easily supported maintaining list additional log storing log head list maintainer user identity block 
maintainer allowed modify membership 
delivering message sender notices list expands recipient list appropriately 
incremental deployment section discuss integration issues context epost 
approaches generalized post applications 
allow organization adopt epost email infrastructure epost able interoperate existing server email infrastructure 
sketch epost deployed single organization interoperate email services general internet 
send email messages outside world epost proxies standard smtp contact recipient email server recipient outside local organization 
inbound email organization dns server delivers mx records referring random proxy epost system accepts message smtp delivers locally intended recipients 
course epost built authentication privacy mechanisms available email exchanged party epost 
incoming messages tagged mime header indicating message origin integrity verified 
epost currently assumes participating hosts communicate intervening firewalls 
epost systems separated firewalls interoperate smtp cost losing security aspects shared message storage 
allowing epost systems separated firewalls integrated tightly subject ongoing 
related current email protocols including smtp pop imap tailored infrastructure dedicated servers :10.1.1.119.567
minimal security provided protocols email service provide confidentiality verifiability data integrity 
extensions pgp provide secure email widely :10.1.1.121.9064
lotus notes microsoft exchange provide general secure messaging infrastructure client server model providing ability transfer email personal contacts calendars tasks 
post aims provide similar functionality serverless decentralized cooperative architecture 
allow email services scale effectively cluster servers porcupine system hotmail yahoo mail services :10.1.1.116.6208
epost utilizes completely decentralized self scaling architecture eliminating need dedicated powerful mail servers 
status implemented prototype post epost implementation instant messaging service post called currently underway 
plan start epost shortly initially research groups hope expand user base rice lip gain experience confidence system 
users dependence email services view proof concept mission critical systems vehicle gain practical experience workload trace data system 
full description evaluation post epost provided upcoming full 
post collaborative messaging system leverages resources participating desktop computers 
post provides highly resilient scalable messaging services ensuring confidentiality data integrity authentication 
fundamental services provided post support variety messaging applications 
sketched post construct epost cooperative secure email system 
bolosky douceur ely theimer 
feasibility serverless distributed file system deployed existing set desktop pcs 
proc 
sigmetrics santa clara ca 
castro druschel ganesh rowstron wallach 
security structured peer peer overlay networks 
proc 
fifth symposium operating system design implementation osdi boston ma december 
castro druschel :10.1.1.20.299
kermarrec rowstron 
scribe large scale decentralized application level multicast infrastructure 
ieee jsac october 
crispin 
rfc internet message access protocol version rev december 
dean 
client puzzles protect tls 
proc 
th usenix security symposium washington august 
douceur adya bolosky simon theimer 
reclaiming space duplicate files serverless distributed file system 
proc 
international conference distributed computing systems icdcs vienna austria july 
jussi keith ross david turner juha david steve 
peer peer mail november 
submitted publication 
meyers rose 
rfc post office protocol version may 
muthitacharoen morris gil chen :10.1.1.119.567
ivy read write peer peer file system 
proc 
fifth symposium operating system design implementation osdi boston ma december 
ngan druschel wallach 
enforcing fair sharing peerto peer resources 
proceedings nd international workshop peer peer systems iptps berkeley ca february 
postel :10.1.1.119.567
rfc simple mail transfer protocol august 
rowstron druschel :10.1.1.28.5987
pastry scalable distributed object location routing large scale peer peer systems 
ifip acm middleware heidelberg germany november 
rowstron druschel :10.1.1.110.5867
storage management caching past large scale persistent peer peer storage utility 
proc 
acm sosp banff canada october 
saito bershad levy :10.1.1.116.6208
manageability availability performance porcupine highly scalable cluster mail service 
proc 
acm sosp charleston south carolina december 
zimmerman :10.1.1.121.9064
pgp user guide december 
