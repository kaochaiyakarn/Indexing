boosting rocchio applied text filtering robert schapire yoram singer amit singhal labs research park avenue florham park nj singer research att com discuss learning algorithms text filtering modified rocchio boosting algorithm called adaboost 
show algorithms adapted maximize general utility matrix associates cost gain pair machine prediction correct label 
show adaboost significantly outperforms highly effective text filtering algorithm 
compare adaboost rocchio large text filtering tasks 
algorithms comparable quite effective 
adaboost produces better classifiers rocchio training collection contains large number relevant documents 
tasks rocchio runs faster adaboost 
explosion amount information available electronically information filtering systems automatically send articles potential interest user increasingly important 
users indicate interests filtering system examples liking system automatically learn user profile relevance classifier user 
new article exhibits substantial match user profile filtered sent user 
text filtering just binary text classification categories relevant relevant problem text filtering studied different communities machine learning ml information retrieval ir 
algorithms text filtering proposed evaluated past example bayesian classifiers neighbors neural networks rule learning algorithms :10.1.1.16.3103:10.1.1.39.6139:10.1.1.14.6535
studies rocchio method known algorithm ir community traditionally relevance feedback comparison baseline classifiers 
studies weak version rocchio algorithm suited text filtering 
years ir community proposed modifications rocchio algorithm vastly improved performance algorithm better term weighting query zoning dynamic feedback optimization notable improvements 
study adapt state art rocchio algorithm text filtering task compare fairly new ml algorithm called boosting develop text filtering algorithm freund schapire adaboost algorithm currently permission digital hard copy part personal classroom granted fee provided copies distributed profit commercial advantage title publication date appear notice copying permission acm copy republish post servers redistribute lists requires prior specific permission fee 
sigir melbourne australia acm 
successful family boosting algorithms 
main idea boosting generate relatively weak classification rules combine single highly accurate classification rule 
boosting algorithms attractive theoretical properties shown perform experimentally standard machine learning tasks :10.1.1.49.2457:10.1.1.32.8918
compare adaboost sleeping experts algorithm proposed blum studied freund applied text filtering cohen singer :10.1.1.14.6535
algorithm shown effective current text filtering algorithms :10.1.1.14.6535
show text filtering adaboost definitively superior sleeping experts 
compare adaboost rocchio method show algorithms quite competitive 
algorithms learn linear classifier adaboost superior rocchio large amount training data learn 
faster train rocchio classifier 
previous studies text filtering different datasets different evaluation measures 
renders relative comparison approaches impossible 
described section evaluation measures past evaluating filtering effectiveness unfit purpose 
trec conferences moving utility measure choice evaluating text filtering :10.1.1.49.1946
study presents results utility researchers comparison purposes 
summarize study aim develop new algorithm text filtering boosting show algorithm better sleeping experts highly effective algorithm text filtering 
adapt version rocchio algorithm text filtering study relative merits boosting rocchio classifiers 
results new better evaluation measures researchers comparison 
rest study organized follows 
section discusses evaluation measures text filtering 
section describes adaptation adaboost text filtering 
section presents modified version rocchio algorithm text filtering 
section describes datasets study 
section describes experiments discusses results 
section concludes study 
evaluation measures past studies text filtering variety measures evaluating performance 
measure frequently doing cross system comparisons recall precision breakeven point 
proposed lewis measure measure choice studies text filtering :10.1.1.109.2516:10.1.1.11.6124:10.1.1.14.6535
roughly speaking break point point recall filtering system precision 
break point system said recall precision system 
aim filtering system obtain high break point possible 
measure popular problems evaluating filtering system need interpolate scores obtain break point 
interpolation gives values achievable system 
point recall equals precision desirable informative target user perspective 
strongly believe break point evaluating text filtering effectiveness study 
measures evaluate text filtering average precision precision fixed rank cutoff studies measures evaluate filtering effectiveness :10.1.1.39.6139
measures intended evaluate ranking effectiveness system filtering effectiveness 
filtering effectiveness system related ranking effectiveness relationship strong ranking evaluation measures evaluate text filtering 
van rijsbergen measures evaluate filtering single valued measure depends relative importance user assigns recall precision see pp :10.1.1.109.2516:10.1.1.16.3103:10.1.1.14.6535

main drawbacks measure value directly interpretable user usually hard user judge relative importance recall precision 
example users find hard say recall twice important precision ratio 
view measures best suited measure measures evaluating filtering 
precision andf recall precision web page jd rel rank rank gj rank believe average precision suited evaluate filtering effectiveness report figures comparison purposes research 
notation sections rank assigned classifier set relevant document denoted 
non interpolated average precision www research att com singhal sigir dat big drawback measures listed dependence recall 
recall available test documents seen 
measures evaluate system fly compute measure portion documents classified rest need classified 
instance user wants check day filtering system doing able assess performance system measures 
study utility evaluation measures don suffer drawbacks mentioned 
report performance results non interpolated average utility trec text filtering evaluations utility measures assign rewards penalties pair machine prediction correct label :10.1.1.49.1946
letr number relevant documents classified relevant machine andr number relevant documents misclassified irrelevant 
similarly andn number non relevant documents classified relevant irrelevant respectively 
pair human judgment relevant non relevant rel respectively machine prediction 
associate utility value 
denote utility values urel 
performance classifier terms utility matrix isr urel urel 
aim filtering system maximize utility 
evaluation urel urel 
measure classification error simply number mistakes classifier sum number positive relevant classified negative number non relevant documents classified positive 
note minimizing classification error equivalent maximizing utility 
learning algorithm maximizes utility minimizing classification error 
problem classification error datasets relevant documents classifier uses simple strategy predicting document non relevant able achieve low error 
handle common difficulty need specifically reward classifier finding relevant documents 
utility measures util util described explicitly reward system finding relevant documents 
summary utility measures study error util util boosting text filtering section describe adapted freund schapire adaboost boosting algorithm text filtering :10.1.1.32.8918:10.1.1.32.8918
main idea boosting combine rules thumb example study rules thumb test presence term simple rule word money appears document predict document relevant predict relevant clearly simple minded rule kind misclassify documents 
main idea boosting generate combine rules principled manner produce single highly accurate classification rule 
formally rules thumb called weak hypotheses 
boosting assumes access algorithm subroutine generating rules thumb called weak learner weak learning algorithm 
boosting algorithm calls weak learner times generate rules thumb combined single classification rule called final combined hypothesis 
main feature boosting algorithm course execution assigns different importance weights different training documents 
weak learning algorithm weights consideration correctly classify possible account greater importance correctly classifying documents assigned greater weight 
algorithm progresses training documents hard classify correctly get incrementally higher weights documents hs di input labels dn yn yi number iterations initialized classification error fors 
call weaklearn get weak 
calculate error 
sets ln ds ds exp di ds di yi zs di yi 
update distribution normalization factor 
output final hypothesis hn sign shs adaboost algorithm binary text filtering easy classify get lower weights 
effect forces weak learning algorithm concentrate documents misclassified previously derived rules thumb 
final combined hypothesis classifies new document computing prediction weak hypotheses document weighted vote predictions 
description adaboost shown 
adaboost takes input training set judgment pairs dn yn document training collection gis label associated document means document relevant irrelevant judged human expert 
just described adaboost calls weak learning algorithm weaklearn repeatedly series rounds 
rounds weaklearn set importance weights training set 
response weaklearn computes weak hypothesis rule thumb hs di classifies relevant non relevant 
discuss weak learner experiments 
importance weights maintained formally training documents 
distribution changes round denote distribution ds 
weight training distribution maintain condition positive ds 
initially classification error set weights equally 
described different initialization procedure utility functions 
goal weak learner find rule thumb misclassifies documents possible relative 
formally weak learner attempts find weak low weighted error error interpreted probability misclassifying document chosen randomly 
sum weights relevant documents classified irrelevant ds ds irrelevant documents classified relevant 
zs di yi di yi having obtained weaklearn ada boost updates weights documents way documents classified correctly get lower weight misclassified documents get higher weight 
specific adaboost multiplies weight document correctly classified weight incorrectly classified document 
sis number computation discussed 
assuming moment sis positive update weights effect decreasing weights correctly classified documents increasing weight incorrectly classified documents 
ensure new form distribution ds renormalize weights resulting update rule shown normalization factor 
note shs di product equal disagree 
general rewrite update rule succinctly 
process generating weak hypotheses updating weights repeated 
decide value discussed section 
ht values new classified final hypothesis hn sign sign ifx 
words predictions weak hypotheses evaluated new predictions combined voting 
weak hypotheses predict document relevant irrelevant sum positive combined prediction relevant prediction irrelevant 
assign equal importance predictions weak hypotheses 
weight votes different weak hypotheses previously update 
discuss exact choice ofs 
weighted error weak computed eq 

ln understand choice entails suppose highly accurate weak 
small large 
translates drastic updates distribution greater weight assigned predictions computation final hypothesis 
hand highly inaccurate small updates distribution quite conservative predictions final hypothesis receive low weight 
see freund schapire complete motivation choice task negative :10.1.1.32.8918
case weak errors greater 
discussed 
finding weak hypotheses algorithm weak learner generates di di di di utility matrix implies relevant document documents 
instance util get relevant follows 
words pairs adjacent words potential document worth terms 
implementation capable arbitrary long grams restrict words word bigrams study 
term weak learner computes error relative incurred predicting document relevant contains term 
formally error andd rel means relevant 
ordinarily select term lowest classification error 
consistent main aim classifier select term maximally differentiates relevance non relevance 
example lowest error say highest error say better discriminator non relevance relevance 
say non higher confidence confidence relevance document 

formally urel choose term minimizes 
selected term 
form rule urel urel urel 
mentioned select term high error boosting algorithm automatically assigns negative weight hypothesis 
means word better predictor non relevance presence automatically reduce score document 
boosting general utility functions remains describe modify algorithm order maximize gain general utility matrix 
utility urel urel 
matrix 
notation introduced section gain classifier 
natural assumption gained correct classifications incorrect classifications urel urel 
minimum possible gain classifier classifies document incorrectly gain 
assign initial gain classifier aim classifier maximize additional gain amount 
time classifier classifies relevant document correctly increase gain urel time non relevant document classified correctly increase gain 
done misclassification accounted possible misclassifications 
get results utility matrix non relevant documents util get factor 
need set initial distribution examples round boosting reflect ratio positive negative examples 
fairly straightforward show maximizing utility equivalent minimizing error initial distribution weight relevant documents times weight irrelevant documents 
formally handle general utility functions need modify adaboost manner weights initialized 
specifically set relevant urel urel irrelevant pid 
normalization factor ensures note rest algorithm unaffected change initial distribution 
choosing number rounds need specify set number 
theoretical analysis number rounds boost weak hypothesis set value empirically 
procedure yields results 
run boosting algorithm training error reaches minimal value zero 
lett number rounds needed reach minimal training error 
continue boosting rounds 
total number rounds 
typically means run rounds boosting algorithm problem hard requiring features attain small training error 
put way size resulting classifier function number features employs depends easy classification problem difficult problem larger classifier build 
rocchio text filtering retrieving useful documents user query challenging problem field information retrieval 
early days researchers realized hard average user formulate query successful retrieval aids query formulation provided users 
automatic query formulation relevance feedback user marked documents possibly retrieved initial user query relevant nonrelevant ir 
feedback query creation algorithm developed rocchio mid years proven best relevance feedback algorithms 
rocchio algorithm developed framework vector space model 
documents ranked query ideal query rank relevant documents non relevant documents 
query just exist exists training data fitting training documents generalize new test documents 
lower aims develop query maximizes difference average score relevant document average score non relevant training error combined hypothesis may zero possible uncommon boosting proceed reductions test error occur 
see schapire discussion :10.1.1.31.2869
hs 
worth urel urel irrelevant rx rx rel document 
rocchio calls optimal query page 
rocchio shows definition optimal query vector difference vector centroid vectors relevant non relevant articles rel weighted term vector qnew rx rx rel number relevant articles total number articles collection 
negative components resulting query assigned zero weight 
maintain focus query researchers useful include original user query feedback query creation process 
coefficients introduced rocchio formulation control contribution original query relevant articles non relevant articles feedback query 
modifications yield query reformulation function rel formulation developed ranking documents relevance feedback mainly interactive settings successfully text filtering 
information filtering scenario documents marked relevant user information need user profile created rocchio formulation eq 

new article high similarity vector inner product similarity measure experiments see page user profile considered potentially useful user sent user 
techniques known improve effectiveness rocchio method 
new developments quite effective conjunction rocchio algorithm 
better term weights better understanding term weights developed ir community years 
better term weights training documents yield better rocchio query 
better rocchio query better term weights test documents yields improved scores better ranking test documents 

query zoning singhal proposed selected set non relevant documents relationship user interest rocchio method 
proposed sampling non relevant documents form query zone 

dynamic feedback optimization buckley shown optimizing term weights proposed rocchio formulation training collection improves quality feedback query test data 
view techniques tools bring rocchio query closer ideal query 
techniques version rocchio 
initial user query text filtering scenario factor eq 
system 
query zones singhal shown eq 
reasonable parameter setting 
text filtering back original rocchio formulation eq 
eq 

centroid vector relevant documents training corpus initial query vector form query zone 
steps involved modified rocchio method text filtering log tf log tf tf factor tf factor log average tf text idf factor df log normalization factor number unique words text average number unique words document tf term frequency text query document nis total number documents training collection df number documents contain term average number words document reuters ap body trec 
average number phrases document reuters ap body trec 
ltu weighting factor factor factor lnu weighting factor factor ltu weighting factor factor factor table term weights 
initial query create centroid vector relevant documents training data 
documents ltu weighted see table 
remove words appear fewer relevant documents phrases appear fewer relevant documents 
keeps infrequent possibly random terms influencing query 
select highest words average number words document average number phrases document table 
initial query 

initial query lnu weighted training documents form training query zone selecting non relevant documents initial query inner product similarity 
total number documents training collection number relevant documents query class training collection 

non relevant documents query zone relevant documents training corpus form feedback query rocchio formulation constraints parameters document terms ltu weighted 
non random words phrases words appear relevant articles phrases occur relevant articles considered feedback query 
step weighted original rocchio formula eq 
retained feedback query weights predicted formula 

term weights query optimized pass dynamic feedback optimization dfo pass ratios 
dfo optimizes average precision training collection fixed number top documents ranked process rank documents step 

optimized feedback query rank lnu weighted training documents inner product similarity 
going ranked list training documents find similarity threshold maximize evaluation measure error rate utility training data 
threshold classifier 

test documents lnu weighted 
test document similarity higher threshold feedback query classifier classified relevant non relevant 
algorithm quite similar routing algorithm differences user query way relevant centroid form query zone :10.1.1.48.7368
previous query zones initial user query purpose 
query zone size max grows class size classes training relevant documents 
dfo modified rank documents large classes max 
word cooccurrence pairs 
deliberately didn tune rocchio algorithm cover weaknesses 
example post hoc analysis shows possible improve rocchio method large classes increasing number terms words phrases classifier 
didn tuning 
straightforward possible enhance dfo tune rocchio classifier explicitly maximize utility 
tuning study plan investigate near 
test corpora different text corpora testing algorithms reuters ap body trec 
reuters ap body collections pay special attention particular documents collection possible variations 
trec data emphasize original topic text supplied users experiments 
reuters reuters text categorization test collection publicly available web page www research att com lewis david lewis originally compiled collection 
documents collection collected reuters newswire 
modified apte split modapte assigns documents dated april training set documents dated april test set 
experiments topic categories relevant positive training documents relevant test document 
ap body test collection documents ap newswire included trec disks 
documents years training collection documents year test collection 
document collection distinct title field marked sgml tag head distinct body field marked sgml tag text 
body document experiments 
classes collection 
see description classes corpus derived :10.1.1.16.3103
error difference slp 
exp adaboost reuters error number positive examples error difference slp 
exp adaboost ap body error number positive examples comparison adaboost sleeping experts 
collection lewis 
note original distribution data documents year year making total training documents documents non standard formats structures omitted lewis similarly possible test documents skipped 
details documents skipped creation collection available david lewis lewis research att com 
trec collection trec disks routing task third text retrieval conference trec 
training collection contains trec disks test collection document contained disk 
total training documents test documents 
trec topics numbered individual classes collection 
trec topics long user queries contain useful words text filtering emphasize topic texts systems 
relevance judgments topics available trec data 
summary collections experiments shown table 
preprocessing experiments entire reuters ap body collections training testing 
unfortunately taken long time run adaboost entire trec collection 
subset training collection training set 
selected top documents retrieved training collection query learned rocchio method idea query zoning 
addition added relevant documents retrieved procedure training set 
applied procedure collection test documents 
classifier built adaboost tested relevant documents test collection top non relevant test documents retrieved rocchio query query obtaining sample training collection 
rocchio method means sub sampling training test collections sub sampled collections include nonrelevant documents relatively difficult classify 
believe results obtained sub sampled datasets estimate performance classifiers 
true sampling test collection automatically rejects large number non relevant documents pool documents classified adaboost classifier 
documents potentially misclassified possibly yield results poorer results reported study adaboost algorithm trec task 
utility number min 
pos 
max 
pos 
train set test set dataset checked tasks train train size size reuters err util util ap body err util util trec err util util experiments results section discusses experiments results 
adaboost compared sleeping experts give experimental results show adaptation adaboost text filtering achieves better results sleeping experts effective algorithm text filtering studied cohen singer :10.1.1.14.6535
compare performance adaboost sleeping experts ap body reuters tasks 
shows results comparison 
scatter plot left hand side show error difference corresponding classes sleeping adaboost function number relevant documents training collection reuters collection 
right hand side plot ap collection 
point axis indicates sleeping experts inferior adaboost errors 
plots indicate classes size size class number relevant training documents class adaboost generally outperforms sleeping experts large margin 
reuters top row shows similar comparative plots performance adaboost rocchio reuters dataset 
left hand side scatter plot give difference error middle plot shows difference util right plot shows difference util adaboost rocchio function number relevant training documents 
point axis indicates adaboost achieves better results point axis indicates class rocchio outperforms adaboost 
error util scatter plots skewed top right corner indicating adaboost better rocchio classes large number relevant documents training collection 
look raw numbers find classes adaboost significantly outperforms rocchio earn acq classes highest number positive training documents respectively 
general observe class large number relevant documents training set ada boost tends achieve lower error rates higher utility values 
observe util rocchio adaboost 
ap body results dataset shown middle row quite parallel results reuters 
classes adaboost better rocchio terms error util largest classes 
classes bush israel japan 
classes relevant documents training set 
util advantage 
isn difference performance algorithms 
table summary datasets experiments 
timed algorithms ap body task 
current implementation adaboost takes average minutes class learn classifier 
contrast implementation rocchio optimized takes minutes class average 
difference running time significant rocchio method quite attractive comes slight loss effectiveness big classes 
trec trec task observe bottom row noticeable difference performance algorithms 
observe scatter plots points classes relevant training examples axis indicating rocchio marginally better cases 
task noticeable difference methods 
collections observe trec relative performance weaker evaluated util rocchio method clearly better adaboost util 
analysis view foremost results study state art version rocchio algorithm quite competitive modern machine learning algorithms text filtering 
result contradicts claims previous studies infer rocchio method inferior state art machine learning algorithms 
results show training data learn principled learning algorithm adaboost derived theoretical foundations computational learning specifically designed general classification learn better classifier algorithm designed rank documents rocchio minimal learning 
contrary little data learn strong learning algorithm adaboost stands chance fitting data 
reason expected rocchio consistently outperform adaboost small classes 
small classes rocchio quite effective task designed ranking relevant documents non relevant documents selecting threshold filtering 
example class reuters rocchio achieves average precision better average precision adaboost 
evaluated utility measures algorithms essentially performance indicating rocchio unable capitalize superior ranking 
similar behavior observed classes dfl debt sun meal 
indicates average precision evaluate text filtering sufficient 
current implementation adaboost utilize term weights known crucial ir tasks basis performance rocchio algorithm 
believe adaboost benefit significantly term weights currently studying ways incorporating weights adaboost 
error difference rocchio adaboost error difference rocchio adaboost error difference rocchio adaboost number positive examples number positive examples number positive examples results show tasks filtering util relevant documents important non relevant document hard job 
classes algorithms get negative util value indicating having troubles classifying measure 
apparently rocchio robust skew relative importance relevant documents 
adaboost doesn util error util compared rocchio 
haven studied phenomenon greater details suspect high importance relevant documents forcing adaboost select non general features relevant documents results fitting classifier training relevant documents 
poor performance adaboost trec possibly attributed sampling train algorithm task see section 
adaboost trained small set training documents unable learn global occurrence pattern words 
rocchio hand uses information idf factor table term weights 
due sampling adaboost tends emphasize common terms happen occur relevant documents sample documents trained 
trained entire collections wouldn problem results better 
developed effective algorithms text filtering 
algorithms adaboost developments machine learning community second rocchio method developed information retrieval community quite competitive 
find adaboost significantly better sleeping experts effective text filtering algorithms available prior research 
util difference adaboost rocchio util difference adaboost rocchio util difference adaboost rocchio number positive examples number positive examples number positive examples comparison adaboost rocchio 
util difference adaboost rocchio util difference adaboost rocchio util difference adaboost rocchio number positive examples number positive examples number positive examples adaboost better rocchio large number hundreds thousands relevant documents learn 
noticeable difference performance algorithms 
clear get large number relevant documents operational text filtering system 
current experiments rocchio significantly faster adaboost 
classifiers rocchio method viable tools large scale filtering systems 
order adaboost attractive large problems sparse relevant documents algorithmic improvements significantly reduce computation time sought 
acknowledgments david lewis help data useful comments 
james allan 
incremental relevance feedback information filtering 
proceedings nineteenth annual international acm sigir conference research development information retrieval pages 
association computing machinery new york august 
apte fred damerau weiss 
language independent automated learning text categorisation methods 
proceedings seventeenth annual international acm sigir conference research development information retrieval pages july 
avrim blum 
empirical support winnow algorithms results calendar scheduling domain 
machine learning proceedings twelfth international conference pages 
class error utility average precision measure values study available www research att com singhal sigir dat leo breiman 
bias variance arcing classifiers 
technical report statistics department university california berkeley 
chris buckley 
importance proper weighting methods 
human language technology 
morgan kaufman 
chris buckley gerard salton 
optimization relevance feedback weights 
proceedings eighteenth annual international acm sigir conference research development information retrieval pages july 
callan 
information filtering inference networks 
proceedings nineteenth annual international acm sigir conference research development information retrieval pages association computing machinery new york august 
william cohen yoram singer :10.1.1.14.6535
context sensitive learning methods text categorization 
proceedings th annual international acm sigir conference research development information retrieval pages 
yoav freund robert schapire 
experiments new boosting algorithm 
machine learning proceedings thirteenth international conference pages 
yoav freund robert schapire :10.1.1.32.8918
decision theoretic generalization line learning application boosting 
journal computer system sciences 
yoav freund robert schapire yoram singer manfred warmuth 
combining predictors specialize 
proceedings ninth annual acm symposium theory computing pages 
harman 
overview third text retrieval conference trec 
proceedings third text retrieval conference trec pages 
nist special publication april 
david hull 
trec filtering track description analysis 
proceedings sixth text retrieval conference trec appear 
david hull jan pedersen hinrich schutze 
method combination document filtering 
proceedings nineteenth annual international acm sigir conference research development information retrieval pages august 
thorsten joachims 
text categorization support vector machines learning relevant features 
european conference machine learning ecml appear 
david lewis 
personal communication 
david lewis 
evaluation phrasal clustered representations text categorization task 
proceedings fifteenth annual international acm sigir conference research development information retrieval pages june 
david lewis 
evaluating optimizing autonomous text classification systems 
proceedings eighteenth annual international acm sigir conference research development information retrieval pages july 
david lewis 
terc filtering track 
proceedings fifth text retrieval conference trec pages 
nist special publication november 
david lewis william gale :10.1.1.16.3103
sequential algorithm training text classifiers 
proceedingsof seventeenth annual international acm sigir conference research development information retrieval pages july 
david lewis mark ringuette 
comparison learning algorithms text categorization 
proceedings third document analysis information retrieval pages las vegas nv april 
david lewis robert schapire james callan ron papka 
training algorithm linear text classifiers 
proceedings nineteenth annual international acm sigir conference research development information retrieval pages august 
andrew mccallum kamal nigam 
employing em pool active learning text classification 
icml appear 
ng gog low 
feature selection perceptron learning usability case study text categorization 
proceedings twentieth annual international acm sigir conference research development information retrieval pages july 
quinlan 
bagging boosting 
proceedings thirteenth national conference artificial intelligence pages 
robertson walker 
simple effective approximations poisson model probabilistic weighted retrieval 
proceedings seventeenth annual international acm si gir conference research development information retrieval pages 
springer verlag new york july 
rocchio 
document retrieval systems optimization evaluation 
phd thesis harvard computational laboratory cambridge ma 
rocchio 
relevance feedback information retrieval 
smart retrieval system experiments automatic document processing pages englewood cliffs nj 
prentice hall gerard salton 
automatic text processing transformation analysis retrieval information computer 
addison wesley publishing reading ma 
gerard salton chris buckley 
performance relevance feedback 
journal american society information science 
gerard salton mcgill 
modern information retrieval 
mcgraw hill book new york 
gerard salton wong yang 
vector space model information retrieval 
communications acm november 
robert schapire yoav freund peter bartlett wee sun lee :10.1.1.31.2869
boosting margin new explanation effectiveness voting methods 
machine learning proceedings fourteenth international conference 
amit singhal :10.1.1.48.7368
trec 
proceedings sixth text retrieval conference trec appear 
amit singhal chris buckley mandar mitra 
pivoted document length normalization 
proceedings nineteenth annual international acm sigir conference research development information retrieval pages 
association computing machinery new york august 
amit singhal mandar mitra chris buckley 
learning routing queries query zone 
proceedings twentieth annual international acm sigir conference research development information retrieval pages july 
van rijsbergen 
information retrieval 
butterworths london 
voorhees harman 
overview sixth text retrieval conference trec 
harman editors proceedings sixth text retrieval conference trec appear 
yang 
evaluation statistical text categorization 
technical report cmu cs school computer science carnegie mellon university april 
yiming yang 
expert network effective efficient learning human decisions text categorization retrieval 
proceedings seventeenth annual international acm sigir conference research development information retrieval pages july 
yiming yang 
noise reduction statistical approach text categorization 
proceedings eighteenth annual international acm sigir conference research development information retrieval pages july 
