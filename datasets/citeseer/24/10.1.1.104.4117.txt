high performance distributed computing hpdc edinburgh scotland july grid service supports information queries job execution contents gregor von laszewski ian foster jarek andreas schreiber carlos pe argonne national laboratory cass ave argonne il german aerospace center dlr linder cologne germany state university new york stony brook stony brook ny gregor mcs anl gov 

execution service 
information service 
gram mds production grids addressing requirements service 
performance 

quality information 

security 

portability 

flexible extensible information model 

architecture 
job execution 

information service 

configuration 

caching information degradation 

service reflection 

client interaction 

implementation 
application 
related 
status plans 
discussion grid service supports information queries job execution gregor von laszewski jarek carlos pe ian foster argonne national laboratory cass ave argonne il state university new york stony brook stony brook ny gregor mcs anl gov research described performed part globus project 
introduces new grid service called combines ability serving information service job execution service 
previously services architected implemented globus toolkit different services different wire protocols 
service demonstrates significant simplification architecture treating job submissions information queries alike 
advantage service provides backwards compatibility existing grid services time providing forwards compatibility emerging web services world 
part conducted effort reused current open grid services architecture prototype implementation 

grid approach important development discipline computer science engineering 
making rapid progress levels including definition terminology design architecture framework application scientific problems creation physical instantiations grids production level :10.1.1.129.8850
grids provide infrastructure allows flexible secure coordinated resource sharing dynamic collections individuals resources organizations 
past years globus project developed globus toolkit provides basic grid middleware toolkit includes elementary services address grid management issues related resource management security information data management 
important grid services provided globus toolkit information service job execution service 
information service returns information capabilities state grid infrastructure 
globus toolkit provides information service called monitoring directory service mds known metacomputing directory service :10.1.1.21.987
job execution service controls submission execution jobs remote machines 
globus toolkit provides service name grid resource allocation management gram service 
gram processes requests execution performs resource allocation monitors controls job execution 
furthermore limited amount information related capabilities availability regarding job execution service grid resource exposed information provider mds 
information includes example name queue details mode operation important features may guide process job submission user 
authentication mds gram handled grid security infrastructure gsi 
information job execution service far existed separate services globus toolkit 
considerable software engineering effort necessary implement maintain deploy services time support interoperability 
argue complexity reduced significantly alternative approaches protocol design implementation 
test hypothesis developed prototype promises significant simplification aspects previously mentioned 
termed prototype order acknowledge dual purpose 
research objectives goals design simplified grid service architecture provide unified service information monitoring job submission 
develop service providing backwards compatibility adhering standard grid protocols 
support multiple information return request formats xml 
improve reliability job execution second phase replacing protocol perform job submission soap 
provide open framework easily adapted interact local schedulers extract information custom designed information providers 
provide framework gsi application globus toolkit map global grid user identifiers local account names 
develop service providing forwards compatibility web services 
build groundwork web services implementation globus services 
rest structured follows discuss globus toolkit services gram mds detail 
outline operational integration services achieved production grids 
enhancements gram service allow constructing service 
demonstrate service provides significant architectural simplification time provides enhancements currently available globus toolkit 
additionally show new service integrated existing mds concept 
outline service part grid applications 

execution service contrast differences globus gram necessary revisit architecture globus gram service 
basic structure gram service version interaction clients relevant discussion depicted 
gram service provides basic functionality secure uniform access remote computational resources 
functionality gram explained part typical tier architecture 
include enhancements architecture section explain functionality tier detail 
client tier 
client submit job remote resource check status polling status job event notification client gram service 
allow identification job job handle referred returned job startup connection including remote clients appropriate authorization 
example job handle contact job issue cancellation 
client client tier middle tier backend tier gatekeeper job manager rsl security policy log gram server 
gram architecture local job execution middle tier 
internally gram consists gatekeeper job manger 
gatekeeper responsible authentication client performing simple authorization mapping authentication information local security context unix login 
initial security check starts job manager interacts client gram protocol referred 
job submitted client gram start job manager 
backend tier 
job manager activated handles communication client backend system job executed 
backend tier easily portable various scheduling systems 
globus toolkit services provide scheduling interfaces pbs lsf condor unix process fork 
gram service accessed help java application interface 
interface includes ability specify job particular resource help uniform resource specification language rsl 
rsl possible quickly uniformly specify jobs run part globus enabled grid 
simple tools available access basic functionality command line 
past demonstrated mechanisms protocols application states notification advanced functionality included globus toolkit 

information service basic structure grid information service defined refined :10.1.1.21.987
grid information service requires access static dynamic information regarding system components services framework fits heterogeneous dynamic nature grids including decentralized maintenance operation scalability performance integration variety information providers 
globus project developed basic information service addresses requirements 
globus grid information service mds contains fundamental entities distributed information providers information aggregates 
information provider service provides subset useful information resources exploited grid users grid services 
examples information may accessed information provider cpu operating system network file system information 
additionally aggregate service integrate set information providers may part virtual organization 
increase scalability distributed information service mds provides information caching function allows viewing querying information resource cache 
furthermore newest implementation grid information service implements framework proposed mds concept integrates gsi perform authentication 
information contained mds queried enable sophisticated grid services 
details protocols services newest nomenclature 
research concentrates information provider create information aggregates reuse information providers improve scalability 
furthermore argue worthwhile provide google services previous grid projects 

gram mds production grids shows gram mds services may simple production grid 
grid consists virtual organization maintains number compute resources 
compute resource globus gram globus resource information service gris returns information related local resource installed 
order client perform job execution information query different mechanisms contacting services 
services operate different ports different protocols making amount code sharing interpreting return values complex 
installation services requires additional sophistication 
feel gris backend gram virtual organization client connectivity layer resource layer 
sample interaction client gram mds different technologies contrast desire provide minimal set protocols services grids promoted global grid forum globus project 
think abstractly job execution information service recognize principle query formulated submitted server followed stream information returns result query 
addressing requirements info gram service designed service set requirements determined general software engineering practices include factors quality performance reliability security portability 
factors addressed realm grids 
concentrate efforts issues 

performance information job execution service perform tasks quickly 
elapsed time job request job submission short possible 
time information system accessible quickly 
example may inefficient execute time user requests data program creating data query relayed external information service 
simple example illustrate point 
assume large number clients need know cpu load remote compute resource 
wasteful execute command requesting load single time 
efficient cache value information service refresh cache value periodically 
order prevent staleness information attach time live ttl value information 
value tell refresh information cache necessary 

quality information information grids may quickly inaccurate 
observe cases 
case simplest form information describe binary system information accurate inaccurate 
case situations information may degrade time discrete fashion 
unreasonable attach degradation function actual value information reflects degree degradation 
function may influenced time system state prediction functions derive quality information assessment 
possible attempt derive degradation information observation mathematical models performing self correction observation data 
sophisticated data assimilation climate research corrects values comparison observations prediction models 
quality information important case sophisticated resource management strategies developed 
obtain attribute mean cpu load grid information service beneficial quality information attached 
knowing standard deviation knowing accuracy value valid hour day important factor create sophisticated grid services 

security access services information job execution needs performed securely 
grid security infrastructure gsi provides elementary framework authentication 
authentication problem addressed grids 
framework strive include authorization allows specify contracts allow access resource pm user additions gsi sophisticated authentication frameworks may provide :10.1.1.26.255

portability protocol compatibility services preserved globus toolkit gram grid security infrastructure gsi protocols 
activities include integration commodity protocols soap provide interoperability web services greater acceptance outside grid community 

flexible extensible information model issues face information providers lack standard uniformly adhered community 
observe cim mib mds non standard unorthodox display information tables 
believe creation consistent information model important focus mechanism delivering information user 
reasoning strategy service provides necessary mechanisms delivering information information model information provider 
positive experience xml schemas basis generation information services believe provides viable alternative currently ldap schemas 
compatibility maintained developing strict guidelines object definition global grid forum 
believe additional requirement fulfilled enhance acceptance grids 
believe execution untrusted applications trusted environments important enable grids 
hope feature user community increase dramatically software developed part activities 
providing software enable creation infrastructures promote grids new communities previously luxury access high resources 
making access supercomputer centers outside users feasible foresee resource providers may willing contribute resources part national scale grids 

architecture pointed earlier modified architecture gram server enhanced substantially order fulfill requirements described earlier 
added original architecture additional components shown shaded components describe enhancements functionality providing 
functionalities centered client interaction logging check pointing job execution information management configuration 
logging check pointing enabled logging service 
service receive logging events components 
log stored middle tier backend tier 
case log restart service case needs restarted machine shut 
way possible logging service check pointing applications 
presently record minimal information command arguments mentioned previously service contains novel features regards information service part provides 
features information service integrated gram providing backwards compatibility mds support information caching retrieval elementary information associated remote resource 
additionally integrating service feature information degradation self adaptation information updates discussed earlier 
information service architected components see system monitor system information service 
monitor service controls initializing caching results requested clients 
system information service returns relevant information system resources calls system command java runtime exec query function exposing java runtime information load memory disk space read function file information provider 
example information provider linux proc file system 
chosen object oriented framework implementation integration new information providers performed implementation interfaces 
executable path full executable path name arguments machine dependant associated keyword 
keyword keyword rsl string identify mapping real program java application executed background 
ttl lifetime millisecond data generated specific key word specifies execution keyword time requested 
provided configuration component allows setup service ease 
component includes possibility configure system monitor service customized information providers similar mds 
configuration file contains parameters 
configuration 
information service execution jobs robust integrating logging fault tolerance mechanism allows restart job failure 

job execution executed 
intend logging service provide simple grid accounting 
interface allows generate new information providers fashion similar current mds model implementation 
non blocking returns valid information information queried previously time live ttl value expired 
throws exception 
invocation method blocking method called returns appropriate information updating time live value 
multiple methods invoked monitors perform update time 
additionally provide delay controls milliseconds pass consecutive calls actual information obtained runtime exec call 
useful cases users ask information frequently produced system 

architecture combines gram service information service protocol client server 
conf 
logger log file conf 
mds security authentication policy system monitor service system information service conf 
system client gatekeeper jar class interface string void object object time ttl int validity public void time time string format format time job manager conf 
security conf 
authorization policy local job execution client tier middle tier backend tier allow able provide flexible extensible information services framework 
table 
configuration file provides mapping keywords information providers ttl keyword command date date memory exe mem cpu exe cpu usr local bin exe list bin ls home gregor provide example information represented configuration file table 
keyword identifies information obtained program refer key information provider 
attribute key information provider augmented namespace conform keyword 
attribute total memory information provider referred total 

caching information degradation caching functionality similar mds 
queries information service simple queries keywords configuration files 
means attributes obtained command associated keyword returned 
simple model 
caching information easily possible 
additionally option augment attribute returned key information provider degradation function quality information value 
selecting similar information attributes performed quality information provided 

service reflection information service queried client may inspect schema returned information service 
allow developers design programs flexible information schema 
believe reflection introspection capabilities execution information service increasingly important increased number available grid services 

client interaction developed prototype architecture web service believed time provide big departure existing globus toolkit 
thought important acceptance information service recognition globus toolkit reached ubiquity community globus protocols reused 
wanted maintain degree backwards compatibility decided chose pure web implementation uses wsdl xmlschema xml query 
felt effort performed second step performed part open grid service architecture 
uris formulate job submission information queries argued users globus toolkit sufficiently familiar rsl 
natural extend rsl advanced features introduced far 
added tags globus rsl schema info filter response performance quality format 
call result 
info 
info tag followed key specified configuration file defining mapping keyword command executed 
set info commands executed 
commands selectively queried concatenating multiple info tag queries example info memory info cpu 
special value info tag info schema 
returns hierarchical schema contains objects associated keywords lists properties attributes 
response 
response tag defines behavior respect information caching 
response immediate commands associated info tag executed immediately regardless time live 
update cached values 
response cached return information cache value valid update cache 
response return value stored cache updating 
quality 
quality threshold tag provides possibility specify percentage number gives additional guidance cached value returned information needs refreshed return 
currently define semantic 
degradation function returned attributes threshold attribute regenerated associated command 
performance 
performance tag returns number seconds standard deviation long takes obtain particular information value 
performance command attributed values measured catalogued runtime 
format 
format tag defines format information returned 
supported formats xml 
straightforward support formats 
extensions 
planning extend ex timeout tag additional action tag reaching timeout 
example rsl executable command timeout action cancel cancel command specified rsl action exception throw exception command completed execution execution command continuing 
advantages 
advantages information stem simplification architecture bound delivery integrated job submission information service 
querying information handled clients execution jobs 
information service easily integrated globus mds information service architecture 
summary explored changes mds protocol implementation level 
protocol level replaced ldap search query query cast simple job submission rsl 
implementation level replaced modular configurable mds information provider architecture complex modular configurable architecture believe fulfills straightforward fashion grid designers quest easy maintain information service 
part implementation effort explored advanced features dealing caching information quality augmentations data 
result simplified architecture contrasts earlier 
believe number components info gram service increased complexity combined service lower current provided solution 
virtual organization client layer resource layer 
new service reduces number protocols components grid 

implementation services implemented language chosen prototype java 
straightforward engineering exercise implement java platform enhances functionality service additional features available able achieve delivery pure java information gram service providing cross platform portability includes windows operating system 
delivery web enabled installation service deploy service low overhead installation time administrative burden 
execution untrusted applications trusted environments remote machines part java virtual machine model 
support development previously outlined service performed significant enhancements java cog kit maintained part globus project 
enhancements focusing job submission deployment logging security information service 
possible standard java packages reduce amount codebase maintained 
includes logging security 
step implemented pure java implementation globus gram service provides functionality counterpart 
order support interoperability compatibility design directly architecture gram service 
contains gatekeeper job manager local job execution process 
name service gram 
job submission 
job execution service gram gram distributed globus toolkit 
investigate implementation major gram functionality support map user certificates local user ids possibility interfaces easily schedulers 
learned prototype possible provide service java mimics behavior gram 
executables precompiled native code gram service enhances normal globus gram service able execute pure java code submitted java jar files 
enable execution jar files part gram service variety changes necessary 
extended functionality job manager start code embedded jar file submitted rsl call executable jar order run java applications method execute code jvm rest components running 
alternative separate execution job jvm increase security 
provide ability configure job manager run modes 
grid administrator decide mode run 
execution system commands performed runtime exec call 
possible redirect client 
functionality equivalent gram service exception supported 
globus project replace near decided refer full delegation globus gram order provide functionality possible start mpich jobs 
deployment 
demonstrated service sc featured ease installation service java framework deployment methods known web start 
advanced deployment protocol able maintain ease provide solutions automatically upgrading services production grids 
feature naturally supported choosing java implementation deployment platform 
sophisticated approaches require effort traditional operating systems 
logging 
process refining logging mechanism execution jobs assists fault recovery abilities gram possibility logging authenticated information queries guide part intelligent scheduling services 
secure sandboxing 
traditional programming languages fortran difficult execute untrusted applications trusted environment similar grid provides 
jvm able enable trust relation untrusted client application executed trusted environment 
additionally able package gatekeeper nonroot access rights jar file easily installed environment 
gram configured various ways 
execute job running jvm start number external jvm execute jar file restrictive environment 
portability 
advantages java immediate availability information service windows operating system 
benefits introduced providing authorization mechanisms part service supported java platform 

second step prototyped functionality described enable service 
obtained experience return information queries xml 

application currently gram service projects emerging ogsa framework developed investigations 
tested prototype application termed sporadic grid 
grid created just short period time sophisticated experiments photon sources 
implement service need simple architecture contains set advanced grid services useful supporting creation maintenance sporadic grids 
service provides service 
able distribute pure java application easy install number machines access web browsers 
extend efforts support computationally mediated sciences 
technique focused electron probe sequentially scanned dimensional field view thin specimen point specimen dimensional electron diffraction pattern acquired stored 
analysis spatial variation electron diffraction pattern allows researcher study subtle changes resulting differences ferro electro magnetic domain formation motion unprecedented spatial scales 
provide computational grid infrastructure classes experiments 

related parallel research described modifications gram performed colleagues globus project condor team university wisconsin 
modified version gram available part globus release 
protocol compatible version 
globus project started ibm open grid services architecture 
performed ogsa 
lessons learned activities influence ogsa 
current ogsa prototype implementation uses gram service gsi security provided java cog kit 

status plans performed research activity explored new concepts expect considered globus toolkit developments 
research activities include exploration conceptual issues identified implementation part prototype globus toolkit developments 
conceptual level investigate explicit guidelines system designers choose right configuration setting service appropriate parameters configuration files 
perform simplifications gram architecture port communicate job clients 
compatibility reasons able perform change 
improved fault tolerance allow automatic restart capabilities enabled checkpointing 
improving code hope integrate globus toolkit ogsa framework 
features performance tag information degradation integrated moment 
experimenting integration framework web services jxta 

discussion feel contributed areas grid computing 
identified possible design information system job submission service simplifies architecture services provided globus toolkit 
extension rsl easy current globus toolkit users adapt code information query 
second provide possibility protocol compatible globus toolkit able integrate information provider existent mds 
provide option move different information provider enabling gradual transition 
new information providers integrated easily information service framework 
third integrated current java cog kit gram service allows executing untrusted applications trusted environments 
service naturally able run windows platforms support sporadic grids defined 
forth set stage multi protocol support grid information services may export data xml schema 
suggestions enhancing globus toolkit believe development globus gram benefit research sporadic grids 
believe open grid services architecture benefit performed year 
particular simplified service elementary replacement lightweight job execution information service 
straight forward cast info gram wsdl 
acknowledgments supported mathematical information computational science division subprogram office advanced scientific computing research department energy contract eng 
darpa doe nsf support globus project research development 
carlos pe partially funded doe program 
help implementation 
ian foster dennis gannon peter lane mike russell valuable discussions course ongoing development 
possible help globus team 
globus toolkit globus project trademarks held university chicago 
physiology grid open grid services architecture distributed systems integration 
available www globus org research papers ogsa pdf 
application testbed european grid computing 
www org 
information power grid research site 
www ipg nasa gov 
homepage 
www org march 
allen goodale 
seidel 
cactus code problem solving environment grid 
high performance distributed computing 
proceedings 
ninth international symposium pages san fransisco august 
butler foster kesselman tuecke welch 
design deployment national scale authentication infrastructure 
ieee computer 
czajkowski fitzgerald foster kesselman 
grid information services distributed resource sharing 
th ieee international symposium high performance distributed computing pages san fransisco ca august 
ieee press 
www globus org 
czajkowski fitzgerald foster kesselman 
grid information services distributed resource sharing 
pages 
czajkowski foster karonis kesselman martin smith tuecke 
resource management architecture metacomputing systems 
proceedings ipps spdp workshop job scheduling strategies parallel processing lecture notes computers science 
doe science grid 
www org 
fagg moore dongarra 
scalable networked information processing environment 
international journal generation computer systems 
foster kesselman nick tuecke 
physiology grid open grid services architecture distributed systems integration 
technical report globus project jan 
www globus org ogsa 
foster kesselman tuecke :10.1.1.129.8850
anatomy grid enabling scalable virtual organizations 
international journal supercomputer applications 
foster kesselman tuecke 
anatomy grid enabling scalable virtual organizations 
international journal high performance computing applications 
www globus org research papers anatomy pdf 
gannon fox rossi bertrand chiu govindaraju krishnan ramakrishnan ma rey 
programming grid distributed software components grid web services scientific applications 
www extreme indiana edu papers pdf 
globus gram web page 
www globus org gram 
globus mds users guide 
www globus org mds pdf 
globus project web page 
www globus org 
java cryptology 

logging toolkit java july 
www alphaworks ibm com tech 
kaplan nelson 
comparison queueing cluster distributed systems 
karonis 
mpich web page 
www niu edu mpi 
krishnan 
jxta solution 
october 

und java anwendung und 
addison wesley 
developer documentation 
jakarta apache org whitepaper html 
oaks java security 
java series 
reilly cambridge 
www com 
thompson johnston hoo jackson :10.1.1.26.255
certificate access control widely distributed resources 
proc 
th usenix security symposium washington dc august 
www itg lbl gov akenti papers html 
von laszewski 
parallel data assimilation system implications metacomputing environment 
phd thesis syracuse university nov 
von laszewski 
loosely coupled cooperating job submissions multiple supercomputing sites 
concurrency experience practice 
www org 
von laszewski 
grid computing enabling vision collaborative research 
conference applied parallel computing rd csc scientific meeting lecture notes espoo finland june 
springer 
von laszewski fitzgerald foster kesselman smith tuecke :10.1.1.21.987
directory service configuring high performance distributed computations 
proc 
th international symposium high performance distributed computing pages portland august 
ieee 
ftp ftp globus org pub globus papers hpdc mds pdf 
von laszewski foster 
grid infrastructure support science portals large scale instruments 
proc 
workshop distributed computing web 
university rostock germany june 
www mcs anl gov papers rostock pdf 
von laszewski foster lane 
java commodity grid kit 
concurrency computation practice experience 
www globus org cog documentation papers cog pdf 
von laszewski foster kesselman su rivers mc wang 
real time analysis visualization steering experiments photon sources 
siam 
siam 
von laszewski westbrook barnes foster westbrook 
computational grid capabilities enhance capability ray source structural biology 
cluster computing 
web services description language wsdl 
www org tr wsdl 

www ibm com software solutions webservices 
web services inspection language 
xml org ibm ws inspection overview pdf 
xml schema primer 
www org xml schema 
von laszewski 
computationally mediated sciences 
preparation september 
