efficient cell clustering method handling large high dimensional data jae woo chang dept computer engineering national university south korea email ac kr 
data mining applications required large amount high dimensional data 
clustering methods data applications efficiently dealing large high dimensional data called curse dimensionality limitation available memory 
propose efficient cell clustering method handling large amount high dimensional data 
clustering method provides efficient cell creation algorithm space partitioning technique cell insertion algorithm construct clusters cells density threshold 
achieve retrieval performance clusters propose new filtering index structure approximation technique 
addition compare performance clustering method clique method terms cluster construction time precision retrieval time 
experimental results show clustering method achieves better performance cluster construction time retrieval time 
clustering method shows performance system efficiency measure combine precision retrieval time 
keywords cell clustering methods high dimensional data data mining 
data mining concerned extraction interesting knowledge large amount data rules regularities patterns constraints 
data mining data analysis differences conventional analysis techniques 
existing techniques applied static dataset data mining applied dynamic dataset continuous insertion deletion 
secondly existing techniques manage data data mining manage data including errors 
conventional techniques data mining generally deals large amount data example millions data 
typical research topics data mining classification clustering association rule trend analysis important topics clustering 
conventional clustering methods critical drawback suitable handling large data set millions data data set restricted resident main memory 
clustering high dimensional data retrieval performance generally degraded number dimension increases 
propose efficient cell clustering method dealing large amount high dimensional data 
clustering method provides efficient cell creation algorithm cells splitting dimension set partitions split index 
provides cell insertion algorithm construct clusters cells density threshold insert clusters index structure 
approximation technique propose new filtering index structure achieve retrieval performance clusters 
rest organized follows 
section discusses related clustering methods 
section propose new cell clustering method 
section analyze performances cell clustering method 
draw section 
related clustering process grouping data classes clusters objects cluster high similarity comparison dissimilar objects clusters 
clarans clustering large applications randomized search improved medoid type method randomized search 
clarans partly motivated wellknown algorithms cluster analysis called pam partitioning medoids clara clustering large applications 
clarans checks sample neighbor node sample drawn dynamically clarans significantly efficient pam clara 
clarans cell creation algorithm cell creation algorithm cells splitting dimension group sections split index 
split index density creating split sections efficient splitting multi group data 
cell creation algorithm finds optimal split section repeatedly examining value maximum minimum dimension 
find optimal difference maximum minimum greater value split index splitting greater previous value 
split index value calculated eq 
splitting eq 
splitting 
split eq split split split eq procedure cell attributes input data set attribute split point attribute compute pj pj max return split max split point partition attribute partition attribute endif 

cell creation algorithm eq 
determine split index value data set steps divide classes ii calculate square value relative density class iii add square value density classes 
eq 
compute split index value divided 
split index value larger previous value splitting divide splitting 
secondly cell creation algorithm cells optimal split sections dimensional data 
result cell creation algorithm cells existing clustering methods equivalent interval 
shows cell creation algorithm 
subprogram called partition partitions input data set means attributes 
procedure omitted easy construct procedure slightly modifying procedure cell 
example cell creation algorithm describes process splitting records classes dimensional data shown 
bold line represents split index records axis 
calculate split index values intervals 
secondly choose interval maximum value 
regard upper limit interval split axis 
example interval split index value interval split index value 
determine upper limit interval split axis split index value splitting greater previous value 
result axis divided sections ranges second 
split index value calculated follows 


example cell creation algorithm split index value splitting split 
ii split index value splitting split split split 
iii split index value splitting 
filtering index structure order reduce number accesses cluster information file generally large size possible construct new filtering index structure approximation information file 
shows level filtering index structure containing approximation information file cluster information file 

approximation information file number density cluster information file 

level filtering index structure clusters acquired cell clustering method numbers split sections axis axis respectively 
equation eq shows retrieval time approximation information file 
assume average filtering ratio approximation information file number dimensions input data number records page average number records dimension 
case approximation information file retrieval time decreased decreased 
high dimension data level index structure approximation information file efficient method value increases exponentially proportion dimension retrieval time approximation information file kp disk accesses ii retrieval time approximation information file kp disk accesses eq query level index structure obtain corresponding section dimension 
case corresponding sections dimensions value approximation information file calculate cell number access cluster information file 
improve retrieval performance accessing approximation information file 
increase dimensionality may cause high probability dimension approximation information file zero 
shows procedure answer user query level index structure cell threshold section threshold respectively 
query determine axis third section axis fourth section 
approximation information file value third section axis th section axis 
sections approximation information file query discarded query processing terminated searching corresponding cluster information file 
discarded phase 
query value axis value axis belong third section respectively 
approximation information file third bit axis third bit axis calculate cell number obtain cell frequency accessing cluster information file 
result case proved resulting set 
case obtain cell number frequency cluster information file 
approximation information file constructed cells index structure cell number 

query processing level index structure 
performance analysis cluster information file order show cell clustering method efficient handling large high dimensional data analyze performance clustering method 
performance analysis implement cell clustering method linux server mhz dual processor mb main memory 
addition dimensional data synthetic data generation code classification ibm quest data mining project 
record data composed numeric attributes salary commission age loan tax interest balance categorical attributes elevel zipcode area children ctype job 
factors performance analysis cluster construction time precision retrieval time 
cluster construction time means addition cell creation time cell insertion time 
compare cell clustering method clique method efficient conventional clustering method handling highdimensional data 
addition clique method applying approximation information file clique method order deal large amount high dimensional data 
performance analysis considering section thresholds performance analysis cluster construction time set threshold values considering section thresholds methods 
shows query 
shows performance precision clique clique cell clustering method section threshold 
result shows cell clustering method clique achieve precision clique achieves precision 
viewpoint precision shown performance clustering method slightly worse clique 
clustering method smaller number cells compared conventional clustering methods 
precision unit clique clique method 

precision major performance measures retrieval time precision trade relationship estimate system efficiency measure combine retrieval time precision 
define system efficiency measure eq 

emd means system efficiency md method wp wt mean weight precision retrieval time respectively 
md md max md min eq 

system efficiency pmd tmd mean precision retrieval time methods md 
pmax tmin mean maximum precision minimum retrieval time respectively methods 
dimensional data experiment assume weight precision retrieval time respectively 
depicts performance results system efficiency 
shown clustering method achieves performance system efficiency clique clique achieve respectively 
conclusively clustering method achieves best performance term system efficiency 
performance analysis considering section thresholds measure performance precision retrieval time considering various section thresholds 
clique method approximation information file compare cell clustering method clique shows precisions clique clustering method 
section threshold cell clustering method achieves precision clique achieves precision 
shown clustering method achieves slightly lower precision clique clustering method smaller number cells clique mentioned section 
addition performance precision cell clustering method clique decreased section threshold greater 
section threshold greater discard number cells approximation information file leading low precision 
precision unit section thresholds 

precision respect section thresholds addition measure performance retrieval time cell clustering method clique considering various section thresholds 
shows retrieval times methods 
section threshold clustering method requires seconds retrieval time clique requires second 
shown cell clustering method order magnitude better retrieval performance clique addition result shows retrieval time decreased section threshold increased reduce number records objects accessed filtering 
time unit second section thresholds 

retrieval time respect section thresholds measure system efficiency eq 
order show performance including retrieval time precision considering various 
eq 
wp wt weight precision retrieval time respectively 
pmd tmd denote precision retrieval time md method section threshold value shows performance system efficiency emd section threshold values 
cell clustering method efficient wp equals wt 
pmd emd wt eq tmd max 
min section thresholds 

system efficiency respect section thresholds conventional clustering methods efficient large highdimensional data proposed new cell clustering method features overcome difficulty 
allows create small number cells large amount high dimensional data 
second allows apply approximation technique cell clustering method fast clustering 
performance analysis compare cell clustering method clique method efficient clustering method handling large amount high dimensional data 
performance analysis results show cell clustering method shows slightly lower precision achieves performance retrieval time cluster construction time 
method shows performance system efficiency measure combine precision retrieval time 
berchtold bohm keim kriegel cost model nearest neighbor high dimensional data space acm pods symposium principles databases systems tucson arizona 
jiawei han kamber data mining concepts techniques morgan kaufmann 
ng han efficient effective clustering methods spatial data mining proc 
th int 
conf 
large data bases morgan kaufmann pp 

kaufman rousseeuw finding groups data cluster analysis john wiley sons 
zhang ramakrishnan birch efficient data clustering method large databases proc 
acm sigmod int 
conf 
management data acm press pp 

wang yang muntz sting statistical information grid approach spatial data mining proc 
rd int 
conf 
large data bases morgan kaufmann 
rakesh agrawal johannes gehrke dimitrios gunopulos prabhakar raghavan automatic subspace clustering high dimensional data mining applications proc 
acm sigmod int 
conf 
management data pp 

www almaden ibm com cs quest 
