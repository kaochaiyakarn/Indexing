high performance protocol architecture walid inria centre de sophia antipolis route des lucioles bp sophia antipolis cedex france 
tel fax mail walid inria fr development high speed networking applications requires improvements data communication protocols order eoeciently provide required services applications 
survey rst give rapid presentation protocol optimization techniques high speed transport protocols developed specic application needs 
new protocol architecture level alf layer ilp concepts 
alf states applications send data sequence autonomous frames time unit transmission unit control unit processing 
allows eoecient design application specic protocols 
enables ilp integration multiple transmission control layers single loop maximizing eoeciency modern processors 
architectural design aspects corresponding implementation problems 
practical experimentations alf ilp described limitations assessed 
new approach network architecture active networks discuss pros cons 
development high speed networking applications audio video conferencing collaborative supercomputer visualization transactional applications www requires eoecient communication protocols 
networks proceed higher speeds performance bottleneck shifting bandwidth transmission media processing time necessary execute higher layer protocols 
fact existing standard transport protocols tcp dened seventies 
time communication lines low bandwidth poor quality complex protocol functions necessary compensate transmission errors 
emergence high speed networks changed situation protocols designed way today 
hand transport protocols tcp tp designed provide called transport mainly performing error control point point connections includes detection correction packet losses duplications alterations 
application environment changing 
new applications cf specic communication requirements considered 
depending application requirements may high bit rates low jitter data transfer simultaneous exchange multiple data streams dioeerent itype audio video textual data reliable multicast data transmission service low latency transfer rpc applications variable error control requirements imply necessity revise data communication services protocols order specic application needs 
fact applications may choose connection connection oriented transport services 
cases application needs expressed terms quality service qos parameters transit delay maximum throughput 
applications involved choice control mechanisms selecting parameters transport service 
placing burden network adaptation user equipment line key point internet architecture 
contributes keeping network simple way scale complex system 
allow build high performance communication modules 
performance dened eoecient resources meeting applications requirements clark denition cla 
detail issues inaeuence performance communication system 
survey techniques area high performance protocols 
focused application level framing integrated layer processing alf ilp concepts automatic generation high performance communication systems 
rest composed sections 
section state art high performance protocols start studying impact environment performance dioeerent performance enhancement techniques ranging protocol parameter tuning adaptation algorithms support design special purpose protocols 
section discusses architectural design issues shows layered model needs re considered 
section alf ilp concepts foundations high performance protocol architecture 
discuss possibility achieve performance gain applying concepts protocol design implementation 
experimental results obtained alf ilp discuss advantages limitations 
protocol compiler supporting design rules 
section presents active networks approach network architecture discuss disadvantages 
section concludes 
high performance protocols early high performance protocols concentrated optimization layer separately 
concerning transport protocols approaches studied enhanced environments protocol development tuning standard general purpose protocols wat col including design new transmission control algorithms jac development specialized protocols pei cher 
fact protocol execution environment strong impact performance communication system 
environment overhead mainly due interrupt handling timer management allocation process scheduling 
enhanced execution environments concentrated blocking multiple events low management overhead timers management better resource scheduling cla 
issues generally independent communication protocol detailed section focus protocol related issues 
tuning standard protocols general purpose transport protocols tcp tp support complex control mechanisms connection management error control aeow control heterogeneous networks 
advantage protocols may large number applications requiring standard reliable point point transport service 
price pay limitation protocol performance 
careful analysis protocols showed types issues resolved order enhance performance ffl bad choice acknowledgments strategy ffl bad choice time values ffl limitations due lack congestion control algorithms 
tuning protocols consists chosing values parameters designing adaptive transmission control algorithms 
acknowledgments tcp uses positive cumulative acknowledgments indicating number expected octet 
transport level acknowledgments acks bad impact performance number minimized 
clark proposed cla delay emission ack certain cases hope grouping acks 
tcp proposed order enhance performance links high bandwidth product selective acks 
case packet loss sender resend lost packet unacknowledged packets jac jac 
furthermore negative acknowledgment scheme nack proposed protocols netblt cla xtp pei 
nack semantics explicit retransmission request destination 
advantages reducing number control packets nacks packet losses transferring error detection problem receiver allowing scalability case multicast transmission 
timers transport protocols timers connection management error detection tp uses dioeerent timers 
addition timer management cost mentioned section major problem nd time values timers 
particularly important retransmission timer 
time value satisfy incompatible goals rapid detection packet losses reduction number false alarms due delayed packet loss 
optimal value depends round trip time rtt source destination turn depends factors network load routes taken packets probably packet size 
imposes time value adapted rtt variation 
eoeective retransmission time tcp function rtt 
smoothing factor lters transient changes value determines responsiveness algorithm network changes 
may arise case retransmission lack information received ack corresponds rst second transmission packet 
rtt sample corresponding retransmitted packet taken account computing smoothed rtt 
addition rtt variance taken account compute retransmission time described jac 
possible unnecessary retransmissions due packet blocked local network interface lost ack bad rtt estimate 
main problem comes fact timers local means estimate external events 
researchers proposed avoid transport level timers transmission control cla 
congestion control transport level congestion control ensures network resources shared eoeciently network congestion avoided 
fact window aeow control algorithms tend large window values order ill case networks high bandwidth delay product 
transport connections large windows share link packet queuing delays may observed router accessing link resulting retransmissions 
positive feedback may cause congestion specic control algorithms applied 
van jacobson proposed algorithm implemented tcp 
algorithm transport connection starts setting window size 
increased ack received exponential phase cwnd 
window reaches cwnd linear phase increased acks 
source estimates packet loss occurs timeout expiry reception duplicate acks cwnd set set algorithms restarts 
implementation algorithm tcp version resulted enhanced performance protocol 
special purpose protocols early domain enhanced transport service proposed design light weight special purpose protocols specic application needs netblt cla cla bulk data transfer vmtp cher transactional applications 
netblt network block transfer light weight transport protocol working top udp ip optimized bulk data transfer high speed lans cla cla lam 
main idea netblt error aeow control implicitly linked window aeow control protocols 
netblt client sends rate controlled packets waiting acks 
packets block transmitted receiver requests retransmission lost damaged packets 
receiver error control removes need retransmission timers senders 
protocol resulted reduced latency high delay links lack support intermediate gateways limited protocols experimental status 
supported internet 
performance tcp support slow start outdated usefulness netblt high speed lans 
vmtp versatile message transfer protocol special purpose protocol designed intra system communication rpc le pages access cher 
nice feature protocol support multicast transmission transport level 
order speed request response time transport level connection established 
stable addresses provide sort semi permanent connection 
application level replies may acknowledge reception requests 
protocol rst protocols conformance application level framing concept 
protocol local network environment case performance mbps ethernet kan 
xtp xpress transfer protocol initially designed implemented specialized hardware execution eoeciency inherent part design process ches 
syntactical algorithmic choices protocol oriented facilitate high speed operation low error rate networks 
hardware circuit implementation project discarded protocol survives meetings held regularly xtp revision released march 
previous releases xtp protocol integrating layers processing pei 
concentrate analysis xtp protocol transfer layer architecture 
integrating layers reduces packet processing overhead enables performance optimizations 
optimizations possibility calculate checksum packet headers trailers ii lightweight checksum algorithm computed high speed software iii xed length elds fast access header iv fast connection establishment release way mechanism fast de multiplexing incoming packets exchange local access keys 
addition xtp protocol provided functional enhancement support reliable multicast rate control participation intermediate routers priority support variable error control controlled sender adapted application needs 
pre dened xtp service 
xtp provided programmable toolkit set mechanisms strategies 
selection required functionalities done application 
xtp protocol designers proposed new ideas layers integration incompatible osi model 
ideas represented step integration 
ideas discarded version xtp protocol 
purpose approach major limitation diversity applications increases complexity transport support protocols 
application choose protocol corresponding specic needs 
new protocol architecture approaches previous section adequate provide high performance communication systems multimedia applications main reasons 
rst protocols include upper layers data processing overhead transmission control loop 
overhead eoeective bottleneck application video coding decoding video conferencing application data presentation data base replication 
second reason multimedia applications specic communication needs correspond standard general purpose proposed special purpose protocols 
performance workstations increased advent modern risc architectures pace network bandwidth past years 
furthermore access primary memory relatively costly compared cache registers discrepancy processor memory performance expected get worse 
observations lead researchers cla gun abb reconsider protocol architectural model mechanisms specic layer denition new protocol 
goal revision simplify design communication systems take account status network environment applications needs 
section discuss issues concerning design new protocol architecture 
considered osi model adopted standard designed seventies 
layer organization hardware architecture days depicted 
articial separation concerns entities called layers partly due hardware architecture 
service protocol concept derives historically model presenting interfaces dioeerent service providers 
link network transport session provider dioeerent potential vendors 
physical data link layer corresponded mechanisms implemented modem driver 
network transport layers generally implemented front ends session layer corresponded control dialogue channel mainframe application hosted front 
data presentation integrated application rec 
advent workstations see architecture implementations changed specially upper layers transport 
transport layer usually implemented kernel accessible application socket interface 
mainframe frontend driver channel modem process access method channel controller driver frontend hardware architecture corresponding model application run user level integrates specic parts presentation layer 
session layer presents problem 
need layer architecture 
words data transfer synchronization needs better known application 
suitable application control synchronization needs delegate control session layer 
problem posed layer case implemented presentation transport impose asynchronous data exchange layers known degrade performance 
implies data copies memory data transmitted network 
operations relatively costly risc workstations 
session control integrated application 
single vendor software implementation layered model tcp ip osi causing 
fact operations multiplexing segmentation hide vital information lower layers need optimize performance 
fact application able exchange control information transport 
means transport aware application just replies served acks requests 
allows avoid bad decisions may taken protocol send ack reply outstanding close window retransmit packet packet loss video transfer 
key issues performance enhancement reducing asynchrony involving application transmission control 
hand protocol processing divided parts control functions networks board workstation socket presentation synchronization gateways lan architecture data manipulation functions 
example data manipulation functions presentation encoding checksumming encryption compression 
control part functions header connection state processing 
jacobson demonstrated control part processing match gigabit network performance common size pdus appropriate implementations cla 
data manipulation functions bottleneck cla gun 
consist phases 
read phase data loaded memory cache registers manipulation phase followed write phase functions presentation encoding 
simple functions checksumming byte swap time read write memory dominates processing time 
processing oriented functions encryption presentation encodings manipulation time dominates current processor speeds 
situation expected change increase processor performance memory access major bottleneck data processing 
data manipulation functions spread dioeerent layers 
naive protocol suite implementation layers mapped distinct software hardware entities seen atomic entities 
functions layer carried completely protocol data unit passed layer 
means optimization layer done separately 
ordering constraints conaeict eoecient implementation data manipulation functions 
famous sigcomm cla clark tennenhouse observation performance communication system enhanced slowest part chain best way 
researchers agree data manipulation higher level bottleneck presentation decoding encryption 
transport level delays processing pdus received sequence lost delayed pdu received 
eoecient utilization slowest part chain requires application able process sequence packets 
alf ilp clark tennenhouse cla proposed application level framing alf key architectural principle design new generation protocols 
alf fact natural result advanced networking experiments showed need rules 
eoecient transmission achieved unit error aeow control exactly equal unit transmission 
rule satised transport protocols atm networks 
fact control unit transport pdu equal transmission unit atm cell 
obvious penalties violating rule unnecessary large retransmissions case errors memory usage 

key idea expressed cla unit transmission unit processing 
large queues build front receiving processes eventually slow application 

experience multimedia services adaptive applications easier develop unit processing unit control 
violating rule means separation application transmission control may result bad choices taken transport 
alf principle applications send data autonomous application data units adus meaningful application 
desirable presentation transport layers preserve frame boundaries process data 
fact line widespread view multiplexing application data streams done protocol suite 
sending receiving application dene data goes adu adus processed order 
adu considered unit idata simplify processing 
example image server send messages corresponding parts picture 
receiver receives frame immediately decompress data corresponding pixels screen minimizing response times 
adu size exceed minimum mtu maximum transmission unit subnetworks traversed adu order avoid segmentation 
integrated layer processing ilp engineering principle suggested addressing increased cost data manipulation functions modern workstations 
main concept ilp minimize costly memory read write operations combining data manipulation oriented functions processing loops performing serially done today expected cost reduction due optimization result better performance reduce time consuming memory access 
interest ilp principle similar software pipelining principles lazy message evaluation delayed evaluation discussed cla gun par dab abb 
previous gun dab par suggested performance ilp 
results show reduced processing time pdu factor simple data manipulation functions integrated 
reported results came experiments isolated rest protocol stacks hand coded assembler routines order control register allocation cache behavior 
abbot peterson abb language approach integrate functions speedup 
par functions integrated data copying checksum calculation real operational implementation udp 
experience implementation xtp protocol osi project dab showed improved performance ilp 
implementation user address space demonstrates implementations perform kernel tuned implementations 
go step integrate data manipulation functions complete operational stack order understand architectural implications achievable speedup 
alf ilp proposed time manual implementations communication system concepts integrated applications vic ivs wb 
reasons design global framework integrated implementation alf ilp concepts feasible attractive ffl increase processor speeds discrepancy processor memory performance pushing integration data manipulation operations 
ffl experience implementation xtp dab tcp cas protocols showed user level software implementations perform kernel tuned tcp keeping software 
ffl performance enhancements asn encoding facilitate implementation presentation lter dab 
ffl multiple communication services including group communication variable error control studied variety applications multimedia video conferences shared workspace mobile applications 
desirable mechanism customize communication systems specic application needs 
experiments evaluate advantages disadvantages alf ilp 
experiments show eoecient implementation distributed applications may bene new architectural considerations alf ilp 
ilp gain real implementation 
may expect ilp gain increase cpu speed moment expect 
results concerns alf 
performance improvements shown experiments diot 
high packet error rate condition 
fact packet losses network alf complexity impose performance gag 
hand alf implies communication systems application 
requires automated approach protocol code generation allow generate large communication systems tailored application needs 
protocol compiler generates eoecient code step support new alf applications 
protocol compiler takes input specication protocol generates implementation protocol 
protocol compilers usually produce code terms speed code size 
cas describes protocol compiler uses combination techniques language compiler generates specication unique tree shaped automaton multiple independent automata ii optimization techniques applied automaton level branches trees 
gain expected approach evaluated real life example working subset tcp protocol generated specication written esterel 
protocol code generated approach derived standard bsd tcp implementation 
optimized generated code executes fewer instructions bsd code input packet processing maintaining comparable code size bigger 
compiler approach attractive faces portability limitations 
approach requires compiler generates portable code general case 
need new network architecture 
previous sections survey approaches enhanced communication performance focusing protocol enhancements internet network architecture 
section discuss approach network architecture approach switches network perform customized computations messages 
approach motivated user applications perform user driven computation nodes network today emergence mobile code technologies dynamic network service innovation attainable 
approach accelerate pace innovation decoupling network services underlying hardware allowing new services loaded infrastructure demand 
active networks challenge traditional internet architecture providing interoperability ip service 
fact computations performed dynamically varied user application specic user data accessible 
network layer interoperability agreed program encoding computation standardized packet format xed encoding classic ip service 
main interest approach impose network service increasing computation performed network 
alf states application control transmission 
approach allows application control network service 
combination approaches facilitate building mobile gateways base stations wireless networks 
serious concern expected performance approach 
increased routers cost may jeopardize routing performance 
survey enhanced protocols performance describes high performance protocol architecture eoecient implementation multimedia applications 
protocol architecture alf design principle allowing eoecient processing application data units 
experiments application level framing alf showed performance gain case heterogeneous internet 
active network approach promising design programmable networks 
generalization approach may lead performance limitations 
real challenge build high performance active switches 
fact adaptive applications approach suoecient new network service supported network 
active network approach provide support 
may 
need re think high speed networks 
abb mark abbott larry peterson 
network throughput integrating protocol layers ieee acm transactions networking vol october 
abb mark abbott larry peterson 
ia language approach protocol ieee acm transactions networking vol february 
berry gonthier 
ithe esterel synchronous programming language design semantics 
journal science computer programming vol 
num 
pp 


braun diot 
implementation sigcomm boston august 
cas claude walid sean malley 
eoecient protocol code 
proceedings acm sigcomm stanford university california august 
cas claude walid 
communication subsystem implementation synchronous proceedings usenix symposium high speed networking oakland ca august 
cher cheriton transport protocol generation communication proceedings acm sigcomm stowe vermont august pp 

ches pe design protocols high speed networks rudin williamson eds elsevier science publishers north holland may 
cla david clark 
ithe art engineering protocol sigcomm tutorial london ao transparent page 
cla david clark david tennenhouse 
considerations new generation proceedings acm sigcomm september philadelphia pennsylvania pp 

cla david clark van jacobson john howard 
ian analysis tcp processing ieee communications magazine june pp 

cla david clark mark lambert lixia zhang 
netblt bulk data transfer protocol 
network information center rfc sri international march 
cla clark lambert zhang 
high throughput transport ccr volume number pp 

cla david clark 
window acknowledgment strategy tcp 
rfc july 
col colella mills 
improvements iso computer communication review vol 
september 
dab walid 
performance presentation transport mechanisms integrated communication proceedings th ifip workshop protocols high speed networks vancouver august 
dab walid christian huitema 
implementation research report institut national de recherche en informatique en automatique november 
dab walid session presentation layers support high speed technical report institut national de recherche en informatique en automatique october 
diot diot richards 
level framing automated th ifip international conference high performance networking palma spain september 
gag gagnon diot 
sequence processing data transmission 
inria sophia antipolis july 
gun partridge victor 
evaluation gigabit proceedings nd workshop 
anna 
experimental evaluation tcp user space 
inria internal report request sophia inria fr 
jac jacobson braden zhang 
extension high speed rfc october 
jac van jacobson 
congestion avoidance control 
computer communication review volume 
jac jacobson braden 
tcp extensions long delay paths 
rfc october 
kan kanakia david cheriton 
ithe vmp network adapter board high performance network communication proceedings sigcomm stanford ca pp 

lam mark lambert 
testing netblt protocol networks 
network information center rfc sri international november 
malley peterson 
ia highly layered architecture high speed proceedings ifip workshop protocols high speed networks ii palo alto ca pp 

par partridge pink 
faster udp 
submitted ieee transaction networking 
pei protocol denition revision pei january protocol engines incorporated santa barbara ca usa 
bjorn stephen pink multimedia applications gigabit ieee network magazine vol january pp 

rec recommendation handling systems presentation transfer syntax red book volume viii viii itu october pp 

tennenhouse wetherall 
active network computer communication review vol 
april 
ian jon crowcroft zheng wang considered ieee network january 
wat richard watson sandy 
eoeciency transport services appropriate design implementation acm transactions computer systems vol may pp 
