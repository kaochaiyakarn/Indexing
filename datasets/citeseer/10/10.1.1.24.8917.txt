indexing xml data toxin alberto mendelzon university toronto department computer science mendel cs toronto edu indexing schemes semistructured data developed years optimize path query processing summarizing path information 
schemes applied query processing stages support limited class queries 
overcome limitations developed toxin indexing scheme xml data fully exploits path structure database query processing stages 
toxin consists different types structures path index summarizes paths database forward backward navigation starting node value index supports predicates values 
toxin synthesizes ideas object oriented path indexes extends semistructured realm xml data 
toxin architecture describe current implementation discuss comparative performance results 

semistructured databases abs traditional databases fixed schema known advance stored separately data 
broadly speaking semistructured data self describing model heterogeneity naturally relational object oriented data 
examples self describing data tagged documents xml 
data model proposed type data consists edge labeled graph nodes corresponds objects values edges elements attributes 
shows fragment semistructured database modeled edge labeled graph 
data model carries data nodes schema information edges naturally suitable represent semistructured data 
semistructured data models pose new challenges areas 
consider query optimization path queries instance 
due lack information schema na evaluation scans database search paths satisfy query prohibitively expensive 
addition navigating graph essentially pointer traversal objects may scattered disk stored different locations queries may require disk accesses cause significant performance degradation 
addressed problem efficiently evaluating path queries area ccm fs mw 
order optimize path query processing indexing schemes proposed past objectoriented databases 
example schemes path indexes bk sb access support relations km materialize frequently traversed paths database order support navigation chains leading object 
approaches paths schema possible typical schema xml documents 
index structures semistructured data developed years order address problem 
indexing schemes keep record existing paths database summarizing path information 
examples indexes semistructured data dataguides gw indexes indexes ms indexes ms reversed dataguides ls 
dataguides concise accurate summary paths database start root 
label path string formed concatenation labels edges database described exactly dataguide 
dataguides reduce portion database scanned path queries useful navigating semistructured graph root 
provide information parent child relationship nodes database navigation arbitrary node 
result case general path queries require point backward navigation find year publication article database need additional index structures optimize query evaluation 
similar problem faced indexes represent set paths dataguides different approach 
toxin developed tox toronto xml engine project university toronto bbm fragment generic publication database lore system mag attempts address problem additional index structures forward backward navigation mw 
indexes exploit database structure dataguides nodes edges values stored regardless path structure database 
indexes reduces number pointer traversal operations lack path information causes extensive look ups joins large data sets forward backward navigation generic node 
instance consider query find title issue article published database 
answer query retrieve parent child pairs connected title edges issue relevant query connected title edges article 
indexes specialized path indexes 
indexing paths indexes summarize limited class paths specified path template 
indexes indexes special cases indexes 
order optimize query processing regular path queries developed toxin indexing scheme fully exploits path structure database forward backward navigation starting node 
original goal designing toxin index supports navigation xml graph answer regular path query 
time wanted keep size index linear worst case size xml graph 
addition needed data structures help locate nodes satisfy regular path expressions predicates values 
explained previous index schemes developed oodb semistructured data satisfy requirements 

toxin overview toxin consists different types index structures value index path index 
path index components index tree minimal dataguide gw set instance functions edge index tree 
edge labeled tree data model consider semantic idrefs current prototype need instance functions keep track parent child relationship pair nodes defines xml element 
algorithm constructs index tree works follows 
performs depth traversal xml tree 
edge visited xml tree checks corresponding index edge added adds 
updates instance function current index edge adding pair parent node child node current xml element 
structure contents instance functions resemble access support relations 
toxin instance functions equivalent binary access support relations minimal dataguide plays similar role object oriented schema construction index 
structure access support relations static structure instance functions changes time index tree updated 
instance function stored redundant hash tables forward instance table forward navigation backward instance table backward navigation 
value index hand consists set value relations store xml nodes values corresponding index edge 
value relation created edge index schema corresponds set xml nodes containing values 
relation implemented trees keyed values strings 
value path indexes combined answer regular path queries predicates values expressed xpath 
xpath syntax hierarchical relationship nodes expressed operators 
specifies parent child relationship nodes specifies ancestor descendant relationship nodes depth 
sections brackets xpath expression called filter sections 
consider xpath queries having filter section discussion generalized queries number filters 
filter predicate applied nodes match path expression pre filter section 
instance query find titles articles expressed xpath issue year article title 
evaluation rest pattern section continues nodes matches pre filter section satisfies filter 
xpath includes wildcard operator matches node location path expression disjunction operator 
see example toxin works 
shows toxin tree tables xml document 
vt boxes represent value tables boxes instance tables 
contrast dataguides indexes index paths start root paths database represented toxin 
instance find paths match publications issue represented chains tables match issue represented table 
way toxin forward backward navigation starting node index 
toxin tree tables 
experiments implemented toxin prototype java ibm parser xml create dom tree xml document 
experiments conducted sun sparcstation running solaris 
index dom kept main memory experiments 
order study tradeoffs number indexing schemes carried series comparative performance experiments 
query processing time performance metric 
query decomposition strategy define stages query evaluation corresponding xpath section 
stage called pre selection stage comprises navigation tree pre filtering section 
second stage called selection stage consists value selection performed filter section 
third stage called post selection stage spans navigation selection stage navigation 
experiments evaluate effect parameters performance query evaluation toxin dataguides dataguides value index 
parameters classified data source specific query specific 
data source specific parameters document size number xml nodes values path complexity degree nesting average value size short long strings 
query specific path constraints queries expressed operators size query answer small large number elements selected filter section small large 
dblp imdb shakespeare works doc doc doc doc doc doc file size mb index generation time sec xml nodes xml values toxin nodes avg 
value size short short short short long long degree nesting high high low low high high table benchmark parameters compare query performance different documents classify queries regards path constraints sizes query answer node selection filter section 
table shows classification criteria 
query type query characteristics ll dblp conference issues issue inproceedings year title movies movie genre drama title shakespeare play act speech speaker mark anthony line ll year title genre drama title speaker mark anthony line ls dblp conference title vldb issues issue inproceedings title shakespeare play title tragedy anthony act speech line ls conference title vldb title title tragedy anthony act line ss dblp conference issues issue inproceedings author serge abiteboul title movies movie year title shakespeare play title tragedy anthony personae persona ss author serge abiteboul title year title title tragedy anthony persona table query classification large query answer large filter selection large query answer large filter selection relaxed constraints large query answer small filter selection large query answer small filter selection relaxed constraints small query answer small filter selection small query answer small filter selection relaxed constraints benchmark consists data sources conference papers dblp database ley sample movies internet movies database imdb shakespeare plays bos religious texts bos 
choice document samples aimed determining impact nesting average value size index performance 
dblp classical example bibliographical database containing deeply nested data 
imdb presents flat structure typical straight forward mapping relational data 
values contained dblp imdb documents short strings 
shakespeare works religious texts hand exponents text databases longer string values dblp imdb 
order save space omitted religious texts results 
dblp imdb explore impact nesting 
study effects different value sizes shakespeare works 
addition test index performance different document sizes similar path structures created xml documents data source larger 
table shows parameters benchmark 
summarizes performance ll ll ss ss queries different index schemas toxin dataguides dataguides value indexes provide detailed report experiments 
toxin outperforms schemes cases order magnitude 
results suggest stage pre selection generally benefits path index scheme 
query types ss shakespeare works shown important performance improvements index stage 
queries performance third stage post selection considerably improved index 
query types large query answers benefit path index third query processing stage 
results conclude index closer root filter section starts better improvement performance third stage worse stage 
dataguides support stage filter section close root dataguide additional structures little improve performance entire query evaluation 
summary performance results selected query types regarding results value index queries small number values selected filter section improvement considerable 
important note tested queries selection stage play important role total performance query evaluation 

toxin indexing scheme supports path queries xml data 
discussed architecture related performance results 
motivation overcome limitations current indexing proposals semistructured data lack support query processing stages dataguides indexes indexes need explicit specification paths index indexes 
combined ideas dataguides access support relations way allows index query evaluation stages general path query 
experimental results suggest query types benefit toxin large query answers 
addition closer root filter section starts wider difference performance toxin indexing schemes 
currently extending ways 
main directions adding order index structure implementing toxin graph extending toxin tree semantics idrefs making index persistent investigating ways extend toxin alternative dom storing querying updating xml documents 
acknowledgments supported natural sciences engineering research council canada bell university laboratories 
abs abiteboul buneman suciu 
data web relations semistructured data xml 
morgan kaufmann 
bbm barbosa mendelzon mihaila rodriguez 
tox toronto xml engine 
proc 
workshop information integration web 

bc ceri 
comparative analysis xml query languages 
sigmod record 
bk bertino kim 
indexing techniques queries nested objects 
ieee transactions knowledge data engineering 
bos jon 
religious texts xml 
www ibiblio org xml examples religion 

bos jon 
complete plays shakespeare xml 
www ibiblio org xml examples shakespeare 

ccm christophides cluet moerkotte 
evaluating queries generalized path expressions 
proc 
acm sigmod int conf 
management data 
fk florescu kossmann 
storing querying xml data rdbms 
ieee data engineering bulletin 
fs fernandez suciu 
optimizing regular path expressions graph schemas 
proc 
ieee int conf 
data engineering pages 
gw goldman widom 
dataguides enabling query formulation optimization semistructured databases 
proc 
int conf 
large databases pages 
imdb internet movie database 
www imdb com 

km kemper moerkotte 
access support relations indexing method object bases 
information systems 
ley michael ley 
dblp database web site 
www informatik uni trier de ley db 

ls suciu 
xmill efficient compressor xml data 
proc 
acm sigmod int conf 
management data pages 
mag mchugh abiteboul goldman quass widom 
lore database management system semistructured data 
sigmod record 
ms milo suciu 
index structures path expressions 
proc 
int conf 
database theory pages 
mw mchugh widom 
query optimization semistructured data 
technical report stanford university 

toxin indexing scheme xml data 
master thesis 
department computer science university toronto 
sb bertino 
graph theoretic approach indexing object oriented databases 
proc 
ieee int conf 
data engineering pages 
bray paoli sperberg mcqueen eve maler eds 
extensible markup language xml second edition 
www org tr rec xml 
recommendation 
document object model dom level specification 
www org tr rec dom level 
recommendation 
xml path language xpath 
www org tr xpath 

