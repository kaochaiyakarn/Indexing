gryphon information flow approach message brokering robert strom banavar tushar chandra marc kaplan miller bodhi mukherjee daniel sturman michael ward ibm tj watson research center saw mill river road hawthorne ny contact mail banavar watson ibm com gryphon distributed computing paradigm message brokering transferring information form streams events information providers information consumers 
outlines major problems message brokering gryphon approach solving 
gryphon flow streams events described information flow graph 
information flow graph specifies selective delivery events transformation events generation derived events function states computed event histories 
gryphon derives integrates best features distributed communications technology database technology 
message brokering motivated need efficient delivery information large number users applications environment characterized heterogeneity computing platforms anonymity information producers consumers dynamic change due system evolution 
single business stock exchange weather forecasting agency dynamically varying number sub applications supplying events varying number consuming events 
suppliers consumers may necessarily aware suppliers may simply supplying information certain type interested consumer consumer may interested subsets information having particular properties 
example stock exchange consumer may interested stock trades greater shares specific market trends stock trades representing drop points previous day high 
growing need glue applications multiple businesses support network commerce result mergers acquisitions 
example retailer may need connect suppliers customers customer various retailers financial organizations 
may require transforming events different sources compatible form merging selecting events 
message brokering extension publish subscribe technology powell 
gryphon approach augments publish subscribe paradigm features content subscription events selected predicates content pre assigned subject categories event transformations convert events projecting applying functions data events event stream interpretation allows sequences events collapsed state expanded back new sequence events reflection allows system management meta events 
gryphon technology includes collection efficient implementations support paradigm provide scalability high throughput low latency 

gryphon model mentioned earlier event processing gryphon described information flow graph 
information flow graph directed acyclic graph constituting abstraction flow events system 
example shown stock trades information sources nyse nasdaq combined transformed filtered delivered client 
sources produce events type price volume merged single stream 
arc labeled transform computes new stream events type capital arc labeled select filters events capital 
gryphon information flow graph abstraction gryphon free physically implement flow way chooses possibly radically altering flow pattern provided consumers see appropriate streams events consistent incoming events transformations specified graph 
gryphon optimizes graphs deploys network brokers servers 
broker network responsible handling client connections distributing events 
nodes graph called information spaces 
information spaces event histories monotonically growing collections events stock trade events form price volume event interpretations states representing interpretations sequences events table 
information space schema defining structure history state contains 
arc information flow graph defines operation derive information space head tail 
arcs types select specifies destination event history contains subset events source event history satisfy predicate event histories schema 
transform specifies event destination event history obtained applying function corresponding event source event history 
merge combines event histories schema single history 
operation implicit multiple arcs lead information space 
interpret converts source event history destination state applying interpretation function history 
time new event arrives interpretation incrementally re evaluated 
expand inversion interpret converts state event history equivalent state function non deterministic function particular interpreting event history may yield identical event history may yield different history yields equivalent state 
system research directions gryphon system consists components efficiently realizing information flow graph large distributed network brokers 
particular current efforts addressing technologies integration event matching determining event subset subscriptions match event 
current algorithm event matching grows sub linearly strom 
multicasting routing events source destinations avoiding unnecessary processing messages brokers long message headers events strom 
existing multicast techniques literature concept groups birman apply content pub sub systems 
graph transformations reordering selects transforms interpretations minimize number events sent network load brokers 
fault tolerance preserving appearance persistent information flow graph presence failures 
addition guaranteeing required clients consistent views information spaces presence failure clients don see information space contains message see information space lost message 
ordered delivery guaranteeing required clients consistent view order events information space 
optimistic delivery client view information space interpretation exploits non determinism equivalent state deliver messages client early order drop messages 
compression client view information space interpretation client disconnects reconnects exploits non determinism equivalent state deliver compressed sequence events captures state 
reconfiguration allows physical broker network dynamically updated extended disturbing logical view persistent information flow graph 
reflection capturing events corresponding requests change information flow graph confirmed changes information flow graph special space 
security dealing issues concerning lack full mutual trust domains physical broker network 

birman birman 
process group approach reliable distributed computing pages communications acm vol 
dec 
powell david powell guest editor 
group communication pages communications acm vol 
april 
strom rob strom daniel sturman marcos aguilera mark 
sub linear matching content publish subscribe system 
ibm research technical report published 
