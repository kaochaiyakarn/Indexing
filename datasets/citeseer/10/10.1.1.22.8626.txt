list decoding algorithms applications madhu sudan may years coding theory complexity theory benefited number mutually enriching connections 
article focuses new connection emerged topics years 
connection centered notion list decoding error correcting codes 
survey describe list decoding problem algorithms developed diverse collection applications complexity theory 
areas coding theory complexity theory long sustained history interesting connections 
early computation presence noise built connections 
successes complexity theory showing ip pspace giving pcp characterizations np relied connections coding theory implicitly explicitly 
survey article feigenbaum gives detailed account connections consequences 
years new strain connections emerged coding theory complexity theory 
connections different previous ones rely especially qualitative strength decoding algorithms particular ability recover large amounts noise 
vein goldreich levin describes implicitly error correcting code gives highly efficient algorithm decode code slightest non trivial amount information 
algorithm give generic construction hard core predicates arbitrary way function 
subsequently number results providing powerful decoding survey fuller version previous author appeared sigact news volume number pp 
march 
department electrical engineering computer science massachusetts institute technology technology square cambridge ma 
madhu mit edu 
supported part sloan foundation fellowship nsf career award ccr 
algorithms deriving applications algorithms complexity theory 
main theme common works application new notion decoding error correcting codes called list decoding 
list decoding formalizes notion error correction number errors potentially large 
borrowing terminology area information communication recall transmit information noisy channel transmitter transmits codeword error correcting code 
transmitted word corrupted noisy channel receiver gets corrupted word call received word 
number errors occur transmission large received word may closer codeword transmitted 
mandate list decoding receiver required compile list codewords reasonable sized hamming ball received word just nearest 
list decoding declared successful list includes transmitted word 
notion list decoding proposed elias 
till non trivial list decoding algorithms known error correcting code 
late seen spurt efficient list decoding algorithms equally interestingly diverse collection applications list decoders complexity theoretic problems 
survey describe results 
start definitions 
error correcting codes list decoding block error correcting code collection strings called codewords length finite alphabet sigma 
basic parameters describing code size alphabet denoted length codewords information parameter number codewords code succinctly referred code sigma field structure imposed sigma may viewed vector space 
additionally forms linear subspace sigma termed linear code denoted code codes dealt article linear codes 
order ensure code helps recovery errors designs codes codewords differ large number locations 
formally hamming distance strings sigma denoted delta number coordinates differ 
distance code typically denoted minimum pairs non identical codewords distance pair 
triviality rule brute force search algorithms unique decoding algorithms 
literature referred code second parameter counts number messages opposed say length message 
note subtle change notation 
observations code distance unambiguously correct gamma errors word sigma exists codeword delta gamma easy find word exist codewords distance improve error bound unambiguous decoding 
realized early unambiguous decoding useful notion recovery error 
elias proposed notion list decoding decoding algorithm expected output list codewords distance received word sigma list words output relatively small consider reasonable recovery error 
algorithmically problem stated follows definition list decoding problem code input received word sigma error bound output list codewords differ places 
usual goal solve list decoding problem efficiently time polynomial possible output size polynomially bounded motivates purely combinatorial question 
definition list decoding problem combinatorial version determine function code distance received word sigma qn codewords hamming ball radius study asymptotic growth say fix ratio 
sense study limit 
turns fairly understood described section 
somewhat coincidentally variety codes list decoding problem solved polynomial time provided 
gamma delta results described section 
concluding section version algorithmic list decoding problem studied literature 
version motivated question sub linear time list decoding algorithms error correcting code 
glance linear time appears lower bound running time amount time takes read input time output codeword 
specifying input implicitly allowing output specified implicitly longer subject trivial lower bounds computation time 
notion implicit representation input formalized oracle represent input queried index oracle responds ith bit received word 
notion implicit representation output somewhat involved 
roughly element output list described succinctly efficient program computes coordinate codeword 
programs allowed randomized furthermore allowed oracle calls implicit input attempting compute coordinate output 
notion implicit representation output codeword formalized concept probabilistic oracle machines machines allowed oracle calls received word 
formalism list decoding problem may rephrased definition list decoding problem implicit version implicit input oracle access received word ng sigma error bound output list codewords represented implicitly probabilistic oracle machines mm working oracle access differ places 
mg ng satisfies property pr implicit representations common useful theory computation works program testing 
allow modular algorithmic ideas results expressed terms deserve attention 
turns list decoding problem highly efficient solutions exist model codes essentially time polynomial log efficiency translates useful applications complexity described forthcoming sections 
status combinatorial problem sketch status combinatorial problem described 
easily seen gamma unambiguous radius 
parameters code distance exist possible get received word exponential codewords distance 
informally suggests formal go infinity go infinity 
reasonable believe may form ffd ff universal constant possibly function unfortunately answer simple turns function surprisingly dependent roughly large gamma gamma 
task performing sanity check expression verify gamma gamma takes moments 
insight expression gamma gamma approximated 
large gamma bound gamma approximated conclude case list decoding radius limited half distance barrier case limited 
theorem essentially refines expression take account small values recall plotkin bound coding theory shows error correcting codes gamma delta polynomially codewords interesting 
sense compare fractions theorem statement replaces occurrences expression gamma delta theorem 
satisfy gamma gamma delta gamma delta code received word qn codewords hamming distance 
ffl ffl ffl delta gamma gamma delta gamma delta exists non linear code distance received word exponentially codewords exponent growing ffln hamming distance note theorem appears explicitly 
crucial direction part ary extension johnson bound coding theory 
johnson proves bound binary case extension ary case implicitly known coding theory community chapter page 
proof sketch 
proof guruswami sudan 
fix ary alphabet sigma received word sigma codewords hamming distance denote average distance averaged note main steps proof associate sigma orthonormal vectors dimensional real space 
loss generality coordinate vectors 
association embed vectors qn 
pick mg random replacement consider expectation inner product hc gamma gamma ri 
close close inner product small expectation 
specifically expected value gamma hand vectors gamma small non zero average locations non negative inner product coordinate 
elementary manipulation involved studying location non zero coordinates signs application cauchy schwartz inequality shows expected inner product qe gamma yields inequality qe gamma gamma turn yields bound part theorem 

goldreich zeroes vector 
pick independently follows coordinate chosen randomly independently probability gamma chosen random non zero element sigma 
probability exists pair distance easily bounded exp 
possible pick exponentially codewords mutually distance high probability distance received vector 
theorem yields asymptotically tight result study asymptotic limit minimize parameters 
notice play role part theorem 
delta denote minimum 
fix ffi delta gamma delta function ffl ffi lim delta ffi gamma gamma ffl ffi lim ffl theorem summarized corollary ffi ffl ffl ffi gamma gamma ffi section describe algorithmic results come close matching combinatorial results 
specific codes performance list decoding algorithms start introducing reader list commonly commonly error correcting codes 
codes assumed prime power sigma finite field elements 
hadamard codes 
hadamard code code distance gamma obtained follows message dimensional vector sigma denoted ff 
codeword indexed space dimensional vectors 
fi th symbol encoding ff inner product ff delta fi 
generalized reed solomon codes 
message thought specifying polynomial degree gamma giving coefficients 
encoding evaluates polynomial distinct points finite field 
follows 
fact distinct degree gamma polynomials may agree gamma points yields distance gamma 
fact exist distinct degree gamma polynomials agree subset gamma places shows distance exactly gamma 
reed muller codes 
reed muller codes may viewed common generalization reed solomon codes hadamard codes 
parameters reed muller code gamma delta message viewed specifying polynomial total degree variables 
encoding gives evaluation polynomial possible input 
codewords distance gamma 
algebraic geometric codes 
codes generalizations generalized reed solomon codes 
description construction codes scope 
say yield codes distance gamma gamma gamma square 
contrast random linear code dimension distance approximately gamma gamma log algebraic geometric codes asymptotically beat distance achieved random code provided large 
concatenated codes 
term refers code obtained certain process called concatenation codes derives new code codes 
specifically outer code ary alphabet inner code dimension ary alphabet concatenated codeword corresponding message obtained encoding message outer code encoding symbol resulting string inner code 
outer code code inner code code concatenated code code 
distance outer code distance inner code concatenated code minimum distance section consider codes obtained concatenating reed solomon reed muller algebraic geometry code outer code hadamard code inner code 
chinese remainder codes 
codes aberration class codes consider defined single alphabet 
th symbol alphabet size pn distinct primes arranged increasing order 
messages code integers gamma encoding message tuple residues modulo pn coding theory literature code referred redundant residue number system code 
easy consequence chinese remainder theorem message inferred residues making code distance gamma 
pn may view code approximately code 
list decoding results explicit version families codes possible get algorithms perform polynomial time number errors large bound theorem 
theorem lists family results 
theorem code designed distance ffi gamma hadamard code reed solomon code algebraic geometric code reed solomon algebraic geometry code concatenated hadamard code chinese remainder code polynomial time list decoding algorithm decodes 
gamma gamma ffi errors 
proofs results scope 
simply give pointers 
remarks 
note result hadamard codes trivial code codewords 
brute force search algorithm lists codewords evaluates distance received word prune list runs time 

algorithm list decoding reed solomon codes gamma gamma sudan earlier ar lipton rubinfeld sudan 
case explicit list decoding problem non trivial list decoder constructed code 
tight result guruswami sudan 

list decoder algebraic geometry codes shokrollahi wasserman 
error bound matched 
tight result 

easy combine non trivial list decoders outer code inner code get non trivial list decoding concatenated code 
results obtain tight result described 
tight result due guruswami sudan 

list decoder correcting gamma kn log pn log errors chinese remainder codes goldreich ron sudan 
boneh improved bound correct gamma kn log pn log errors 
guruswami sahai sudan improve correct gamma nk errors 
list decoding results implicit version implicit list decoding problem fairly strong results known cases hadamard codes reed muller codes consequently concatenated codes 
describe results theorems 
case cases algebraic geometry codes algebraic geometry codes concatenated hadamard code code designed distance may turn larger minimum distance 
typical decoding algorithms unable exploit extra bonus designed distance code fact may short proof fact code larger minimum distance 
explains term designed distance code 
binary hadamard codes goldreich levin gave list decoding algorithm received word specified implicitly 
consider case number errors arbitrarily close limit theorem particular takes form gamma fl give randomized algorithm running time poly log fl reconstructs explicitly list messages note message lengths log hadamard code come error received word 
subsequently algorithm generalized general ary hadamard codes goldreich rubinfeld sudan 
yields theorem 
theorem exists probabilistic list decoding algorithm implicit input model hadamard codes behaves follows code oracle access received word algorithm outputs list includes messages lie distance received word 
running time algorithm polynomial log log gamma gamma case reed muller equally strong list decoding results known output representation implicit 
arora sudan provided list decoder provided error bound satisfies gamma gamma ffl positive ffl 
sudan trevisan improved bound tighter bound 
gamma gamma yielding theorem 
theorem exists probabilistic list decoding algorithm implicit input implicit output model reed muller codes behaves follows gamma delta reed muller code oracle access received word algorithm outputs list randomized oracle programs includes program codeword lies distance received word provided 
gamma running time algorithm polynomial log pointed earlier 
easy combine list decoding algorithms outer inner codes get list decoding algorithm concatenated code 
concatenating reed muller code appropriately chosen hadamard code obtains result turns handy result applications 
fact results section theorem 
theorem ffl poly ffl exists code polynomial time list decoding algorithm errors gamma gammaffl furthermore algorithm runs time polynomial log ffl input output specified implicitly 
result specialized described explicitly 
general codes list decoding algorithm inferred proof 
applications complexity theory algorithms list decoding played central role variety results complexity theory 
enumerate 

predicates way permutations 
classical question lying foundations cryptography task extracting hard boolean function predicate hard way function 
specifically function easy compute hard invert obtain predicate hard predict 
blum micali showed possible extract hard predicate discrete log function construct pseudorandom generators 
natural question raised ability extract hard predicates special discrete log function hard predicate extracted way function glance impossible 
fact predicate possible construct way functions immediately gives 
limitation inherited deterministic nature goldreich levin modify setting allow predicate randomized 
specifically allow predicate function auxiliary random string considered hard predict accuracy better ffl 
function said predictable accuracy ff output polynomial sized circuit agrees ff fraction inputs 
show minor modification problem statement suffices construct predicates way function 
parameter interest construction predicates length auxiliary random string 
denote parameter 
initial construction list decoding algorithm hadamard code sets impagliazzo gives substantial improvement parameter achieving log log ffi list decoders reed solomon hadamard codes 
turns constructions described special case generic construction list decodable codes 
construction goes follows binary code theorem ffl set poly ffi 
predicate rth bit encoding hard required 
proof follows modularly list property specifically prediction circuit agrees delta ffl fraction values ng list decoder come small list candidates includes knowledge tells find element list hardness inverting yields circuit predict delta high accuracy 
see effectiveness theorem note extra input length log theorem log log ffi 
aside recall early results blum micali chor goldreich schnorr gave predicates specific way functions discrete log rsa extra randomness 
interesting see specific results explained terms list decoding 
predicting witnesses np search problems 
consider np complete relation sat 
kumar sivakumar earlier gal halevi lipton petrank raise question possible efficiently construct string non trivial proximity witness instance 
general relations np show string distance ffl np show result list decoding algorithms reed solomon hadamard codes 
result explained easily theorem follows construct np relation instances say instances satisfiability witnesses encodings code obtained theorem satisfying assignments 
string close proximity valid witness recover small set strings includes witness 
amplifying hardness boolean functions 
success stories complexity theory area finding complexity theoretic assumptions suffice bpp 
central result direction impagliazzo wigderson show strong form assumption subexponential sized circuits implies bpp important question raised line research amplification hardness boolean functions 
specifically boolean function transform boolean function small circuit computes small circuit computes ffl fraction inputs 
give transformation goes sequence transformations babai fortnow nisan wigderson impagliazzo new original 
step modularly achieved error correcting codes efficiently list decodable implicit input output model follows sudan trevisan think bit string encode string error correcting code 
say encoded string bit string 
function thought truth table function 
follows list properties error correcting code highly unpredictable 
specifically suppose circuit predicting implicit representation received word close list decoding implicit output model yields small circuit computing small circuit encoding 
strength transformation efficiency 
example impagliazzo wigderson note construction significantly efficient parameters aspect bpp 
direct product np complete languages 
sat characteristic function satisfiability language 
sat oe oe satisfiable formula 
sat wise direct product sat function 
takes input formulae oe oe outputs bit vector sat oe sat oe 
clearly sat hard compute sat 
presumably harder 
fact sat hard compute gamma ffi fraction instances chosen distribution sat hard compute probability gamma ffi product distribution 
unfortunately np complete problem known np hard inputs chosen random 
face lack knowledge say sat topic studied complexity theory literature label membership comparability 
sivakumar gives nice hardness problem 
shows possible efficiently compute amount information sat log np rp 
specifically polynomial time algorithm input instance oe sat rules string value sat oe decide satisfiability 
sivakumar uses list properties reed solomon codes version sauer lemma 
simplifying proof slightly possible get direct consequence theorem applied ffl gamma sauer lemma see 
permanent random matrices 
striking result lipton showed possible fact permanent low degree polynomial conclude 
easy compute permanent theta matrix modulo prime high probability matrix chosen random easy compute permanent theta matrix modulo results establish average case hardness computationally hard problem result laid seed series interesting results complexity theory including ip pspace pcp characterizations np 
subsequent results strengthened average case hardness permanent point suffices algorithm computes permanent modulo inverse polynomially small fraction matrices shown cai sivakumar 
result uses list decoding algorithm reed solomon codes 
independently goldreich ron sudan strengthened result different direction 
show suffices algorithm computes permanent correctly inverse polynomial probability matrix prime chosen random 
result uses list decoding algorithm reed solomon codes chinese remainder code 
turns techniques extend problem giving alternate proof list decoder chinese remainder code uses list decoder reed solomon code 
sample algorithms attempt briefly sketch algorithmic ideas needed get say theorem covering applications section 
get result need list decoder reed solomon codes reed muller codes glue patch details 
reader warned section highly sketchy details skimmed explicit notice 
decoding reed solomon codes say reed solomon code obtained degree gamma polynomials evaluating points xn sigma sigma field elements 
note list decoding problem turns problem pairs xn find degree gamma polynomials gamma values describe algorithm case gamma algorithm works steps 
find non zero bivariate polynomial degree 
factor irreducible factors 
irreducible factor form gamma check gamma value output 
note steps implemented efficiently 
step amounts solving homogeneous linear system find non trivial solution solved efficiently 
second step implementable efficiently consequence efficient factorization algorithms multivariate polynomials lenstra see survey article pointers 
verify correctness need verify step return polynomial true coefficients homogeneous linear system variables constraints non trivial solution 
degree gamma polynomial ng set cardinality gamma claim gamma jq 
prove division algorithm unique factorization domains says case iff 
see note 
polynomial degree zero points 
identically zero required 
gamma divide included output list 
implicit decoding reed muller codes describe solution case error relatively small small guarantee unique solutions 
say access received word oracle mapping sigma sigma 
say polynomial degree agrees gamma places 
wish design randomized oracle program computes suppose wish compute sigma pick sigma random consider line fl gamma jj sigmag 
note restricted line function pj univariate polynomial degree value interested pj 
crucial observation fixed random point sigma equal pj 
applying univariate polynomial reconstruction algorithm list decoding algorithm reed solomon codes points sigmag random choice yield polynomial pj evaluating yields 
summarizing randomized oracle program call implicitly describes works follows picks sigma random sets gamma jj sigmag 
uses univariate reconstruction algorithm compute explicitly polynomial pj delta 
outputs pj 
attempting extend algorithm higher error main problem faced lack information fact implicitly specified oracle fact degree polynomial 
large polynomials may agree gamma places polynomial specified uniquely 
words polynomials agree gamma places easy extend algorithm outputs small set includes values fp hard create oracle say things clear distinguishes polynomials list 
create distinction need additional information say knew value point oe 
may modify algorithm previous paragraph get new call oe follows set gamma jg 
univariate reconstruction algorithm compute list univariate polynomials agree approximately gamma fraction points line 
exists polynomial list oe output 
shown high probability choice correctly computes choices part requires analysis skip see 
combining self corrector paragraph get probabilistic oracle machine running time poly bother may simply guess running possible choices better methods give shorter list candidates 
may easily verified running time decoder polynomial 
careful settings running time polylogarithmic decoding concatenated codes easy guess simple strategy list decoding concatenated codes list decoding algorithms outer inner code 
describe natural algorithm giving proofs 
proofs worked exercise 
decoding algorithm concatenation outer code inner code may follows ary string length list decode strings length corresponding inner code 
case pick random element list create ary string length corresponding outer code 
list decode string 
repeat necessary 
see ideas suffice yield theorem take code concatenation outer reed muller code inner hadamard code careful choice code parameters 
list decoder reed muller code described 
purposes brute force list decoder hadamard codes suffice inner level 
choosing appropriate thresholds list decoding inner code relatively straightforward analysis yields theorem 
concluding thoughts seen applications algorithms list decoding 
notion list decoding mind algorithmic results important complexity theory 
beautiful result trevisan gives strong evidence role theme play central questions complexity extremal combinatorics 
may missed development trevisan showed construct strong family extractors combining binary codes combinatorial list decoding properties pseudo random generator nisan wigderson 
construction successors see raz reingold impagliazzo wigderson reach optimal characteristics various choices parameters 
hope applications list decoding continue emerge notion popular 
conclude open questions relating combinatorial list decoding performance error correcting codes 
combinatorial question relating list decoding posed survey chosen carefully allow tight presentation results theorem corollary 
interesting study list decoding characteristics specific codes know little part theorem applies course part irrelevant specific codes 
example ta zuckerman shown random non linear code polynomially codes ball radius close minimum distance code 
existence codes list decoding properties raises question codes exist small description size constructed decoded efficiently 
ask questions classes codes described 
example largest error reed solomon code hamming ball radius received word poly codewords 
best known bound part theorem 
fact question remains interesting ffl lin ffi defined analogously ffl ffi restricted linear codes 
know gamma gamma ffi ffl lin ffi ffi know little point 
progress guruswami hastad sudan zuckerman shown analogous quantity ffl lin ffi strictly smaller ffi choice ffi difference proof vanishes 
number questions relating combinatorics list decoding problem remain open 
depending answers number algorithmic challenges open 
area exploration 
word warning 
survey reflection author current state knowledge lack thereof 
state knowledge improves survey hopefully get updates updated copy available author website theory lcs mit edu madhu 
acknowledgments oded goldreich venkatesan guruswami johan hastad luca trevisan david zuckerman sharing thoughts ideas topic list decoding 
werner benny chor oded goldreich claus schnorr 
rsa rabin functions certain parts hard 
siam journal computing april 
sigal ar richard lipton rubinfeld madhu sudan 
reconstructing algebraic functions erroneous data 
siam journal computing april 
sanjeev arora madhu sudan 
improved low degree testing applications 
proceedings ninth annual acm symposium theory computing pages el paso texas may 
babai lance fortnow noam nisan avi wigderson 
bpp subexponential time simulations exptime proofs 
computational complexity 
donald beaver joan feigenbaum 
hiding instances queries 
th annual symposium theoretical aspects computer science volume lecture notes computer science pages france february 
springer 
manuel blum silvio micali 
generate cryptographically strong sequences pseudo random bits 
siam journal computing november 
dan boneh 
finding smooth integers short intervals crt decoding 
appear proceedings second annual acm symposium theory computing portland oregon may 
jin yi cai sivakumar 
hardness permanent 
th international symposium theoretical aspects computer science lecture notes computer science trier germany march 
springer verlag 
peter elias 
list decoding noisy channels 
ire convention record pt 
pages 
joan feigenbaum 
coding theory computational complexity 
proceedings symposia applied mathematics calderbank ed american mathematics society providence pages 
anna gal shai halevi richard lipton erez petrank 
computing partial solutions proceedings fourteenth annual ieee conference computational complexity atlanta georgia may 
oded goldreich leonid levin 
hard core predicate way functions 
proceedings annual acm symposium theory computing pages seattle washington may 
oded goldreich rubinfeld madhu sudan 
learning polynomials queries highly noisy case 
technical report tr electronic colloquium computational complexity 
preliminary version focs 
oded goldreich dana ron madhu sudan 
chinese errors 
proceedings annual acm symposium theory computing pages atlanta georgia may 
venkatesan guruswami johan hastad madhu sudan david zuckerman 
manuscript january 
venkatesan guruswami amit sahai madhu sudan 
manuscript january 
venkatesan guruswami madhu sudan 
improved decoding algebraic geometric codes 
ieee transactions information theory september 
venkatesan guruswami madhu sudan low rate codes high error correction capabilities 
appear proceedings second annual acm symposium theory computing portland oregon may 
russell impagliazzo 
personal communication july 
russell impagliazzo 
hard core distributions somewhat hard problems 
th annual symposium foundations computer science pages milwaukee wisconsin october 
ieee 
russell impagliazzo ronen avi wigderson 
near optimal conversion hardness pseudo randomness 
proceedings annual ieee symposium foundations computer science new york city new york october 
appear 
russell impagliazzo avi wigderson 
bpp requires exponential circuits xor lemma 
proceedings ninth annual acm symposium theory computing pages el paso texas may 
erich 
polynomial factorization 
simon editor proc 
latin volume lect 
notes comput 
sci pages heidelberg germany 
springer verlag 
ravi kumar sivakumar 
proofs codes polynomial time 
proceedings fourteenth annual ieee conference computational complexity atlanta georgia may 
richard lipton 
new directions testing 
proceedings dimacs workshop distributed computing cryptography 
noam nisan avi wigderson 
hardness vs randomness 
journal computer system sciences october 
vera cary huffman richard eds 
handbook coding theory north holland 
ran raz omer reingold 
extracting randomness reducing error trevisan extractors 
proceedings st annual acm symposium theory computing atlanta ga may 
amin shokrollahi hal wasserman 
list decoding codes ieee transactions information theory march 
sivakumar 
membership comparable sets 
journal computer system sciences october 
madhu sudan 
decoding reed solomon codes bound 
journal complexity march 
madhu sudan luca trevisan 
pseudorandom generators xor lemma extended 
proceedings annual acm symposium theory computing pages atlanta georgia may 
amnon ta david zuckerman 
personal communication november 
luca trevisan 
construction extractors pseudorandom generators 
proceedings annual acm symposium theory computing atlanta georgia may 
