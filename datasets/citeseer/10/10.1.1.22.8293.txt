tbox abox reasoning expressive description logics giuseppe de giacomo dipartimento di informatica sistemistica universit di roma la sapienza salaria roma italy dis uniroma maurizio lenzerini dipartimento di informatica sistemistica universit di roma la sapienza salaria roma italy lenzerini dis uniroma description logic dl system characterized fundamental aspects set constructs concept role expressions kind assertions allowed tbox assertions concepts abox assertions individuals inference mechanisms reasoning tbox abox 
research done decade simplifying assumptions aspects 
interest dls exhibited application areas databases software engineering intelligent access network planning calls investigating dl systems full capabilities 
represents step direction 
sound complete terminating worst case exptime inference procedure solves problem reasoning dl system characteristics comes equipped expressive language allows general form tbox assertions takes account instance assertions concepts roles abox 
research knowledge representation paid attention languages representation classes relationships 
description logics dls studied decade formalization languages see woods schmolze donini lenzerini nardi schaerf borgida patel schneider baader hollunder nebel franconi 
allow represent domain interest terms concepts roles concepts model classes individuals roles model relationships classes 
starting atomic concepts atomic roles simply described name complex concepts roles denoted expressions built suitable constructs 
concepts roles tarskian semantics terms sets binary relations respectively 
knowledge base expressed dl constituted components traditionally called tbox abox 
tbox stores set universally quantified assertions inclusion assertions stating general properties concepts roles 
example assertion kind stating concept represents specialization concept 
abox comprises assertions individual objects instance assertions 
typical assertion abox stating individual instance certain concept 
reasoning tasks carried knowledge base kind 
simplest form reasoning involves computing subsumption relation concept expressions verifying expression denotes subset objects denoted expression 
complex reasoning task consists checking certain assertion inclusion instance assertion logically implied knowledge base 
dl system characterized aspects 
set constructs constituting language building concepts roles mentioned tbox abox 

kind assertions may appear tbox 

kind assertions may appear abox 

inference mechanisms provided reasoning knowledge bases expressible system 
follows expressive power deduction capabilities dl system depends various choices assumptions system adopts regard aspects 
fourth aspect concentrate inference mechanisms sound complete respect standard semantics choices possible see patel schneider 
basic research computational complexity dls carried simplified context tbox abox empty see donini lenzerini nardi nutt nebel 
surprising works aimed studying language constructs isolation goal impact complexity subsumption concept expressions 
papers dealt logical implication abox assertions simplifying assumption empty tbox goal studying various language constructs influence reasoning individuals see donini lenzerini nardi schaerf schaerf 
strong interest problem reasoning tbox assertions isolation see de giacomo lenzerini calvanese de giacomo lenzerini nebel baader schild 
important outcome line research limiting expressive power language goal gaining tractability useless setting power tbox assertions limitations cycles tbox imposed generally leads high complexity inference mechanisms 
reason investigations refer powerful languages expressing concepts roles 
complete setting subject investigations 
example buchheit donini schaerf dl system tbox abox studied relatively powerful language including inverse roles results reasoning knowledge bases tbox abox rare 
observe results important light renewed interest dls find disparate application areas 
dl systems advocated suitable knowledge representation systems contexts information systems catarci lenzerini databases borgida bergamaschi sheth navathe software engineering brachman selfridge ballard intelligent access network levy rajaraman ordille blanco illarramendi action representation franconi planning litman 
papers point capabilities dl system expressive language tbox abox assertions required corresponding application fields see doyle patil 
represents fundamental step direction 
sound complete terminating inference procedure solves problem reasoning dl system characteristics 
comes equipped expressive language comprising classical concept forming constructs plus role forming constructs including inverse roles general form number restrictions 

allows general form tbox assertions limitations presence cycles 

allows expressing instance assertions concepts roles abox 
important contributions summarized follows ffl decidability result dl system combining inverse roles number restrictions tbox abox assertions simultaneously 
ffl technique reasoning abox assertions dl system enjoy finite model property knowledge base system may models infinite domains 
ffl technique optimal respect complexity class inference problem exptime computational complexity worst case procedure reasoning tbox expressed basic language alc schmidt schau smolka 
organized follows 
section dl language interested called ciq 
section illustrate various features ciq means examples 
section briefly discuss correspondence dls propositional dynamic logics base results reasoning procedures ciq 
section introduce technical notions needed get results 
section describe technique computing logical implication knowledge bases built ciq 
section draw 
ciq syntax semantics focus description logic ciq studied de giacomo lenzerini de giacomo 
available constructs concept role expressions ciq specified 
note ciq expressive language comprising usual concept constructs including general form number restrictions called qualified number restrictions rich set role constructs union roles chaining roles ffi reflexive transitive closure roles inverse roles gamma identity role id projected called test 
semantics ciq interprets concepts subsets domain roles binary relations domain 
formally interpretation delta delta consists domain interpretation delta interpretation function delta mapping atomic concept subset delta atomic role subset delta theta delta interpretation function systematically extended complex concepts roles semantics constructs 
denotes cardinality set stands repetitions id ffi gamma ciq knowledge base constituted components tbox abox tbox finite set inclusion assertions form concepts 
abbreviation abox finite set instance assertions form ff concept ff individual name form ff ff primitive role ff ff individuals names 
interpretation maps individual names individuals delta way different individual names denote different individuals 
distinction individuals names 
interpretation model inclusion assertion interpretation model instance assertion ff ff model ff ff ff ff interpretation model knowledge base model inclusion instance assertion satisfiable model 
logically implies inclusion instance assertion oe written oe oe satisfied model concept satisfiable model 
observe satisfiability concept knowledge base reformulated terms logical implication terms satisfiability knowledge base satisfiability fc ff new ff new individual mentioned examples shows ciq knowledge base concerning directories files 
tbox assertions 
inclusion assertion states dir child instance directory directory file exactly dir child gamma predecessor 
words fragment dir child starting instance directory structure similar tree cycles prevented 
second inclusion assertion states instances file children distinct instances directory 
third assertion states instances directories dir child predecessor 
forth assertion states instance reaches instance finite number steps chain dir child gamma seen constraint assertion prevents cycles appear dir child chains involving instances 
abox thought divided parts 
part instance assertions concerning individuals dir child relationships 
expresses children turn child cycle involving 
second part concerns individuals construct name syntax semantics atomic concept delta top delta bottom conjunction disjunction negation delta gamma existential quantification fs universal quantification fs implies qualified number nq fs fs ng restrictions nq fs fs ng atomic role delta theta delta union chaining ffi ffi reflexive transitive closure test id inverse gamma basic role gamma syntax semantics ciq concept role constructs 
tbox abox directory dir child directory file dir child gamma file dir child 
directory directory dir child gamma 
dir child gamma dir child dir child dir child dir child research dir child teaching dir child research ciq tex ciq tex file ciq tex example directories files 
teaching research ciq tex expresses teaching research children ciq tex child research 
ciq tex file 
inference directory file prove logical implication 
fourth assertion tbox instance reaches instance finite indeterminate number dir child gamma steps 
proceed induction instance instance directory 
immediate dir child predecessor chain 
induction hypothesis directory file 
dir child successor directory children including directory file 
minimal modification proof applies logical implication dir child gamma directory knowledge base logically implies ff ff prove logical implication may reason follows 
observe instance immediate dir child predecessor 
example ff suppose instance 
fourth assertion tbox connected finite chain dir child gamma instance 
saw fact instance implies dir child predecessors instances directory 
follows assertion tbox individuals dir child immediate predecessor dir child predecessors instance contradiction 
conclude instances 
similar reasoning prove fi teaching research fi research instances directory teaching instance directory instance file 
addition prove consistent instance logically implied 
observe proofs induction essential 
automatic reasoning procedure ciq include implicitly explicitly form induction 
need induction comes shown examples presence reflexive transitive closure roles allows specification properties objects distant finite indeterminate number steps away chain roles 
ability non order nature logic 
ciq subset order logic fixpoints see de giacomo lenzerini pure order logic description logics 
note knowledge base described enjoys finite model property 
easy build ciq knowledge base infinite models 
example consider knowledge base tbox succ 
succ gamma 
succ abox succ gamma init assertion constrains role succ inverse functional 
second assertion constrains instances immediate successor instance necessarily immediate successor infinite chain successors 
instance assertion states individual init instance predecessor 
init predecessor successor infinite chain successor 
models knowledge base infinite 
observe existence knowledge bases admit infinite models reasoning methods direct search construction model tableaux method donini infeasible ciq 
reasoning procedure ciq construction model may construct finite structure represents model pseudo model sense contains information principle expanded model 
correspondence sections describe procedure reasoning ciq knowledge bases 
procedure inference technique authors developed description logic ciq mainly correspondence dls propositional dynamic logics schild de giacomo lenzerini de giacomo 
modal logics developed specify reason program schemas terms states state transitions caused running program fischer ladner kozen tiuryn 
correspondence dls due substantial similarity interpretation structure kinds logics individuals dls correspond states links individuals correspond state transitions concepts correspond formulae roles correspond programs 
fact constructs dls counterpart known shown 
schild correspondence new results dls obtained known results 
particular decision procedures converse pdl reasoning procedures dls include inverse tboxes devised 
notably qualified number restrictions aboxes counterpart 
form number restrictions known assuming atomic programs dls atomic concept atomic proposition top true tt bottom false ff conjunction conjunction oe oe disjunction disjunction oe oe negation negation oe existential quantification diamond runs 
oe universal quantification box runs 
oe qualified number restrictions nq nq deterministic assumption deterministic atomic programs atomic role atomic program union choice chaining ffi sequence reflexive transitive closure reflexive transitive closure test id test oe 
inverse gamma converse gamma basic role inclusion assertions axioms valid formulae oe instance assertions ff ff ff correspondence dls 
inverse deterministic getting call deterministic 
aside deterministic include converse operator finite model property reasoning procedures developed logics construction automata infinite trees 
aboxes roughly correspond partial specification actual evaluation program 
kind specification studied 
research de giacomo lenzerini de giacomo tackled aspects 
de giacomo lenzerini cif ciq number restrictions limited unqualified functional restrictions atomic roles inverse established 
de giacomo lenzerini de giacomo result extended ciq 
reasoning procedures developed works construct automata infinite trees polynomial encoding ciq tbox cif tbox turn encoded ci concept corresponding converse pdl formula 
observe ciq ci go logic finite model property logic 
aboxes best known results reasoning knowledge bases constituted tbox abox exptime reasoning procedures de giacomo lenzerini de giacomo ci cq logic ciq disallowing inverse roles respectively 
notice logics finite model property 
ciq qualified number restrictions allowed basic roles atomic roles inverse 
choice due fact allowing generic role appear qualified number restriction logic undecidable 
suffices observe unqualified functional restriction 
fact form role value map leads undecidability see schmidt schau 
technical preliminaries assume loss generality expressed means inverse role operator applied atomic roles fisher ladner closure fischer ladner ciq concept denoted cl defined observation originally due franz baader 
recall equations hold ffi gamma gamma ffi gamma gamma gamma gamma gamma gamma id gamma id 
inductively smallest set concepts containing implies implies implies nq implies implies ffi implies implies implies id implies intuitively cl analogous set subconcepts simpler logics comprises concepts play direct role establishing interpretation size cl linearly bounded size cf 
fischer ladner 
definition cl cl cl 
extend notion closure knowledge base simply union fisher ladner closures concepts appearing knowledge base 
denote empty sequence roles role define role call pre post sets roles defined inductively follows gamma pre qg pre ffi fr ffi pre pre pre pre pre pre fr ffi pre pre id id post qg post ffi fr ffi post post post post post post fr ffi post post id id roughly speaking pre post sets formed roles prefix postfix role respectively 
size pre post polynomial size roles post properties easily proven see de giacomo ffl concept 
roles post cl 
ffl concept 
roles post ffi ffi formula cl equivalent path interpretation sequence elements delta gamma gamma length intuitively path describes sequence individuals met role inverse role interpretation 
inductively define set paths paths role interpretation follows gamma paths paths paths paths paths ffi paths paths paths delta paths paths id say path satisfies concept form say path satisfies concept form delta delta delta form paths ffi delta delta delta ffi propositions describe basic properties paths proven induction structure role see de giacomo 
proposition interpretation concept paths exists concept id ffi ffi id ffl tests id occur cl ffl id ffi ffi id ffl id ffi ffi id valid 
proposition structure formula paths exists formula id ffi ffi id ffi ffl tests id occur cl ffl post equivalent cl ffl ffl ffl paths ffl id ffi ffiq valid 
reasoning ciq knowledge bases section illustrate technique reasoning ciq knowledge bases 
basic idea underlying method follows checking satisfiability ciq knowledge base polynomially reduced checking satisfiability ciq knowledge base abox single instance assertion ff 
words satisfiability reduced satisfiability concept wrt tbox resulting knowledge base 
reasoning service realized means method de giacomo lenzerini de giacomo known exptime complete 
means reduction get exptime algorithm satisfiability ciq knowledge base reasoning services ciq knowledge bases 
definition ciq knowledge base 
call reduced form ciq knowledge base defined follows new atomic concept introduced individual ff 
occurring 
ffl create create am new individual create new atomic role ffl formed aux inclusion assertion instance assertion ff inclusion assertions gamma gamma instance assertion ff ff inclusion assertion individual ff occurring aux inclusion assertion stands pn gamma gamma pn atomic roles occurring 
cl 
cl 
ffi pre gamma occurring cl defined inductively follows gamma ffi id ffi ffi id id 
lemma ciq knowledge base reduced form 
size polynomial respect size comment reduced form relates original knowledge base 
observe abox force existence individual connected role create instance shown allows restrict attention models represent graphs connected models delta delta delta fgg fs create ffi gamma tbox consists parts aux original inclusion assertions plus may call naive encoding original abox inclusion assertions form individual ff represented new atomic concept disjoint instance assertions original abox represented inclusion assertions involving new atomic concepts 
suffice represent faithfully wrt reasoning services interested original knowledge base individual ff represented set instances order relate satisfiability satisfiability able single instance representative ff purpose need add new part called aux roughly speaking aux contains inclusion assertions form say instance instance new instance instance observe add infinite set assertions form possible concept language kind axiom schema safely restrict attention models just instance concept way logic distinguish instances 
show fact need finite polynomial number inclusion assertions specified aux order able identify instance representative ff allows prove existence model implies existence model individuals model called aliases individual ff assertions aux allow prove lemma 
lemma ciq knowledge base reduced form model alias ff cl 
path satisfies contains aliases ff ff ff respectively alias ff path satisfies contains aliases ff ff order proof induction number aliases making inclusion assertions aux form 
restrict attention tree models loss generality 
model easily transformed tree model simply unfolding follows put root tree successor gamma add tree child node continue recursively process children 
observe tree model obtained may infinite 
note virtue tree model ff occurring create successor ff child ff ff single successor ff ff single predecessor ff ff tree model delta delta define new interpretation delta delta follows ffl delta fgg fs delta create ffi rp gamma ffl create create rp delta theta delta atomic role occurring ffl delta atomic concept occurring ffl create ff create ff mg ffl rp gamma ff ff ff kg ff gamma ff ff kg ff ff ff ff kg 
observe atomic role number successors individuals delta lemma holds lemma ciq knowledge base reduced form 
model interpretation obtained 
cl delta proof induction formation called concept induction 
complex case show direction case direction similar slightly simpler 
path paths prove induction number aliases path different ff call induction path induction 
case 
case states path delta applying proposition times proposition conclude exists concept id ffi ffi id ffi ffi ffi id gamma ffi ffi id gamma gamma ffi ffi id ffi ffi id ffl tests id occur cl cl ffl gamma ffl id ffi ffiq ffi ffi id gamma ffi ffi id gamma gamma ffi ffi id ffi ffi id valid 
concept induction hypothesis iff iff construction gamma implies gamma case 
alias different ff path 
applying proposition times conclude exists formula id ffi ffi id ffi ffi ffi id gamma ffi ffi id gamma gamma ffi ffl tests id occur cl cl ffl post concept equivalent cl cl ffl gamma ffl paths ffl id ffi ffiq ffi ffi id gamma ffi ffi id gamma gamma ffi valid 
path contains aliases lemma alias ff path satisfying goes exactly aliases order 
ff path 
path contains aliases excluding path induction hypothesis ff construction gamma implies gamma ff gamma formula induction hypothesis iff considering gamma gamma implies gamma get state main theorem reasoning ciq knowledge bases 
theorem ciq knowledge base satisfiable iff reduced form satisfiable 
satisfiability ciq knowledge bases exptime complete 
proof extend model model adding individual delta letting create ff mg 
exists model lemma construct interpretation satisfies inclusion assertions individual ff occurring corresponds exactly individual ff ff ff instance assertion ff ff ff instance assertion ff ff 
satisfies satisfiability polynomially reducible satisfiability reduced form satisfiability concept concept ciq tbox known de giacomo lenzerini de giacomo 
discussion new technique reasoning dl system full capabilities showing reasoning logic exptime complete 
technique careful encoding instance assertions special tbox assertions treat individuals mutually disjoint atomic concepts add suitable constraints exploiting capability ciq express complex properties role chains 
stress importance additional constraints naive translation individuals atomic concepts implicitly done classic borgida patel schneider sufficient purposes 
consider knowledge base constituted tbox abox shown 
inclusion assertion constrains role succ inverse 
second inclusion assertion states individual linked succ succ gamma chain instance fact existence single instance succ succ gamma connected part model sufficient satisfy constraint 
third inclusion assertion states instances succ successor succ predecessor assertions abox express succ successor succ successor 
knowledge base unsatisfiable 
connected succ succ gamma chain instance instance suppose instance succ successor instance tbox abox naive abox encoding succ 
succ gamma 
succ succ gamma succ succ succ succ ae succ succ gamma ae succ succ gamma example naive abox encoding fails 
succ predecessor instance contradiction 
reached assume instance consider knowledge base obtained substituting assertions abox naive encodings see fig 
disjoint easy see satisfiable 
see suffices consider interpretation delta succ observe include assertions cl interpretation model anymore 
virtue characteristics encoding shown technique extended powerful dls cat see de giacomo lenzerini calvanese include role conjunction limited form role value map 
restricted attention ciq sake simplicity 
aim extending analysis construct form concept set individuals 
know reasoning exptime decidable add get rid inverse roles number restrictions de giacomo lenzerini de giacomo decidability reasoning ciq knowledge bases extended open problem 
franconi 

computational account description logic time action 
doyle sandewall torasso 
eds proc 
kr pp 
bonn 
morgan kaufmann los altos 
baader 

augmenting concept languages transitive closure roles alternative terminological cycles 
proc 
ijcai sydney australia 
baader hollunder nebel franconi 

empirical analysis optimization techniques terminological representation systems 
proc 
kr pp 

morgan kaufmann los altos 
bergamaschi 

taxonomic reasoning conceptual design 
acm trans 
database systems 
blanco illarramendi 

building federated database system approach knowledge system 
intelligent cooperative information systems 
borgida 

description logics data management 
ieee trans 
knowledge data engineering 
borgida patel schneider 

semantics complete algorithm subsumption classic description logic 
artificial intelligence research 
buchheit donini schaerf 

decidable reasoning terminological knowledge representation systems 
artificial intelligence research 
calvanese de giacomo lenzerini 

structured objects modeling reasoning 
proc 
dood lncs pp 

springer verlag 
catarci lenzerini 

representing interschema knowledge cooperative information systems 
intelligent cooperative information systems 
de giacomo 

decidability class knowledge representation formalisms 
ph thesis dip 
di inf 
univ di roma la sapienza 
de giacomo 

eliminating converse converse pdl 
logic language information 
appear 
de giacomo lenzerini 

boosting correspondence description logics propositional dynamic logics 
proc 
aaai pp 

aaai press mit press 
de giacomo lenzerini 

concept language number restrictions fixpoints relationship calculus 
proc 
ecai pp 

de giacomo lenzerini 

aggregate foundations description logics tuples sets 
proc 
ijcai pp 

brachman selfridge ballard 

knowledge software information system 
comm 
acm 
donini lenzerini nardi nutt 

complexity concept languages 
allen fikes sandewall 
eds proc 
kr pp 

morgan kaufmann los altos 
donini lenzerini nardi nutt 

tractable concept languages 
proc 
ijcai pp 
sydney 
donini lenzerini nardi schaerf 

deduction concept languages subsumption instance checking 
logic computation 
donini lenzerini nardi schaerf 

reasoning description logics 
brewka 
ed foundation knowledge representation 
university press 
appear 
doyle patil 

theses knowledge representation language restrictions taxonomic classification utility representation services 
aij 
fischer ladner 

propositional dynamic logic regular programs 
computer system sciences 
kozen tiuryn 

logics programs 
leeuwen 
ed handbook theoretical computer science formal models semantics pp 

elsevier 
levy rajaraman ordille 

query answering algorithms information agents 
proc 
aaai 
nebel 

computational complexity terminological reasoning back 
aij 
nebel 

terminological cycles semantics computational properties 
sowa 
ed principles semantic networks pp 

morgan kaufmann los altos 
patel schneider 

valued semantics terminological logic 
aij 
schaerf 

reasoning individuals concept languages 
data knowledge engineering 
schild 

correspondence theory terminological logics preliminary report 
proc 
ijcai pp 
sydney australia 
schild 

terminological cycles propositional calculus 
doyle sandewall torasso 
eds proc 
kr pp 
bonn 
morgan kaufmann los altos 
schmidt schau 

subsumption kl undecidable 
brachman levesque reiter 
eds proc 
kr pp 

morgan kaufmann los altos 
schmidt schau smolka 

attributive concept descriptions complements 
aij 
sheth navathe 

automatic reasoning schema integration 
intelligent cooperative information systems 
litman 

terminological reasoning constraint networks application plan recognition 
proc 
kr pp 

morgan kaufmann los altos 
woods schmolze 

family 
lehmann 
ed semantic networks artificial intelligence pp 

pergamon press 
published special issue computers mathematics applications volume number 
