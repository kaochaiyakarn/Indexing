higher order logic theorem proving structured speci cations tomasz institute mathematics university gda mail guests gda pl 
higher order logic theorem provers hol system see gm isabelle hol logic see paul institution 
show maps institutions hol satisfy certain technical conditions reuse proof system higher order logic reason structured speci cations built institutions mapped hol 
show maps institutions underlying casl speci cation formalism see casl hol satisfy conditions needed reusing proof systems 
want prepare theoretical background tools support casl 
choose higher order logic see logic bridge casl theorem proving transformation development hand appropriate express logic casl language hand quite ective widely tools machine support hol system described gm hol logic isabelle system described paul 
de ne higher order logic institution technical details gm paul 
propose maps institutions logics underlying casl speci cation formalism hol logic 
show maps satisfy conditions essentially expansion weak amalgamation see required reusing proof system hol logic casl logics 
propose methodology reusing proof system hol logic reasoning structured speci cations 
methodology allows translate reasoning structured speci cations casl speci cations hol logic consequently theorem provers hol logic 
language models satisfaction section language hol logic 
de nitions notions follow gm 
research partially supported esprit crit program working group cofi wg 
nite set type variables xed linear order 
greek letters possibly subscripts primes range assume nite set names type constants 
greek letter range arbitrary members assume sets disjoint 
type structure set type constants 
type constant pair name type constant natural number arity 
assume distinct type constants name set types types type structure de ned smallest set types types types types types types distinguished type operator assumed associate right abbreviates 

gm introduce notion type context 
de nition type context 
type context nite possibly empty list distinct type variables type context pair written type context type type variables occurring appear list canonical context type minimal context variables listed order 
type structure includes type constants set types types type structure called standard 
includes type constant say set types type structure product 
de nition type instance 
types types type result simultaneous substitution type variable type resulting type called instance lemma 
suppose type containing distinct type variables instance type variables types uniquely determined proof 
induction structure type nite set names variables xed linear order 
type structure denumerable set typed variables de ned follows fv types set denumerable 
write abbreviation just clear variable type assume variables distinct names names nite set names constants disjoint type structure denumerable set typed constants de ned follows fc names types set denumerable 
similarly variables write abbreviation type follows context 
standard type structure set constants standard contains constants 
type variable 
hol signature pair type structure set constants typed types types signature called standard standard 
say product product contains constants pair 
fst snd type variables 
signature set typed variables de ned type structure called variable system 
set terms terms signature smallest set closed rules variable variable system terms types instance terms terms terms terms terms terms terms usually drop type subscripts terms writing just function application assumed associate left abbreviates 
notation 
abbreviates 

free bound occurrence variable term de ned usually see bar 
standard introduce abbreviations see de ne abbreviation gt gx terms type standard called formulas metavariables range 
formulas contain free variables called sentences 
product write pair 
similarly types introduce term context term 
de nition 
context consists type context list distinct variables types contain type variables list term context consists context term satisfying conditions contains type variables occur contains variables occur freely contain variable occurs bound canonical context term minimal context lists listed order 
combination second third condition de nition implies variable free bound occurrences term exists term equal renaming bound variables satis es conditions 
rest terms free bound occurrences variable 
gm de ne universe class sets satisfying conditions element non empty set powerset fy xg contains distinguished nite set exists distinguished element ch ux elements product ux dependently typed functions ch witnesses property 
consequences properties set functions contains distinguished element set contains distinguished element set element set 
rest arbitrary xed universe xed signature 
structure pair interpretation type constants interpretation constants interpretation type constant ary function de nition interpretation types context 
type context interpretation type constants de ne function induction follows xn ng de nition interpretation types 
interpretation type constants interpretation type types canonical context lemma 
types context type context interpretation type constants length proof 
induction structure 
de nition interpretation constants 
interpretation type constants interpretation constant element nt number type variables occurring de nition interpretation terms context 
signature term term context structure 
interpretation term element 
xn ym 
de ned induction follows mg instance lemma uniquely determined types lemma element 
de nition notation form denotes function element yields value 
de nition interpretation terms 
structure interpretation term interpretation canonical context 
de nition standard interpretation 
standard signature 
structure called standard function assigning equality test function 
function assigning function sending function 
ch ch 
product structure standard pair 
function sending fst snd projection functions rst second element pair respectively 
de nition satisfaction 
structure satis es formula written 
canonical context 
institution hol de nition signature morphism 
signatures 
signature morphism pair functions satisfying conditions homomorphic extension type expressions 
extend types context follows composition 
identity morphism id 
standard signatures signature morphism standard preserves type constants constants 
product standard preserves type constant constants pair 
fst snd de nition translation terms 
signatures signature morphism variable system variable system induced set fv homomorphic extension terms denoted extension terms context follows 
usually drop sub superscripts clear context writing respectively 
de nition 
signature morphism structure 
reduct structure lemma 
signature morphism structure type types type context 
proof 
induction structure type lemma 
signature morphism structure term 
canonical context 
proof 
induction structure term lemma 
signature morphism structure formula 
proof 
immediately de nition lemma 
de nition de ne hol logic terms institution proposed goguen burstall gb 
de nition 
institution hol de ned follows sign hol category standard signatures product standard signatures morphisms signature hol set sentences sentence exists variable system containing variables occurring signature morphism sentence 
signature hol discrete category standard structures signature morphism model signature hol satisfaction relation relation de ned de nition 
lemma de nition really de nes institution 
casl logics hol section de ne maps institutions see mes underlying casl speci cation formalism hol institution 
prove conditions proof system hol logic reused reasoning casl speci cations see section 
de nition 
institution pfol partial rst order logic de ned follows category sign pfol category partial rst order signatures objects partial rst order signatures hs tf pf set sort names tf pf sets total partial operation names respectively tf pf set predicate names morphisms rst order signature morphisms tf pf tf pf families functions respecting arities result sorts operation names totality tf tf tf tf pf pf pf pf tf functor set signature gives set partial rst order sentences built atomic sentences existential equalities terms sort predicate formulas form terms sorts respectively standard propositional connectives universal quanti er additionally assume sentence bound notion bound free variables formula de ned standard way see eft signature morphism translation function sentence sentence functor op cat signature gives discrete category partial rst order structures objects partial rst order structures ug fc jm 
jm sn jm tf fc jm 
jm sn jm pf fpm jm 
jm sn signature morphism reduct functor mapping partial rst order structures partial rst order structures satisfaction relation pfol de ned follows formula set containing free variables jm valuation variables satisfaction formula valuation pfol de ned follows pfol de ned equal pfol de ned pm pfol pfol pfol pfol true pfol pfol valuation fx sg jm pfol maximal homomorphic extension terms 
sentence satis ed model pfol pfol jm empty valuation 
pfol institution de nition basic logic underlying casl formalism see casl 
de nition notion institution representation see tar special case map institutions see mes called simple map institutions coding pfol institution hol institution 
de nition 
institution representation pfol hol de ned follows functor sign sign hol signature hs tf pf sign hol smallest hol signature 
tf 
sn write sign tf 

sn 
pf 
sn write sign pf 

sn 

sn write sign 

sn signature morphism sign signature morphism hol sign sign 
sn sign tf 

tf sign 
sn sign pf 

pf sign preserves standard product symbols natural transformation sen sign family functions sen sen extension formulas rest de nition write def abbreviation fst sen def def sign snd sen def def snd snd sen sen sen sen sen sen sen homomorphic extension sign terms follows def def sign pf snd pf def def sign tf snd tf natural transformation mod sign op family functions mod sign sign structure follows mod sign fi sign tf tf fc 
sn 
sn snd sign fst sign unde ned pf fpm 
sn 
sn pm sign proposition 
de nition de nes institution representation 
proof 
obviously sign functor sen sign mod sign op natural transformations 
representation condition mod sign sen pfol signature sentence sign model proved induction structure sentence 
recall properties maps institutions mentioned crucial results section 
details concerning maps institutions mes 
de nition expansion 
map institutions th class theories institution map institutions expansion th theory th th th model expansion th model exists th model th say map expansion property expansion class jg 
map institutions institution representation call property expansion 
de nition weak amalgamation 
map institutions th class theories institution class morphisms theories th 
say map institutions weak amalgamation th theories th th th th th th th diagram mod th mod th th mod th mod th th th exists th th say map weak amalgamation property weak amalgamation class jg 
observation institution representation pfol hol de ned de nition satis es expansion weak amalgamation properties class theories pfol 
consider extension pfol institution institution partial rst order logic subsorts subpfol see casl 
de nition 
institution subpfol subsorted partial rst order logic follows signatures subsorted partial rst order sorted signatures sort names disjoint sets tf total pf partial operation names predicate names pre order relation subsort embedding sort names 
pre order naturally extends sequences sorts 
de ne overloading relations operations follows holds exist similarly de ne predicates 
subsorted signature morphisms usual signature morphisms institution pfol preserve subsort relation overloading relations 
sentences usual pfol sentences implicit subsort embeddings 
models usual pfol models see casl sorts carrier sets jm jm model embedding em jm jm partial projection pr jm jm membership predicate jm testing values jm embeddings values jm obvious compatibility conditions hold see casl details satisfaction relation de ned pfol institution 
institution category th theories objects pairs signature set sentences 
morphisms 
signature morphisms sen cl cl closure sentences de ned follows see gb cl sen consider map institutions de nition 
map institutions subpfol pfol de ned follows 
th subpfol th pfol functor hs tf pf subpfol signature extension signature hs tf pf pfol total embedding operation em partial projection operation pr membership predicate pair sorts set axioms describing obvious compatibility conditions embeddings projections membership predicates see casl theory morphism th subpfol additionally preserves symbols embeddings projections membership relations 
subpfol sends sentence possibly implicit embeddings sentence implicit embeddings explicit 
subpfol just forgets interpretations embedding projection membership relation symbols axiomatized translates interpretation pre order relation subsort embedding sort names see de nition 
observation map institutions subpfol pfol de ned de nition expansion weak sign subpfol amalgamation properties 
lemma 
maps institutions satisfying expansion expansion class theories jg weak amalgamation weak amalgamation class theories jg respectively class morphisms theory jg map institutions expansion weak amalgamation properties 
proof 
immediately de nitions 
corollary 
map institutions subpfol hol subpfol pfol de nition pfol hol de nition expansion weak sign subpfol amalgamation properties 
de ne institution subpcfol partial rst order logic subsorts sort generation logic underlying casl speci cation formalism see casl 
de nition 
institution subpcfol partial rst order logic subsorts sort generation institution subpfol de ned de nition signature hs tf pf subpcfol sentence functor gives sort generation sentences form tf pf sentence satis ed model carrier sets jm generated function symbols possibly variables sorts 
corollary 
map institutions subpcfol hol corollary signature sort generation sentence 
sn sn 

fs fi mg expansion weak sign subpcfol amalgamation properties 
speci cations hol section structured speci cations speci cations sst 
structured speci cations part structured speci cations casl formalism 
de nition speci cations 
finite speci cations institution institution distinguished classes morphisms closed composition include identities exists pushout sign see details semantics de ned inductively follows 
pair sign sen nite set sentences speci cation semantics sig mod fm 
signature speci cations sp sp sp sp speci cation semantics sig sp sp mod sp sp mod sp mod sp 
morphism speci cation sp translate sp speci cation semantics sig translate sp mod translate sp fm mod sp 
morphism speci cation sp derive sp speci cation semantics sig derive sp mod derive sp fm mod sp de nition speci cations hol 
sp nite speci cation institution hol class signature morphisms identities sort names inclusions operation names 
nite number operations 
speci cation translation family functions hol speci cations institution hol hol sentences de ned inductively follows 
gi 
sp sp sp sp 
translate sp sp 
derive sp 

sp fn operations 
lemma 
sp speci cation institution hol class signature morphisms identities sort names inclusions operation names 
nite number operations mod sp sp proof 
induction structure speci cation sp derive case follows fact hol 
symbol 
case obtain mod derive gi derive gi 
de nition lemma restricted class signature morphisms identities sort names inclusions operation predicate names 
similar result lemma holds class morphisms injective operation predicate names bijective sort names 
unfortunately know obtain similar result section class signature morphisms inclusive injective sort names sort names may hidden derive speci cation 
de nition speci cation representation 
institution representation speci cation representation family functions jsignj classes speci cations institutions de ned follows 
sign sen 
sp sp sp sp 
translate sp translate sp sign 
derive sp derive sp sign 
theorem 
hol institution representation satisfying weak amalgamation sign satis es assumptions lemma sp speci cation model mod sp expansion sign model sentence mod sp sp hol sign sen proof 
directly theorem section mod sp mod sp hol sign sen 
lemma mod sp sp 
example institution representation satisfying assumptions theorem institution representation pfol hol de nition class satisfying assumptions lemma 
similarly obtain soundness scheme rules join sp hol sign sen sp sp satisfy assumptions theorem 
similar result obtain maps institutions 
de nition map speci cations 
map institutions map speci cations family functions jsignj classes speci cations institutions de ned similarly speci cation representation see de nition 

translate sp translate sp considered signature morphism 
theorem 
hol map institutions satisfying weak amalgamation satis es assumptions lemma sp speci cation model mod sp expansion model sentence mod sp sp hol sign proof 
proof proof theorem theorem lemma 
examples maps institutions satisfying theorem maps institutions subpfol hol see corollary subpcfol hol see corollary classes satisfying assumptions lemma see appendix practical example 
results similar theorem theorem hold re nement speci cations 
de ned institution hol higher order logic best ts ideas gm paul 
represented institution hol institutions underlying casl speci cation formalism 
similar done maps institutions di erent representations maps 
authors describe partiality adding new element carrier set represent unde ned value axioms described unde nedness maps institutions produce new sentences 
proved conditions proof system higher order logic reused proof systems represented mapped logics 
section methodology allows reuse proof system higher order logic reasoning structured speci cations institutions presentable hol 
methodology allows translate judgments properties re nement relation structured speci cations directly known machine supported tools hol system see gm isabelle hol logic see paul 
task extend casl language design tool automatic translation casl speci cations theorem provers hol logic set tactics suited proving theorems translated tool 
andrews 
mathematical logic type theory truth proof 
academic press 
bar barendregt 
lambda calculus syntax semantics 
studies logic foundations mathematics elsevier 

moving speci cation structures logical systems 
trends algebraic development techniques selected papers th international workshop wadt lisboa portugal april ed 
jos luiz fiadeiro springer lncs pages 

logical systems structured speci cations 
special issue theoretical computer science appear casl casl common algebraic speci cation language summary cofi task group language design 
version march 
document available www ftp eft ebbinghaus flum thomas 
mathematical logic 
undergraduate texts mathematics second edition springer verlag 
gb goguen burstall 
institutions model theory speci cations programming 
journal assoc 
computing machinery 
gm gordon melham 
hol 
cambridge university press 
mes meseguer general logic 
logic colloquium eds 
ebbinghaus pages north holland 
mossakowski krieg br 
static semantic analysis theorem proving casl 
trends algebraic development techniques selected papers th international workshop wadt italy june ed 
francesco parisi presicce springer lncs pages 
paul paulson 
isabelle generic theorem prover 
springer verlag lncs 
sst sannella tarlecki 
formal development programs algebraic speci cation parameterization revisited 
acta informatica volume pages 
tar tarlecki 
moving logical systems 
trends data type speci cations 
selected papers 
th workshop speci cation data types adt september eds 
haveraaen dahl owe springer lncs pages 
see monika univ gda pl papers html www brics dk projects cofi notes ftp ftp brics dk projects cofi notes practical example appendix de ne speci cation ordered lists institution subpcfol translate hol obtain input theory theorem provers hol logic 
de ne speci cation ordered lists lord 
lord sig sorts el list opns nil list cons el list list hd list el tl list list pred le el el lord lord sig list nil cons hd tl hd nil hd nil tl nil tl nil el le el le le le el le le fnil list cons el list listg extend speci cation new total operation sort list list implement terms hidden operation insert el list list 
de ne signatures sig sorts el list sig sorts el list opns nil list opns nil list sort list list sort list list cons el list list cons el list list hd list el tl list list insert el list list pred le el el hd list el tl list list pred le el el speci cations translate lord sig sort nil nil el list sort cons insert sort el insert nil cons nil el list le insert cons cons cons el list le insert cons cons insert derive lord sig 
sig sig 
sig signature inclusions 
de nitions removing tautologies obtain insert el list list fst hd nil fst tl nil list nil fst hd fst tl cons snd hd snd tl el le el el el le le le el el le le list nil el list cons list sort nil nil el list sort cons insert sort el insert nil cons nil el el list le insert cons cons cons el el list le insert cons cons insert prove properties speci cation subpcfol el list le hd sort cons cons sort theorem provers higher order logic prove hol el list le snd hd fst hd sort cons cons sort 
