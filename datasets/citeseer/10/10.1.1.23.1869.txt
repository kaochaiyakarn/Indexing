universit degli studi di bologna deis metaheuristics multiagent perspective andrea roli milano october deis technical report 
deis lia lia series metaheuristics multiagent perspective andrea roli milano deis universit di bologna viale bologna italy deis unibo october keywords metaheuristics combinatorial optimization tness landscape agents contents metaheuristics algorithms classi cations search agents fitness landscapes search problem formalization 
example local search csp 
example ant colony metaheuristic 
fitness landscapes 
example traveling salesman problem 
search agents 
cooperative search 
multi level architecture de nition multi level architecture 
mla metaheuristic algorithms grasp 
ant colony optimization 
iterated local search 
memetic algorithms 
discussion related deis technical report 
deis lia lia series introduce multiagent metaphor framework metaheuristic algorithms 
rst step de nition agents search tness landscape 
framework possible implement classical metaheuristic algorithms introduce cooperative search de ned way 
second step extends model multi level system agents level di erent computational capabilities tasks solution construction solution improvement extracting solutions building blocks analyzing regions search space perform meta reasoning behavior lower level agents 
propose perspective aim achieve better clearer understanding metaheuristics obtain new algorithms suggest directions software engineering oriented implementation 
metaheuristic techniques solve hard problems generally np hard problems conjunction exact algorithms 
problem dimension large exact algorithms may useful computationally expensive 
cases approximate algorithms guarantee nd optimal solution ective alternative 
metaheuristics approximate algorithms encompass combine constructive methods local search strategies local optima escaping strategies population search 
include restricted tabu search simulated annealing evolutionary computation memetic algorithms scatter search iterative improvement hill climbing ant colony optimization grasp iterated local search variable neighborhood search :10.1.1.145.8411
surveys current research metaheuristics 
multiagent perspective metaheuristics 
section survey commonly classi cation metaheuristics 
section de nes tness landscape describes basic metaphor search agents tness landscapes 
describe multi level architecture section 
section show metaheuristic algorithms described multi level architecture 
section discuss important themes approach section outlines related works 
ideas 
metaheuristics algorithms classi cations di erent ways classify describe metaheuristic algorithms 
familiar easy description algorithm origins 
algorithms genetic algorithms ant algorithms non nature inspired ones tabu search iterated local search 
classi cation quite rough main reasons 
rst reason hybrid algorithms completely class sense time 
second reason classi cation helpful comparison algorithms 
way classify metaheuristics di erentiating single population heuristics 
rst commonly called trajectory methods encompass local search metaheuristics tabu search iterated local search variable neighborhood search 
share property describing trajectory continuous search space search process 
population metaheuristics conversely generate search processes dynamically describe evolution set points search space 
classi cations metaheuristics useful help outline similarities di erences algorithms 
discriminant set properties classify important level abstraction algorithms described 
common key properties recognized algorithms general description formulated algorithms class de ned specializations 
interesting framework called adaptive memory programming amp 
amp describes class metaheuristics algorithms memory store information collected search process information bias solution construction search term adaptive 
amp may sketched follows initialize memory 
stopping condition met generate new solution data stored memory 
improve local search improved solution 
update memory pieces knowledge brought framework metaheuristics may described tabu search ant colony optimization scatter search 
tabu search explicitly handles short term memory tabu list avoid cycling visiting states 
population metaheuristics memory implicitly embedded population 
amp clearly points importance memory search solution construction 
level abstraction chosen allows informally introduce concepts memory stored information solutions usefulness limited general description algorithms search history 
amp framework helps design new algorithms descriptive level general 
ways describing metaheuristic algorithms proposed example framework evolutionary computation algorithms discussed 
evolutionary algorithms classi ed depending implementation main features individual representation evolution process neighborhood structure information sources infeasibility cation diversi cation 
general description abstraction algorithms focuses properties considered important 
framework useful allows analyze understand algorithms suggests new algorithms combinations algorithmic components 
section framework mentioned aims 
search agents fitness landscapes section introduce metaphor consider useful understanding designing implementing metaheuristic algorithms 
necessary de nition problems exam introduce search tness landscapes 
discuss detail multiagent metaphor 
search problem formalization problem solve generally de ne model 
model formal de nition problem main entities con appears 

conceptual process original problem representation algorithm 
straints costs values associated con gurations entities goal important problems heuristic search deals constraint satisfaction problems csps combinatorial optimization problems cops 
de ned set variables fx xn variable domains dom jdom constraints variables objective function optimized minimized maximized 
csps objective function constant solved feasible solution whilst cops non trivial function 
objects de ned model directly algorithm 
example problem modeled integer linear programming directly solved branch bound heuristic constructive algorithms 
model general independent search strategy chosen representation de ned see 
choice algorithmic oriented representation de ned tune model algorithm solve problem 
example simple genetic algorithms solutions may coded binary strings 
representation may de ne alternative objective function example introducing penalties infeasible solutions smoothing functions shape search landscape 
additional constraints may added representation order deal infeasibility 
observe search process may dynamically change representation 
formally representation de nes set solutions states tness function possibly additional constraints 
solutions correspond feasible con gurations variables tness function objective function adapted search algorithm 
transformation model representation reversible solution represented problem correspond solution problem solution value tness value translated corresponding objective function value 
worth noting correspondence solutions de ned model solutions solutions de ned representation mapping 
cases possible 
rst case common instance kind mapping characterizes problems variables model nite domains represented just di erent encoding 
second case example aco representations maxsat problems assignment corresponds set paths construction graph 
single solution representation space may correspond solutions model instance infeasible solutions allowed representation repaired produce feasible solutions model 
de nition model broader usual de nition operation research 

kinds mapping model representation objects 

clarify di erence model representation examples 
rst example concerns application local search constraint satisfaction problem shows di erence objectives model representation 
points set feasible solutions di erent model representation 
second example shows complex process leads model representation suited particular metaheuristic ant colony optimization 
example local search csp solve csp nd assignment satis es constraints model 
instance consider satis ability problem set clauses logical disjunction literals literal variable negation goal nd assignment variables satis es clauses 
example set clauses satis ed assignments local search applied notion objective function model sat changed suited representation satisfying assignments highest objective function value assignments value function closeness satisfying ones 
typical objective function evaluated number satis ed clauses choices possible keep distinctions clear call objective function de ned representation tness function 
example important di erence model representation 
csp satisfying assignments feasible solutions whilst representation possible assignments feasible 
general set feasible solutions de ned model di erent representation 
see example non oblivious functions maxsat problems 
example ant colony metaheuristic complex example aco metaheuristics applied 
ant colony optimization known metaheuristic designing algorithms combinatorial optimization problems :10.1.1.145.8411
inspiring idea aco foraging behavior real ants way communicate 
real ants deposit pheromone trail walking select direction stochastic way 
higher pheromone value path higher probability ant chooses path 
arti cial ants agents construct solution choosing component probabilistic way function pheromone 
aco pheromone mean communicate solution components 
implementations aco proposed di erent choices construction rules way update pheromone trails 
section recall formal representation construction space de nition basic elements aco algorithms detailed description see 
arti cial ants construct solution building path construction graph solution produce sequence components 
formally basic elements set components fc nc states problem sequences components hc states correspond partial complete solutions original problem 
set constraints de nes feasible states de ne feasible neighborhood component 
graph fully connected nodes correspond components states paths graph solutions correspond paths completed condition met 
example consider traveling salesman problem nodes components cities visited states partial complete paths graph solution hamiltonian tour graph constraints avoid cycles ant visit city 
ants behavior speci ed de ning start states termination conditions construction rules pheromone updating rules daemon actions 
stress fact constraints rst de ned model representation di erent origins meaning 
furthermore important observe mapping model representation taken account metaheuristic algorithm designed 
example remarkable di erence aco application tsp problems application csps rst case order components path fundamental importance second situation important nal assignment regardless order variables taken 
fitness landscapes search process viewed exploration landscape goal nd global optimum local optimum 
fitness landscape de ned triple fl set solutions states 
example undirected graph representing tness landscape 
node associated solution state corresponding tness value 
arcs represent transition states means symmetric case 
neighborhood function de nes neighborhood structure assigning set states tness function fitness landscape referred fl interpreted graph see nodes solutions tness value arcs represent neighborhood relation states 
neighborhood function implicitly de nes operator takes state transforms state 
dually operator possible de ne neighborhood variable fs obtained application generally operator symmetric neighbor neighbor necessary condition 
graph representation depicted undirected resp 
directed arcs represent symmetric resp 
asymmetric neighborhoods 
property neighborhood structure allow path pair nodes graph graph connected 
notion fl neighborhood allows frame local search algorithms search processes graph 
search starts initial node explores graph moving node neighbors reaches condition 
exists de nition tness landscape formal general 
purpose contribution sucient know formal de nition deal states nodes search graph composed populations solutions 
key point multi sets sets possible repetitions elements 
multi set substitute single solution operator transforms multi set 
furthermore operator de ned function assigns probability possible transition states 
de nition fl allows deal population heuristics genetic algorithms way simple local search algorithms 

example exchange move 
tour reconstructed way 
important design issues developing search algorithm fl solution representation neighborhood structure tness function 
furthermore ways cope constraints 
example possible map csp cop free optimization problem constraints infeasible solutions penalized tness function 
worth underlining tness function choice operator determines properties landscape 
operator landscape concept introduced 
example traveling salesman problem conclude section example process guide de nition representation subsequently de nition fl 
problem consider known traveling salesman problem 
problem de ned follows fully connected undirected graph nodes arc associated positive integer value nd hamiltonian tour minimum total cost 
de nition directly translated mathematical formalization model 
model representations possible 
shall discuss common ones 
representation solution hamiltonian tour represented sequence pairs nodes graph 
solution cost sum costs arcs tour 
successful neighborhood structures introduced representation called exchange exchange lead opt improvement algorithms 
exchange operator deletes arcs tour reconnects paths tour way see 
exchange move sketched arcs removed tour reconstructed di erent arcs case possible ways reconstruct cycle 
fl generated moves di erent de ned neighborhoods di erent dimension connectivity properties 
exchange neighborhood ex cardinality proportional exchange jn ex proportional representation solution hamiltonian tour represented sequence values fv vn nodes graph 
solution cost sum costs arcs tour 
simple move operator may exchange nodes sequence 
similarly possible de ne moves pick nodes exchange leading de nition neighborhoods perm observe operators 
example exchange move 
removal arcs possible ways reconstruct tour 
gure just shown 

example hill climbing local search fl 
agent starts node moves best neighbor tness value 
node possibilities move neighbors lower tness 
agent reached local optimum reach global optimum de ne neighborhoods cardinality proportional 

large jn perm larger jn ex 
ectiveness representations fl depends metaheuristic algorithm problem structure 
general best choice exists leads best performance algorithm problem combination search agents weak notion agent states agent software system enjoys properties autonomy social ability reactivity empirical conjecture called free lunch theorem theoretically supported 
pro activeness context adopt just metaphor agent referring system able move landscape communicate agents active goal oriented possibly adaptive 
fl agent implements search algorithm 
represents solution set solutions search 
goal agent nd optimum problem global optimum sub optimal solution agent search strategy described algorithm implements 
environment agent perceives neighborhood state solution 
information access set neighbors tness values 
simplest case hill climber best improvement strategy agent fl 
agent starts state explores neighborhood chooses move ttest neighbor 
strategy forces agent local maximum need avoid local optima escaping 
smarter agents implement elaborated search strategies tabu search ts simulated annealing sa noising search ns called local search plus random walk 
search strategies noise able escape local optima moves states allowed 
agent metaphor allows describe noise perspective 
agent environment perception general inner model outer reality see 
agent senses world outside tries model interpret 
agent sees environment enjoys perfect information property 
terms search agents fl means explore entire neighborhood calculate tness function exact value 
conversely adding noise tness function means designing agent incomplete information environment 
implies choose new state 
generalized class noising algorithms algorithms implement di erent ways noising strategies interpreted basic local search strategies act environment 
metaphor simulated annealing tabu search interpreted basic local search agents searching environment known limited precision 
fact interpreted action simple search agent visibility environment limited noisy 
sa agent perceives environment increasing precision time goes noise evaluation tness decreases 
ts agent equipped memory helps avoid visited regions 
practice portion neighborhood obscured temporarily visible agent 
algorithmic perspective moves designing issues standpoint omniscient state individual 
allows di erent agents searching space di erent perspectives 
pointed general call search algorithm example ts composition mechanisms interpreted interaction cooperation agents 
case ts agent realizes basic search best improvement set allowed states de ned strategic agent uses tabu aspiration criteria 
low level description basic components adopt metaphor noise 
complicated example search agent model revisitation memetic algorithms mas 
shortly mas genetic algorithms gas lamarckian mechanisms 
transmitted genetic information includes individual experiences modi cations 
individuals improved local search general trajectory method individual replaced improved solution 
equivalent experience individual accumulate life 
furthermore loss generality consider maximization problems 
environment sensing devices outer world representation agent 
agents build model world outside means senses model elaborate strategy 
random modi cations mutation ect individual transferred spring experience 
metaheuristic applications mas described systems composed agents 
agent implements local search algorithms explores neighboring regions 
ttest agents solutions highest value 
genetic algorithms approach new individuals generated usual operators mutation crossover selection applied 
cooperative search empirical results see instance show algorithms agents perform better particular kinds problems outperformed problems 
conjectured depends agent ability exploit fl characteristics 
properties ruggedness number local optima distribution local optima topology basins attraction 
choice tness function operator de nes characteristics reasonable combination searches di erent fls derived model overcome problem hardness ectively face 
cooperative search consists search performed agents exchange information states solutions search space characteristics 
agents homogeneous implementing search performed agents exchange information states solutions search space characteristics 
agents homogeneous implementing algorithm heterogeneous di erent algorithms 
cooperative search main advantages di erent operators di erent landscapes allow di erent projections search space di erent representations extract show di erent problem properties 
agents exchange complete incomplete solutions information promising regions explore promising regions avoid 
example respectively positive information negative information 

multi level architecture metaheuristic algorithms 
usefulness multiagent metaphor emerges considering design issues synchronization evaluating information communication information ltering implementation 
meaningful example cooperative search multiagent system reported addition search agents referees agents lter information 
architecture allows develop separately search agents focusing search algorithms agent collect lter evaluate information communication mechanisms policies 
important mention cooperative search algorithms systems show ecacy eciency sequentially implemented 
means improvements originate information exchange parallel implementation 
multi level architecture previous section reconsidered search algorithms multiagent system framework focusing mainly trajectory methods 
metaheuristics involve simple local search cover heuristic techniques solve search problems solutions construction improvement analysis 
multi level architecture mla depicted composed levels corresponds di erent level abstraction 
level specialized agents implementing algorithm 
level provides feasible solution set solutions upper level meaning feasibility level 
upper level deals improvement solution generally agents perform local search local optimum reached exceptions anyway de ned level deals local optima space search restricted neighborhood function 
level global view space task govern search promising regions de ned global space level 
number levels increased adding level learning reasoning algorithms implemented 
metaheuristics developed far needs level order described level opens door design new higher level algorithms 
communications levels possible algorithm described result interaction agents algorithmic components specialized speci task 
de nition multi level architecture level level belong solutions builder agents task produce starting solutions 
building components variables partial solutions depending representation chosen 
builder agents goal construct starting solution upper level 
agents may implement algorithms random initialization greedy construction probabilistic construction pheromone computational capabilities level agents usually quite limited 
generally reactive agents behavior heuristic criterion may dynamically changed upper levels agents 
principle algorithm producing feasible solution de nition level agent complete algorithms branch bound considered belong level 
doing loose concept metaheuristics worse possibility describing algorithms interactions basic components 
level level subject previous section 
solution agents level 
agents search fl various algorithms trying improve initial solution got lower level 
level level representation di erent representations 
level agents implements various search algorithms constitute single independent search agents cooperating agents realize trajectory methods population heuristics 
usual concept short term memory belongs level agents past intensify search escape local optima 
level agents usually just reactive goal oriented realize strategy locally explore search space 
level solutions produced level provide useful information structure optimal suboptimal solutions 
level agents memorize best solutions suggest building blocks probably inserted optimal solution region search space promising dynamically bias cation diversi cation ratio provide new building blocks level 
level agents building blocks analyzers extract partial solutions components solutions 
search space analyzers sample search space looking promising regions explore 
long term memory implemented exploited level history search process stored 
main uses long term memory implementation diversi cation strategies 
level agents implement algorithms direct comparison solutions statistics positive feedback mechanisms search fl approximation fl explored level agents 
level agents belonging levels higher level coordinate lower level agents behavior 
example agents may evaluate lower level agents results reward agents extracted best solutions building blocks 
apply learning algorithms evolutionary ones select adapt improve population lower level agents 
level agents perform meta reasoning behavior agents lower levels 
example level belong agents lter information search agents 
computational capabilities level agents highest levels learning reasoning agents 
mla metaheuristic algorithms mla exploited conceptual implementation framework metaheuristic algorithms metaphor designing multiagent algorithms optimization problems 
section concentrate rst topic show ective metaheuristic algorithms described terms mla 
metaheuristics just described level level agents agents agents brevity algorithms requirement agents sucient computational capability implement memory structures needed conditions ect search strategy 
example basic tabu search realized agent randomly constructs initial solution agent perform search tabu lists 
course algorithm greedy randomized adaptive procedure stopping criterion satis ed construct solution greedy randomized procedure apply local search memorize best solution level memorize best solution level local search level greedy randomized construction 
multi level architecture version grasp 
tabu search metaheuristics long term memory need agent level 
detailed description discussion metaheuristic algorithms treat scope just easiest general form 
worth noticing variants algorithms easily obtained changing algorithms implemented level 
possible introduce agent level add cooperative search 
communications levels important principle involve possible combinations links levels metaheuristic algorithms designed far just possible communication links 
grasp start series examples simple algorithm grasp 
algorithm composed greedy construction procedure local search procedure see algorithm 
construction procedure builds solution applying greedy function step adds randomly chosen component ones highest greedy function value 
phase local search phase takes act choice local search algorithm depends problem solved 
grasp easily described mla rst level generates solution means greedy algorithm agent performs local search nally agent keeps track best solution 
communications unidirectional information ows level level level level 
represented mla grasp 
ant colony optimization ant colony optimization aco introduced section 
aco arti cial ants construct solution building path construction graph elements called connections fully connect set components 
arti cial algorithm ant colony optimization stopping criterion satis ed construct set solutions fs pheromone trails apply local search solution update pheromone trails level pheromone construction level local search level pheromone trails update 
multi level architecture version aco local search 
pheromone associated components nodes connections edges 
ants behavior speci ed de ning start states termination conditions construction rules pheromone update rules daemon actions 
solution construction aco algorithms implement local search phase aim improve solutions 
generic aco algorithm described algorithm 
depicted mla interpretation agents provide initial solutions constructive procedure biased pheromone trails 
level agents perform local search level agents apply online delayed pheromone update 
information new pheromone values agents construct new solutions 
observe case communication third level rst means process self adapting feedback loop involving initial nal phases 
iterated local search iterated local search ils simple powerful metaheuristic algorithm 
applies local search general trajectory method initial solution nds local optimum perturbs solution restarts local search perturbed state 
importance perturbation change solution obvious small change solution possible escape local optimum basin attraction side strong modi cation comparable simple random restart 
order accomplish requirements criteria adopted history search 
simple version ils described algorithm 
design ils algorithms degrees freedom choice initial solution perturbation acceptance criteria 
mla framework ils described follows see agent provides initial solution randomly heuristically generated stops activity 
level solution agent applies local search algorithm solution meets local optimum stops waiting new solution improve 
level agent keeps track search process local search algorithm iterated local search generate initial solution execute ls initial state local optimum stopping criterion satis ed perturb obtain execute ls nds local optimum basis acceptance criterion decide set level modify solution level random initial solution level local search 
multi level architecture version ils 
agent stops evaluates new starting solution modi cation current 
observe case continuous communication level level level participates just initialization random restart memetic algorithms example application mla framework memetic algorithms mas 
include category genetic algorithms apply local search way similar aco plus local search 
ma see algorithm initial population solutions generated solution improved applying local search 
resulting new population cooperates competes produce new population 
cooperation way exchange information individuals implemented genetic operators mating crossover competition implemented selection genetic operator elaborated mechanisms 
ma mla described follows level generates initial population solutions 
done single agent produces population population agents producing single solution 
furthermore initial solution generated randomly means construction procedure 
agents take solutions lower level improve local search steps local search algorithm reach local optimum 
task level agents combine select solutions generate new initial population improved level 
observe case frequent communication level level 
shows multi level architecture generic ma 
random restart course added approximate algorithm 
algorithm memetic algorithm generate initial population stopping criterion satis ed apply local search individual apply cooperation operators obtain apply competition operators obtain level cooperation competition level generate initial population level local search 
multi level architecture version memetic algorithms 
discussion mla direct communications levels allowed 
previous example possible communication exploited possibilities combine design new algorithms investigated 
explicit presence levels allows clearly information ows 
example algorithms loop level level level level exhibit positive negative feedback phenomena 
feedback loops characterize self adapting systems emerging phenomena aco evolutionary computation dynamics example 
point underlined di erent agents coexist concurrently level 
di erent representations communicate means agents lter translate information 
realize kind horizontal cooperation counterpart vertical cooperation achieved interaction agents di erent levels 
key features mla meta levels level upper levels 
generally solutions just implicitly analyzed genetic algorithms ant algorithms ad hoc algorithms vocabulary building scatter search 
agents provide explicit way combine building blocks know promising regions explore 
typical metaheuristics terminology level realizes actual search strategy guides lower level search adjusts balance cation diversi cation 
new direction mla framework opens meta reasoning performed level level agents 
way achieve apply learning techniques clustering information extraction reinforcement learning 
interesting possibility agents agents mapped optimization problem goal optimize quality information extracted 
achieved instance introducing entropy measure information goal maximize value higher entropy higher quantity new information 
way agents realized search algorithms level leading meta search 
relevant consideration synchronization agents levels 
simple examples discussed easiest way implement algorithm sequential synchronous way level produces solution level improves solution nally level takes decision neighborhood explore 
mla architecture especially distributed systems choice restrictive 
possibility implement algorithms asynchronous way providing synchronization mechanisms agents exploiting date technology communication synchronization multiagent systems 
advantage speeding computation asynchrony introduces robustness scalability 
related multiagent perspective metaheuristics relations object oriented frameworks algorithms implementation distributed arti cial intelligence dai 
section brie discuss issues 
mla conceptual framework metaheuristics framework algorithms implementation 
literature implementation frameworks local search metaheuristics introduced 
share aims hand fast prototyping implementation hand systematic comparison algorithms 
di erent implementation choices provide basic structure levels construction initial solution improvement 
interesting hierarchical structure object oriented classes goes direction mla restricted local search metaheuristics 
authors de ne levels 
basic components state moves 
local search problem elements state manager neighborhood explorer 
local search metaheuristics iterative improvement tabu search simulated annealing 
local search solving strategy simple solver token ring solver fourth level interpreted level guides search performed third level corresponds level 
taxonomy developed design framework oriented implementation algorithms practical objective apparent presence rst level basic software components considered framework 
fourth level just represent outermost cycle algorithms realizes search strategy 
research dai multiagent systems covers theoretical applicative topics 
relations multiagent approach metaheuristics emerge mainly distributed search agents cooperate solve search problem 
basic approach consists subdividing search space assigning agent subspace agent locally search subspace 
protocols algorithms developed maintain results consistency combine solutions provided agents complete solution 
cooperative techniques proposed studied di erent synchronization methods 
distributed search deals distributed implementation classical search algorithms concepts researches expressed framework terminology 
formalization communication cooperation heterogeneous agents may ectively included implementation formalization mla 
discussed multiagent approach metaheuristics 
shown view search algorithms search agents tness landscapes 
described multi level architecture agents characterized di erent levels abstraction problem consciousness 
advantages mla framework metaheuristic algorithms easy way comparing varying algorithms 
restricted level algorithm paradigm create agents level try exploit power cooperation 
advantage multiagent metaphor gives direct suggestions algorithms implementation 
sequential parallel synchronous asynchronous implementations easily designed 
opinion mla framework metaheuristics clearly shows algorithms simple local optima escaping strategies 
enhanced intelligent strategies explore search space learning mechanisms aco advanced trajectory guidance ils 
covers topics studying agents fl level level agents behavior 
design new hybrid algorithms 
explore possibilities cooperative search 
formalization mla 
involves formalization agents structure capabilities example logical language formal speci cation communication protocols 
complex system metaphor particular information ow explicitly traced mla characterization emergence metaheuristics algorithms develop 
acknowledgments authors paolo helpful comments suggestions 
carvalho ribeiro 
object oriented framework local search heuristics 
proceedings th conference technology object oriented languages systems tools usa pages 
ieee piscataway 
talbi 
evolutionary 
proceedings congress evolutionary computation cec pages 
battiti 
reactive search history base heuristic max sat 
acm journal experimental algorithmics 
blum roli dorigo 
hc aco hyper cube framework ant colony optimization 
proceedings mic meta heuristics international conference volume pages porto portugal 
hertz 
taxonomy evolutionary algorithms combinatorial optimization 
journal heuristics 
charon 
noising methods generalization metaheuristics 
european journal operational research 
corne dorigo glover editors 
new ideas optimization 
advanced topics computer science series 
mcgraw hill 
de backer shaw 
object model meta heuristic search constraint programming 
proceedings cp ai workshop integration ai techniques constraint programming combinatorial optimization problems 
erman 
cooperation evolutionary algorithms search paradigms 
proceedings congress evolutionary computation cec pages 
di schaerf 
object oriented framework exible design local search algorithms 
technical report rr dipartimento di matematica informatica universit di udine 
di schaerf 
object oriented framework design local search algorithms metaheuristics 
proceedings mic meta heuristics international conference volume pages porto portugal 
dorigo di caro 
ant colony optimization meta heuristic 
corne dorigo glover editors new ideas optimization pages 
mcgraw hill 
available technical report iridia universit libre de bruxelles belgium 
dorigo di caro gambardella 
ant algorithms discrete optimization 
art 
life 
dorigo gambardella 
ant colony system cooperative learning approach travelling salesman problem 
ieee transactions evolutionary computation april 
eiben 
constraint satisfaction problems 
ack fogel michalewicz editors handbook evolutionary computation 
iop publishing oxford university press 
feo resende 
greedy randomized adaptive search procedures 
journal global optimization 
fink voss 
reusable metaheuristic software components application software generators 
proceedings mic meta heuristics international conference volume pages porto portugal 
talbi 
fitness landscapes performance meta heuristics 
stefan voss martello ibrahim osman catherine editors meta heuristics advances trends local search paradigms optimization 
kluwer academic 
gambardella taillard dorigo 
ant colonies quadratic assignment problem 
journal operational research society 
glover 
scatter search path relinking 
corne dorigo glover editors new ideas optimization advanced topics computer science series 
mcgraw hill 
glover laguna 
tabu search 
kluwer academic publishers 
hansen mladenovi variable neighborhood search 
stefan voss martello ibrahim osman catherine editors meta heuristics advances trends local search paradigms optimization chapter pages 
kluwer academic publishers 
hertz 
framework description evolutionary algorithms 
european journal operational research 
hogg williams 
solving really hard problems cooperative search 
proceedings aaai pages 
aaai press 

measure landscapes 
evolutionary computation 
stadler 
amplitude spectra tness landscapes 
adv 
complex systems 
available sfi working 
johnson mcgeoch 
traveling salesman problem case study 
aarts lenstra editors local search combinatorial optimization pages 
john wiley sons 
jones 
evolutionary algorithms fitness landscapes search 
phd thesis univ new mexico albuquerque nm 
jones 
operator landscape 
santa fe institute technical report santa fe institute 
jones forrest 
fitness distance correlation measure problem di culty genetic algorithms 
eshelman editor proceedings th int 
conference genetic algorithms pages 
kaufman 
kau man macready 
technological evolution adaptive organizations 
complexity march 
gelatt vecchi 
optimization simulated annealing 
science may 
laburthe caseau 
salsa language search algorithms 
maher puget editors principle practice constraint programming cp volume lecture notes computer science pages 
springer 
lesser 
overview dai viewing distributed ai distributed search 
journal japanese society arti cial intelligence special issue distributed arti cial intelligence 
macready kau man 
criticality parallelism combinatorial optimization 
science january 
merz freisleben 
fitness landscapes memetic algorithm design 
david corne marco dorigo fred glover editors new ideas optimization advanced topics computer science series 
mcgraw hill 
michael van hentenryck 
localizer modeling language local search 
informs journal computing 
moscato 
evolution search optimization genetic algorithms martial arts memetic algorithms 
tech 
rep caltech concurrent computation program california institute technology pasadena california usa 
moscato 
memetic algorithms short 
glover corne dorigo editors new ideas optimization 
mcgraw hill 
prasad lander lesser 
cooperative learning composite search spaces experiences multi agent design system 
proceedings thirteenth national conference arti cial intelligence volume pages 
aaai mit press 
roli blum dorigo 
aco maximal constraint satisfaction problems 
proceedings mic meta heuristics international conference volume pages porto portugal 
russell norvig 
arti cial intelligence 
modern approach 
simon schuster 
voss 
cooperative intelligent search adaptive memory techniques 
voss martello osman editors metaheuristics advances trends local search paradigms optimization chapter pages 
kluwer academic publishers 
stadler 
theory landscapes 
lop ez pe na garc editors complex systems binary networks volume lecture notes physics pages berlin new york 
springer verlag 
sfi preprint 
stadler 
landscapes correlation functions 
math 
chem 
sfi preprint 
st utzle 
iterated local search quadratic assignment problem 
technical report aida fg intellektik tu darmstadt 
st utzle 
local search algorithms combinatorial problems analysis algorithms new applications 
zur intelligenz 

st utzle dorigo 
aco algorithms quadratic assignment problem 
corne dorigo glover editors new ideas optimization pages 
mcgraw hill 
st utzle hoos 
max min ant system 
generation computer systems 
taillard gambardella gendreau 
adaptive memory programming uni ed view meta heuristics 
technical report istituto molle di studi arti lugano switzerland 
toulouse sans experimental study systemic behavior cooperative search algorithms 
voss martello osman editors meta heuristics advances trends local search paradigms optimization chapter pages 
kluwer academic publishers 
voss martello osman editors 
meta heuristics advances trends local search paradigms optimization 
kluwer academic publishers 
weiss editor 
multiagent systems 
modern approach distributed arti cial intelligence 
mit press 
wolpert macready 
free lunch theorems optimization 
ieee transactions evolutionary computation 
wooldridge jennings 
intelligent agents theory practice 
knowledge engineering review 

