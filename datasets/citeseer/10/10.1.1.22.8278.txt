tracing traitors benny chor amos fiat moni naor benny pinkas give cryptographic schemes help trace source leaks sensitive proprietary data available large set parties 
relevant application context pay television paying customers able view certain programs 
application programs normally encrypted sensitive data decryption keys paying customers 
pirate decoder desirable reveal source decryption keys 
describe fully resilient schemes decoder decrypts non negligible probability 
typically little demand decoders decrypt small fraction transmissions non negligible introduce threshold tracing schemes decoders succeed decryption probability greater threshold 
threshold schemes considerably ecient fully resilient schemes 
keywords encryption tracing watermarking 
preliminary versions appeared proceedings crypto crypto 
dept computer science technion haifa israel 
mail benny cs technion ac il 
supported fund promotion research technion 
dept computer science school mathematics tel aviv university tel aviv israel algorithmic research mail math tau ac il 
incumbent morris rose goldman career development chair dept applied mathematics computer science weizmann institute science rehovot israel 
research supported alon fellowship israel science foundation administered israeli academy sciences 
mail naor wisdom weizmann ac il 
dept applied mathematics computer science weizmann institute science rehovot israel 
research supported fellowship israeli ministry science 
mail wisdom weizmann ac il 
person knows secret appears evening news guilty party evident 
complex situation arises set people access secret large 
problem determining guilt innocence mathematically insurmountable people get exact data behaves reveals secret 
data available available obviously protected encryption 
data supplier may give authorized parties cryptographic keys allowing decrypt data 
solve problem prevent authorized view message say alice transferring cleartext message unauthorized party say bob 
done cryptographic means trace source leak 
call unauthorized access data piracy 
traitor traitors set authorized user allow non authorized parties obtain data 
non authorized parties called pirate users 
interesting cases piracy somewhat ine ective relevant cleartext messages transmitted traitor enemy 
typical cases true include pay view subscription television broadcasts 
simply expensive risky start pirate broadcast station 
online databases publicly accessible say internet charge may levied access certain records 
distribution data encrypted form charged decryption keys di erent parts data 
encrypted data distributed cd rom dvd assumed cleartext data distributed similar storage device production involves relatively high setup costs assumption currently justi ed cd roms reasonable types media dvds 
term cd rom order concrete example simplify presentation 
cases transmitting cleartext traitor alice pirate user bob expensive compared mass distribution channels legal data supplier uses 
case line databases newspapers data continuously changing hard pirate keep updated copy data 
piracy cases criminal commercial enterprise risk bene ratio unattractive 
examples considered generic examples covering wide range data services 
concentrate preventing traitors distributing keys enable decryption encrypted content 
consider ciphertext may decrypted large set parties party assigned di erent personal key decrypting ciphertext 
term personal key private key avoid confusion public key terminology 
key pirate decoder discovered examining pirate decoder counter linked personal key traitor traitor identi ed 
clearly possible solution encrypt data separately di erent personal keys 
means total length ciphertext times length cleartext number authorized parties 
overhead certainly impossible broadcast environment 
problematic context content distributed dvd means copy di erent 
encrypted online database publicly accessible store individually encrypted copy database authorized user 
practice today considered sucient prevent piracy supplying authorized parties called secure hardware solutions designed prevent interference access enclosed cryptographic keys smartcards 
assumptions security hardware mechanisms correct 
methods hardware faults secure hardware solutions order nd keys enclosed inside 
schemes obtain claimed security secure hardware requirements 
devices store keys undoubtedly attack expensive requirement 
approach fighting piracy general components 
identifying piracy going preventing information pirate users harming legitimate users 

measures source piracy supplying legal evidence pirate identity 
goal deal traitor tracing item identify source problem 
methods taken order eliminate pirate decryption content described section 
devise resilient traceability schemes loosely speaking properties cleartext information transmitted pirate users traitor captured pirate decoder decrypts success probability better probability breaking encryption scheme correctly identify traitor protect innocent traitors collude combine keys 
note fact schemes desirable property identity traitor established considering pirate decryption process black box 
order identify traitor suces capture pirate decoder examine behavior need break open read data stored inside 
term pirate decoder represent pirate decryption process may may physical box may simply code computer 
underlying security assumption schemes information theoretic security length personal keys grows length messages transmitted may security symmetric encryption scheme 
cases security depends parameter denoting largest group colliding traitors 
security scheme depends cryptographic security parameter length key symmetric encryption system 
measure eciency solutions ghting piracy terms performance parameters 
memory communication parameters measured multiples size security parameter 
eciency parameters memory computation requirements authorized user 
parameters special importance user limited computation storage capabilities case smartcards 
memory computation requirements data supplier 
parameters typically important data supplier perform computations line large storage space 
data redundancy overhead increase data size needed order enable tracing 
refers communication overhead broadcast online systems additional wasted storage cd rom type systems 
deal schemes general form data supplier generates meta key contains base set random keys assigns subsets keys users keys user parameters speci ed 
keys jointly form user personal key 
di erent personal keys may nonempty intersection 
denote personal key user subset base set message traitor tracing scheme consists pairs form enabling block cipher block 
cipher block symmetric encryption actual data say seconds video clip secret random key alternately exclusive message get information theoretic secure version scheme inecient time pad size key long encrypted data 
enabling block allows authorized users obtain enabling block consists encrypted values keys base set authorized user able compute decrypting values keys computing actual key values 
computation user schemes simply exclusive values user able decrypt 
describes high level view traitor tracing schemes 
describes high level view single decoding box 
traitors may conspire give unauthorized user users subset keys unauthorized user able compute real message key values able decrypt 
goal system designer assign keys users pirate decoder captured possible detect traitor subject limitation number traitors 
eb user user user personal key personal key personal key decrypt decrypt decrypt cleartext block cleartext block cleartext block blocks blocks enabling cipher cb high level view traitor tracing scheme 
decrypt enabling process block user personal key symmetric decrypt cleartext block cb eb decryption key cb operation single decoding box 
hope detect traitors traitor may simply provide personal key may provide 
cases preferable xed number users assign personal keys actual number users smaller 
users join system purchasing subscription television station online database assigned personal keys pre installed 
threshold tracing distinguish kinds tracing schemes 
fully resilient schemes guarantee tracing source pirate decoder decrypts non negligible success probability accurately performs better breaking underlying encryption system encrypt data 
applications security needed ght pirate decoders considerable success probability 
example pay tv applications pirate decoders decrypt part content probably useless 
demonstrate threshold schemes trace source keys decoders decrypt probability greater threshold parameter scheme 
schemes considerably ecient fully resilient schemes 
general useful recognize success adversary design schemes prevent success 
process may lead ecient constructions overhead proportional severity attack immune case threshold tracing schemes overhead inverse function 
constructions serve price security presenting overhead incurred requiring certain amount security 
demonstration eciency threshold tracing schemes compared best fully resilient tracing scheme appears table 
table presents exact overhead schemes system typical size 
comparison asymptotic behavior overheads schemes appears table 
eliminating piracy traitor tracing schemes help aspects piracy prevention deter users cooperating pirates identify pirates enable take legal actions disable active pirate users 
usage traitor tracing schemes discourages users helping pirates especially submitting keys pirate decoders 
particular process user obtaining personal key requires sort registration physical identi cation hard pirates obtain large number personal keys 
consequently tracing traitor scheme identify source keys pirate decoders mere fact deter users helping pirates 
pirate decoder source keys identi ed legal activities taken source 
pointed corrupt data provider wishes honest user construct dummy pirate decoder containing user keys reveal claim user pirate 
note similar misbehavior possible current types property section personal data decryption key 
operations trivial secret level best fully res 
threshold level min 
data 
threshold level min 
key threshold level min 
key threshold tradeo table examples complexity di erent tracing traitors schemes 
services little evidence service providers performed illegal activities 
possibility weaken legal status evidences tracing traitors schemes data provider evidence identify pirates try obtain types legal proofs activities 
suggesting tracing traitors schemes enable data provider fabricate evidence honest users far applicable 
see subsection details 
pirate user obtained content encrypted form keys required decrypt little technically prevent continuing content 
case remedy legal 
situation somewhat di erent system requires action behalf data supplier television broadcast online database 
call cases active data 
systems allow disable identi ed pirate users receiving content 
broadcast encryption schemes fiat naor deal eciently disabling active pirate users preventing decryption :10.1.1.26.5965
schemes allow broadcast messages dynamic subset user set speci cally suitable pay view tv applications 
schemes require single short transmission disable pirate decoders manufactured collaborative ort traitors 
broadcast encryption scheme suggested wallner improved secure number corrupt users 
receivers requires receiver store log keys 
data redundancy regular transmission data user deleted set legitimate receivers scheme sends single message length log generates new key unknown deleted user 
communication overhead log times number users removed set receivers 
assume modest number traitors scheme suited eciently handle deletion privileged set receivers scheme better performance deleting large group receivers 
combination traitor tracing scheme broadcast encryption scheme powerful tool 
traitor traced dynamic subset users authorized receive broadcast changed simply dropping traced traitor 
procedure repeated pirate box rendered useless 
innocent user labeled traitor high probability operation legitimate users interrupted 
combination constructed simply session key bit wise exclusive keys transmitted traitor tracing scheme broadcast encryption scheme 
drawback simple solution pirate di erent sets keys parts decryption box decrypt tracing traitors broadcast encryption schemes 
data provider identify keys tracing traitors scheme render useless operation possible keys broadcast encryption scheme 
possible combine tracing traitors broadcast encryption schemes di erent way tracing schemes describe operate distributing secret shares encrypting share keys 
legitimate user receives set keys enable decrypt shares reveal secret scheme ensures keys pirate decoder identify traitors contributed keys 
order combine broadcast encryption share encrypted di erent broadcast encryption scheme 
key previously combined scheme provide user decryption keys corresponding broadcast encryption scheme 
traitor revealed deleted sets receivers broadcast encryption schemes corresponding 
length personal key user product lengths personal keys tracing traitors broadcast encryption schemes 
similarly data redundancy overhead product data redundancy overheads schemes 
note broadcast encryption schemes requires personal key length log normal operation data redundancy 
combining scheme schemes requires user store log keys increase data redundancy normal operation requires special message length log times size personal key traitor revealed deleted system 
related current appeared preliminary form 
related followed initial publication traitor tracing schemes 
boneh shaw suggested scheme di erent copies electronic document inserting di erent watermark copy 
scheme property copies impossible probability generate new copy ngerprint reveal copies 
scheme ers better security sense enables trace leaked content just key enables decryption 
marking assumption tracing traitors scheme ecient see instance method inserting marks document 
schemes number keys user times greater level secret scheme 
solution copyright protection self enforcement schemes suggested dwork naor 
schemes content encrypted legitimate user receives di erent decryption key includes sensitive information related user credit card number 
users reluctant hand keys keys contain sensitive information 
self enforcement schemes suggested type security 
system secure coalitions corrupt users system complexity depends scheme ecient tracing schemes 
lengths personal key data redundancy scheme times total size secrets sent scheme 
suggested tracing traitors method yields proof liability traced traitors 
scheme issuing keys center users performed interactive protocol 
protocol center able construct pirate decoder frames user real pirate decoder center able trace source keys decoder contains 
construction uses relatively complex primitive general secure multi party protocols inecient operates circuit evaluates function complexity high 
combinatorial properties tracing schemes investigated stinson wei staddon investigated relations combinatorial tracing schemes broadcast encryption schemes 
boneh franklin public key tracing schemes enable public key encryption number theoretic assumption ecient combinatorial tracing schemes including 
fiat introduced dynamic tracing schemes order locate traitor tracing algorithm dynamically changes content broadcast di erent subsets users 
schemes enable tracing traitor revealing content keys encrypt 
example consider example order demonstrate performance di erent tracing schemes 
suppose create traitor tracing scheme authorized users traitors probability false identi cation table describes length personal key user data redundancy overhead measured number basic keys contain number decryption operations performed receiver 
describe fully resilient threshold tracing schemes compare performance threshold schemes performance best fully resilient scheme level secret scheme described section 
table refers section schemes described 
rst row describes overhead trivial solution independently encrypting secret user second row describes ecient level fully resilient secret scheme 
results threshold schemes designed trace source keys decoders decrypt probability greater 
type schemes allows tradeo length personal key data redundancy demonstrated table 
fully resilient scheme short key length data redundancy overhead quite large 
fact example described table data redundancy larger trivial scheme user di erent independent key 
scheme bad high bandwidth channel parameters performs better trivial scheme smaller values 
threshold schemes feature tradeo length personal key data redundancy overhead 
possible parameter small increasing parameter possible achieve reasonable results measures entry 
scheme section superior secret level scheme complexity parameters 
noted concerned decoders decrypt probability closer possible obtain ecient schemes 
de nitions traitor tracing scheme consists components user initialization scheme data supplier add new users 
data supplier meta key de nes mapping 
set possible users number bits personal key users gets 
user joins receives personal key 
constructions consists subset decryption keys larger set keys 
encryption scheme 
data supplier encrypt messages decryption scheme 
user decrypt messages 
personal key user message 
schemes messages encrypted block block encrypted block contains enabling block cipher block 
decryption process consists preliminary decryption encrypted keys enabling block combining results obtain common key nally decryption cipher block 
traitor tracing algorithm con pirate decoder determine identity traitor 
assume contents pirate decoder viewed traitor tracing algorithm accessed black box test decrypts input ciphertext 
assume pirate decoder reset original state assume self destruction mechanism detects traitor tracing algorithm 
encryption plaintext blocks results message consists enabling block cipher block 
cipher block contains plaintext block encrypted encryption algorithm keyed random block key unique block 
enabling block contains encryptions shares block key legitimate user personal key decrypt shares reconstruct block key 
adversary wants decrypt message break encryption scheme cipher block information enabling block try learn information enabling block help decryption process 
assume hard break underlying encryption scheme interested preventing attacks kind 
fully resilient tracing assume adversary cooperation coalition users uses keys construct decoder 
able trace coalition members 
intuitively call scheme fully resilient trace high certainty traitors helped build decoder break underlying encryption algorithms 
accurately say system fully resilient pirate decoder runs time holds trace traitors helped building decoder break underlying encryption algorithms time threshold tracing applications pirate decoder decrypt probability close 
example tv broadcast partitioned short segments segments encrypted independently customers buy decoder decrypts segments 
scenarios concentrate decoders decrypt probability greater threshold 
scheme called threshold scheme decoder break underlying encryption algorithms decrypts probability greater trace traitors helped building 
obvious preliminary requirement tracing traitors schemes supply secure encryption 
adversary information keys able decrypt encrypted content 
intuitively security de nitions claim adversary keys able decrypt escape traced scheme insecure encryption scheme adversary keys 
de nition fully resilient tracing scheme coalition users 
adversary subset keys users able decrypt content sent tracing traitors scheme time probability greater scheme called fully resilient satis es security assumption 
security assumption statements holds 
data supplier able trace probability users exists adversary uses black box input enabling block cipher block tracing traitors scheme 
reveal content encrypted cipher block time linear length input probability probability taken random choices data supplier appropriate random choices adversary tracing algorithm 
de nition fully resilient tracing scheme scheme called fully resilient satis es de nition holds 
de nition threshold resilient tracing scheme scheme called threshold resilient satis es de nition assume underlying encryption algorithms secure assume probability adversary knows ciphertext break encryption content negligible 
fully resilient scheme data supplier trace traitor nds pirate decoder adversary decrypts non negligible probability 
threshold scheme data supplier able nds decoder decrypts probability greater non negligible di erence 
distinguish types schemes rst type called open schemes treats circumstances decryption schemes users public domain decryption keys information kept secret 
second type actual decryption scheme keys kept secret called secret schemes 
particular open schemes publicly known keys base set keys contained decoder secret schemes information kept secret 
goal adversary prevent traitors identi ed way ensure 
clearly adversary task harder open scheme compared secret scheme 
hand secret schemes pose additional security requirements data supplier site 
ecient fully resilient schemes types 
open schemes fully resilient trace traitors 
constructions give ecient schemes secret schemes 
threshold schemes fall category secret schemes schemes better performance 
clearly advantageous secret schemes practice real implementation 
addition application enables threshold schemes preferable provide better performance 
overview results denote upper bound number traitors 
enabling block consists encryptions denotes number keys comprising user personal key 
describe resilient traceability schemes 
concise listing personal key length data redundancy overhead required scheme appears table 
schemes usage hash functions combined private key cryptosystem require public key operations 
information hash functions applications see 
basic usage hash functions scheme key data redundancy decryption trivial open level log log log open level log log log log log log secret level log log log secret level log log log log log log threshold level log threshold level log log log log log log log log log table comparison di erent tracing schemes 
parameters include number copies maximum number copies known pirates probability pirates traced 
threshold schemes designed constant threshold 
assign decryption keys authorized users 
assignment guarantees combination keys taken personal keys coalition traitors property combination enables decryption far personal key innocent non traitor user 
rst schemes fully resilient trace sources keys pirate decoder able decrypt non negligible probability 
note scheme length personal key stored user number operations user perform order reveal transmitted secret 
threshold schemes useful decoders decrypt probability greater parameter 
rst scheme simplest 
open scheme level hash functions 
hash function maps users set decryption keys 
keys kept secret mapping user mapped key publicly known 
personal key user consists log decryption keys number decryptions user perform order reveal secret 
enabling block consists log encrypted keys 
second scheme open level scheme 
scheme complicated reduces size enabling block log factor 
set rst level hash functions maps users set size function induces partition users subsets 
subsets mapped separately second level hash functions log decryption keys 
scheme requires log log keys decryption operations user enabling block log log encrypted keys 
third scheme level secret scheme 
assume hash functions decryption keys kept secret 
secret scheme implies adversary know keys correspond innocent user 
positive probability adversary able produce pirate decoder prevents identi cation traitor 
keys known collaborators enable construction wrongly pirate decoders choosing set improbable 
furthermore event occurs adversary know case 
personal key scheme consists log 
log log keys resilient scheme decryption keys user perform number decryptions 
enabling block log encrypted keys 
fourth scheme secret level scheme 
saving going level levels size enabling blocks personal key number required decryption operations log log enabling block contains log log encrypted keys 
compared previous scheme performance parameters smaller factor log scheme ecient log 
schemes threshold schemes pirate decoders decrypt probability greater pre de ned parameter fth scheme level threshold scheme 
personal key contains log decryption keys order key length level secret scheme constant sucient applications 
main improvement data redundancy overhead encrypted keys depend requiring user perform single basic decryption operation order decrypt secret 
sixth scheme level threshold scheme reduces personal key length expense slightly increasing data redundancy overhead 
complexity depends parameter de ne log log 
constant key length minimal personal key composed log decryption keys enabling block contains log qb basic encryptions user perform log decryptions 
schemes constructed choosing hash functions random probabilistic arguments assert desired properties hold overwhelming probability 
schemes constructive properties simplest scheme veri ed 
note need represent store function 
required user stores outcome function evaluated user id open fully resilient schemes simple open level scheme describe detail rst tracing scheme starting simple case single traitor 
case data supplier generates log keys fa log log convenient view keys organized matrix log rows columns see gure 




keys simple resilient scheme user log bit identity personal key user set log keys fa log log th bit identity 
think personal key selecting key row 
di erent users row di er selected keys tracing scheme encrypt secret regard key cipher block decrypted 
data supplier encrypts enabling block 
decoder typically rst decrypts enabling block uses decrypt cipher block 
secret encrypted enabling block follows split log secrets log data supplier chooses random log bit wise xor 
value encrypted keys th row encryptions added enabling block 
user reconstruct decrypt hand pirate decoder contain key row log remain unknown consequently obtained 
traitor involved keys stored pirate decoder identical keys traitor decoder 
pirate decoder uniquely identi es single traitor 
dealing larger coalitions generalize scheme 
matrices keys rows columns parameter speci ed see gure personal key user contains keys key row 
secret expressed bit wise xor random 
encrypted keys th row 
able nd non negligible probability pirate decoder contain key row 
far description similar previous resilient scheme 
major diculty encounter procedure detecting traitors 
case pirate decoder contain keys di erent members coalition 
required arrange personal keys way keys selected user di erent selected users rows vast majority rows 
best way know achieve goal assign keys users row independently random 
words row associated random hash function chooses entry column assigned user hash functions associated di erent rows independent 
detailed description scheme 
initialization set hash functions chosen random data supplier 
hash function maps ng set set random keys chosen row 
set fa assigned th row 
personal key user set fa distributing secret key data supplier encrypts key keys nal secret key bit wise exclusive shares authorized user key decrypt compute parameters memory required user keys 
enabling block encode secret key consists encryptions totaling encrypted keys 
tracing assume pirate decoder decrypts content probability set locations matrix containing keys known pirate created consider keys part input contains key row possible perform detection traitors process described sequel 
claim encryption scheme insecure simple decoder contain key uses black box decrypt content probability able prove reduction tracing scheme similar scheme di erence scheme directly encrypt cipher block secret value sent clear enabling block 
receiver decrypts value enabling block calculates exclusive uses result decrypt cipher block 
simplicity schemes parameter schemes replaced schemes prove reduction 
overhead schemes negligibly greater overhead schemes 
reduction decoder operates scheme rows containing keys set locations rows construct decoder operates scheme rows contain key 
input enabling block containing value cipher block 
decoder chooses random values value chooses random keys generates row contains encryptions keys 
generates enabling block contains rows rows enabling block received input value 
decoder inputs enabling block cipher block keys expects receive taken set rows generated 
input valid encryption content encrypted cipher block distribution keys original input 
succeed decrypting probability assume decoder contains key row 
con pirate decoder key set row exposed 
claim suces experiment decoder purpose necessary take decoder apart reverse engineer 
assumption possible experiment decoder box reset initial con guration 
extracts keys operates follows 
perform experiment ij prepare normal encryption session encrypting key keys fa provide random strings 
fraction times box decrypts correctly experiment ij assumption non negligible box useless normal execution negligible key completely missing 
deduced ij set contains keys key set 
denote key minimal second subscript users contribute key pirate decoder 
users set identi ed marked 
set includes traitor possibly innocent users 
count marks user carried 
user largest number marks number declared suspected traitor 
goal show choice hash functions coalitions size pirate decoders construct suspect innocent user 
clearly traitors contributes keys show probability choices hash functions innocent user marked times negligible 
prove existence hash functions desired properties 
consider speci user say user speci coalition traitors include user 
hash functions chosen random value uniformly distributed key uniformly distributed coalition gets keys total 
probability keys 
zero random variable 
mean value smaller number marks user gets 
user exposed suspect traitor gets marks 
version cherno bound see theorem bound probability mutually independent random variables case substituting bound considers speci coalition speci innocent user 
demand random scheme expected number pairs coalition innocent user coalition frame user 
exists scheme coalition frame user 
take satisfying 

suces take log parameter choice hash functions coalition authorized user coalition innocent user tracing algorithm 
summarize result theorem theorem open fully resilient traceability scheme user personal key consists log decryption keys enabling block consists log key encryptions user perform log decryptions order reveal secret 
discussion shows existence open resilient traceability schemes provides randomized method constructing scheme works high probability 
theorem suggest explicit construction desired properties construction veri ed eciently 
idea examine pairs users check number functions 
number smaller conclude coalition users covers fraction keys property stronger property required scheme 
considering pairwise di erences phrase construction problem problem coding theory see construct code codewords length alphabet size distance codewords goal construct code small possible 
known explicit constructions match probabilistic bound 
best known construction see 
small constructions yield scheme log log 
open level scheme level traceability scheme described subsection thought iterating previous construction times 
complicated simple scheme saves factor broadcast overhead 
theorem open fully resilient traceability scheme user personal key consists log log en decryption keys enabling block consists ek log log en key encryptions 
user perform log log en decryptions order decrypt secret 
proof simple scheme proof existential know eciently verify scheme 
convenient view keys organized blocks 
block matrix parameters speci ed 
important note entry matrix contains log keys see gure 
block user gets key row 
keys taken column 
secret key constructed way forces decoder satisfy constraint block exists column row decoder contains key entry intersection column row 
words decoder contains keys certain column block 
describe system detail 
initialization set rst level hash functions mapping ng chosen independently random 
function map users columns ith block 
block row second level hash function maps ng log kg 
log log 

log 
log 
log 

log 

log 
log 

log 
log 
log 

log 
log 
log 

log 

log 
log 

log 

log 
log 

log 
log 
log 

log 

log 
log 

log keys level scheme chosen independently random 
function map users speci elements entries jth row ith block user assigned certain column block mapped elements column 
user ng receives keys keys block 
keys keys column rst block keys column th block 
distributing secret key data supplier chooses random independent keys shares secret key xor divided 
shares correspond entries ith block share intersection row column 
shares random subject constraint exclusive shares column equal denote share entry row column block shares satisfy xor xor 
xor encryptions share log keys entry th block added enabling block 
nd key needs shares block column row key entry decoder 
user keys personal key 
enable decrypt nd possible reconstruct compute secret key parameters personal key consists keys 
total number key encryptions enabling block ek log tracing assume pirate decoder decrypts content probability holds block exists column contains key intersection rows detection traitors process described paragraph detects traitors 
bit sensitivity xor operation guarantees possible construct decoder uses able decrypt content probability knowing keys 
con pirate decoder assume stores subset keys block contains keys intersection column rows 
subset exposed procedure block column enabling block encryptions keys columns block column replaced random data 
row entry log build replacing random data encryptions block rst positions entry 
enables decryption non negligible probability row enabling block allows correct decryption negligible probability 
location key caused maximum decrease decryption probability th row column block mark users users marked log times block suspects user suspect largest number identi ed potential traitor 
goal want show choice hash functions coalitions innocent user identi ed traitor 
consider speci user say user speci coalition traitors include user 
rst bound probability user suspect rst level hash function partitions users subsets fh expected maximum number traitors subsets log log log probability user hashed subset log traitors log 
ek log ek log log ek log log log note procedure relies fact block column pirate decoder continues decrypt corrupt entries enabling block correspond keys block come column case search minimum set columns property holds analysis holds 
denote consider conditional probability space contains log traitors 
conditional space keys pirate decoder come personal keys 
tracing algorithm mark user respect th row block 
range contains log elements 
log probability user marked respect th row block log 
expected number times user marked respect functions log 
cherno bound estimate probability user suspect set user marked respect jth row block 
log 
cherno bound log log log log setting log conditional probability user suspect log 
probability condition log traitors mapped function happening 
total unconditional probability user suspect 
check probability user suspect blocks 
user suspect 
probability user suspect fewer denote block bad contains column log traitors mapped 
block traitors declared suspect 
denote number blocks 
show probability small 
previously showed probability log traitors mapped column probability block bad 
block bad 
probability bad blocks block member suspect row marked 
contains traitors traitors suspect 
probability user mistakenly identi ed traitor case smaller note de nition bad block depend user identity course depend 
probability possible coalitions size blocks user mistakenly identi ed smaller 

probability coalition blocks 
setting log en total probability smaller 
means exists choice hash functions user mistakenly identi ed traitor 
resulting open traceability scheme parameters log log en ek log ek log log en 
secret fully resilient schemes secret schemes ecient open schemes traitors know keys users received 
set keys coalition traitors includes large part keys innocent user traitors know keys install pirate decoder keys speci user 
secret level scheme rst proposed scheme level 
major source saving suces map users set keys set size open scheme 
coalition size contain key speci user constant probability 
traitors know key key choose insert pirate decoder high probability key authorized user 
initialization users unique identity ng 
parameter 
set hash functions chosen independently random 
hash function maps ng set random keys fa hash functions kept secret 
user receives initialization indices values keys fh distributing key data supplier encrypts random keys nal key bit wise exclusive 
authorized user key decrypt compute parameters memory required user keys 
data redundancy overhead distributing key 
tracing shown level open scheme pirate decoder contain key row encryption schemes secure 
show trace traitors decoder contains key row 
con pirate decoder set keys contained extracted methods described level open scheme 
contains keys set denote key tracing algorithm knows values functions identify mark users 
user largest number marks exposed 
goal want show coalitions probability exposing user traitor negligible 
clearly traitors contributes keys pirate decoder 
shown probability user marked times negligible 
consider speci user say speci coalition traitors include user 
hash functions random value uniformly distributed values hashed names coalition members 
probability value extracted pirate decoder equals 
zero random variable mean value 
version cherno bound section see theorem 
choose satisfying 
log 
coalition holds probability frame innocent user theorem sums construction 
theorem fully resilient secret traceability scheme user personal key consists 
log decryption keys enabling block consists 
log key encryptions 
user perform 
log decryptions order decrypt secret 
secret level scheme level scheme improves performance level scheme previous section log di erence scheme open level scheme section sucient mapping rst level hope successful happens probability level open scheme mappings 
appendix somewhat simpler level secret scheme achieves slightly ecient performance 
basic idea construction randomly map users small range probability mapping small threshold traitors smaller 
independent tracing scheme secure probability traitors employed value range 
error probability construction uses random mapping domain ng range size ek ln ek 
xed set traitors probability traitors mapped ek ek ln ek ek ek ln ek ek ln ek setting log implies probability 
mapping chosen continue constructing secret resilient level scheme section set preimages ek initialization phase user receives personal key secret distributed ek 
detection traitors performed follows assume pirate decoder contains keys rows certain possible build decoder contains key decrypt content probability 
required identify block decoder contains key row 
keys identi ed source keys methods level scheme 
perform prepare valid encrypted message choose random order 
step construct message replacing random data parts message encrypted keys ith chosen order 
feed message pirate decoder 
message valid message pirate decoder decrypt high probability message ek contains random data decrypted non negligible probability 
message caused maximum decrease decryption probability ek 
decryption keys stored decoder 
start message change keys ith key extraction procedure described level scheme nd set containing key row ith contained pirate decoder 
assume traitors mapped event happens probability 
conditional probability innocent users search traitors process described probability subset traitors mapped assumption size manages innocent user 
resilient probability 
unconditional probability user wrongly number keys user gets scheme simply number keys user gets resilient scheme log log 
size enabling block ek times size enabling block resilient scheme ek log log ln ek log ln ek ln ek obtain theorem theorem fully resilient secret traceability scheme user personal key consists log decryption keys enabling block consists log ln ek ln ek encryptions log 
user perform log decryptions order decrypt secret 
note large compared ln ek ln ek small 
example smaller 
get slightly better results consider fact handle users 
expected number users mapped certain nb ek probability number users mapped certain larger small 
planned users resulting lower complexity 
threshold schemes performance guarantee fully resilient tracing schemes overkill applications 
fully resilient schemes trace source keys decoder uses secure encryption function decrypts non negligible probability 
applications obvious pirates sell pirate decoders decrypt probability close decoders tv transmissions 
applications possible design tracing schemes trace source keys decoders decrypt high probability necessarily perform decoders decrypt lower probability 
section introduces schemes cient fully resilient schemes refer table comparison complexity di erent threshold schemes ecient fully resilient scheme 
recall de nition 
assumed basic encryption scheme decrypted probability better decryption keys 
fully resilient schemes designed trace source keys decoder decrypts probability better target threshold schemes trace source keys decoder decrypts probability better parameter advantage pirate decoder decrypting messages success probability decoder contain decryption keys 
fully resilient schemes designed trace 
probability assumed negligible assumed large order pirate decoder useful 
complexity threshold schemes depends value parameter ecient larger values schemes secret sense set keys user receives unknown users 
bene threshold tracing schemes reduction data redundancy overhead number decryptions receiver perform length personal key short secret fully resilient schemes 
level threshold scheme results short data redundancy overhead requires receiver perform single decryption operation 
key marginally longer secret level scheme section 
case level threshold schemes compared level threshold schemes key longer 
particular level threshold scheme section achieves better eciency best scheme section complexity parameters 
data redundancy overhead personal key length parameterized tradeo 
possible set parameter value obtains best tradeo complexity measures instance entry table demonstrates reasonable tradeo 
level threshold scheme basic scheme similar level secret scheme exception secret divided shares shares parameter encrypted rows chosen uniformly random 
rows chosen independently enabling block indices sent block decoder know keys 
legitimate user key row recover pirate decoder contain key rows obtain data redundancy overhead composed encryptions keys rows addition names rows chosen 
note decryption process requires operations receivers perform decryptions decryptions fully resilient schemes 
level secret fully resilient scheme section row contained keys setting number rows log suces get probability tracing traitors 
threshold scheme depends parameter range possible trace source keys pirate decoder contains keys fraction rows 
number shares secret divided parameter set decoder contains keys fraction rows gain advantage better nding pirate decoder gains advantage better contain set key rows 
case traitor contributes keys set comparison innocent user expected keys included set 
probability tracing traitor calculated analysis secret fully resilient level scheme substituting number rows information 
obtain resilient system set number rows number rows fully resilient scheme log 
fix fraction rows enables trace pirate 
parameter set ensure probability random rows contained subset rows order achieve decryption probability greater decoder keys fraction rows 
set value parameters observe probability pirate decoder keys rows contains keys random rows setting log log log suces probability example possible set number rows accordingly set 
broadcast center broadcast secret encrypted keys single row chooses randomly 
data redundancy overhead 
detection traitors assumed contains keys rows generate decoder contain key decrypts probability possible expose keys contained con decoder treating black box fully resilient schemes choose random order entries matrix 
start valid message step take message create message replacing data encrypted key ith entry chosen order random data 
feed message decoder 
set contain keys entries numbered higher 
rst message pirate decoder contains keys fraction rows 
step identi ed step probability decoder correctly decrypt reaches decreases factor 
happens conclude key corresponding entry contained pirate decoder repeat procedure nd key rows 
choose key row 
announce user contributed maximum number keys set number traitor 
practical purpose parameter set constant 
schemes subsection building blocks level schemes function parameters 
results regarding level threshold schemes summed theorem 
rst state results parameter 
increases key length decreases data redundancy overhead increases 
state results theorem threshold resilient scheme parameter values personal key consists log keys data redundancy overhead log log log keys 
user perform log log order decrypt secret 
set personal key consists log keys data redundancy overhead keys receiver perform single decryption order reveal secret 
scheme displays tremendous improvement data redundancy overhead personal key quite long length little larger fully resilient level secret scheme 
subsection presents level threshold schemes balance complexity parameters tradeo key length data redundancy overhead 
level threshold schemes level threshold schemes constructed level threshold schemes way fully resilient level secret schemes constructed 
rst basic construction displays tradeo personal key length data redundancy overhead shorter key length level threshold scheme 
change parameters construction obtain schemes shorter key length price increasing little data redundancy 
basic construction construction uses random mapping ng ek constructs ek level secure coalitions traitors uses map user note detection process sucient change entries just single row check entries probability decreases decoder contain rows needed probability decryption output correct decryption result probability data encrypted keys row random decoder correct output probability keys rows impossible decide keys row contained decoder 

fully resilient schemes required probability traitors mapped ek ek ek ek inequality satis ed log ek log required property traitors success probability traitors decrypting secret greater qb ek success probability adversary keys traced probability 
traitors advantage greater pirate decoder decrypt advantage better stages initialization distribution secrets straightforward 
built way level schemes previous subsection 
parameter de nes minimal number rows enable decryption probability better pirate decoder decrypts probability greater contain keys fraction rows 
tracing procedure extracts keys pirate decoder performed stages 
nd suspicious starts valid message fully resilient secret level scheme repeatedly changes information encrypted keys ith random data 
decryption success probability dropped 
checked stage start message apply method tracing sources keys level threshold scheme 
traitors mapped suspect nally announced traitor probability 
obtain theorem theorem threshold resilient scheme parameter values qb ek log ek log length personal key log basic keys 
data redundancy overhead ek log ek qb log basic encryptions 
receiver perform log ek qb log decryptions order decrypt secret 
key longer key fully resilient secret level scheme factor data redundancy overhead substantially shorter 
comparing level threshold scheme value parameter personal key changes factor data redundancy overhead changes factor 
log ek log 
key shorter data redundancy overhead larger 
increase data redundancy overhead relatively moderate denote ratio key length scheme level scheme data redundancy overhead increases factor log log 
note minimum value qb ek smaller minimum value level scheme 
set value data redundancy overhead minimized ek encryptions key length maximal ek log 
longer values level scheme factor exactly 
level scheme features tradeo length personal key data redundancy overhead 
extreme short key longer data redundancy overhead key length maximal data redundancy overhead minimal equal constant factor performance level threshold scheme minimal data redundancy overhead 
note level secret scheme expected number users mapped smaller factor ek 
de ned smaller set users length personal key smaller 
shorter personal keys section presents threshold scheme improves complexity parameters ecient fully resilient scheme previous tracing scheme great improvement data redundancy decryption overheads increased bit length personal key 
decrease length personal keys enabled follows construction ek required probability users mapped previously values equal 
personal key composed log keys data redundancy overhead ek log ek qb log basic encryptions 
values satisfy inequality ek ek ek ek assume 
previous inequality satis ed 
log log log obtain theorem theorem threshold resilient scheme parameter values qb ek log log log length personal key 

log basic keys 
data redundancy overhead log ek qb log basic encryptions 
receiver perform log ek qb log decryptions order decrypt secret 
increases personal key length decreases data redundancy overhead increases 
limits values length personal key log log log 
log basic keys 
data redundancy overhead ek log log log log ek log basic encryptions 
number decryptions receiver perform log ek log 
scheme shortest personal key schemes data redundancy overhead longer basic level threshold scheme 
data redundancy shorter fully resilient schemes 
lower bounds open schemes section derive lower bounds total number keys number keys user scheme properties open schemes 
schemes set keys fs user gets subset size require coalition users traitors fi able user constructing subset coalition keys equal user subset resilient scheme property fact stronger property intersection user subset union coalition subsets size subset 
requirement implies di erent indices hold words system subsets universe elements 
subset contains elements 
subsets property contained union di erent subsets 
set systems union property investigated erd os frankl 
theorem proposition follows ast fn log log log ng 
proposition follows log log lower bounds imply theorem open resilient traceability scheme providing users keys manner satis es union property holds fn log log log ng log log lower bounds roughly factor smaller best construction open traceability system 
schemes tracing users leak set keys coalitions corrupt users 
fully resilient schemes trace source keys decoder decrypt better probability breaking underlying encryption algorithms 
ecient fully resilient scheme section enabling block length log 
threshold schemes trace source keys decoders advantage decryption probability just breaking underlying encryption algorithms greater lower bound 
threshold scheme ecient terms data redundancy overhead section 
enabling block contains basic encryptions regardless number users error probability 
linear dependency allows resiliency large coalitions 
alon naor naor roth construction asymptotically low rate error correcting codes pseudo random graphs ieee transactions information theory vol 

alon spencer probabilistic method wiley 
anderson kuhn tamper resistance cautionary note usenix electronic commerce workshop oakland 
biham shamir di erential fault analysis secret key cryptosystems proc 
advances cryptology crypto verlag lncs 
boneh demillo lipton importance checking computations proc 
advances cryptology eurocrypt 
boneh franklin ecient public key tracing scheme proc 
advances cryptology crypto springer verlag lncs 
boneh shaw collusion secure fingerprinting digital date ieee transactions information theory vol pp 

canetti garay micciancio naor pinkas multicast security taxonomy ecient constructions proc 
infocom vol 
pp 
new york ny march 
carter wegman universal classes hash functions journal computer system sciences 
chor fiat naor tracing traitors proc 
advances cryptology crypto verlag lncs 
cox kilian leighton secure spread spectrum watermarking multimedia ieee trans 
image processing 
dwork naor digital self enforcing protection digital information th symposium theory computation 
erd os frankl families nite sets set covered union israel math 

fiat naor broadcast encryption proc 
advances cryptology crypto 
fiat dynamic traitor tracing proc 
advances cryptology crypto springer verlag lncs 
fredman koml os szemer edi storing sparse table worst case access time journal acm vol 
goldreich goldwasser micali construct random functions acm 
kocher ja jun di erential power analysis proc 
advances cryptology crypto springer verlag lncs 
mehlhorn data structures algorithms sorting searching springer verlag 
sloane theory error correcting codes north holland amsterdam 
naor pinkas threshold traitor tracing proc 
advances cryptology crypto springer verlag lncs 
trials traced traitors workshop information hiding cambridge uk lncs springer verlag 
stinson wei combinatorial properties constructions traceability schemes codes siam discrete math 
staddon combinatorial study communication storage traceability broadcast encryption systems ph university california berkeley 
wallner harder key management multicast issues architectures rfc june 
wegman carter new hash functions authentication set equality journal computer system sciences 
appendix secret level scheme simpler version appendix contains alternative proof security level secret scheme 
main di erence proof proof section users mapped ek ek 
proof simpler extra parameter overhead scheme slightly larger 
construction uses random mapping domain ng range size ek xed set traitors holds probability traitors mapped ek ek ek ek setting log log ek log log ek log implies probability smaller 
mapping chosen construction uses resilient construction section set preimages ek detection traitors performed level scheme section 
resiliency scheme fact traitors mapped happens probability probability user say probability subset traitors mapped assumption size succeeds 
number keys user gets scheme simply number keys user gets resilient scheme 
size enabling block ek times size enabling block resilient scheme 
obtain theorem theorem resilient secret traceability scheme user personal key contains log decryption keys enabling block consists log encryptions log ek log 

