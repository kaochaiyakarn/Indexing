traffic analysis attacks trade offs anonymity providing systems adam back ulf ller anton zero knowledge systems ulf anton zeroknowledge com discuss problems trade offs systems providing anonymity web browsing generally communication system requires low latency interaction 
focus main systems freedom network 
freedom efficient reasonably secure denial service attacks vulnerable generic traffic analysis attacks describe 
hand look simple theoretical model protects traffic analysis attacks point vulnerable denial services attacks efficiency problems 
light observations discuss trade offs faces trying construct efficient low latency communication system protects users anonymity 
years cryptographers studied ways providing confidentiality authentication integrity parties wish communicate securely 
protocols provide properties thoroughly studied efficient effective reasonably understood protocols 
desired property received attention protecting identity partners communication 
important property example mere fact competing companies exchanging messages leak valuable information indication companies negotiating merger 
property desired internet users users want monitored surfing habits logged preserved unauthorized parties order create dossier contains extensive information stored long periods time 
focus systems providing anonymity web browsing generally areas low latency interactive communication needed email protocols example generally require 
protocols efficient hide identities communicating parties url certain user accessing 
overview examine freedom network describe traffic analysis attacks system generalize anonymity providing systems 
simplified threat model turns useful 
take look theoretical model guard traffic analysis attacks describe 
interesting concept analyze simple supports interactive stream oriented communication offers security 
implements synchronicity asynchronous network allows protect traffic analysis attacks know 
inefficient vulnerable catastrophic denial services dos attacks easy freedom withstand dos attacks better efficient 
point trade presently exists anonymity providing systems wants balance traffic analysis resistance performance dos resistance bandwidth cost 
organization section discuss previous theoretical practical relating anonymity providing systems demanding low latency communication 
practical issues regarding deployment systems explored section 
section give high level description parts freedom relate anonymous browsing ignoring extra functionalities cookie management mail pseudonymity 
section define anonymity interactive setting 
describe section traffic analysis attacks freedom threat model 
section describes discusses advantages disadvantages 
section describes tradeoffs pointed earlier sections 
open problems section 
related chaum describes way enable participant anonymously broadcast message dc net 
message destined specific user encrypted user public key 
message received parties recipient anonymity trivially maintained 
unfortunately method serious drawbacks participant send message time throughput limited worst case participant deny services constantly sending messages dc net complexity communication network topologies great number participants user needs share secret key grow large active attacks allow malicious users compute legitimate messages gain information 
done solve problem dos detecting replacing reliable broadcast assumption protecting active attacks resulting protocols suffer efficiency problems participant send physical sense participants want send logical sense 
solution problem communication time complexity quadratic size anonymity set making infeasible practice 
chaum argues dc nets efficient ring topology local networks exist large scale networks internet 
secure multi party computations related problem received considerable attention 
multi party computation protocol hide participants communication partners 
general multi party computations inefficient practice regards communication complexity solutions rely existence synchronous network secure dynamic adversaries 
multi party computations secure asynchronous network complex see 
chaum introduced idea mix net 
mix node server network receives certain number messages modifies cryptographic transformation outputs random order way correlate output message belongs input message aid mix node messages passed simultaneously 
rackoff simon define provide proof security system uses mix nodes 
unfortunately setting practical assume synchronous network mix nodes process messages time put constraints routes 
additional done mix nets proposed solutions rely synchronous network reliable broadcast channels public key encryption extensively 
general mix nodes introduce latency messages delayed mix acceptable applications mail applications web surfing 
practical side systems providing fast anonymous interactive communication implemented 
anonymizer anonymizer com 
essentially server web proxy filters identifying headers source addresses web browsers requests seeing users true identity web server sees identity anonymizer server 
solution offers weak security log safeguarding single point vulnerability 
crowds consists number network nodes run users system 
web requests randomly chained number forwarded web server hosting requested data 
server see connection coming crowds users tell original sender 
addition crowds uses encryption protection provided attackers intercept user network connection 
encryption protect attacker cooperates nodes user selected encryption key shared nodes participating connection 
crowds vulnerable passive traffic analysis encrypted messages forwarded modification traffic analysis trivial attacker observe network connections 
eavesdropper intercepting encrypted messages user node chain cleartext messages final node web server associate encrypted data plaintext data length transmission time 
computations participants compute public function private inputs participants learn deduce form input result computation function onion routing system allows anonymous browsing 
system user sends encrypted data network called onion routers essentially real time mixes 
trusted proxy chooses series network nodes opens connection sending multiply encrypted data structure called onion 
node removes layer encryption reveals parameters session keys forwards encrypted remainder onion network node 
connection set application specific proxy forwards data onion routing network responder proxy establishes connection web server user wishes 
user proxy multiply encrypts outgoing packets session keys sent setup phase node decrypts forwards packets encrypts forwards packets contain server response 
spite similar design onion routing achieve traffic analysis protection ideal mix net due low latency requirements shown section 
case freedom network described section freedom similar mix nets attempt reorder packets 
mix net concept extended allow interactive special setting digital telephony retaining security features 
called mix channels provide anonymity users local exchange 
channel establishment message sent fixed sequence mixes cascade reserve bandwidth channel 
mix receive data time fill channel dummy traffic 
mix channels require large number connections initiated time equal length 
problem solved time slice channels users maintain fixed number active channels decide time slice channels actual communications generate cover traffic 
signal connection request connection requests broadcast callee local exchange 
results limiting anonymity set users 
practical considerations practical systems number reasons necessary protocol implementable existing internet routing infrastructure implementable adequate performance software existing network hosts participate system 
infrastructure cost replacing internet infrastructure prohibitively expensive 
rules systems relying communications links constructs available internet anonymous broadcast synchronous connections reliability 
real time mixes contrary ordinary chaum mixes process messages real time wait indefinite amount time order receive adequate number messages mix 
advantages cascades freely selected routes especially large number mixes compromised discussed 
node hardware cost adding hardware acceleration boards machines acting nodes expensive barrier entry 
hardware systems able perform public key operations ip packet high capacity links currently expensive 
internet bandwidth bandwidth supported internet hosts growing quickly appears remain case foreseeable 
rules systems relying public key operations packet mix net systems 
public components distributed trust security systems publicly performing third party audits hardware harder software systems published source 
custom hardware undesirable 
convenience convenient potential node operators participate network 
installing custom hardware convenient 
concern systems efficient deployable respect criteria 
freedom freedom network composed set nodes called anonymous internet proxies run top existing internet infrastructure 
communicate web server user selects series nodes route uses route forward ip packets stripped identifying information 
identifying headers stripped away proxy clients machine 
client uses route creation protocol set communications channel freedom network 
protocol enables client share secret keys node direction communication tell node previous nodes route 
protocol node sets pair anonymous connection identifiers acis unique associate previous nodes route 
node ends knowing previous nodes certain route 
client share keys nodes identified execution half certified diffie hellman key agreement node side certified client side anonymous 
node route simply forwards packets receives node route 
node receives packet replaces missing ip source address stripped sender special ip address called wormhole ip address 
nodes wormhole ip addresses exit points routes freedom network addition regular internet addresses 
user simply sent ip packets clear observer easily follow packets determine web server certain client communicating route 
prevent client multiply encrypts packet sends 
client encrypts ip packet key shares node network address translation techniques possible support multiple clients wormhole ip address 
result encrypted key shared penultimate node way key shares node 
client concatenates aci node resulting message sends result node route 
node decrypts layer forwards packet node defined aci rewriting aci second node 
done node turn ip packet exits wormhole web server 
web server sees packet ip headers corresponding wormhole 
multiply encrypting packets node apart view contents packets external attacker 
hide acis attacker determine nodes part certain route communication nodes encrypted symmetric encryption keys shared pairs nodes network 
client encrypts communication node 
symmetric keys obtained executing ephemeral diffie hellman key agreement 
simplified model anonymity model anonymity easily generalized describe anonymity complex network scenarios 
simplified version useful describing attacks providing simple context discussion 
consider users alice bob communicating web servers network anonymizing nodes call cloud 
see 
priori probability models suspicion communicating 
precisely priori probability alice communicating priori probability alice communicating priori information goal attacker distinguish events alice communicating alice communicating 
attacker learns new information confirm deny suspicions estimate probability alice communicating attack system said provide anonymity 
alice bob 
anonymity interactive setting traffic analysis freedom describe generic attacks apply freedom systems similar designs onion routing 
packet counting attack way discovering alice communicating find nodes forming route alice 
easy discover node communication alice goes 
accomplished sniffing packets alice isp router communication path alice node 
count number packets entering node originating alice examine number packets leaving 
payloads encrypted easily count long sniff packets node 
isp example 
determine second node possibly node forwarding alice packets 
bob connects node counting method distinguish packets relayed behalf alice bob 
applies method node arriving 
constant link padding traffic shaping way defending attack constant link padding 
constant link padding nodes nodes exchange constant number sized packets time unit 
constant link padding leaves system vulnerable types attacks latency attack described subsection 
constant link padding costly paying packet sent network 
traffic shaping implemented second generation onion routing system solution problem leaves system vulnerable certain attacks wei dai described 
wei dai attack traffic shaping wei dai describes generic attack systems allocate bandwidth users connections established implement traffic shaping nodes 
attacker creates anonymous route pair nodes suspects belong alice route 
attacker increases traffic route total traffic pair nodes reaches bandwidth limit set traffic shaping 
point nodes longer send padding packets real traffic throughput deduced subtracting traffic sent attacker bandwidth limit 
traffic shaping context refers nodes algorithm rolling average real traffic padding decay time period utilization 
latency attack latency attack probably difficult protect 
fact latency different routes differ latencies computed attacker 
compute latency communication path going user nodes server attacker simply needs system create route nodes communicate compute latency ping times communication subtract latency communication path attacker node closer attacker node precise timings communication won greatly re routed underlying network 
attacker compute latency alice node trivial controls node 
attacker computed set timings things attacker depending timings gathered 
routes clearly differ latency timings easy determine route alice 
statistical methods remove noise order obtain extra precision similarly methods proposed different context 
attacker notices spikes graph latency versus time alice route match spikes graphs routes latency measuring 
attack reveals fallacy theoretical definitions security 
example authors state links padded bandwidth limited constant rate ignore passive eavesdroppers technically correct passive eavesdropper defined access network regular user compute timings network implied definition theoretical 
attack model interesting definitely misleading 
latency attack pointed attack demonstrate attacker simply compute timings passive expect attacker practice system link padding bandwidth limiting links constant rate protect system easy traffic analysis attacks 
attack simpler timing attack attacker observes communication certain node 
creates route chosen set nodes route requests 
observes decrease throughput deduce nodes route created belongs route containing attacker binary style search find nodes belonging certain route 
route known attacker knows users node 
similar techniques identify individual user possible users node 
attack plausibly deniable internet traffic bursty 
variant attack exploit ip protocol implementation flaw temporarily delay packet delivery intermediate router necessarily node targeted route 
section assumption synchronous network implemented top asynchronous network 
routes created network entry exit node hops chosen uniformly random 
route creation requests mixed certain number route creation requests collected node shuffled acted 
user establishes shared key node route part route creation process key negotiation algorithm 
routes padded duration 
padding means originator creates padding recipient exit node strips padding intermediate nodes unable distinguish padding normal traffic just processes normal 
node uses scheduling algorithm consists waiting packet link forwarding packets packets arrived packets shuffled forwarded respective hops 
route destroy requests mixed 
network synchronous sense packet link sent may link pairs nodes number links pair nodes corresponds number routes currently active pair nodes 
presumed topology fully connected due randomized route selection process 
case topology considered public knowledge observer watch increase traffic neighbor pair route creations 
example routes node new route creations processed batch time unit node send packets time unit 
attacker observe effect route creations described map candidate exit nodes corresponding user 
route creations batched mixed traffic duration route fully padded synchronous distinguish passive attacks 
addition routes padded compromised nodes obtain information 
exit node able observe padding remove 
invulnerable active attacks selective dos scheduling algorithm ensures network reacts selective dos attacks shutting 
information public topology leaked process 
exposes easy catastrophic dos attack user forever shut entire network creating route sending packets 
performance suffers similar reasons scheduling algorithm means performance lowered worst case latency links pair nodes route fully connected case worst case latency entire network 
addition system robust absence intentional attackers amplify unreliability internet temporary outage link entire network unavailable 
tradeoffs hybrid version traffic analysis problem considered way optimization problem optimization criteria traffic analysis resistance performance resistance catastrophic dos bandwidth cost addition security anonymity systems affected size user base 
fact users system hidden anonymity action protected extent identity known set people online duration activity took place 
anonymity systems usability efficiency reliability cost security objectives affect size user base turn affects degree anonymity possible achieve 
interestingly networks provide theoretical security dc net vulnerable catastrophic dos attacks presuming adopt scheduling algorithm implement dc net internet scheduling algorithms adversely affect performance 
bandwidth consumption high worst dc nets 
freedom bandwidth efficient reasonable performance resistant catastrophic dos provides traffic analysis resistance weaker threat model 
remains open question exist hybrid alternate protocols resistance catastrophic dos reasonable bandwidth cost reasonable performance provide traffic analysis resistance aggressive threat model freedom 
traffic analysis area cryptography represented open literature 
examined theoretical practical network designs compared characteristics way optimization model 
pose question interesting protocols exist better trade offs practical implement deploy 
wei dai discussions adam general discussions traffic analysis 
andreas pfitzmann anonymous referees valuable comments bill advice presentation 
anonymizer com 
anonymizer 
berthold pfitzmann disadvantages free mix routes overcome 
proc 
workshop design issues anonymity unobservability july icsi tr pp 

bos boer detection dc protocol 
advances cryptology eurocrypt pp 

canetti studies secure multiparty computation applications 
phd thesis department computer science applied mathematics weizmann institute science june 
revised version 
chaum untraceable electronic mail return addresses digital pseudonyms 
communications association computing machinery feb 
chaum dining cryptographers problem unconditional sender recipient untraceability 
journal cryptology 
cramer damg ard hirt rabin efficient multiparty computations dishonest minority 
advances cryptology eurocrypt march vol 
lecture notes computer science springer verlag pp 

dai 
www eskimo com txt 
dai attacks freedom 
www eskimo com txt 
desmedt break practical mix design new 
advances cryptology eurocrypt lecture notes computer science international association research springer verlag berlin heidelberg pp 

gennaro rabin rabin simplified vss fast track multiparty computations applications threshold cryptography 
podc th acm sigact sigops symposium principles distributed computing 
goldberg freedom network architecture protocols 
www freedom net info index html 
goldreich micali wigderson play mental game completeness theorem protocols honest majority 
proceedings nineteenth annual acm symposium theory computing new york city may new york ny usa acm ed acm press pp 

goldschlag reed syverson onion routing anonymous private internet connections 
communications acm usa feb 
green traffic shaping argument 
article list 
jakobsson 
flash mixing 
podc th acm sigact sigops symposium principles distributed computing 
jakobsson practical mix 
lecture notes computer science 
jakobsson juels mixing small batches 
tech 
rep dimacs june 
thu jul gmt 
kocher timing attacks implementations diffie hellman rsa dss systems 
advances cryptology crypto koblitz ed lecture notes computer science international association research springer verlag berlin germany pp 

menezes van oorschot vanstone handbook applied cryptography 
crc press series discrete mathematics applications 
crc press corporate blvd boca raton fl usa 
abe length invariant hybrid mix 
advances cryptology asiacrypt lecture notes computer science international association research springer verlag berlin heidelberg pp 

park itoh efficient anonymous channel election scheme 
lecture notes computer science 
pfitzmann pfitzmann waidner isdn mixes untraceable communication small bandwidth overhead 
information security proc 
ifip sec pp 

rackoff simon cryptographic defense traffic analysis 
proceedings fifth annual acm symposium theory computing san diego california may pp 

raymond 
traffic analysis protocols attacks design issues open problems 
proc 
workshop design issues anonymity unobservability july icsi tr pp 

reiter rubin anonymous web transactions crowds 
communications acm feb 
smith multiparty computation unconditionally secure adversary structures 
cryptology socs school computer science mcgill university montreal canada 
syverson tsudik reed landwehr analysis onion routing security 
proc 
workshop design issues anonymity unobservability july icsi rr pp 

waidner unconditional sender recipient untraceability spite active attacks 
advances cryptology eurocrypt 
quisquater vandewalle eds lecture notes computer science international association research springer verlag berlin germany pp 

waidner pfitzmann dining cryptographers disco unconditional sender recipient untraceability computationally secure 
advances cryptology eurocrypt apr 
quisquater vandewalle eds vol 
lecture notes computer science springer verlag 
