aggregation trac pro ler cho akira kato sony computer science labs tokyo japan csl sony jp keio university fujisawa japan sfc wide ad jp university tokyo tokyo japan kato wide ad jp 
aggregation trac pro ler targeted near real time long term wide area trac monitoring 
adapts spatial trac distribution aggregating small volume ows aggregates achieves temporal aggregation creating summary summaries applying algorithm outputs 
set scripts archiving visualizing summaries di erent time scales 
need prede ned rule set capable detecting unexpected increase unknown protocols dos attacks considerably simpli es task network monitoring 
aggregates identi ed pro led possible pro le records control aggregates best ort trac 
possible solution propose technique preferentially drop packets aggregates volume 
prototype implementation demonstrates ability protect network dos attacks provide rough fairness aggregates 
trac monitoring essential network operation order understand usage network identify abnormal conditions threatening activities 
longer term monitoring needed capacity planning tracking trends 
flow trac pro ling packets categorized trac types usage information recorded type commonly trac monitoring 
flow trac monitoring combined visualization techniques provides powerful tool understand network conditions 
weakness common existing ow monitoring tools identify trac types prede ned lter rules needed 
filter rules classify packets examining elds packet header 
priori de nitions trac types packets identi ed 
monitoring facing diculty identifying new protocols dynamically assigned ports 
known trac types practical list possible document appear proceedings published springer verlag lncs series 
springer verlag fig 

aggregation pro ler concept small entries aggregated aggregates combinations rule set minor trac types left unde ned remain ed 
hand current internet exposed denial service dos attacks dos attack detection highest priority network operation 
rule approach lacks ability detect dos attacks forged packets arbitrary trac types 
monitoring wide research backbone years badly need adaptive monitoring tool trouble detection usage reporting long term trend analysis 
focus trac measurement aid network operation concise timely summary reports important precise detailed reports 
developed software package called 
uses trac pro ling technique records maintained pre tree compact summary produced aggregating entries 
powerful feature produce summary summaries applying algorithm outputs 
derivative summaries produced di erent time scales desirable speci monitoring purpose 
set scripts developed visualize summaries 
possible extend pro ler protective measure dos attacks 
targeted near real time long term wide area trac monitoring 
automatic aggregation pro ling approach provides rough usage reports may precise complementary existing tools 
overview core idea aggregation pro ling aggregate ow entities pro ling 
small volume ows aggregated volume aggregate large identi ed 
summary output reports pro le aggregates 
entry address pro le single host consumes certain portion total trac aggregate host entry small aggregate non negligible 
limited number entries produced fails report high volume entries 
illustrates concept 
tree aggregation left corresponding tree aggregation right 
node tree shows address space represented address pre pre length 
leaf node corresponds single address 
size node shows trac volume node 
usage information recorded leaf nodes aggregated shaded internal nodes right tree summary reports remaining nodes right tree 
summary pro le 
important produce concise summary pro les 
trac pro le detailed important symptoms buried excessive data left unnoticed 
summary pro le produced compact small entries aggregated pro le 
produces separate pro les source addresses destination addresses source protocols destination protocols 
ip addresses designed hierarchical natural apply aggregation 
ipv ipv supported address pro les 
protocol numbers hierarchical technique identify port ranges 
concatenate ip version protocol number tcp udp port number create bit key protocol pro le 
summary reports total byte count aggregate 
separated pro les ective capture hostile activities 
victim distributed dos attack easily identi ed destination address pro le 
originator port scanning identi ed source address pro le 
random attack identi ed range addresses long locality exists targets 
locality unusually low symptom random attack 
spatial aggregation 
basic algorithm spatial aggregation quite simple 
resource constraints memory consumption execution time pro le address protocol occurrence packet aggregate entries counter value aggregation threshold 
approach acceptable post analysis saved packet trace 
near real time monitoring approximate algorithm exchange precision managing xed number nodes tree variant lru replacement policy 
leaf node reclaimed counter value node aggregated parent node 
advantage approach counter values lost resolution reduced 
produce summary output walks tree post order aggregates nodes counter value node aggregation threshold outputs node information counter value threshold 
continue pro ling reset counter node current tree lru list kept tact cache pro ling period 
temporal aggregation 
algorithm produce summary summaries 
read summary outputs produce new coarse grained summary 
instance hour long summary created minute long summaries 
initial summary represent summary directly produced non aggregated sources captured packets 
derivative summary represents summary produced summaries 
method suitable archiving pro les summary created di erent time scales set archived summaries 
possible control resolution changing aggregation threshold 
process generate archive derivative summaries easily automated 
network operators usually look coarse grained summaries look ne grained summaries necessary 
archiving visualization utilities 
summary output plain text format easily processed various scripts 
archiving script periodically invoked generate archive derivative summaries di erent time scales hourly daily monthly yearly summaries 
size summary kb small amount disk space required archiving summaries 
text summaries converted variety visual images 
developed set scripts visualization aid operators nd unusual conditions summary outputs 
application trac control 
aggregates identi ed pro led pro le records trac control 
possible approaches control aggregates 
example rate limiter installed rewall protect network high bandwidth aggregate 
propose color marker combines aggregation pro ler preferential packet dropping mechanism 
identi es aggregates trac volume probabilistically raises drop precedence aggregates 
provides rough trac management aggregates best ort trac resolution control limited resolution aggregate pro le 
approach uses di serv components building blocks primary target stand protection mechanism minimize ect ddos ash crowd best ort trac 
provides rough fairness aggregates 
related mrtg successor create time series round robin databases 
store numerical time series data automatically aggregate averages time 
idea producing summary summaries inspired mrtg di ers combining temporal aggregation spatial aggregation 
traditional ow monitoring tools netramet require prede ned rules monitor speci type trac 
example order monitor trac need instructed identify tcp port 
approach explicit xed rules limitations identi able trac types 
especially problem cope unknown protocols dos attacks 
approach report top ows sorting ow list 
need rule set limitations maintainable number ows ooding attack easily ow list 
suitable detecting dos attacks 
approach ooding attack may able reduce resolution pro le counter values lost 
resilient dos attacks addition requiring rules 
dynamic identi cation ow addressed context congestion control dos prevention 
floyd argue need congestion control need mechanisms network detect restrict unresponsive high bandwidth best ort ows times congestion 
suggest red drop history samples identify misbehaving ows 
concept known red penalty box 
idea extended detailed order cope ddos attacks ash crowds 
consists mechanism identify aggregates local rate limiter mechanism mechanism propagate protective actions neighbors 
proposed technique identify high bandwidth aggregates destination address drop history clusters addresses aggregates 
approach identifying high bandwidth aggregates regulate similar concept 
focus identify misbehaving ows focus trac pro ler monitors reports network congestion time 
observation network point needing protection mechanism point monitored 
practical provide combined solution performance simplicity 
combined method comes visible monitoring outputs advantageous deployment 
implementation shown implemented user program unix 
input modules left translate di erent input formats tuple tree key pre length count pass pro ler engine center 
prints summaries standard output le 
tree profiler aggregate pcap input captured packets tcpdump file input summary output plot generator plot output kernel period profiler engine input module summary input summaries signal output control fig 

aggregation pro ler implementation model rst input module reads summary outputs les standard input produce derivative summary 
second input module interface pcap library captures packets live network reads packet trace le saved tcpdump 
pcap interface allows evaluate prototype various tcpdump trace les 
third input module reads binary pro les produced kernel 
pro ler engine consists tree pro ler aggregation module 
tree pro ler accepts tuples input modules maintains pro le records trees 
pro ling period aggregation module called produce summary 
aggregation module walking tree post order node aggregated reported 
continue pro ling pro ler engine repeats cycle 
summary output shows example summary output 
summary starts header block followed body block 
lines start comment lines 
body block contains pro le types default destination address pro le shown gure 
address pro le row shows address entry indented pre length 
rst column shows address pre length entry 
pre length full length omitted output 
second column shows cumulative byte count 
third column shows percentages entry subtree 
input example second long packet trace taken link wide backbone 
parameters con gured nodes aggregation threshold 
observed addresses addresses identi ed individual addresses 
trac belongs address space distinct addresses identi ed 
number individual addresses typical summary 
trans paci pro les individual addresses identi ed monthly summaries 
ip addresses appearing scrambled privacy 
starttime sat jan endtime sat jan mbps dst address lru hits fig 

sample output destination address pro le source address pro le looks similar 
source address pro le tends identify popular www ftp servers destination address pro le tends identify proxy servers mirror servers 
shows source destination protocol pro les 
rst column shows bit key concatenating ip version number bits protocol number bits tcp udp port number bits 
example represents ipv tcp 
summary total trac tcp 
individual ports tcp port ftp data gnutella udp port dns identi ed source address pro le 
note gnutella automatically detected knowledge gnutella port 
destination protocol pro le includes larger number dynamically assigned ports usually aggregated shown port ranges 
source protocol pro le tends identify protocols servers destination protocol pro le tends identify clients 
ip proto lru hits ip proto lru hits fig 

sample output protocols ports spatial aggregation pro ler engine implements pre aggregation algorithm 
produce summaries continuously near real time need ecient algorithm terms cpu power memory usage 
approximation limits number entries tree aggregation ideal algorithm 
result introduces types errors part counter value aggregated ancestors entry node close aggregation threshold removed may show summary 
errors lower precision impact limited 
errors unavoidable derivative summaries aggregation discards details 
entry consumes non negligible volume total trac approximation able detect 
limit memory search time variable length keys employ patricia tree 
patricia employed bsd kernel internal representation routing table performance characteristics understood 
suitable handle bit ipv addresses bit ipv addresses 
patricia full binary radix tree 
internal nodes exactly children number leaf nodes number internal nodes 
suitable xed number nodes nodes preallocated 
node pre key associated pre length 
key internal node common pre children 
patricia di erent routing table 
routing table lookup requires best match exact match 
scheme new node created matching node 
available free node old node reclaimed keep number nodes tree 
node insertions deletions occur lookup operation 
update entry record pro ler looks entry tree updates counter value entry 
lookup starts root node leaf node checking pre matching 
pre matches internal node bit search key indicates branch follow bit value take left branch take right branch 
matching leaf node search terminates counter node updated 
pre match indicates matching node exists tree 
new node created inserted tree 
key assigned new node count set counter 
insertion creates leaf branch point single branching allowed 
new branch point inserted parent node child branch point newly created leaf node 
common pre child nodes assigned branch point 
similarly deleting leaf node removes leaf parent 
deleting node counter value aggregated parent 
xed number nodes preallocated tree variant lru replacement policy managing leaf nodes 
number nodes tree leaf nodes internal nodes needed leaf nodes 
lru selected simple cheap understood 
precision improved elaborate algorithm frequency replacement tradeo precision eciency 
mentioned precision important scheme evaluated section 
lru reclaims node counter value large simple heuristic added reclaim node sum counter values node parent larger threshold 
current reclaim threshold set total count 
middle pro ling period snapshot tree contains nodes small count values 
nodes count value aggregation threshold aggregated pro ling period 
aggregation threshold set total count default 
pro ler walks tree post order aggregation summary output done pass 
continue pro ling pro ler just resets counters keeps tree lru list tact cache pro ling period 
pro ler reset counters aggregating nodes 
pass method current implementation show sum subtree readability 
hand omits subtree sum employs method 
ipv ipv addresses di erent key length 
managed single tree separate trees currently ease debugging 
aggregation threshold computed combined total count di erence summary 
hand key length protocol trees pro ler uses merged trees 
pro ler uses algorithm produce derivative summaries subtle di erences 
size input sets smaller constrains execution time resource usage 
di erence patricia algorithm internal nodes added insert aggregates leaf nodes added initial summaries 
single implementation currently initial derivative summaries reduce maintenance cost separately optimized 
archiving visualization utilities archiving 
prints summaries standard output le 
receiving signal output le output le redirected new le 
archive summaries script periodically invoked cron 
script saves current output le sends signal running program switch output le 
current setting produces new summary seconds 
new summary le containing summaries created minutes 
script generates hourly daily monthly yearly summaries crossing time boundaries 
possible customize script detect certain condition send alert operator 
summary output size varies depending trac usually kb 
uncompressed derivative summaries take kb hour mb day mb month gb year 
initial summaries created seconds saved consume additional kb minutes 
initial summaries take mb hour mb day gb month gb year detailed summaries discarded certain period 
plot graph 
supports plot format output suitable draw plot graph 
plot format lists counter values entries line line corresponds pro ling period 
supports conversion byte count time dst address total fig 

graph plotting day destination addresses bits second 
plot output usually created archived summaries need real time 
needed specify number entries plot 
plot generator uses phase algorithm reads input les twice 
rst phase computes cumulative byte count entry 
rst phase sorted plot list created smallest entry repeatedly aggregated number nodes reduced speci ed number 
second phase produces plot format output period 
period node plot list aggregated nearest ancestor listed plot list 
counts re ected plot 
show examples plot graphs taken trans paci link 
legend graph shows entries plot 
plots destination addresses day april created minute summaries 
individual addresses listed prominent address terms bandwidth share 
plots source protocols days april created hour summaries 
graph captures daily uctuations total trac high ratio 
change daily trac pattern th 
zooming th shown see unusual icmp 
smurf attack cause distortion daily trac 
identify target address address range originators looking corresponding address pro les 
illustrates plot graphs di erent time scales trouble shooting 
trac density graph 
graph format shows trac density entire address space 
summary compute trac density address range aggregate create time series color graph 
time ip proto total fig 

graph plotting day source protocols time ip proto total fig 

graph zooming april th trac density graph degree trac concentration shown colors change trac pattern easily identi ed 
evaluation done trace driven evaluation hour long packet traces wide backbone 
trace taken trans paci link trace taken link connected domestic ix 
set shorter packet traces extracted traces 
table shows number packets number distinct addresses observed rate traces 
test con guration uses nodes tree aggregation threshold aggregation threshold speci ed 
table 
packet traces evaluation trace length packets addresses rate bps sec sec sec sec sec sec sec sec distance fig 

distortion subtrees ideal tree left approximation right aggregation accuracy algorithm resolution aggregation depends aggregation threshold 
number nodes tree replacement policy generation derivative aggregation ect precision result 
accuracy important factor algorithm better understand impact results 
measure distortion resulting tree introduce distortion index provides quantitative di erence trees 
distortion index 
approximation algorithm introduces excessive aggregation resulting tree 
need measure errors caused excessive aggregation comparing resulting tree ideal tree 
traditional tree matching methods graph theory edit distance suitable purpose take aggregation consideration 
aggregation moves counter value node ancestors ects nodes 
aggregated value spread multiple ancestors 
subtree subtree comparison node comparison 
illustrates distortion 
left subtree kth node ideal tree left corresponding subtree approximation shaded portion node aggregated node right subtree 
compare volume shaded area considered shifted distance di erence pre length 
considered equal subtrees volume 
corresponding node assume virtual node size 
introduce distortion index quantify di erence 
distortion index 
compare total count subtree node sum counters respectively 
larger di erence considered aggregated ancestor nodes nd nearest ancestor js error term allow small di erences size matching 

represents distance normalized full pre length 
ratio di erence subtree coverage node normalized subtree size 
weight node tree computed byte count node divided total byte count tree 
get normalized distortion node 

item ranges 
small exponent added item bias small errors small errors expected aggregation 
distortion index entire tree obtained sum indices 
making symmetric distortion index 



index albeit perfect allows quantify results 
trees exactly 
tree count leaf nodes tree count root node 
overlap 
example tree count leaf nodes left branch tree count leaf nodes right branch 
number nodes tree sec lru sec lru sec lru sec lru ae sec lru ae sec lru ae trace source addresses distortion index number nodes tree sec lru sec lru sec lru sec lru ae sec lru ae sec lru ae trace destination addresses number nodes tree sec lru sec lru sec lru sec lru ae sec lru ae sec lru ae trace source addresses distortion index number nodes tree sec lru sec lru sec lru sec lru ae sec lru ae sec lru ae trace destination addresses fig 

distortion caused lru varying tree size pro ling period length accuracy results 
distortion index evaluate lru algorithm 
shows ects number nodes pro ling period length heuristic added lru algorithm source destination address trees traces 
gure lru shows simple lru algorithm lru ae shows lru aggregation threshold 
distortion index computed ideal results restriction number nodes 
ect di erent period length tested traces di erent length 
number included addresses di ers orders magnitude results look similar 
suggests locality address occurrence results ected trace length 
expected simple lru works nodes distortion larger nodes insucient 
aggregation reduces distortion especially pro ler runs nodes 
table shows di erences summary generations 
shows initial summary directly produced packet trace 
base summary comparison 
sx second generation summary produced second summaries 
sx second generation summary produced second summaries 
sx third generation summary 
table 
distortion summary generations type sx sx sx sx gen 
st nd nd rd rd src dst src dst number nodes tree trace trace fig 

performance varying tree size second summaries rst aggregated second summaries nal summary created 
sx third generation summary 
second summaries rst aggregated second summaries nal summary created 
results show distortion introduced summary generations fairly small justi es approach create derivative summaries temporal aggregation 
performance packet looks matching entry trees manages lru lists 
number nodes tree lookup operation runs lg time 
hand cost managing lru list independent nodes runs time 
impact number nodes performance shown 
number nodes tree increases height tree longer lookup operation costly 
execution time measured produce source destination address pro les second traces mhz freebsd 
throughput shown packets second pps simply divide number packets trace user time 
accurate measure intended provide rough idea performance 
result shows pro ler process nodes nodes 
performance monitor mbps link 
worst case mbps link lled byte packets required 
side note forwarding performance pc router lower 
evaluation summary evaluated algorithm backbone packet traces 
leaf node management variant lru replacement policy produces decent summaries 
tree size works backbone networks performance 
algorithm fairly insensitive variations networks pro ling period length summary generations 
packet traces evaluation backbone data number included addresses considerably larger enterprise networks 
pro ler performs better enterprise networks 
application trac control aggregates identi ed pro led pro le records trac control 
possible approaches control aggregates 
propose color marker component di serv trac conditioner 
combines pro ler marker 
pro ler part basically marker part intended assured forwarding af hop behavior phb 
dynamically identi es pro les aggregates described marks colors arriving packets 
colors correspond ds assigned af drop precedence levels 
di serv components basically local node di ers ds domain model di serv architecture 
primary target protective measure dos attacks sense place standalone trac control node protection point 
major di erence di serv markers usually con gured trac pro le parameters committed target rate parameters specify trac pro les automatically adapts trac 
class con guration classi er rule needed mechanism 
illustrates trac control model 
arriving packets marked input interface preferentially discarded af phb output interface 
rio dropper af phb 
degrades drop precedence level packets aggregates volume 
long term congestion rio discards packets drop precedence level assigned packet 
input interface forwarding rio dropper output queue output interface profile info fig 

trac control model di erence pro ler mechanism pro ling period counters aggregates reset zero aged 
aging method avoids inaccuracy pro ling period smooths marking probability 
counter value period new value weight aging 
counters simply halved 
initial counter value period saved node pro ler reports period count subtracting initial value 
nd corresponding aggregate marking rst checks entry exists previous summary 
saved initial counter zero entry previous summary 
goes tree encounters ancestor positive initial counter node marking 
stochastically drop precedence packets aggregate uses 
derived number aggregates previous summary 
counter value entry number aggregates previous summary computed total count divided demote packets exceeding demotion probability computed computes twice src dst independently source address destination address 
arriving packet initially considered green 
packet demoted red marked criteria yellow marked criterion 
words packet marked red probability min src dst yellow probability jp src dst implementation implemented altq framework di serv trac conditioner component 
altq implements rio dropper mbps mbps aggregate tcp aggregate tcp aggregate udp fig 

test con guration aggregates supports drop precedence levels 
current prototype marks packets packets dropped rio detects long term congestion 
changed turn marking rio dropper actively dropping packets avoid unnecessary marking 
prototype source destination address trees global router shared multiple instances 
pro le produced active 
allows control outgoing packets arriving di erent interfaces 
ective aggregates share incoming interface outgoing interface covers majority situations requiring router single bottleneck single fat link 
correlation trac di erent interfaces better assign independent interface 
network monitoring writes summaries bu er pro ling period listener device interface 
program user space reads binary summaries device interface produces derivative summaries 
preliminary test results tested pcs simple con guration shown 
senders left half duplex mbps receivers right half duplex mbps 
rio dropper implemented router middle 
con gured aggregation threshold nodes tree second pro ling period 
aggregates generated tests 
aggregate aggregate consist parallel tcp sessions 
aggregate single udp stream sent constant rate mbps 
aggregate starts time aggregate starts time 
aggregate invoked time time 
behaviors aggregates compared trac control 
shows original behavior shows ects aggregate aggregate aggregate time sec traffic mbps fig 

throughput aggregates trac control aggregate aggregate aggregate time sec traffic mbps fig 

throughput aggregates trac control trac control 
throughput measured link plotted second 
plots illustrates resilience face misbehaving ows fairness aggregates 
udp forces tcps back steals entire link capacity 
hand udp ll link starts raising drop precedence udp packets 
result demonstrates ability restrict bandwidth misbehaving ows 
bandwidth share tcp aggregates fair aggregate active 
improved packets dropped aggregates 
observed tcp throughputs go plot improved aggregates tcp implements better recovery mechanisms newreno sack 
shows problem unfairness tcp sessions 
common competing tcps unequal bandwidth share due differences various factors rtt tcp implementation cpu power hardware 
things unfairness rtt inherent tcp mechanism session smaller rtt opens congestion window quickly 
improves situation ows pre aggregate similar rtt 
particular case test caused di erent network cards 
network card implement conservative collision recovery 
result tcps aggregate experience ack compression reverse path frequently stall short periods 
network cards share equal 
need adaptive trac pro ler track long term trend discover problems backbone network developed tool called 
adapts spatial trac distribution aggregating small volume ows aggregates achieves temporal aggregation creating summary summaries applying algorithm outputs 
monitoring network february useful network operation 
technique combine aggregation trac pro ler preferential packet dropping mechanism order protect network ddos attacks provide rough fairness aggregates 
preliminary test results prototype look promising investigation parameter tuning needed 
implementation related tools information available www csl sony jp software html 

blake black carlson davies wang weiss 
architecture di erentiated services 
rfc internet engineering task force december 

brownlee 
trac ow measurement experiences netramet 
request comments internet engineering task force march 

brownlee mills ruth 
trac ow measurement architecture 
request comments internet engineering task force october 

cho 
tele trac 
www csl sony jp software html 

cho 
framework alternate queueing trac management pc unix routers 
usenix annual technical conference pages june 

cho 
flow valve embedding safety valve red 
global internet symposium globecom pages december 

cho 
design implementation altq trac management system 
phd thesis keio university january 

cho akira kato 
trac data repository wide project 
usenix annual technical conference freenix track pages june 

kimberly cla hans werner braun george polyzos 
parameterizable methodology internet trac ow pro ling 
ieee journal selected areas communications 

clark fang 
explicit allocation best ort packet delivery service 
ieee acm transactions networking august 

sally floyd kevin fall 
promoting congestion control internet 
ieee acm transaction networking august 

baker weiss wroclawski 
assured forwarding phb group 
rfc internet engineering task force june 

guerin 
rate color marker 
rfc internet engineering task force september 

jacobson leres mccanne 
tcpdump 
ftp ftp ee lbl gov 

jacobson leres mccanne 
libpcap 
ftp ftp ee lbl gov 

ken keys david moore ryan koga edouard michael cla architecture coralreef internet trac monitoring software suite 
pam amsterdam netherlands april 

mahajan steven bellovin sally floyd john ioannidis vern paxson scott shenker 
controlling high bandwidth aggregates network 
draft february 

robert morris eddie kohler john jannotti frans kaashoek 
click router 
proceedings sosp pages kiawah island resort sc december 

tobias 
round robin database tool 
ee sta ethz ch 

tobias 
mrtg multi router trac grapher 
usenix lisa conference pages boston ma december 

dave 
network trac ow reporting visualization tool 
usenix lisa conference new orleans la december 

john robinson murthy 
data cache management frequency replacement 
sigmetrics conference measurement modeling computer systems pages may 

keith 
tree packet routing table berkeley unix 
usenix winter conference dallas texas january 


remote network monitoring management information base 
request comments internet engineering task force february 
