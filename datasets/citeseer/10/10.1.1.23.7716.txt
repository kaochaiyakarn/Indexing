semantics name value passing marcelo fiore computer laboratory university cambridge daniele turi lfcs division informatics university edinburgh provide semantic framework order message passing process calculi combining categorical theories syntax binding operational semantics 
particular obtain rule formats name value passing late early interpretations 
formats induce initial algebra semantics compositional respects substitution fully late early congruence 
exemplify theory calculus ccs 
research supported epsrc advanced research fellowship 
research supported epsrc 
contents 
basic syntactic semantic structures 
expressions 
syntax 
semantics 

presheaves 
syntax 
semantics 
syntax binding 

substitution 
clones 
monoids 

categorical operational semantics 

message passing bisimulations 
value passing 
late bisimulation 
early bisimulation 

name passing 
late bisimulation 
early bisimulation 
semantics name passing late early congruences 
categorical rules 

semantics value passing actions 
syntax 
semantics 
late early congruences 
categorical rules 
proc 
lics ieee computer society press 
complete description semantics programming language requires operational semantics describing behaviour programs terms elementary steps denotational semantics describing meaning program terms components 
study process calculi concurrency ccs csp acp emphasis placed denotational models notions behavioural equivalence bisimulation equivalence particular 
operational semantics behaved requires chosen notion behavioural equivalence congruence respect constructs language 
establish congruence results behavioural equivalences convenient define operational semantics terms structural rules plotkin sos rules 
correspondingly done order identify sos rule formats strong bisimulation congruence known gsos 
formats hard find harder extend 
little success gained obtaining formats sophisticated process calculi mentioned ones process calculi variable binding value passing ccs calculus particular 
addresses problem 
solution offer understanding mathematical structure underlying syntax semantics message passing processes 
formats obtain require fair amount category theory 
concrete syntactic formats distilled step investigation 
starting point lies categorical rule format defined terms functorial notions syntax behaviour familiar initial algebra final coalgebra semantics 
format transformations bx natural parameter thought generic set meta variables rules term monad associated signature tx type arises giving operator arity signature natural transformation bx describing behaviour operator terms behaviour arguments 
format corresponds gsos taken functor set coalgebras finitely branching labelled transition systems bx finite set labels finite powerset functor 
case domain codomain tx map correspond respectively premises gsos rules operator 
interestingly naturality accounts exactly gsos restrictions occurrences variables rules 
natural transformation type property coalgebraic behavioural equivalence associated case coincides bisimulation congruence respect operators syntax 
corollary general fact rules format induce denotational semantics adequate sense fully respect behavioural equivalence 
result independent choice category functors provided structure properties 
exploit generality order find formats process calculi variable binding 
give functorial notion syntax binding 
main motivations moved sets variable sets 
variable sets taken functors called covariant presheaves category contexts set category contexts category finite cardinals sets variables functions renamings importantly exist distinguished presheaf variables differentiation functor presheaves 
model variable binding arity presheaf elements context simply elements context containing extra variable variable bound 
find right notions behaviour name value passing 
start name passing natural notions behavioural equivalence late early bisimulation 
congruences calculus considers late early congruences obtained closing bisimulation renamings maps 
previous implicitly coalgebraic name passing functor associated behavioural equivalence turns late bisimulation 
functor lives category presheaves category name contexts allowing injective renamings 
surprisingly natural extension category presheaves yields new behaviour associated equivalence exactly late congruence 
able solve problem left open giving denotational semantics fully respect early bisimulation introducing new behaviour associated equivalence early bisimulation extension behaviour presheaves early congruence associated equivalence 
desired formats early late congruences live category presheaves instance rules unary binding type bx extended behaviour late early congruence 
value passing give late early behaviours variations cf 
behaviour 
order model input rules take account substitution structure value passing calculi homogeneous substitution messages messages heterogeneous substitution messages processes 
name passing needed substitution just renaming implicitly part category presheaves 
categorical framework homogeneous substitution developed 
considers monoidal structure presheaves unit presheaf thought having elements pairs element substitution consisting tuple elements takes notion homogeneous substitution presheaf monoid structure order model heterogeneous substitution elements monoid elements presheaf need go step consider monoid actions correspondingly modelling rules takes place category actions monoid messages 
need lift signatures binding extend behaviours functors category 
general primitive notions living different categories syntax behaviour respectively rules live category substitutions monoid actions 
categories related adjunctions lifting done means distributive law monad induced monadic adjunction behaviour obtained right extending composite see different coalgebraic approach early late bisimulation domain equation early bisimulation framework presheaf models 
adjunction constructions yield liftings extensions follows alg alg coalg coalg rule format ensuring behavioural equivalence congruence consists natural transformations type bx name passing actions monoid variables simply presheaves equal 
original gsos case variable binding categories collapse category sets equal respectively recover 
obvious step characterise categorical rule formats name value passing proposed elementary syntactic terms 
rule formats obtained certainly binding substitution defined rules treated syntactic level 
value passing categorical rule format related syntactic format proposed 
relationship format conservative extension property holds investigated 
aspect consider recursion 
deal guarded recursion interesting deal unguarded recursion lines working variable cpos variable sets 
tight correspondence coalgebras new behaviour early bisimulation indexed labelled transition systems 
investigate sheaves topos presheaves 
basic syntactic semantic structures 
expressions syntax 
consider grammar expressions integers plus minus ranges countable list variables set integers consider terms context stratify expressions family en sets indexed natural numbers indicating number variables context 
set en consists expressions canonical free variables typically denoted 
xn 
en solution equations xn 
xn xn xn semantics 
write interpretation expression context 
xn function defined compositionally follows 
th projection 
constant function 
plus 
minus interpretation initial algebra semantics 
semantic domain set set denotes set functions set set pointwise algebra structure evident maps 
xn set set set set set set set set en set unique algebra homomorphism en set 
presheaves categorically families xn sets functors set discrete category natural numbers equivalently finite cardinals 
regard finite cardinal context variables function seen renaming variables 
order model weakening contraction exchange rules contexts need discrete category category finite cardinals functions cf 

correspondingly consider functors set covariant presheaves working families xn sets equipped action associates xn element stage renaming xm presheaves form category set natural transformations morphisms 
syntax 
family en action 
xn variable renaming defines presheaf set 
presheaf solution equation kz set cf 
presheaf variables set vn 
xn inclusion set kz constantly presheaf 
free algebra presheaf variables set set endofunctor presheaves associated operators expressions 
semantics 
semantic domain expressions presheaf structure 
object cartesian category functor set presheaf thought presheaf mappings environments type results type formally stage consists set morphisms action 
particular set obtain presheaf underlying family sets 
maps gives algebra structure kz induces initial algebra semantics 
note naturality amounts identity 
xn 

syntax binding 
algebraic treatment binding binding operators modelled differentiation operator set set xn details including initial algebra semantics consult 
pi calculus 
grammar fragment calculus xy corresponds signature endofunctor set initial algebra presheaf calculus terms stage set equivalence classes terms canonical free variables action variable renaming 
value passing ccs 
consider fragment ccs passing expressions finite set channels grammar associated signature endofunctor ex kc kc set kc constantly presheaf 
generally signature bifunctor set set set kc kc parametric presheaf messages passed 

substitution clones 
seen operators semantics respects variable renaming see 
respects substitution stronger form satisfying semantic substitution lemma 
en xn 
words algebra homomorphism explain clone homomorphism 
recall clone page consists family xn sets family xn distinguished elements family xn xm xm operations element xn tuple 
un elements xm tuple elements axioms hold 

homomorphism clones family hn xn functions respects clone structure 
clone structure family en expressions variables en simultaneous substitution expressions expressions en em em 

en xn axioms amount familiar properties substitution 
semantic domain clone structure projections function composition pairing 
fact object cartesian category form clone operations th projection map 
fn 
fn respect clone structures requirement semantics clone homomorphisms amounts identity semantic substitution lemma 
monoids 
clone structure equivalent representations finitary monads set lawvere theories substitution algebras theorem importantly monoids monoidal closed category set proposition monoidal product defined coend xn tensor product variations thereof play crucial role arise general situation see op lan set cartesian cocomplete denotes cartesian extension proposition 
cartesian cocomplete categories cartesian functor right adjoint canonical natural isomorphism fc 
cartesian cocomplete category functor equivalence categories set fv category cartesian functors natural transformations 
corollary set set canonical natural isomorphisms follows 
exclusively consider tensor construction set small category see vii viii general discussion context topos theory 
case tensor set set elementary description xn cm xn cm equivalence relation generated 

note particular set obtain tensor set case terminal category set set xn mentioned categories clones monoids set equivalent semantics algebra homomorphism monoid homomorphism 
fact theorem presheaf expressions initial object category monoids consisting compatible algebra monoid structures corresponding homomorphisms 
algebra structure clone operations compatible clone monoid structure semantics unique monoid homomorphism 

categorical operational semantics shown operational rules form signature behaviour endofunctors bicartesian category induce compositional semantics having full abstraction property terms meaning bisimilar provided forgetful functor coalg right adjoint final coalgebra exists ii behaviour preserves weak pullbacks 
main tool establish behaviours 
proposition see finitary resp 
accessible endofunctor locally finitely presentable resp 
accessible category forgetful functor coalg right adjoint 
mentioned coalgebraic notion bisimulation due 
consider form bisimulation coalgebras bx relation equivalence class monos carriers lifts coalgebras sense diagram bx br commutes coalgebra structure behaviour bisimulation strong bisimulation 

message passing bisimulations 
value passing late bisimulation 
model value passing ccs respect set values finite set channels consider behaviour endofunctor bs set components sum respectively model input output silent actions 
cf 

respect behaviour functor coalgebraic bisimulation corresponds late bisimilarity 
coalgebra bs induces late transition relation iff iff iff provides characterisation coalgebraic bisimulation familiar terms see follows 
proposition data equivalent 

coalgebraic bisimulation coalgebra 
symmetric relation implies exists exists exists appreciate way models late interpretation input instructive isomorphism consider behaviour form bs observed gordon plotkin read late interpretation component product corresponding choosing derivative receiving value 
model early interpretation input corresponding receiving value choosing derivative needs reverse role type constructors non determinism inaction input 
early bisimulation 
noticing decomposition finite powerset functor non empty finite powerset functor natural behaviour early interpretation endofunctor bs consider uniform form bs pset op pset set functor see 
setting coalgebra bs induces early transition relation iff hx iff hx iff hx provides characterisation coalgebraic bisimulation familiar terms follows 
proposition data equivalent 

coalgebraic bisimulation coalgebra 
symmetric relation implies exists exists exists 
name passing consider notions behaviour calculus category variable sets set category finite cardinals injections 
constructions involved meaningful pullback preserving presheaves set obtain notions behaviour topos see pages 
late bisimulation 
constructions needed model late bisimulation type names set identity action nn power type set set pointwise action pn 
products coproducts pointwise pn qn pn qn exponential action pn pn fa dynamic allocation type set set action pn 
behaviour functor late bisimulation bp set bpn pn pn pn pn pn set 
coalgebra bp induces late transition relation iff hn pn pn pn iff hn pn iff hn pn pn iff hn pn provides characterisation coalgebraic bisimulation familiar terms see follows 
proposition data equivalent 

coalgebraic bisimulation coalgebra 
family symmetric relations rn pn pn rn implies rm rn implies exist rn rn exists rn exists rn exists rn early bisimulation 
definition behaviour functor early bisimulation left open requires new type constructor 
mono preserving presheaf set define set set functor mapping presheaf presheaf action pn qn iff see 
construction extends products injection pn qn pn qn 
vein treatment early bisimulation value passing ccs consider behaviour functor bp set components product respectively model input free bound output silent actions 
role constructor behaviour functor analogous tensor product model 
note isomorphisms late behaviour functor written form clear late early interpretations free bound output silent actions 
considering pointwise early behaviour bpn pn pn pn pn pn coalgebra bp induces early transition relation iff hn pn iff hn pn pn iff hn pn iff pn pn iff hn pn provides characterisation coalgebraic bisimulation familiar terms see follows 
proposition data equivalent 

coalgebraic bisimulation coalgebra 
family symmetric relations rn pn pn rn implies rm rn implies exists rn exists rn exists rn exists rn exists rn semantics name passing model structural operational rules calculus natural transformations type faced fact signature endofunctor set see behaviour late early interpretations endofunctor set far problem disparity allows desired compositionality result hold 
late early bisimulations congruences 
need behaviour functors late early congruences 
behaviours obtained right extending set adjunction set set obtaining new endofunctors set natural transformation type bx set suitable model desired structural operational rules calculus 
late early congruences 
adjunction need set set instance adjunction set set set alternatively describe adjunction essential geometric morphism see page associated inclusion canonical natural isomorphism essentially action xn xm set set forgetful functor inclusion define endofunctor set endofunctor bx right kan extension 
isomorphism adjunction coalgebras bijective correspondence coalgebras 
words coalgebras coalgebras presheaves action renamings injective ones 
crucial difference terms coalgebraic bisimulation 
proposition resp 
data equivalent 

coalgebraic bisimulation coalgebra bx 
family symmetric relations rn proposition resp 
proposition respect transposed coalgebra closure condition generalised rn implies rm proposition 
functors set set set set finitary 

lifted functors finitary forgetful functor coalg set right adjoint preserve weak pullbacks 
natural transformation type late early behaviour functor induces compositional semantics fully respect late early congruence 
categorical rules 
sketch calculus operational rules modelled natural transformation type 
brevity consider operational rules binding operators input restriction operational rules operators modelled lines isomorphisms satisfied functors cartesian closed map obtained transposing injection 
input 
input rule modelled map type bx tx projecting components contribute rule focus defining map type required map applied unit adjunction xn set note map late early cases suitable maps respectively arising injections restriction 
restriction rule modelled map type bx tx set fact comes map type tx set instance core map corresponding rules res ab ab open ax map ro defined internal language see follows ro case old case old new new set respectively underlying maps unit restriction operator set free algebra tx 
semantics value passing actions 
seen homogeneous substitution expressions variables expressions modelled monoids 
heterogeneous substitution expressions variables terms monoid actions follows 
monoid set defines monad set category algebras monad act consists right actions vii 
elementary terms amounts family mm am operations 

un mm 
note occurrence second law 
examples actions consider 
action forced unit law canonical isomorphism category act isomorphic set explains name passing extra substitution structure 
objects cartesian category monoid canonical action presheaf pairing composition monoidal closed category cf 
vii monoid homomorphism induces reindexing functor act act left right adjoints 
semantics expressions unique homomorphism induce adjoint situations act act act set right hand side action multiplication action multiplication evaluation 
syntax 
substitution expressions terms involves turn substitution expressions expressions 
signature bifunctor value passing ccs needs parametric monoid messages 
accordingly bifunctor mon set set set 
monoid write functor set set lift category act actions means distributive law endofunctor monad induced monadic adjunction act set distributive law essentially strength described page extra multiplication monoid fourth fifth summand resulting endofunctor act algebras presheaves algebra structure action compatible sense evident diagram commutes 
denote corresponding category algebras alg 
associated forgetful functor alg act left adjoint induced monad denoted lifting monad tm induced monoid homomorphism induces reindexing functor alg alg lifting reindexing functor act act 
particular reindexing functor alg alg induced semantics expressions allows turn interpretation 
semantics 
monoid messages set typical example clone operations set values situation cf 
act set set adjunction right alternatively described essential geometric morphism associated functor set syntax behaviour category proceed previous section right extend behaviour functors set composite adjunction act set act 
easily need lemma 
lemma cartesian cocomplete composite adjunction act set act 
follows extension behaviour functor set adjunction act set set ground messages yielding act ba late early congruences 
operational models value passing take coalgebras act endofunctors set 
adjunction allows express operational models terms coalgebras set 
bijective correspondence functions carries action 
coalgebra homomorphisms action homomorphisms stage coalgebra homomorphisms proposition resp 
data equivalent 

coalgebraic bisimulation coalgebra ba 

family symmetric relations rn proposition resp 
proposition respect transposed coalgebra 
rn implies rm mm proposition 
category actions act locally finitely presentable 

extended functors accessible forgetful functor coalg act right adjoint preserve weak pullbacks 
categorical rules 
natural transformations act type ba bta late early behaviour functor set values suitable model structural operational rules languages value passing give categorical format inducing fully compositional semantics respect late early congruence 
input 
interesting rule model axiom input 
calculus core rule late early behaviour lies map obtained applying unit adjunction set 
gratefully acknowledge discussions gian luca cattani gordon plotkin davide sangiorgi 
aczel 
non founded sets 
number lecture notes 
csli 
aczel mendler 
final coalgebra theorem 
pitt rydeheard dybjer pitts editors proc 
category theory computer science volume lncs pages 
springerverlag 

locally presentable accessible categories volume london mathematical society lecture note series 
cambridge university press 
bergstra klop 
process algebra synchronous communication 
information control 
bernstein 
congruence theorem structured operational semantics higher order languages 
proc 
th lics conf pages 
ieee computer society press 
bloom meyer 
bisimulation traced 
journal acm 

cattani sewell 
models name passing processes interleaving causal 
proc 
th lics conf pages 
ieee computer society press 

cattani stark winskel 
presheaf models calculus 
moggi rosolini editors proc 
category theory computer science volume lncs pages 
springer verlag 
cohn 
universal algebra 
harper row 
de simone 
higher level synchronising devices 
theoretical computer science 
fiore 
axiomatic domain theory categories partial maps 
distinguished dissertations series 
cambridge university press 
fiore moggi sangiorgi 
fully model calculus 
proc 
th lics conf pages 
ieee computer society press 
full version appear information computation 
fiore plotkin turi 
syntax variable binding 
proc 
th lics conf pages 
ieee computer society press 
fokkink van glabbeek 
rules reduce ntree rules 
information computation 
fokkink verhoef 
conservative look operational semantics variable binding 
information computation 
goguen thatcher wagner 
initial algebra approach specification correctness implementation data types 
yeh editor current trends programming methodology volume iv pages 
prentice hall 
groote vaandrager 
structured operational semantics bisimulation congruence 
information computation 
hennessy 
fully denotational semantics calculus 
technical report cogs university sussex 
appear theoretical computer science 
hoare 
communicating sequential processes 
communications acm 

semantic theory value passing processes late approach part denotational model complete axiomatization 
report series rs brics department computer science university aarhus 

semantic theory value passing processes late approach part ii behavioural semantics full abstractness 
report series rs brics department computer science university aarhus 
mac lane 
categories working mathematician 
springer verlag 
mac lane moerdijk 
sheaves geometry logic topos theory 
springerverlag 
makkai pare 
accessible categories foundations categorical model theory volume contemporary math 
amer 
math 
soc 
milner 
calculus communicating systems volume lncs 
springer verlag 
milner 
communication concurrency 
international series computer science 
prentice hall 
milner parrow walker 
calculus mobile processes ii 
information computation sept 
montanari pistore 
calculus structured coalgebras minimal hd automata 
mathematical foundations computer science volume lecture notes computer science 
springer verlag 
plotkin 
structural approach operational semantics 
technical report daimi fn department computer science aarhus university 
plotkin 
binding algebras step universal algebra type theory 
slides lecture rta 
plotkin 
semantics recursion 
invited talk th workshop coalgebraic methods computer science genova italy 
scott 
outline mathematical theory computation 
proc 
th annual princeton conference inf 
sciences systems pages 
stark 
fully domain model calculus 
proc 
th lics conf pages 
ieee computer society press 
turi 
categorical modelling structural operational rules case studies 
moggi rosolini editors proc 
category theory computer science volume lncs pages 
springer verlag 
turi plotkin 
mathematical operational semantics 
proc 
th lics conf pages 
ieee computer society press 
turi rutten 
foundations final coalgebra semantics non founded sets partial orders metric spaces 
mathematical structures computer science 

