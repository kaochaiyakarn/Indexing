variations algebra monadicity generalisations equational theories edmund robinson queen mary university london february dedicated rod burstall rod burstall gave rst academic job 
explained help group learn advanced aspects category theory 
fact spent time learning advanced fundamental aspects computer science 
grateful rod opportunity willingness give time learn 
appropriate er essentially tutorial 
better late 
back dawn time linton lin discovered connection algebraic theories categorical notion monad precisely monads rank category sets 
point view important gives ranking de nitional power notion monad placing monads bottom hierarchy theories generic models geometric theories classifying toposes top 
monads exist categories set attractive properties algebras proved great generality algebras monad 
example category algebras monad complete monad complete category 
attractive notion free sense initial algebra 
monads correspond precisely theories recoverable category algebras free algebra forgetful functor adjunction 
partly connection notion adjunction partly large collection examples notion monad long basic tools category theory 
rst substantial computer science setting moggi mog separated notions value computation type produced system computations form free algebra values monad encapsulates computational ects programming language 
idea fed functional programming community led techniques structuring compilers functional non functional languages ch gor lh jw wad wad wad 
surprisingly closely related theory sketches give accounts construction datatypes bw 
applications depend looking monads categories set categories interesting happens 
equational logic soundly interpreted category nite products stretch generality bit 
sorted algebraic theories give monads nitary monads arise equational theories natural question ask sort theory come 
writing author partially supported serc epsrc advanced research fellowship epsrc research gr eu working group 
answer cases turns theories equational notion operation generalised 
operations tuples input producing single output consider operations take structured input produce structured output 
case monads poset get theories operations take pairs input say term equal giving expressive power simple equations 
situation interesting complex interested enriched categories 
vary category monad taken degree enrichment common example consider theories monadic cat enriched set gpd cat 
gives range possibilities rarely 
main aim take examples look detail kinds theories monadic enriched monadic categories 
general theory needs explanation giving examples expository account material original set setting general enriched version 
falls sections 
rst account linton theory 
despite standard nature results unable nd modern accessible account accordingly section contains detail really 
linton classical results extended wider class categories 
relevant early kelly dk bur monads graph cat 
kelly power kp extended classical results ordinary enriched categories set closed categories enriched locally nitely presentable category locally nitely presentable closed category 
general form theory 
gordon power generalised class categories enriched certain bicategories see gp presentation monads gp de nition class bicategories 
second part contains account kelly power 
main aim communicate ideas approach 
account quite sketchy decent interested reader ll gaps 
material accessible reader familiar category theory knows monoidal category hope nd part hopelessly obscure put nal important part consists concrete examples material second part 
deal di erent base categories case explore implications choosing di erent 
look generalisations sorted equational theories arise 
material 
rst example give concerns case base category power set 
connection sorted equational theories little known folklore result 
second example monadicity poset 
corresponds appears new form inequational logic chief characteristic ability form operations domain de nition subject order constraints input variables 
gives logic power conditional inequational logic strictly speaking incomparable strength 
examples graph cat 
contrast examples clear important graph base de nition right 
category theorist instinct go cat possible graph may useful dealing theory sketches 
reasons including 
classes categories monadic graph useful give idea case 
serves counterexample principle theory cleanest maximal degree enrichment 
cat hand rich signi cant base 
examples categories structure monadic cat varying degrees enrichment 
leave monadic world start talk brations indexed structures 
concrete examples categories monadic cat discuss categories pullbacks cartesian closed categories 
nal example subset cat 
power give treatment categories operations functorial natural respect particular class maps 
example reworking theory premonoidal categories 
john power david murphy constructive comments earlier draft 
classical theory survey classical theory aims analysis categories monadic set 
material due originally linton lin connects monads sorted algebraic theories 
shall give detailed proofs dicult construct shall aim communicate basic ideas 
de nition monad category functor natural transformations de nition algebra monad object structure map tx morphism algebras hx hy map 
form category alg algebras monad compare de nitions algebras homomorphisms functor see algebra monad algebra functor satis es certain compatibility conditions extra structure possessed monad 
morphism algebras monad hand satisfy extra conditions just morphism underlying algebras 
means category alg full subcategory category algebras functor shall see moment direct analogy algebras algebraic theories 
shall need re nement notion monad monad rank 
de nition monad said nite rank nitary functor preserves ltered colimits 
generally said rank regular cardinal preserves ltered colimits 
recall category said ltered family containing objects cone family parallel maps 
colimit said ltered diagram colimit ltered category 
move algebraic theories 
de nition signature sorted algebraic theory collection function symbols function ar nat giving arity function 
algebraic theory signature collection equations terms built functions signature variables 
usual constants identi ed functions arity zero 
notion theory nitary sense arity basic operation nite arity term nite depth 
requirement set function symbols set equations nite 
generalise allowing nitary operations de ne theory rank basic operations arity signi cance notion rank monad rank corresponds algebraic theory functions arity de nition algebra algebraic theory set called carrier algebra interpretations operations 
function symbol arity interpreted function term containing distinct variables gives rise function de ned induction structure term 
algebra satisfy equations sense equated terms give rise identical functions obvious adjustments equated terms contain exactly variables 
homomorphism algebras algebra algebra function commutes operations algebra gives rise category shall call alg 
basic de nitions explain connection algebraic theories monads 
rst goal show nitary sorted algebraic theory corresponding monad 
start free algebra set concrete way construct take carrier set equivalence classes closed terms formed function symbols additional constant symbol element equivalence set provable equality equational theory generated equations alternative thinking set variables set constants think set derived operations arity theory 
case operations theory interpreted syntactically usual braces denote equivalence class 
proving de nition consistent verifying universal property algebra standard piece universal algebra 
immediate universal property map 
extends functor set set 
functor carries monad structure natural transformation obvious inclusion 

interpretation equally simple 
element equivalence class term built elements typical element equivalence class 
transformation de ned map 
sense substitution provably equal expressions term results provably equal terms 
de nitions natural transformations satisfy conditions de nition 
shall call monad step verify notions algebra coincide 
lemma set algebra structures theory bijection algebra structures monad bijection extends algebra homomorphisms algebras sets proof 
suppose algebra structure theory closed term de ned extended language includes constants denoting elements algebra structure gives rise interpretation shall write 
provably equal 
free algebra elements precisely equivalence classes terms kind 

gives function claim algebra structure monad follows correspond requirements algebras monad de nition abused notation slightly identifying element constant denotes 
conversely suppose algebra structure monad function symbol de ne function prove structural induction terms gives rise interpretation terms 
clearly equates provably equal terms satis es equations theory 
algebra structure theory easy verify operations mutually inverse extend homomorphisms algebras 
lemma nitary algebraic theory monad arising nitary 
proof 
show functor preserves ltered colimits 
suppose set ltered colimit diagram 
colimit calculated disjoint union ff jd dg quotienting equivalence relation 
need show colimit functor clearly cocone vertex suces show element image elements get mapped element get mapped element colimit 
element equivalence class yn term constants nitely yn say 
come sets say 
ltered nd object map 
means equally taken equivalent elements 
yn comes element 
similarly suppose mapped element nding object map assume built nitely elements xn say 
shall abuse notation write xn xn 
insertion colimit 
derive 
means provable equations equalities valid colimit ltered nd equalities hold 
equal required 
nitary algebraic theory gives rise nitary monad algebras 
show nitary monad gives rise nitary algebraic theory generalisation monads rank straightforward 
set colimit set nite subsets ordered inclusion colimit ltered 
set determined isomorphism values nite sets 
similarly naturality second notice argument turning theories monads suggests free algebra view set derived operations arity theory 
able pick certain operations particular arities basic 
obviously canonical way doing general 
known theories operations equations irredundant way 
example theory boolean algebras de nable de morgan laws double negation 
gives di erent irredundant presentations 
theory operation nand 
solution lack canonical minimal choice basic operations take maximal choice 
take derived operations basic impose sucient equations able determine certain operations built 
lemma nitary monad set isomorphism monad arising sorted equational theory proof 
theory function symbol arity element 
equations de ned groups corresponding functoriality 
equation xn equation xn equation xm writing xm 
structural induction derived operation theory provably equal basic 
natural model structure theory equates ary operators represented equal elements 
follows monad corresponding theory required 
conclude section examples framework 
example monad rank nitary 
instance covariant powerset functor union nite powerset functor 
example functor set functions set set relatively mild set theoretic hypothesis ordinal strong inaccessible simple counting argument shows monad rank 
suppose rank pick strong inaccessible larger ltered 
strongly inaccessible jt jt cantor theorem 
potentially signi cant example form moggi give denotational semantics continuation passing 
note monad rank regarded generating theory proper class operations equations 
example powerset monad corresponds theory operation arity giving subset elements exactly arguments subset cardinality subject equations idempotency permutation union 
note theories arising way set operations arity dealt theory basic operations unbounded arity 
hand algebraic theory requires operations unbounded arity need correspond monad 
example theory complete boolean algebras 
expression requires sup inf sets arbitrary cardinality free algebra countably generators exist large set cf 
johnstone joh 
de ne functor part monad 
general context section discuss generalisation classical theory section 
material section due kelly power kp 
slightly general concrete exposition pow 
theory generalises directions rst consider categories monadic set speci cally categories monadic locally nitely presentable category consider enriched version general theory 
consider nitary version theory extend trivially rank version 
recalling notion locally nitely presentable category 
reason importance class categories apparent usual de nition give form collection equivalent conditions showing arbitrary locally nitely presentable category viewed category models logical theory certain form 
object category said nitely presentable nitary representable functor preserves ltered colimits 
shall write fp full subcategory nitely presentable objects 
de nition gu conditions category equivalent 
small limits colimits category fp essentially small object ltered colimit nitely presentable objects map 

category models essentially algebraic theory 

equivalent category nite limit preserving functors set small category nite limits 

equivalent category nite limit preserving functors fp set 

category models nite limit sketch 
category satisfying said locally nitely presentable lfp short 
condition replaced number similar super cially weaker statements 
essentially algebraic theories mentioned general sorted algebraic theories 
di erence essentially algebraic theory allows operations domain equationally de ned subset product previously de ned domains 
canonical example composition category de ned composable arbitrary pairs 
important consequence freedom express conditional equations logic extra expressive power conditionally de ned operations goes 
examples lfp categories set set poset graph cat 
shall considering categories monadic considering ect various 
turn theory enriched categories 
misleading initially think enriched category category hom sets carry extra structure structure preserved composition 
traditional mathematical applications additional structure abelian group module computer science applications partial order 
notion enriched category general allows hom sets enriched category objects monoidal category traditionally called surprising surprisingly fruitful example general form formulation notion metric space points space form objects enriched category hom set distance details see law 
familiar example taken semantics type theory 
typically giving categorical semantics type theory elements hom set closed terms type equivalence classes thereof 
enriched category theory allow enrich category types take hom set 
generally cartesian closed category regarded enriched 
traditional category theory developed enriched context get distance requires conditions category enrichment place notably completeness conditions 
moment signal existence enriched functors preserve structure hom sets enriched natural transformations far shall concerned data ordinary natural transformation subject naturality requirement obvious maps fa gb equal 
details see kelly kel 
enriched monad obvious generalisation notion monad enriched category theory underlying category functor natural transformations enriched equations diagrams de nition hold 
enables de ne ordinary category algebras monad 
enriching category equalizers category algebras enriched rst example need greater completeness properties kelly power theory applies case symmetric monoidal closed category locally nitely presentable closed category equivalent demanding underlying ordinary category lfp monoidal structure restricts nitely presentable objects details see kel kel kp note particular unit nitely presentable 
point onwards shall assume categories constructions enriched signal word ordinary 
kelly power take di erent somewhat view notion monad 
brie point view monoid object equipped maps certain diagrams commute 
important point view diagrams cartesian product fact implicit isomorphisms 
replace isomorphisms explicit sense talk monoid monoidal category 
particular category modulo size problems inherent forming functor categories cat monoidal category identity functor composite monoid monoidal category exactly monad enriched nitary functor locally nitely presentable category determined restriction nitely presentable objects nitary functors compose give nitary functors 
monoidal structure cat restricts subcategory nitary functors turn identi ed cat fp 
case set nitely presentable objects nite sets case set tuples sets components nite nitely empty 
case poset nitely presentable objects nite posets 
objects serve arities operators 
consider categories monadic set basic operations corresponding theory arity corresponding nite set 
isomorphism class set matters regard arity size nite set natural number 
similarly categories monadic set arity essentially tuple natural numbers nitely zero 
corresponds kind theories involved sorted algebras sense equational theories basic sorts example theory lists basic sorts lists atoms 
theories monadic poset arities nite posets 
allows primitive operations require order constraints input 
example bounded sup 
operation takes elements bounded returns upper bound 
de ned algebraically sense giving elements input elements want take sup common upper bound 
basic operations arity share structure underlying category consider categories monadic poset basic operations arity form poset consider categories monadic cat form category 
basic operations function ob fp number points worth noting de nition 
rst obvious categorical structure fp plays ole 
interested set objects 
particular force basic operations arity related way basic operations isomorphic arity 
second allow expect bc frequently empty 
nal point talking collection operations structured instance category think single operation result category 
algebra structure collection operations way object collection maps bc tensor monoidal category functor coincides case think objects sets ordinary category indexed disjoint union copies 
description generalises fairly straightforward way 
example set poset disjoint union copies poset cartesian product posets general representing object functor basic operations give account operations derived 
colimit chain sn ob fp sn map sn sn think sn object derived terms arity depth tensor derived operations depend enriching category examples dependence notion algebra see sections 
usual derived operations form initial algebra theory 
explain generalisation equations 
view taken kp depends identi cation monads monoids mentioned 
object nitary functor ha ai usual regard functor fp ha aic set tuples elements cotensor cf 
kelly kel ha aic power copies thought object operations arity works nitary general object ha aib thought subobject object ary operations nitary depend nitary part 
ha ai natural monoid structure cat 
typical element ha ai ha ai nitely presentable map ha aic element ha aic operation arity tuple operations arity compose obvious fashion give operation arity gives multiplication monoid 
collection basic operations described gives rise monoid fb similar fashion 
algebra structure ectively monoid homomorphism fb ha ai 
arities sides equation regard collection equations giving collection operations corresponding arities 
operations interpreted di erent ways underlying theory derived operation corresponding left hand side equation operation corresponding right 
point view collection equations collection operations pair monoid maps fe fb algebra structure monoid map fb ha ai 
theory fashion corresponding monad coequalizer maps fe fb conversely nitary monad gives rise theory operations equations sense 
sum theorem kelly power locally nitely presentable category enriched locally nitely presentable symmetric monoidal closed category nitary enriched monad admits presentation operations equations 
representing object functor isomorphism natural sorted algebraic theories traditional mathematical structures single sorted computer scientists interested data types interested sorted theories 
modelled technology monads considering categories monadic set set basic sorts theory 
section shall considering theories monadic set examples possible levels enrichment 
set ordinary category enrichment set cartesian closed enriched 
general theory applies nite nite terminal object nitely presentable set lfp closed category 
case collection basic operations function set fp set remarked nitely presentable objects set tuples nite sets nitely components empty 
algebra structure object set map set bc set fp case enrichment set set set morphisms words product coordinatewise function spaces tensor tuple th component tuple maps set bc see functioning arity bc collection basic operations 
element bc function set tuple elements gives element course tuple interpreted coordinatewise tuple elements example tuple elements consists elements corresponds basic operation variables sort sort 
operations exactly nd sorted exactly sorted algebra 
follow recipe previous section nd elements sn exactly expect terms depth standard presentations sorted algebra 
equations equations 
enrich set done coordinatewise 
set longer set tuple function spaces th component tensor takes tuple set left tuple 
follows algebra structure tuple maps bc basic operation produces result sort depend arguments sort 
looking tuple algebra structures set 
see enrichment set gives conventional sorted algebra gives conventional sorted algebra enrichment set simply gives tuples single sorted algebras 
re ected fact typical sorted theory free algebra functor takes tuple sets tuple carriers free algebra sets vacuously enrichment set enrichment set poset algebras section concerned theories monadic poset 
possible set poset 
nitely presentable poset simply nite poset 
collection basic operations function ob poset fp poset 
consider enrichment set 
algebra structure collection maps poset bc poset giving tuples elements case tuple map nite poset poset poset interpreted set means monotonicity requirement interpretation function bc 
order elements bc order theoretic product discrete order means operations tuple kind phenomenon de nition derived operations kind pathology avoided considering alternative enrichment 
enrich poset poset elements considered poset pointwise partial order functions 
tensor product posets carries product partial order 
follows interpretation typical bc monotone usual sense interpretation pointwise equal 
come look derived operations nd expect 
come consider equations nd equations essentially equations operations 
despite retain power inequational reasoning 
reason simple 
basic operations partially ordered 
replace inequation derived operations new basic operations ordered inequation equations identify new operations sides inequation 
usual world inequational algebra arities posets just sets handle strict inequality 
means syntactic point view de ne operations require certain inequalities hold inputs 
example interested cpo want operation give sup chain 
operation de nable nitary theory takes countable chain input de nable theory rank alternatively de ning characteristics scott domains pairs elements bounded 
handled operation input pair elements common upper bound copy poset 
output upper bound lower pair 
course specify output upper bound 
order introduce new family basic operations arity ordered arity derived operations shall need poset order specify chosen operation upper bound impose equations rst imply upper bound implies independent presentation gives non standard category scott domains 
reason algebra homomorphisms preserve operations theory 
maps preserve bounded joins continuous 
joins meets speci ed similar fashion 
combining techniques section deal sorted order sorted theories considering theories monadic poset poset enriched category 
thinking syntactically having arities posets corresponds having conditionally de ned operations allowing specify operation de ned set xn satisfy certain family order constraints scott domain example jx 
constraints take form conjunction constraints handle constraints form 
puts world kel kpt 
basic operations arity number inputs equivalent constraints say pointwise equal 
derived operations regarded derived operations ordinary syntactic sense formed provable conditionally de ned operators applied terms satisfy order constraints operator de nition 
basic proof rule de ned de ned allowed equations non strict inequations derived operators 
theory powerful standard inequational logic 
conditionally de ned operations power conditional inequational logic extension fragment premisses conjunctions inequations variables 
logic strictly incomparable conditional inequational logic usually formulated logic horn clauses basic propositions form term term form term term 
comment categories monadic categories domains 
category domains locally presentable theory 
cover examples analogues larger ordinals 
problem objects category models suitable theory homomorphisms appropriate usually general continuous functions 
example get cpo strict maps bottom element part structure 
similarly seen scott domains get maps preserve bounded sets 
conditions algebraicity continuity right logical character give locally presentable categories 
despite constructions techniques apply settings 
alg section included mainly historical reasons intrinsic interest category graphs 
serves counterexample trend developing previous sections useful guideline enrich possible trying sorted algebra 
case get cleaner useful theory con ning enrichment set 
pioneering graph done bur produced notion graphical algebra alg 
characterised graphical algebra monadic graph fact conversely appear 
notion show common classes categories including toposes monadic graph 
slightly careful 
functors categories preserve relevant structure exactly category theorist generally interested functors preserve canonical isomorphism case toposes 
slightly earlier independently kelly working monadicity cat time extension enriched setting 
subtle useful setting shall see section moment shall simply note contrast kelly able show formulation algebras completely characterized monadicity cat 
graph category directed graphs multiple edges 
graph set vertices set edges 
edge domain codomain 
morphisms graphs pairs functions respect domain codomain operations 
graph isomorphic functor category set helpful think graph category composition identities 
analogy morphism graphs data functor requirement respect composition identities 
notion transformation morphisms data natural transformation course requirement naturality squares commute longer sense 
nitely presentable objects graph simply nite graphs usual form arities operations 
nite graph graph bc basic operations 
graph enriched set 
enrich set algebra structure graph consists giving bc graph morphism vertex edge bc edge enrich graph consider transformations particularly interesting graph marked contrast analogous situation cat 
equations level vertices level edges 
example consider theory categories 
category graph associative composition edges identities 
need graph shape operations arity give composition graph shape operations arity give identities 
subject equations say source target composite expected source target identity vertex 
problem expressing axioms involving composition associativity composition left right identity axioms 
problem allowed form derived operations know structured type information de nition 
order know left identity law id formed know target identity map vertex identity 
previous axioms just structure operations 
form derived operation represents composite id solution de ne suitable collection basic operations arity equation want express 
put equation terms impose equations allow build new operations composite real primitives 
case de ne graph shape operations arity giving composable pair secretly original map followed identity composition 
impose equations id dom 
equations give left identity law 
analogous solutions exist similar problems right identity associativity laws 
problems comes expressing structures categories limits 
problems map limit cone de ned commuting arbitrary cones need able express uniqueness factorization map limit cone 
dealt detail bur dk refer reader papers details 
account ls clear sensitive diculty ensuring operations de ned arities needs reading care 
alg cat contrast previous examples cat useful levels enrichment 
course set cat third gpd category groupoids 
groupoid category morphisms isomorphisms 
enrichment cat corresponds demanding functoriality operations enrichment set corresponds demanding form functoriality enrichment gpd half way house demand functoriality respect isomorphisms 
ole level enrichment plays quite similar played embedding projection pairs domain theory enables place kind parametricity constraint naturally contravariant operations 
allows cope homomorphisms preserve structure coherent isomorphism 
set things algebras designated structure corresponds commutation algebra map action monad 
diculty 
insist homomorphisms preserve structure exactly create problem 
gpd enriched category gpd enriched monad insert cell de nition homomorphism subject coherence conditions corresponding identity multiplication monad gives homomorphisms preserve structure coherent isomorphism 
fact gives formal de nition preserve coherent isomorphism means kind structure 
details scope interested reader referred bkp 
note usual category notation modi ed incorporate change just mentioned 
alg category strict algebras homomorphisms preserving structure coherent isomorphism category concerned category strict algebras strict homomorphisms usually written alg ts complex structure arities available cat complex 
nitely presentable category necessarily nite 
nitely presentable category nite colimit nite categories 
concretely nite number objects arrows generated composition nite number generating arrows equality composites generated nite number equations 
object nitely presentable category nitely presentable monoid usual algebraic sense 
particular free category object single non identity endomorphism countably maps 
examples involve nite categories 
case nitely presentable category shall category bc basic operations 
usual rst thing look ect levels enrichment basic operations tensor product 
enrichment cat hom cat category functors natural transformations 
tensor cat bc product categories 
implies basic operation object category bc interpreted functor cat morphism basic operations interpreted natural transformation 
example discrete category objects bc functor bc functors corresponding vertices natural transformation corresponding arrow 
enrichment gpd hom cat iso groupoid functors natural isomorphisms regard category 
tensor cat iso bc product categories 
implies basic operation interpreted functor cat iso functorial respect isomorphisms necessarily respect morphisms 
example bc functors iso iso category objects containing isomorphisms natural transformation 
components natural transformation need isomorphisms 
enrichment set hom structured set corresponds discrete category functors functoriality constraint 
example get binary functions objects pointwise collection maps 
life somewhat simpler level graph express composition information directly arities results operations 
rst example category structure monadic cat consider monoidal categories 
structure consists constant operation arity functor operation arity natural transformations 
morphisms operations 
example give give category operations arity corresponding degree naturality map impose equations ensure domain codomain transformations appropriate functors 
need impose coherence equations achieved equations level morphisms 
setting morphism monoidal categories functor preserves structure exactly 
usual de nition 
order achieve de nition study lax morphisms algebras 
shall give examples monadicity cat categories pullbacks cartesian closed categories 
technique show monadicity cases algebraic nature adjunctions 
precisely categorical structure expressed means adjunction previously de ned functor 
show structure monadic introduce basic operations adjoint functor unit counit adjunction 
equations say data adjoint functor fact functorial unit counit natural transformations nally triangle identities adjunction valid 
consider pullbacks example bur dk 
pullback morphism treated right adjoint functor composition slight complication need particular arbitrary 
give data functor need operation arity initial data pullback square producing diagram shape left hand side pullback square 
gives ect functor objects 
similarly need operation arity producing diagram shape pullback composable pair giving action functor morphisms 
subject obvious equations expressing functoriality 
obviously redundancy de ned object part functor morphism part 
conversely enriching cat morphism part redundant operation giving object part necessarily functorial 
secondly need data unit counit adjunction 
counit essentially top side pullback square 
need operation arity producing diagram shape wanted compact structured presentation advantage package object part functor single operation yielding entire pullback square 
unit diagram bn pq need operation arity giving diagram shape enriching cat case naturality automatic 
force means equations 
need equations triangle equalities adjunction 
cartesian closed categories rst part construction giving binary products terminal object done similar fashion 
interesting part function space 
new thing function space functor op pattern cat contravariance rst argument 
means cartesian closed categories constructed algebras cat enriched monad 
regard function space functor cat iso cat iso category objects functors morphisms natural isomorphisms 
hom gpd enriched sense accordingly turns cartesian closed categories algebras gpd enriched monad 
note working gpd enriched cat enriched setting consequence speci functoriality naturality constructions 
function space need operation arity giving space ect morphisms need operation arity giving result shape need unit operation objects arguments producing morphism natural result counit arguments producing natural result 
impose triangle identities 
seen large part usual constructions categories monadic cat 
generally enriched cat covariant enriched gpd contravariance 
enrichment cat guarantees naturality constructions enrichment gpd guarantees naturality respect isomorphisms fairly lowlevel form parametricity robinson rob 
treat functor categories sorted algebra 
allows handle example cartesian closed functors cartesian closed categories 
concept monadic integer power cat notion bration 
de nite proof monadic give intuitive argument explain 
cartesian lifting central de nition conditionally de ned 
recall bration functor certain properties 
certain morphisms property cartesian respect bration require objects morphisms cartesian morphism codomain mapping cartesian lifting 
really require operation theory express arity 
arities available cat pairs nitely presentable categories 
case appropriate pair 
operation arity take arbitrary object morphism way imposing requirement object map codomain morphism unfortunately brations live level hierarchy logical structure level essentially algebraic structure 
account level structure examples categories monadic monadic cat refer reader power pow 
subset cat pow power algebraic structure stranger categories axiomatise premonoidal categories 
premonoidal categories introduced pr generalisation monoidal categories essential feature bifunctor respect class central maps 
de ned central necessarily equal de ned 
way putting say functors ha kb ha kb ha natural respect central maps 
premonoidal category category distinguished class maps containing identities closed composition structure natural respect distinguished subclass 
impossible axiomatise premonoidal categories techniques seen far 
category distinguished class maps containing identities closed composition exactly subset enriched category 
subset category objects sets equipped distinguished subset map 
function monoidal structure product 
subset cat comes equipped notions subset functor functor respects distinguished maps subset natural transformation natural transformation components distinguished maps 
subset cat category cat enriched category section show algebraic subset cat notion category equipped structure distinguished family maps containing identities closed composition ob indexed family functors ha preserve distinguished maps natural respect distinguished maps 
presentation enriched cat 
core power presentation premonoidal categories interesting technique right 
notation 
power writes subset cat ambient category collection distinguished maps inclusion functor 
di erent arrows distinguish classes morphisms reserve usual solid arrow distinguished morphism map power notation dashed arrow arbitrary map map gives di erent object categories single map distinguished class 
arity basic operations take 
cat enriched setting interested category subset functors subset natural transformations subset functor object map 
subset natural transformation vertical arrows maps 
family basic operations subset category 
instance tensor easy calculate 
power notation non identity maps tensor pairings maps identities 
subset cat cartesian closed 
exponential category subset functors natural transformations transformations components distinguished distinguished subset 
take enriched 
purposes 
follows interpretation gives gives data functor 
case 
ensure impose equations de ned depend functorial 
consider map functorial get commuting square writing get expresses naturality respect maps 
category subset functors allow maps get naturality maps automatic fashion 
functoriality consider add 
suppose square get square square commutes take top bottom maps respectively 
need extra structure impose equations force case 
event square tells preserves maps previously know 
construction just hardly elegant left detail equations needed essential point clear single family operations unusual arity suces give essential data including naturality functors 
construction premonoidal categories involve 
simply repeat construction functors impose equation add appropriate natural transformations monoidal category 
saw previous section 
bkp blackwell kelly power 
dimensional monad theory 
journal pure applied algebra 
bur 
alg 
cahiers de topologie eom etrie di erentielle 
bw barr wells 
category theory computer science 
prentice hall 
ch chih ping chen paul hudak 
rolling mutable adt connection linear types monads 
th symposium principles programming languages 
acm press january 
dk kelly 
presentation topoi algebraic relative categories graphs 
journal algebra 
gor gordon 
functional programming input output 
distinguished dissertations computer science 
cambridge university press 
gp gordon power 
enrichment variation 
journal pure applied algebra 
gp gordon power 
algebraic structure bicategory enriched categories 
journal pure algebra 
gu gabriel 
pr volume lecture notes mathematics 
springer verlag berlin 
joh johnstone 
stone spaces volume cambridge studies advanced mathematics 
cambridge university press cambridge 
jw simon peyton jones philip wadler 
imperative functional programming 
th symposium principles programming languages charlotte north carolina january 
acm press 
kel kelly 
basic concepts enriched category theory volume london mathematical society lecture note series 
cambridge university press cambridge 
kel kelly 
structures de ned nite limits enriched context cahiers de topologie eom etrie di erentielle 
kp kelly power 
adjunctions coequalizers presentations nitary enriched monads 
journal pure applied algebra 
kpt kinoshita john power makoto 
sketches 
journal pure applied algebra 
law lawvere 
metric spaces generalized logic closed categories 
del di milano 
lh sheng liang paul hudak 
modular denotational semantics compiler construction 
european symposium programming april 
sheng liang paul hudak mark jones 
monad transformers modular interpreters 
nd symposium principles programming languages 
acm press january 
lin linton 
aspects equational categories 
eilenberg harrison maclane editors proceedings conference categorical algebra la jolla pages 
springer verlag 
ls lambek scott 
higher order categorical logic volume cambridge studies advanced mathematics 
cambridge university press cambridge 
mog moggi 
notions computation monads 
information computation july 
pow power 
algebraic formulation data re nement 
main melton mislove schmidt editors mathematical foundations programming semantics th international conference tulane march april pages 
pow power 

information computation 
pow power 
premonoidal categories categories algebraic structure 
theoretical computer science 
appear 
pr john power edmund robinson 
premonoidal categories notions computation 
mathematical structures computer science 
rob edmund robinson 
parametricity isomorphism 
theoretical computer science 
wad philip wadler 
monads functional programming 
jeuring meijer editors advanced functional programming volume lncs 
springer verlag 
wad philip wadler 
declare imperative 
acm computing surveys september 
wad philip wadler 
marriage ects monads 
international conference functional programming baltimore september 

