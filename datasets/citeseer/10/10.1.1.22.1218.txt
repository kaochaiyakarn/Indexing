artificial intelligence formalizing narratives nested circumscription baral alfredo alessandro department computer science university texas el paso el paso tx usa universit di milano milan italy received june received revised form june representing reasoning narratives ability hypothetical reasoning important agents dynamic world 
agents need record observations action executions narrative time achieve goals changing environment need plans re plan current situation 
early action formalisms 
example original situation calculus meant hypothetical reasoning planning event calculus appropriate narratives 
attempts developing formalisms 
independently lot research reasoning actions circumscription 
particular interest research high level languages logical representation nested abnormality theories nats form circumscription blocks knowledge representation modular 
starting theories high level language extended allow concurrent actions define translation nats preserves narrative hypothetical reasoning 
initially high level language extend allow concurrent actions 
process study knowledge representation issues filtering restricted monotonicity respect nats 
compare formalization approaches discuss nats easier incorporate features action theories constraints formalization 
elsevier science rights reserved 
keywords narratives nested abnormality theories circumscription reasoning actions value minimization corresponding author email cs edu 
email alfredo cs edu 
email dsi unimi 
see front matter elsevier science rights reserved 
pii baral artificial intelligence 
narrative possibly incomplete set observations world terms actions events occurred value fluents different instants past 
initial formulations narratives kowalski sergot event calculus allen temporal logic concerned inferring values fluents time instants explicitly narrative possibly occurrences actions explicitly mentioned narrative 
formulations concerned hypothetical counterfactual reasoning values fluents possible world reached executing sequence actions 
hypothetical reasoning important point view planning agent needs construct plan normally sequence actions achieve particular goal 
formalism situation calculus normally hypothetical reasoning actions forms basis classical planning 
original form allow narratives actual observations expressed values fluents initial situation 

allowing narratives hypothetical reasoning researchers realized importance having formalism captures narratives hypothetical reasoning effects actions 
formalism necessary formulate planning execution actions agent dynamic environment exogenous actions may occur 
agent record observations occurrences actions action executions exogenous happenings fluent values infer 
agent plans importantly may dynamically revise plans construct new ones faced exogenous events 
plans initial situation situation calculus current situation 
terms dynamic planning planning execution reactive planning planning community formalism allows narratives hypothetical reasoning necessary form backbone planners role situation calculus plays classical planners 
miller shanahan pinto reiter considered narratives hypothetical reasoning 
formalisms important contributions showed situation calculus extended incorporate narratives introduced concept actual situations reached actual occurrences actions 
formalisms drawbacks 
example miller shanahan allow fluent facts initial state require action occurrences explicitly stated 
pinto reiter solution suffers premature minimization occurrences minimizing occurrences actions possible existence new situations specified shown formalisms abduction meta level hypothetical reasoning planning 
reiter argued better hypothetical reasoning object level 
action descriptions formalisms restrictive sense allow features constraints 
baral artificial intelligence part axiomatization inferable ruled 
prevents able plans 
result approaches lack re planning ability agent instance making plan packing suitcase driving car airport doing packing observes car damage 
agent see exogenous action caused damage put corresponding action occurrence narrative able infer occurrence observation car damaged 

expressiveness formalism focus general formalism allows narratives hypothetical reasoning overcomes limitations earlier proposals 
particular able express fluent values initial state effects actions fluents allowed precursor express observations fluent facts non initial states actual occurrence actions different time points labeled actual situation constants ordering actual situations 
descriptions includes observations plan current situation doing hypothetical reasoning explain observations inferring action occurrences explicitly mentioned infer new fluent facts narrative various situations explain observations implied counterfactual reasoning action occurrences 
formalism allows clear distinction observations hypothesis clear situation calculus atom holds hypothesis observation 
formulation done novel form circumscription called nested abnormality theories nats 
important aspect approach earlier formalizations narratives done directly logical language formalization grounded high level language developed baral 
half give translation descriptions nested abnormality theories show equivalence 
extend allow concurrent actions give translation descriptions extended language nested abnormality theories 
family high level action languages proposed literature 

high level language approach vs direct formalization approach general researchers high level language formalize reasoning actions normally followed methodology term coined reiter discussed drawback 
papers reiter pinto avoid drawback prevent abandon minimization action occurrences 
explain premature minimization detailed comparison approach theirs section 
baral artificial intelligence developing high level language fairly restricted language english syntax easily followed precise semantics commonsense assumptions formulation precise defined automata easier incorporate notions frame qualification ramification difficult encode logical language defining correct complete translations high level language theories classical logic logic programming apply existing query answering systems compare different approaches known setting 
approaches directly formalize reasoning actions logical language refer direct formalization approach require initial descriptions particular form restricted subset logical language 
high level language approaches queries required restricted syntax direct formalization approach allows queries sentence logical language 
may big plus point direct formalization approach restricting query language faster querying mechanisms developed 
reality systems databases knowledge bases including expert systems 
main difference approaches direct formalization approach semantics directly defined standard logical language grounding independent semantics 
having extra semantics may superfluous sight forms basis logical formalization grounded correctness precise mathematical question 
absence extra semantics correctness direct formalization approach empirical question different examples english formalized adequacy formalization decided formalization examples matches intuition 
examples english assumptions surrounding partially stated opening possibility multiple interpretations result adequacy correctness direct formalization approach precisely settled 
new example different underlying assumptions original formalization starts debate adequacy formalization 
partially happened debate yale shooting problem 
extra semantics high level language approach defined automata structures state collection fluents notions difficult express logical language easy formalize 
having semantics precisely determine logical formulation difficult notion frame problem correct 
having extra semantics inherent difficulty experts mathematics logical languages hard evaluate appropriateness formulation direct approach 
contrast simplicity high level semantics easier evaluate appropriateness respect examples 
anecdotal examples point 
formalization frame problem various logical languages subject debate issues 
formulation high level language extremely simple example expressed correctness particular logical formulation easily settled checking matches semantics formulation second anecdotal example case premature baral artificial intelligence minimization mentioned earlier 
feature intended researchers working directly situation calculus 
fact goal capture narratives planning 
unfortunately direct logical formalization verified respect independent semantics unintended consequence 
highlevel language approach reduced debate prevented oversight 
add high level language approach facilitates comparison different theories action 
best example kartha comparison action languages translating proving equivalence 
having high level descriptions independent semantics corresponding circumscriptive theory agree hoare view specifications highest quality importance recommend complete formalization requirements entirely different styles proof consistent equivalent 
language consistent complementary definitions provided may confidently taken secure basis software engineering 

advantages nested abnormality theories major advantage nested abnormality theories allows easy incorporation additional features constraints formalized absence narratives nats 
nesting blocks nats may glance suggest loss elaboration tolerance believe easier represent knowledge particularly action domain see 
develop blocks represent meaningful structural units blocks units worrying undesired interactions 
sub theory predicate definition elaborated just changing appropriate block nonlocal surgery rest theory 
section show add constraints theory changing block encodes transition function 
extent flat circumscription formalize large body knowledge writing large program subroutines 
believe simplicity translation demonstrates usefulness nats knowledge representation 

contributions additional important contribution formalization constitutes full nontrivial example value minimization technique developed baral minimizing value function circumscriptive theory 
value minimization formalization capture assumption action occurrences derived set observations necessary explain observations 
reasoning narratives allow facts states partial knowledge action occurrences need form abduction entail baral artificial intelligence occurrence actions values fluents time points explicitly stated narrative 
particular kind abductive reasoning explanations restore consistency done meta level filtering object level 
sum formalization independent interest point view knowledge representation nonmonotonic logics illustrates usefulness nats terms ease representation restricted monotonicity value minimization functions knowledge representation formalization filtering nats 

organization rest start overview high level language section overview nats section 
give translation domain descriptions nats section illustrate nat characterization respect examples section 
section discuss value minimization functions role translation described section 
section formally relate entailment entailment translation 
section extend allow concurrent actions give translation domain descriptions extended language nats relate entailment relation 
section show formulation terms nats easily extended take account constraints section discuss restricted monotonicity property nat formulation show relation abductive reasoning filtering restricted monotonicity 
section compare earlier combining narratives hypothetical reasoning particularly miller shanahan pinto reiter mccarthy 
proofs 
overview high level language developed baral allow representation reasoning narratives hypothetical reasoning 
syntax semantics defines translation logic programs prolog subclass language 
start translation domain descriptions nats extend allow concurrent actions 
clear contribution development formalization nats allows easy integration additional features constraints study nat formalization terms impact knowledge representation general 
give brief overview syntax semantics self contained motivations choice constructs language give examples 
additional detailed motivations examples 
alphabet consists disjoint nonempty sets symbols called fluents actions situations denoted possibly baral artificial intelligence indexed letters respectively 
assume contains special situations sn called initial current situation respectively 
fluent literal fluent possibly preceded fluent literals usually denoted letters indexes 
equated fluent mean mean kinds propositions called causal laws facts 
causal laws effect propositions causal law expression form causes action fluent literals 
called preconditions 
read guaranteed true execution action state world true 
write causal law causes atomic fluent fact expression form fluent literal situation 
intuitive reading observed true situation 
agent dynamic world update knowledge world adding fluent facts observations database 
atomic occurrence fact expression form occurs sequence actions situation 
states sequence actions observed occurred situation 
assume actions sequence follow immediately 
agent dynamic world update knowledge action occurrences exogenous actions actions executed agent adding occurrence facts database 
atomic precedence fact expression form precedes situations 
states domain situation situation agent precedence facts record temporal ordering observations fluent facts occurrence facts 
precedence facts saying situation precedes initial precedes course forbidden 
propositions type express general knowledge effects actions referred laws 
propositions called atomic facts observations 
fact propositional combination atomic facts 
collection laws facts called domain description sets laws facts domain description denoted respectively 
domain descriptions required satisfy properties stated situations mean actual situations 
baral artificial intelligence propositions contain situation constant sn situation occurrence fact 
property important allows nonmonotonic interpretation situation constant sn represents current situation 
purpose second property prohibit concurrent actions important feature agent associated theory ability reason incomplete narratives revisable nonmonotonic observations missed 
example illustrates point 
example discovering occurrences 
consider version stolen car example know initially car garage 
instance time observe longer car 
know car gets stolen longer car 
description story steal car causes car car car precedes intuitively description smart agents conclude action steal car occurred situation explaining fact situation car situation longer 
words action steal car occurred initial situation causing car false 
semantics language defined section ensures entails steal car occurs clear reaching making assumptions domain 
example assuming action steal car action may cause car false 
explained occurrence action 
assumptions embodied domain descriptions discussed subsection 
note fluent facts situations allowed shown example semantics able capture form abductive reasoning able explanations observations 

assumptions embodied domain descriptions domain descriptions conjunction informal assumptions restrict language agent perform intelligent hasty revisable reasoning agent object language meta level reasoning 
baral artificial intelligence changes values fluents caused execution actions actions language domain description effects actions specified causal laws actions occur needed explain facts domain description actions overlap happen simultaneously 
assumptions give intuitive understanding domain descriptions wenow semantics domain descriptions defined precisely specifies sets acceptable reached descriptions assumptions 

semantics states world represented sets fluents 
fluent belongs set iff holds state 
actions executed particular state may add remove fluents causal laws 
set possible evolutions world described causal laws represented transition diagram states corresponding states world transitions labeled actions 
satisfying facts domain description intuitively consists selecting state initial path diagram describing actual evolution domain 
state set fluent names 
causal interpretation partial function sequences actions states empty sequence belongs domain ii prefix closed 
called initial state partial function serves interpretation laws sequence belongs domain say possible initial state fluent state say holds true iff holds false iff propositional formula respect defined usual 
better understand role plays interpreting domain descriptions define models descriptions consisting entirely causal laws 
goal attempt carefully define effects actions determined description informal assumptions 
fluent immediate effect executing causal law preconditions hold define sets immediate effect prefix closed mean sequence actions action domain means sequence actions follows 
laws interpreted transition function states actions states function interpretation initial state form interpretation domain description 
restricted syntax formulation decided stick original semantics time chosen accommodate extensions involving triggers actions nondeterministic effects 
baral artificial intelligence immediate effect res 
definition captures meaning causal laws definition causal interpretation 
causal interpretation satisfies causal laws sequence language res undefined 
say ha causal model satisfies causal laws causal models uniquely determined initial values causal models domain description ready discuss observations interpreted arbitrary domain description causal interpretation causal model interpret observations need define meaning situation constants consider mapping sequences actions language definition situation assignment 
mapping sequences actions called situation assignment satisfies properties ii prefix sn 
intuitively condition ensures initial situation 
second condition ensures situation constants refer actual situations situations happened far 
maps action sequences prefix action sequence happened denoted sn 
definition interpretation 
interpretation pair causal model situation assignment sn belongs domain sn called actual path define truth facts respect interpretation facts true called false definition 
interpretation true satisfied iff true ii occurs true prefix actual path iii precedes true proper prefix 
truth nonatomic facts defined usual 
course set facts true interpretation members true complete definition model need formalize assumption domain descriptions actions occur needed explain facts domain baral artificial intelligence description 
similar assumption pinto reiter 
done imposing minimality condition situation assignments leads definition 
definition model 
interpretation model domain description conditions satisfied causal model ii facts true iii interpretation satisfies condition ii subsequence sn 
important note minimizing actual action occurrences initial situation current situation 
minimization done 
instrumental formalization avoid trap premature minimization discuss section 
final definition matter course 
definition 
domain description said consistent model 
domain description entails fact written iff true models 
hypotheses entailment planning current situation necessary agent dynamic environment exogenous events may occur agent may need revise plan construct new ones starting current situation 
fact agent realizes execution plan changed conditions effective longer sense agent plan initial situation 
agent wish away happened 
needs plan situation currently 
describe plans able counterfactual reasoning construct called hypotheses form 
intuitively hypothesis means holds hold actions executed note may sequence actions followed making counterfactual statement 
sn just write 
statements denote reasoning plans starting current situation 
intuitively hypothesis means holds hold actions executed sn note construct different meaning recall subsequence exists strictly increasing sequence indices baral artificial intelligence language means holds hold actions executed initial situation write hypothesis currently 
hypotheses part domain description part query language 
say hypothesis form true model domain description holds entails hypotheses true models truth hypotheses forms defined accordingly 
define notion plan current situation 
definition bara gelfond 
domain description set fluent literals 
sequence actions plan current situation achieving goal fluent literal describe examples illustrate expressibility language earlier mentioned section 

examples illustrating expressibility 
explaining observations formally show intuition discussed example captured semantics example observation explained discovering missing action occurrences example inferring missing action occurrences 
consider domain description example 
fact car car 
causal law steal car causes car car steal car steal car sequence steal car 
easy see sn steal car minimal sequence satisfying facts domain description 
steal car prefix sn 
entails steal car occurs discuss example observations explained discovering missing action occurrences new fluent facts known 
suppose agent domain description consisting laws observations baral artificial intelligence shoot causes loaded shoot causes alive loaded unload causes loaded alive alive precedes entailment relation illustrate features missing action occurrences shoot occurs explaining observation alive false conclude action shoot occurred discovering new fluent facts past loaded explaining observation alive false conclude loaded true discovering new fluent facts current situation currently loaded 
explaining observations allow discover new facts past new current situation 
case able conclude gun loaded current situation 
counterfactual reasoning alive unload shoot earlier concluded shoot occurred reason happened gun unloaded shoot happened conclude alive true resultant situation 
type counterfactual reasoning possible reasoning counter really happened form counterfactual reasoning reasoning 
planning current situation example show planning re planning done agent dynamic world 
important point view agent architecture agent continuously observes world adds observation domain description new plan current situation reach goal executes part plan records actions domain description going back observe 
planning cycle needs done situation agent moment referred current situation initial situation 
fact agent wish away happened performed environment initial situation 
note complexity planning architecture may useful agents mobile robots need react real time reactive architecture appropriate case may useful internet agents time plan 
baral artificial intelligence example 
suppose agent initial knowledge terms various actions effects values fluents initial situation 
load causes loaded unload causes loaded set target causes target set shoot causes target hit loaded target set loaded target set hyp agent goal target hit develops plan set target shoot checking hyp target hit set target shoot holds 
agent proceeds execute action set target adds set target occurs precedes domain description 
call updated domain description hyp point agent domain description hyp entails currently loaded currently target set 
executing action observes gun longer loaded updates domain description adding loaded precedes 
call updated domain description hyp concludes hyp currently target set hyp currently loaded hyp set target unload occurs unload set target occurs agent notices longer continue original plan hyp target hit shoot 
agent proceeds re planning current situation sn initial situation initial plan starting set target shoot new plan load shoot hyp target hit load shoot 
assuming incident takes place agent proceed current plan reach goal 
baral artificial intelligence 
overview nested circumscription nested abnormality theories nats novel circumscription technique introduced lifschitz 
nats possible circumscribe predicates respect parts theory interest opposed previous techniques circumscription done respect axioms underlying theory 
furthermore complications arising interaction multiple circumscription axioms theory avoided nats blocks 
block characterized set axioms possibly containing abnormality predicate ab describe set predicate function constants notation theory may block form 
description block may depend descriptions embedded blocks 
interference circumscription different blocks prevented replacing predicate ab existentially quantified variable 
lifschitz idea ab local block abnormality predicates play auxiliary role interesting consequences theory contain ab 
section contains formal definitions concepts 

syntax semantics nats definitions 
second order language include ab 
natural number language obtained adding ary predicate constant ab block predicate function constant formula block 
nested abnormality theory set blocks 
semantics nats characterized mapping blocks sentences ifa formula language stands universal closure ab ab ab circ ab 
recall circ means circumscription theory minimizing predicates varying objects nat stands amodel model sense classical logic 
consequence sentence language true models suggested abbreviation min denote blocks form ab 
baral artificial intelligence notation suggests type block necessary circumscribe particular predicate block 
shown min equivalent formula circ sentence 

domain descriptions nats ready translation nats 
start formally describing typical relations sequences proofs 

relations sequences relations interested prefix subsequence concatenate 
relations captured nat blocks prefix eq subsequence andb concatenate respectively section 
formal description relations important ensure intended instances relations included models theory described sections 
start defining prefix relation denoted bm rest section mean syntactic identity 
second relation need describe subsequence bm 
relation formalizes notion subsequence intuitively contains elements order may contain elements 
relation defined block subsequence theory 
third relation needed dealing sequences concatenation 
concatenate sequences actions reverse bm bm bm bm block concatenate defines relation 

target language language theory sorted borrows notation standard situation calculus 
sorts actions fluents situations sequences variables sorts denoted possibly indexed letters respectively stated 
variables sequences denoted possibly baral artificial intelligence indexed greek letters language includes elements action constants fluent constants situation constants 
includes sequence constant stands empty sequence 
sequences actions defined means function sequences actions sequences 
sequences actions constructed multiple application function 
infix notation similarity res function widely situation calculus ignore parenthesis ambiguity 
example sequence 
addition function predicate constants sit map function maps situations sequences prefix eq arguments sort situation predicate captures relation sequences subsequence captures relation holds sorts fluent sequence meaning true state resulting executing initial situation concatenate captures relation sequences causes sorts action fluent sequence meaning executing state resulting executing initial situation true false 

framework axioms yield expected results theory includes set extra axioms represent domain closure assumption theories particular assumption actions language domain description 
unique name assumptions actions fluents situations theory 
fm sn una actions una fluents una situations una sort standard set inequalities distinct pair constants sort una situations stands rest refer sentences framework axioms 

translation facts atomic facts translated follows holds sit map occurs concatenate sit map prefix eq sit map baral artificial intelligence precedes prefix eq sit map sit map prefix eq sit map sit map nonatomic facts translated obvious way 
fact denote translation 
collection facts domain description formulae denoted 

resulting nat translation domain descriptions nats universal quantification highest scope implicit free variables sit map sit map prefix eq sit map sit map subsequence sit map ab sc prefix eq subsequence concatenate framework axioms sc causes causes holds holds causes holds causes holds min causes causes causes min causes causes causes baral artificial intelligence translation positive fluent literal denotes holds negative fluent literal denotes holds 
predicate causes form comes originally lifschitz 
prefix eq min prefix eq prefix eq prefix eq prefix eq subsequence min subsequence subsequence subsequence subsequence subsequence subsequence concatenate min concatenate concatenate concatenate concatenate compare axioms definitions section semantics 
blocks prefix eq subsequence concatenate define predicates prefix eq subsequence concatenate respectively 
axioms inside blocks definite clauses appendix results show correct representation corresponding relations 
sc part similar standard situation calculus captures meaning causal laws 
models sc correspond causal models 
show section 
inside sc blocks minimize predicates causes causes intuitively encode informal assumption section saying effects actions specified causal laws 
axiom sc encodes frame axiom assumption section order statement second third axioms sc encode effect actions fluents 
axioms encode definition straightforward manner 
axioms encode definition straightforward way 
minimality condition iii definition corresponds assumption section encoded axiom plus circumscription ab 
intuitively minimization value term sit map accomplished axiom minimizing ab varying sit map 
discussion axiom technique exemplifies follows section 
baral artificial intelligence moving quickly review various informal assumptions described section encoded nat 
discussed assumptions assumption captured framework axioms 
verifying assumption captured translation slightly involved suppose situation occurs occurs occurred concurrently situation result concatenate sit map prefix eq sit map concatenate sit map prefix eq sit map hold hard prove implies 
translation hypotheses hypotheses appear domain descriptions define translation check entailed nat theory 
hypotheses form translation defined follows concatenate sit map holds 

value minimization functions introduced concept value minimizing function 
forcing function map elements domain minimal elements range minimality criterion respect arbitrary partial order defined range 
completely different earlier formulations circumscription function predicates formulas allowed vary minimized 
mentioned formalization narrative applies technique 
order capture condition iii definition minimize value function sit map term sn respect partial order sequences defined predicate subsequence 
instance term minimization 
intuitively forces sit map map sn minimal possible sequence facts axioms remain satisfied 
syntactic definition value minimization respect application express minimization sit map follows subseq stand minus axiom subseq denote subseq sit map arbitrary sequence 
term sit map minimized respect subsequence postulating subseq subseq subsequence subsequence 
show value minimization function theory respect ordering defined block inside varying predicate function constants achieved nat 
ab baral artificial intelligence minimize term corresponding nat characterization 
ab applying result observing case function sit map predicate subsequence sn obtain nat characterization formula 
sit map 
subsequence sit map ab subseq exactly translation 

nat characterization simple domain descriptions section illustrate nat characterization domain description examples 
example 
consider domain description example translation corresponds holds car sit map holds car sit map prefix eq sit map sit map prefix eq sit map sit map sub block sc defining causes min causes causes steal car car equivalent causes steal car car 
sub block defining causes empty causes false 
axiom causes holds fact steal car action language follows sequence holds car iff steal car 
baral artificial intelligence holds car sit map sit map steal car sequence 
value minimization axiom sit map sit map steal car blocks concatenate prefix eq get concatenate sit map steal car steal car prefix eq steal car sit map steal car occurs holds 
consider slightly different example observations new truth values fluents 
example abduction fluent values 
consider scenario gun causes fred die fired loaded 
suppose know fred observed alive moment time dead moment 
description captures scenario shoot causes alive loaded alive alive precedes consider corresponding nat starting inner blocks 
sub block defining causes empty causes 
sub block defining causes contains axiom holds loaded causes shoot alive 
minimization causes block obtain 
causes shoot alive holds loaded 
includes holds alive sit map holds alive sit map reason value fluent loaded initial state 
cases loaded initially false holds loaded action affects fluent causes loaded causes loaded wehavethat holds loaded 
follows causes 
baral artificial intelligence fact alive axiom obtain holds alive axiom causes causes holds holds conclude holds alive 
fact alive holds alive sit map 
contradiction initial assumption loaded initially false ruled 
possibility loaded initially true holds loaded holds 
implies causes shoot alive axiom causes holds obtain holds alive shoot 
clearly interpretation sit map sn mapped sequence shoot satisfies minimization sit map 
remains easy prove interpretation model theory entails shoot occurs 

correctness nat formalization section formulate results correctness nat formalization domain descriptions process domain description show equivalence models sc causal models illustrates modularity nat formulation section discuss allows easily extend language additional features constraints replacing sc 
proofs lemmata theorem section appendix 
denote sequences context semantics nat formalization 
instance stands sequence actions may write holds meaning holds am 
equivalence sc proved assumption defined sequence actions 
restriction removed section concurrent actions considered 
proposition causal equivalence 
causal model exists model sc sc framework axioms sc holds 
model sc sc exists causal model holds 
conditions satisfied disallowing contradictory causal laws axioms causes causes said contradictory qm 
baral artificial intelligence proposition equivalence models 
domain description interpretation model exists model fact language model exists model holds 
proposition equivalence 
domain description fact language 
proposition shows correctness theory respect hypotheses 
proposition 
domain description hypothesis language 

narratives concurrent actions section consider reasoning concurrent actions narratives 
means informal assumption section weakened allow concurrent contemporaneous actions 
allow overlapping actions 
semantics extended allow concurrent actions 
consider concurrent actions consisting simultaneous execution finite number basic actions effects 
sophisticated treatment concurrent actions setting see 
refer language extended semantics 
extended semantics concurrent actions characterized finite nonempty sets basic actions 
consider changes required semantics account concurrent actions 
need redefine effect action general notion action 
singleton concurrent action basically basic action action mean concurrent action 
say fluent effect action state action immediate effect furthermore replace definitions sets effect effect 
need notions 
say embedded written ifb intuitively means baral artificial intelligence obtain removing basic actions concurrent action action sequence 
furthermore say embedded subsequence subsequence embedded 
definitions causal interpretation situation assignment interpretation consistent domain description remain 
need modify definitions 
definition 
interpretation true satisfied iff true ii occurs true prefix actual path 
iii precedes true proper prefix definition differs counterpart definition point ii truth action occurrences defined concurrent actions 
definition 
interpretation called model domain description conditions satisfied causal model ii facts true iii interpretation satisfies condition ii embedded subsequence sn 
definition differs definition point iii minimality condition terms relation embedded subsequence 

translation nats modify nat translation section accommodate semantics translation sets represent concurrent actions 
axiomatize sets operations assume standard interpretation 
concurrent actions introduce new sort called actions 
function sorts action sequence sequence 
new predicates introduced 
need change sub theory sc capture effects concurrent actions 
kind concurrent actions considered inherit effects constituent actions 
include blocks defining predicate inherits defining predicate inherits arguments sorts action fluent sequence respectively min inherits causes inherits formulation nat set theory please see cs edu papers nat ext ps 
baral artificial intelligence block inherits defined similarly 
intuitive meaning inherits concurrent action inherits effect sub actions situation executed 
add block defining predicate undef characterizing action sequences causal interpretation undefined 
min undef inherits inherits undef undef undef replace axioms sc axioms inherits inherits holds holds undef inherits holds undef inherits holds 
add new block embedded level nesting blocks defining prefix eq defines embedded arguments sort sequence embedded min embedded embedded embedded embedded embedded embedded new ordering embedded subsequence captured predicate defined terms relations embedded subsequence block min embedded subsequence top level nesting add axiom undef sit map restricts actual situations mapped defined states 
need restriction allow contradictory causal laws guaranteed causal interpretation defined action sequences 
baral artificial intelligence sit map minimized respect partial order replacing axiom axiom sit map ab 
denote new theory modified block sc sc sit map undef sit map sit map prefix eq sit map sit map sit map ab sc prefix eq subsequence concatenate embedded framework axioms sc inherits inherits holds holds undef inherits holds undef inherits holds min causes causes causes min inherits causes inherits min undef inherits inherits undef undef undef baral artificial intelligence translation facts occurrence facts occurs stand embedded concatenate sit map prefix eq sit map state correctness nat formulation propositions similar section 
proofs proposition causal equivalence 
causal model exists model sc sc sc holds undefined sc undef 
model sc sc exists causal model holds 
proposition 
domain description interpretation model exists model fact language model exists model holds 
proposition 
domain description fact language 
example 
consider scenario guns cause fred die fired loaded 
suppose know initially gun loaded fired 
domain description captures story shoot causes alive loaded shoot causes alive loaded alive loaded loaded shoot shoot occurs guns easy see guns entails alive sn baral artificial intelligence 
extension allowing actions indirect effects section discuss nat formalization easily extended allow ramification constraints axioms executability actions 
giunchiglia introduced high level language ar mentioned features additional ones actions nondeterministic effects fluents absence narratives 
give formulation temporal projection problems ar nats 
essentially restrict formulation boolean fluents say nat characterization corresponds causal model extended language allows ramification constraints executability conditions non deterministic effects 
nats nestings independent blocks replace sc part nat section characterizes causal model original restricted language new theory captures causal model extended language 
resultant nat gives characterization extension constraints executability conditions allowed 
syntax ramification constraints executability conditions touch addition necessitates changes semantics 
constraint form propositional fluent formula 
intuitively constraint lake wet asserts lake wet 
semantics extended constraints defined requiring res set valid states closest sense set difference contain contain element valid states states satisfy constraints requiring element res 
guarantees holds undefined captures indirect effect actions due constraints 
executability condition form impossible fluent literals 
semantics point view proposition type satisfied causal interpretation undefined satisfied 
instance impossible get lake lake means impossible execute action get lake state lake false 
baral artificial intelligence ready discuss theory obtained replacing sc sc encodes transition function presence constraints executability conditions 
theory sc sc constraint holds holds holds undef ab holds holds holds min undef undef causal law undef proposition undef undef constraint stands universally closed formula obtained constraint replacing fluent literal 
note sc slightly modified simplified version main part nat 
main differences boolean fluents ones conjunction fluent literals part causes part fluent formulas 
restrictions simplicity stay close possible able point easy incorporation constraints executability conditions outer block sc encodes res actions states mapped action sequence 
encoded holds res encoded holds inner block defines actions undefined executable state 
reason having different predicates holds holds varying minimizing ab individually minimize difference res globally minimizing differences 
precludes models may result intuitive interpretations ruled 
baral artificial intelligence consider example causes domain description 
replaced holds sc holds 
minimizing undef varying holds inner block result holds models inner block 
prevented separate holds holds glance necessary inner block needed specify undefined action sequences may arise possible interaction effect axioms constraints happen domain constrained initially true 
note constraints meant ramifications causes application state true directly true resulting situation indirectly ramifications false resulting state 
hand causes causes executable situation true 
capture need inner block 
axiom encodes law inertia 
axiom restricts states valid making sure satisfy constraints 
axiom relates holds holds minimizations done appropriately inner outer blocks axiom selects models holds holds agree 
difference sc corresponding theory case second argument holds sequence actions ones state 
situation constants language mapped sequence actions requirement 
discuss allowing indeterminate propositions easily incorporated 
indeterminate proposition form possibly changes may incorporated sc adding ab just inside outer block defining holds formally state prove equivalence causal interpretation domain description constraints executability conditions corresponding sc equivalence directly follows 
correspondence domain descriptions extended constraints executability conditions corresponding nats sc replaced sc follows slight modifications proof lemma 
stress ability nats allow treat blocks similar way subroutines structured programming nats strong tool knowledge representation 
allowed take block formalization actions giunchiglia insert theory practically complications 

filtering restricted monotonicity best knowledge largest circumscriptive theories literature terms number levels minimization filtering 
baral artificial intelligence testbed examples analyzing expressibility nats circumscription general terms various kr features incorporate 
section discussed value minimization functions expressed nats theory section focus additional aspects filtering restricted monotonicity respect 
filtering notion filtering introduced sandewall 
define follows definition 
possibly nonmonotonic theory observation set sentences order logic 
filter refer theory models models order models proposition 
filter monotonic respect proof 
follows directly definition filter adding sentences decrease models filter 

restricted monotonicity filtering concept restricted monotonicity introduced lifschitz 
subsection recall definitions show filtering restricted monotonicity related restricted monotonicity captured nats 
definition lifschitz 
declarative formalism defined set symbolic expressions called sentences symbolic expressions called postulates cn sets postulates sets sentences 
set postulates referred theory sentence consequence theory cn 
definition lifschitz 
cn declarative formalism 
subset designated set assertions set set parameters 
theory said satisfy restricted monotonicity condition respect sets cn cn lifschitz gives examples restricted monotonicity kartha prove restricted monotonicity ar ar generalize results discuss restricted monotonicity associated filtering general 
case filtering say theory filter restricted monotonicity property respect follows directly considering parameters statements language observations defining cn set true models filter considering set sentences 
baral artificial intelligence filtering easily achieved nats means blocks representing making easy express restricted monotonicity nats 
exactly happens respectively 
moving analyze blocks say words nats knowledge representation language 
issue advances automated circumscriptive reasoning benefit nats nats representing knowledge allow encode nonmonotonicity certain aspects time guarantee encoding restricted monotonicity respect 
nesting allows levels filtering 
prima facie equivalence filter filter filter may suggest levels filtering needed 
hand need compute filter min filter minimize filter respect ordering filtering result assuming encoded varying minimizing ndt nat represent filter min filter minp 
analyzing blocks sub blocks consider inner block sc call inner intuitively block things encodes function holds literals undef literals 
axioms partially define function refined minimization undef varying holds leaves open possibility add observations successful execution sequences 
sequence succeeded add undef new block consisting undef added level axiom 
nat consisting inner basically filtering inner resultant models models inner models monotonic respect addition observations nonmonotonic respect addition causal laws constraints executability conditions change inner call outer outer block sc intuitively encodes function holds literals undef holds literals 
observations holds put outside knowledge representation languages filtering easily done logic programming representing observations integrity constraints 
hand logic programs easily allow hierarchy integrity constraints 
multiple levels filtering easily represented logic programs 
baral artificial intelligence outer axioms sc observations filter nat outer resulting theory restricted monotonicity property observations 
block represents function literals predicates occurs holds subsequence prefix eq concatenate mappings function sit map 
observations value sit map incorporated putting outside 
observations filter models keep agree 
hypothesis form treated observations top domain description incorporate nat consisting adding concatenate sit map holds nat inside 
observations filter select models agree observations 
theory filter obs monotonic respect hypotheses nonmonotonic respect facts incorporated changing 

related distinct directions reasoning actions situation calculus hypothetical reasoning planning normally considered simple actions continuous actions actions durations particular allen temporal logic kowalski sergot event calculus focused reasoning narratives allowed actions durations continuous actions consider hypothetical reasoning 
late eighties early nineties influential works big impact field triggered flurry new research 
appear special journal issues workshops aaai workshop reasoning actions aaai spring symposium extending theories action aaai ijcai kr conferences 
general influenced approach high level action description languages formalization particularly ar nested circumscription 
previous sections argued believe nested circumscription excellent kr language listed features 
acknowledge sandewall idea filtering nats common 
section compare nats sandewall filter preferential entailment give detailed comparison proposals narrative hypothetical reasoning particularly mccarthy kakas miller miller shanahan pinto reiter 

sandewall filter preferential entailment notion filtering introduced sandewall able formally obtain explanations terms action occurrences action descriptions terms conditions effects physical laws observations values fluents specific time instants 
argued approach obtain plan baral artificial intelligence specific goal considering goal observation needs explained considering explanation plan achieves goal 
sandewall notion filtering general 
nats formalism instance circumscription minimizations local abnormal predicates 
motivates intuition filtering models theory containing action descriptions natural laws observations observations models theory containing action descriptions natural laws observations appealing example involving moving object 
give different justification section show filtering resulting theory restricted monotonicity property respect observations 
sandewall formalism considers important aspects narratives explaining values fluents different time instants action occurrences cover issue hypothetical reasoning presence narratives notion planning current situation 
hand sandewall considers actions durations considered 

mccarthy formulation situation calculus concurrent events narratives section relate mccarthy draft titled situation calculus concurrent events narrative available web page 
comparison quotes draft 
mccarthy says situations narrative partially ordered time 
real situations totally ordered narrative include full information ordering 
agree statement formalization narrative description partially ordered situations having models encoding partial ordering model encodes possible total ordering situations 
writes narrative necessary said hold situation logical consequence said hold previous situation known common sense facts effects events 
narratives anomalous 
want introduce concept proper narrative clear exactly 
fluents holding new situation reasonable outcomes events reported fluents newly asserted 
formulation said hold situation may logically follow rest description incorporate assumption explanation 
assumption part formulation said hold situation logical consequence action occurrences leading situation 
action occurrences need explicitly stated original description may abduced baral artificial intelligence observations 
course description may models suggesting different action occurrence 
believe formulation suggests definition proper narrative whichis defined formulation require models description encode proper narratives lack information leading having unique proper narrative results multiple models description 
mccarthy goes writing narrative easy clear facts included narrative assertions inferable narrative 
hope previous sections satisfactory answer 
mccarthy discusses elaborations actions narrative finer actions sub narratives consider 
mccarthy informally discusses interesting example involving narratives 
example versions consisting narratives occurring concurrently independently narratives points interaction 
example show second version example represented 
representation version subset representation second version 
example glasgow london moscow new york 
story person called daddy new york stacking blocks 
time person called junior glasgow tickets traveling glasgow moscow london 
arriving london junior loses ticket sends daddy asking money 
daddy sells blocks get money sends junior 
junior gets money buys london moscow ticket finishes trip 
part domain description captures story causal law schemata flies prsn causes prsn prsn flies prsn causes prsn prsn prsn lose prsn causes prsn buys prsn causes prsn prsn money sells prsn blk causes prsn money sells prsn blk causes prsn money sends prsn prsn causes sent prsn prsn prsn receives prsn prsn money causes prsn money sent prsn prsn money receives prsn prsn causes rcvd prsn sent prsn prsn stack prsn causes clear clear baral artificial intelligence fluent facts initial situation junior daddy jr gw ny jr gw money jr blk blk blk tbl blk tbl occurrences actions junior daddy flies jr gw occurs stacks blk blk occurs lose jr occurs sends jr occurs receives jr occurs sells blk occurs sends jr money occurs receives jr money occurs buys jr occurs flies jr occurs ordering situations precedes precedes precedes precedes precedes precedes precedes precedes precedes precedes baral artificial intelligence domain description semantics tells things money jr money currently jr precedes precedes entailed domain description 
intuitively sub narratives occurring simultaneously points interaction 
reality total order events domain description entail order contains partial information 

miller shanahan circumscriptive approach miller shanahan introduced formalization narratives situation calculus circumscription 
formalization narrative similarities 
function state maps time points real numbers situations constructed function res initial situation action constants similar maps situation constants sequences actions 
formalization requires domain description include occurrences actions fluent facts restricted initial situation 
approach general respect restrictions 
propositional combinations fluent facts occurrence facts precedence facts allowed formalization 
semantics incorporates abductive reasoning necessary regarding occurrences actions values fluents different situations explicitly stated domain description 
hand contains discussions allowing divisible overlapping actions discuss 

kakas miller kakas miller introduced high level language event calculus 
domain description language consists propositions propositions propositions similar causal laws atomic occurrence facts atomic fluent facts language 
time points correspond situation constants language 
major differences language ordering situation constants part domain description language part domain language 
hypothetical reasoning done defining sequences hypothetical time points corresponding hypothetical situation time point consecutive hypothetical situations defining ordering sequences 
definitions included domain language 
addition hypothetical action occurrences added domain description 
example illustrates reason hypothetical situation res shoot res load domain language contain sequences ii load point restrictions weakened abduction 
baral artificial intelligence iii load load iv load load shoot load load shoot shoot 
sequences iii correspond situations res load andres shoot res load respectively 
sequences ii iv correspond time point situations res load res load res shoot res load respectively 
sequences ii iv necessary able specify action load happened sequences ii action shoot happened sequences iv 
domain language contain ordering sequences precedes load precedes load load precedes load load shoot precedes load load shoot shoot 
domain description contain action occurrences load happened load shoot happened load load shoot 
noted number sequences infinite making domain language infinite number action occurrences infinite 
finitely expressed logical language logic programming 
hopefully example illustrates additional formulation opposed incorporating narratives hypothetical reasoning going necessary simulating hypothetical reasoning narrative language important know kakas miller show hypothetical reasoning done narrative language 
information action occurrences called propositions assumed complete 
restrictive simulate incompleteness introducing notion explanation restores inconsistency theory completeness assumption contradictory 
start explanation consisting action occurrences explanation incorporate explanation consisting propositions causal laws 
formalization assume set causal laws complete 
kakas miller consider projection domain descriptions propositions atomic fluent facts allowed initial situation propositions referred propositions discuss incorporate observations fluent values time points propositions referred propositions 
incorporate observations explaining terms additional propositions called explanations explaining terms propositions propositions called ih explanations propositions restore consistency 
contrast domain descriptions allow incomplete information action occurrences values fluents initial situations partial specification ordering situation constants 
formulation model domain description fills missing action occurrences baral artificial intelligence total ordering situation constants 
ordering timepoints total orders hypothetical time points 
incorporate concept ih explanation explanation explanation object language resorting restoring consistency meta level explanation 
allow explanations propositions causal laws consider fixed 
believe notions current situation planning current situation important 
notions considered 

pinto reiter actual legal situations pinto reiter ones introduce time line situation calculus allowing hypothetical reasoning inherent situation calculus expression event occurrences values fluents different time instants 
approach reiter solution frame problem restricted actions appealed circumscription minimize occurrences 
formalization introduced predicate actual situations characterize situations lie path describes world real evolution 
similar formalism allows possibility inferring action occurrences explain observations explicitly specified part axiomatization 
avoid inferring occurrence superfluous actions minimize predicate occurs 
formalism notion current situation planning current situation 
notion planning boils finding actual situations satisfy goal 
minimization occurs actual line possible existence new situations ones specified part axiomatization inferable ruled results able find new situations goal satisfied 
reiter refers premature minimization problem points miller shanahan formalism suffers 
minimize action occurrences formalism suffer problem minimization define current situation planning hypothetical reasoning possible current situation 
pinto thesis builds discusses new issues including concurrent actions continuous actions natural events core approach reiter solution frame problem definition actual minimization occurs remains unchanged suffers problem premature minimization inability executable plans 
pinto reiter abandon minimization occurrences allow possibility hypothetical actual branches situations referred legal actual restores capability making plans 
approach planning finding legal situation goal satisfied 
clear notion planning useful scenario agent dynamic world 
agent need plan issue planning directly mentioned discussion premature minimization notion planning pinto reiter mind 
baral artificial intelligence initial situation pinto reiter approach give needs plan current 
try list major differences approach pinto reiter 
approach high level language restrictive compared pinto reiter 
example domain description allow statements holds occurs 
allow triggers natural events considered 
formalism restriction legality actions branch due executability conditions 
branches consist legal situations hypothetical actual branches sense 
legal situation replaces notion actual situation 
case formalism 
situations branches legal finite set situations finite line called actual line initial situation current situation considered actual 
minimize occurrences actions actual line 
contrast pinto reiter face problem premature minimization minimizing occurs abandon minimization occurrences 
pinto allow statements values fluents situations allowing statements additional information object language important aspect 
believe pinto reiter intuitiveness minimizing action occurrences description evolution world current situation 
avoid problem premature minimization carefully minimizing action occurrences actual line minimize action occurrences restraint 
notion current situation comes handy 
pinto reiter stay order logic possible 
axiomatization induction axiom minimization occurs order logic axiomatization induction axiom order logic 
formalization circumscription seemingly easier allow constraints actions uncertain effects effect axioms 
pinto says important advantage circumscriptive approach solution frame problem general applied theories include state constraints effect axioms 
correctness solutions circumscription hard assess 
pinto shows characterize order logical language preferences action sequences minimality criteria 
shows characterization define particular kind minimal plans clear minimizations minimize action occurrences actual line 
pinto section says extend study effect adding statements regarding value fluents different points time 
baral artificial intelligence case show circumscriptive formulation correct respect semantics high level language easier assess correctness solutions approach 

discussed necessity allowing narratives hypothetical reasoning sound complete translation domain descriptions action description language nested abnormality theories 
translation uses new formulation circumscription values functions minimized 
extended language allow concurrent execution actions showed earlier nat translation easily elaborated case 
continued adding actions indirect effects discussing relation filtering nats restricted monotonicity 
give detailed comparison approach approaches literature 
continue fronts 
particular develop algorithms allow discover missing action occurrences observations 
explore learning environment interaction patterns past occurrences information plans 
carefully extend language allow additional constructs natural events explicit time continuous actions various kinds action occurrences simple ones non occurrences conditional occurrences eventual occurrences triggered occurrences 
participated extending allow triggers formulate active databases high level formulation axiomatized circumscription 
introduce notion current situation planning current situation pinto reiter formalism separate notions legal actual situations allow minimization occurrences actions actual line 
additional notions compare axiomatization circumscriptive axiomatization domain descriptions similar comparison 
section discussed relation filtering restricted monotonicity general instances filtering restricted monotonicity believe filtering step encodes abductive reasoning abductive reasoning done filtering 
need study issue identify instances abduction discuss circumstances abduction done filtering 
authors wish michael gelfond anonymous referees suggestions greatly improved 
authors supported nsf iri iri 
baral artificial intelligence appendix correctness translation proofs notation stand set tuples belong extent predicate interpretation functions denote object function maps interpretation follows model single block sub theory mean model block sub theory plus framework axioms 
readers familiar logic programming noticed blocks defining prefix eq relations sequences similar typical definition relations logic programming 
lemma similar analogous lemma due marek subrahmanian useful logic programming 
lemmata consider particular predicates 
lemma 
model prefix eq prefix eq prefix eq prefix eq 
proof 
note axioms prefix eq definite clauses conjunction denote prefix eq definite formula section prefix eq corollary prefix eq circ prefix eq prefix eq equivalent prefix eq 
show holds 
assume model prefix eq 
suppose 
easy see model differing prefix eq satisfies prefix eq preferable contradicts assumption model 

show holds 
assume model prefix eq sequences suppose prefix eq 
consider predicate extent prefix eq 
clearly satisfied 
assumption wrong prefix eq 
satisfied models 
recall constant denotes empty sequence 
exactly literals positive 
baral artificial intelligence lemma 
model prefix eq sequences actions 
prefix eq iff proof 
model prefix eq show ifm prefix eq induction length letn length length base case 

suppose get contradiction 
andn 
inductive hypothesis length ifm prefix eq induction leta arbitrary sequence length 
show prefix eq prefix eq prefix eq 
inductive hypothesis implies definition follows 
model prefix eq definition 
show induction prefix eq 
base case 
need show prefix eq 
axiom prefix eq induction hypothesis prefix eq 
induction step need show prefix eq bythe induction hypothesis prefix eq 
axiom prefix eq prefix eq prefix eq prefix eq 
lemma 
model subsequence subsequence subsequence subsequence subsequence 
proof 
similar proof lemma 
lemma 
model subsequence subsequence iff proof 
proved induction lengths manner similar proof lemma 
lemma 
model concatenate concatenate concatenate concatenate 
baral artificial intelligence proof 
similar proof lemma 
lemma 
model concatenate concatenate iff proof 
induction length second argument manner similar proof lemma 
lemma notation action fluent formula stand disjunction premises axioms form causes instance axioms holds causes holds causes axioms consequent causes stands holds holds 
lemma 
domain description 
block min causes causes causes equivalent conjunction formulas form causes pair action fluent constants appear 
proof 
follows proposition shows conditions circumscription formula simplified predicate completion 
proposition 
causal model exists model sc sc sc holds 
model sc sc exists causal model holds 
proof 
causal model consider interpretation sc sc sc holds baral artificial intelligence sc causes show sc model sc 
show blocks defining causes satisfied 
lemma sufficient show causes 
suppose holds sc arbitrary 
construction sc causal law causes holds construction sc turn implies 
construction sc implies causes holds sc suppose causes holds sc arbitrary 
construction sc 
implies causal law causes construction sc follows holds holds sc show axiom causes causes holds holds satisfied sc leta arbitrary action fluent sequence respectively lhs axiom holds sc construction sc 
definition causal model implies iff 
construction sc holds holds holds sc consider axioms causes holds causes holds 
suppose causes holds sc arbitrary 
construction sc 
assumption defined sequences section definition 
construction sc holds holds 
similar argument holds second axiom 
sc model sc 
consider transition function holds 
show causal model show case induction length sequence 
base case length 
need show iff holds construction 

baral artificial intelligence arbitrary fluent action respectively 
show 
clearly causal law causes preconditions hold 
construction means sc hold causal laws 
lemma implies sc causes 
cases interest ii 
case causal law causes preconditions hold 
construction implies sc sc causes axiom causes holds sc holds construction 
ii case implies construction sc holds 
furthermore implies causal law causes preconditions hold 
sc hold causal laws form sc causes 
axiom causes causes holds holds conclude sc holds construction 

arbitrary fluent action respectively 
construction sc holds 
sc causes lemma causal law causes sc hold construction causal law preconditions hold 

cases sc causes ii sc causes 
case lemma causal law causes sc construction preconditions causal law hold 
assume defined sequence section 

ii case virtue axiom sc msc holds implies construction thatf 
showed 

induction hypothesis inductive case proved steps proof base case 
baral artificial intelligence proposition 
domain description interpretation model exists model fact language model exists model holds 
proof 
letm model interpretation universe actions fluents consist symbols sets respectively 
universe sequences consists unique object possible sequence actions 
ii holds causes interpreted follows mm holds mm causes 
iii action fluent situation constants interpreted 
predicates prefix eq subsequence concatenate interpreted corresponding intended relation 
iv sit map interpreted follows mm sit map am 
show mm model 
note framework axioms trivially satisfied 
blocks defining prefix subsequence concatenate proven correctly capture intended relations 
axioms satisfied definition condition iii correctness prefix eq lemma 
note condition ii holds causes condition show interpretation predicates model sc see proof proposition axioms sc satisfied 
remains shown mm satisfies axioms minimal model respect circumscription policy 
includes axiom holds sit map 
fact 
condition iv sit map condition ii implies mm holds sequence 
occurs includes axiom concatenate sit map prefix eq sit map fact concatenated prefix sn 
condition iv sit map sit map sit map sequences sn 
correctness concatenate prefix eq axiom satisfied 
precedes includes axiom prefix eq sit map sit map prefix eq sit map sit map baral artificial intelligence fact proper prefix 
condition iv correctness prefix eq axiom satisfied 
value minimization axiom captures exactly minimality condition see section detailed discussion respect ordering subsequence imposed sn definition models domain descriptions 
letm model 
proposition causal model holds 
causal model situation assignment sit map 
show model axiom sit map axiom prefix eq sit map sit map situations language prefix sn situation assignment 
assume defined sequences defined form interpretation remains shown facts true sn model 
holds sit map 
sit map sequence 
true argument holds negated fluent facts 
occurs concatenate sit map prefix eq sit map forsome sequences sit map sit map correctness concatenate lemma sequence concatenated 
correctness prefix eq lemma prefix sequence condition equal concatenated prefix sn 
occurs true 
precedes prefix eq sit map sit map prefix eq sit map sit map correctness prefix eq proper prefix 
precedes true need show interpretation subsequence equal sn model assume model part lemma model baral artificial intelligence differs interpretation function sit map sequence sit map subsequence equal sit map 
contradicts assumption model includes value minimization sit map respect ordering subsequence see section 
proposition 
domain description hypothesis language 
proof sketch 
arbitrary hypothesis language need show models iff models concatenate sit map 
proved proof proposition show construct model model vice versa holds holds sn sit map 
appendix correctness translation lemma 
model embedded embedded embedded embedded embedded 
proof 
similar proof lemma 
lemma 
model embedded embedded iff proof 
proved induction length sequences lemma 
lemma 
model embedded subsequence 
proof 
similar proof lemma 
lemma 
model iff embedded subsequence baral artificial intelligence proof 
letm model sequences 
embedded subsequence sequence correctness embedded lemma embedded correctness subsequence lemma subsequence embedded subsequence 
letm model sequences embedded subsequence definition embedded subsequence sequence subsequence embedded correctness subsequence lemma subsequence correctness embedded lemma embedded 
axiom embedded subsequence 
lemma 
block defines inherits min inherits causes inherits equivalent formula causes inherits 
proof 
follows proposition shows conditions circumscription formula simplified predicate completion 
lemma 
model min undef inherits inherits undef undef undef undef inherits inherits undef 
proof 
similar proof lemma 
baral artificial intelligence proposition 
causal model exists model sc sc sc holds undefined sc undef 
model sc sc exists causal model holds 
proof 
causal model letm sc interpretation sc sc undef undefined ii sc causes immediate effect iii sc inherits iv sc holds 
note iv correspond condition 
show sc model sc 
showed proposition model built satisfies blocks define predicates causes causes definition clear condition iii corresponds exactly formula blocks defining predicates inherits inherits satisfied 
show block defining undef satisfied 
assume inherits inherits holds sc condition iii intersection empty 
implies undefined 
condition undef 
axiom block satisfied suppose undefined 
prefix closed action undefined second axiom satisfied 
easy see extent undef minimal exist undef holds inherits inherits holds undef holds contradicts lemma extent undef minimal block satisfied easy see axioms inherits inherits holds holds undef inherits holds undef inherits holds sc satisfied sc 
sc model sc transition function holds 
show causal model recall meaning different previous proofs 
stands set fluents true false executing concurrent action baral artificial intelligence consider axioms block undef note consequences axioms necessarily involve nonempty sequence 
interpretation undef contains satisfies axioms obtain interpretation satisfies axioms subset 
block chooses minimal interpretation undef undef hold sc defined 
prefix closed 
assume contrary sequences prefix defined undefined 
construction follows undef undef hold sc undef undef fact prefix conclude undef holds sc contradicts assumption 
prefix closed 
ife undefined sequence 
suppose fluent action sequence 
means effects exist causal laws causes causes 
construction follows sc andm sc pair causal laws form 
implies causes causes hold sc axiom causes inherits inherits inherits hold sc axiom inherits inherits undef undef holds sc construction undefined 
show ife 
proof similar proposition 
prove base case 
base case length 
show 

assume 
clearly 
implies exist atomic action immediate effect implies sc causes holds sc inherits 
cases interest ii 
baral artificial intelligence consider case 
action causes preconditions hold 
shown part proof implies sc causes causes inherits sc inherits 
considering case undef holds sc axiom undef inherits holds get sc holds construction implies 
consider case ii 
construction implies sc holds 
showed follows sc inherits 
shown positive effects follows sc inherits 
holds inherits hold sc axiom inherits inherits holds holds follows sc holds construction 


show construction sc holds 
considering case sc undef sc inherits imply axiom undef inherits holds sc holds 
sc inherits 
lemma sc causes 
consequently causes preconditions hold 
follows 
cases interest sc inherits ii sc inherits 
consider case 
lemma exists action sc causes lemma causal law causes sc construction hold 
shown conclude 
consider case ii 
virtue axiom sc holds construction shown 
proposition 
domain description interpretation model exists model fact language model exists model holds 
baral artificial intelligence proof 
letm model interpretation universe fluents situations consist symbols sets respectively 
universe actions 
universe sequences consists unique object possible sequence actions 
ii mm undef undefined 
iii mm causes immediate effect 
iv mm inherits 
mm holds 
vi action fluent situation constants interpreted corresponding universe element 
predicates prefix eq subsequence concatenate embedded interpreted intended relation 
vii mm sit map am 
show mm model 
blocks defining relations sequences prefix eq shown capture intended relations 
framework axioms trivially satisfied 
definition models defined sn conditions ii vii mm axiom undef sit map satisfied 
definition situation assignment prefix sn 
condition vii mm axioms sit map prefix eq sit map sit map satisfied 
note conditions ii iii iv predicates undef causes inherits holds show interpretation predicates model sc see proof proposition sc satisfied 
fluent facts precedence facts translated sentences shown satisfied proof proposition 
occurs includes axiom embedded concatenate sit map prefix eq sit map fact prefix sn stand sequence condition vii sn sit map sit map hold mm correctness embedded lemma embedded holds correctness concatenate lemma concatenate holds 
correctness prefix eq lemma prefix eq holds 
axiom satisfied mm value minimization axiom exactly captures minimality condition respect ordering embedded subsequence imposed sequence sn definition models domain descriptions baral artificial intelligence letm model 
proposition exists causal model iff holds undefined iff sc undef 
causal model situation assignment sit map 
show model axiom sit map axiom prefix eq sit map sit map prefix sn situation symbol language situation assignment 
axiom undef sit map sn belongs domain form interpretation remains shown facts true embedded subsequence sn model fluent precedence facts translated sentences shown proof proposition satisfies types fact 
need show satisfies facts form occurs suppose occurs entails embedded concatenate sit map prefix eq sit map sequences sentence holds consider sit map sit map hold correctness embedded lemma correctness concatenate lemma equal concatenated correctness prefix eq lemma prefix sn prefix sn 
satisfies occurs 
need show interpretation embedded subsequence equal sn model suppose model part lemma model differs interpretation function sit map sequence sit map embedded subsequence equal baral artificial intelligence sit map 
contradicts assumption model includes value minimization sit map respect ordering see section 
allen general theory action time artificial intelligence 
baral reasoning actions nondeterministic effects constraints qualification proc 
th international joint conference artificial intelligence ijcai montreal quebec pp 

baral gelfond representing concurrent actions extended logic programming proc 
th international joint conference artificial intelligence ijcai chambery france pp 

baral gelfond logic programming knowledge representation journal logic programming 
baral formalizing narratives nested circumscription proc 
th national conference artificial intelligence aaai portland pp 

baral value minimization circumscription aiello doyle shapiro eds proc 
principles knowledge representation reasoning kr pp 

baral gelfond representing actions laws observations hypothesis working notes aaai spring symposium extending theories actions formal theories practical applications 
baral gelfond representing actions laws observations hypothesis journal logic programming 
baral lobo formal characterization active databases proc 
international workshop logic databases 
doherty computing circumscription revisited reduction algorithm journal automated reasoning appear 
erol nau subrahmanian complexity decidability undecidability results domainindependent planning artificial intelligence 
gelfond lifschitz representing actions extended logic programs 
joint international conference symposium logic programming pp 

gelfond lifschitz limitations situation calculus boyer ed automated reasoning essays honor woody bledsoe kluwer academic dordrecht 
georgeff ed special issue action processes journal logic computation 
giunchiglia kartha lifschitz actions indirect effects extended working notes aaai spring symposium extending theories actions formal theories practical applications stanford 
giunchiglia kartha lifschitz representing actions indeterminacy ramifications artificial intelligence 
hoare overview formal methods program design ieee computer september 
kakas kowalski toni abductive logic programming journal logic computation 
kakas miller simple declarative language describing narratives actions journal logic programming 
kartha soundness completeness theorems formalizations action proc 
th international joint conference artificial intelligence ijcai chambery france pp 

kartha mathematical investigation reasoning actions ph thesis university texas austin 
kartha lifschitz actions indirect effects preliminary report proc 
rd internat 
conf 
principles knowledge representation reasoning kr bonn germany pp 

baral artificial intelligence kowalski sergot logic calculus events new generation computing 
lifschitz nested abnormality theories artificial intelligence 
lifschitz circumscription gabbay hogger robinson eds handbook logic ai logic programming vol 
oxford university press pp 

lifschitz restricted monotonicity proc 
aaai washington dc pp 

lifschitz ed special issue reasoning actions change journal logic programming 
lin shoham concurrent actions situation calculus proc 
aaai san jose ca pp 

marek subrahmanian relationship stable supported default auto epistemic semantics general logic programs levi martelli eds proc 
th international conference logic programming pp 
mccarthy applications circumscription formalizing common sense knowledge artificial intelligence 
mccarthy mathematical logic artificial intelligence 
mccarthy overcoming unexpected obstacle manuscript 
mccarthy situation calculus concurrent events narrative preliminary manuscript available www formal stanford edu jmc narrative dvi 
mccarthy hayes philosophical problems standpoint artificial intelligence meltzer michie eds machine intelligence vol 
edinburgh university press pp 

miller shanahan narratives situation calculus journal logic computation 
hypothetical reasoning situation calculus event calculus computational intelligence journal 
pinto temporal reasoning situation calculus ph thesis department computer science university toronto canada 
pinto occurrences narratives constraints branching structure situation calculus manuscript ing puc cl 
pinto reiter temporal reasoning logic programming case situation calculus proc 
th international conference logic programming pp 

pinto reiter reasoning time situation calculus annals mathematics ai 
reiter frame problem situation calculus simple solution completeness result goal regression lifschitz ed artificial intelligence mathematical theory computation pp 

reiter natural actions concurrency continuous time situation calculus proc 
kr pp 

levesque reiter lesperance lin scherl golog logic programming language dynamic domains journal logic programming 
sandewall filter preferential entailment logic action continuous worlds proc 
th international joint conference artificial intelligence ijcai detroit mi pp 

sandewall features fluents systematic approach representation knowledge dynamical systems oxford university press 
shanahan circumscriptive calculus events artificial intelligence 
shanahan solving frame problem mathematical investigation commonsense law inertia mit press cambridge ma 
