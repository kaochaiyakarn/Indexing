diva distributed intelligent virtual agents knowledge engineering laboratory department informatics university str 
greece mail unipi gr 
diva architecture intelligent virtual environments 
diva systems consist different modules 
world server represents environment way arbitrary number intelligent agent clients acting world inhabitants set visualisation clients generate system visual output 
client modules autonomous dynamically connected disconnected world server 
past years research separate fields distributed artificial intelligence virtual environments resulted significant number architectures applications combining elements areas leading evolution promising field intelligent virtual environments ives 
agent technologies rapidly emerging 
agents defined hardware software systems adaptive behaviour acting effectively dynamically changing environments 
intelligent agents technology applications far starting smart mail clients software robotics applications 
efforts intelligent agents virtual environments 
belongs propose multi agent architecture virtual environments 
virtual environment provides framework distributed users collaborate share various resources 
additional efforts field intelligent virtual environments combination artificial intelligence artificial life virtual environments 
omicini propose way merge logic programming web technology 
availability logic programs internet subject research done 
propose architecture implementing systems integrate logic programming object oriented programming virtual reality 
architecture supports participation intelligent agents shared world simultaneous visualisation actions arbitrary number clients 
allows direct involvement user virtual environment easily extended support implementation complex intelligent virtual environments 
architecture visualisation client visualisation client 
visualisation client world server visualisation client visualisation client visualisation client diva systems consist different modules world server representing environment 
contain visual data representation world objects generates senses intelligent agents 
receives actions agents perform updates world representation generates appropriate knowledge agents perceive position state virtual environment 
change state world objects takes place transmits set commands visualisation modules new state described visual way real time 
second module intelligent agent client autonomous module receives knowledge certain protocol generates actions 
declarative way representing knowledge having goals rules performs planning reasoning generates set actions applied world objects 
connected world server uses protocol communicate agent clients supports actions 
module visualisation client displays state world real time data 
receives set commands world server modifies virtual objects real time 
command refers agents objects actions changes state took place 
implemented application requires synchronised visual output client return indication visualisation process 
modules connected tcp ip 
server arbitrary number clients intelligent agents visualisation ones 
clients connected disconnected dynamically local remote machines server running need support protocols server 
application requires additional presence real users acting agents define third kind client introduced intelligent agent visualisation client supporting communication protocols 
implementation implemented example multi agent system diva architecture 
system simulation virtual supermarket actors diverse roles customers managers thieves security guards 
supermarket implemented diva world server actors diva agents 
diva world server implemented standalone server application allows agent visualisation clients connected 
general representation virtual world set laws determine perform action circumstances specific action applicable 
different types threads handle respective client types sharing world representation able read alter data 
agent communicates world requests action world server checks set laws determine action successfully performed 
case updates world data necessary notifies visual agents change world took place 
results sent back agent client agent world communication protocol 
diva agents bdi beliefs desires intentions architecture comprise modules logical core performing reasoning knowledge base handling implementation module manages logical core handles data interchange agent diva world server 
agent operation thought sequence sense decide act cycles 
sensing process implementation module retrieves available sensory input world server produces predicate symbolic representation updates knowledge base appropriate logical core functions 
purpose decision process derive agent action 
process goal priorities revised current world state 
remaining action current plan selected 
plan available current goal logical core planning functions produce action plan 
action derived decision process applied world sending appropriate commands world server 
application succeeds agent specific effects processed 
specific failure assumptions adopted 
visualisation clients consist modules engine displays virtual world implementation module communicates world server updates world visual attributes necessary 
diva systems incorporate key disciplines agent intelligence dynamic environment behaviour virtual world sharing enhanced dimensional representation providing powerful mechanism simulating visualising realworld situations intelligent actors involved 
structure systems open implementation options allowing incorporation mo technologies tools 
need define set basic actions standardise agent world communication protocol complex actions declared sequence basic ones 
planning develop complex ives diva architecture driving simulation intelligent virtual laboratory having developed language description virtual agents trying extend capabilities support diva architecture tool describe generate diva ives 

intelligent guidance virtual university 
imacs ifac international symposium soft computing engineering applications 
interactive experimentation virtual laboratories 
cal int 
conference virtuality education 
muller design intelligent agents layered approach 
lecture notes artificial intelligence vol 

springer verlag 
wooldridge jennings intelligent agents theory practice 
knowledge engineering review vol 


cavedon rao editors intelligent agent systems theoretical practical issues 
lecture notes artificial intelligence vol 
springer verlag 
harbison multi agent architecture virtual environments 
th international conference industrial engineering applications artificial intelligence expert systems 

omicini merging logic programming web technology coordination approach 
proceedings nd international workshop logic programming tools internet applications 
el practical development internet prolog applications java front 
proceedings nd international workshop logic programming tools internet applications 
intelligent agent framework vrml worlds 
third european robotics intelligent systems virtual reality intelligent agent language 
th conference informatics 
