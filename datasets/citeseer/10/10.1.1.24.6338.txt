appear ieee personal communications pervasive computing vision challenges satyanarayanan school computer science carnegie mellon university discusses challenges computer systems research posed emerging field pervasive computing 
examines relationship new field predecessors distributed systems mobile computing 
identifies new research thrusts effective smart spaces invisibility localized scalability masking uneven conditioning 
sketches couple hypothetical pervasive computing scenarios uses identify key capabilities missing today systems 
closes discussion research necessary develop capabilities 

profound technologies disappear 
weave fabric everyday life indistinguishable began mark weiser seminal described vision ubiquitous computing called pervasive computing 
essence vision creation environments saturated computing communication capability gracefully integrated human users 
articulated vision far ahead time hardware technology needed achieve simply exist 
surprisingly implementation attempted weiser colleagues xerox parc fell short 
decade hardware progress critical elements pervasive computing exotic viable commercial products handheld wearable computers wireless lans devices sense control appliances 
better positioned quest weiser vision 
pervasive computing projects emerged major universities industry 
examples universities include project aura carnegie mellon endeavour uc berkeley oxygen mit washington 
industry examples include research cambridge ibm tj watson research center 
projects addresses different mix issues pervasive computing different blend far term goals 
represent broad communal effort pervasive computing reality 
goal help understand challenges computer systems research posed pervasive computing 
examining relationship closely related fields distributed systems mobile computing 
sketch pervasive computing scenarios ask fiction fact today 
starting point delve deeper key research problems 
preserve focus computer systems issues avoid areas important pervasive computing human computer interaction expert systems software agents 

related fields pervasive computing represents major evolutionary step line dating back mid distinct earlier steps evolution distributed systems mobile computing 
technical problems pervasive computing correspond problems identified studied earlier evolution 
cases existing solutions apply directly cases demands pervasive computing sufficiently different new solutions sought 
new problems introduced pervasive computing obvious mapping problems studied earlier 
rest section try sort complex intellectual relationship develop taxonomy issues characterizing phase evolution 

distributed systems field distributed systems arose intersection personal computers local area networks 
research followed mid early created conceptual framework algorithmic base proven enduring value involving computers connected network mobile static wired wireless sparse pervasive 
body knowledge spans areas foundational pervasive computing codified textbooks remote communication including protocol layering remote procedure call timeouts arguments placement functionality 
fault tolerance including atomic transactions distributed nested transactions phase commit 
high availability including optimistic pessimistic replica control mirrored execution optimistic recovery 
remote information access including caching function shipping distributed file systems distributed databases 
security including encryption mutual authentication privacy 

mobile computing appearance full function laptop computers wireless lans early led researchers confront problems arise building distributed system mobile clients 
field mobile computing born 
basic principles distributed system design continued apply key constraints mobility forced development specialized techniques 
constraints unpredictable variation network quality lowered trust robustness mobile elements limitations local resources imposed weight size constraints concern battery power consumption 
mobile computing active evolving field research body knowledge awaits codification textbooks 
results achieved far grouped broad areas mobile networking including mobile ip ad hoc protocols techniques improving tcp performance wireless networks :10.1.1.10.4428
mobile information access including disconnected operation bandwidth adaptive file access selective control data consistency :10.1.1.12.448
support adaptative applications including transcoding proxies adaptive resource management 
system level energy saving techniques adaptation variable speed processor scheduling energy sensitive memory management 
location sensitivity including location sensing location aware system behavior 

pervasive computing earlier characterized pervasive computing environment saturated computing communication capability gracefully integrated users technology disappears motion integral part everyday life technology support mobility user acutely aware technology absence moves 
research agenda pervasive computing subsumes mobile computing goes 
specifically pervasive computing incorporates additional research thrusts agenda illustrated 

effective smart spaces research thrust effective smart spaces 
space may enclosed area meeting room corridor may defined open area quadrangle 
embedding computing infrastructure building infrastructure smart space brings worlds disjoint 
fusion worlds enables sensing control world 
simple example automatic adjustment heating cooling lighting levels room occupant electronic profile 
influence direction possible software user computer may behave differently depending user currently located 
may extend individual objects located smart space 

invisibility second thrust invisibility 
ideal expressed weiser complete disappearance pervasive computing technology user 
practice reasonable approximation ideal minimal user distraction 
pervasive computing environment continuously meets user expectations rarely presents surprises allows interact level 
time anticipation may essential avoiding large unpleasant surprise pain alerts person potentially serious problem normally unnoticed body part 

localized scalability third research thrust localized scalability 
smart spaces grow sophistication intensity interactions user personal computing space surroundings increases 
severe bandwidth energy distraction implications wireless mobile user 
presence multiple users complicate problem 
scalability broadest sense critical problem pervasive computing 
previous scalability typically ignored physical distance web server file server handle clients possible regardless located door country 
situation different pervasive computing 
density interactions fall moves away user computing system overwhelmed distant interactions little relevance 
mobile user far home generate distant interactions sites relevant preponderance interactions local 
inverse square laws nature system design achieve scalability severely reducing interactions distant entities 
directly contradicts current internet believe death distance 
masking uneven conditioning fourth thrust development techniques masking uneven conditioning environments 
rate penetration pervasive computing technology infrastructure vary considerably depending non technical factors organizational structure economics business models 
uniform penetration achieved years decades away 
interim persist huge differences different environments available equipped conference room office classroom may sophisticated locations 
large dynamic range user goal making pervasive computing technology invisible 
way reduce amount variation seen user personal computing space compensate dumb environments 
trivial example system capable disconnected operation able mask absence wireless coverage environment 
complete invisibility may impossible reduced variability reach 
remote communication protocol layering rpc args 
fault tolerance acid phase commit nested transactions 
high availability replication rollback recovery 
remote information access dist file systems dist databases caching 
distributed security encryption mutual authentication 
mobile networking mobile ip ad hoc networks wireless tcp fixes 
mobile information access disconnected operation weak consistency 
adaptive applications proxies transcoding agility 
energy aware systems goal directed adaptation disk spin 
location sensitivity gps wavelan triangulation context awareness 
distributed systems mobile computing smart spaces invisibility localized scalability uneven conditioning pervasive computing shows research problems pervasive computing relate mobile computing distributed systems 
new problems encountered moves left right 
addition solution previously encountered problems complex 
modulation symbols suggest increase complexity multiplicative additive difficult design implement pervasive computing system simple distributed system comparable robustness maturity 
note describes logical relationships temporal ones 
evolution research effort time loosely followed picture cases research effort aspect pervasive computing began relatively early 
example smart spaces began early proceeded relatively independently mobile computing 
taxonomy computer systems research problems pervasive computing 
example scenarios live world pervasive computing 
help convey look feel world sketch hypothetical scenarios 
deliberately chosen scenarios appear feasible just years 
examples aura pervasive computing system concepts illustrated broad relevance 

scenario jane gate pittsburgh airport waiting connecting flight 
edited large documents wireless connection mail 
unfortunately bandwidth passengers gates surfing web 
aura observes current bandwidth jane won able finish sending documents flight departs 
consulting airport network weather service flight schedule service aura discovers wireless bandwidth excellent gate departing arriving flights nearby gates half hour 
dialog box pops jane screen suggesting go gate minutes away 
asks prioritize mail critical messages transmitted 
jane accepts aura advice walks gate 
watches cnn tv aura informs close done messages start walking back 
message transmitted walk back gate time boarding call 

scenario fred office preparing meeting give presentation software demonstration 
meeting room minute walk campus 
time leave fred quite ready 
grabs wireless handheld computer walks door 
aura transfers state desktop handheld allows final edits voice commands walk 
aura infers fred going calendar campus location tracking service 
downloads presentation demonstration software projection computer projector 
fred finishes edits just enters meeting room 
walks aura transfers final changes projection computer 
presentation proceeds fred display slide highly sensitive budget information 
aura senses mistake room face detection recognition capability indicates unfamiliar faces 
warns fred 
realizing aura right fred skips slide 
moves topics ends high note leaving audience impressed polished presentation 

missing capabilities scenarios embody key ideas pervasive computing 
scenario shows importance proactivity jane able complete mail transmission aura foresight estimate long process take 
able walking back departure gate transmission completes aura looks ahead behalf 
scenario shows importance combining knowledge different layers system 
wireless congestion low level system phenomenon knowledge boarding time application user level concept 
combining disparate pieces knowledge aura help jane 
scenario shows value smart space 
aura able obtain knowledge wireless conditions gates flight arrival departure times gates distance gates environment provides services 
scenario illustrates ability move execution state effortlessly diverse platforms desktop handheld machine handheld projection computer 
self tuning automatically adjusting behavior fit circumstances shown ability edit handheld speech input keyboard mouse 
scenario embodies instances proactivity inferring fred headed room campus warming projector transferring presentation demonstration anticipating budget slide displayed sensing danger combining knowledge inferred presence strangers room 
value smart spaces shown ways location tracking online calendar services enable aura infer fred heading software controlled projector enables warmup ahead time camera equipped room continuous face recognition key warning fred privacy violation commit 
biggest surprise scenarios simple basic component technologies 
hardware technologies laptops handhelds wireless communication software controlled appliances room cameras today 
component software technologies demonstrated location tracking face recognition speech recognition online calendars 
scenarios science fiction reality today 
answer lies fact greater sum parts 
words real research seamless integration component technologies system aura 
difficult problems lie architecture component synthesis system level engineering 
elaborate problems section 

drilling practical realization pervasive computing require solve difficult design implementation problems 
building discussion earlier sections look problems level detail 
goal convey picture road ahead 
claim completeness exclusiveness specific set topics merely sampling problem space particular order 
discussion assume user immersed personal computing space accompanies mediates interactions pervasive computing elements surroundings 
personal computing space implemented body worn handheld computer collection acting single entity 
refer entity client pervasive computing environment interactions may peer peer strictly client server 
indicated discussion client needs quite sophisticated complex 
illustrating structure aura client gives concrete example complexity 
prism task support user intent high level proactivity app app app aura runtime support coda nomadic file access spectra remote execution odyssey chroma resource monitoring adaptation linux kernel intelligent networking network weather monitoring network proactivity shows components aura client logical relationships 
text italics indicates role played component 
coda odyssey created prior aura modified substantially meet demands pervasive computing 
case odyssey changes sufficiently extensive result chroma replacement 
components prism spectra created specifically aura 
additional components added time aura relatively early design time writing 
server infrastructure support aura shown 
structure aura client 
user intent proactivity effective crucial pervasive computing system track user intent 
impossible determine system actions help hinder user 
example suppose user viewing video network connection bandwidth suddenly drops 
system reduce fidelity video pause briefly find higher bandwidth connection advise user task longer accomplished 
correct choice depend user trying accomplish 
today systems poor capturing exploiting user intent 
hand generic applications idea user attempting offer little support adaptation proactivity 
hand applications try anticipate user intent badly microsoft paperclip annoying helpful 
need capture user intent generates number important research questions user intent inferred explicitly provided 
case statically specified file example obtained demand dynamic interactions 
user intent represented internally 
rich information useful 
updated 
different layers system access knowledge 
characterize accuracy knowledge area 
incomplete imprecise knowledge user intent useful 
level uncertainty better ignore knowledge making decisions 
attempt obtain intent place undue burden user 
hurt usability performance unacceptably 
benefit worth cost 
quantify benefit 

cyber foraging need mobile devices smaller lighter longer battery life means computing capabilities compromised 
meeting growing expectations mobile users may require computing data manipulation capabilities lightweight mobile computer long battery life 
reconciling contradictory requirements difficult 
cyber foraging construed living land may effective way deal problem 
idea dynamically augment computing resources wireless mobile computer exploiting wired hardware infrastructure 
computing cheaper plentiful economic sense waste computing resources improve user experience 
desktop computers discount stores sell today dollars prices continuing drop 
envision public spaces airport coffee shops equipped compute servers data staging servers benefit customers table lamps today 
connected wired internet high bandwidth networks 
hardware wired infrastructure plays role call surrogate mobile computer temporarily assisting 
envision typical scenario follows 
mobile computer enters neighborhood detects presence potential surrogates negotiates 
communication surrogate short range wireless peer peer technology surrogate serving mobile computer networking gateway internet 
intensive computation accessing large volume data performed mobile computer ships computation surrogate may cache data internet local disk performing computation 
alternatively surrogate may staged data ahead time anticipation user arrival neighborhood 
case surrogate may perform computations behalf mobile computer merely service cache misses low latency avoiding internet delays 
mobile computer leaves neighborhood surrogate bindings broken data staged cached behalf discarded 
cyber foraging opens important research questions 
examples discover presence surrogates 
proposed service discovery mechanisms jini upnp bluetooth proximity detection best suited purpose 
build discovery mechanism subsumes greatest flexibility 
establish appropriate level trust surrogate 
useful levels trust practice 
applicable useful concept caching trust 
amortize cost establishing trust surrogates neighborhood 
load balancing surrogates done 
surrogate allocation admission control approach best effort approach 
relevant previous load balancing networks workstations 
typical situations advance notice surrogate need act effective staging server minimal delay 
order seconds minutes tens minutes 
implications requirement components pervasive computing system 
implications scalability 
dense fixed infrastructure avoid overloads periods peak demand 
system support needed surrogate seamless minimally intrusive user 
components support provided mobile client infrastructure 

adaptation strategy adaptation necessary significant mismatch supply demand resource 
resource question may wireless network bandwidth energy computing cycles memory 
alternative strategies adaptation pervasive computing 
client guide applications changing behavior scarce resource 
change usually reduces user perceived quality fidelity application 
odyssey example system uses strategy :10.1.1.121.328
second client ask environment guarantee certain level resource 
approach typically reservation qos systems 
viewpoint client effectively increases supply scarce resource meet client demand 
third client suggest corrective action user 
user acts suggestion certain resource supply adequate meet demand 
example approach described earlier scenario aura advised jane walk gate order obtain adequate wireless bandwidth 
conceptually promising real system implemented approach 
strategies important pervasive computing 
existence smart spaces suggests environments encountered user may capable accepting resource reservations 
time uneven conditioning environments suggests mobile client rely solely reservation strategy environment uncooperative resource impoverished client may choice ask applications reduce 
corrective actions broaden range possibilities adaptation involving user may particularly useful lowered fidelity unacceptable 
questions remain answered client choose adaptation strategies 
factors decision procedure take account 
different factors weighted 
role user play making decision 
smooth seamless transitions strategies ensured user moves 
glance appears second strategy reservation qos superior viewpoint user required accept lower fidelity perform corrective action 
true circumstances 
hidden costs widely deployed system 
implementation smart space honor resource reservations 
appropriate admission control policies competing requests multiple clients 
resources wireless network bandwidth meaningful useful smart space reserve 
apis protocols necessary negotiate reservations 
adaptation corrective actions practically feasible 
users find strategy intrusive annoying 
best way communicate potential corrective actions users 
programming models apis necessary support corrective actions 
existing applications approach 
substantial modifications 
different ways fidelity lowered broad range applications 
existing apis odyssey adequate 
apis programming models revised light extensive usage experience 
particular negative impact lowered fidelity users minimized 

high level energy management sophisticated capabilities proactivity self tuning increase energy demand software mobile computer personal computing space 
time pressure computers lighter compact places severe restrictions battery capacity 
growing consensus advances battery technology low power circuit design reconcile opposing constraints higher levels system involved 
involve higher levels system energy management 
example energy aware memory management operating system dynamically controls amount physical memory refreshed 
example energy aware adaptation individual applications switch modes operation lower fidelity energy demand operating system control 
research questions follow ways higher levels system contribute managing energy 
relative strengths weaknesses approaches 
method preference 
high level energy management impact goal invisibility pervasive computing 
intrusive distracting users find techniques 
knowledge user intent exploited energy management 
robust approach face imperfection knowledge 
smart spaces surrogates reduce energy demand mobile computer 
range possible approaches relative merits 
role remote execution extending battery life 
circumstances energy savings exceed energy cost wireless communication 
system predict savings costs accurately practice significant difference 

client thickness powerful mobile client need pervasive computing environment 
words cpu power memory disk capacity 
answer determine key constraints imposed hardware design client 
trade press jargon thick client powerful client thin client minimal 
thick clients tend larger heavier require bigger battery dissipate heat negative factors viewpoint user carry wear client 
time improvements vlsi packaging technology reduce physical size weight thick client 
improvements translate smaller lighter thin client 
mobile user client small light battery life 
wide range feasible designs demonstrated 
extreme ultra thin clients slim 
bare bones devices little highresolution displays connected high bandwidth wireless links nearby compute servers 
extreme clients capable standalone disconnected operation 
examples include navigator family wearable computers laptops running clients coda file system 
designs wireless connectivity available critically dependent 
handheld computers palmpilot represent design points extremes 
operate isolation run limited range applications 
application minimum acceptable thickness client determined worst case environmental conditions application run satisfactorily 
thin client suffices count high bandwidth wireless communication nearby computing infrastructure batteries replaced easily 
exists single location visited user assumptions hold client thick compensate location 
especially true interactive applications crisp response important 
client modest thickness may possible preserve responsiveness handling simple cases locally relying remote infrastructure compute intensive situations 
alternatively may possible execute part application locally ship reduced intermediate state weak wireless link remote compute server completion 
hybrid mode speech recognition odyssey example approach 
approach client recognize key assumption met alert user intelligible message 
client suggest possible corrective actions moving nearby location known suitable application 
uneven conditioning environments implies extreme thin client approach unsatisfactory pervasive computing foreseeable 
time considerable merit having carry wear client thicker absolutely necessary 
research questions follow tension concepts client thickness environmental conditioning quantified 
sweet spots design space modest increase client thickness yields considerable improvement performance usability 
proactive system alert user timely manner leaves benign environment 
context application transparently migrated thinner thicker client vice versa 
kinds applications migration feasible useful 
impact usability 
possible build cost effective modular computers physically reconfigured serve optimal mobile clients diverse environmental conditions 
proactive system advise user reconfigure appropriate 
knowing travel plans system guide configuring system adequate thickness times 
semi portable infrastructure carried user augment environments 
example poorly conditioned environment thin computer extend capabilities wireless access full function laptop brought user 
analogous carrying briefcase wallet travel briefcase physically person times close provide easy access things large fit wallet 
usable practical strategy cope uneven conditioning 

context awareness pervasive computing system strives minimally intrusive context aware 
words cognizant user state surroundings modify behavior information 
user context quite rich consisting attributes physical location physiological state body temperature heart rate emotional state angry calm personal history daily behavioral patterns 
human assistant context decisions proactive fashion anticipating user needs 
making decisions assistant typically disturb user moments emergency 
pervasive computing system emulate human assistant 
key challenge obtaining information needed function context aware manner 
cases desired information may part user personal computing space 
example space may include schedules personal calendars address books contact lists lists 
dynamic information sensed real time user environment 
examples information include position orientation identities people nearby locally observable objects actions emotional physiological state 
implementing context aware system requires issues addressed 
example context represented internally 
information combined system application state 
context stored 
reside locally network 
relevant data structures algorithms 
frequently context information consulted 
overhead context account 
techniques keep overhead low 
minimal services environment needs provide context awareness feasible 
reasonable fallback positions environment provide services 
historical context useful 
relative merits different location sensing technologies 
circumstances preference 
location information treated just context information handled differently 
historical context useful 

balancing proactivity transparency proactivity double edged sword 
carefully designed proactive system annoy user defeat goal invisibility 
design system strikes proper balance times 
self tuning important tool effort 
mobile user need tolerance proactivity closely related level expertise task familiarity environment 
system infer factors observing user behavior context better positioned strike right balance 
historically ideal system design transparency 
example caching attractive distributed file systems completely transparent 
unfortunately servicing cache large file low bandwidth wireless network takes long users asked really need file 
flurry interactions overwhelm user 
coda suggests way resolve dilemma 
cache system consults user patience model predict user respond positively fetch request 
appears user interaction suppressed fetch handled transparently 
subtle problems arise designing system walks fine line annoying proactivity transparency 
example individual user preferences tolerances specified taken account 
static change dynamically 
cues system determine far balance 
explicit interaction user obtain information acceptable 
annoyance 
provide systematic design guidelines application designers help task 
retrofit balancing mechanisms existing applications 

privacy trust privacy thorny problem distributed systems mobile computing greatly complicated pervasive computing 
mechanisms location tracking smart spaces surrogates user actions continuous basis 
user dependent pervasive computing system knowledgeable user movements behavior patterns habits 
exploiting information critical successful proactivity self tuning 
time information strictly controlled put variety uses ranging targeted spam blackmail 
potential serious loss privacy may deter knowledgeable users pervasive computing system greater reliance infrastructure means user trust infrastructure considerable extent 
conversely infrastructure needs confident user identity authorization level responding requests 
difficult challenge establish mutual trust manner minimally intrusive preserves invisibility 
privacy trust enduring problems pervasive computing 
research questions follow 
example strike right balance seamless system behavior need alert users potential loss privacy 
mechanisms techniques design principles relevant problem 
system remind user actions recorded 
user turn monitoring smart space 
authentication techniques best suited pervasive computing 
password protocols kerberos adequate exotic techniques biometric authentication necessary :10.1.1.112.9002
role smart cards play 
express generic identities access control 
example express security constraints person currently projector room set lighting level employees partner companies negotiate qos properties smart space 
impact layering recurring theme earlier sections merging information diverse layers system produce effective response 
example scenario showed value combining low level resource information network bandwidth high level context information airport gate information 
proactivity adaptation corrective actions imply exposure information layers typical systems today 
layering cleanly separates abstraction implementation consistent sound software engineering 
layering conducive standardization encourages creation modular software components 
deciding decompose complex system layers modules nontrivial remains art science 
widely guidelines layering parnas principle information hiding saltzer principle 
date back early early respectively long pervasive computing conceived 
research questions follow benefits layering preserved needs pervasive computing 
impact efficiency maintainability 
existing layers best extended pervasive computing broadening primary interfaces creating secondary interfaces snmp network management interface 
creating new layer systematic guidelines offer ensure compatibility needs pervasive computing 
harder design implement layer 

pervasive computing fertile source challenging research problems computer systems years come 
solving problems require broaden discourse topics revisit long standing design assumptions 
address research challenges areas outside computer systems 
areas include human computer interaction especially multi modal interactions human centric hardware designs software agents specific relevance high level proactive behavior expert systems artificial intelligence particularly areas decision making planning 
capabilities areas need integrated kinds computer systems capabilities discussed 
pervasive computing disjoint areas research fused 
describing vision weiser fully aware attaining require tremendous creativity effort people sustained years 
early decades st century period excitement new hardware technologies converge research progress fundamental problems discussed 
frontier american west early th century pervasive computing offers new beginnings rich open space rules written borders drawn 
ideas formed extended period time benefited input individuals 
particular colleagues aura team david garlan raj reddy dan siewiorek peter steenkiste valuable thoughts suggestions insights 
acknowledge members coda odyssey projects insights gained working 
discussions dave clark mike mit helpful formulating concept localized scalability discussed section 
sandeep gupta guest editor special issue giving opportunity express thoughts pervasive computing 
number people read early versions provided valuable feedback content presentation mary baker rajesh maria ebling faloutsos jason flinn david garlan ira greenberg hunt hui lei alan narayanan park 
remaining errors omissions course entirely responsibility 
research supported national science foundation nsf contracts ccr ani defense advanced projects research agency darpa navy contract ibm compaq nokia 
views contained document author interpreted representing official policies expressed implied nsf darpa ibm compaq nokia government 
badrinath handoff system support indirect tcp ip 
proceedings second usenix symposium mobile location independent computing 
ann arbor mi april 
bhagwat perkins tripathi network layer mobility architecture survey 
ieee personal communications june 
birrell nelson implementing remote procedure calls 
acm transactions computer systems february 
borg blau fault tolerance unix 
acm transactions computer systems february 
brewer katz chawathe gribble hodes nguyen stemm henderson amir balakrishnan fox padmanabhan seshan network architecture heterogeneous mobile computing 
ieee personal communications october 
brodersen past 
mobile computing communications review january 
case simple network management protocol 
internet engineering task force rfc 
kindberg distributed systems concepts design third edition 
addison wesley 
davidson garcia molina skeen consistency partitioned networks 
acm computing surveys september 
ellis case higher level power management 
th ieee workshop hot topics operating systems 
rio rico az march 
flinn satyanarayanan energy aware adaptation mobile applications 
proceedings th acm symposium operating systems principles 
kiawah island sc december 
fox gribble brewer amir adapting network client variability demand dynamic distillation 
proceedings seventh international acm conference architectural support programming languages operating systems 
cambridge ma october 
gray reuter transaction processing concepts techniques 
morgan kaufman 
honeyman practical security systems smartcards 
th ieee workshop hot topics operating systems 
rio rico az march 
jain hong biometric identification 
communications acm february 
katz long satyanarayanan tripathi workspaces information age 
report nsf workshop workspaces information age 
va october 
available www cs berkeley edu randy 
kistler satyanarayanan disconnected operation coda file system 
acm transactions computer systems february 
lebeck fan zheng ellis power aware page allocation 
proceedings ninth international conference support programming languages operating systems 
november 
lynch distributed algorithms 
morgan kaufmann 
mullender 
editor 
distributed systems 
addison wesley 
ebling satyanarayanan exploiting weak connectivity mobile file access 
proceedings th acm symposium operating systems principles 
copper mountain resort december 
chu narayan qos aware resource management distributed multimedia applications 
journal high speed networking 
needham schroeder encryption authentication large networks computers 
communications acm december 
noble satyanarayanan narayanan flinn walker agile application aware adaptation mobility 
proceedings th acm symposium operating systems principles 
saint malo france october 
energy efficient technologies soldier board army science technology national research council washington dc 
parnas criteria decomposing systems modules 
communications acm december 
royer toh review current routing protocols ad hoc mobile wireless networks 
ieee personal communications april 
saltzer reed clark arguments system design 
acm transactions computer systems november 
satyanarayanan caching trust content 
operating system review october 
satyanarayanan survey distributed file systems 
traub grosz lampson nilsson 
editors annual review computer science 
annual reviews 
satyanarayanan fundamental challenges mobile computing 
proceedings fifteenth acm symposium principles distributed computing 
philadelphia pa may 
schilit adams want context aware computing applications 
proceedings workshop mobile computing systems applications 
santa cruz ca december 
schmidt lam interactive performance slim stateless thin client architecture 
proceedings th acm symposium operating systems principles 
kiawah island sc december 
siewiorek modalities interaction cmu wearable computers 
ieee personal communications february 
spreitzer theimer providing location information ubiquitous computing environment 
proceedings th acm symposium operating system principles 
december 
steiner neuman schiller kerberos authentication service open network systems 
proceedings winter usenix technical conference 
dallas tx february 
strom yemini optimistic recovery distributed systems 
acm transactions computer systems august 
tait duchamp efficient variable consistency replicated file service 
proceedings usenix file systems workshop 
ann arbor mi may 
terry theimer petersen demers spreitzer hauser managing update conflicts weakly connected replicated storage system 
proceedings th acm symposium operating systems principles 
copper mountain resort december 
pering brodersen multimedia terminal portable device wireless information access 
ieee transactions computers october 
voelker bershad information system mobile wireless computing environment 
proceedings workshop mobile computing systems applications 
santa cruz ca december 
want hopper falcao gibbons active badge location system 
acm transactions information systems january 
ward jones hopper new location technique active office 
ieee personal communications october 
weiser computer st century 
scientific american september 
weiser welch demers shenker scheduling reduced cpu energy 
proceedings usenix symposium operating system design implementation 
monterey ca november 
weiser brown coming age calm technology 
denning metcalfe 
editors calculation years computing 

