fault tolerant video demand services tal danny dolev keidar institute computer science laboratory computer science hebrew university jerusalem mit cs huji ac il theory lcs mit edu describes highly available distributed video demand vod service inherently fault tolerant 
vod service provided multiple servers reside different sites 
new servers may brought fly alleviate load servers 
server crashes replaced server transparent way clients unaware change service provider 
test runs vod service prototype transitions noticeable human observer uses service 
vod service uses sophisticated flow control mechanism supports adjustment video quality client capabilities 
assume proprietary network technology uses commodity hardware publicly available network technologies tcp ip atm 
service may run machine connected internet 
service exploits group communication system building block high availability 
utilization group communication greatly simplifies service design 

video demand vod services popular today hotels luxury cruise boats airplanes 
high bandwidth communication infrastructure atm backbone networks adsl internet infrastructure established countries world high bandwidth communication lines reach millions homes near 
increasing improvement communication technology invite widespread utilization vod services private homes provided telecommunication companies cable tv providers internet 
environment scalability fault tolerance key issues 
supported part ministry science basic infrastructure fund project describe highly available distributed vod service 
vod service provided multiple servers may reside different sites 
service supports smooth migration clients server 
number servers providing certain service may change dynamically order account changes load 
group communication system control plane service order loosely coordinate participating servers agree client migration allow server take server client 
service uses sophisticated flow control mechanism supports adjustment video quality client capabilities 
assume dedicated hardware proprietary technology service uses commodity hardware publicly available network technologies tcp ip atm 
servers clients may run machine connected internet 
current efforts area vod focus primarily increasing throughput single server sophisticated scheduling caching file structuring 
fault tolerance issues typically addressed concern possible disk file failures address server failures network partitions exception microsoft tiger video server cf :10.1.1.56.8176
section furthermore current methods rarely address issue client migration smooth provision service migration occurs 
concept complements techniques allows extending vod services provided dynamically changing number servers 
video transmission requires relatively high bandwidth strict quality service qos properties guaranteed bandwidth bounded jitter delays 
application involving video transmission service best provided qos reservation mechanisms 
bandwidth abundant jitter rarely occurs relatively loaded lan small scale wan buffer space flow control mechanism account jitter periods 
tested vod service networks results 
service architecture movie replicated subset servers 
server crashes disconnects clients replaced server holding movie transparent way 
clients migrated server load balancing purposes new server brought 
main challenge address designating alternate server making transition servers smooth clients unaware change service provider 
challenging client migrates server video transmission may short period frames may arrive twice may arrive order 
call periods undesirable events occur irregularity periods 
duration irregularity period depends level synchrony servers 
vod service assume tight coupling servers prototype servers synchronization occurs half second overhead server synchronization consumes total communication bandwidth vod service 
order guarantee smooth video display irregularity periods client maintains buffer forthcoming frames 
buffer size subject fine tuning depending expected irregularity period duration 
experiments mbps video stream clients allocated buffer space approximately mbit software addition mbit hardware mpeg decoder 
designed flow control mechanism endeavors keep frames buffer account irregularity periods jitter causing buffers overflow 
challenging tune flow control algorithm re fill client buffers quickly causing overflow irregularity periods 
flow control mechanism section 
tested service mbps switched ethernet small scale wan 
results encouraging video display times migration due server crash load balancing smooth human observer 
vod service implementation exploits transis group communication system synchronization servers connection establishment exchanging control messages concepts suggested described benefits group communication highly available vod services 
proof concept preliminary vod service prototype transmitting low bandwidth video material clients software decoders 
section describe exploit group communication current vod service simplify service design 
concepts demonstrated general may exploited construct variety highly available servers 

environment vod service tolerates server failures network partitions 
exploits commodity hardware publicly available network technologies tcp ip atm servers clients may run machine connected internet 
video transmission application vod service best provided qos reservation mechanism available atm network 
mandatory 
networks abundant bandwidth limited jitter relatively loaded fast switched ethernet soft reservation available rsvp buffer space flow control mechanism account jitter periods 
video material stored transmitted standard mpeg format 
clients hardware mpeg decoders order process high bandwidth video 
mpeg encoding movie consists sequence frames different types intra frames represent full images frame types incremental decoded corresponding frames 
movie transmitted frame frame single frame transmitted single message 
communication channels transmitting video material may unreliable sense messages may lost arrive order 
vod service recover lost frames 
communication channel suffers message loss degradation occurs quality displayed movie 
vod service uses client buffers re order frames arrive order insert frames right place video stream 
vod service requires possibly unreliable failure detection mechanism order detect server failures 
requires reliable multicast mechanism communication servers connection establishment control messages 
prototype implementation transis group communication system tasks cf 
section 

service overview section describe design vod service 
details specific algorithms appear sections 
movie replicated subset servers clients connect video demand service request movie watch list offered movies 
servers hold movie forms way connection client server transmits video material client sends control messages flow control purposes speed control random access movie 
clients full vcr control assume separate mechanism replicating video material 
server server vod service client client server server failure 
server server vod service client client server recovery server failure 

transparent vod services 
transmitted material pause restart arbitrary random access accordance atm forum vod specs 
server periodically sends information clients servers details please see section 
server crashes remaining servers take clients crashed server client served exactly server 
client oblivious change shown 
similar process occurs servers decide migrate clients load poorly distributed new server brought alleviate load 
client migration process described detail section 
client maintains buffers forthcoming frames hardware decoder software cf 
section discussion buffer sizes 
received video frames stored software buffer streamed hardware decoder 
case buffer overflow frames need discarded frame arrives buffer full discard frames buffer space new frame 
possible discard incremental frame full image frame 
buffers allow smooth video display migration times 
software buffer re ordering video frames arrive order 
order frames inserted right place video stream arrive streamed hardware decoder 
discard frames arrive hardware decoder consumed frames follow 
flow control mechanism task keep frames buffer account irregularity periods re ordering avoiding buffer overflow 
flow control mechanism described section 
flow control vod service uses loosely coupled feedback flow control mechanism client sends flow control messages server order dynamically adjust transmission rate 
server maintains current rate client adjusts client flow control requests 
clients may request increase decrease transmission rate certain delta 
prototype implementation delta frame second 
example server transmits frames second certain client increase request arrives client server changes rate frames second 
client flow control module endeavors keep frames buffers account irregularity periods allow re ordering frames arrive order 
albeit careful increase transmission rate cause buffer overflow 
client try deduce rate server transmitting video keeps track buffers occupancy number frames buffers 
flow control mechanism attempts keep number frames buffer low water mark high water mark thresholds 
number frames falls low water mark transmission rate increased buffer full high water mark transmission rate decreased 
due network delay transmission rate change instantaneously 
increasing transmission rate sufficiently surpass low water mark client start requesting slow transmission rate occupancy surpasses high water mark 
likewise client request increase transmission rate occupancy falls low water mark 
number frames buffer value buffer occupancy check frequency request send critical threshold gamma urgent emergency critical threshold low water mark gamma urgent increase low water mark high water mark gamma previous occupancy normal increase low water mark high water mark gamma previous occupancy normal decrease high water mark full urgent decrease 
client flow control policy low high water marks client adjusts transmission rate change buffers occupancy buffers contain frames contained previous flow control request sent client requests decrease transmission rate vice versa 
buffer occupancy request emitted 
buffer occupancy high low water marks flow control messages sent relatively small frequency normal 
buffer occupancy high low water marks flow control messages urgent sent higher frequency urgent 
prototype occupancy low high water marks flow control messages sent received frames frequency doubled 
addition client buffer occupancy falls certain critical threshold client sends emergency request 
handling emergency requests server described section 
client flow control policy summarized 

handling emergency situations buffer occupancy falls critical threshold emergency mechanism kicks 
situation typically occurs client migrates server due server failure load balancing startup time client requests random access different part movie 
cases client sends emergency request server 
server responds temporarily increasing transmission rate order re fill clients buffers quickly 
order avoid overflowing clients buffers server persist high transmission rate long period 
additional transmitted bandwidth decays time 
number frames second transmitted client sum latest known transmission rate plus emergency quantity 
emergency quantity decays certain percentage second 
emergency quantity greater zero server ignores flow control requests client 
default transmission rate startup 
base emergency quantity decay factor chosen total number additional frames desired sum decaying sequence values truncated integers delta tradeoff involved selection parameters starting high base quantity buffers fill faster allow coping message re ordering additional emergencies smoothly 
risk overflow greater seconds additional transmission bandwidth consumption high 
qos reservation mechanisms costly 
experimented different sequences 
prototype chose increase bandwidth consumption emergency periods mean bandwidth 
transmitting frames second movie set base emergency quantity 
decay factor resulting sequence sum frames 
note service qos reservation atm network need reserve additional variable bit rate vbr channel emergency periods varying constant bit rate cbr channel reserved normal periods 
elaborated emergency recovery mechanism transmit smaller emergency quantity serious emergency situations 
set critical thresholds client buffer occupancy falls base emergency quantity frames explained 
buffer occupancy falls base quantity set frames resulting sequence sums additional frames 

choosing buffer sizes thresholds buffer size chosen account irregularity periods occurring emergency situations migration due server failure load balancing 
flow control mechanism endeavors keep buffer occupancy low water mark 
low water mark reflect number frames needed account irregularity periods 
duration irregularity period sum server synchronization skew take time 
prototype implementation server synchronization skew half second worst case 
take time affected failure detection time time required information exchange servers 
tests local area network take time half second average 
additional delay may introduced process scheduling real time operating system 
chosen buffer sizes contain approximately seconds video low water mark total buffer space high water mark buffer space 
buffers full low water mark account irregularity period approximately seconds 
tuned gap low high water marks large allow flow control algorithm keep buffer occupancy range larger needed order consume excess buffer space 
likewise margin high water mark top buffer essential order avoid buffer overflow 
sophisticated mechanism handling emergency requests allowed margin small 
values subject fine tuning specific run time environment 
note buffer sizes account single emergency situation 
second emergency situation handled smoothly buffers re filled contain sufficient frames 
order guarantee smoothly coping additional emergency situations occurring buffers start re fill buffer size enlarged 
video material buffers account duration irregularity period situation handled smoothly video material delayed skipped human observer notice jitter usually second 

adjusting quality video material clients communication computation capabilities may allow processing high quality video slow modem communicate hardware video decoders 
cases client may request lower quality video consisting frames second 
request arrives server starts skipping frames transmits number frames second suits client capabilities 
done transmitting full image frames frames capabilities allow 

exploiting group communication vod service exploits group communication system gcs 
group communication simplifies achieving fault tolerance dynamic load balancing provides convenient framework service design 
group communication introduces notion group abstraction allows processes easily arranged multicast groups 
set processes handled single logical connection identified logical name 
group gcs provides reliable multicast membership services 
reliable multicast services deliver messages current members group 
membership group set currently live connected processes group 
task membership service maintain membership group deliver membership group members changes 

service group layout service creates kinds multicast groups shown 
session groups server server group server server server server client client movie group 
group layout vod service 
server group consists vod servers 
client uses group startup order connect vod service 
client communicates server group completely unaware particular vod server identities 
movie group movie consists vod servers copy particular movie 
group servers consistently share information clients currently watching movie fault tolerance purposes cf 
section 
session group client consists client watching movie server currently communicating movie client 
client uses group send control information vod server 

fault tolerance dynamic load balancing consider happens single movie group corresponding movie member uses reliable multicast service periodically multicast members information clients watching information includes offsets clients movie current transmission rates total dozens bytes 
prototype implementation servers multicast information half second 
servers kept synchronized half second respect clients positions movie storage space bandwidth required information negligible buffer space bandwidth required video transmission 
membership changes result server crash join members receive notification new membership 
receiving notification servers evenly re distribute clients 
notification reflects server failure remaining server uses knowledge clients order deterministically decide clients serve 
new servers join servers exchange information clients deduce clients serve 
order take client server simply joins client session group resumes video transmission starting offset transmission rate heard previous server 

benefits group communication group communication greatly simplifies service design 
particular provides advantages 
group abstraction simplifies connection establishment allows transparent migration clients maintaining simple client design 
clients oblivious number identities servers providing service 

membership service detects conditions client migration re distributing load achieving fault tolerance 

reliable group multicast semantics facilitates information sharing servers order allow consistently agree client migration 

reliable multicast guarantee client control messages reach servers 
vod service prototype implemented transis group communication system 
server implemented lines code 
client implemented lines code excluding gui video display module 
transis services application far complicated code size turned significantly larger 

performance measurements implemented vod service udp ip video transmission 
transis group communication system running udp ip membership reliable messages 
servers run pcs running unix 
video stored transmitted mpeg format 
clients run windows nt video decoded clients hardware decoders 
performance measurements shown obtained parameters approximately mbps frames second mpeg movie allocated software buffers frames kb hardware buffers approximately seconds video servers synchronize states second 

performance measurements lan typical performance measurements obtained testing vod service mbps switched ethernet 
measurements collected vod client watching movie scenario approximately seconds movie began server transmitting movie terminated client migrated server 
approximately seconds new server brought client migrated load balancing purposes 

overcoming irregularity video transmission depicts cumulative number frames skipped displayed user function time 
running lan encounter message loss frames discarded due buffer overflow occurring recovery emergency situations shows frames skipped emergency period startup server failure migration due load balancing 
due policy discard full image frames cases buffer overflow skipped frames frame 
frame loss caused slight transient degradation video image note correlation skipped frames peak software buffer occupancy depicted 
skipped frames cumulative time seconds server crash load balance skipped frames 
late frames cumulative time seconds server crash load balance late frames 
software buffer occupancy frames time seconds server crash load balance high water mark low water mark software buffers occupancy 
hardware buffer occupancy bytes time seconds server crash load balance hardware buffers occupancy 

overcoming irregularity video transmission lan 
lasted second degradation noticeable human observer 
shows cumulative number late frames frames discarded arrived displayed 
running lan messages arrive order late arriving frames arrive twice migration times 
servers perfectly synchronized client migrates server certain frames may transmitted servers 
occurs take conservative pessimistic approach preferring duplicate transmission frames missed frames 
note different behavior occurs case server failure case migration due load balancing 
server fails longer transmission failure detection takes time 
times buffer occupancy drops lower please see load balance time hand new server starts transmitting video material approximately duplicate frame considered late 
time old server stops transmitting 
due discrepancy servers frames transmitted twice observed late frames graph 

buffer occupancy occupancy client buffers function time displayed figures 
shows software buffers reach mean occupancy frames approximately seconds 
emergency events occur buffer occupancy oscillates low high water marks 
software buffer occupancy drops zero client migrated due server failure drops approximately capacity client migrated load balancing purposes 
buffers re filled quickly buffer overflow occurs recovery emergency periods 
shows hardware buffers fill approximately seconds frame movie arrives client 
hardware buffer occupancy drops approximately capacity server crash 
skipped frames cumulative time seconds server crash load balance total number skipped frames 
frames discarded due overflow time seconds server crash load balance frames discarded due buffer overflow 

skipped frames wan 

measurements small scale wan tested vod service hebrew tel aviv universities hops apart internet 
udp ip qos reservation mechanisms 
measurements collected vod client watching movie 
approximately seconds movie began new server brought client migrated load balancing purposes 
approximately seconds server transmitting movie terminated client migrated server 
depicts cumulative number frames skipped displayed user function time 
observe running internet reservation mechanisms certain percentage messages lost 
quality displayed video inferior quality observed lan 
irregularity periods additional frames skipped due buffer overflow 
demonstrated depicts cumulative number frames discarded due buffer overflow 
client buffer occupancy number late frames observed wan exhibit similar behavior observed lan 
due lack space include graphs 

related current research area vod focuses improving performance single server parallel servers dedicated hardware 
improved performance single server achieved techniques sophisticated file organization novel qos aware disk scheduling algorithms data fault tolerance admission control resource buffers reservations deals network qos 
current research rarely addresses issue smooth provision service presence server communication failures 
exception aware microsoft tiger video file service highly scalable 
tiger uses striping movies servers 
tiger architecture differs assumes set servers tightly coupled connected fast communication network 
architecture multiple servers serve clients 
sophisticated scheduler utilized synchronize servers 
architecture client served server time servers geographically apart 
tiger special reconfiguration process needs executed new server new movie added order re stripe movies 
service new server brought special preparations new movies added fly storing machines servers running 
tiger system smoothly tolerates failure server necessarily failures failures concurrent total number servers large 
contrast vod service set hard limit number server failures tolerated 
movie replicated times gamma failures tolerated 

fault tolerant video demand service provided multiple servers 
server crashes replaced server transparent way 
clients unaware change service provider 
new servers may brought fly alleviate load servers 
test runs implementation transitions noticeable human observer uses service 
concepts demonstrated general may exploited construct variety highly available servers 
current implementation video material transmitted udp ip 
connection establishment control sharing state servers performed services transis group communication system runs udp ip 
group communication greatly simplifies service design 
intend port test vod service atm networks video material transmitted native atm uni uni connections 
intend continue group communication connection establishment control sharing state 
gcs geared wan ideas 
gcs run classical udp ip lan emulation atm lane directly native atm 
acknowledgments gregory chockler contribution preliminary version vod service helpful comments suggestions regarding presentation style 
acm 
commun 
acm special issue group communications systems april 
amir dolev kramer malki 
transis communication sub system high availability 
nd ieee fault tolerant computing symposium ftcs july 
dolev levy 
congress connection oriented group address resolution service 
tech 
report cs institute computer science hebrew university jerusalem jerusalem israel december 
available www cs huji ac il transis 
dolev levy 
congress connection oriented group address resolution service 
proceedings spie broadband networking technologies november 
chockler dolev keidar 
scalable group membership services novel applications 
merritt shavit editors networks distributed computing dimacs workshop volume dimacs pages 
american mathematical society 
chockler keidar wexler 
exploiting group communication highly available demand services 
proceedings ieee th international conference advanced science technology nd international conference multimedia information systems pages april 
atm forum 
lan emulation atm specification version february 
atm forum technical committee 
atm user network interface uni specification version june 
isbn 
atm forum technical committee 
atm user network interface uni signalling specification version af sig 
july 
atm forum technical committee 
audiovisual multimedia services video demand specification af saa 
january 
berson muntz 
fault tolerant design multimedia servers 
acm sigmod international symposium management data pages may 
bolosky barrera draves fitzgerald gibson jones levi rashid 
tiger video fileserver 
proceedings sixth workshop network operating system support digital audio video nossdav april 
bolosky fitzgerald douceur 
distributed schedule management tiger video fileserver 
acm sigops symposium operating systems principles sosp pages october 
cker chiueh 
design implementation stony brook video server 
software practice experience 
appear 
dolev malkhi 
transis approach high availability cluster communication 
commun 
acm april 
schmuck 
tiger shark file system 
proceedings ieee spring compcon feb 
iso iec iso iec 
mpeg specification 
www mpeg de 
lee 
parallel video servers tutorial 
ieee multimedia special issue video application april june 
martin narayan rastogi silberschatz 
fellini multimedia storage management 
kluwer academic 
appear 
shenoy goyal rao vin 
design implementation symphony integrated multimedia file system 
acm spie multimedia computing networking mmcn pages january 
tobagi pang baird gang 
streaming disk array management system video files 
acm multimedia pages august 
zhang deering estrin shenker zappala 
rsvp new resource reservation protocol 
ieee network september 
rsvp project home page www isi edu div rsvp rsvp html 
