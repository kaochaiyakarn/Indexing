data model metrics mario coral university la de real spain mail inf cr es data model metrics due central role conceptual data models play design databases crucial assure quality early phases database life cycle 
assessing necessary improving conceptual data model quality necessary dispose quantitative objective measures order avoid bias quality evaluation process 
context software measurement help designers better decision design activities 
main interest article provide state art measures conceptual data models 
keywords conceptual data models software metrics structural complexity measures validation 
data modelling step database design providing link user needs software solution meets 
choice appropriate representation data crucial tasks entire systems development process 
data modelling phase represents small proportion total systems development effort impact final result probably greater phase 
data model major determinant system development costs quality 
additionally experience proved problems artifacts produced initial stages system development propagate artefacts produced stages costly identify correct 
quality data models evaluated effort expended improving pay times phases 
generally accepted guidelines evaluating quality data models little agreement experts data model 
general krogstie remarked literature provides bread butter lists useful properties giving systematic structure evaluating 
lists unstructured imprecise definitions overlap properties models confused language method properties 
quality properties generally ensure quality practice different people different interpretations concept 
necessary quantitative objective measures reduce subjectivity bias evaluation process 
rigorous frameworks proposed attempt address quality data modelling systematic way lack quantitative assessment data model quality 
handbook software engineering knowledge engineering software engineers putting forward huge quantities metrics software products processes resources 
unfortunately metrics focused programs disregarding data models 
corroborates fact compared software engineering quality concept data model quality poorly understood 
main interest article provide state art measures conceptual data models 
proposals metrics data models proposed gray moody 
focus measures entity relationship diagrams erd metrics erd dominant method data modelling 
fact data modellers currently variant erd 
article organised way section different steps advisable follow process metric definition section proposals conceptual data model measures checking accomplish steps suggested section 
section summary comparison metric proposal section 
section summarise article trends area measures conceptual modelling 

metrics definition validation process assuring metrics data models artifact produced life cycle valid metrics necessary define methodological way 
goal section highlight different issues account process metric definition validation 
shows general steps advisable follow process metric definition validation explained subsections 
theoretical validation metric definition empirical validation experi ments 
steps metric definition case studies process iterative step feed lead accept improve change discard proposed metrics 

metric definition data model metrics step proposal metrics account clear goals definition metrics 
goal question metric gqm paradigm provides framework deriving measures measurement goals 
gqm metric deduced top approach covering levels conceptual level goals defined operational level questions defined quantitative level metrics derived 
gqm approach results set metrics utility clearly justified 
improvement gqm proposes goal oriented measurement model life cycle structured approach phase identify main activities inputs outputs defines templates deriving activities 
focuses management activities pointed generate refine achieve organizational goals 
basically gqm emphasise measurement goal clearly connected industrial goal measurement program responds software organization needs 
example gqm goal analyse erd purpose evaluating maintainability viewpoint database designer information system designer software development companies departments 
goal defined terms entities shown 
object study erd purpose evaluating quality focus maintainability viewpoint database designer designer environment software development companies departments 
example goal definition distinguish kind metrics closed ended metrics open ended metrics 
closed ended metric measurements fall particular range 
ratio part corresponding type 
range zero 
example closed handbook software engineering knowledge engineering ended metric number relationships erd divided total number relationships erd 
open ended metrics range absolutely fixed 
example metric number entities erd 
aspect take account metrics defined different data model scopes metrics single different elements data model number attributes entity number attributes relationship metrics model number entities model number relationships model 
data models metrics objective subjective calculated objective method counting number entities subjective typically scores users stakeholders 
general subjective measures believed lower quality objective ones 

theoretical validation main goal theoretical validation check intuitive formal idea attribute measured reflected measurement 
done analysing theoretical requisites satisfied measuring 
basically analysis properties attribute wish measure 
attempts establish carry theoretical validation software measurement standard accepted way theoretically validating measure 
van den berg van den said standard theoretical validation issues software measurement urgently required 
validation theory followed paths alternative complementary 
measurement theory approaches check specific measure empirical relations elements real world established attribute measured respected measuring attributes 
measurement theory gives clear definitions terminology sound basis software measures criteria experimentation conditions validation software measures foundations prediction models empirical properties software measures criteria measurement scales opinion measurement theory proponents 
research software measurement area address measurement scales 
argues scales important 
arguments take account empirical properties software measures hidden scales 
units closely connected measurement scales 
discussion scale types important statistical operations 
empirical numerical conditions covered certain scale type consideration empirical numerical conditions necessary important 
property approaches :10.1.1.24.25
aim formalize empirical properties generic attribute software system 
complexity data model metrics size satisfy order analysis measurement proposed attribute 

empirical validation aspects software engineering proposing techniques metrics necessary perform empirical validation assure utility practice 
empirical validation critical success software measurement :10.1.1.17.1239
goal step prove practical utility proposed metrics 
various ways performing step basically divide empirical validation experimentation case studies 
experimentation usually controlled experiments case studies usually real data 
necessary controlled experiments having approach case studies making results stronger 
replication experiments necessary difficult understand applicability isolated results study assess true contribution field 

metric proposals commented focus mainly metrics erd database design field dominant method modelling 
metrics data models lethbridge focus knowledge models survey oo models metrics 
proposal metric definition analyse issues goal pursued metric scope metrics close open ended metrics objective subjective metrics theoretically validated metrics empirically validated 
gray metric proposal gray proposed objective open ended metrics evaluate quality erd 
goal metrics provide designers quantitative support helping compare design alternatives help take better decisions 
gray suggested measure determining effort required implement design show 
metrics help identify design problems database design optimise necessary improve design 
handbook software engineering knowledge engineering er metric 
complexity erd objective open ended metric defined ei number entities complexity entity di fi data architecture complexity entity ri di data architecture complexity fi functional complexity ri number relationships number functionally dependent attributes number dependent attributes values coefficients highly dependent erd valued accordingly particular situation 
functional complexity fi assumed entity 
area metric 
erd area metric defined ae re ae re metric ways numerator calculated regarding attributes entities relationships erd 
denominator regarding erd corresponding third normal form 
number attributes number entities number relationships data model metrics comparing alternative designs system value axe computed design values directly compared 
comparing designs different systems ratios design corresponding design third formal norm compared 
axe design axe corresponding third formal norm 
measures theoretically validated empirical evidence utility metrics 

metric proposal develops method assessing quality erd 
author considers data model quality determined ontological behavioural components 
method summarized steps calculate scores individual ontological components structure components refer relationship elements model content components refer attribute entities 
structure components suitability soundness consistency conciseness 
content components completeness cohesiveness validity 
combine scores relevant ontological components behavioural component usability user point view usability designer point view maintainability accuracy performance 
combine scores behavioural components calculate score model quality 
score data model quality calculated 




weights behavioural factors scores behavioural factors value weights determined importance factor organization general agreement values 
scores combination values ontological factors ontological factors 
handbook software engineering knowledge engineering ontological factors turn user scores complex formulas shown suitability score users asked find erd suitable rating 
soundness score similarly estimated technical group directly involved project 
consistency score calculated certain amount points inconsistency way maximum possible points points ratio number inconsistencies number implications 
number implications number relationships diagram implications area entity relationship conciseness score number entities erd minimum number relationships needed 
erd relationships get perfect score case 
worst possible situation entity connected entity 
number relationships case case zero 
erd connections calculated completeness content sure erd complete verified list queries reports generated database 
deduction missing data query report decided organization depending importance query report 
cohesiveness content measure cohesiveness entity 
entity cohesiveness size primary identifier 
primary identifier composed attribute attributes possible highest cohesiveness score primary identifier attributes entity cohesiveness denotes number entity 
ne number attributes entity np number attributes primary identifier ne np ne validity content calculated assigning attributes entities considered valid 
attributes considered invalid placed right entities score zero assigned 
ni total invalid entities ni ne scores fall organizational requirements erd modified proceeding calculate quality score 
nature metrics requires designers interact users get measurements increasing feed back users managers 
data model metrics suggested determination erd quality subjective value proposed indicator erd quality precise estimate 
causal relationships ontological behavioural factors erd empirically validated modified empirical data 
measures theoretically validated 
real world application model concluded model provided useful framework analysing making revisions erd 
explain proposal really function practice suggested model methodology applied large scale erd 

moody metric proposal moody defined comprehensive set metrics see table evaluating quality erd 
objective metrics number entities erd result subjective scoring stakeholders ability users interpret model correctly 
goal assess different factors influence erd quality 
quality factors metrics completeness number items data model correspond user requirements number user requirements represented data model number items data model correspond user requirements inaccurately defined number inconsistencies process model 
integrity number business rules enforced data model number integrity constraints included data model accurately correspond business policies flexibility number elements model subject change estimated cost changes understandability strategic importance changes user rating understandability model ability users interpret model correctly application developer rating understandability correctness number violations data modelling conventions number normal form violations number instances redundancy model simplicity number entities number entities relationships weighted sum constructs bn cn number entities number relationships handbook software engineering knowledge engineering number attributes 
integration number conflicts corporate data model number conflicts existing systems rating representatives business areas data defined way meets corporate needs requirements application developed technical risk rating schedule risk rating development cost estimate number physical level elements included data model table 
metrics evaluate quality factors metrics theoretically empirically validated 
moody suggested necessity empirical validation proposed task 

metric proposal idea authors focus measuring erd maintainability 
external quality attribute maintainability measured product finished nearly finished idea define measures erd structural complexity internal attribute predict erd maintainability influences maintainability database implemented 
system theory point view system called complex composed different types elements different types dynamically changing relationships 
complexity erd highly influenced different elements compose entities attributes relationships generalisations advisable define general measure complexity 
reasoning proposed set measures measuring erd structural complexity notion complexity henderson sellers 
metrics allow database designers quantitative comparison design alternatives objective selection erd alternatives equivalent semantic content 
prediction external quality characteristics maintainability initial phases life cycle better resource allocation predictions 
metrics open ended applied diagram level 
classified categories entity metrics ne metric 
total number entities erd 
attribute metrics data model metrics na metric 
total number attributes exist erd account entity relationship attributes 
number include simple attributes composite attributes multivalued attributes take value 
da metric 
erd minimal aspect requirements appears diagram erd minimal redundancies 
sources redundancies erd existence derived attributes 
attribute derived value calculated deduced values attributes 
derived attributes metric number derived attributes existing erd 
ca metric 
total number composite attributes erd 
metric 
total number multivalued attributes erd 
relationship metrics nr metric 
total number relationships erd account common relationships 
nr metric 
total number relationships erd 
nr metric 
total number relationships including relationships erd 
metric 
total number ary relationships binary erd 
metric 
total number binary relationships erd 
nis ar metric 
total number relationships generalisation specialisation exist erd 
case consider relationship child parent pair relationship 
metric 
total number reflexive relationships exist erd 
rr metric 
source redundancy erd existence redundant relationships 
define redundant relationship metric number relationships redundant erd 
metrics theoretically validated property approach proposed briand measurement theory framework proposed zuse 
carried empirical validation metrics means case study 
demonstrated means case study proposed metrics heavily correlated time spent different phases development application programs manage data represented erd 
handbook software engineering knowledge engineering controlled experiment 
carried controlled experiment aim building prediction model erd maintainability values proposed measures 
building prediction model extension original knowledge discovery databases kdd fuzzy prototypical knowledge discovery consists search fuzzy prototypes characterise maintainability erd 
prototypes lay foundation prediction model lead predict erd maintainability 
empirical validation including replication experiment taken data real project required draw final remarks 
metric proposal proposed set objective close ended metric evaluate structural complexity erd goal built prediction model maintainability erd 
metric measures relation exists number relationships number entities erd model 
number relationships erd 
number entities erd 

number relationship considered relationships account relationship pair child parent relationship 
da metric number derived attributes exist erd model divided maximum number derived attributes may exist erd attributes erd model 
da da da number derived attributes erd 
number attributes erd 

number attributes erd included simple attributes composite attributes multivalued attributes take value 
ca metric assesses number composite attributes compared number attributes erd 
ca ca data model metrics ca number composite attributes erd 
number attributes erd 
number attributes erd included simple attributes composite attributes multivalued attributes take value 
rr metric number relationships redundant erd divided number relationships erd minus 
rr rr rr number redundant relationships erd 
number relationships erd 

number relationship considered relationships account relationship pair child parent relationship 
metric measures number relationships compared number relationships erd model 
nr rel nr number relationships erd 
number relationships erd 

number relationship considered relationships account relationship pair child parent relationship 
arel metric assesses complexity generalization specialization hierarchies erd 
metric combines factors order measure complexity inheritance hierarchy 
factor fraction entities leaves inheritance hierarchy 
measure called calculated leaf leaf number leaves generalization specialization hierarchy 
number entities generalization specialization hierarchy 

handbook software engineering knowledge engineering undesirable property shallow hierarchy just levels high branching factor gives measurement unreasonably high subjective standpoint correct problem additional factor calculation arel metric average number direct indirect supertype nonroot entity root entity counted parents 
arel metric calculated formula arel metric assesses complexity hierarchy 
arel complexity average arel complexities erd 
metrics theoretically validated 
related empirical validation carried empirical validation metrics means controlled experiment order ascertain relationships exist proposed metrics maintainability understandability legibility simplicity modifiability stability testability obtain prediction model erd maintainability metric values 
empirical validation required extract final specially data taken real projects example real data maintenance effort 

summary different proposals table summarises important characteristics main conceptual data model metrics proposals existing literature section 
column table refers main source metrics 
second focus metrics usually complexity 
third column refers scope metrics data model single element data model 
column shows metrics calculated objective method subjective typically scores users stakeholders 
fifth column reflects metrics open closed ended 
columns reflect published studies theoretical empirical validation metrics carried 
authors focus scope objective open closed theor 
emp 
val 
subjective ended val 
gray complexity conceptual data model objective open ended ontological conceptual objective open ended behavioural data model subjective 
data model metrics moody quality conceptual objective open ended factors data model subjective complexity conceptual data model objective open ended partial 
complexity data model objective closed ended partial 
table 
conceptual data model metrics seeing table conclude measures conceptual data models scarce 
proposed metrics lack theoretical empirical validation defined way gqm 
proposal partially follow recommendations done section define valid metrics 
validation required consider final proposal 
measurement conceptual data models area consolidated 
research needed validation theoretical empirical contribute definition valid metrics useful database designers take better decisions design tasks important goal pursue measurement proposal useful 

importance data models software development influence final information system quality cost emphasise importance data model quality 
data model quality addressed rigorous quantitative methods techniques 
moody remarks information modelling progress craft engineering discipline formal quality criteria metrics need explicitly defined 
focused conceptual data models artifact produced database life cycle quality heavily influence database implemented 
nowadays research needed aspects software measurement general theoretical practical point view 
opinion efforts needed defining validating data model metrics 
metrics flag outlying models special attention help data designers tasks 
chapter proposals sense summarised 
metrics proposed far need validated cases experiments practitioners starting point 
research needed data modelling process quality works carried far focused data model product quality 
pointed great diffusion oo techniques data modelling introduced new elements taken account aggregation kind relationships practically measures exist 
measures conceptual data models deal oo models 
regarding oo models necessary define metrics measuring static diagrams class diagrams metrics dynamic diagrams state diagrams activity diagrams 
handbook software engineering knowledge engineering 
data modelling essentials van nostrand reinhold 

boehm software engineering economics prentice hall 

moody data model 
evaluating quality entity relationships models proceedings th international conference conceptual modelling er manchester england december 

krogstie deeper understanding quality requirements engineering proceedings th international conference advanced information systems engineering caise finland june 

understanding quality conceptual modelling ieee software 
march 

moody improving quality entity relationship models experience research practice proceedings seventeenth international conference conceptual modelling er singapore november 

guidelines modelling approach enhance quality information models proceedings seventeenth international conference conceptual modelling er singapore november 

melton ed 
software measurement 
international thomson computer press london 

fenton pfleeger software metrics rigorous approach nd 
edition chapman hall london 

measuring legacy database structures proc 
european software measurement conference peeters eds 

improving quality conceptual modelling schema transformations proceedings th int 
conf 
conceptual modelling er germany 

gray carey design metrics database systems bt technology 

evaluating quality entity relationship models information software technology 


moody metrics evaluating quality entity relationship models proceedings seventeenth international conference conceptual modelling er singapore november 

serrano measures get better quality databases stafford july 

ruiz database quality chapter advanced database technology design eds 
mario oscar az artech house 

chen entity relationship model unified view data acm transactions database systems 


muller database design 
uml data modelling 
san francisco morgan kaufmann 
data model metrics 
database modelling design third edition morgan kaufmann 
san francisco 

basili weiss methodology collecting valid software engineering data ieee transactions software engineering 

basili rombach tame project improvement oriented software environments 
ieee transactions software engineering 

production maintenance goal oriented software measurement models 
journal software engineering knowledge engineering world scientific publishing pte 
appear 

lethbridge metrics concept oriented knowledge bases international journal software engineering knowledge engineering 


software measurements 
software engineering knowledge engineering vol 
world scientific publishing pte 


van den berg van den axiomatic validation software metric development process chapter software measurement edited austin melton thomson computer press 

zuse framework software measurement 
berlin walter de gruyter 

melton gustafson bieman baker mathematical perspective software measures research iee software eng 


distance software measurement necessary sufficient properties software measures information software technology 

weyuker evaluating software complexity measures 
ieee transactions software engineering 

briand basili property software engineering measurement ieee transactions software engineering 

briand theoretical framework measuring software attributes proceeding fourth international software metrics symposium 

fenton framework software measurement validation 
ieee transactions software engineering 

software metrics quality control proceedings fourth international software metrics symposium ieee computer society technical council software engineering 
basili building knowledge families experiments ieee transactions software engineering 


early measures uml class diagrams objet 
hermes science publications 

measures assessing dynamic complexity aspect object oriented conceptual schemes 
proceedings th handbook software engineering knowledge engineering international conference conceptual modeling er salt lake city october 

fenton software measurement necessary scientific basis 
ieee transactions software engineering 

henderson sellers object oriented metrics measures complexity 
prentice hall upper saddle river new jersey 

formalization metrics conceptual data models ukais cardiff april mcgraw hill international uk limited 

approach evaluate complexity conceptual database models nd european software measurement conference madrid 

romero knowledge discovery predicting entity relationship diagram maintainability 
argentina 
appear 

romero fuzzy prototypical knowledge discovery 
application forest fire prediction 
knowledge systems institute chicago ill usa 

jim nez 
measuring quality entity relationship diagrams 
proceedings th international conference conceptual modeling er salt lake city usa october 

fenton neil 
software metrics roadmap 
software engineering 
ed anthony finkelstein acm 
