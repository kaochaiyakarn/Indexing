short running time structure software title reliability model contact gokhale author address college engineering university california riverside ca phone fax email cs ucr edu time structure software reliability model gokhale trivedi college engineering university california riverside ca cs ucr edu center advanced computing communication dept electrical computer engineering duke university durham nc past years seen formulation numerous analytical software reliability models estimating reliability growth software product 
predictions obtained applying models tend optimistic due inaccuracies operational profile saturation effect testing 
incorporating knowledge gained structural attribute code test coverage time domain models help alleviate optimistic trend 
enhanced non homogeneous poisson process enhpp model incorporates explicitly time varying test coverage function analytical formulation provides defective fault detection test coverage testing operational phases 
allows time varying fault detection rate 
enhpp model offers unifying framework previously reported finite failure models test coverage 
propose log logistic coverage function capture increasing decreasing failure detection rate fault accounted previously reported finite failure models 
methodology enhpp model reliability prediction earlier testing phase 
expressions predictions operational phase software software availability optimal software release times subject various constraints cost reliability availability developed enhpp model 
validate enhpp model different coverage functions failure data sets 
ii conventional approaches software reliability growth modeling black box software treated black box interactions external world modeled 
tests generated specified functional properties program operational profile musa 
internal structure program taken account generating test cases 
stochastic model calibrated failure data collected functional testing software model predict reliability software determine testing 
black box approach relies assumption software tested operational profile 
development operational profile general involved task musa musa available operational profile inaccurate due reasons horgan 
additionally situations software developed kind operational profile may simply unavailable 
conduct study investigate sensitivity reliability growth models predictions operational profile 
due inaccuracies estimated operational profile situations lack reliability predictions obtained software reliability growth models tend optimistic 
reason optimistic estimates saturation effect testing chen wong 
testing proceeds easier test case increase coverage earlier part testing phases 
increasingly difficult design test cases execute parts code detect faults program 
result time failures increases testing time increases 
reliability software increase number residual faults program reduced 
redundant test cases cover part code expose new faults 
increase times resulting overestimates reliability chen 
incorporating knowledge gained structural attribute code test coverage black box time domain models help reduce sensitivity reliability estimates obtained models errors operational profile due saturation testing 
intuition empirical evidence suggests higher test coverage higher reliability software product 
various experiments conducted models proposed explore relationship code coverage fault detection effectiveness software reliability 
wong wong conducted experiment determine effect block coverage fault detection effectiveness 
investigated relation test coverage fault detection rate discovered relation structural coverage fault coverage variant rayleigh distribution 
assumed fault detection rate testing proportional number faults software including block branch data flow functional group coverage 
chen chen utilize coverage measures determine effective testing effort hypothesize testing effort effective increases type coverage reveals type fault 
incorporate coverage measurements explicitly reliability model 
chen chen empirical evidence testing method affect software reliability estimates suggest reliability models need consider form code coverage obtain accurate estimates 
analyzed block coverage growth functional testing software product derive exponential model relating number test cases block coverage 
model equivalent go model attempted ramsey basili 
derived exponential model relating coverage frequency error removal ratio 
utility model relies prior knowledge error distribution different functional groups product 
horgan horgan mathur emphasize importance coverage measures order obtain realistic estimates software reliability growth models 
modeled relation testing effort coverage reliability propose coverage logarithmic model relates test coverage measure fault detection 
report strong correlation coverage reliability measures incorporate coverage reliability model 
discuss test coverage reliability estimation hyper geometric distribution model 
research far focuses confirming intuitive relationship coverage reliability enhancing particular model incorporate code coverage specific experiment 
framework allow coverage measures accounted generalized fashion 
enhanced non homogeneous poisson process enhpp model proposed incorporates explicitly timevarying test coverage finite failure non homogeneous poisson process models 
extension existing modeling approach functional testing result change development test set 
accommodate test coverage measurements block decision data flow coverage obtained functional testing software product 
coverage measurements obtained coverage measurement tools horgan london hindsight enhpp model capable handling general coverage function provides methodology integrate test coverage measures black box modeling approach 
particular realistic situation defective coverage sufficient testing carried captured 
result residual faults exhaustive complete testing predictable enables compute various operational phase parameters software product 
enhpp model relates class mathematical models software reliability estimation prediction finite failure models measurements obtained code functional testing 
fact establishes framework enables parameters models estimated coverage measurements obtained functional testing 
assert previously reported finite failure non homogeneous poisson process models special cases enhpp model 
enhpp model important step unifying finite failure models 
offer new decomposition mean value function finite failure models enables attribute nature failure intensity software behavior failure occurrence rate fault 
failure occurrence rate fault related coverage function 
highlight fact existing finite failure models capture increasing decreasing nature failure occurrence rate fault captured enhpp model log logistic coverage function proposed 
propose methodology enhpp model reliability prediction early phases testing conventional maximum likelihood techniques unstable may exist due insufficient failure data 
discuss parameterization enhpp model role unification various black box approaches software reliability assessment 
develop expressions various operational phase parameters software release criteria various constraints reliability cost availability coverage requirements enhpp model 
validate enhpp model failure data sets center software reliability available cd rom accompanying handbook software reliability engineering lyu charles stark draper laboratory trend analyses goodness fit bias bias trend criterion littlewood 
failure data sets enhpp model provide estimates code coverage failure intensity residual number faults time failure conditional reliability time failure 
rest organized follows section presents overview commonly notions test coverage section presents existing finite failure models section establishes framework incorporate test coverage finite failure reliability growth models give enhpp model section shows previously reported finite failure models regarded special cases enhpp model different coverage functions section presents log logistic coverage function section discusses parameterization enhpp model section presents methodology early reliability prediction section develops expressions operational phase parameters enhpp model section derives expressions software availability section discusses software release criteria subject various constraints reliability availability coverage cost section presents equations estimate parameters coverage functions data section discusses various validation criterion section validates enhpp model criteria discussed section failure data sets section summarizes 
test coverage test coverage software measured terms structural data flow units covered 
various data flow coverage criteria defined horgan london ffl statement block coverage fraction total number blocks executed test cases 
basic block simply block sequence instructions instruction free branches function calls 
instructions basic block executed 
block may contain statement branching occurs statements statement may contain multiple blocks branching occurs inside statement expression may contain multiple blocks branching implied expression 
ffl branch decision coverage fraction total number branches executed test cases 
ffl coverage fraction total number uses covered test cases 
defined path program point value variable defined computation variable modified path 
ffl coverage fraction total number uses covered test cases 
path point value variable defined predicate decision modifications variable path 
coverage criterion discussed captures important aspect program structure 
general test coverage measure test covers potential fault sites software product test potential fault site defined broadly mean structurally functionally described program element integrity may require verification validation appropriately designed test 
potential fault site statement branch offer unifying definition test coverage accommodates proposed specializations concept statement block decision condition decision coverage burden specificity impose modeling process estimate predict reliability software products 
software product companion test set define test coverage ratio number potential fault sites covered test cases divided total number potential fault sites consideration 
definition block coverage test case defined block coverage number blocks covered test case otal number blocks mentioned earlier definitions test coverage offered general easily adaptable situations may benefit specialized application concept 
definition allows possibility having subset non potential fault sites defective coverage 
finite failure models class time domain gokhale ramamoorthy software reliability models assume software failures display behavior non homogeneous poisson process 
parameter stochastic process denotes failure intensity software time time dependent 
denote cumulative number faults detected time denote expectation 
failure intensity related follows ds dm dt known poisson pmf parameter pfn ng gammam 
various time domain models appeared literature describe stochastic failure process 
models differ failure intensity function 
models classified finite failure infinite failure categories 
finite failure models assume expected number faults detected infinite amount testing time finite infinite failures models assume infinite number faults detected infinite testing time 
denote expected number faults detected infinite testing time case finite failure models 
instantaneous failure intensity case finite failure models written gamma failure occurrence rate fault 
rate individual faults manifest failures testing 
quantity gammam denotes expected number faults remaining software time gamma monotonically non increasing function time gamma decrease faults detected removed nature failure intensity governed nature failure occurrence rate fault 
incorporating test coverage reliability model section develop framework incorporate test coverage finite failure models 
enhanced non homogeneous poisson process enhpp model developed states rate faults detected proportional product rate potential fault sites covered expected number remaining faults 
enhpp model basic assumptions ffl faults uniformly distributed potential fault sites ffl potential fault site covered fault site detected probability ffl repairs effected instantly new faults 
assumption case finite failure models 
ffl coverage continuous monotonic non decreasing function testing time 
analytically model expression dm dt ak dc dt defined expected number faults detected infinite testing time perfect fault detection coverage implying complete test coverage leading lim 
assumed constant value expected number faults detected time denoted akc equation intuitively simple gamma gamma expected number faults detected time equal expected total number faults product times probability detecting fault covered times fraction potential fault sites covered time substituting ak equation written ac results failure intensity function dm dt ac failure intensity function rewritten gamma gamma equation clearly shows failure intensity depends number remaining faults rate remaining potential fault sites covered divided current fractional population uncovered potential fault sites 
equations failure occurrence rate fault hazard function gamma enhpp model allows time dependent failure occurrence rate fault rate individual fault surface vary testing time 
failure occurrence rate fault hazard function constant increasing decreasing increasing decreasing function testing time 
coverage functions corresponding hazard functions discussed sequel 
addition enhpp model postulates distribution corresponding hazard function coverage function evaluated time enhpp model permits defective imperfect coverage defined inability cover potential fault sites 
potential fault sites may left uncovered due insufficient testing may simply impossible cover potential fault sites case program paths weyuker 
figures shows defective coverage function 
note lim gamma 
defective coverage function gamma non defective 
probability potential fault sites covered 
coverage defective mean value function assuming detection probability ac gamma equation failure intensity function case defective coverage dm dt gamma conditional reliability tjs enhpp model tjs gamma gamma ac gammaa gammac time failure time measured failure 
explains phenomenon reliability growth notion conditional reliability equation 
conditional reliability plotted testing time 
just point detection subsequent instantaneous repair conditional reliability jumps decays slowly detection 
lower envelope reliability interval decrease initially increase 
initially reliability decay followed reliability growth 
time reliability growth log logistic model 
phenomenon reliability growth 
existing models coverage functions section describe known forms coverage function assume event coverage measured functional testing software 
coverage functions discussed section previously reported separate finite failure models 
exponential coverage function exponential coverage function appeared literature goel go model goel strong influence software reliability modeling 
failure occurrence rate fault constant case exponential coverage function 
table gives expressions exponential coverage function 
weibull coverage function case exponential coverage function failure occurrence rate fault time independent expected number remaining faults decreases time software failure intensity decreases time 
software quality continues improve testing progresses 
real life testing scenarios software failure intensity increases initially decreases 
weibull coverage function appeared literature generalized goel go model goel proposed capture increasing decreasing nature failure intensity 
nature failure occurrence rate fault determined parameter fl increasing fl decreasing fl 
exponential coverage function special case weibull coverage function fl 
refer table expressions weibull coverage function 
table 
coverage functions 
coverage function exponential gamma age gamma weibull gamma fl fl fl gamma gamma fl fl gamma shaped gamma gt ag te gamma gt gt shaped coverage function shaped coverage function appeared literature shaped reliability growth model yamada captures software error removal phenomenon time delay actual detection fault reporting 
testing process case seen consisting phases fault detection fault isolation 
shaped coverage function increasing failure occurrence rate fault 
expressions shaped coverage function table 
log logistic coverage function coverage functions discussed section exhibit constant monotonic increasing monotonic decreasing failure occurrence rates fault 
rate individual faults manifest testing progresses exhibit increasing decreasing behavior 
increasing decreasing behavior failure occurrence rate fault captured hazard log logistic distribution 
log logistic coverage function equation 
failure intensity cumulative expected number faults hazard function equations respectively 
gamma gamma gamma failure occurrence rate fault vs time time failure occurrence rate fault exponential shaped weibull log logistic 
failure occurrence rate fault various coverage functions 
exponential shaped weibull log logistic failure intensity vs time time failure intensity 
failure intensity various coverage functions 
shows failure occurrence rate fault shows failure intensity exponential weibull shaped log logistic coverage functions 
parameters coverage functions set way failures time units 
values chosen sake illustration 
parameterization enhpp model parameters enhpp model ffl expected number faults initially residing software denoted ffl coverage function testing time 
shows different ways enhpp model parameterized context different phases software life cycle waterfall model boehm 
conventional way drive enhpp model failure data collected testing estimate parameters static complexity metrics historical data implementation phase requirements specification design verification deployment maintenance fault density poisson analysis regression tree models failure data measured test coverage estimate estimate measured test coverage testing validation phase enhpp model enhpp model enhpp model predict predict predict 
different ways parameterizing enhpp model context waterfall model 

second way estimate failure data measure coverage functional testing software product coverage measurement tool lyu 
approach estimate software metrics techniques regression tree model described previous measure coverage functional testing software product coverage measurement tool horgan mathur 
providing way combine estimates obtained software metrics coverage measurements obtained functional testing enhpp model offers framework combine important methods test coverage complexity metrics failure data predicting reliability software product shown 
early prediction software reliability traditional approach reliability prediction software reliability growth models requires estimation parameters times grouped data maximum likelihood square approaches 
commonly maximum likelihood estimates possess desirable properties minimum variance wood may exist converge reasonable value earlier testing phase due unavailability sufficient failure data 
useful able estimate reliability growth earlier testing phase adequate quantification software quality static complexity metrics test coverage failure data enhpp model 
combination approaches reliability prediction 
resources allocated release software desired time 
problem addressed morgan joe joe 
practical solution problem users warned possibility non existence maximum likelihood estimates advised estimating reliability sufficient number failure data accumulated 
xie xie methodology circumvent problem relies information testing phases similar past projects 
disadvantage approach discussed xie lies assumption current software product past project developed tested similar environments 
assumption needs verified may hold general 
enhpp model provides alternative approach early prediction software reliability require past information 
enhpp model interprets parameters finite failure models expected number faults detected infinite testing time coverage function testing time 
substituting equation number failures observed time coverage measured time obtain estimate parameter expected number faults detected infinite time 
equation number failures observed time coverage measured time parameters coverage function obtained coverage measurements various points testing phase non linear squares estimation method bates chambers 
parameters estimated predictions reliability failure intensity obtained 
predictions determining release time allocation resources ensure timely release software 
predictions operational phase enhpp model predictions operational behavior software product 
software product transitions testing phase operational phase essential provide estimates key parameters operational phase order accurate predictions various metrics interest 
fundamental difference test phase execution operational execution captured coverage fault detection probability 
compute expected number faults remaining testing phase 
section test phase parameters identified subscript operational phase parameters identified subscript instance denotes fault detection probability test phase kl denotes fault detection probability operational phase 
denote expected number faults detected testing phase ends time expected number faults remaining test phase gamma 
test coverage fault detection probability adjusted reflect operational usage software product 
modified values denoted kl respectively reflect way product field 
assuming constant fault detection probabilities testing operational phases kl kl mean value function operational phase written ml gamma kl gamma kl resulting failure intensity function operational phase gamma kl gamma kl intuitive test phase high possible operational phase kl low values 
failure rate fault hazard function operational phase hl gamma model proposed yamada yamada describing software error detection operational phase special case enhpp model failure rate fault assumed constant equivalently coverage function operational phase assumed exponential 
important note enhpp model impose restriction nature coverage function operational phase software product 
coverage function fault detection defective expected number faults remaining test phase infinite testing time denoted ah ah gamma gamma gamma af gamma gamma expected number faults detected infinite test time constant fault detection probability defect test coverage test phase 
quantity ah thought expected number bugs gray faults infinite testing time 
equations mean number faults detected time operational phase testing carried infinite time mh gamma gamma kl equation failure intensity due bugs dt gamma gamma kl quantity gamma gamma ml denotes expected number faults remain software product units testing time infinite units operational 
faults may due defective test coverage imperfect fault detection operational testing phase 
conditioning faults manifest system operation corresponding reliability function operational phase gammam gamma gammam gamma gammam predictions reliability failure intensity availability operational phase consider operational usage software effect testing process software 
equation compute software availability described sequel 
similar manner extend ideas sequential test phases making minor modifications equations 
software availability real time applications telecommunications software software availability critical system metric reliability demillo 
expression software availability operational phase follows mttf mttf mttr mttf mean time failure mttr mean time repair 
case faults occurring operation fixed expensive easily reproducible initiate effective repair 
words assume faults remaining release elusive bugs 
faults continue reside software opportunity availability growth 
system rebooted event failure 
mttr mean time reboot system 
equation mttf mttf dt gammam gamma gammam gamma gammam dt coverage function exponential gamma gammag derive closed form expression mttf follows mttf gammaa lkl gl gamma gammaa lkl lkl 
equation re written gammaa gl gammae gammaa ii 
gammaa gl gammae gammaa ii 
mttr mttf equation general may closed form solution coverage functions numerical solution may required 
software release criteria basic question testing software product decide testing 
optimal release time software important issues addressed extensively literature dalal mallows dalal mallows ross 
section derive expressions release times software subject various release criteria enhpp framework 
expressions derived section determine minimum required coverage refer product release coverage release software product explicitly computing release time 
coverage function inverted obtain release time 
various stopping criteria influence product release time product release coverage follows number remaining faults testing fraction ae expected total number faults detected minimum required coverage determined equation ae ae ae mt constant fault detection probability testing phase expected number faults detected infinite testing time assuming perfect detection test coverage 
coverage function exponential release time ae ae gamma ln gamma ae coverage function weibull release time ae ae gamma ln gamma ae fl case shaped log logistic coverage functions numerical solution required obtain release time ae failure intensity requirements testing failure intensity measured test phase reaches specified value release time determined equation yields ak 
noted failure intensity function general may monotonic refer multiple values choose value associated region decreasing failure intensity 
alternative approach obtaining require failure intensity start operational phase failure intensity test phase lower 
equation minimum required coverage gamma ak kl denotes failure intensity start operational phase 
coverage function exponential release time gamma ln gamma gamma ak kl coverage function weibull release time gamma ln gamma gamma ak kl fl numerical solution necessary obtain release time case shaped log logistic coverage functions 
reliability requirements rule test phase operational phase parameters 
required conditional reliability operational phase time product release minimum required coverage determined equation ln gamma gamma gammam gamma akl ak kl coverage function exponential release time gamma ln gamma ln gamma gamma gammam gamma akl ak kl coverage function weibull release time gamma ln gamma ln gamma gamma gammam gamma akl ak kl fl release time case shaped log logistic coverage functions obtained numerically 
cost requirements cost model go goel derive optimal release time parameters expected cost removing fault testing expected cost removing fault operation orders magnitude higher expected cost software testing unit time 
total cost tc testing time tc ml expressed tc gamma kl gamma equation obtain coverage minimizes cost testing tc equation 
kl gamma gamma 
coverage function exponential release time gamma ln gamma kl gamma gamma gamma coverage function weibull release time gamma ln gamma kl gamma gamma gamma fl basic cost model enhanced include sophisticated costs cost software failure customer operations field ehrlich penalty cost incurred due delay scheduled delivery time hou coverage cost equation realistic 
development stopping rules emphasis basic cost model illustrate utility enhpp framework determine software release times 
availability requirements assuming mttr time needed reboot availability growth basic equation needs solved release time operational availability requirement equation gamma mttr mttf exponential coverage function equation gamma mttr gammaa lkl gamma gammaa lkl lkl 
gives equation solved numerically substituting value equation determine minimum required coverage inverted give gammaa lkl gamma gammaa lkl lkl 
mttr gl gamma gamma ak release criteria particular software project depend metric great importance context 
example case safety critical applications maximizing reliability paramount importance case telecommunications software availability essential metric maximize 
estimation parameters section develop expressions estimate parameters coverage functions section section time failures data 
ft denote sequence times successive software failures 
denotes time gamma st th failure 
denote time failure joint density likelihood function sn written trivedi fs gammam sequence software failure times realizations random variables sn parameters enhpp model different coverage functions estimated maximum likelihood method 
log likelihood case exponential coverage goel gjs log log gamma gamma gamma maximizing equation respect gamma asn solving simultaneous non linear equations obtain point estimates similarly log likelihood case shaped coverage written gjs gammaa gamma log log log gamma maximizing equation respect gamma solving coupled non linear equations obtain point estimates parameters log likelihood case weibull coverage written gammaa gamma fl log log log fl gamma fl fl gamma log fixed value fl equation maximized respect give gamma fl fl asn fl fl simultaneously solving equations fixed value fl gives point estimates different values fl give family weibull coverage functions choose best 
log likelihood case log logistic coverage js gammaa sn sn log log log gamma log gamma log maximizing equation respect gives log sn gamma log gamma log log solving equations simultaneously yields point estimates parameters validation enhpp model enhpp model validated exponential weibull shaped log logistic coverage functions different data sets 
tests carried validation 
trend analysis software reliability studies usually application reliability growth models obtain various measures interest 
reliability growth analyzed trend tests 
section discuss frequently trend tests analyze reliability growth failure data collected form times 
trend tests commonly carried laprie ffl arithmetic mean test test consists computing arithmetic mean observed times increasing sequence indicates reliability growth decreasing sequence indicates reliability decay 
ffl laplace test laplace test superior optimality point view recommended assumption 
denote cumulative number faults detected period 
failure intensity determines reliability growth reliability decay stable reliability 
decreasing implies reliability growth increasing implies reliability decay constant implies stable reliability 
test procedure compute laplace factor cox lewis gamma laplace factor evaluated step step failure occurrence 
equal time occurrence th failure failure time excluded 
equation modified gamma gamma gamma gamma intuitively laplace test interpreted follows midpoint observation interval 
gamma gamma statistical center times 
assumption failure intensity decrease increase times tend occur midpoint observation interval statistical center tends smaller larger mid interval 
laplace factor interpreted follows negative values indicate decreasing failure intensity reliability growth 
positive values indicate increasing failure intensity decrease reliability 
values gamma indicate stable reliability 
trend analysis significantly help choosing appropriate coverage function sequence times applied data displaying trends accordance assumptions blindly 
coverage function analysis failure data set consideration trend displayed data lead unrealistic results trend displayed different assumed coverage function laprie 
classification failure data trend corresponding coverage functions summarized table 
table 
trend corresponding coverage functions 
trend coverage function reliability growth exponential weibull fl reliability decay followed growth log logistic shaped stable reliability homogeneous poisson process table 
conditional reliability expressions 
coverage function tjs exponential gammaa gammae gammag weibull gammaa fl gammae gammab fl shaped gammaa gs gamma gammag log logistic gammaa gamma goodness fit ability coverage function reproduce observed failure behavior software known capability examined goodness fit test 
observed failure data estimate parameters coverage functions 
estimated mean value function computed plotted observed mean value function 
error sum squares calculated evaluate goodness fit 
lower error sum squares better fit 
bias extent coverage function observed data time correctly predicts failure behavior determined bias 
focus simplest form prediction data predict current reliability software consideration 
accomplished distribution function terms conditional reliability follows js gamma gamma js gamma js gamma gamma gamma time gamma st failure time th failure 
conditional reliability expressions exponential weibull shaped log logistic coverage functions table 
objective compare relative merits prediction systems corresponding various coverage functions 
raw data available form times successive failures equivalently times occurrence failures prediction system able predict failure times observed past comprised steps abdel ffl probabilistic model specifies joint distribution subset conditional parameter unknown ff 
ffl statistical inference procedure ff uses available data realizations 
ffl prediction procedure combining steps allows probabilistic statements failure times 
needs estimator js gamma prediction system described calculate predictor js gamma 
actual failure time observed transformed probability integral transform corresponding predicted distribution js gamma ideally js gamma supposed identical true js gamma 
case uniformly distributed rosenblatt 
develop set independent tested 
intuitively coverage function optimistically biased estimated time failure higher observed coverage function pessimistically biased estimated time failure lower observed lyu 
various techniques exist analyze set independent generated 
analyze quality sequence plot abdel 
equivalent comparing empirical cumulative distribution function cdf cdf uniform distribution line unit slope origin 
distance empirical cdf uniform cdf summarized kolmogorov distance maximum absolute vertical difference 
bias trend plot detects consistency bias predictions reality 
temporal ordering taken consideration computing bias kinds departures average detected 
necessary examine trend 
techniques examine trend bias known plot described abdel 
technique gives plot similar interpretation plot 
discussed previous section sequence ideal situation look sequence independent identically distributed random variables 
sequence constant range looks regular trend difficult detect 
transformation gamma log gamma produces sequence numbers look realizations independent identically distributed unit exponential random variables 
sequence look realizations successive times homogeneous poisson process 
trend manifest nonconstant rate process 
transformed sequence normalized 
sequence predictions stage gamma step function steps size gamma points gamma drawn left interval case plot 
distance summarized kolmogorov distance large kolmogorov distance indicates nonstationarity prediction errors 
software failure data analyses validation techniques described previous section analyze failure data sets 
important note crucial parameters assumed equal unity analysis probability fault sites covered faults sites detected probability detecting fault potential fault site covered test case 
current techniques best knowledge estimate parameters failure data 
coverage measurement tools horgan hindsight necessary functional testing software estimation alternatively stated thorough knowledge software test cases necessary estimate absence information number faults estimate potential fault sites covered detected 
data set referred ds contains months defect discovery times release controller software consisting lines code installed controllers 
defects code particular release software discovered result failures reported users release possibly follow release product 
data set referred ds collected single user workstation center software reliability represents failures known due software faults 
subset data set collected center software reliability consists user perceived failures includes genuine software failures plus failures caused usability problems inadequate documentation littlewood 
data set referred ds center software reliability consists times 
data set referred ds collected desktop workstation flight dynamics system developed charles stark draper labs 
flight dynamics system includes lines fortran code operates vax vms operating system 
data set failure count form converted time failures form lyu 
data set comprises failures 
data set referred ds collected project developed charles stark draper labs 
data set consists failures 
shows results trend tests goodness fit bias bias trend ds 
addition shows coverage failure intensity testing estimated failure data conditional reliability time failure 
trend tests indicate reliability initially decays grows consistent trend shaped coverage function best predictive capability seen goodness fit plot 
shaped coverage function exhibits non stationarity prediction errors seen plot 
estimated coverage time failure failure intensity time failure residual number faults 
low failure intensity time failure consistent fact expected number faults remaining low conditional reliability time failure decays slowly goes zero time units failure 
shows results trend tests goodness fit bias bias trend ds coverage failure intensity estimated failure data testing conditional reliability time failure 
reliability growth indicated trend tests confirmed fact weibull coverage function fl fl best predictive capability seen goodness fit plot respectively 
coverage function non stationarity prediction errors seen plot 
estimated coverage time failure expected number faults remaining time failure failure intensity 
moderate coverage achieved testing result expected number faults remaining quite high 
conditional reliability decreases zero time units failure 
shows results trend tests goodness fit bias bias trend ds 
addition shows coverage failure intensity testing estimated failure data conditional reliability time failure 
trend tests indicate reliability grows arithmetic mean test arithmetic mean laplace test laplace factor time expected number faults testing field data exponential shaped weibull time estimated coverage testing plot exponential shaped weibull plot log logistic shaped weibull failure intensity time estimated failure intensity ring sting time failure conditional reliability failure 
validation results ds 
arithmetic mean test arithmetic mean laplace test time expected number faults testing field data log logistic shaped weibull time coverage estimated coverage testing plot log logistic shaped weibull plot log logistic shaped weibull time failure intensity vs time time failure conditional reliability conditional reliability failure 
validation results ds 
confirmed fact weibull coverage function fl fl decreasing failure occurrence rate fault best predictive capabilities nonstationarity prediction errors shown goodness fit plot plot respectively 
estimated coverage time failure failure intensity expected number faults remaining 
coverage achieved low absolute value failure intensity time failure quite high result conditional reliability time failure decays rapidly decreases zero time units failure 
shows results trend tests goodness fit bias bias trend ds coverage failure intensity testing estimated failure data conditional reliability time failure 
trend tests indicate reliability grows captured exponential coverage function best predictive capabilities shown goodness fit plot respectively 
weibull coverage function fl exhibits non stationarity prediction errors followed exponential coverage function indicated plot 
difference kolmogorov distance bias trend weibull coverage function exponential coverage function 
estimated coverage time failure failure intensity expected number faults remaining 
low coverage achieved testing result significant number faults remaining software conditional reliability time failure decays quite rapidly 
shows results trend tests goodness fit bias bias trend ds coverage failure intensity testing estimated failure data conditional reliability time failure 
trend tests indicate reliability decay followed reliability growth suggests shaped log logistic coverage function 
log logistic coverage function provides best capability best predictive capability shaped coverage function exhibits non stationarity predictions 
estimated coverage time failure residual number faults 
trend exhibited data sets results kolmogorov smirnov goodness fit test minimum kolmogorov distance bias bias trend tests summarized table table table table respectively 
enhanced non homogeneous poisson process enhpp software reliability model allows explicit incorporation test coverage measurements black box finite failure models 
test coverage measured functional testing arithmetic mean test arithmetic mean laplace test laplace factor time expected number faults field data log logistic exponential weibull time coverage estimated coverage testing plot log logistic shaped weibull plot log logistic shaped weibull time estimated failure intensity testing time failure conditional reliability conditional reliability failure 
validation results ds 
mean test arithmetic mean laplace test time expected number faults testing field data exponential shaped weibull time coverage estimated coverage testing plot exponential shaped weibull plot exponential shaped weibull failure intensity time estimated failure intensity testing time failure conditional reliability failure 
validation results ds 
arithmetic mean vs arithmetic mean laplace factor vs time expected number faults expected number faults vs time ds sse shaped sse log logistic field data log logistic shaped testing time estimated coverage testing plot log logistic shaped weibull plot log logistic shaped weibull testing time failure intensity testing time release conditional reliability conditional reliability failure 
validation results ds 
table 
trends data 
data set trend ds reliability decay followed growth ds reliability growth ds reliability growth ds reliability growth ds reliability decay followed growth table 
goodness fit kolmogorov smirnov test 
ds ds ds ds ds exponential shaped log logistic weibull fl gamma weibull fl gamma weibull fl gamma weibull fl gamma weibull fl gamma weibull fl gamma weibull fl gamma weibull fl gamma weibull fl gamma weibull fl gamma best fit indicated boldface table 
coverage bias kolmogorov distance 
ds ds ds ds ds exponential shaped log logistic weibull fl gamma weibull fl gamma weibull fl gamma weibull fl gamma weibull fl gamma weibull fl gamma weibull fl gamma weibull fl gamma weibull fl gamma weibull fl gamma smallest kolmogorov distance indicated boldface table 
coverage bias trend kolmogorov distance 
ds ds ds ds ds exponential shaped log logistic weibull fl gamma weibull fl gamma weibull fl gamma weibull fl gamma weibull fl gamma weibull fl gamma weibull fl gamma weibull fl gamma weibull fl gamma weibull fl gamma smallest kolmogorov distance indicated boldface software product estimated failure data collected testing 
furthermore model allows imperfect detection coverage provides new decomposition mean value function 
new decomposition mean value function allows attribute nature failure intensity function failure occurrence rate fault 
shown previously reported models instances enhpp model different coverage functions 
existing models corresponding coverage functions capture constant monotonically increasing monotonically decreasing nature failure occurrence rate fault 
log logistic coverage function proposed capture increasing decreasing nature failure occurrence rate fault may suitable application data sets exhibit initial reliability decay followed reliability growth 
methodology early reliability prediction enhpp framework 
discussion parameterization enhpp model leads unify complexity metrics failure data test coverage approaches achieve reliable software 
expressions predictions operational phase optimal software release times software availability developed enhpp model 
validated enhpp model coverage functions goodness fit bias bias trend criteria failure data sets 
abdel chan littlewood evaluation competing software reliability predictions ieee trans 
software engineering se 
bates chambers statistical models chambers hastie eds chapter nonlinear models chapman hall new york pp 

boehm 
spiral model software development enhancement acm sigsoft software engineering notes 
littlewood new ways get accurate reliability measures ieee software 
littlewood handbook software reliability engineering lyu editor chapter techniques prediction analysis recalibration mcgraw hill new york ny pp 

cohen carter flight dynamics system extensible portable workstation mission support system proc 
aiaa aas conference 
chen lyu wong empirical study correlation code coverage reliability estimation proc 
metrics berlin germany pp 

chen lyu wong incorporating code coverage reliability estimation fault tolerant software proc 
seventeenth intl 
symposium reliable distributed systems durham north carolina pp 

chen mathur rego case study investigate sensitivity reliability estimates errors operational profiles proc 
fifth international symposium software reliability engineering monterey ca 
chen mathur rego effect testing software reliability estimates obtained time domain model ieee trans 
reliability 
cox lewis statistical analysis series events london chapman hall london 
dalal mallows testing software journal american statistical association 
dalal mallows buying exact confidence annals applied probability 
demillo 
keynote address fourth bellcore kpn purdue workshop issues software reliability netherlands 
ehrlich prasanna wu determining cost test decision ieee software 

handbook software reliability engineering lyu editor chapter software reliability modeling survey mcgraw hill new york ny pp 

garg mathur code coverage software reliability proc 
sixth intl 
symposium software reliability engineering france pp 


optimal properties laplace trend test software reliability models ieee trans 
reliability 
goel 
software reliability models assumptions limitations applicability ieee trans 
software engineering se 
goel time dependent error detection rate models software reliability performance measures ieee trans 
reliability 
gokhale trivedi important milestones software reliability modeling proc 
th intl 
conference software engineering knowledge engineering lake tahoe pp 

gray 
computers done proc 
fifth symposium reliability distributed software database systems pp 

horgan london data flow coverage language proc 
symposium testing analysis verification victoria british columbia pp 

horgan london data flow coverage testing tool proc 
second symposium assessment quality software development tools new orleans louisiana pp 

horgan london lyu achieving software quality testing coverage measures ieee computer 
horgan mathur assessing testing tools research education ieee software 
horgan mathur handbook software reliability engineering lyu editor chapter software testing reliability mcgraw hill new york ny pp 

horgan mathur rego software reliability modeling technical report serc tr dept computer sciences purdue university west lafayette 
estimating parameters non homogeneous poisson process model software reliability ieee trans 
reliability 
hou kuo chang optimal release times software systems scheduled delivery time ieee trans 
software engineering 

functional program testing ieee trans 
software engineering se 

theory practice functional testing ieee software 
test coverage dependent software reliability estimation model proc 
third intl 
symposium software reliability engineering texas 
joe 
statistical inference general order statistics nonhomogeneous poisson process software reliability models ieee trans 
software engineering 
de martini de souza method software reliability analysis prediction application switching system ieee trans 
software engineering 
laprie qualitative quantitative reliability assessment ieee software 
laprie software reliability trend analysis theoretical practical considerations ieee trans 
software engineering 
laprie handbook software reliability engineering lyu editor chapter trend analysis mcgraw hill new york ny pp 


estimating defects commercial software operational ieee trans 
reliability 
morgan solving ml equations parameter poisson process models software failure data ieee trans 
reliability 

reliability models statistical methods prentice hall englewood cliffs new jersey 
lyu 
handbook software reliability engineering mcgraw hill new york 
lyu horgan london coverage analysis tool effectiveness software testing ieee trans 
reliability 
lyu computer aided software reliability estimation tool case proceedings montreal canada pp 


relationship test coverage reliability technical report cs dept computer science colorado state university colorado 
musa 
operational profiles software reliability engineering ieee software 
musa irving handbook software reliability engineering lyu editor chapter operational profile mcgraw hill new york ny pp 

lyu experiment determining software reliability model applicability proc 
sixth intl 
symposium software reliability engineering france pp 


software reliability analysis models ibm journal res 
develop 

crespo sensitivity reliability growth models operational profile errors vs testing accuracy ieee trans 
reliability 
coverage measurement experience function testing proc 
th int 
conf 
software engineering baltimore md pp 

ramamoorthy software reliability status perspectives ieee trans 
software engineering se 
ramsey basili analyzing test process structural coverage proc 
th int 
conf 
software engineering london uk pp 

weyuker selecting software test data data flow information ieee trans 
software engineering se 
rosenblatt 
remarks multivariate transformation ann 
math statist 

ross 
software reliability stopping rule problem ieee trans 
software engi neering se 
trivedi performance reliability analysis computer systems example approach sharpe software package kluwer academic publishers boston 

software reliability historical perspective ieee trans 
reliability 
trivedi 
probability statistics reliability queuing computer science applications prentice hall englewood cliffs new jersey 

reliability models testing non operational profile proc 
second bellcore purdue symposium issues software reliability estimation pp 

wong horgan london mathur effect test set size block coverage fault proc 
th intl 
symposium software reliability engineering ca pp 

wong horgan london mathur effect test set minimization fault detection effectiveness proc 
th ieee intl 
conference software engineering seattle wa pp 

wood 
predicting software reliability ieee computer 
xie hong practical method estimation software reliability growth early stage testing proc 
eighth intl 
symposium software reliability engineering nm pp 

yamada shaped reliability growth modeling software error detection ieee trans 
reliability 
yamada software reliability growth modeling models applications ieee trans 
software engineering se 

