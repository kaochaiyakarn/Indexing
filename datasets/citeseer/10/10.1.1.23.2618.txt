homology homotopy applications vol pp issn geometric perspectives concurrency theory eric goubault communicated gunnar rick jardine concurrency domain computer science deals parallel asynchronous computations strong links algebraic topology developing giving survey geometric models concurrency 
show properties want prove concurrent systems stable form deformation homotopy 
fact direction time matters allow deformation long reverse direction time 
calls new homotopy theory directed di homotopy 
develop geometric intuition theory give hints algebraic objects associate particular homology groups 
historic deeper reasons theory stage nice blend cubical categorical topological techniques 

concurrency theory deals systems computational activities called processes general performed time asynchronous manner 
introduced order increased computational power computations achieved faster essentially scientific computing concurrent transactions handled efficiently user interfaces embedded systems reacting external environment just handled amount memory needed concurrent databases 
variety applications motivated concurrent machines led different architectures 
main problem concurrency processes cooperating common goal 
cooperation implies form synchronisation information passing 
done message passing instance 
class models processes local memory accessed processes 
way communicate values processes explicitely sending values processes explicitely ask receiving values 
class models rendezvous models process algebra ccs csp action sending blocking sender receiver receives corresponding message 
symmetrically action receiving blocks receiver message sent 
simplest message passing models called synchronous message passing 
variations include non blocking send blocking receive non blocking send receive asynchronous message passing broadcasts groups processes point point communication important class concurrent architectures shared memory style 
processes local memory perform local computations received revised 
published 
mathematics subject classification key words phrases homology homotopy concurrency cubical sets di homotopy fl eric goubault 
permission copy private granted 
homology homotopy applications vol 

shared memory locations processes shared memory concurrent machine 
common memory spaces accessible 
communication processes essentially asynchronous realized writing reading values common space pictured 
processes delta delta delta pn writing reading shared locations scalar variables containing boolean integer values instance complex structures cell buffer variable consisting queue values 
concurrent reading processes problem general concurrent writing scalar variables allowed 
hardware level mean best undefined behaviour worst short circuit 
necessary protect accesses shared variables mechanism 
classical semaphores introduced dijkstra 
basically process tries write location shared memory put lock associated semaphore blocking processes try write time location 
formally action putting lock location denoted px dijkstra notation 
case complex structure read write variable processes hold lock blocking accesses processes 
case call associated semaphore semaphore 
process written needed write relinquish safely lock doing action allow process acquire lock un block 
forget actual calculations focus locking unlocking mechanism coordination processes involved 
identify shared locations associated semaphores 
urges consider minor exceptions simplified programming language processes regular expressions alphabet fp loc set locations 
locations fact semaphores defined map loc 
regular expressions formed freely alphabet fp application algebraic operators associative commutative 
associative unary operator elementary moves actions elements alphabet pa means sequences actions taken non deterministic choice 
sequences actions concatenations sequences actions actions concatenation operation sequences actions number concatenations sequences actions kleene star operation finite unbounded iteration 
looking 
want able derive properties concurrent machines simplified 
course theory sequential computation advanced properties interest sequential computation function arguments computing 
computation terminating arguments 
long take 
dealing 
novelty concur homology homotopy applications vol 

rent programming resides fact computing class functions contradict turing thesis fact coordination processes matter 
instance forgotten properly lock locations creating unexpected behaviour program 
contrary constrained coordination preventing program carry normal computation 
called situation 
property interest know concurrent system go bad state 
typically trying solve reachability problem execution system go bad states 
ask slightly subtle properties applications see example sequences accesses considered right 
primary importance able classify sequences lead homotopical arguments 
getting briefly show normally dealt 
course able prove things needs mathematical model particular notion execution sequence action concurrent system 
great variety models concurrency witnessed instance 
transition systems oldest semantic models sequential concurrent systems definition 
transition system structure ran ffl set states initial state ffl set labels ffl ran theta theta transition relation transitions systems discrete dynamical systems general transition relation ran represented directed graph actions 
instance transition system depicted gives semantics process pa process locks sequence finite number times computation unlocks order 
behaviour seen looking paths executions directed graph leftmost state initial state rightmost ones final states 
simple way look processes parallel build transition system process construct kind product graphs actions formal sense see instance states transition system tuples states individual process transitions interleavings transitions individual process 
instance graph actions parallel pa shown 
state initial state actions parallel segments label 
see state correct final state 
state consists pair endpoints digraphs representing process 
deadlock 
situation process lock waiting lock second lock waiting lock typical embrace dijkstra originally put 
ask ourself concurrent system state want artificial state lock just released lock lock just released lock looking graph sees precisely state path initial state go bad state 
try classify different access orders system 
looking paths state state directed graph see orders holds locks holds locks 
situation typical concurrent databases known name serializability 
homology homotopy applications vol 

pa pb vb va va vb simple sequential transition system 
pb pa vb va pa pb va vb transition system interpreting pa distributed database seen shared memory machine containing items processes called transactions act reading writing getting permissions appropriate functions attached semaphores 
main purposes area ensure coherence distributed database ensuring performance definition suitable policies protocols transactions perform actions 
entails course deadlock freedom transactions importance 
correctness distributed database expressed form serializability condition 
suppose transactions trying modify items path execution acquires acquires acquires acquires think database represent airplane tickets instance return ticket corresponding way ticket transactions represent remote booking action corresponding writing name ticket 
situation reserved way ticket reserved return ticket 
allowed behaviour 
equivalent purely serial schedule ones specified correct gets lot tickets 
course seen corresponding transition system complex processes running altogether state space path space enormous 
important way retract smaller transition systems shapes observe similar state path properties 
idea algebraic topology 
see sections precise 
organisation 
sections show model phenomena natural manner concept topology combinatorial algebraic topology 
give meaning terms retract topological model section combinatorial model sections 
notion deformation homotopy slightly different usual homotopy topological spaces 
direction time preserved meaning deformation done inverse direction time 
newly defined homotopy theory called directed homotopy dihomotopy 
fully reflect combinatorial model refine topological model section done section 
attack section geometric study notions deadlocks schedules serialisability conditions step ideally try find computable invariants dihomotopy 
leads section implies refinement modeling nice precise functors shown section 
try see standard homology homotopy applications vol 

results van kampen exact sequence theorems hold new theory 
hints section 
conclude perspectives section 

topological formalization follows ones essentially dates back older results 
combinatorial cubical homological calculations older center starting :10.1.1.39.1477:10.1.1.39.1477
realized relationships combinatorial topological approaches quite aware line research published enlightening 
ideas categories 
quite full flavour see start algebraic invariants introduced 
unification approaches lead concept globular briefly describe section 
interested reader find 

topological approach algebraic topological model am aware called progress graph appeared operating systems theory particular describing problem embrace multiprogramming systems 
progress graphs introduced attributed dijkstra 
fact appeared slightly earlier editorial reasons 
basic idea give description happen processes modifying shared 
shared resource see associated semaphore rules behaviour respect processes 
instance ordinary shared variable customary semaphore ensure process time write mutual exclusion 
deterministic sequential processes qn abstracted sequence locks unlocks shared objects delta delta delta respectively acquiring releasing lock semaphore natural way understand possible behaviours concurrent execution associating process coordinate line ir state system corresponds point ir ith coordinate describes state local time ith processor 
consider system finitely processes running altogether 
assume process starts local time finishes local time actions correspond sequences real numbers reflect order 
initial state final state 
example consisting processes pa gives rise dimensional progress graph 
shaded area represents states allowed execution path correspond mutual exclusion 
states constitute forbidden area 
instance look take point abscissa strictly local times marked ordinate strictly local times marked having coordinates means acquired relinquished impossible shared process time 
point ought forbidden 
execution path path initial state final state avoiding forbidden area increasing coordinate time run backwards 
call paths directed paths dipaths 
entails paths reaching states dashed square underneath forbidden region marked unsafe deemed deadlock possibly reach allowed terminal state 
similarly homology homotopy applications vol 

unsafe unreachable pa pb vb va pb pa va vb gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma example progress graph corresponding request graph reversing direction time states square forbidden region marked unreachable reached initial state 
notice terminating paths forbidden region equivalent sense characterized fact gets far resources concerned call schedule 
similarly paths forbidden region characterized fact gets 
picture recognize ingredients center main problem algebraic topology classification shapes modulo elastic deformation 
matter fact actual coordinates chosen representing times occur unimportant stretched manner properties deadlocks schedules invariant notion deformation homotopy 
particular kind homotopy center difficulties 
call subsequent directed homotopy dihomotopy sense preserve direction time 
instance homotopic shapes holes different number dihomotopy classes dipaths 
essentially dipaths dihomotopy schedules corresponding possibilities accesses resources essentially dipaths dihomotopy 
going formalization ask simpler way model properties 
method determine deadlocks situations course known long ago entirely graph theoretic known request graph 
depicts request graph corresponding progress graph 
nodes graph resources concurrent system semaphores 
directed edge resource resource process locked needs lock time 
sufficient condition systems deadlock free corresponding request graphs acyclic unfortunately necessary condition general 
instance request graph capture notion semaphores resources shared processes instance asynchronous buffers communication size written processes 
fact really calls higher dimensional versions graphs 
need resort fancy semaphores see request graphs 
note geometric condition 
homology homotopy applications vol 

pa pa va pb vb va pb vb progress graph corresponding vb pb pa va pa va pb vb progress graph corresponding request graph papadimitriou example 
consider concurrent program composed processes parallel introduced reasons papadimitriou request graph corresponding progress graph viewed different angles px py pz vx pw vz vy vw pu pv px vu pz vv vx vz py pw vy pu vw pv vu vv request graph example contains cycles proved deadlock 
progress graph seen topological space sub space ir fact 
topology necessary formally define notion path continuous executions skip point time 
need partial order allowing characterize direction time flow characterize past points states concurrent system 
minimally compatible 
able take topological limits partial order sign leading definition holes cube states fact represented plain shapes 
homology homotopy applications vol 

progress graph papadimitriou example 
definition 
po space partially ordered space pair formed topological space partial order closed closed subset theta product topology 
implies natural properties sets fy yg fy xg closed subsets need define suitable morphisms local po spaces turn give notion dipath 
definition 
po spaces 
continuous function called dimap dipath dimap topological space ir global partial order inherited ir 
write set dipaths ff fi set dipaths going ff fi 
define precisely mean deformation dipaths call directed homotopy dihomotopy 
important fix extremities dipaths 
idea contrarily classical case suffices order characterize shape choose consider loops modulo homotopy really need matter fact lots directed loops shapes fact trivial constant directed loops progress graph choose source target study dipaths points modulo dihomotopy 
definition 
dipaths initial point ff final point fi 
dihomotopy dimap theta ff fi 
write example kind properties wants check systems involves characterization dihomotopy classes dipaths serialisation property concurrent databases 
look instance 
paths execution left hole equivalent serial execution transaction transaction paths execution right hole equivalent serial execution transaction third type dipath serial dipath describes equivalent cases instance acquires acquires acquires acquires restrict connected component 
fact see looking higher order homotopies need base dipath 
homology homotopy applications vol 

sense serializability condition 
simple criterion job 
example connectivity forbidden region necessary condition system serializable 
unfortunately sufficient condition 
consider papadimitriou example 
forbidden region connected simply connected homeomorphic filled torus 
dipath going center torus deformed outer cube states 
definitely need new theory developped section particular 
divert little look geometrically model concurrency 

combinatorial approach try get back closer transition systems 
fact geometric model concurrency relate transition systems progress graphs introduced article vaughan pratt inspired lot subject instance 
essentially motivated defect duality event structures automata known mathematical models concurrency 
models introduced fix defect attributed fact semantics truly concurrent simulation interleaving form cw complex 
objects elementary shapes boundaries 
explanation inspired 
consider transition systems 
allow model concurrency interleaving semantics 
dimensional geometric objects 
important semantic properties geometric properties underlying graph transitions 
instances initial final states states cycles branchings seen introductory section 
geometric notions important validating proving correct concurrent systems 
instance branchings importance called branching time semantic equivalences bisimulation equivalence deadlocks unreachable states useful static analysis model checking instance 
fact concurrent systems interleaving naturally constructs cubical shapes 
instance squares represents asynchronous execution actions transition respectively labels 
natural idea interleaving expansive encoding fact independent 
physicist image represent ways mix number sub actions shuffles possibly infinitely chunks shown 
natural put model possible subdivisions square interior square boundary 
adding model concept interior square interior cube model concurrent processes parallel naturally leads notion precubical set 
motivate chu spaces 
homology homotopy applications vol 

possible interleavings 
precubical set representing concurrent accesses semaphore initialized 
usual way define precubical set define boundary operators instance square boundary operators respectively corresponding want encode direction time model 
dimension directed graph transitions similar higher dimensional transitions 
choice divide family boundary operators families operators 
case square family source boundary operators family target boundary operators naturally extends notion source target arcs directed graphs 
transition square independence relation transitions transition cube merely shortcut independence relations 
fact action independent action independent imply executed altogether asynchronous manner 
case instance abstraction print printers floating point units communication buffer cells semaphore initialized notations dijkstra suffices consider actions shared processes time see 
kind object synchronizes weakly great importance instance intel microprocessors 
call semaphore 
homology homotopy applications vol 

fault tolerant distributed systems properties expressed simply mathematical models concurrency asynchronous transition systems prime event structures notable exception petri nets 
drawbacks compositional clumsy analyzing concurrent programs course easily fruitfully generalized 
concurrent access processes semaphore represented boundary hypercube dimension 
means need put model transitions 
divide family boundary operators subfamilies set transitions family source boundary operators gamma giving gamma transitions family target boundary operators gamma 
instance interior cube source boundaries faces containing target boundaries faces containing 
faces respectively 
parallel faces respectively 
generally prove see boundary operators defined satisfy commutation rules ffi gamma ffi instance transition relation means source target number target source number zero 
gives classical slightly different manner notion precubical set definition 
precubical set graded set families operators mn mn gamma shared fifo stack entries allows instance implement wait free binary consensus processes simple shared variable atomic reads writes allow 
problems 
analyzing boolean telecommunication protocols 
homology homotopy applications vol 

gamma satisfying relations ffi gamma ffi course linked progress graphs just squares trivial way picture suspect 
partly developed section 
formalization article subject :10.1.1.39.1477
fact cubical see bit precubical sets quite old history 
developments algebraic topology kan 
serre thesis 
nowadays combinatorial algebraic topology uses simplicial sets union simplices dimensions glued faces 

serre thesis cubical sets preferred simplicial sets studying fibrations locally canonical projections cartesian product topological spaces simpler consider cubical sets properties respect projections define combinatorial notion dipath dihomotopy 
see section closely linked topological notions dipath dihomotopy seen section 
precubical set 
dipath sequence delta delta delta elements 
initial point final point say combinatorial dipaths go finite number transpositions consecutive actions 
fact exactly notion partial commutative monoids mazurkiewicz trace theory 
consider contiguity relation combinatorial dihomotopy follows 
delta delta delta delta delta delta non empty dipaths initial final states 
easy see say elementary contiguous exists ffl ffl exists pu pu contiguity relation equivalence relation reflexive symmetric transitive closure generated elementary contiguity 
see section close dihomotopy topological space 
give semantics concurrent systems cubical precubical sets natural explained instance starting interleaving semantics transition systems fully little language 
link formal hinted section 

interpretation terms concurrency theory reciprocally geometric shapes built glueing hypercubes dimension faces precubical set clear need number definitions lemmas 
precubical sets 
morphism precubical sets function kn ln fn ffi ff ff ffi fn simplicial construction published see instance 
terminology suggested brown 
term precubical set analogy old term set simplicial called complete sets degeneracy operators 
homology homotopy applications vol 

forms category called upsilon presheaf category follows 
free category objects morphisms generated gamma ffi ffi gamma ffi ffi ffi ffi gamma category op set contravariant functors set morphisms natural transformations isomorphic category precubical sets 
implies general theorems upsilon elementary topos 
complete complete set complete complete 
category precubical sets dimension equal seen presheaf category op set full subcategory objects 
tn respectively function upsilon respectively upsilon upsilon respectively upsilon upsilon respectively upsilon associates upsilon respectively upsilon ff gamma ff defines functor called truncation functor 
representable functor set 
define singular cubes precubical set morphism oe 
set singular cubes precubical correspondence mn unique singular cube corresponding cube mn denoted oe unique singular cube oe oe id proof 
proof goes yoneda lemma 
morphism identity functor non empty values dimension gamma 
write functor 
oe natural transformation write oe restriction proposition 
precubical set 
diagram cartesian mn mn oe tn mn mn oe tn tn oe oe xj proof 
proof suffices prove diagram category homology homotopy applications vol 

sets cocartesian mn mn oe tn mn mn oe tn colimits pushouts taken point wise functor category set 
inclusions fact bijections diagram obviously cocartesian 
complement mn mn set copies cubes id cube mn means map mn oe induces bijection complement mn complement tn implies diagram cocartesian 
lemma states truncation dimension precubical set obtained truncation dimension attaching standard cubes boundary dimensional holes 
fact precubical set direct limit diagram consisting inclusions tn gamma 
tn direct limit diagram consisting cocartesian squares 
computer scientifically means precubical set seen unlabelled transition system skeleton add independence relations 
filled squares specify actions commute run asynchronously 
exactly asynchronous automata sort models 
higher dimensions fill cubes meaning add extra ary independence relations 
fully worked form adjunctions suitable categories transition systems asynchronous automata pre cubical sets :10.1.1.23.7908
fact properly steps 
easy relate op set unlabelled transition systems take morphisms transition systems total morphisms graph morphisms unfortunately quite add right morphisms reflected geometric side added degeneracy operators going precubical cubical sets 
secondly add labels cubical sets 
easily done comma category constructions labelled cubical sets just labelling shape cubical set labelling cubical set 
fact particular case construction side result automatically know labelled cubical sets form topos 

useful generalization progress graphs limited model concurrency particular unable give semantics recursive processes unfold loops give semantics loops combinatorial model 
satisfying motivates local definition natural idea impose local partial order global topological space leading definition alike differentiable manifolds 
recap main definitions full details 
definition 
topological space 
collection pairs opens covering partially ordered called local partial order exists non empty open neighbourhood ae restrictions coincide homology homotopy applications vol 

call collection opens definition atlas analogy differentiable manifolds 
analogy differentiable manifolds notion equivalence atlases definition 
ffl local partial orders equivalent union local partial order ffl locally partially ordered space consists topological space equivalence class local partial orders exists covering equivalence class po spaces say local po space 
give simple example 
directed loop fe cg local po space suffices take fe order induced natural order fe natural order 
need define suitable morphisms local po spaces turn give notion dipath 
definition 
local po spaces 
continuous function called dimap exists subset ae defined ae gamma defined dipath dimap topological space ir global partial order inherited ir 
write set dipaths ff fi set dipaths going ff fi 
notion dihomotopy exactly po spaces dipaths initial point ff final point fi 
dihomotopy dimap theta ff fi 
write want general consider maximal dipaths respect obvious extension partial order dipaths initial point final point 
partially developed number open problems particular infinite dipaths local po spaces compact 
link new topological model combinatorial sequel taken 
standard cube ir ffi gamma continuous functions oe ffi gamma gamma ffi fact equivalence relation need transitive closure relation define 
homology homotopy applications vol 

illustration transitivity defined ffi gamma gamma gamma precubical set consider set mn theta sets mn considered topological spaces discrete topology inherits topological structure ir topological space disjoint union topology 
equivalence relation induced identities mn ffi quotient topology 
topological space called geometric realisation classical direct imitation geometric realisation functor simplicial sets topological spaces 
trouble find interpret direction time prescribed precubical sets seen definition dipaths instance terms local partial orders 
restrict non pathological situations definition 
precubical set 
say self linked cubes implies star st fy ku xg see instance 
set st ffi ffi ffi ffi dans element point carrier set exists star 
partial order difficulty lies proof transitivity see 
matter fact left right hand sides left hand side right hand side segment going front faces back faces geometric realisation non self linked precubical set defines local po space atlas fst local partial orders st 
non necessary currently worked 
homology homotopy applications vol 

room barriers non dipaths 
geometric realisation functorial refer reader 
right adjoint functor singular cube functor defined similarly simplicial sets theory 
correspondence homotopical properties topological case combinatorial cubical case looks hopefully quite nice 
implies able reason concurrent systems geometrically local po spaces instance progress graphs algebraically combinatorially cubical sets 
proven simpler case dimension 
geometric realisation combinatorial dipath induces topological dipath combinatorial dihomotopy induces topological dihomotopy inverse hope 
finite precubical set dipath dipath 
exists cubical approximation subdivision defines combinatorial dipath call homotopic 
study dihomotopy seen equivalence classes dipaths modulo dihomotopy numerous general homotopy classes dipaths 
article intuition studying dihomotopy classes dipaths fixed extremities equivalent studying homotopy classes dipaths fixed extremities 
fact true 
suffices consider example figures give semantics terms sem pa pc va pb vc vb pa va pc vc pb vb sem means semaphore 
sequel syntax toy static analyzer uses see www di ens fr goubault analyse html 
homology homotopy applications vol 

room barriers view 
pc vc prog dipaths represented pictures homotopic 
dipaths correspond real executions simple concurrent program simple place buffer shared scalar variables 
implies need new tools 
fact easy build analogue fundamental groupoid fundamental category fact 
linked construction sets constructions sokolowski see done direction see 
local po space 
define composition operation dipaths going ff fi theta fi fl ff fl definition 
ff fi fi fl 
define follows ae gamma ff fl 
commutative associative operation general classical case 
similarly classical case operation induces composition operation classes dipaths modulo dihomotopy associative 
define category ffl objects points ffl morphisms dihomotopy classes dipaths morphism dihomotopy class dipath going composition defined earlier associative operation identities dihomotopy classes constant dipaths composition morphisms 
fact construction defines functor category local po spaces category categories 
dimap local po space local po space define morphism homology homotopy applications vol 

swiss flag 
ordered holes 
ffl objects ffl morphisms 
dipath ffi 
introduced notion components study dihomotopy classes dipaths 
natural counterpart connected components usual topology relation xry exists dipath certainly equivalence relation certainly want symmetric mean study connected components complicated 
definition 

homotopy history maximal dipath ff hff xj dipath fi going ff fig 
points homotopy history equivalent hff hff ff 
components connected components classical sense equivalence classes dipaths modulo homotopy history equivalence instance complement swiss flag see components 
example gives semantics program having parallel processes pa semaphores 
region possible futures 
region go regions program deadlock access region come go accesses region come unreachable region 
region come region 
complement ordered holes see gives semantics classes modulo homotopy history equivalence 
contains initial point final point region center 
class decomposed components 
room barriers example see ex 
classes modulo homotopy history equivalence 
classes center decomposed components 
point view particular possible prove phase locking protocol regulates access fields distributed database correct find proof ideas article 
reader notice sokolowski defined quite similar point view components discriminating dipaths 
homology homotopy applications vol 

interesting situations studying bisimulation equivalence 
interested reader look papers 
problem get calculate characterize dangerous regions discuss section ideas purpose 
noted case regular expressions critical point approach obstructions dihomotopy algorithmic nature 
refer reader detection deadlocks unsafe regions classification dipaths modulo dihomotopy models 
concentrate general models section 

dihomotopy invariants 
homology algebraic topology known homotopy subtle notion 
general hard prove topological spaces equivalent elastic deformation 
homotopy groups isomorphism necessary sufficient decide homotopy equivalence fairly hard compute 
exists called homotopy invariants computed 
homotopy invariant functor topological space suitable sub category associates mathematical object equivalent isomorphic 
idea expressed better consider homological invariants compute important properties concurrent distributed systems :10.1.1.39.1477
simple starting concurrent program semantics expressed form precubical sets precubical sets sets start boundary operators going gamma boundary operators going gamma sets disjoint shape models contain directed cycle 
crucial observation 
consider diagram modules integral domain instance zz zz zz gamma :10.1.1.39.1477
gamma free module generated gamma gamma gamma gamma isomorphism induced continuous map cw complexes instance 
order remember dimension act write homology homotopy applications vol 

weak modules satisfies equalities ffi ffi ffi ffi 
instance automaton fi gamma gamma fl gamma gamma ff represented zz modules phi phi ff phi fi fl ff fi fl 
double complexes modules important objects homology fact interesting properties 
ffl ker im ffl ker im ker respectively im kernel respectively image linear application form horizontal respectively vertical homology groups enable determine branchings respectively automata 
case example find easily ff gamma gamma homology groups trivial 
generator gamma horizontal homology group dimension expresses fact non deterministic choice actions generator vertical homology group gamma shows confluence actions typical branching dimension instance faces filled 
homology functors nice computational properties colimits tensor product formula mayer vietoris long exact sequence enables compute inductively syntax parallel program done process algebra ccs 
homology homotopy applications vol 

faces faces front ii surfaces having boundaries 
total homology functor defined homology functor boundary operator gamma gives homological theory dipaths fixed extremities modulo dihomotopy see fact unfortunately invariant dipaths fixed extremities modulo homotopy 
implies instance functors separate dipaths example 
correct defect necessary start better category cubical sets 
part earlier brown higgins developed gaucher 
briefly come back piece section 
theory proposed defines homology groups dimensions 
goal able distinguish shape representing semaphore accessed processes semaphore situation 
difference semaphore semaphore processes try access noticed examining dihomotopy classes dipaths 
case necessarily mutual exclusion serializes access shared object 
second case serialization 
semaphores distinguish difference behaviour looking consecutive actions locks unlocks commute 
way looking difference behaviour consecutive actions accesses semaphore general 
order spot difference geometrically examine hypersurfaces dimension modulo dihomotopy just dipaths modulo dihomotopy 
cautious fix extremities hypersurfaces 
idea simple different forms sokolowski gaucher 
seen left hand side dimension right hand side dimension dipaths having source target consider surfaces deform paths homotopy 
say surfaces exists dihomotopy define surfaces 
surfaces hole continuously deformable cube entirely filled 
look surfaces fixed boundaries modulo total homology 
briefly get back section 

cuts previous section tried go classification problem dipaths modulo dihomotopy simpler classification problem dipaths modulo homology 
course natural idea instant snapshots homology homotopy applications vol 

dynamics dipaths observe evolution time 
fact fairly close methods fault tolerant distributed systems theory 
definition 
partially ordered set subset ae called similarly notion 
definition 
po space 

parameterized po space exists dimap ir gamma ir 

euclidian exists finite number ir 
local partial order topological space parameterized respectively euclidian parameterized po space respectively euclidian po space 
euclidian partial order fact transcription natural componentwise ordering ir progress graphs saw points xn yn ir parameterized po space dipaths dipath gamma 
theta parameterized dihomotopy parameterized dipaths ff ff ff ff connected component cut instant 
gives means study standard homotopy theory cuts determine possible obstructions dihomotopy find subset possible schedules 
unfortunately gives approximation general subset theta theta theta theta ir natural partial order 
dihomotopy classes dipaths going cuts induced height function connected 
find information dihomotopy classes dipaths consider family cuts 
fact need possible families cuts general case precubical sets 
computer scientific side means asynchronous systems global clock 

refinements framework 
categorical point view idea goes back article improved gaucher 
category category morphisms compositions dimensions coherent 
idea concurrency objects morphisms represent states hda morphisms represent possible paths executions dipaths higher dimensional morphisms represent morphisms lesser dimension particular morphisms represent paths execution 
composition laws higher dimensional morphisms characterize compositions higher dimension 
precisely introduced section 
homology homotopy applications vol 

gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma category representing transition 
pratt noticed axioms categories encode composition properties dipaths hda 
interested reader find exploitation ideas 
give formal definition category steps see instance details category pair satisfying properties 
set 
fonctions called source target respectively 
defined soon tx sy 
soon members equality defined 
sx tx sx ty sx tx 
category triple 
pairs categories 
globular axioms 
axiom 
globular category composed set family 
category 
category 
exists smallest called dimension 
dimensional element called morphism 
morphism called state morphism arrow 
morphism category call source target category categories denoted cat 
corresponding morphisms called functors 
give examples categories coming cubical sets 
instance automaton generated unique transition represented category double arrow morphism corresponding category 
generally due result 
homology homotopy applications vol 

gaucher uses category generated cubical set construct homological theories corresponding respectively branchings computer scientifically mutual exclusions 
constructed suitable nerve functors 
possible choice nice category cubical sets simplicial sets represented categories see 
ways branching confluence nerves describe cuts hda hinted section 
constructions number advantages ones ffl discriminating instance room barriers example fully described homology theories ffl concerning branching confluence homologies sensitive subdivision 
mention points categories give right structure dihomotopy sets algebraic counterpart directed theory homotopy groups 
equivalence categories category cubical categories connections compositions category categories see certainly step way 
papers brown higgins see pave way van kampen theorems directed theory probably weaker forms develop little section 

cubical sets exists types cubical sets 
important category precubical sets morphisms rigid 
mathematically easily seen morphisms respect dimension cells length dipaths number segments composed means particular orthogonal projection filled hollow square segments morphism category 
computer scientifically implies important properties natural 
introduce degeneracy operators basically need able consider transition hypercube dimension transition 
computer scientific terms degeneracy operators allow consider execution busy processors execution busy processors gamma processors busy delta delta delta doing 
dimension directly connected notion idle transition transition systems theory see :10.1.1.23.7908
definition 
cubical set precubical set ff degeneracy operators ffl kn gamma kn gamma verifying relations ffl ffl ffl ffl ff ffl ffl gamma ff ffl ff gamma id brown higgins added special degeneracy operators called connections definition 
cubical set connections functions called connections homology homotopy applications vol 

gamma ff kn gamma kn gamma ff gamma satisfying relations gamma ff gamma fi gamma fi gamma ff gamma ff ffl ffl gamma gamma ff ffl gamma ff gamma ffl ffl ffl ff gamma fi gamma fi gamma ff gamma fi ff gamma ff gamma ff ff gamma ff id ff gamma gammaff ff gamma gammaff ffl ff define cubes compositions necessary computer scientific want able consider dipaths algebraically cubes definition 
cubical set connections compositions cubical set connections operations composition dimension gamma kn defined terms equalities defined ff ae ff gamma ff ff ff ffl ae ffl ffl ffl ffl gamma ff ae gamma ff gamma ff gamma ff gamma ff gamma gamma ffl ffl gamma gamma gamma gamma gamma ffl ffl gamma gamma cubical category cubical set connections compositions gives categorical structure kn identities ffl gn gamma conditions gamma gamma gamma ffl gamma gamma gamma ffl go presentation need deeper study 
note category cubical categories shown equivalent quite see category categories concurrent processes put gaucher 
order link categorical formulation gaucher compelled restrict category local po spaces consider 
fact standard algebraic topology category topological spaces far big contains far pathological elements right object study 
general restrict ourself topological spaces homotopy type cw complex 
gaucher introduced particular kind cw complex called globular cw complex homology homotopy applications vol 

essentially cw complex cells directed 
cell homeomorphic theta gamma relations xn gamma yn gamma 
advantages category local po spaces ffl contains classical homotopy types ffl allows construct homology theories gaucher defined originally categories topological framework ffl permits define notion dihomotopy equivalence refine usual homotopy equivalence homotopy types 
hope globular cw complexes coincide notion weak dihomotopy equivalence classical case 

domain theory links theories briefly described domain theory instance developed chapter vii older topological considerations book 
studied particular kind topological spaces called compact order hausdorff topological spaces 
fact compact po spaces instance finite progress graphs 
interesting results theory adjunction compact po spaces type topological space order stably compact spaces 
write po category compact po spaces 
define stably compact spaces definition 
stably compact space set topology exists topology sur satisfying conditions ffl compact ffl exists element element 
ways compact hausdorff help topology write sk category objects stably compact spaces morphisms continuous functions 
proposition 
compact po space topology partial order 
build topological space follows ffl ffl set opens composed elements upper sets 
stably compact space 
sketch proof 
direct consequence local convexity theorem see theorem chapter vii page states sets form upper open set lower open set form base topology suffices take required definition set lower open sets 
axiom weak separation definition exactly corollary chapter vii page 
course general hausdorff 
compact po spaces naturally mapped transformation continuous maps stably compact counterparts 
defines functor ff po sk right adjoint briefly describe part talk delivered author dagstuhl seminar topology computer science 
homology homotopy applications vol 

definition 
topological space set compact opens opens adherence compact set complements elements patch topology topology generated base fu proposition 
oe stably compact space 
associate structure fl oe ffl ffl oe ffl oe compact po space 
fl define functor sk po transforming continuous functions sk po 
consider dihomotopy dipaths source target simply dimap theta ff continuous function ff ff continuous functions ff theta ff 
ff theta theta ff ff open set upper 
conclude ff classical homotopy ff ff 
proved simple obstruction criterion dihomotopy proposition 
dipaths compact po space ff ff homotopic classical sense implies 
question reciprocal 
homotopy ff ff 
condition dihomotopy 
ff natural idea characterize homotopies ff ff dipaths compact po space study group homomorphisms homotopy groups ff homotopy groups ff 
notice ff compact connected topological space 
ff connected define fundamental group ff choosing instance 
unfortunately study continous functions ff reveals lower semi continuous maps ff simply connected topological space 
means interesting group homomorphism look ff ff 
worse show deform continuous manner topology ff theta maximal continuous path topology theta going discontinuous ones topology theta entails homotopy functions ff ff theta enable see presence hole surface theta 
fact adjunction stably compact spaces compact po spaces changed equivalence categories 
way consider subcategory stably compact spaces impose morphisms perfect 
question develop practical homotopy theory stably compact spaces morphisms continuous functions perfect maps give information dihomotopy 
important question similar counterpart local po spaces 
suspect strong links grandis see instance 
homology homotopy applications vol 


desired properties continuing tour classical notions useful concurrency theory natural ask counterpart homotopy exact sequences directed case 

van kampen useful theorems classical theory van kampen theorem relates fundamental group space non necessarily disjoint union subspaces fundamental groups subspaces mild hypotheses 
interesting application modular compositional analysis concurrent systems 
theorem 
local po space local po spaces ffl ffi ffi ffl continuous paths dipaths general ffi ffi concatenations finite number dipaths anti dipaths zig zag paths 
respectively respectively natural inclusion morphisms 
diagram cartesian category categories 
proof 
consider commutative diagram category 
question complete commutative diagram homology homotopy applications vol 

looking diagram objects categories boils existence push category sets course holds 
objects define ae dimap 
gamma ffi gamma ffi form open covering ffi lebesgue number delta delta delta subdivision unit interval ff gamma ff 
ffi ff delta delta delta kg 
definition lebesgue numbers ff delta delta delta kg integer ffl ff ff ff ffl ff consider ff ff dimap ff definition composition ffl ffi ffi ffl looking exists necessarily satisfy ffl ffi ffi ffl define way check correct definition 
prove definition depend subdivision delta delta delta chosen 
delta delta delta possible choice subdivision 
consider new delta delta delta union subdivision delta delta delta result merge sort 
means ffl corresponding restriction dipath prove ffl ffl gamma gamma ffi delta delta delta ffi ffl identifying counterparts reparameterization ffl notice values ffl ffl ffi ffi ffl ffl ffl gamma gamma ffi delta delta delta ffi ffl ffl gamma ffi delta delta delta ffi ffl obviously equal ffl 
proves induction definition depend subdivision 
prove depends class theta dihomotopy linking dipath dipath ffi lebesgue number covering theta gamma ffi gamma ffi 
consider subdivisions delta delta delta delta delta delta squares theta diameter ffi subdivide dipath anti dipath dipath reverse homology homotopy applications vol 

ordering 
possible continuous paths decomposed finite number dipaths anti dipaths hypothesis 
prove follows easy induction 
ff rectangle lines ff ff call ff ff ff ffl ff ff ff ff ffl ff ff ffl ff applications ff ff ff ff 
names reparameterization applications ffl ff course id id notice ff ffl suppose ff dipath suppose ff dipath easy see ff ffi ff ff ffi ff gamma gamma gamma gamma dihomotopy ff ffi ff ff ffi ff suppose ff anti dipath gamma ff defined gamma ff ff gamma dipath ff ffi ff gamma ff ffi ff 
consider dihomotopy xt gamma gamma ffl similarly suppose ff anti dipath suppose ff dipath ff ffi gamma ff ff ffi ff 
suppose ff anti dipath ff ffi gamma ff gamma ff ffi ff 
consider ffl ffi delta delta delta ffi ffl ffl ffi delta delta delta ffi ffl ffl ffi ffl ffi delta delta delta ffi ffl ffl ffi delta delta delta ffi ffl ffi ffl prove induction ff ffl ff ff gamma ffi delta delta delta ffi ffl ffi ffl ffl ff ff ff ffi ffl ff gamma ff gamma ffi delta delta delta ffi ffl ff gamma ff anti dipath 
direct consequence 
theorem quite applications intersection general hypothesis theorem hold 
fact restricted form van kampen works better combinatorial case 
order define analogous fundamental category edge path category 
sketch construction easier case precubical sets done cubical sets 
dipath precubical set finite sequence delta delta delta dimensional empty sequence 
initial state non empty dipath final state 
homology homotopy applications vol 

composition concatenation dipaths follows 
delta delta delta delta delta delta non empty dipaths initial state final state delta delta delta delta delta delta dipath 
composition associative neutral element empty dipath 
denote contiguity class dipath concatenation induces operation denoted 
define edge path category follows 
objects elements morphisms ff fi contiguity classes dipaths ff fi empty dipath 
composition morphisms write ffi 
forms category 
morphism precubical sets 
easy see maps dipaths dipaths contiguous dipaths contiguous dipaths similarly 
induces transformation transforming objects objects morphisms respecting composition 
functor category precubical sets category categories 
proposition 
finite precubical set union precubical sets 
call respectively respectively natural inclusion morphisms 
diagram cartesian 
proof 
simpler lebesgue number argument replaced finiteness argument un directed paths compositions finite number di anti di paths part 

higher order homotopies going define inductively notion higher order dihomotopy 
call dihomotopy order dipath 
dihomotopy order dihomotopy dipaths ends 
suppose defined order order gamma fixed gathered set pn definition 
dihomotopy order order equal ends dimap thetai theta 
source target set noted pn 
define compositions sets pn follows gamma pn theta pn pn defined gamma delta delta delta xn ae xn delta delta delta xn gamma xn xn delta delta delta xn gamma xn gamma naturally gives groupoids higher dimension modulo dimension 
course take base path look loops base paths group abelian groups 
homology homotopy applications vol 

question solve exact sequences homotopy exact sequence pair 
interesting spectral sequences 
come closed model structure 

dihomotopy theory applications concurrency gradually developed left tried show text 
consider potential applications 
fact certain number geometric theories apply computation models 
instance algebraic topological considerations linear logics see instance modal logics related subject 
generally linear logic strong geometric flavour understood logic dealing resources believe fruitful cross bring new results years come 
aitchison geometry oriented cubes macquarie mathematics reports 
arnold syst emes de transitions des processus masson 
basu geometry sequential computation simplicial geometry interaction technical report technische universitaet muenchen institut fuer informatik 
basu geometry sequential computation ii simplicial geometry interaction technical report technische universitaet muenchen institut fuer informatik 
categories asynchronous systems ph thesis university sussex 
brown higgins colimit theorems relative homotopy groups journal pure applied algebra pp 

brown higgins equivalence groupoids crossed complexes cahiers topologie eom 
diff erentielle pp 

brown higgins algebra cubes journal pure applied algebra pp 

coffman shoshani system deadlocks computing surveys pp 

dijkstra cooperating sequential processes academic press 
brown steiner multiple categories equivalence globular cubical approach technical report arxiv math ct 
loops deadlocks mathematical structures computer science 
goubault detecting deadlocks concurrent systems proceedings th international conference concurrency theory available www dmi ens fr goubault 
goubault algebraic topology concurrency submitted theoretical computer science technical report aalborg university 
homology homotopy applications vol 

sokolowski infinitely running processes loops geometric view point electronic notes theoretical computer science proceedings 
freyd scedrov categories allegories volume mathematical library north holland 
gabriel calculus fractions homotopy ergebnisse der mathematik und ihrer springer verlag gaucher globular homology higher dimensional automata preprint available math ct 
gaucher combinatorics branchings higher dimensional automata preprint available math ct 
gaucher concurrency algebraic topology electronic notes computer science 
gaucher homotopy invariants higher dimensional categories concurrency computer science mathematical structures computer science 
gaucher goubault topological deformation higher dimensional automata technical report arxiv math 
girard linear logic syntax advances linear logic cambridge university press london mathematical society lecture notes series goubault domains higher dimensional automata proc :10.1.1.39.1477
concur 
goubault geometry concurrency ph thesis ecole normale sup erieure available www dmi ens fr goubault 
goubault schedulers interpretations hda proc 
pepm 
goubault geometry concurrency users guide mathematical structures computer science 
goubault cubical sets generalized transition systems technical report submitted available www di ens fr goubault :10.1.1.23.7908
goubault jensen homology higher dimensional automata proc :10.1.1.39.1477
concur 
goubault goubault order theoretic geometric combinatorial models intuitionistic proofs 
grandis intrinsic homotopy theory simplicial complexes applications image analysis technical report appl 
categ 
structures appear 
preliminary version dip 
mat 
univ genova preprint 
arxiv org abs math 
homotopy concurrency bulletin eatcs pp 

herlihy rajsbaum primer algebraic topology distributed computing lecture notes computer science 
hoare communicating sequential processes prentice hall 
johnstone stone spaces cambridge university press 
topology cw complexes van nostrand reinhold 
lynch distributed algorithms morgan kaufmann 
homology homotopy applications vol 

mac lane categories working mathematician springer verlag 
maclane moerdijk sheaves geometry logic springer verlag 
may simplicial objects algebraic topology van nostrand 
mazurkiewicz basic notions trace theory lecture notes rex summer school temporal logic 
mc cleary user guide spectral sequences publish perish mathematics lecture series 
homology proof nets archive mathematical logic pp 

volume multiplicative formulas 
girard lafont regnier editors advances linear logic cambridge university press pp 
proceedings workshop linear logic ithaca new york june 
milner calculus communicating system number lncs springer verlag 
milner communication concurrency prentice hall 
topology order van nostrand princeton 
penrose techniques differential topology relativity conference board mathematical sciences regional conference series applied ma siam philadelphia usa 
pratt modeling concurrency geometry proc 
th acm symposium principles programming languages 
pratt chu spaces automata quantum aspects technical report stanford university 
classification dipaths geometric models concurrency mathematical structures computer science 
topological state space problem technical report dept mathematics aalborg university aalborg denmark 
serre ere des es 
applications ph thesis ecole normale sup erieure 
shields concurrent machines computer journal 
shoshani coffman sequencing tasks multiprocess systems avoid deadlocks conference record eleventh annual symposium switching automata theory ieee santa monica california pp 

sokolowski homotopy concurrent processes technical report institute computer science division 
sokolowski investigation concurrent processes means homotopy functors technical report institute computer science division 
sokolowski point glueing cpo technical report institute computer science division 
sokolowski classifying holes arbitrary dimensions partially ordered cubes technical report personal communication 
algebraic topology mcgraw hill 
steiner tensor products infinity categories university glasgow 
street algebra oriented simplexes pure appl 
algebra pp 

winskel nielsen models concurrency oxford university press pp 

homology homotopy applications vol 

eric goubault eric goubault cea fr sla cea gif sur france 
