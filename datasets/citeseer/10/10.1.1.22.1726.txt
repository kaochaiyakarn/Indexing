axiomatization frequent sets jan paredaens universiteit antwerpen departement wiskunde informatica belgium 
uia ua ac 
data mining association rules popular 
algorithms literature nding association rules start searching frequent itemsets 
itemset mining algorithms typically interleave brute force counting frequencies meta phase pruning parts search space 
knowledge acquired counting phases represented frequent set expressions 
frequent set expression pair containing itemset frequency indicating frequency itemset greater equal frequency 
system frequent sets collection expressions 
give axiomatization systems 
axiomatization characterizes complete systems 
system complete explicitly contains information logically implies 
system frequent sets unique completion 
completion system represents knowledge maximally derived meta phase 
association rules studied topics data mining 
applications 
algorithms proposed nd association rules :10.1.1.40.6757
start formal de nition association rule mining problem stated fi set symbols called items 
set transactions transaction set items unique transaction id say transaction contains set items fraction transactions containing called frequency association rule implication form 
rule holds transaction set con dence fraction transactions containing contain rule support transaction set fraction transactions contain algorithms start searching itemsets contained fraction transactions 
optimize search frequent itemsets algorithms monotonicity principle research assistant fund scienti research flanders belgium 
frequency smaller frequency information prune parts search space priori exploit monotonicity possible apriori algorithm starts counting single itemsets :10.1.1.40.6757
second step itemsets fi counted fi fi frequent 
itemsets discarded 
third step algorithm proceeds itemsets contain frequent itemsets 
iteration continues itemsets frequent left 
search frequent itemsets basically interleaving counting phase meta phase 
counting phase frequencies predetermined itemsets called candidates counted 
results counting phase evaluated 
monotonicity principle itemsets priori excluded 
monotonicity frequency commonly knowledge previous discusses general case rule complete sense tells derive set frequencies 
consider notion system frequent sets system frequent sets contains possibly incomplete information frequency itemset 
example ab system frequent sets 
system frequent sets represents partial information obtained counting phases 
system expresses knowledge itemset frequency 
system improved 
conclude ab holds overlap fraction transactions containing transactions containing improve holds 
system called incomplete 
system improved complete 
completion system represents maximal information assumed meta phase 
give rules characterize complete systems frequent sets system complete satis es 
show small modi cation axiomatization nite logical implication inferred axioms nite number times 
intermediate stage proofs introduce rare sets rare set expression pk expresses pk fraction transactions contain item structure follows section related discussed 
section formally de ne system frequent sets 
section axiomatization complete systems frequent sets 
section discusses inference complete systems axioms 
section summarizes concludes 
proofs sketched 
full proofs 
acknowledgment prof dirk van gucht prof ed robertson indiana university prof jef belgium preliminary thoughts re ections topic 
reviewers useful comments pointing links probabilistic logic 
related arti cial intelligence literature probabilistic logic studied intensively 
link frequency itemset seen probability randomly chosen transaction transaction database satis es consider transaction database underlying probability structure 
nilsson introduced probabilistic logic problem nite set logical sentences sm de ned set fx xn boolean variables usual boolean operators probabilities pm exists probability distribution possible truth assignments probability true exactly georgakopoulos prove problem suggest name probabilistic satis ability problem np complete 
problem apply framework 
framework system frequent sets satis ed 
system gives lower bounds frequencies system satis ed transaction database transaction contains item 
interesting problem stated nilsson probabilistic entailment set logical sentences sm probabilities pm extra logical sentence sm target 
asked nd best possible upper lower bounds probability sm true sm satis ed respective probabilities pm interval de ned lower upper bounds forms called tight entailment sm known probabilistic entailment solved nondeterministically polynomial time linear programming techniques 
framework complete system frequent sets system contains tight frequent expressions bounds frequent expressions complete system best possible view system corresponds notion tight entailment 
comprehensive overview probabilistic logic entailment various extensions refer 
nilsson probabilistic logic entailment extended various ways including assigning intervals logical expressions exact probability values considering conditional probabilities 
fagin study extension 
basic weight formula expression integers propositional formulas meaning sum times weight greater equal weight formula boolean combination basic weight formulas 
semantics introduced underlying probability space 
weight formula corresponds probability true 
main contribution viewpoint description sound complete axiomatization probabilistic logic 
logical framework sense embedded logic 
introduce propositional symbol item frequent set expression pk translated pk results obtained implication problem framework guaranteed decidable 
satis ability implication problem npcomplete fagin framework 
approach di ers fagin approach sense consider situations expressions probability 
axioms probabilistic logic introduced 
authors unable proof axioms complete 
sub language type problems proof set axioms complete 
sub language suciently powerful express frequent itemset expressions 
side spectrum related context data mining 
attempts proof completeness results itemsets area 
attempt described shortly 
presence constraints allowable itemsets authors introduce notion ccc optimality ccc optimality intuitively understood algorithm generates tests itemsets frequent current knowledge 
approach general restrict particular algorithm 
attempt known context data mining studies derive arbitrary set frequent itemsets 
add emphasis introducing logical framework frequent itemsets introducing new probabilistic logic algorithms 
complete system frequent sets formally de ne system frequent sets 
de ne means system complete 
represent database transactions matrix 
columns matrix represent items rows represent transactions 
matrix contains entry transaction contains item entry zero 
matrix columns represent items say matrix running example regularly refer items capital letters 
notation get de nition de nition 
fi set items matrix frequency itemset denoted freq fraction rows column ccc optimality stands constraint checking counting optimality example 
fig 
matrix frequencies 
frequency def rows column def note matrix identical rows 
matrix freq freq freq ab freq def satis es ab def satisfy abc def fig 

matrix frequent set expressions introduce logical implication completeness system frequent sets 
de nition 
fi set items 
frequent set expression expression pk pk rational pk 
matrix satis es pk freq pk itemset frequency pk system frequent sets collection pk frequent set expressions exactly expression matrix satis es system pk satis es pk example 
fig 
matrix satis es frequency bigger 
matrix satisfy frequency lower 
de nition 
fi set items system frequent sets logically implies pk denoted pk matrix satis es satis es pk system logically implies system denoted logically implied def denotes set fd fg bc abc ab ac abc ab ac bc fig 

proof matrices system frequent sets system frequent sets pk complete logically implied pk holds 
example 
fa fg 
consider system pk pa pb pab pk itemsets matrix fig 
satis es complete matrix satisfying def frequency de contains de 
furthermore logically imply ef satis es satisfy ef 
consider system fa cg ab ac bc abc 
system complete 
prove showing subset exists matrix rk satis es freq rk exactly pk matrices prove improve pk larger 
proof matrices important proof axiomatization section 
fig 
di erent 
system complete improve system 
suppose system pk complete frequent set expression logically implied pk improve replacing pk proposition says exists unique system logically implied complete 
proposition 
fi set items pk system frequent sets 
exists unique system completion complete system 
proof 
mk fpk pk mk contains supremum 
easily seen follows suppose matrix satis es frequency satis es pk mk pk holds sup mk holds 
matrix satisfying satis es sup mk sup mk 
straightforward system supp mk unique completion example 
fa cg 
system ab ac bc abc unique completion system ab ac bc abc 
bc implied second system overlap rows having rows having system complete necessary exists matrix itemsets frequency exactly frequency system 
consider example system ab ac bc abc 
system complete 
nd matrix conditions simultaneously true freq freq freq freq ab freq ac freq bc due freq freq freq ab row row having violates respectively freq ac freq bc 
axiomatizations give axiomatization frequent sets 
axiomatization context set rules satis ed system complete 
order simplify notation rst introduce rare sets 
section show build nite proofs logical implications axioms rules inference 
rare sets de nition 
fi set items matrix itemset denoted rare fraction rows zero column rare set expression expression pk pk rational pk 
matrix satis es pk rare pk itemset pk system rare sets collection pk rare set expressions exactly expression matrix satis es system pk satis es pk system rare sets logically implies denoted matrix satis es satis es system logically implies system denoted logically implied system rare sets pk complete logically implied pk holds 
example 
fig 
matrix satis es smaller 
matrix satisfy greater 
fa bg 
system fab complete 
unique completion system fab 
proposition connects rare sets frequent sets 
connection straightforward 
set rows zero column exactly complement set rows having ones columns 
second part proposition shows axiomatization rare sets automatically yields axiomatization frequent sets 
proposition 
fi set items 
matrix subset holds freq rare 
satis es pk satis es pk subsection prove axiomatization complete systems rare sets 
axiomatization easily derive axiomatization frequent sets proposition 
axiomatization rare sets give axiomatization rst introduce notation bags 
de nition 
bag set total function bag say appears times bags de ne bag union notation follows 
fs ff bag appears times set bag cardinality denoted jkj 
bag subsets set denotes bag degree element denoted deg number times appears example 
ff fa bg fb cg fb dg gg bag subsets fa dg 
ff gg 
deg 
jkj 
rules form axiomatization complete systems rare sets sense complete systems exactly ones satisfy rules 
pk appear rules indicate values system set pk system 
pk pk bag subsets pk pm min deg theorem important results 
lemma proved proof theorem 
lemma 
set indices rational numbers ak non empty consider system inequalities ak system solution rational bags subsets holds ak theorem 
pk system rare sets statements equivalent complete system 
satis es 
proof 
trivial 
bag subsets itemset pk complete system 
arbitrary matrix satis es bag contains exactly rows exists 
holds jd jrj pl exists 
appears min deg sets jd conclude matrix satisfying rare jd jrj pm 
show pk satis es itemset nd proof matrix rk rk satis es rare rk pk specify rk giving frequency possible row denotes fraction rows zero column 
show exists matrix rk rows zero zero column jzj 
interpreted pk similarities traditional armstrong relations functional dependency theory expressed system inequalities fractions idem frequencies add pk exactly pk pl sets pl rare rk solution system describes matrix satis es needs little explanation 
arbitrary itemset rare rk rare rk due construction 
satis es pl pk suces demand rare rk pl system solution simpler system solution pk pl pk ok choose fag pk pk ok pk ok choose pl pk pk ok pl pk 
lemma system rational solution bags subsets pk pn holds 
ff gg 
pl pk min ff gg ff gg 
ff gg ff gg pl mpk pl pn pk mpk pk pk pn holds 
example 
system ab ac bc abc complete violates 
system ab ac bc abc complete example ab violate 
system ab ac bc abc complete ac violate 
system ab ac bc abc complete satis es 
system unique completion systems example 
axiomatization frequent sets proposition easily derive axiomatization frequent sets 
pk pk bag subsets pk pm min deg theorem 
pk system frequent sets statements equivalent complete system 
satis es 
inference rest text continue working rare sets 
results obtained rare sets just axiomatization carried frequent sets 
previous section introduced proved axiomatization complete systems rare frequent sets 
problem axiomatization 
states property checked bags subsets number bags nite 
section show suces check nite number bags minimal multi covers 
show number minimal multi covers set nite computed 
look problem incomplete system compute completion axioms 
show possible 
inference rules adjust values system detect inconsistency rules improve system 
rules applied systematic way method leads complete system nite number steps 
completion system frequent sets computed obvious way linear programming 
look proof theorem compute completion system inequalities applying linear programming 
sets minimize pk respect system inequalities expressing frequencies obey system rare sets 
system inequalities polynomial size number frequent itemsets algorithm polynomial size system 
association rule mining common number itemsets large system inequalities practical situations certainly prohibitive large 
solving linear programming problem theoretical solution practical 
mentioned axiomatization advantage provides proofs inference stopped termination partial solution provided 
interpreted pk minimal multi covers de nition 
cover set bag subsets deg bag subsets set multi cover exists integer cover cover minimal decomposed respectively covers 
example 
fa dg 
ff ab bc cd ad abcd gg cover minimal decomposed minimal multi covers ff ab bc cd ad gg ff abcd gg 
new rule replaces states necessary check bags need check minimal multi covers 
gives minimal cover pk pm theorem 
system rare sets statements equivalent 
satis es 

satis es 
sketch proof 
direction implies trivial cover bag subsets minimal degree 
suppose system satis es violates 
exists set bag subsets pk pl min deg 
starting bag construct minimal multi cover violates 
show construction example 
suppose ff ab bc abc gg 
element appears times rst construct multi cover removing elements appear 
example appears times elements appear times 
remove sets resulting ff bc abc gg 
sum smaller operation satis es 
multi cover split di erent minimal ff bc gg ff abc gg 
pl pl pl pl smaller pl proposition 
nite set 
number minimal multi covers nite computable 
proof 
computing completion system inference rules prove applying rules compute completion system rare sets 
applying example rule means see situation system states pk pk pk pk improve system replacing pk pk clear applied create situations applied 
top operation sense values smaller sets adjusted values bigger sets 
system easily reach xpoint rule going top rst try improve frequencies biggest itemsets continuing smaller ones 
bottom operation values smaller sets adjust values bigger sets 
system reach xpoint rule applying rule bottom 
trivial algorithm compute completion system apply keep applying xpoint reached 
clearly limit approach yields complete system clear xpoint reached nite number steps 
examples situations nite loops possible 
fig 
example 
completion rst system clearly values equal zero matrix satisfying system rows zero ab zero bc zeros matrix 
keep applying rules fig 
reach xpoint step value abc 
problem show apply rules systematic way reach xpoint nite number steps 
systematic approach illustrated fig 

rst apply top reach xpoint apply bottom reach xpoint 
general systematic approach written fig 

prove system meta steps needed reach completion 
de nition 
set items pk system rare sets projection denoted proj system pk lemma 
set items pk system rare sets satis es proj proj theorem 
algorithm fig 
computes completion system rare sets sketch proof 
fa cg system rare sets top step resulting system satis es 
apply adjust value satis es application system pa complete improve abc ab ac bc abc ab ac bc abc ab ac bc abc ab ac bc abc ab ac bc abc ab ac bc 
fig 

random application rules lead nite loops abc ab ac bc abc ab ac bc abc ab ac bc abc ab ac bc abc ab ac bc abc ab ac bc fig 

systematic application rules avoids nite computations proj fag proj fag 
argument apply adjust value ac 
step pa pb ac pac satis es 
system satis es improve just showed improve system proj fa cg closed improve ac 
way iteratively go nally conclude complete full bottom step 
summary axiomatization complete systems frequent sets 
intermediate stage proofs introduced notion system rare sets 
axiomatization rare sets contained rules 
rules easily derive axiomatization frequent sets 
rule yields condition needs checked nite number bags replaced 
showed completion close topdown downto topdown itemsets cardinality bottomup pk mink pl bottomup itemsets cardinality pk min minimal cover fig 

algorithm close nding completion system pk fi ing computed applying inference rules 
rules applied rst top bottom completion reached nite number steps 
want study axiomatization systems set frequency 
preliminary results sparse systems refer 
interesting topic expanding axiomatization include association rules con dences 
agrawal swami 
mining association rules sets items large databases 
proc 
acm sigmod agrawal srikant :10.1.1.40.6757
fast algorithms mining association rules 
proc 
vldb paredaens 
theoretical framework reasoning frequent itemsets 
technical report universiteit antwerpen belgium win www uia ac download axiom ps june 
fagin halpern megiddo 
logic reasoning probabilities 
information computation 
fagin vardi 
armstrong databases functional inclusion dependencies 
ipl 
frisch haddawy 
anytime deduction probabilistic logic 
arti cial intelligence 
georgakopoulos papadimitriou 
probabilistic satis ability 
journal complexity 
han pei yin 
mining frequent patterns candidate generation 
proc 
acm sigmod hansen jaumard 
de ao 
models algorithms probabilistic bayesian logic 
proc 
ijcai hansen jaumard 
probabilistic satis ability 
les cahiers du ng han pang 
optimization constrained frequent set queries variable constraints 
proc 
acm sigmod nilsson 
probabilistic logic 
arti cial intelligence 
