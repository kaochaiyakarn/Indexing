generalized clustering algorithm peer peer networks stefano basagni chlamtac andr erik jonsson school engineering computer science university texas dallas mail chlamtac edu greedy approach investigated eciently clustering nodes mobile wireless network peer peer non cellular organization 
considered algorithm generalization di erent solutions proposed problem far literature 
de ne worst case performance ratio algorithm way re ects algorithm performs compared theoretical optimum 
show nontrivially bounded compactly expressed network parameter 
prove algorithm optimal sense outperformed polynomial time algorithm provided np simulation results evaluate stability issues related clustering peer peer networks 
peer peer networks wireless radio networks consist set geographically dispersed nodes stationary mobile nodes communicate directly wired network base stations cellular organization 
networks play important role situations xed infrastructure available reasonable build 
include tactical battle eld communications mobile computing areas infrastructure ad hoc networking law enforcement disaster recovery administration control large events sports entertainment important organizational problems peer peer networks reduction routing control information overheads required autonomous organization mechanism face node mobility 
research eld shows solution problem obtained organization nodes groups clusters see 
important design problem peer peer networks ecient clustering mobile nodes 
network topology may change rapidly important clusters formed quickly 
address clustering problem peer peer networks 
methods far obtaining physical clustering networks implement type greedy algorithm nding set nodes act clusterheads 
clusterheads selected clusters de ned associating non clusterhead node instance closest clusterhead 
achieve easy organization desirable case closest clusterhead reachable single hop clusterheads form dominating set graph non clusterhead node clusterhead neighbor 
hand desirable network covered scattered set clusterheads group small part network 
captured requirement clusterheads form independent set nodes graph require clusterheads neighbors 
existing solutions implement simple greedy algorithms nding dominating independent set clusterheads 
largest degree rst approach gerla node maximum degree maximum number neighbors selected clusterhead removed graph neighbors 
procedure repeated remaining graph nodes removed 
lowest id rst method ephremides gerla node ids choose clusterheads 
easily de ne similar greedy clusterhead selection algorithms parameters nodes 
usually algorithms remain purely heuristic level solution performance guarantee proven 
common model algorithms greedy search maximum weight independent set mwis graph nonnegative weights associated nodes 
weights course degree node largest degree rst approach nodes ids lowest id rst approach 
de nition natural model peer peer networks section generalize existing solutions associating node generic nonnegative weight section 
resulting generalized clustering algorithm show possible prove nontrivial performance guarantee 
guarantee course applies special versions mentioned 
speci cally section de ne quality clustering algorithm measure algorithm performs compared theoretical optimum 
show nontrivial lower bound depends global network parameter 
furthermore section show despite extreme simplicity greedy algorithm essentially best np 
precisely show class graphs maximum cardinality independent set mis problem np hard np hard outperform greedy mwis search de ned sense 
note associating generic weights nodes peer peer network obtain simple uni cation existing solutions common framework allows prove theoretical properties 
proposed generalized algorithm possible express preferences choice weights 
mechanism available previously proposed solutions practically choose clusterheads depending motion rate node power degree combination parameters 
example application section demonstrate simulations weights re ect speed nodes proposed algorithm achieves substantial improvement lowest id rst approach 
preliminaries natural model peer peer network undirected graph jvj set radio nodes edge fu vg mutually receive transmission 
case say neighbors 
due mobility graph change time 
set neighbors node denoted cardinality said degree degree 
entire network de ned maximum degrees graph 
maxf vg 
consider networks edges 

node network assigned unique identi er id denoted numbers simplicity node identi ed id denoted consider weighted networks weight real number assigned node network 
weights collected weight vector hw example topology simple peer peer network shown 
graph independent set set nodes joined edge known computationally dicult decide graph cardinality decision problem independent set input graph positive integer jvj 
question contain independent set size 
np complete 
search maximum cardinality maximum independent set mis np hard 
clear theory npcompleteness reader referred classical book garey johnson 
case node weighted graphs maximum weight independent set peer peer network nodes weights 
mwis problem consists nding independent set nodes sum weights big possible 
clear mis problem special case mwis problem np hard 
dominating set ds nodes graph set fro fu vg search ds general graphs np hard problem 
clustering algorithm mentioned existing practical clusterhead selection algorithms greedy search maximum weight independent set mwis network see 
di er terms basis greedy choice largest degree lowest id provide common analysis algorithms examine natural generalization 
proposed algorithm similar larger degree rst lowest id rst approaches degree node id greedy choice acts basis arbitrary nonnegative weights associated nodes 
ties broken arbitrarily nodes ids choose take node lowest id choice appropriate weights express completely general way preference node clusterhead 
easy see largest degree rst lowest id rst approaches special cases algorithm 
common generalization previous clusterhead selection algorithms call proposed algorithm generalized clustering algorithm gca de ned follows 
procedure gca input network weights output fc clustering de ne respectively 
pick node lowest id maximum weight fvg evident set nodes selected iteration main loop dominating independent set far cardinality nal value application procedure network illustrated squared nodes clusterheads 
clustering obtained applying gca network 
performance guarantee section investigates question possible prove nontrivial performance guarantee proposed algorithm 
propose measure quality algorithm way 
clusterhead selection algorithm run network graph jvj node weighting 
terms network graph interchangeably 
denote weight obtained independent set 
weight mwis ideal solution 
ratio characterizes algorithm performs network weighting compared ideal optimum 
result exceed maximum exceed generally higher better 
ratio network depends course weighting hand 
provide performance guarantee network value guaranteed running algorithm de ne worst case performance ratio algorithm network minimum possible choices weighting 
number possible weight vectors nite expressed mum operator inf assigns unique number algorithm network 
bound performance guarantee provided algorithm 
remaining part section show possible bound worst case performance ratio gca network parameter providing nontrivial performance guarantee 
need introduce concepts 
network node denote neighborhood graph induced subgraph spanned neighbors 
words obtained nodes deleted neighbors 
neighborhood graph node network 
independence number called stability number network maximum size independent set called stable set special case obtained setting weight 
introduce local independence number max local independence number tells maximum possible size independent set occurs neighborhood node 
obvious larger size entire neighborhood 
local independence number possible state compact result worst case performance ratio gca 
theorem network nonnegative weighting worst case performance ratio gca bounded gca 
worth noticing 
holds obtained direct corollary gca notice nontrivial bounds hold arbitrary weighting 
independent weights 
proof theorem 
results analysis general independence systems 
independence system consists nite set base set family subsets family assumed closed subsets 
implies independent sets nodes graph clearly satisfy property subset independent set independent special independence system base set greedy heuristic nding heavy independent set general independence system nonnegative weights elements works follows order elements base set nondecreasing weight ties broken arbitrarily 
ordering 
find set iteratively algorithm fs fs result stated follows 
independent set greedy algorithm maximum weight independent set optimum 
independence system indicates weight independent set rank ratio independence system 
rank ratio de ned upper rank lower rank subsets base set non empty upper rank ur maximum size independent set occurs lower rank lr size smallest independent set extended 
words set smallest dominating independent set rank ratio de ned min lr ur minimum taken nonempty subsets compute rank ratio special independence system formed family independent sets nodes graph 
non empty subset nodes 
maximum size independent set minimum size dominating independent set de ne function fvg bna bna bna having neighbor fv independent set contradicting maximality 
bna jaj bna bna aj maximal independent set bna aj hold extended violating independence 
independent set aj yielding bna aj ja bj jbj ja bj max bna ja bj jbj ja bj max jbj lr ur jbj jaj yields min lr ur implies gca proves theorem 
optimality show gca optimal sense de ned best possible heuristics np 
precise need de ne method comparing algorithms algorithm refer algorithm nds dominating independent set 
de nition class graphs 
algorithm outperforms algorithm class holds furthermore inequality strict 
informally speaking algorithm outperforms result worse strictly better result nd optimum 
course cases nd optimum inequality strict cases room improvement 
state meant optimality gca heuristics 
theorem class graphs np hard nd maximum cardinality independent set 
assuming np polynomial time algorithm outperform gca sense de nition 
proof 
assume polynomial time algorithm outperforms gca consider algorithm input graph jvj de nition notation characteristic vector set jaj coordinates corresponding elements set remaining jaj set 
algorithm step 
set hn ni 
step 
run gca weighting nd dominating independent set 
obtained independent set 
step 
run algorithm weighting obtained independent set 
jbj jaj 
step 
set hn ni go step 
claim algorithm works polynomial time halts value set maximum cardinality independent set mis prove rst second statement assuming algorithm halts nite number steps 
value previous value execution step value hn ni weighting element dominating independent set weight nodes weight observe weighting directly implies special properties sets inequality hold jxj jx 
ii gca weighting return result 
execution step algorithm returns set assumption outperforms gca ii hold 
case implies jb jb contradicts assumption execution step 
hold 
mwis return set strictly larger weight mis halts jb jb implying mis 
remains show halts polynomial number steps 
consequence fact directly implied considerations execution step obtain independent set strictly larger weight previous 
node weight weight integer step executed polynomially times 
assumption algorithm runs polynomial time parts algorithm clearly run polynomial time algorithm halts polynomial number steps 
shown assumption exists polynomial time algorithm outperforms gca implies algorithm nd mis graph polynomial time 
np contradicts condition nding mis np hard proves theorem 
theorem shows gca greedy heuristics best possible algorithm de ned sense deal class graphs mis problem np hard 
interestingly classes lies trivial greedy heuristics non polynomial algorithms sense theorem impossible outperform gca polynomial time algorithm classes 
relies course strong de nition outperforming 
classes graphs mwis problem eciently solved see survey general networks problem np hard hardly approximable see 
typically deal mobile radio network environment realistically assume arbitrarily changing network topology forced remain class considered np hard algorithmic problem polynomially solvable 
greedy approach plays central role account simplicity speed 
goodness highlighted analysis provided results greedy solutions devised compared 
simulation results conclude simulation example shows practical importance node weight setting mobile network 
demonstrate properly chosen weights gca achieve substantial improvement lowest id rst approach respect stability network clustering 
simulate clustering algorithm placing nodes randomly grid size nodes neighbors xed distance 
interested measuring stability clustering algorithm changing network 
count nodes move new cluster time unit ordinary nodes nodes clusterheads clusterheads time unit elections reclustering adjust random node movements tick 
con dence level simulation results con dence interval 
node moves random direction de ned angle independently uniformly distributed interval 
speed node randomly uniformly chosen integer interval maximum speed nodes 
simulation run di erent values maximum speed 
compare clusterhead selection algorithms model respect de ned stability parameters 
algorithm lowest id rst approach 
shown algorithm stable largest degree rst approach consider 
algorithm gca weights depend speed node 
randomly chosen speed node de ne weight 
xed maximum speed nodes moving lower speed assigned higher weight quiet nodes yield higher stability 
figures show average number elections new clusterheads time unit respectively functions maximum speed algorithms 
seen gures gca speed dependent weighting outperforms algorithm 
percentage gain range shown 
examined greedy approach clustering peer peer radio networks 
proven performance guarantee gca generalization previous algorithms applied problem 
proven optimality greedy approach sense np hard outperform polynomial time algorithm 
practical importance general setting opposed solutions lowest id rst largest degree rst gca possible express preferences choice weights 
instance demonstrated simulation properly chosen speed dependent weights result change clusters reducing amount recon guration overhead time nodes available communication due reorganization 
achieve re ned results combined weight node degree motion power set account multi parameter optimization available existing practical solutions 
maximum speed lowest id gca elections tick average 
ephremides baker design concept reliable mobile radio networks frequency hopping signaling 
proceedings ieee january 
garey johnson computers intractability guide theory np completeness 
freeman san francisco ca 
gerla lin multimedia transport multihop dynamic packet radio networks 
proceedings international conference network protocols tokyo japan november pp 

gerla lin adaptive clustering mobile wireless networks 
journal selected areas communications september 
gerla tsai 
multicluster mobile multimedia radio network 
wireless networks 
astad clique hard approximate proceedings th annual symposium foundations computer science burlington vt october pp 

korte analysis greedy heuristic systems 
annals discrete mathematics 
maximum speed lowest id gca tick average 
korte greedy algorithms independence systems 
zeitschrift fur operations research serie theorie october 
johnson np completeness column ongoing guide 
journal algorithms 
kopf ruhe computational study weighted independent set problem general graphs 
foundations control engineering 
lauer hierarchical routing design 
proceedings ieee international conference communications 
icc toronto ont canada june vol 
pp 

lauer packet radio routing 
routing communication networks steenstrup ed 
prentice hall englewood cli june 
maximum speed elections gca vs lowest id rst percentage gain elections 

