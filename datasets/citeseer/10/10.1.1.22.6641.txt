representing reasoning xml documents description logic approach appear journal logic computation diego calvanese giuseppe de giacomo maurizio lenzerini dipartimento di informatica sistemistica universit di roma la sapienza salaria roma italy dis uniroma proposals improve quality interaction world wide web suggest considering web huge semistructured database retrieving information supported task database querying 
view important represent form network documents placed nodes network 
current proposals pay sufficient attention represent document structures reasoning 
address problems providing framework document type definitions dtds expressed extensible markup language xml formalized expressive description logic equipped sound complete inference algorithms 
provide methods verifying conformance document dtd polynomial time structural equivalence dtds worst case deterministic exponential time improving known algorithms problem double exponential 
deal parametric versions conformance structural equivalence investigate forms reasoning dtds 
show take advantage reasoning capabilities formalism order perform optimization steps answering queries posed document base 
view world wide web large information system constituted collection documents connected hypertext links stimulating lines research related knowledge representation databases :10.1.1.11.3892
interesting aspects addressed papers design suitable mechanisms querying world wide web information system 
basic mechanism retrieving information context browsing searching keywords authors point form declarative query formulation greatly improve effectiveness interaction web see example :10.1.1.11.3892
possibility pursuing goal querying world wide web consider web huge semi structured database retrieving information supported traditional task database querying 
result query representation portion web containing information interest portion interaction may start possibly browsing searching 
framework adopted instance :10.1.1.11.3892
important assumption approaches query process operates basis representation structure network 
example query language websql considers underlying database constituted suitable virtual relations describing web terms nodes hypertext links :10.1.1.11.3892
current proposals ideas pay sufficient attention problem representing structure documents placed nodes network 
representing structural aspects having ability reason help tasks related query processing query formulation optimization restructuring :10.1.1.11.3892
role paid information document link structures corresponds paid schema associated constraints traditional database system 
sense important study suitable mechanisms reasoning representation structural aspects 
reasoning facility analogue schema level reasoning techniques traditional database setting constraint inference relational database inheritance subtyping inference object oriented databases enables improve precision information retrieved providing flexible additional selection criteria efficiency retrieval process allowing retrieving just short description large document decide relevance document 
order address issue devising sophisticated forms representation reasoning document structures take account documents world wide web described means ad hoc languages 
structure document typically explicit special tags mark various parts 
prominent formalisms defining marked documents extended markup language xml specialization standard generalized markup language sgml 
xml structure marked documents described means document type definitions dtds assert set rules document document type conform 
rules formalized means extended context free grammars way marked documents instances dtd seen syntax trees corresponding grammar 
worth noticing xml dtds define wide range document types general ones generic html documents specific ones specific form email messages 
types reasoning dtds interest purpose supporting query processing document base 
dtds natural fundamental question equivalent sense 
formalization dtds question reformulated terms checking various forms equivalence grammars 
particular checking strong equivalence dtds dtds define sets documents effectively done checking corresponding grammars generate sets syntax trees 
open problems concerning reasoning dtds pointed 
find algorithms study computational properties structural equivalence weaker form equivalence abstracting tag names documents 

determine meaningful variants structural equivalence study computational complexity 
goal demonstrate expressive description logics suited represent reason structure documents 
specifically provide contributions ffl formalization xml dtds terms expressive description logic called dl equipped sound complete terminating inference procedures 
logic includes non order constructs closure foundedness play crucial role formalization 
inference procedures dl provide general reasoning mechanism enables reasoning tasks dtds effectively carried 
include verification typical forms equivalences dtds strong equivalence structural equivalence parametric versions equivalence 
notably general reasoning mechanism allows verifying structural equivalence worst case deterministic exponential time contrast known algorithms double exponential 
ffl illustrate method retrieving set documents document base takes advantage reasoning capabilities dl 
documents retrieved means queries ask documents conforming structure 
reasoning exploited order devise optimization strategies improve brute force approach scanning entire document base checking document instance satisfies query 
organized follows 
section xml dtds documents introduced basic reasoning tasks dtds defined 
section description logic dl 
section formalization dtds related reasoning tasks dl developed 
section address problem answering queries posed document base 
section discuss possible extensions approach compare proposal modeling semi structured data 
drawn section 
extended markup language xml extended markup language specialization standard generalized markup language goal facilitate processing generic marked documents world wide web way goes possible html documents 
focus aspects xml marked documents directly related document structure abstracting respect additional features related physical representation documents 
xml dtds documents xml describes marked documents called xml documents considered pair document type definition dtd document instance 
document instance units called elements denote logical components document delimited marking tags 
dtd specifies logical structures markups admissible terms set element type definitions 
xml document document instance conform dtd definition conformance provided 
start describing form document instances independently particular dtd document instance may conform 
assume deal alphabets terminals element types 
element type associate start tag tag 
definition set docs possible document instances built defined inductively follows ffl terminal docs ffl sequence form delta delta delta element type docs docs assume loss generality alphabets terminals element types fixed denote set docs simply docs terminals basic types xml cdata pcdata represent generic unmarked strings associated structure structure elements corresponding element types specified dtds 
term symbol denoted letter mean element generic terminal element type 
definition document type definition dtd pair set element type definitions root element type element type specifies document type 
element type definition form ff defined element type ff called content model expression symbols constructed syntax ff empty ff jff ff ff ff 
ff ff ff regular expression empty denoting empty string denoting concatenation denoting union extended optional expressions transitive closure addition xml content models may contain construct stands sequence elements types defined dtd 
formally abbreviation delta delta delta jen en element types appear consistently xml assume element type contains element type definition ff appears left hand side 
observe xml operator sgml allowed 
doctype mail element mail subject body 
element address 
element address 
element address pcdata 
element subject pcdata 
element body pcdata 
dtd mail documents assume element type appearing element type definition ff symbol left hand side 
fact condition satisfied dtd easily transformed polynomial time generates set document instances condition holds 
example mail documents shows example dtd simple mail document expressed xml syntax straightforward rephrase element type definitions syntax 
definition set docs document instances generated set element type definitions starting symbol inductively defined follows ffl terminal docs ffl element type ff docs set sequences delta delta delta start tags associated document instances generated instance content model ff 
formally docs delta delta delta exists word delta delta delta generated ff docs set docs document instances generated dtd docs 
document instance conforms dtd docs 
example mail documents shows document instance conforming dtd 
formal point view dtd considered extended context free grammar generate set syntax trees language 
set element types terminals nonterminal terminal symbols root element type initial symbol element type definitions production rules 
marked documents seen syntax trees constructed grammar tree structure determined various tags occur document constitute markup 
mail 

address 
dsn fi address 


address 
beatrice fi address 
address 
rm address 

subject 
appointment subject 
body 
don meet disco inferno midnight 
tell 
body 
mail 
document instance conforming dtd basic reasoning tasks xml dtds conformance defined reasoning tasks turn useful managing xml documents 
fundamental problem check various forms equivalence dtds 
additionally possibility checking inclusion disjointness dtds exploited improve efficiency retrieving documents document base see section 
basic form inclusion equivalence disjointness inclusion equivalence disjointness sets document instances conforming dtds 
definition dtds ffl strongly included denoted docs docs ffl strongly equivalent denoted docs docs ffl strongly disjoint denoted omega docs docs 
determining strong inclusion equivalence disjointness names start tags constitute markup documents play fundamental role 
cases actual names tags may relevant document structure imposed tags importance 
example simply want check dtds describe documents level nesting tags names tags irrelevant 
form inclusion equivalence disjointness obtained ignoring names tags considering positions called structural inclusion equivalence disjointness 
dtds structurally included replace document conforming dtds start tags unnamed tags 

respectively resulting sets documents dtds included 
similar definitions hold structural equivalence disjointness 
structural equivalence dtds decidable known algorithms take time doubly exponential size dtds restrictions imposed strong inclusion equivalence disjointness may strict cases structural inclusion ignores completely tag names may weak 
natural generalization concepts obtained considering spectrum possible inclusions strong structural inclusion just extremes 
different forms inclusion obtained considering certain tag names equal different confronting documents 
allows parameterize inclusion dtds respect equivalence relation set tag names 
example checking equivalence dtds may want difference names enumerate 
obtained imposing tags equivalent checking dtds enforce structure example list items corresponding parts documents 
formally consider equivalence relation set element types 
element type denote equivalence class respect definition set docs document instances generated set element type definitions starting symbol inductively defined follows ffl terminal docs ffl element type ff docs delta delta delta exists word delta delta delta generated ff docs set docs document instances generated dtd docs 
document instance conforms dtd docs 
definition dtd included dtd denoted vr docs docs 
equivalence denoted jr disjointness denoted omega dtds defined similar way 
example note documents dtd defining note documents shown strongly disjoint dtd defining mail documents shown 
difference names mail note names body text note special kind mail 
easy see equivalence relation containing pairs mail note body text vr mentioned strong inclusion structural inclusion just special cases inclusion similarly equivalence disjointness 
fact choose equivalence relation equivalence classes singletons complexity bound holds consider operator sgml xml expanded may lead additional exponential blowup 
doctype note element note text 
element address 
element address 
element address pcdata 
element text pcdata 
dtd note documents obtain strong inclusion equivalence disjointness 
hand contains single equivalence class constituted set obtain structural inclusion equivalence disjointness 
loss generality consider inclusion equivalence disjointness 
description logic representing dtds introduce description logic dl section represent dtds 
description logics dls domain interest modeled means individuals concepts roles denoting objects domain unary predicates binary predicates respectively purpose deal possibility expressing knowledge individuals conceive dl formed components ffl description language specifies construct complex concept role expressions called simply concepts roles starting set atomic symbols applying suitable constructs 
ffl knowledge specification mechanism specifies construct dl knowledge base properties concepts roles asserted 
ffl set basic reasoning services provided dl 
rest section describe specific form components assume dl 
description language dl dls starting set atomic concepts atomic roles build complex concepts roles applying certain constructs 
set allowed constructs characterizes specific description language 
basic concept constructs encountered dls include boolean constructs denoted interpreted corresponding set operations universal existential quantification roles 
example concept child child doctor general description logics relations correspond ary predicates 
concepts syntax semantics atomic concept delta top delta negation delta conjunction universal 
fo qual 
number restr 
fo fo ng founded wf fo ad infinitum roles syntax semantics atomic role delta theta delta union concatenation ffi ffi refl 
trans 
closure transitive closure identity id table syntax semantics dl concept role constructs 
denotes set individuals instances concept person connected role child instances concept male instance concept doctor 
additionally expressive dls include number restrictions allow delimiting number times object connected objects certain role constructs roles intersection possibility construct arbitrary regular expressions atomic roles 
particular description logic dl formalizing dtds variant expressive dls studied 
includes basic constructs mentioned ffl general form number restrictions called qualified number restrictions means limit object minimum maximum number objects instances specified concept connected role ffl possibility roles constructed regular expressions atomic roles ffl construct denote objects initial point sequence roles founded 
full set constructs dl shown table denote atomic concepts arbitrary concepts atomic roles arbitrary roles possibly subscripts 
abbreviations increase readability dls formal semantics specified notion interpretation 
interpretation pair delta delta delta interpretation domain delta interpretation function assigns concept subset delta role binary relation delta respecting specific conditions imposed structure concept role 
called extension respectively 
semantics dl constructs shown table quite standard construct wf called founded interpreted objects initial point finite chains 
notice reflexive transitive closure roles dl includes construct transitive closure turns necessary characterization dtds terms dls 
obviously eliminate complex role expression replacing occurrence ffi replacement may worst case lead exponential increase size role expression 
knowledge bases dl dl knowledge base set assertions form arbitrary dl concepts restrictions 
abbreviation pair assertions interpretation satisfies assertion interpretation model knowledge base satisfies assertions adopt descriptive semantics cyclic knowledge bases knowledge bases concept right hand side assertion refers directly indirectly assertions concept left hand side assertion 
reasoning services dl basic reasoning service dl satisfiability concept knowledge base denoted 
amounts check admits model extension nonempty 
reasoning services knowledge base satisfiability determining knowledge base admits model subsumption 
determining subsumption concepts knowledge base denoted amounts check model knowledge base satisfiability subsumption immediately reduced concept satisfiability follows ffl knowledge base satisfiable satisfiable ffl concept subsumed concept knowledge base satisfiable sufficient consider concept satisfiability 
theorem concept satisfiability dl exptime complete problem 
proof give sketch proof 
complete proof 
proof exploits correspondence dls propositional dynamic logics established time extended successively expressive dls 
order decide concept satisfiability dl polynomially reduce satisfiability repeat 
repeat automata deterministic propositional dynamic logic repeat variant pdl atomic programs correspond atomic roles assumed deterministic correspond globally functional roles complex programs represented means finite automata language atomic programs regular expressions 
additionally contains repeat construct programs corresponds negation wellfounded construct roles 
qualified number restrictions counterpart need get rid order exploit correspondence 
construction define satisfiability preserving polynomial transformation knowledge base eliminates qualified number restrictions 
introduce atomic role new atomic roles fp gp globally functional replace occurrence knowledge base fp ffi ffi id ffi denotes concatenation repeated times 
transformation roles appear knowledge base functional ready establish correspondence repeat 
order deal operator transitive closure exploit fact regular language atomic roles described complex role expression encoded means finite non deterministic automaton size polynomial size encode concept dl formula repeat size polynomial size exptime upper bound follows decidability deterministic exponential time satisfiability repeat 
representing inductive structures dl rich language dl represent reason variety inductive data structures lists trees 
generally speaking unrestricted form assertions allows expressing recursive structures founded construct allows imposing finiteness paths specified form structures 
combination define inductive structures infinite cyclic paths ruled 
feature important correctly representing xml documents dl 
illustrate ideas showing represent binary trees 
typically class binary trees defined inductively smallest set bintree ffl node left successor right successor node leaf bintree ffl node having left right successors bintree 
inductive definition captured concept bintree dl knowledge base node info 
leaf node left right 
bintree leaf node left right bintree left 
right 
wf left right knowledge base allows represent binary trees sense 
model knowledge base consider instance bintree set objects links reached left right links form binary tree 
note way binary tree identified root 
concept bintree characterized recursive equation term bintree left hand side occurs right hand side equation 
difference recursive equation form inductive definition recursive equation simply states certain condition satisfied solutions specifying selection criteria choose possible solutions 
inductive definition selects smallest set satisfying condition identifies unique solution 
foundedness declaration right hand side equation characterizing bintree accomplishes selection making recursive equation bintree equivalent inductive definition 
binary trees represented way easily specialized selecting example kind information contained certain nodes bintree left right leaf info url additional structural constraints specific maximal depth bintree left right ffi left right leaf obviously recursively defined structures taken account concept definition reasoning knowledge base 
suppose example define smallest set ffl node leaf points url ffl node having left right successors 
structure captured additional assertion leaf info url node left right left 
right 
wf left right verify knowledge base including assertions far correctly implies logically equivalent 
representing reasoning dtds dls describe construct dl knowledge base capable fully capturing structural aspects dtds 
loss generality refer fixed alphabet element types fixed alphabet terminals fixed equivalence relation set element types 
representation dtds dtd define dl knowledge base called characteristic knowledge base follows 
alphabet includes atomic concepts roles ffl atomic concepts tag terminal ffl terminal atomic concept ffl element type atomic concept atomic concept ende ffl element type definition ff atomic concept ed ffl atomic roles atomic concepts ende represent tags element type independent specific dtd 
atomic concept ed associated element type definition contains information dtd belongs specific dtd 
considering different dtds containing element type definition element type associated knowledge bases contain distinct atomic concepts ed ed set assertions knowledge base constituted parts kt kr kd defined specified 
observe defining exploit full power qualified number restrictions dl 
refer reader section discussion qualified number restrictions capturing additional interesting characteristics xml documents 
kt encoding general structural properties aim kt captures general structural properties document instances 
particular want enforce model kt represents document instance means tree 
intuitively root tree represents root element connected means roles standing rest respectively objects representing tags associated root element representing components specifically document instance components start tag represented filler root component ffi filler second component ffi ffi filler component ffi filler tag filler 
document instances definition finite finite nesting components 
infinite model kt model containing cycles correspond document instance infinite nesting models ruled 
need impose finiteness acyclicity chains objects connected done means foundedness construct 
illustrates structure tree representing document instance form delta delta delta delta delta delta delta delta delta criteria specified 
account considerations define kt constituted assertions 

wf 
tree representing document delta delta delta delta delta delta delta delta delta tag 
terminal 
tag terminal terminal pair terminals tag element type ende tag element type observe kt reflects modeling binary trees dl illustrated section requirement models kt object represents binary tree 
assertion ensures model kt object root tree node successor successor 
second third assertions impose instance tag terminal leaves tree tag terminal disjoint 
assertions specify instance instance terminal different terminals disjoint instances ende subsets tag kr encoding equivalence relation aim kr fully captures equivalence relation kr impose disjointness concepts representing tags element types belonging different equivalence classes equivalence concepts representing tags element types equivalence class 
ffe fe nm gg set equivalence classes determined observation easy see reach goal defining kr constituted assertions ende ende mg ende ende gamma mg way reasoning differences various tags associated equivalent element types ignored coherently notion inclusion 
kd encoding dtd goal define kd way encodes knowledge various element type definitions 
order kd impose suitable conditions ed model instances ed represent parts document instances coherent definition said commenting definition kt component filler instance ed start tag component filler tag 
remaining components ffi fillers determined form element type definition ff particular form ff 
order represent ff complex role ff defined inductively follows empty id 
id ac ffi ff jff ff ff ff ff ff ffi ff ff ff ff ff ff 
ff id 
ac delta delta mapping associates pair constituted dtd symbol atomic concept follows ac ed element type terminal ff reflects structure imposed ff parts document instance defined ff explained terms encoding tree representing document instance binary tree 
worth noticing exploits analogy constructs expressing content models xml constructs form complex roles dl 
example ff form ff ff corresponding complex role ffi turn complex roles corresponding ff ff respectively 
observations conclude element type definition ff kd contains assertion ed ffi ff ende example mail documents shows characteristic knowledge base dtd described 
general part omitted 
lemma states fundamental property characteristic knowledge base 
call basic atomic concepts roles atomic concepts ed model extension atomic concept ed completely determined extension basic concepts roles 
formally lemma dtd characteristic knowledge base models domain agree interpretation basic atomic concepts roles 
agree interpretation ed element type defined ffi id ffi ffi id tom ffi ffi id subject ffi id ffi id body ffi ffi id ffi tom ffi id ffi ffi id ffi endto subject ffi id pcdata ffi body ffi id pcdata ffi ffi id pcdata ffi characteristic knowledge base derived dtd specific part proof contradiction 
models domain agree interpretation atomic concepts ed remind reader ed includes axiom ed ffi ff ende 
object show get contradiction induction number steps longest ffi path leaf tree foundedness constraint finite 
base case 
steps path 
ffi ff ende ff generates empty string steps allowed follows ende agree ende follows ende ffi ff ende contradiction 
inductive case 
steps path 
objects ffi path satisfying ffi ff ende successor kg 
induction hypothesis agree interpretation agree interpretation ac symbol implies agree interpretation ed contradiction 
lemma ensures model possible determine object instance ed account structure connected component containing observe establishing property foundedness construct plays prominent role ensures infinite path starting conformance way defined allows demonstrate document instance docs directly corresponds model kt kr define mapping fi document instances models kt kr document instance define fi induction structure follows ffl terminal fi delta fi delta fi defined follows delta fi fi terminal fi fog extension concepts roles empty 
say root fi 
ffl sequence form delta delta delta element type start tags docs fi delta fi delta fi obtained follows delta fi fo ik delta fi say root fi fi ende fi fo ik fi fo ik ende fi element type fi ende fi ik fi ik ende fi element type tag fi fo ik tag fi fi gamma ik fi fi ik fi root fi kg example mail documents shows result applying fi document instance 
element type nodes labeled instances ende respectively 
lemma dtd document instance fi specified root fi symbol unique way extend fi model docs ac proof easily verify construction fi model kt kr lemma ensures dtd document instance unique way extend fi model kt kr kd remains show docs ac proceed induction structure base case 
terminal thesis holds trivially 
inductive case 
sequence form delta delta delta fi constructed fi fi specified 
particular root fi kg terminal docs successor 
terminal done 
element type ff corresponding element type definition 
starts starts ffi ff ends exists string delta delta delta generated ff atomic concepts ac ac ac 
induction hypothesis extension ac docs 
definition docs get ac docs 
theorem provides basis verifying conformance resorting translation dtds dl 
symbol denotes disjoint union 


address 
address 

address 
address 
beatrice 


address 

address 

subject 
subject 
appointment 
mail 
body 
body 
don 

mail 
result applying fi document instance theorem checking conformance document instance dtd polynomially reduced model checking dl 
proof check document instance conforms dtd construct fi extend interpretation follows 
interpret ed id id observe root fi id necessarily model kd argument ensures case exactly conforms lemma applied root element type conclude model id docs 
hand proceeding induction structure analogously proof lemma shown docs model id reduction polynomial construction takes polynomial time size construction takes linear time size corollary checking conformance document instance dtd done time polynomial size proof theorem conformance polynomially reduced model checking dl 
dl knowledge base translated formula order logic plus fixpoints see uses variables levels fixpoint nestings 
considered order structure claim follows fact model checking order logic plus fixpoint restrictions polynomial complexity respect size structure formula 
example mail documents consider structure shown 
easy see assign node predecessor node labeled extension atomic concept em obtain model root extension inclusion disjointness order show dl determine inclusion disjointness dtds define mapping fl models document instances 
delta delta model delta define fl induction number steps longest ffi path foundedness constraint path finite 
fl defined follows ffl terminal fl ffl element type integer objects ende gamma fl fl delta delta delta fl 
ffl fl undefined 
lemma dtd characteristic knowledge base delta delta model delta symbol ac fl defined fl docs 
proof fl undefined terminal thesis holds trivially 
assume fl defined element type 
ff corresponding element type definition 
proceed induction number steps longest ffi path base case 
steps path 
construction fl terminal fl element type case fl easy 
second case ende ff generates empty string ac fl docs 
ac fl docs 
inductive case 
steps path 
objects ffi path satisfying ffi ff ende successor hg element type fl fl delta delta delta fl 
symbols ac kg induction hypothesis fl docs ff generates string delta delta delta ac fl docs 
ac fl docs 
extend notion characteristic knowledge base way represents set dtds single dtd 
set fd dn dtds define characteristic knowledge base simply kt kr kd delta delta delta words include kt kr add encoding model represents set document instances 
observe lemma lemma extend immediately case consider set dtds single dtd 
exploiting lemma lemma provide characterization inclusion disjointness dtds terms satisfiability dl 
theorem dtds kt kr kd kd knowledge base derived fd described 
vr rd omega rd 
proof 
contradiction 
document instance conforms conform unique model extends fi root fi 
docs docs lemma contradiction 
contradiction 
delta delta model delta lemma fl defined fl docs fl docs 
contradiction 
proved analogously 
decidability deterministic exponential time logical implication dl obtain immediate consequence exptime upper bound inclusion equivalence dtds 
results exponential improvement previously known algorithms checking structural equivalence 
corollary inclusion equivalence disjointness dtds verified deterministic exponential time size dtds 
retrieving xml documents document base describe exploit reasoning techniques previous section evaluate queries posed database documents 
refer fixed alphabet element types fixed alphabet terminals fixed equivalence relation set element types 
document base represents set xml documents defined follows 
definition document base pair hd ii ffl set dtds assumption pair known vr omega ffl set document instances assumption conforms pair known conforms query posed document base simply document type definition retrieve document instances document base satisfy definition 
definition query dtd evaluation document base returns answer set document instances conforms goal section algorithm computing answer query posed document base hd ii exploits possibility reasoning dtds 
algorithm maintains sets dtds document instances computes set document instances proceeding follows 
equal equal 
empty repeatedly select dtd vr jr document instances conforms 
vr move document instances conform remove dtd vr continue iteration loop 
vr remove dtd omega remove remove document instance conforms continue iteration loop 
omega remove dtd vr remove document instance conforms continue iteration loop 
remove continue 

add document instance conforms correctness algorithm shown theorem 
theorem hd ii document base query 
set computed algorithm equal 
proof step considers document instances conformance determined looking dtds sufficient show step algorithm remove document instance contributes 
step obvious equivalent answer set document instances conform step deals case included case set document instances conforming takes part answer query 
set comprises documents conforming dtds included dtds need considered anymore discarded 
step considers case included document instances satisfying conform algorithm discards document instances conforming dtd disjoint step takes care case disjoint discards dtds included excludes answer document instances conform observe method seen adaptation semantic indexing technique developed dls dtds act semantic indexes xml documents document base 
way help improving performance query evaluation respect brute force approach evaluating document instances 
words reasoning dtds allows effective query evaluation process 
obviously comparing dtds costly method pays size dtds small logarithmic respect size document instances usually case 
discussion shown description logic dl represent reason structural aspects xml documents 
shown dl reasoning improve efficiency query answering document bases 
exploiting constructs dl able integrate structure documents aspects related semantics information contained 
sake simplicity include aspects formal development briefly mention taken account framework 
ffl dtds xml may include attributes describing properties dtd elements 
attribute dtd name value type associated element type easy see attributes modeled dl adding role attribute including knowledge base representing dtd suitable assertions roles 
particular qualified number restrictions impose constraints number values certain element type may attribute 
ffl documents may contain links documents 
framework links easily represented means special concept suitable roles name link associated anchor 
observe document links form cycles documents links considered graphs trees 
roles represent links different represent document structures resulting knowledge base correctly model situation finite tree substructures embedded arbitrary graphs 
ffl respect point suitable assertions constrain anchor point document specific dtd limit number links pointing documents certain type 
impose type condition resort qualified number restrictions 
ffl part document corresponding terminal symbol dtd includes special structure example list records table information say departments employees represented adding suitable properties concept corresponding ffl idea capturing semantics related tags documents pursued dl introducing new concepts roles purpose 
note framework representing reasoning structured documents provides notable example handling objects composed different parts 
part relation seen having special importance applications 
description logic dl means closure foundedness constructs able capture fundamental aspects part relation shown 
strong interest database community development new data models semi structured data 
ability represent data structure rigid strict conventional databases considered crucial aspect modern approaches data modeling important application areas biological databases digital libraries data integration 
semi structured data defined data raw strictly typed conventional database systems 
oem object exchange model basic data model semi structured data extension proposals models semistructured data 
represent data graphs labeled edges information values schema data kept 
formalism seen formalism representing semi structured data 
associate element dtd node consider content model associated specification allowable children node obtain method dtd seen graph way graphs conforming correspond document instances conforming notably results provide effective procedures reasoning semi structured data schemas feature missing example oem 
research needed compare expressive power formalism respect mentioned data models 
papers dealing problem retrieving information document database world wide web argue current techniques representing reasoning document structures improved 
provided view dtds concepts expressive description logic dl demonstrated approach effective faithfully representing document structures answering open questions regarding dtd equivalence checking 
particular proposed method checking structural equivalence dtds worst case deterministic exponential time contrast known algorithms double exponential 
shown conformance setting done polynomial time query answering done efficiently advantage reasoning methods associated dl 
research directions worth pursuing 
hand aspects dtds captured order represent properties documents exceptions described 
hand deductive power dl allows study new types reasoning dtds forms parameterized equivalence abstracting definition specified element document classification infer dtd best matches marked document set candidates 
serge abiteboul 
querying semi structured data 
proc 
th int 
conf 
database theory icdt pages 
serge abiteboul richard hull victor vianu 
foundations databases 
addison wesley publ 
reading massachussetts 
serge abiteboul quass jason mchugh jennifer widom janet wiener 
lorel query language semistructured data 
int 
digital libraries 
alessandro enrico franconi nicola guarino 
open problems part relations 
proc 
description logic workshop dl number ws pages 
aaai press 
alessandro enrico franconi nicola guarino luca 
relations object centered systems overview 
data knowledge engineering 
franz baader 
augmenting concept languages transitive closure roles alternative terminological cycles 
proc 
th int 
joint conf 
artificial intelligence ijcai sydney australia 
franz baader 
automata theory characterizing semantics terminological cycles 
annals mathematics artificial intelligence 
tim bray jean paoli sperberg mcqueen 
extensible markup language xml recommendation 
technical report world wide web consortium 
available www org tr rec xml 
peter buneman susan davidson mary fernandez dan suciu 
adding structure unstructured data 
proc 
th int 
conf 
database theory icdt pages 
diego calvanese 
finite model reasoning description logics 
aiello john doyle stuart shapiro editors proc 
th int 
conf 
principles knowledge representation reasoning kr pages 
morgan kaufmann los altos 
diego calvanese 
unrestricted finite model reasoning class representation formalisms 
phd thesis dipartimento di informatica sistemistica universit di roma la sapienza 
diego calvanese giuseppe de giacomo maurizio lenzerini 
structured objects modeling reasoning 
proc 
th int 
conf 
deductive object oriented databases dood number lecture notes computer science pages 
springer verlag 
diego calvanese giuseppe de giacomo maurizio lenzerini 
decidability query containment constraints 
proc 
th acm sigact sigmod sigart sym 
principles database systems pods pages 
diego calvanese giuseppe de giacomo maurizio lenzerini 
knowledge representation semi structured data 
proc 
th nat 
conf 
artificial intelligence aaai pages 
christophides abiteboul cluet scholl 
structured documents novel query facilities 
snodgrass winslett editors proc 
acm sigmod int 
conf 
management data pages minneapolis minnesota usa 
giuseppe de giacomo 
decidability class knowledge representation formalisms 
phd thesis dipartimento di informatica sistemistica universit di roma la sapienza 
giuseppe de giacomo maurizio lenzerini 
boosting correspondence description logics propositional dynamic logics 
proc 
th nat 
conf 
artificial intelligence aaai pages 
aaai press mit press 
giuseppe de giacomo maurizio lenzerini 
uniform framework concept definitions description logics 
artificial intelligence research 
francesco donini maurizio lenzerini daniele nardi andrea schaerf 
reasoning description logics 
gerhard brewka editor principles knowledge representation studies logic language information pages 
csli publications 
allen emerson jutla 
simultaneously complementing automata 
proc 
th ieee symposium logic computer science lics pages 
mary fernandez daniela florescu alon levy dan suciu 
query language web site management system 
sigmod record 
michael fischer richard ladner 
propositional dynamic logic regular programs 
computer system sciences 
roy goldman jennifer widom 
dataguides enabling query formulation optimization semistructured databases 
proc 
rd int 
conf 
large data bases vldb pages 
international organization standardization 
iso information processing text office systems standard generalized markup language sgml october 
craig knoblock alon levy editors 
proceedings aaai spring symp 
information gathering heterogeneous distributed number ss menlo park 
aaai press mit press 
konopnicki shmueli 
qs query system world wide web 
proc 
st int 
conf 
large data bases vldb pages 
dexter kozen 
results propositional calculus 
theoretical computer science 
lakshmanan sadri subramanian 
declarative language querying restructuring web 
proc 
th int 
workshop issues data interoperability nontraditional database systems 
ieee computer science press 
patrick lambrix 
part reasoning description logic 
phd thesis dep 
computer information science linkoping university sweden 
patrick lambrix johan 
creating knowledge base world wide web documents 
proc 
iasted int 
conf 
intelligent information systems pages 
alon levy divesh srivastava thomas kirk 
data model query evaluation global information systems 
intelligent information systems 
alberto mendelzon george mihaila tova milo :10.1.1.11.3892
querying world wide web 
int 
digital libraries 
bernhard nebel 
reasoning revision hybrid representation systems 
number lecture notes artificial intelligence 
springer verlag 
bernhard nebel 
terminological cycles semantics computational properties 
john sowa editor principles semantic networks pages 
morgan kaufmann los altos 
quass rajaraman sagiv ullman widom 
querying semistructured heterogeneous information 
proc 
th int 
conf 
deductive object oriented databases dood pages 
springer verlag 
raymond tompa wood 
data implementation data model meta semantic issues evolution sgml 
computer standards interfaces 
ulrike sattler 
concept language engineering application relations 
alexander borgida maurizio lenzerini daniele nardi bernhard nebel editors working notes description logics workshop technical report rap dipartimento di informatica sistemistica universit di roma la sapienza pages rome italy 
klaus schild 
correspondence theory terminological logics preliminary report 
proc 
th int 
joint conf 
artificial intelligence ijcai pages sydney australia 
manfred schmidt schau gert smolka 
attributive concept descriptions complements 
artificial intelligence 
moshe vardi 
taming converse reasoning way computations 
parikh editor proc 
th workshop logics programs number lecture notes computer science pages 
springerverlag 
moshe vardi pierre wolper 
automata theoretic techniques modal logics programs 
computer system sciences 
preliminary version appeared proc 
th acm sigact symp 
theory computing stoc 
wood 
standard generalized markup language mathematical philosophical issues 
jan van leeuwen editor computer science today trends developments number lecture notes computer science pages 
springer verlag 
william woods 
understanding subsumption framework progress 
sowa editor principles semantic networks pages 
morgan kaufmann los altos 

