computer intrusion detecting matthias schonlau william dumouchel wen hua ju alan karr martin yehuda vardi national institute statistical sciences alexander drive research triangle park nc labs research park avenue shannon laboratory florham park nj rutgers university dept statistics rd piscataway nj 
muenchen germany masqueraders computer intrusion detection people somebody computer account 
investigate number statistical approaches detecting masqueraders 
evaluate collected unix command data users contaminated data masqueraders 
experiment blinded 
show results methods ap proaches computer science community 
keywords anomaly bayes compression computer security high order markov pro ling unix intrusion detection computer science appealing problem area importance widespread interest subject evidenced report president commission critical infrastructure tion 
di erent types intrusions 
denning divides attacks basic categories eavesdropping packet sni ng passive interception network traf snooping downloading tampering data unauthorized changes data records spoo ng impersonating users forging originating email address gaining password access jamming ooding overwhelming system resources email ood injecting malicious code disks email attachments exploiting design implementation aws bu er ows ows overwrite data get control system cracking passwords keys due lack actual intrusions due belief inside rewall focus common form spoo ng detecting 
masqueraders people impersonate people computer 
spring users parents account policy users play jokes users malicious intruders intentionally trying hide identity impersonating users 
intruders outside practice outside intruders immediately try gain access account special case 
computer crime security survey computer security institute ranking computer security problems terms estimated nancial damage unauthorized access insiders damaging accounting third total loss 
methods computer intrusion detection fall broad categories pattern recognition anomaly detection 
pattern recognition refers tempting recognize attack signatures previously observed intrusions 
impression computer scientists consider pattern recognition rst line defense 
clearly powerful intrusion method known 
unfortunately researchers hackers come new ideas researchers publish fore attack 
anomaly detection defend novel attacks statistics useful 
anomaly detection usually historical pro le built user su ciently large deviations pro le indicate possible intruder 
anomaly detection useful categories mentioned probably appropriate detecting 
commercial intrusion detection systems aware pattern recognition ides lunt nides emerald porras neumann approaches 
literature focuses vast array speci approaches computer intrusion detection 
general overview see denning denning 
describe computer science approaches anomaly detection directly relevant article section 
article structured follows section discuss data experiment designed compare anomaly detec tion methods 
section describe methods approaches computer science community 
section analyzes results experiment section concludes discussion 
data experimental design data unix operating system users give commands 
example user type myfile order read myfile screen time 
example command myfile argument com mand 
second example typing chmod myfile allows users read write execute myfile 
myfile considered arguments speci es exactly read write execute myfile 
data source unix acct auditing mechanism 
examples auditing entries table 
analysis rst command user ter start real cpu memory name time time sec sec usage chmod matt pts karr pts cat vardi pts pts sendmail karr pts table examples accounting entries generated unix acct auditing mechanism elds command name user 
rst commands users recorded time period months 
time span took collect com mands di ers vastly user user 
generate commands days months 
availability arguments desirable col lected privacy concerns 
commands recorded system implicitly explicitly typed user 
shell le le contains multiple commands 
running shell le cause commands recorded 
includes called profile les les 
names executables programs interpreted commands recorded audit stream 
experimental design randomly selected users serve targets 
remaining users masqueraders interspersed data data users 
simplicity decided decompose user data blocks commands 
rst blocks commands users kept aside training data far know contaminated masqueraders 
blocks simpli cation block contaminated completely mixed blocks 
starting block insert masquerading data follows masquerader new masquerader appears block probability 
masquerader masquerader continues block probability 
data correspond di erent masqueraders separated block data 
inserting masquerading data increases number commands 
truncate data blocks user order give away amount masquerading data inserted 
masquerading data drawn data masquerading users fol lows determine length masquerade choose masquerader start data block random 
random choice repeated contiguous masquerading data left masquerading data previously 
conducted study blind fashion investigators knew locations number masqueraders time analyzing data 
investigators knew probabilities masquerader appear disappear allowed information 
piece information fact start blocks individual tests masqueraders 
data experiment available download www research att com schonlau overview methods follows describe distinct approaches labeled uniqueness bayes step markov hybrid multi step markov compression ad ditional methods computer science literature labeled ipam sequence match 
methods attempt detect anomalies thought subsystems stand intrusion detection systems 
methods operate essentially way 
commands training data construct user pro les 
block commands score computed score exceeds threshold alarm indicating potential masquerade triggered 
data deemed free may update pro les 
method describe generate score part model set thresholds update pro le 
describe various methods rst introduce notation common methods training data command names test data command names cut nu th command user training data number times user command sequence training data number times user command training data length user training data sequence nu test data block evaluated score user block method total number users uk number users command training data total number distinct commands number commands test data block note subscripts index users command order com mands respectively 
second subscript needed index commands subscript command stream user ordered 
avoid cumbersome sentences occasionally refer order time 
uniqueness uniqueness approach idea commands previously seen training data may indicate masquerading attempt 
commands indicative fewer users known command 
approach due schonlau 
motivation uniquely unpopular commands important method 
uniquely command mean pool users user command 
unpopular command users 
turns half unix commands appearing training data unique single user unpopular 
uniquely commands account data com mands users account data 
command popularity exactly users command 
group commands group contains commands popularity 
assign id command commands groups unpopular commands assigned lower id com mands groups popular commands 
order group arbitrary 
plotting command id time usage pattern uniquely unpopular commands emerges 
plot shown rst commands users 
groups sep horizontal line 
fact popularity group takes approximately bottom half shows half commands uniquely unpopular 
model de ne test statistic builds notion unpopular uniquely commands xu nu weights kx uk vk user training data contains command nu vk popularity user visualization command popularity 
panel corresponds user 
user panel user commands repre sented single dot 
popularity corresponding command plotted versus time di erent commands popularity di erent ordinates popularity group 
fraction uk acts uniqueness index zero users command users 
weights control uniqueness index added subtracted depending command seen 
user tend score low uses commands similar ones training data 
order commands appear matter 
quantity vk represents command usage relative users 
reduces score contribution commands users user rarely 
thresholds assign threshold users 
threshold estimated cross validation split original training data data sets commands 
larger data set training data assign scores smaller 
repeated times time assigning scores distinct set commands 
set threshold th percentile combined scores users cross validations 
data resulting threshold 
investigated assigning di erent thresholds di erent users way described compression method section 
turned individual thresholds tended yield false alarm missing alarm tradeo inferior common threshold users 
may due fact scores interpretable users way negative score indicates test data contains incidences new commands suspicious 
updating method particularly sensitive contamination training data 
alarm free test data updating sensible 
introduce conservative second threshold updating test score remains updating threshold corresponding data added training data 
choosing updating threshold note masquerader uses common commands get score slightly zero time contaminate pool commands uniquely commands 
avoid possibility set updating threshold somewhat arbitrarily 
updating training data set means updating vector distinct commands matrix contains count user command 
updated scores recomputed matrix 
recompute scores test commands commands 
non simultaneous updating possible update simultaneously users users submitting commands rate 
bayes step markov uniqueness approach considered command frequencies 
bayes step markov approach goes step transitions com mands 
approach factor statistic test null hypothesis observed step command transition probabilities consistent historical transition matrix 
approach due dumouchel 
model form hypotheses 
null hypothesis assumes observed transition probabilities stem historical transition matrix alter native hypothesis generated dirichlet distribution ct ct qk qk dirichlet historical transition probability command com mand user command command user explain estimate historical command transitions parameters 
choosing bayesian framework estimate shrinking observed conditional probabilities marginal probabilities marginal probabilities command bayesian hyperparameters controlling shrinkage 
turn estimated tting conditional frequencies dirichlet distribution means 
marginal frequencies estimated shrinking marginal cies observed training data average command frequencies users nu uk nu uk specify estimated tting marginal frequencies nu dirichlet multinomial distribution modi cation usual dirichlet model take account fact commands unique particular users 
see dumouchel details modi cation inspired success uniqueness method section 
test hypothesis forming bayes factor 
bayes fac tor bf ratio probabilities data hypotheses bf prob rob larger bf evidence favor 
fact log bf called weight evidence 
log scale nice property evidence independent data sets sum individual evidence 
log bf test statistic 
turns bayes factor bf calculated bf nu thresholds split training data set parts 
model estimated part estimates 
scores calculated part 
xu average score user users respectively 
calculate individual thresholds user follows xu average threshold users intentionally set 
value log bayes factor hypothesis alternative equally 
emerges natural choice 
updating blocks testing data commands row alarm free center block added training data 
fourth block alarm free third block added forth 
adding rst blocks minimizes contamination training data masquerading data 
adding block training data practice done updating values 
update algorithm straightforward involving modi cation nonzero counts 
values stored computed needed nonzero values 
exponential averaging method update age old data 
form nu command relative frequencies half life commands 
user speci thresholds updated exponential weighting algorithm 
hybrid multi step markov method multi step called high order markov chain occasionally independence model proposed 
approach due ju vardi 
overcome high dimensionality inherent step markov chain follows restrict attention subset com mands remaining commands represented single command labeled mixture transition distribution mtd approach model transition probabilities raftery raftery 
test data contain commands unobserved training data markov model usable 
instances simple independence model probabilities estimated contingency table users vs commands may appropriate 
method automatically toggles models needed 
multi step markov model ku smallest number frequently ku commands user account user training data 
commands including appearing user training data form category labeled 
combine frequently ku commands constitute markov chain state space mu 
sequence commands user assuming mtd model transition probabilities step markov chain cut cu cu cl lx ui ru jci fr ijj mg lg satisfy certain positivity constraints 
xl experiments simplifying assumptions users ru mu small take ru ku 
assumption forces transition probabilities infrequently com mands small 
assumption copes scarcity data setting transition probabilities infrequently commands quantity 
note contains rarely commands 
ra choosing chance get rare command roughly commands 
log likelihood command sequence user log mu mu il log lx jij il number times pattern il 
il 

observed command sequence 
maximum likelihood estimate mle maximizes respect subject positivity constraints 
see ju vardi computational details 
independence model model assumes user commands independently generated multinomial random distribution cu cut cut ty ty previous methods fact commands users greater power distinguish di erent users users 
method uses weights depend popularity score achieve transform follows uk nu wk wk uk 
frequencies popular commands shrunk marginal proportions nu greater extent 
sub uk renormalized achieve nu estimated uk nu uk uk avoid log zero 
combining models test data test hypothesis commands generated user commands generated users de ne log likelihood ratio statistic markov independence models respectively follows log maxv rv ru log maxv bring statistics scale regress intercept training data 
robust regression procedure median squares estimate su number commands categorized 
combine single score xu xu su choose experiment su results hybrid method automatically alternates markov independence models test data usual unusual 
occurred time data set 
thresholds reject xu mean standard deviation scores xu 
estimate pooled training data users 
threshold users 
updating xu set test data corresponding test data added training data set 
updating threshold zero conservative raising alarm 
parameters ru pro le individual user reestimated augmented training data update 
threshold parameters rees training data scores xu previous test data score lower old threshold 
experiment estimates parameters ru updated exactly half way test data 
compression compression mean reversible mapping data di erent repre sentation uses fewer bytes 
approach implemented karr schonlau 
model premise compression approach test data appended training data compress readily test data stems user masquerader 
de ne score number additional bytes needed compress test data appended training data compress fc cg compress training data test data fc cg test data appended training data compress function gives number bytes compressed data 
compression methods lempel ziv algorithm 
unix tool compress implements modi ed lempel ziv algorithm popularized welch 
threshold threshold determined training data rst commands user cross validation 
assign individual threshold user 
user blocks commands compute cv ub compress compress ub ub th block commands user superscript cv indicates scores cross validated 
yields cross validated scores user 
deter mine th percentile empirical scores assumption user threshold constant set user score average cv determined pooled data users cv xcv cv sample th percentile cv ub 
note choice xcv leads thresholds proposed section bayes step markov model 
updating test commands user commands consider updating training data 
alarm raised commands user training data set replaced commands threshold user recomputed precisely recompute cv 
alarms raised previous training data threshold remain place 
additional methods able commercial intrusion detection tools data 
problem commercial systems anomaly de tection component expect data speci format 
example cmds computer misuse detection system expects events system call level reconstructs unix audit trail system calls 
authors methods compared methods computer science community 
brie describe methods 
ipam incremental probabilistic action modeling ipam name algo rithm hirsh 
step command transition probabilities estimated training data 
estimated probabilities updated continually exponential updating scheme 
arrival new command transition probabilities mate command command aged multiplying added transition 
davison hirsh choice 
command possible predict command choosing corresponding highest transition probability 
pre diction labeled command turns top predicted commands 
fraction predictions test data forms score 
fraction falls threshold alarm raised 
thresholds estimated training data ad hoc fashion 
sequence match new command lane brodley compute similarity mea sure commands users pro le 
user pro le consists command sequences length user past 
similarity measure count number matches command command comparison command sequences greater weight assigned adjacent matches 
similarity measure computed test data sequence paired command sequence pro le 
maximum similarity values computed forms score test command sequence 
scores noisy scores averaged 
average score threshold alarm raised 
threshold determined quantiles empirical dis tribution average scores 
initial pro les training data contain command sequences user 
results experimental setup described section yielded total ader incidents users 
incidents account data 
incidents user users masquerader 
half masqueraders fewer blocks masqueraders blocks 
results rst visually inspect various methods gave alarms masquerader 
seen hybrid multi step markov bayes step markov uniqueness compression methods 
row corresponds user column block data 
presence color indicates corresponding method gave alarm 
red background shading indicates presence masqueraders 
alarm raised thresholds supplied respective methods 
methods ipam sequence match plot alarms various methods users 
compromised data red background shading 
method false missing alarms alarms uniqueness bayes step markov hybrid multi step markov compression sequence match ipam table false alarms missing alarms methods 
investigators corresponding rst methods asked target false alarm rate 
asked target false alarm rate 
false alarm rates achieved data set table 
methods accomplished goal suggesting di cult control false alarm rate 
missing alarms range cent 
di erent false alarm missing alarm rates colors show 
masquerader meth ods raise alarm 
may suggest masqueraders fall groups easy detect di cult detect 
methods give false alarms jointly user user di erent methods prone false alarms di erent users yellow user green user blue user 
particularly interesting false alarms appear long sequences 
appears methods raise false alarms di erent users discover masqueraders time 
selected individuals showed alarms users 
look actual scores methods selected users 
panels correspond particular users 
panel standardized scores user standardized scores user standardized scores user standardized scores user standardized scores user standardized scores user standardized scores user standardized scores user multi step markov bayes step markov compression uniqueness sequence match ipam plot standardized scores time di erent users 
displays standardized scores time methods 
color corre sponds di erent method 
horizontal axis labeled corresponds blocks testing data 
scores standardized horizontal line center represents threshold value blocks methods 
line crosses center line method raises alarm point 
thresholds ones supplied method meaning methods di erent false alarm rates table 
standardized scores comparable plots di erent plot 
gray shading indicates presence masquerader 
lines crossing threshold gray shading false alarms 
follows comment individual panels user rst blocks rst masquerader scores half methods jump indicating alarm scores methods jump 
features scores groups exactly reversed 
hypothesize blocks masquerader unusual new commands uniqueness score low commands somewhat repetitive compression score low transition familiar commands unusual transition methods high scores 
turns data commands consist repeated sequences sed ln sh 
user commands separately step transitions sed ln ln sh appeared 
rst second masquerader happen person 
time happened experiment 
user presence masquerader score meth ods remains constant 
method detecting masquerader compression method 
hypothesize masquerader unusual easy compress 
turns masquerading data consists single repeated command popper 
user command 
clearly masquerading data highly repetitive compressed easily 
user masquerader blocks single method discovers 
raises question intrusion discoverable 
unusual data 
user masquerader methods capture pre 
block single method raises alarm absence masquerader 
true anomaly happen masquerader 
user uses commands get acc line pro acc prof appear training data 
unusual command transitions 
user masqueraders detected methods method detects second masquerader 
delayed reaction methods rst masquerader ipam fails raise alarm 
turns onset masquerading attempt lot common com mands ls sendmail 
unusual sequence commands driver appears number times 
presence third masquerader scores take small dip time indicating highly correlated 
turns data masquerader dominated sequences form mars sh grep ping grep 
dip caused sequences temporarily occur frequently 
user methods highly correlated entire blocks 
methods raise alarm remember methods standardized false alarm rate score clearly peaks presence masquerader 
turns data user highly repetitive command sequence repeats part 
user surprisingly distribution scores presence masquerader essentially bimodal methods 
user masqueraders perfectly captured meth ods 
turns second masquerading attempt consists repetitions command popper 
sion method fails detect masquerader 
reason sequence match misses masquerader due updating problem user uses popper rst masquerader 
sequence match detect rst masquerader sequences con taining command mayhave added user pro le leading failure detect second masquerader 
correlation methods apparently scores correlated highly 
ran cluster algo rithms correlation matrix measure similarity 
methods uniqueness hybrid multi step markov correlation coe cient clearly part cluster 
may due fact hybrid elements hybrid multi step markov method focus rare unique commands similar way uniqueness method 
second group formed methods contributed com puter science community ipam sequence match 
tion coe cient groups 
depending clustering algorithm bayes step markov method associated groups 
ipam bayes step markov step command transition matrix surprising methods highly correlated methods 
compression method stands 
highest correlation coe cient uniqueness method 
roc curves survival analysis itwas di cult compare methods visualizations di erent false alarm rates 
varying thresholds obtain di erent tradeo false alarms missing alarms 
curve shows functional relationship false alarms missing alarms called roc curve 
methods di erent thresholds di erent users question thresholds 
add constant individual thresholds compute corresponding alarm rates 
ignore possibility di erent thresholds ect updating algorithm 
displays roc curves methods 
lower left curve better best methods cent false alarms corresponds missing alarms cent false alarms corresponds missing alarms 
compression method uniformly inferior methods 
false alarms uniqueness methods clearly dominates methods 
ipam sequence match surprisingly similar high false alarms 
low false alarm rate better methods 
roc curves unit analysis block intrusion 
interest see long intrusion survives detected 
gives probability surviving function number data blocks false alarm rate methods xed 
rst block intrusions caught blocks caught 
compression method worse 
missing alarm false alarm hybrid multi step markov bayes step markov compression uniqueness sequence match ipam roc curves methods 
methods updating 
roc curves updating analyses updating algorithms described sec tion 
gives roc curves algorithms solely initial training data 
methods sequence match compression perform better updating 
compression directly attributable di culties associated updating algorithm update training data test data high scores avoid contamination masquerading data average score training data tends decrease 
consequence thresholds calculated updated training data decrease 
eventually normal variation bad probability intruder surviving hybrid multi step markov bayes step markov compression uniqueness sequence match ipam number blocks commands detecting masquerader survival plot intrusions methods xed false alarm rate cent 
ideally detection delay instant death intrusion 
scores starts looking masquerading attempt 
problem methods turned especially severe compression method 
uniqueness hybrid multi step markov methods bene ted updating 
obvious methods may ble updating training data masquerading data especially uniqueness method 
missing alarm false alarm hybrid multi step markov bayes step markov compression uniqueness sequence match roc curves methods ipam data available 
methods updating 
discussion methods detect anomalies command usage 
shown methods detect anomalies surprisingly considering paucity information 
essence try classify data groups label bad 
absence training data bad 
interesting re ect methods cope problem hybrid multi step markov method explicitly assumes bad masquerader resembles users 
lesser extent uniqueness method bayes step markov method assume concept command popularity parameter estimation dirichlet distribution respectively 
compression method inherent notion bad constitutes 
experiment led insight di erent methods uniqueness method severely ected accidental tion training data rare commands masquerading data 
single threshold users works better individual thresh olds user 
uniqueness method easiest compute powerful anomaly detection experiment 
open question success repeated contexts 
compression method vulnerable updating training data homogeneous data 
di culties updating algorithms 
markov method successful computationally demand ing 
time hybrid elements hybrid multi step markov method improve roc curve 
bayes step markov method slightly worse markov uniqueness methods robust uniqueness computationally intensive markov method 
previously approach principal com ponents analysis step command transition frequencies dumouchel schonlau 
approach abandoned re quired voluminous user pro les easily extensible information unpopular unique commands 
extent performance various methods substantially 
example roc curves figures di er dra matically 
curves di er believe di erences meaningful 
interpretation sensible approach com pression example works pretty intrusions easy detect 
going working pretty working requires insight ort 
methods described sensibly serve sole means detecting computer intrusions 
relatively high missing alarm rates preclude 
collection tools 
part strategy include attack signatures analysis detailed data including time stamps command arguments 
opinion contribution eld intrusion detection follows introduced theoretical framework detect formulating hypotheses applying statistical theory test 
introduced roc curves comparisons di erent intrusion de tection methods possible 
substantive discovery unique ness method introducing popularity score valuable component ofa command pro le 
able combine concepts dirichlet priors shrinkage estimation bayes factors sparse matrix computation detection 
introduced way toggle di er ent methods case multi step markov indepen dence model 
ways reduce dimensionality multi step markov model 
goals bring exciting area attention statistical community 
believe lot room investigation 
grateful brian davison ipam lane sequence match agreed run intrusion tools data 
pregibon generating blinded experimental data allan wilks helping collect command data rst place 
ju karr schonlau vardi funded part nsf dms 
schonlau funded part nsf dms 
ju vardi funded part nsf dms nsa mda 

intrusion detection inter net surveillance correlation trace back traps response sion net books new jersey isbn 
computer misuse detection system cmds website www cmds net pro les htm computer security institute csi fbi computer crime se survey results quantify nancial losses computer security alert april 
davison hirsh 
predicting sequences user ac tions predicting ai approaches time series prob lems published technical report ws proceedings aaai icml workshop pp aaai press madison wisconsin denning 
cyberspace attacks countermeasures internet denning denning 
eds acm press new york pp 
denning denning 
eds internet acm press new york 
dumouchel 
computer intrusion detection bayes factors comparing command transition probabilities national statistical sciences technical report available www niss org html dumouchel schonlau comparison test statis tics computer intrusion detection principal components regression transition probabilities 
proceedings th interface computing science statistics appear 
dumouchel schonlau 
fast computer intrusion de tection algorithm hypothesis testing command transition probabilities 
proceedings fourth international conference knowledge discovery data mining august new york pp 

ju vardi 
hybrid high order markov chain model computer intrusion detection national institute statistical sciences 
technical report available www niss org html lane brodley 
approaches online learning concept drift user identi cation computer security proceedings fourth international conference knowledge discovery data mining august new york pp 

president commission critical infrastructure protection critical foundations united states gov printing ce gpo 
available online www gov report index html raftery 
model high order markov chains journal royal statistical society ser 

raftery 
estimation modeling re patterns high order markov chains mixture tran sition distribution model applied statistics 
schonlau intrusion detection struc tural zeroes 
statistical computing graphics newsletter 
vol 

welch 
technique high performance data com pression ieee computer vol pp 

