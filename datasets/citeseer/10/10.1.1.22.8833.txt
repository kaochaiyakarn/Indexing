proof mining analysis computability complexity paulo oliva progress report brics brics ph school department computer science university aarhus denmark may supervisor ulrich kohlenbach proof mining analysis computability complexity paulo oliva may contents proof mining translation herbrand disjunction 
modified realizability 
translation negative translation 
translation 
translation translation modified realizability 
interpretation functional interpretation 
translation monotone interpretation 
counterexample interpretation 
case study uniqueness approximation computable analysis 
uniform modulus uniqueness 
complexity finding best approximation 
extend result haar subspaces 
relation different approaches proof mining 
computable analysis domain theory 
weak fragments analysis 
semi classical systems 
appendix effective bounds strong unicity approximation 
proof mining consists extracting prima facie non constructive proofs constructive information 
purpose techniques negative translation realizability functional interpretation translation combinations thereof developed 
introducing various different approaches proof mining application monotone functional interpretation modification classical proof uniqueness approximation continuous functions polynomials degree proof extracted effective uniform rate strong uniqueness called uniform modulus uniqueness approximation existence studied years non constructive manner 
reason previous results stated dependencies modulus explicit constants obtained 
show modulus uniqueness compute actual best approximation continuous functions compact interval 
analyze complexity resulting algorithm tools computable analysis cf 
ko wei 
part extraction uniform modulus uniqueness concluded parts development 
report includes indications areas 
development set theory cantor th century kronecker started argue constructive approach mathematics 
followed poincar borel brouwer thesis founded modern intuitionism 
brouwer questioned fact notions mathematics priori validity 
mainly include classical logic non intuitive objects principles 
mathematics making classical logic cited objects principles daily life mathematicians labelled classical mathematics mathematics suggested brouwer named intuitionistic mathematics attempt justify classical mathematics hilbert famous consistency program cp 
roughly speaking hilbert restricted called finitary mathematics supposed accepted consistent se 
cp consisted proving consistent formula theorem 
goal cp achieved proven classical mathematics conservative intuitionistic mathematics called real sentences sentences mathematical community safely continue classical mathematics 
natural step prove consistency prove consistency arithmetical part order peano arithmetic pa done system pra 
classical logic characterised law excluded middle proof contradiction system defined precisely properties described hilbert 
skolem hilbert bernays defined system pra primitive recursive arithmetic came accepted finitary arithmetical system 
shown impossible task second incompleteness theorem 
theorem basically stated arithmetic system containing standard functions number theory prove consistency immediately implies pa prove consistency 
ask kind notion added pa order prove pa consistent 
just gentzen showed transfinite induction prove consistency classical arithmetic 
possible show proof pa transformed cut free proof contradiction obtained cut free proof system pa consistent 
different approach taken time published 
defined system functionals finite type notion introduced primitive recursion finite type 
defined interpretation nowadays called functional interpretation dialectica interpretation interpretation ha heyting arithmetic ha proves formula proves interpretation translation pa ha gets interpretation classical arithmetic shown consistent translation identity obtain pa consistent 
dialectica interpretation 
lectures introduces progressively ideas formalization system interpretation published journal dialectica german 
english translation article suggested took job revising translation adding rewriting footnotes 
satisfied result english translation published collected works 
functional interpretation nice feature proof ya quantifier free formula pa denote proof interpretation obtain modular way term proof xa ha seeds proof mining 
kre kreisel asked shift emphasis proof theoretic research announced program called unwinding proofs described different general program suffer defects hilbert consistency program determine constructive recursive content constructive equivalent non constructive concepts theorems mathematics particularly arithmetic analysis 
tool accomplish program kreisel kre kre developed interpretation called counterexample interpretation see section 
order called negative translation translation independently discovered kolmogorov gentzen 
due embedding pa ha intuitionistic arithmetic considered finitary pa finitary 
bernays defends gentzen non finitary body intuitionistic methods number theory kle pg 

information history functional interpretation see fef gd af 
slogan proof mining suggested ulrich kohlenbach dana scott designate project previously called unwinding proofs georg kreisel described 
obtain interpretation extended called substitution developed hilbert ackerman bernays unwind proof hilbert th problem cf 
del luc 
section introduce various interpretations tools proof mining show combined 
section case study ko application monotone functional interpretation extract new numerically relevant information uniform modulus uniqueness non constructive proof uniqueness best approximation polynomials degree process extracting modulus appendix 
section outline 
due limit number pages assume knowledge classical intuitionistic logic arithmetic systems 
reader familiar order classical intuitionistic logic pl il peano heyting arithmetic pa ha extensional peano heyting arithmetic finite types pa ha weakly extensional heyting arithmetic finite types ha referred bus sho ts 
matter convention variables ranging numbers denote natural numbers respective numerals range terms 
talking ha ha pa denote set finite types 
write represent variable type term type implicitly assumed stand tuples variables tuples terms 
arbitrary formulas sentences quantifier free formulas purely existential formulas 
predicate defined kleene kle see sho true turing machine encoded input halts computation number computation 
predicate decidable primitive recursive predicate yt undecidable recursively enumerable 
material section proof mining substantially af bs bus koh koh tro tv 
proof mining general purpose proof mining extract proof formula system constructive content 
constructive content normally mean realizing term existential quantifiers instance ya want read proof term proved system ha designed way xa proved arbitrary sentences xa exists numeral ha 
called numerical existence property nep 
assuming ha ya numeral know nep exists ha unbounded search 
notice algorithm finding performed meta level term ha ha xa tx primitive recursive functions ha definable 
hand system pa ha lem nep hold general setting 
simple example fact involves undecidable predicate defined 
lem prove pa sentence fixed numerals pa zt 
suppose guaranteed existence numeral pa zt 
decidable general proceeding solving halting problem yt way number unbounded search find pa zt output pa 
decidable recursive set contradiction 
means guaranteed able extract realizing terms existential sentences proved pa case interesting investigate properties formula proved pa certain obtain proof terms realizing existential quantifiers prenex form terms extracted proof possibilities instance look variant instance weakening pa translation realizing terms extracted presenting realizing term just extract set terms realizing term general want obtain theorems structure proved system guarantees realizing terms extracted 
normally achieved detour obtaining proof variant system 
system ha realizing terms easily extractable hopefully terms provide information realizing terms original sections contain rules discussion extended stronger systems analysis pa ac wkl seen section 
form general equal intuitionistic variant translation rule constructive sense proof sentence system exists algorithm transforming proof write alg note soundness theorems called metatheorems rule constructive algorithm proof metatheorems 
applications techniques proof mining include closure results 
give examples applications sections 
interesting discussion constructivism proof translations see vd 
translation herbrand disjunction remove non logical axioms pa get classical order logic pl called predicate logic 
show example previous section applied 
definition formula 

language pl quantifier free define herbrand normal form 



new function symbols note translation weakening pl sake legibility state herbrand theorem formulas 
theorem soundness translation za formula language pl quantifier free 
rule holds pl alg pl suitable terms 

built constants function symbols variables extracted proof call herbrand disjunction example take sentence yt zt 
consider prenex form 
general statement theorem see koh detailed exposition herbrand see bus 
herbrand normal form 
proved pl guaranteed soundness translation terms 
extracted proof pl proved pl fact terms pl 
herbrand theorem extended open theories theories non logical axioms purely universal 
application herbrand theorem proof mining mention luc extraction polynomial bounds proof roth theorem 
modified realizability brouwer heyting kolmogorov bhk constructive interpretation logic proof defined follows mention just clauses proves iff implies proves implies proves proves iff construction transforming proof proof proves iff proves prime formulas notion proof supposed 
bhk interpretation kleene kle gave semantics intuitionistic arithmetic associating arithmetical sentence notion number realizes 
turned systematic method making constructive content arithmetical sentences explicit 
version kleene realizability ha called modified realizability formulated kreisel kre 
stands tuple possibly empty built variables language ha tupling operations 
definition modified realizability formula ha associate formula read modified realizes ha induction logical structure prime formula empty tuple realizes yx negation formula understood abbreviation means 

note free variables contained fv fv 
length type tuple determined logical structure theorem soundness ha 
ha alg ha ha tuple terms extract proof example promised modified realizability show result 
yt zt 
modified realizability translation associated formula zx zx zx yt free variable zx pair zx zx 
suppose ha yt zt 
soundness exists term number term pair yt number 
happen solve halting problem means provable ha order obtain complete characterization need extend system ha axiom choice types ha defined ac xa independence premise type ha free ip ef 
defined axiom schemata schema choice ac ac independence premise schema ip ef ip ef 
theorem characterization ha set free variables ha ac ip ef ha ac ip ef ha ha fv fv 
immediate consequence theorem formulas ac ip ef provable ha realizing terms ha information realizability kle kle tv tro koh 
formula ha called free built prime formulas 
translation negative translation translation way interpreting formulas classical logic intuitionistic logic 
translation discovered independently kolmogorov gentzen easily seen apply classical systems pa pa usual intuitionistic counterparts 
version translation due definition kur pa 
negative translation defined defined induction logical structure 
prime formula 

xa 
xa theorem soundness translation formula pa ha 
rule holds pa alg ha theorem holds replaces pa pa ha ha instance 
simple consequence soundness translation consistency ha implies consistency pa pa inconsistent pa soundness translation ha implies ha inconsistent 
formulas derivable ha ha useful dealing negative translation 
arbitrary formulas xa xa ii iii iv 
example sentence illustrate translation 
pa soundness translation ha 
shift double negations inwards quantifiers ha ii replace negations single ha prime formulas get ha 
translation negative translation obtains proof ya pa proof ya ha free variables pa ya alg ha ya 
ha closed markov rule ha ya ha ya quantifier free know pa conservative ha pa ya ha ya 
need algorithm transforming proof ha ya proof ha ya 
translation simple technique performing translation applies intuitionistic theories 
definition fri ha 
formula ha free variables bounded associate formula ha called translation way results prime formulas replaced theorem soundness translation formulas ha free variables bounded rule holds ha alg ha corollary soundness translation obtain effective closure ha markov rule corollary rule holds ha ya alg ha ya quantifier free 
arithmetical systems ha quantifier free formulas equivalent prime formula suitable term translation developed friedman fri independently investigated dra 
variants translation considered lei tv proof ha quantifier free formula written prime formula see footnote 
way ha ya implies ha yp 
soundness translation yp ha yp yp yp ha yp yp yp yp 
ha arbitrary get ha yp implies ha ya 
translation translation modified realizability assume proved pa statement ya quantifier free 
proof soundness translation obtain proof ya ha 
translation discussed previous section obtain proof ya ha 
soundness modified realizability extract proof term ha ya means ha xa 
notice apply modified realizability directly ya translation empty tuple realizes ya 
combination techniques provides powerful tool extracting realizing terms classical proofs formulas 
drawbacks include translation sound quantifier free rule extensionality imply applied system ha translation establish conservation results markov principle arbitrary formulas see ch 
important achievement approach automatization process berger schwichtenberg system 
system receives input completely formalized proof pa existential statement generates output realizing terms iterative process 
due high complexity completely formalizing proofs just simple examples treated far 
information approach proof mining mur bs refined combination negative translation translation described order reduce complexity extracted term 
bss proofs arithmetic analyzed 
application realizability automated extraction programs constructive proofs hn 
interpretation functional interpretation mentioned interpretation developed purpose providing non finitary proof consistency pa accomplishing original goal variety applications establishing conservation results proof mining 
focus aspect 
definition gd formula ha associate formula ha ad quantifier free fv ad fv defined inductively way 
prime formulas vbd 
ad bd 
ad bd 
ad bd 
ad 
ad xz 
example point differences interpretation modified realizability 
consider formula simplicity quantifier free 
functional interpretation xy interpretation asks function xy true 
hand modified realizability translation realized empty tuple 
theorem soundness interpretation ha free 
rule holds ha alg ha tz tuple closed terms language ha extract proof 
markov principle type defined mp xa quantifier free 
schema markov principle mp mp 
note functional interpretation mp mp realized ac mentioned section independence premise purely universal formulas ip ya ya quantifier free realizing functionals 
ip ip 
way extend soundness theorem interpretation system ha ac ip mp theorem says extension ha characterize interpretation theorem characterization interpretation ha 
ha ac ip mp functional interpretation extended number theories systems feasible arithmetic cu tool extracting programs classical proofs see koh 
comprehensive treatment functional interpretation see af 
translation monotone interpretation modification functional interpretation looking realizing terms searches upper bounds terms defined koh 
combined negative translation monotone functional interpretation translate proofs pa proofs ha manner standard functional interpretation 
reason consider monotone version dependencies extracted term eliminated cases due monotonicity upper bound realizing term 
illustrate consider simple example 
suppose functional interpretation extracts proof za functional bounding variable happens variable ranging real numbers interval monotone second argument functional taken bound formula monotone sense realizes reasoning proof obtaining final term obtain monotone functional interpretation 
number metatheorems proved koh form theorem koh theorem rule holds pa ac qf wkl sx extract pa definable functional ha sx 
purely existential closed term language pa order apply metatheorems proofs analysis objects range real numbers polynomials continuous functions polish spaces general fix representation objects 
happens objects suitably represented viewed number theoretic function function natural numbers theorem applies 
restate theorem applied perspective theorem koh theorem pa definable polish spaces compact consider sentence written formalized language pa form na purely existential 
rule holds pa ac qf wkl na extract pa definable functional ha 
important notice functional depends representation polish space instance case space continuous functions interval elements represented pair functions restriction rational numbers uniform modulus continuity 
applications monotone functional interpretation approximation theory fixed point theory see koh section report 
koh describes general program applying monotone functional interpretation analysis 
counterexample interpretation suppose pa proves formula 

quantifier free 
soundness translation ha proves 

intuitionistically implies 


formula relative interpretation equivalent 




soundness interpretation exist terms 


ha 


kreisel noticed functionals 
taken recursive arguments 
formula came called counterexample interpretation sense 
attempt falsify functionals 
provide witnesses 
blocking counterexample 
explicit connection functional interpretation seen counterexample interpretation quite related herbrand disjunction seen example 
example section saw pa 
counterexample interpretation exists term ha 
see choice terms herbrand disjunction form functionals counterexample interpretation definition cases 
note counterexample interpretation exactly tool proof mining give procedure building terms 
counterexample interpretation tells information obtained technique substitution case kreisel perform actual extraction 
shown koh contrary functional interpretation counterexample interpretation behaves poorly respect modus 
case study uniqueness approximation content section article ko convenience appendix report 
article joint kohlenbach describes full details effective uniform modulus uniqueness approximation extracted classical proof uniqueness statement 
motivations analysis results obtained 
introduce basic notions 
continuous function interval write norm defined dx 
space polynomials degree including denoted function define distance dist inf pn approximation approximation mean extensively studied numerical mathematics considered see pin comprehensive survey 
jackson jac proved function fixed exists unique polynomial dist 
cheney che simplified sense eliminated measure theory generalized jackson proof arbitrary haar subspaces 
proof analyzed 
uniqueness approximation space written dist 
proved pa soundness translation ha proves dist double negations inside real equalities eliminated 
formula intuitionistically equivalent see ii iii section proved ha presenting hidden quantifiers dimensional haar subspace element roots 
note pn haar subspace dimension 
worth noticing representation real numbers cauchy sequences fixed rate convergence equality real numbers abbreviation statement see appendix 
call hidden quantifiers 
dist interpretation dist functional appropriate type 
note mentioned example section modified realizability translation contrast interpretation ask realizing terms 
existence functional form independent linear called strong uniqueness called constant strong uniqueness 
koh notion generalized consider functionals arbitrary dependency 
named uniform modulus uniqueness satisfy 
dist 
important note best approximation continuous functions lives compact subspace instance fixed best approximation belongs triangle inequality uniform norm implies better approximant contradiction 
written dist 
cheney proof formalized pa ac qf wkl established koh metatheorem guaranteed existence uniform modulus uniqueness 
notice proof uniqueness best approximation effective uniform modulus uniqueness 
applications uniform modulus uniqueness define norm 

dimensional tuple real numbers 
max norm defined max max 

term strong unicity introduced newman shapiro ns studied extensively approximation theory 
see bl discussion crucial importance estimates strong unicity convergence analysis iterative algorithms stability analysis 
state art study uniform rates strong uniqueness approximation partially supplied professor 
polynomials viewed tuples real numbers sense speak max norm fixed assume best approximation uniform modulus uniqueness compute cauchy sequence approximants max done functional function max clear defined functional generates double sequence complexity sequence depends complexity functionals complexity integration see section 
important application moduli uniqueness computation unique solutions existence statements investigated koh 
note sequence best approximating polynomials function viewed ways 
sequence sequence actual best approximants space hand sequence sequence polynomials converging sense talk double sequence bj see bj proved uniform modulus uniqueness having form exists constant depended kro kro improved result showing needed depend modulus continuity particular value 
showed dependency optimal 
applying techniques monotone functional interpretation cheney uniqueness proof obtained explicit uniform modulus uniqueness theorem max log log log upper bound sup instance 
functional uniform modulus uniqueness best approximation function having modulus uniform continuity functions going section 
mentioned doing actual extraction uniform modulus uniqueness theorem just looking logical form jackson theorem fact cheney proof formalized pa ac qf wkl knew metatheorem functional extracted 
range compact space extracted functional independent polynomials extract uniform modulus uniqueness 
call priori information information inferred just formalization proof 
corollary theorem obtained explicit version result corollary modulus uniform continuity pn log best approximant pn estimate modulus continuity function see section appendix 
note posteriori information see constant corollary depends contrast priori information mentioned fact independent seen extracting functional 
special cases uniform modulus uniqueness 
function said lipschitz continuous lipschitz constant log modulus continuity lipschitz continuous constant equivalently log modulus continuity 
way function lipschitz continuous lipschitz continuous constant sup take theorem 
corollary log log 
lipschitz continuous constant functional modulus uniqueness ii log cn log lipschitz continuous constant functional modulus uniqueness denote projection operator assigns function best approximation dist 
corollary proposition koh theorem get results directly compared different notions modulus uniqueness uniform modulus continuity 
results compared indirect manner see section appendix 
approximation theory condition called condition exponent 
theorem defined theorem 
modulus pointwise continuity operator 
note case study twofold test techniques proof theory monotone functional interpretation case respect applicability feasibility time obtain new results analysis 
computable analysis sketched section uniform modulus uniqueness compute sequence best approximations function 
mentioned complexity generating sequence depends complexity functionals 
introduce notions computable analysis going useful defining computational complexity sequence possible functionals fully describe sequence computed functionals 
section point estimation complexity algorithm generating classical complexity theory deals countable sets finite alphabet computable effective analysis deals uncountable sets 
ko approach effective analysis defined ko ko 
definitions theorem corollary subsection taken ko small changes notation 
ko approach concepts traced back grz real number viewed converging sequence rational approximations fixed rate convergence 
computability defined framework definition real number computable exists turing machine input outputs rational number words computable exists turing machine generating input rational 
cauchy sequence converging fixed rate suppose input unary 
machine works polynomial time say poly time computable real number holds complexity classes exp np 
go step higher ask complexity function case interested estimating time required compute interested complexity complexity input assuming oracle machine input oracle returns constant time rational number definition function said computable exist turing machines input oracle outputs rational number essentially equivalent approaches computable analysis see instance wei 
fact simplicity complexity analysis ko uses rationals dyadic finite binary representation approximants 
case endeavor give explicit complexity results choice irrelevant 
easy see computable function continuous 
proved computable fixed compact interval computable uniform modulus continuity exists computable 
theorem computable continuous computable uniform modulus continuity 
corollary fact get complete characterization computable functions terms number theoretic functions corollary function computable iff exists computable functions uniform modulus continuity restriction compact interval essential continuous function need uniformly continuous characterization computable functions compact intervals pair computable number theoretic functions define easily complexity real functions 
function poly time computable poly time computable polynomial 
similar definitions regarding complexity classes exp np 
worth noticing restriction compact set talk complexity general 
instance happens unbounded size outputs arbitrarily large time spent compute distinguished time spent write long outputs 
defined means compute real numbers functions reals 
elements viewed tuples real numbers real numbers sequence viewed sequence real numbers equivalently define notion computability sequences definition sequence real numbers said computable exists turing machine input outputs rational case sequence said poly time computable inputs unary machine outputs polynomial time 
uniform modulus uniqueness algorithm receives input outputs max best approximation precisely definition operator nn computes sequence unique best approximations function generates max show explicitly defined uniform modulus uniqueness previous section 
need define auxiliary functionals mentioned section 
denote uniform norm max 
markov inequality states polynomial degree denotes derivative claim proof 
define 
clear dx dx derivative equals markov inequality function function tells small norm coefficients small 
claim log 
max 
proof assume claim 
denote th derivative clear 
applying markov inequality times 




functional show find polynomial pointed section lives compact space idea build finite net elements called net say close triangle inequality yields dist net compute element net precision take gives minimum value smallest code 
norm computed precision dist net upper bound coefficients derived seen claims 
claim 
space polynomials 
net proof take arbitrary element say 
way chose coefficients elements sure find 


dx 

define elements min denotes value norm precision 
shown spell algorithm 
fixed 
want generate polynomial max claim sufficient find theorem find dist building net element 
complexity finding best approximation complexity integration costly step procedure described section search net 
order analyze complexity generating sequence best approximation function case algorithm give estimate size net 
subsequent estimate full analysis complexity algorithm 
intend consider special cases complexity integration taken account provide absolute results complexity sequence 
similar complexity analysis case best approximation uniform norm considered carried ko 
extend result haar subspaces jackson original proof deals problem approximating polynomials bounded degree cheney proof analyzed ko section treats arbitrary haar subspaces dist 
means extract cheney proof general uniform modulus uniqueness parametrized information haar subspace consideration dist 
information normally constructive proof fact haar subspace system 
constructive proof system 
extract function 

functions construction uniform modulus continuity 
alternatively take information functions uniform modulus uniqueness approximation arbitrary haar subspaces form 

sense considering effective representations systems bri bri intend carry extraction uniform moduli uniqueness arbitrary haar subspaces extension result obtained ko 
relation different approaches proof mining seen approaches proof mining 
translation suitable implemented real computer systems hn bs bss extraction information proof performed automatically iterative process 
unfortunately just simple case studies carried due complexity formalizing proofs systems 
hand proof interpretation informal way shortcuts taken trivial steps ignored quite interesting case studies treated ber luc koh koh ko yielding new results functional programming number theory approximation theory fixed point theory 
intend investigate relation different approaches proof mining respect applicability proofs analyzed framework yielding interesting information 
implementation process easily implemented real system running feasible time 
computable analysis domain theory denote set bounded closed intervals poset considered data type real numbers sco 
fact scott domain countable basis set closed intervals rational endpoints 
maximal elements domain singleton sets lub directed subset domain intersection intervals subset 
real number approximated shrinking sequence rational nested intervals 
setting computable real number lub shrinking sequence rational intervals generated turing machine 
similar domain theoretic definitions computability respect functions real numbers banach spaces complete metric spaces 
see eda es es 
notice domain theoretic approach computability weaker respect complexity analysis section 
instance considering real numbers sequence 
rational approximations generate efficiently sequence shrinking intervals rational endpoints way requires unbounded search 
domain theoretic approach priori suitable complexity analysis 
order cope problem idea quantitative domain theory partial order domains equipped qualitative information started developed cf 
sn 
intend study new framework relation domain theory proof mining applying quantitative domain theory analyze complexity extracted terms proofs 
weak fragments analysis weakest second order system considered reverse mathematics appears sim system rca provably total functions primitive recursive functions 
restrictions obtains instance system base theory feasible analysis fer polynomials provably total functions 
shown basic notions analysis formalized 
system defined language strings standard structure domain main point induction restricted induction notation exclusively formulas formulas define exactly np predicates standard model xa 
exponential functional proven total 
benefit proof formalized system extract realizing terms denoting polynomials 
drawback trivial proofs shown formalized 
natural questions involve look proofs formalized weak systems extract interesting new information proofs look balance effectiveness applicability 
worth noting systems full classical logic 
survey weak analysis see 
see cu interpretation systems 
semi classical systems ya quantifier free free variables 
shown theorem proof pa ac qf wkl extract term tx 
system define system moving intuitionistic logic time strengthening principles added ha ac ca ca ac denotes full axiom choice 
semi classical system nice property ya arbitrary bounding term extracted third system defined adding markov principle weakening comprehension wkl ha mp ac wkl 
system enjoys nice feature wkl setting corresponds lesser limited principle omniscience shown ish see man hn cp semi classical systems analysed koh 
area involves studying systems specially looking proofs analysis captured precisely systems 
proofs intend carry extraction hopefully interesting information 
am grateful ulrich kohlenbach stimulating discussions helpful suggestions led various improvements report 
am indebted kohlenbach colleague frank valencia proofreading final draft 
af feferman 
functional dialectica interpretation 
buss editor handbook proof theory volume pages 
elsevier north holland amsterdam 
ber berger 
program extraction normalization proofs 
bezem editor typed lambda calculi applications tlca lecture notes computer science volume pages 
springer verlag 
bj 
continuity metric projection operator iii 
preprint series department mathematics 
royal institute technology 
stockholm mat 
bj 
local lipschitz continuity metric projection operator 
approximation theory 
papers semester stefan banach internat 
math 
center warsaw pages 
bl li 
error estimates lipschitz constants best approximation continuous function spaces 
computers mathematics application 
bri bridges 
constructive development chebychev approximation theory 
journal approximation theory 
bri bridges 
lipschitz constants moduli continuity chebychev projection 
proc 
amer 
math 
soc 
bs berger schwichtenberg 
program extraction classical proofs 
leivant editor logic computational complexity workshop lcc lecture notes computer science volume pages 
springer verlag 
berger schwichtenberg buchholz 
refined program extraction classical proofs 
annals pure applied logic appear 
bss berger schwichtenberg 
warshall algorithm dickson lemma examples realistic program extraction 
journal automated reasoning 
bus buss 
herbrand theorem 
leivant editor logic computational complexity lecture notes computer science volume pages 
springer verlag 
bus buss 
handbook proof theory volume 
elsevier 
ch coquand hofmann 
new method establishing conservativity classical systems intuitionistic version 
math 
struct 
comp 
science 
che cheney 
approximation theory 
ams chelsea publishing 
cp coquand 
intuitionistic choice classical logic 
arch 
math 
logic 
cu cook urquhart 
functional interpretations feasibly constructive arithmetic 
annals pure applied logic 
del 
kreisel unwinding proof 
odifreddi editor george kreisel pages 
peters wellesley ma 
dra 
new kinds realizability 
abstracts th international congress logic methodology philosophy sciences hannover germany pages 
eda edalat 
domains computation mathematics physics exact real arithmetic 
bulletin symbolic logic 
es edalat 
domain theoretic approach real number computation 
theoretical computer science 
es edalat 
computable banach spaces domain theory 
theoretical computer science 
fef feferman 
dialectica interpretation way stretch 
gottlob editor computational logic proof theory lecture notes computer science pages 
springer verlag 
fer ferreira 
feasible theory analysis 
journal symbolic logic pages 
ferreira 
groundwork weak analysis 
journal symbolic logic appear 
fri friedman 
classically intuitionistically provably recursive functions 
scott mller editors higher set theory lecture notes mathematics volume pages 
springer verlag 
gd 
ber eine noch nicht des 
dialectica 
gd 
collected works vol 
ii 
pages 
oxford university press oxford 
grz grzegorczyk 
computable functions 
fund 
math 
hn hayashi nakata 
realizability interpretation limit computable mathematics 
preprint 
hn hayashi nakano 
px computational logic 
mit press 
ish 
omniscience principle lemma theorem 

math 
logik und grundlagen math pages 
jac jackson 
note class polynomials approximation 
transactions american mathematical society 
kle kleene 
interpretation intuitionistic number theory 
journal symbolic logic 
kle kleene 
metamathematics 
north holland publishing 
kle kleene 
foundations intuitionistic mathematics 
northholland publishing 
kle kleene 
mathematical logic 
john wiley sons 
ko 
ko 
computational complexity best approximation 
journal complexity 
ko 
ko 
complexity theory real functions 
boston 
ko ko 
polynomial time computability analysis volume pages 
north holland amsterdam 
ko kohlenbach oliva 
effective bounds strong unicity approximation 
brics report series rs brics 
kohlenbach 
intuitionistic choice restricted classical logic 
appear math 
logic pages 
kohlenbach 
quantitative version theorem due borwein 
appear numerical functional analysis optimization pages 
koh kohlenbach 
theory continuous functionals extraction bounds non constructive proofs effective moduli uniqueness best approximations ineffective proofs uniqueness german 
phd thesis frankfurt pp 

koh kohlenbach 
effective moduli ineffective uniqueness proofs 
unwinding de la valle proof approximation 
annals pure applied logic 
koh kohlenbach 
new effective moduli uniqueness uniform priori estimates constants strong unicity logical analysis known proofs best approximation theory 
numerical functional analysis optimization 
koh kohlenbach 
analysing proofs analysis 
hodges hyland truss editors logic foundations applications pages 
european logic colloquium keele oxford university press 
koh kohlenbach 
proof interpretations 
brics lecture series basic research computer science 
koh kohlenbach 
relative constructivity 
journal symbolic logic 
koh kohlenbach 
counterexample interpretation 
journal symbolic logic 
kohlenbach 
computational content ishikawa fixed point theorems 
weihrauch editors computability complexity analysis cca lecture notes computer science 
springer lncs appear 
kre kreisel 
interpretation non proofs part journal symbolic logic 
kre kreisel 
interpretation non proofs part ii interpretation number theory 
journal symbolic logic 
kre kreisel 
mathematical significance consistency proof 
journal symbolic logic 
kre kreisel 
weak completeness intuitionistic predicate logic 
journal symbolic logic 
kro 
continuity best approximations space integrable functions 
acta mathematica 
kro 
strong unicity approximation 
proceedings american mathematical society 
kur 
untersuchungen der logik 
nagoya math 
lei leivant 
syntactic translations provably recursive functions 
journal symbolic logic sep 
luc 
herbrand des von roth 
journal symbolic logic 
luc 
bounds extracted kreisel ineffective proofs 
odifreddi editor george kreisel pages 
peters wellesley ma 
man 
limited omniscience principle 
bull 
london math 
soc 
mur murthy 
extracting constructive content classical proofs 
phd thesis cornell university 
ns newman shapiro 
theorems approximation 
duke mathematical journal 
pour el ian richards 
computability analysis physics 
perspectives mathematical logic 
springer verlag 
pin pinkus 
approximation volume cambridge mathematics 
cambridge university press 
sco scott 
outline mathematical theory computation 
th annual princeton conference information sciences systems pages 
sho shoenfield 
mathematical logic 
addison wesley publishing 
hansen tucker 
complete local rings domains 
journal symbolic logic 
sim simpson 
subsystems second order arithmetic 
perspectives mathematical logic 
springer verlag 
sn 
tensor products quantitative domain theory 
brookes mislove editors electronic notes theoretical computer science volume 
elsevier science publishers 
tro troelstra 
metamathematical investigation intuitionistic arithmetic analysis lecture notes mathematics volume pages 
springer verlag 
tro troelstra 
realizability 
buss editor handbook proof theory volume pages 
north holland amsterdam 
ts troelstra schwichtenberg 
basic proof theory 
cambridge university press 
tv troelstra dalen van 
constructivism mathematics 
volume 
north holland amsterdam 
vd van dalen 
intuitionism counting 
jean yves okada scedrov editors electronic notes theoretical computer science volume 
elsevier science publishers 
wei weihrauch 
computable analysis 
springer verlag 
appendix effective bounds strong unicity approximation 

