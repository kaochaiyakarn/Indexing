stable model semantics logic programming michael gelfond university texas el paso el paso texas vladimir lifschitz stanford university stanford california propose new declarative semantics logic programs negation 
formulation quite simple time general iterated xed point semantics strati ed programs applicable useful programs strati ed 

belongs direction research attempts de ne declarative meaning logic programs means canonical models 
programs consideration sets rules form lm atom lm literals atoms negated atoms 
rule notational variant formula lm program viewed set rst order formulas 
accordingly talk models logic program 
program di erent models 
instance model program consists nonempty set universe model ii elements universe interpretations constants iii subsets universe interpretations extents predicates restriction choice interpretations rules program true object representing belong extent object representing belong extent extent subset extent idea canonical model approach declarative semantics class logic programs de ned selecting program class models canonical model cm 
model determines answer query considered correct 
instance query variables answered true cm 
canonical model usually selected herbrand models models universe set ground terms language object function constants interpreted way ground term denotes 
herbrand model completely determined ground atoms true identi ed set atoms 
instance herbrand models fp fp reasonable semantics designate rst canonical 
herbrand model minimal proper subset herbrand model 
instance minimal model 
program contain negation exactly minimal herbrand model usual semantics negation free programs selects model canonical model cm 
programs negation may minimal herbrand models 
de ning canonical models programs negation 
important class strati ed programs introduced canonical models de ned strati ed programs iterated xed point construction 
generalizations proposed perfect models founded models 
de nitions imposes restrictions negation researchers agree useful de nition canonical models arbitrary programs see 
theoretical closely related practical issues design logical query languages databases 
uses negation disallowed accepted declarative semantics recognized semantic errors queries 
example nail 
system prohibits ed programs 
close connection existing approaches theory nonmonotonic reasoning including circumscription autoepistemic logic 
particular iterated xed pont semantics strati ed programs equivalently formulated terms concepts 
de nition proposed particularly simple 
uses transformation rules formulas autoepistemic logic inserts belief operator negation negative literal body lb 
mapping thought representation negation failure symbolism autoepistemic logic body rule expresses program gives grounds believing canonical model assigned strati ed program iterated xed point semantics easily described terms autoepistemic theory obtained applying transformation rules 
discuss implementation idea autoepistemic logic sense simpler approach 
de nition new semantics section 
consider examples see semantics applicable useful programs strati ed section 
familiarity autoepistemic logic required understanding parts 
section study relation new semantics canonical model approaches 

stable models logic program set rules form 
assume rule containing variables replaced ground instances atoms ground 
required nite variables eliminated way program uses function symbols herbrand universe nite 
set atoms program obtained deleting rule negative literal body ii negative literals bodies remaining rules 
clearly negation free unique minimal herbrand model 
model coincides say stable set 
sets described xed points operator de ned condition set atoms minimal herbrand model theorem 
stable set minimal herbrand model 
view fact stable sets called stable models 
proof theorem section 
intuitive meaning stable sets described way intuition stable expansions autoepistemic logic possible sets beliefs rational agent hold premises 
set ground atoms consider true rule subgoal point view useless furthermore subgoal point view trivial 
simplify premises replace happens precisely set atoms logically follow simpli ed set premises am rational 
stable model semantics de ned logic program exactly stable model declares model canonical model 
proof theorem 
consider stable set want show model 
rule 
body contains literal true consider rule obtained deleting negative literals body 
rules minimal model clear true hand logically follows consequently true show minimal assume subset model 
show model consider rule obtained rule deleting negative literals body literal show true observe true model negative literal body true obtained resolving literals 
minimal model 
examples negation free coincides minimal herbrand model 
consequently model xed point see minimal herbrand model negation free program stable model 
consider program second rule replaced ground instances fq minimal herbrand model program fp di erent stable 
predicted basis theorem model 
try fp case minimal herbrand model program fp fp stable 
stable models possible sets ground atoms 
clear value includes include atoms 
consequently xed point properties 
xed point sets satisfying condition 
examination shows xed point stable model 

program strati ed iterated xed point semantics applied 
perfect model semantics applicable 
method selects canonical model approach 

query evaluation procedure prolog handles program correctly relative stable model semantics query variables produces answer query belongs stable model 

programs similar play person games 
position winning white legal move position winning black 
legal moves players principle expressed second rule 
ed program unique stable model minimal herbrand model obviously stable 
example illustrates general fact body rule program contains positive literal stable model 
prove notice bodies rules nonempty consequently minimal herbrand model 
kinds programs stable model semantics applicable programs stable models programs stable models 
program consisting just rule stable models 
program fpg fpg 
program consisting rules stable models fpg fqg 
similarly program obtained adding rule stable models fp fp 
symmetry examples suggests hardly possible select single canonical model reasonable way 

interpretation second rule implicitly assumes graph game loop free 
fact adding program meaningless re ects limitation 

relation approaches relation stable model semantics founded semantics investigated general theorem corollary 
founded model model unique stable model 
examples show stable model semantics strictly general founded semantics 
founded semantics coincides perfect model semantics locally strati ed programs theorem conclude corollary 
locally strati ed unique stable model identical perfect model 
programs locally strati ed say areas applicability de nition perfect model semantics partially overlap 
seen applicable program unique stable model 
hand herbrand model perfect stable 
perfect model semantics restricted strati ed programs coincides iterated xed point semantics conclude corollary 
strati ed unique stable model identical iterated xed point model 
relate stable models translation logic programs autoepistemic theories de ned 
recall language autoepistemic logic contains symbols propositional logic modal operator formulas containing called objective 
set formulas 
set formulas stable expansion th flf lf ranges arbitrary formulas th denotes set propositional consequences formulas objective exactly stable expansion ii objective formula belongs follows propositional logic 
logic program variables stands set formulas autoepistemic logic obtained inserting negation 
denote set atoms occurring 
theorem 
logic program unique stable model unique stable expansion 
simple proof theorem belongs przymusinska 
lemma 
stable expansion stable expansion proof 
sucient show flf lf equivalent flf lf set flf lf contains lf lf atom 
presence literals equivalent proof theorem 
stable model 
set objective formulas exactly stable expansion th stable expansion lemma follows stable expansion 
remains show stable expansions 
stable expansion 
lemma stable expansion set objective formulas objective formula belongs propositional consequence consequently th stable model 
stable model follows stable expansion consequently grateful krzysztof apt matthew ginsberg kurt konolige katherine morris przymusinski kenneth ross yoav shoham je rey ullman allen van gelder useful discussions 
especially przymusinska comments permission include proof theorem 
research partially supported darpa contract 
apt blair walker theory declarative knowledge minker ed foundations deductive databases logic programming morgan kaufmann publishers los altos ca 
chandra harel horn clause queries generalizations journal logic programming 
van emden clark logic person games clark mccabe micro prolog programming logic prentice hall 
van emden kowalski semantics predicate logic programming language journal acm 
gelfond strati ed autoepistemic theories proc 
aaai 
konolige relation default autoepistemic logic ginsberg ed readings nonmonotonic reasoning morgan kaufmann publishers los altos ca 
lifschitz declarative semantics logic programs negation minker ed foundations deductive databases logic programming morgan kaufmann publishers los altos ca 
marek stable theories autoepistemic logic unpublished note department computer science university kentucky 
mccarthy applications circumscription formalizing commonsense knowledge arti cial intelligence 
moore semantical considerations nonmonotonic logic arti cial intelligence 
morris ullman van gelder design overview nail 
system goos hartmanis eds third international conference logic programming lecture notes computer science springer verlag 
przymusinski declarative semantics strati ed deductive databases logic programs minker ed foundations deductive databases logic programming morgan kaufmann publishers los altos ca 
przymusinski personal communication october 
van gelder negation failure tight derivations general logic programs minker ed foundations deductive databases logic programming morgan kaufmann publishers los altos ca 
van gelder ross schlipf unfounded sets founded semantics general logic programs proc 
seventh symp 
principles database systems 
