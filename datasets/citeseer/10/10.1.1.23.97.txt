competitive analysis elias koutsoupias christos papadimitriou 
competitive analysis line algorithms criticized crude unrealistic 
propose re nements competitive analysis directions rst restricts power adversary allowing certain input distributions allows comparisons information regimes line decision making 
illustrate rst application paging problem byproduct characterize completely functions important special case server problem 
second re nement explore power lookahead server task systems 
key words 
line algorithms competitive analysis paging problem metrical task systems ams subject classi cations 


area line algorithms shares complexity theory characteristic importance reasonably denied algorithmic theory decision making uncertainty obvious foundational signi cance practical relevance certain aspects basic premises modeling assumptions results widely criticized respect realism relation computational practice 
revisit voiced criticisms competitive analysis basic framework line algorithms heretofore studied analyzed propose explore better motivated alternatives 
competitive analysis performance line algorithm compared powerful adversary worst case input 
competitive ratio problem analog worst case asymptotic complexity area de ned min max opt ranges line algorithms inputs opt denotes optimum line algorithm cost algorithm input clever de nition weakness strength competitive analysis 
strength setting clear problems crisp deep results elegant striking 
weakness reasons 
face devastating comparison powerful line algorithm wide range line algorithms bad mediocre fare equally badly competitive ratio informative fails discriminate suggest approaches 
aspect problem worst case input decides performance algorithm optimal algorithms unnatural impractical bounds pessimistic informative practice 
enhancing capabilities line algorithm obviously desirable ways limited lookahead capability brings improvement ratio discussed extensively 
main argument competitive analysis classical approach minimize expectation distribution computer science department university california los angeles ca elias cs ucla edu 
research supported part nsf ccr 
computer science division university california berkeley ca christos cs berkeley edu 
research supported part national science foundation 
koutsoupias papadimitriou usually known 
competitive analysis takes argument way far assumes absolutely known distribution distribution inputs principle possible worst case distribution prevailing competitive analysis course worst case input probability 
complete unrealistic practitioner know learn distribution inputs theoretician persuasion absence prior distribution information unrealistic mathematical economist 
paging problem simple fundamental practically important line problem illustration points 
unreasonably wide range deterministic algorithms practice lru empirically mediocre fifo competitive ratio amount available memory 
algorithms powerful information regimes example algorithm lookahead pages provably fare better 
admittedly interesting variants framework partially successful addressing concerns 
randomized paging algorithms realistic performance 
alternative approaches evaluating line algorithms proposed general case speci cally paging problem 
propose study re nements competitive analysis go long way addressing concerns expressed 
importantly show ideas give rise interesting algorithmic analytical problems begun solve 
rst re nement di adversary model removes assumption know distribution resorting equally unrealistic classical assumption know 
assume actual distribution inputs member known class 
possible distributions 
seek determine class distributions 
performance ratio 
min max 
ed ed opt adversary picks distribution 
expected performance algorithm line optimum algorithm far apart possible 
notice 
class possible distributions coincide worst possible distribution assigns probability worst case input probability zero 
di adversary model re nement competitive analysis 
paging problem example input distribution speci es page sequence page requests prob aj probability page fault sequence far 
operating system knows distribution precisely 
hand unrealistic assume distribution possible 
example suppose page request predictable absolute certainty prob aj real number capturing inherent uncertainty request sequence 
simple natural quite motivated assumption call class distributions obeying inequality 
immediate question line algorithm achieves optimal competitive ratio 
turns answer quite interesting 
optimum line algorithm robust turns familiar algorithm competitive analysis practice lru 
noteworthy lru emerges analysis unique natural optimal algorithm algorithms may optimal 
important byproduct analysis extending completely characterize functions paging special case server problem 
preliminary version appeared incorrectly stated competitive ratio :10.1.1.43.3592
simple markov chain states 
fact answer complicated 
competitive ratio optimal markov chain family markov chains states 
second re nement competitive analysis proposing deals line criticism traditional competitive analysis powerful adversary interesting algorithms powerful information regimes 
classical example paging paging best competitive ratio line algorithm line algorithm lookahead steps algorithm knows immediate 
easy see algorithm fare equally badly algorithms lookahead 
proof consider worst case request sequence 
take version 
easy see algorithm lookahead face sequence lookahead 
absolute power adversary blurs practically important distinctions 
lookahead obviously valuable feature paging algorithms 
competitive analysis evaluate power 
notice question ectiveness single algorithm classes algorithms power information regimes ultimately value information 
formulate answer similar questions introduce second re nement competitive analysis call comparative analysis 
suppose classes algorithms typically necessarily usually broader class algorithms powerful information regime 
comparative ratio de ned follows max min max de nition best understood terms game theoretic interpretation wants demonstrate powerful class algorithms 
proposes algorithm 
response comes algorithm chooses input pays ratio 
larger ratio powerful comparison notice class line algorithms class algorithms line line equations coincide comparative analysis re nement competitive analysis 
illustrate comparative analysis attacking question power lookahead line problems server type class algorithms lookahead class line algorithms show general context metrical task systems ratio metrical task systems exactly koutsoupias papadimitriou restricted context paging minf kg 
di adversaries 
competitive ratio di adversary equation 
order analysis independent initial conditions shall allow additive constant numerator 
precisely deterministic line algorithm competitive class 
input distributions exists constant distributions 
ed 
ed opt competitive ratio algorithm mum 
competitive ratio 
class distributions minimum competitive ratio achievable line algorithm 
important observe 
class acceptable conditional probability distributions 
distribution relevant part world conditioned currently available information 
easily extend de nition randomized line algorithms 
deal deterministic line algorithms 
case paging problem set pages 
set probability distributions page sequences equivalent natural way describe 
set conditional distributions functions form 
aj sum may may choose sequence 
game theoretic interpretation sequence requests develops adversary chooses values aj available 
maximize ratio 
deal deterministic algorithms adversary knows precisely past decisions adversary choices may severely constrained 
indicative power di adversary model proposals realistic competitive analysis simply special cases 
example locality paging problem captured di adversary model 
consists conditional probability distributions aj edge access graph aj 
similarly markov paging model statistical adversary model special cases di adversary model 
rst case class 
distributions contains conditional distribution 

jb case 
assigns probability request sequence satis es statistical adversary restriction 
section apply di adversary model paging problem 
shall focus class distributions 
contains functions 
say conditional distributions value exceeding 
rst diverge order give useful characterization functions paging problem 

structure paging functions 
paging problem server problem uniform metric spaces certain key concepts server theory useful see detailed exposition 
definition 
denote number page slots fast memory set pages 
con guration subset denote set di adversaries related di usion processes probability theory continuous path markov processes 
competitive analysis con gurations function associated sequence simply important understood context function 
de ned follows optimum number page replacements sequence requests nal memory con guration notice cases example con guration contain request page replacements may occur page faults insist nal con guration henceforth symbols denote set union set di erence respectively 
represent unary sets element write fag 
denote cardinality set jsj 
definition 
function de ne support con gurations di erent jx intuitively values support completely determine support min fw jx jg 
furthermore safely assume optimal line algorithm adversary con guration support 
see consider con gurations jx optimal line algorithm advantage con guration servicing con guration move exceeding cost words optimal line algorithm replaces page necessary con guration support 
lemmata speci paging problem true general server problem characterize possible functions determining structure support 
similar complicated characterization implicit 
rst lemma states con gurations support value matters support values 
lemma 
support function contains con gurations achieves minimum value 
proof 
contradiction assume con guration support minx 
choose con guration minimizes jb aj 
condition holds 
rst case get contradicts assumption support second case leads contradiction violates choice minimum jb aj aj jb aj 
con guration optimal line algorithm support lemma shows line cost service request simply increase minimum value function 
result determined line adversary page fault 
lemma determines structure support 
lemma 
function increasing sequence sets frg request support precisely fx jx jg koutsoupias papadimitriou postpone proof lemma introduce new de nitions 
call tuple lemma signature signature completely determines support 
doesn unique 
example function support consists con guration fa 
signatures permutation fa 
de ne type tuple js js js 
function may signatures type unique easy see function signatures js prove lemma 
proof lemma 
proof induction length request sequence 
basis case obvious fa fa initial con guration 
induction step assume signature resulting function request consider rst case belongs kg 
con guration support contains request minimum value minimum value support subset support consists con gurations belong support contain request easy verify signature frg hand request belong minimum value minimum value case support consists con gurations support point replaced request server moved service consequently signature frg induction step follows 
note converse lemma needed sequel holds tower de nes reachable function exists signature de ne canonical ordering permutation pages page precedes page requested furthermore pages requested ordered xed ordering example lexicographic ordering 
example canonical ordering request sequence 
am form 
ja ja ja obvious property canonical ordering new request doesn change ordering movement front 
follows proof lemma know canonical ordering 
type function determine signature function consists rst pages canonical ordering fa call signature canonical signature competitive analysis type corresponds canonical signature denote type results request proof lemma get 
rst type corresponds request request notation types write write motivation notation relation addition 
state crucial property functions 
lemma 
request sequences result canonical ordering 
types functions respectively 
con guration support support furthermore con guration support con guration support di ers position 
proof 
canonical signatures rst case lemma trivial second case suces handle largest possible may assume 
consider con guration support show con guration support jy 
page canonical ordering 
rst page canonical ordering claim di ers position support notice rst contains page contains second page canonical ordering page equal remains show jy cases consider rst case jx follows fact second case jx suces note 
optimality lru 
turn 
di adversary 
goal section show lru optimal competitive ratio di adversary 
usual approach show line algorithm optimal competitive ratio compute ratio show algorithm smaller competitive ratio 
diculty compute competitive ratio lru 
compare directly lru online algorithm 
show line algorithm adversary conditional probability distribution 
adversary 
competitive ratio competitive ratio lru face problem may complicated may erratic 
attack problem steps 
standardize class adversaries showing suces consider class adversaries koutsoupias papadimitriou call conservative de ned shortly 
particular show 
better conservative adversary 
lru lru competitive ratio second show conservative 
lru conservative adversary 
competitive ratio lru competitive ratio understand lru optimal di adversaries motivate notion adversaries start asking property optimal line algorithm 
intuitively signature current function optimal line algorithm prefer fast memory pages pages intuition pages valuable line algorithm pages con guration support remains support replace page page converse hold general 
lru exactly 
fact lru keeps fast memory rst pages canonical ordering appropriate initialization 
intuition suggests adversary prefer request page page exception line cache 
case unclear page adversary choose tradeo hand favorable increases line cost 
hand favorable resulting support larger increases line cost 
intuition suggests notion conservative adversary 
conservative adversary assigns probability favors pages smaller rank canonical ordering pages line cache similarly pages line cache 
precise request sequence results canonical ordering con guration line algorithm conservative adversary assigns probabilities property receives positive probability receives maximum probability 
similarly pages probabilities 
completely determined total probability assigned pages add additional constraint proofs call page receives probability equivalently integral multiple 
example line cache consists pages canonical ordering pages receive probability 
reasonable optimal adversary lru conservative going shortly prove case 
line algorithms conservative adversaries may optimal especially unreasonable highly suboptimal line algorithms 
central idea proof disregard problem 
conservative adversaries optimal line algorithm suces show conservative adversary forces competitive ratio ratio lru 
show optimal adversary lru conservative 
lemma 

conservative adversary 
competitive ratio lru competitive ratio lru proof 
proof induction number requests 
facilitate induction strong inductive hypothesis 
allow initial function function support contains con guration 
competitive analysis opt optimal cost service initial function type canonical ordering simplicity notation type functions write opt opt 
notice initial type ect behaviour lru simply write lru denote cost lru sequence request 
second don know competitive ratio lru simply fact competitive ratio positive safely assumed competitive ratio 
inductive hypothesis 
conservative ed lru xn 
opt lru xn 
opt type initial function xn denotes sequence length drawn conditional probability distribution equivalently show conservative maximizes ed lru xn 
opt induction number requests prove 
assume induction hypothesis holds distribution maximizes ed lru xn 
opt 
conservative show alter get conservative adversary maximizes 
proof proceeds follows may conservative induction conservative rst request 
want show rst request conservative 
denote resulting conditional distribution rst request th request canonical ordering 

ja 
denote type function results request initial canonical signature 

probability assigned page conditioned empty sequence indicator function takes value true 
terms inside sum right hand side correspond line line cost rst request 
induction replace conservative decreasing right hand side 
loss generality assume distributions conservative 
conditional distributions optimal probabilities rst request computed follows order pages decreasing 
value assign probability rst pages assign remaining probability course page 
simply want guarantee probabilities assigned conservative manner 
equivalently lru cache lru cache suces show 

rst consider case crucial point establishing assume koutsoupias papadimitriou see consider adversary identical rst request continues account difference canonical orderings 
formally 
canonical ordering results rst request 
rst request ja 
ja 


apply lemma get opt opt turn implies 

hold maximizes course desired property 
combining fact get holds inequality holds identical argument establishes case remaining case treated similarly 
case implies opt opt 
inequality implies fact get 
lemma establishes best adversary lru conservative 
proceed second part proof lru optimal competitive ratio 
show line algorithm conservative adversary 
lru adversary 
competitive ratio lru competitive ratio main idea constructing enforcing line cost lru equal line cost allows compare competitive ratios lru simply comparing corresponding line costs 
design cost lru equal cost rst request obvious probability assigns pages cache equal probability assigns pages lru cache 
second subsequent requests situation depends previous requests outcome random experiments 
general conservative adversary algorithm corresponds nite rooted tree outdegree node weight minfk furthermore integral multiple 
paths tree correspond request sequences values total probability assigned adversary pages line cache 
precisely request sequence produced starting root descending tree 
node adversary assigns probabilities conservative manner total probability assigned pages current cache 
adversary conservative pages receive non zero probability 
pages rst pages current cache pages outside cache canonical order 
request outcome random experiment adversary moves th child repeats process produce request 
call conservative adversary adversary denote notice conditional probability distribution depends line algorithm algorithm may di erent 
depends initial con guration competitive analysis simplicity omit notation 
simple design expected cost equal expected cost lru tree lru suces show expected optimum cost expected optimum cost precisely show expected line cost service request sequence length produced lru line cost service request sequence length produced induction length request sequence 
order facilitate induction generalize problem assuming initial function 
proof lemma notation include type function 
precisely denote expected line cost service request sequence length produced conditional distribution initial function type show lru 
rst need simple lemma 
lemma 
conservative adversaries lru lru lru lru 
proof 
crucial observation lru depend initial type function initial canonical ordering 
immediate consequence conditional probability distribution lru independent initial function 
consider rst case lemma line cost service request sequence starting function type line cost service request sequence starting function type canonical ordering lru lru 
case handled similarly 
ready show expected line cost request sequence produced tree maximized line algorithm lru algorithm 
lemma 
tree line algorithms lru 
proof 
induction lemma trivially true 
assume lemma holds 
denote subtree rooted th child root lru request produced adversary descends algorithms lru respectively 
lru denote resulting type requests lru important notice lru property algorithm proof 
child chosen probability depends value root probability values child integer 
obviously equal expected value plus line cost rst request line cost words 
similar expression holds lru 
suces show lru lru lru 
consider cases values lru rst case lru get lru lru lru lru lru lru koutsoupias papadimitriou rst inequality follows induction hypothesis second lemma lru second case lru get lru lru lru lru lru lru 
rst inequality follows induction hypothesis second lemma lru third case lru handled similarly lru lru lru lru lru 
lemmata establish main result section 
theorem 
lru optimal competitive ratio 
paging di adversary model 
lemmata provide ecient way estimate competitive ratio 
approach suggested lemmata nondeterministically guess optimal conservative adversary compute competitive ratio lru adversary 
conservative adversary determined values multiples integer slightly complicated integer 
conservative adversary competitive ratio lru nite markov chain states markov chain reachable types types 
approach provides doubly exponential algorithm approximately compute 
interesting open problem determine 
function 
extreme values know 
lim 

rst case adversary complete power second case su ers page fault step 
young estimated 
factor 
maxf approximately ln 
simplest case determining competitive ratio trivial 
give lower bound believe exact 
competitive ratio conservative adversary assigns non zero probability exactly page pages line fast memory 
proposition 
integer 
proof 
consider conservative adversary assigns probability pages current canonical ordering rank 
notice page assigned zero probability 
request page rank identical previous request change 
adversary equivalent adversary assigns probability pages rank 
type current function 
table summarizes possibilities request probability resulting type associated line line cost servicing request 
request probability type line cost line cost summary competitive ratio markov chain states types 
transition probabilities state competitive analysis table 
dicult see markov process identical random process phase repeatedly choose uniformly number ng phase ends number chosen twice 
state corresponds case numbers drawn 
random process generalization known birthday problem probability theory 
phase corresponds cycle markov chain starts ends state type 
expected line cost phase equal length phase minus transitions cycle line cost 
similarly expected line cost phase equal length phase transitions line cost 
hard verify expression 
purpose bounding expected length phase notice rst numbers probability phase 
contrast numbers probability phase 
elaborating observation get interval 
numerical evaluations suggest value approximately 
preliminary version incorrect proof optimality lru :10.1.1.43.3592
proof ed assumption conservative adversary achieves optimal competitive ratio lru assigns probability exactly page line fast memory 
pointed neal young see assumption hold general 
important open problem determine competitive ratio known paging algorithms di adversary 
important direction estimate competitive ratio fifo 
young estimates competitive ratio marking algorithms lru fifo marking algorithms factor 
gives similar bounds randomized algorithms 
proof optimality lru suggest certain values competitive ratio fifo optimal 
particular fifo keep fast memory rst pages canonical ordering equivalent set pages 
indication conservative adversary may force fifo larger cost lru 
conjecture fifo suboptimal values 
case add extra validity paging di adversary model sense model distinguish lru fifo 

comparative analysis 
line algorithms deal relations information regimes 
formally brie information regime class functions domain range constant xed partition re ning partition results richer regime 
traditionally literature line algorithms comparisons basic information regimes line line regime line regime corresponds fully re ned partition 
argued left unexplored intricate comparisons important information regimes 
comparative analysis generalization competitive analysis allowing comparisons arbitrary information regimes comparative ratio de ned equation 
naturally comparisons sense corresponding regimes rich algorithms single algorithms lend useful comparisons 
case competitive ratio di adversary model usually allow additive constant numerator equation 
apply comparative analysis order evaluate power lookahead task koutsoupias papadimitriou systems 
line algorithm metrical task system lookahead base decision past requests 
line algorithms lookahead comprise information regime class traditional line algorithms 
metrical task systems de ned metric space server resides point metric space move point point 
goal process line sequence tasks server free move position task pay distance 
cost processing task determined task position server processing task 
total cost processing sequence sum distance moved server plus cost servicing task theorem 
metrical task system 
furthermore metrical task systems 
proof 
trivially theorem holds 
assume algorithm shall de ne line algorithm lookahead cost sequence tasks times cost algorithm typical line algorithm comparative analysis tries eciently simulate powerful algorithm particular knows position steps ago 
order process task moves rst known position processes task greedily minimum possible cost 
sequence tasks points algorithm processes task corresponding points algorithm simplicity de ne points negative 
cost algorithm cost algorithm recall order process th task algorithm moves known position processes task greedily smallest possible 
particular fact costs nonnegative triangle inequality get bound cost algorithm triangle inequalities form competitive analysis expand 
similarly expand 
observe term appears times term appears twice 
conclude cost algorithm expression times cost algorithm show converse consider task system metric space rooted binary tree distance adjacent vertices 
greedy algorithm lookahead 
words services task way minimizes total cost service tasks 
consider algorithm lookahead 
describe sequence tasks force comparative ratio position services task appropriate initialization assume depth 
task nite cost vertices vertices depth distance current position move vertices move level level 
cost vertices 
cost service task cost lookahead power simply walks tree 
lower bound uses nite metric space nite metric space looks locally binary tree 
particular consider butter fft graph levels identify rst level 
embed nite binary tree graph way subtree levels embedded isometrically manner 
conclude task systems metric spaces points comparative ratio 
leave interesting open problem determine comparative ratio smaller metric spaces 
course certain task systems comparative ratio may 
paging problem minf kg 
theorem 
paging problem minf kg proof 
minf algorithm paging problem class lookahead 
loss generality assume moves pages service requests 
consider line algorithm generalization lru service request fast memory evicts page distinct requests including 
remaining pages chooses evict page resulting con guration close possible known con guration requests fast memory 
show comparative ratio suces show consecutive page faults su ers page fault 
achieved showing subsequence requests causes page faults page fault algorithms con guration 
show induction number requests stronger claim subsequence koutsoupias papadimitriou requests cause page faults fault con gurations di er pages 
fix request sequence con gurations service 
base induction trivial 
assume induction hypothesis holds 
deal cases 
su ers page fault inductive step follows fact ja ja similarly request su ers page fault ja ja induction hypothesis 
assume page evicted service easy see ja ja 
nal complicated case de nition algorithm requests consequently follows fr choose evict fr obvious relation fr recall assumed moves pages service requests 
su ered page fault requests 
set fr cardinality conclude ja implies desired ja show minf kg lower bound comparative ratio variant optimal line algorithm adapted lookahead 
precisely evicts requests 
fix set pages 
clearly request sequence su ers page fault consecutive requests 
lower bound follows algorithm request sequence su ers page fault request 

open problems 
introduced re nements competitive analysis di adversary model comparative analysis 
restrict power adversary rst allowing certain input distributions second restricting re nement adversary information regime 
general believe natural way deal uncertainty designing algorithms perform worst world compatible algorithm knowledge 
lot interesting open problems suggested approach 
important open problem determine competitive ratio fifo paging di adversary model 
mentioned conjecture fifo general suboptimal 
numerous applications frameworks evaluating line algorithms 
simply mention challenging open problems 
markov di adversary 
consider paging problem 
suppose request sequence output sequence unknown markov chain intuitively program generating page requests states partially observe output 
output state unknown markov process page allowed distributions 
output distributions state markov processes output 
may want restrict line algorithms ones attempt exhaustively learn markov competitive analysis process 
way bound length request sequence 
better way require additive constant independent believe useful model paging study solution may enhance understanding performance actual paging systems 
power vision 
consider robots vision visual sensors detect objects distance vision want measure disadvantage rst robot navigating exploring terrain second robot 
naturally comparative analysis appropriate framework type problems 
di erent restrictions terrain objective robot result di erent problems nd simple problem particularly challenging plane objects points 
objective robot construct map plane nd position objects 
ask comparative ratio problem denote information regimes vision respectively 
ben david borodin new measure study line algorithms algorithmica pp 

borodin irani raghavan schieber competitive paging locality proceedings rd annual acm symposium theory computing pp 

borodin linial saks optimal online algorithm metrical task systems proceedings th annual acm symposium theory computing pp 

chrobak server problem line games line algorithms proceedings dimacs workshop 
dimacs series discrete mathematics theoretical computer science pp 

fiat karp luby mcgeoch sleator young competitive paging algorithms journal algorithms pp 

irani karlin phillips strongly competitive algorithms paging locality proceedings third annual acm siam symposium discrete algorithms pp 

karlin phillips raghavan markov paging proceedings rd annual symposium foundations computer science pp 

koutsoupias papadimitriou competitive analysis proceedings th annual symposium foundations computer science pp :10.1.1.43.3592

server conjecture proceedings th annual acm symposium theory computing pp 

manasse mcgeoch sleator competitive algorithms line problems proceedings th annual acm symposium theory computing pp 

mcgeoch sleator strongly competitive randomized paging algorithm algorithmica pp 

raghavan statistical adversary line algorithms line algorithms proceedings dimacs workshop 
dimacs series discrete mathematics theoretical computer science pp 

raghavan snir memory versus randomization line algorithms proceedings th international colloquium automata languages programming pp 

sleator tarjan amortized eciency list update paging rules comm 
acm pp 

young server dual loose competitiveness paging algorithmica pp 

young bounding di adversary proceedings ninth annual acm siam symposium discrete algorithms pp 

