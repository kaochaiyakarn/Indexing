strategies seeking reusable components smalltalk yz graduate school information science software engineering laboratory nara institute science technology software research associates cho shi nara ken japan tokyo japan aist nara ac jp object oriented languages help software reusable class libraries difficult programmer knows library 
particular hard find understand components programmer may want reuse 
study focuses novice programmers solving programming tasks require reuse components 
take depth look programmers find necessary components identify strategies achieve 
comment type tool necessary viewpoint strategies 
reuse long touted way increase software productivity quality 
object oriented technology widely expectations reuse grown reported advantages object oriented paradigm conventional procedural paradigm reusability 
claim supported empirical evidence 
reasons object oriented paradigm advantage class library 
normal procedural libraries object oriented class library characteristics data abstraction inheritance polymorphism 
example due inheritance modules varying levels abstraction may exist programmers reuse properties defined class 
programmers class libraries writing code object oriented languages smalltalk class library built making programmers class library writing code 
order programmer reuse component class library locate reusable component understand modify incorporate 
efficient class library components class library easy find understand modify 
problem locating reusable components looked closely problems stated follows ffl size size library may hard find desired class 
example visualworks specific implementation smalltalk classes 
ffl vocabulary vocabulary barrier potential vocabulary mismatch terminology library terminology reuser 
ffl inconsistency user class experience class library positioning desired class may different user knows 
problems may significance programmer knows detail class library 
novice programmers problems serious barrier 
done tools support problem finding candidate classes known programmers carry reuse code object oriented language 
lange conducted single subject study subject selected existing class template defining new class subject showed approach comprehension avoidance 
rosson programmers rely heavily code example applications programmers searched relevant code early programming 
studies expert programmers 
reports study complements results prior research 
study focuses novice programmers go finding necessary components may know 
smalltalk japanese version visualworks programmers solve tasks 
note strategies programmers took find components necessary solving tasks 
major difference study prior studies lange rosson expert programmers novice programmers 
comparing novice expert programmers problems facing novice programmers difficulty correctly selecting candidate components reuse 
find candidate components go doing area worked 
smalltalk study object oriented languages reuse widely carried smalltalk due rich class library 
rich class library hand causes smalltalk suffer problem matter reusable components environment useful programmers able find components 
study exploratory aim covering possible strategies programmers may take trying find reusable components smalltalk 
aims showing possible strategies may take see ways support tools 
section remarks finding components smalltalk class library 
section describes methodology taken study 
section gives qualitative results study 
section discusses search strategies employed programmers 
section discusses issues concerning tools differences novices experts section making concluding remarks 
give brief description tools mention appendix 
smalltalk visualworks smalltalk just language system class library environment having tools support programming browsers see appendix brief descriptions tools 
basic set tools may finding components especially novice programmers 
example ways currently available visualworks find classes follows ffl system browser 
entail searching class categories finding classes 
categories contain classes related terms purpose useful finding appropriate classes 
may case 
classes may appropriately put class category 
example class certain application mind may put category classes application 
second classes put categories alleviates problem go possible category linear ordering categories starting point search dictate class reused 
ffl class hierarchy browser 
option exists probably feasible due number classes hierarchy especially object root class smalltalk class hierarchy hundreds subclasses 
combination strategies possible 
ffl keyword search 
probably commonly option 
biggest problem keyword exactly match substring class name 
appropriate name thought advance 
happens programmer think appropriate name 
vocabulary problem serious problem case 
options depending scenario 
example may possible resource finder search applications may function wanted start 
possible online documentation find desired class 
design study overview study concerned novice programmers find components may know 
main goal find types strategies programmers take trying find components may need smalltalk 
subjects put groups asked modify small address book application consisting classes 
subjects group talked performing tasks allows analysis behavior constructive interaction technique 
application study week preliminary session conducted get conditions study carried 
actual study tasks conducted 
subjects subjects took part study 
novices having taken hours smalltalk programming courses study 
knew functionalities tools visualworks environment provides complete understanding class libraries visualworks environment offers 
division subjects groups done programming subject done smalltalk programming course 
henceforth groups referred group group tasks subjects asked tasks ffl task paste gif image main window address book 
ffl task format address list shown main window address book names addresses phone numbers aligned 
address book tasks preliminary session 
goal study find novice programmers find necessary components understand program program study 
task different class libraries added default smalltalk class library 
contrast address book 
wanted minimize amount learning occur class libraries study 
class libraries added table ordering solving tasks group group task task ffl task classes image searching browsing application ffl task classes metrics application memory management application nature additional classes task different subjects familiar image searching browsing application 
full understanding working behavior code level 
hand subjects familiar additional applications task 
study method study held table task carried different day 
groups tasks group carried task different order 
members group talked carrying tasks 
mm video camera placed record actions speech 
additionally screen display recorded microsoft camcorder 
task completed interview done 
subjects allowed see wanted 
provided ffl visualworks user guide english japanese ffl visualworks cookbook english japanese ffl visualworks object english ffl art science smalltalk ffl smalltalk application development visualworks allowed classes class library time experiment 
allowed classes existed examples online documentation 
results analysis tasks simple smalltalk expert viewpoint complex subjects viewpoints took hours complete task 
understand components available possible solution incorporate components existing program 
basic components ways solve task 
rest section give overview results group task 
give results viewpoint finding necessary components 
overview results group task cleanest terms final amount changes code 
amount changes minimal extra classes methods solve task fashion 
notable point group task checked classes example application ways read gif image file find image pasted window function existed example application knew 
post task interview subjects commented check knew developer application thought mvc extensively difficult solve task understand mvc 
group task cleanest terms strategy achieve result 
basically checked applications know hints 
rest task solving application built 
notable points group task ffl group task online documents 
ffl talked possibility sort table key solution 
model view controller mvc basic paradigm functionality application graphical user interface divided types models views controllers 
group task terms final code 
solution consisted heavily reusing additional application class 
reused class copying methods address book class additional application class copying necessary methods address book class placing address book class subclass example application class 
resulted understanding code additional application class necessary complete task 
resulted wanting finish task soon possible 
group task took longest complete group went couple dead ends 
tried spaces tabs align items strategy number ways gave 
came table proper class enabled finish task 
dead ends unnecessary methods added 
finding necessary components certain components finds order complete tasks 
components just classes methods widgets 
section necessary widgets necessary classes methods 
finding widgets 
widgets necessary follows ffl task ffl task table summarizes group necessary widget 
task group group necessary components needed finish task find widget near 
tried manually paste image main window address book 
succeeded pasting image able keep image visible window overlapped address book main window 
looked cookbook especially studied section integrating graphic application method allows displaying graphic object graphic context supplied argument 
checked classes method decided add method address book happened 
due fact method useful view classes mvc framework model classes 
class added method model class occurred 
looked books subjects noticed dependencies 
tried dependency mechanism image time happened main window 

thought making changes class method information concerning placement type widget located gave 
consulted books especially looked types widgets usable visualworks 
widget 
group widget easier checked sort widgets example application included 
subjects knew example image searching browsing application images pasted windows 
noted previous section subjects group knew programmer example application thought code completely mvc canvas tool search possible widgets may fruitful 
interesting point concerning group task fact started task searching widgets palette tool 
tool contains basic widgets supported visualworks 
search came widget realize importance time 
task group case group group encountered widget early task 
contrast group group encountered checked type widget example application window 
noticed widget actively pursue time opting check classes image class names 
came view holder manual 
occurred class necessary read gif file 
subjects looking methods class manual 
methods akey described follows builder uses get view object inserted view holder view property akey 
visualworks object pp looked part manual opened canvas tool put widget started experimenting method 
task group group table widget looking example applications 
ran applications know checked sort functions sort aligned listing items appear 
applications align items rows columns 
canvas tool find widget 
task group group gave trying align items tabs spaces started cookbook 
noticed existence table example section concerning datasets 
ran example applications contained visualworks concerning datasets 
subjects trying dataset example subject continued looking cookbook noticed existence tables 
ran example applications included online documentation 
checking canvas tool table widget decided 
post task interview gave real reason selected table widget dataset widget 
just noted feeling table better 
reasoning may quite possibly due familiarity word table compared word dataset 
finding classes methods 
cover classes code needed solve task focus ffl task class reading gif image class ffl task code redisplay items adding deleting modifying item address book summarizes group components 
task group group class searching classes ways read gif file 
tried read boss file gif image file boss file didn 
changed strategy finding way convert gif file boss file 
checked manual find help looked methods example application class handled browsing images 
looked example methods included class remembered functions application generation html file image chosen image browser 
looked method scanning class 
task group group encountered class early task 
browsing example application classes belonged categories images 
basically looking class concerned showing images window 
going class category eventually came category containing class 
briefly looked check detail went back looking images pasted window 
spending minutes looking classes displayed images window finding widget went back went details 
task group finding necessary code decision rely heavily example application contained table widget 
example application basically consisted class subsequent searches confined just class 
tried understand example application worked little little copy components may reusable 
components instance method called reset items shown application instance method called initialize table 
task group deciding table widget subjects contemplated visualworks binary object streaming service boss file stores objects specially encoded format 
allows easy saving loading objects files 
classes noted cookbook originally example tables 
classes necessary hold collection objects needed displayed 
opted example looking class 
gave hour size instance changed dynamically 
address book functions adding deleting people decided constraint able dynamically change size hinder solving task 
holding data 
changes completely trial type relied completely object manual source code 
note group choose learned table widget example application task 
finding strategies results previous section summarize search strategies ffl browser driven programmer uses brute force tries find candidate classes class categories class hierarchy 
ffl keyword driven programmer uses search facilities keywords find classes methods 
ffl application driven programmer bases strategy searching applications similar functions 
ffl documentation driven programmer uses documentation online 
rest section discusses strategy 
browser driven strategy class categories may main part instances group searched system browser 
advantage strategy described recall vs recognition 
people recall want see may able recognize wanted 
programmer remember substring class name strategy helpful 
addition programmer may able find necessary class product search class 
group finding taken example 
task group initially class browsing system browser focusing class categories added applications image 
specifically looking time intent finding class handling application gives window gif images pasted 
course major disadvantage sheer size class library difficult browse classes 
advantages programmer need idea class categories look 
keyword driven strategy groups class search facility finding classes came looking piece code find new unknown classes 
main keywords tasks deemed follows ffl task gif ffl task table task word table clear may effect search facility group note possibility tables task 
task word gif come task description 
groups interested word image keyword search facility image browsing classes system browser looking online documentation 
interesting part keyword group word gif keyword searching online documentation 
didn search classes methods may gif substring 
application driven strategy tasks applications helped solve tasks immensely 
strategy main strategy group task 
noted previous section started applications know checked list items aligned rows columns appeared 
strategy partially task due doubt application understand exists 
group strategy certain extent 
task checked applications gif images pasted 
task giving tabs spaces align items decided class hold data example checked 
case task case strategy application driven strategy 
strategy useful long behavior seen 
noted strategy similar reuse uses terms finding examples basis programming 
documentation driven strategy strategy programmers main resource 
way may ways similar browser driven strategy keyword driven strategy differentiated 
seen group task programmers may documentation find example application differentiated 
groups group strategy heavily usage manual 
group documentation basically aid task just exhausted avenues think turned documentation driven strategy find widget book 
discussion discuss issues concerning tools expertise 
tools tools visualworks environment search components 
system browser find classes methods documentation provided search facilities available 
problem finding components said solved just tools 
done supporting finding components 
prieto proposed faceted classification scheme classify reusable components retrieval 
programmers form queries selecting representative term thesaurus facet 
candidate components retrieved ranked conceptual closeness query expected reusability effort li proposed system support reuse smalltalk 
class categories method categories hierarchical relationship queries find relevant classes 
merkl neural network build dimensional map showing semantic similarity components 
similar components near map 
retrieval components done features keywords query 
keywords come set originally build map 
number components number features large may difficult method find certain component 
czarnecki proposed system support reuse smalltalk visualworks 
class attribute value pair 
trying find certain class query window list attributes 
attribute certain value matching exact match generalized match partial match depending case class 
classified tool keyword driven strategy 
problems remain tools supporting search components keyword driven strategy 
vocabulary problem completely solved 
difficult problem programmer really know wants 
programmer know library keyword search trial error search 
tools concentrate just strategy sufficient 
tool combines strategy search strategies necessary 
browser driven strategy may allow recognition components reused type visualization technique hindered number classes may useful 
needs done area 
novice vs experts study novices 
novices course experience strategies may differ time program 
groups careful checking example applications second tasks 
may result learning example application may put particular reason 
especially true group noted think added examples doing task 
possible reasons thinking additional applications relative tasks 
tasks basic natural novices consider solved basic visualworks set classes documents help outside sources 
rosson lange experts studies 
differences existed terms programming levels study theirs similarities exist ffl rosson described reuse uses programmers rely heavily code example applications 
degree reliance different tasks groups reliance existed study 
ffl lange comprehension avoidance study 
seen study subjects remarked post task interview weren really sure worked worked 
gave results study novice programmers asked modify small program 
programming analyzed focus necessary components 
analysis gave strategies browser driven strategy keyword driven strategy strategy documentation driven strategy 
observed keyword search find new components suggested keyword search may useful sufficient finding components 
discussed type tool necessary viewpoint strategies issues concerning fact study novices 
plan conducting studies programmers study see differences gain experience 
need look type combination search strategies best support finding components build prototype tool 
anderson cognitive psychology implications freeman 

biggerstaff richter reusability framework assessment directions software reusability vol concepts models biggerstaff perlis eds pp acm press 
curtis cognitive issues reusing software artifacts software reusability vol 
applications experience biggerstaff perlis eds pp acm press 
czarnecki eisenecker kopf knowledge assistant support reuse specialization modification smalltalk proc 
th pp 
fischer redmiles williams aoki object oriented technology current approaches fall short human computer interaction vol pp 
furnas landauer gomez dumais vocabulary problem human system communications comm 
acm vol pp 
hopkins smalltalk application development visualworks prentice hall 
lange moher strategies reuse object oriented programming environment proc 
chi pp 
lewis henry kafura empirical study object oriented paradigm software reuse proc 
oopsla pp 
lewis art science smalltalk prentice hall 
li finding reusable components smalltalk computers education vol pp 
merkl tjoa kappel learning semantic similarity reusable software components proc 
rd pp 
miyake constructive interaction iterative process understanding cognitive science vol pp 
prieto classification reusable modules software reusability vol 
concepts models biggerstaff perlis eds pp acm press 
rosson carroll reuse uses smalltalk programming acm trans 
computer human interaction vol pp 
yap henderson sellers class hierarchies consistency libraries australian computer journal vol pp 
tools visualworks section briefly describes tools visualworks mentioned 
ffl system browser system browser main programming tool allows browsing class library editing classes adding new classes types browsers available difference types information available 
class hierarchy browser displays classes hierarchy class hierarchy displays certain class 
ffl workspace workspace scratch pad programmers write execute code 
ffl search facilities basically types search facilities exist search certain class search certain method search implementors certain method 
done typing complete class method name typing substring name wildcard 
ffl canvas tool canvas tool main tool making modifying user interface application 
ffl palette palette companion tool fo canvas tool holds widgets put user interface application 
ffl properties tool properties tool set change various attributes widget user interface application 
ffl resource finder resource finder navigating applications 
start applications start canvas tool application 
ffl online documentation online documentation holds online version visualworks cookbook 
check examples 
