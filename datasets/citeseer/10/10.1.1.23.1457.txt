enst de technical report rr adaptive agent driven routing load balancing communication networks martin dominique snyers sylvain gu erin pascale kuntz enst de bp cedex france presents unified overview new family distributed algorithms routing load balancing dynamic communication networks 
new algorithms described extension classical routing algorithms combine ideas online asynchronous distance vector routing adaptive link state routing 
estimates current traffic condition link costs measured sending routing agents network mix regular information packets keep track costs delay encountered journey 
routing tables regularly updated information central control complete knowledge network topology 
new algorithms proposed 
round trip routing agents update routing tables backtracking way having reached destination 
second relies forward agents update routing tables directly move destination 
efficient operative scheme proposed deal asymmetric connections 
methods compared simulated network various traffic loads robustness new algorithms network changes proved various dynamic 
describes new family distributed algorithms routing load balancing dynamic communication networks 
critical operations directly influence throughput average delays information messages impact performance network 
nowadays networks characterised fast evolution 
network topologies continuously growing see internet instance networks usage changing devices mobile sort guaranteed quality service qos required 
results increasingly dynamic network classical usually centralised routing methods poorly adapted 
reason new protocols defined efficiently deal changing traffic loads topologies 
examines potential new family distributed methods packet switching networks information split packets transits network potentially different routes 
routing tables regularly updated central control complete knowledge network topology 
estimate current load measured statistics gathered dominique snyers enst fr routing packets sent network routers 
routing packets mix regular information packets keep track example delays encountered journey 
part recall basic principles classical routing algorithms 
new class distributed routing load balancing algorithms detailed section 
unified overview literature related new family algorithms propose new approaches 
network simulator test new protocols described section comparative results section 
classical routing algorithms historically routing algorithms communication networks evolved static routing routes computed line dynamic routing routes computed online take node congestion level account 
classical routing protocols successively example static routing adaptive distance vector routing routing tables regularly updated adaptive link state routing maintains map network topology load pattern nodes 
evolution associated increase number routing packets transiting network 
routing algorithms react slowly changes network load topology prone oscillations 
addition algorithms face major increase required memory metrics taken account guaranteeing different qualities services 
consider topology telecommunication network modelled non directed weighted graph fn ag node set arc set node information updated distance vector element estimated distance best route node node arc probability selecting arc packet destination static routing basic static routing communication network equivalent finding shortest paths nodes associated graph node represents router weighted arc corresponds communication line 
metric number hops routers physical distance transmission delay classical dijkstra algorithm solves shortest path problem polynomial time 
build routing tables required router transmit entering packets destination 
routing tables built called distance vector assigns optimal distances destination outgoing lines nodes 
method takes topology account network load need considered lines limited transmission capacity bandwidth 
finding shortest path solved polynomial time flow optimisation maximising number packets transiting network second throughput lines transmission limitations known np complete problem existing heuristics quite complex 
flow routing example uses transmission delays metric 
computes line mean line delay different flows deterministic single path routing statically optimises average delay 
load balanced bellman ford algorithm updates distance vectors node combining known distances best estimate neighbour nodes remaining part path 
allowing non deterministic routing small number best routes 
algorithms fail properly dynamic networks 
adaptive distance vector routing dynamic distance vector routing periodically updates distance vectors exchanging information neighbours 
bellman ford distance vector routing algorithm example original arpanet routing algorithm internet name rip 
principle dynamic programming optimal path sub optimal paths 
node periodically updates distance vector distance vector regularly sent neighbours follows ae min fd gamma cost estimated delivering packet way neighbour time shown known distance neighbour procedure converges correct answer may slowly 
particular procedure known react promptly news new transmission lines slowly bad news link failure prone oscillations 
reasons nowadays replaced link state routing 
adaptive link state routing link state algorithm essentially maintains dynamic map complete network 
dynamic map replicated router estimate optimal distances nodes usually dijkstra algorithm 
node periodically broadcasts routing information destinations distributed flooding mechanism trying minimise number re transmissions 
metric usually estimates delays node neighbours queue lengths transmitting receiving nodes 
ospf protocol increasingly internet uses link state algorithm 
online asynchronous distance vector routing boyan littman propose online asynchronous version bellman ford distance vector algorithm reinforcement learning 
routing policy tries find optimal adjacent node current node send packet order reach destination minimal associated cost 
node estimates costs deliver packet destination way neighbour node estimates incrementally improved direct feedback measured cost packet reaches destination 
reinforcement learning estimates updated locally packet reaches destination 
described sending packet immediately gets back estimate cost associated remaining part trip min fd gamma neighbour node set node time revises estimate follows gamma gamma min fd gamma called reinforcement learning rate gradient descent 
synchronously updating distance vectors asynchronously updated online time packet uses arc way destination choi yeung improve algorithm keeping track congested paths usually correspond optimal paths periodically probing recovery 
agent routing new family algorithms extension classical algorithms combines ideas online asynchronous distance vector routing adaptive link state routing 
online asynchronous distance vector routing associated costs directly measured network traffic estimated node site data waiting buffers length 
regular interval network node emits set routing agents usually implemented routing packets share transmission line waiting queues data packets measure example traffic delays allow online asynchronous update routing tables 
link state routing new methods retain idea keeping topological information network 
having identical map network duplicated nodes topological information distributed routing agents 
routing agent sequence switching nodes visited journey 
data packets select hop probabilistic scheme function information stored routing table 
broadcasting topological information node network ospf example routing agents incrementally update distance vectors move network nodes 
important point update node immediately influence routing node turn influence agents arriving 
process information transmission creates autocatalytic effect similar called stigmergy process explains collective behaviour social insects inspired approaches described 
stigmergy collective ordination process indirect communication individuals usually chemical substances called pheromones laid environment 
dynamic structuring phenomena highlighted insect societies particular shown shortest path ant nest food source emerge pheromone trail laying behaviours non directly communicating individuals 
ants returning nest food source leave pheromone pheromone trail attracts individuals turn reinforces pheromone trail 
auto catalytic reaction shortest path rapidly emerge 
path followed packet agent associated measured distances routing load balancing consider types agents depending distance vector updated 
update performed routing agents going source destination forward routing agents retracing way back source round trip routing 
versions round trip routing original approach derived online asynchronous distance vector routing algorithm section 
antnet system shown outperform aspects ospf bellman ford routing algorithms packet switching network simulator di caro dorigo 
propose efficient improvement bellman principle increases transmission information network agents 
advantages forward routing symmetric asymmetric networks 
review schoonderwoerd approach forward routing developed context virtual circuit symmetric networks extend packet switching symmetric networks 
propose efficient new forward routing method general context asymmetric packet switching networks caf routing operative asymmetric forward routing 
round trip agent routing round trip routing sets homogeneous mobile agents respectively called forward agents backpropagating agents 
forward agents share queues data packets routing tables 
keep track journey associated costs hops internal stack 
forward agents implement mechanism avoid loops routes 
backpropagating agents retrace way back source update distance vector accordingly 
agents higher priority data faster propagation accumulated information 
multiple round trip routing implemented round trip routing monte carlo extension online asynchronous distance algorithm section 
node emits set forward agents case multiple round trip routing backpropagating agent associated forward agent 
greater intelligibility describe steps algorithm single forward agent originating node source node going node destination node detail updates distance vectors look probabilities arc selection routing tables 
forward agent keeps track journey associated cost node defined example time spent queues plus transmission delay 
associated cost sum jm cost journey soon reaches destination backpropagating agent sent arcs arrival node node updates estimation follows gamma gamma jd learning parameter defined previously section 
taken example forward agent arrives node source pushes pair stack 
arriving destination stack contains associated backpropagating agent arrives updates value follows gamma gamma introduce efficient improvement updates distances corresponding intermediate nodes visited agent 
apply wellknown bellman principle decomposing optimal path optimal sub paths 
intermediate node treated destination associated distance updated relative distance visited node current updating ones 
set routing agents associated source destination pair duplicated node new set associated intermediate node taken destination reason called approach multiple round trip 
node example backpropagating agent updates addition updating previously described distance vector intermediate node gamma gamma jd routing table gives probability selecting arc linked packet destination periodically recalculated time step follows fi fi fi non linearity parameter taken superior favour short paths 
order deal dynamics networks link breakdowns force forward agents loop back previously visited node special treatment added 
simply destroying agent valid distance information gathered far backpropagated 
agent destination arrives arc detects loop simply returns previously visited node starts standard backpropagation reached destinations 
antnet di caro dorigo antnet system uses similar forward agents different loop detection behaviour complex backpropagating agents different routing table update procedure 
order minimise oscillations computing routing table updating distance estimation combined efficiency keep separate clarity reason 
di caro dorigo simply erases loop agent memory continue risk falling loop 
inherent distance vector algorithms low pass filter maintaining list estimates moving time period arithmetic mean values distances associated variance node network 
values periodically directly update routing tables 
antnet system shown outperform ospf bellman ford algorithms simulations see details developments 
forward agent routing backward routing intrinsically slow requires agent reach destination update 
slow round trip reaction changes network induce oscillations 
forward routing offers alternative removing need round trips 
introduced schoonderwoerd case virtual circuit symmetric networks identical costs associated link directions 
extended packet switching symmetric networks added optimisation bellman principle previously mentioned 
subramanian connection schoonderwoerd reinforcement learning 
extends approach asymmetric networks packet switching networks asymmetric delays occur due different queue lengths 
network symmetric cost measured forward agents path source current node directly update estimation distance source current node 
asymmetric networks done anymore 
subramanian avoid problem defining agents choose node visit randomly identical probability choosing neighbour node 
random routing scheme annihilates desirable auto catalytic effect previously mentioned 
introduces efficient asymmetric forward routing caf routing 
symmetric forward routing schoonderwoerd introduced symmetric forward routing context virtual circuit networks bandwidth allocated transmission links origin destination call 
bandwidth limited resource traffic adequately balanced 
performance network case measured proportion calls placed network period time 
routing agents travel network count number hops journey 
routing metric symmetric distance estimation agents coming opposite direction deciding route taken 
time routing agent arrives source node distance measured directly update estimation distance agents arriving direction 
schoonderwoerd method adapted packet switching networks update scheme slightly modified 
time routing agent arrives node link estimated distance reach link equivalent due symmetry property updated gamma gamma jd distance measured augment method efficient improvement described previously section implementation correspond 
puts practice bellman principle optimal path decomposition 
routing table probabilities selecting link equation 
caf routing operative asymmetric forward routing caf routing extends symmetric forward routing steps asymmetric networks estimate distance nodes direction direction 
basic idea algorithm switch routing packets differently tracing back way destination source cost estimated traffic moving opposite direction update routing tables 
routing agent emitted node destination node network supposed asymmetric cost encountered arriving node link considered previously section valuable estimation distance agents arriving direction 
consequently directly updating distance vector element anymore 
cost update estimated traffic moving opposite direction 
cost associated packet arriving stored routing agent leaves go pushes pair stack arrival entails update gamma jd sum arc distance stored measured routing agents moving opposite direction 
add previous section improvement bellman principle 
ensure correct distance vector update asymmetric case data packets routing agents routed differently 
data packets routed node previously equation new definition 
routing agents basic idea switch differently tracing back way consequence addition maintaining routing table distance vectors direction compute routing tables reverse routing traffic 
reverse routing table elements keep track link usage traffic originating arrival data packet elements associated destination multiplied implements time window negative exponential incremented 
routing agents routed probabilities rp fi fi maintaining reverse routing table probabilities allows caf agents originating routed path information packets coming opposite direction destination forward routing requires special treatment detected loops efficiently deal dynamic changes network 
case connection failure example information open connection forwarded nodes side backpropagated previously visited nodes 
loop detected approach distance vector associated loop detected agent outgoing link leads visited node agent internal stack packet destination visited nodes updated follows gamma gamma network simulator order compare routing algorithms simplified network simulator designed 
dedicated routing algorithm testing implement network osi layers 
example connections supposed perfect packets produced simple random processes simulated sessions clients 
practically synchronous discrete event simulator running directed weighted graph representing network 
node router identical 
iteration incoming packets routed depending type routing data packets pushed buffer corresponding chosen outgoing link 
buffers supposed infinite packets queued discarded congestion control routing algorithm 
iteration link processes amount waiting packets associated parameters bandwidth delay 
bandwidth number packets link take unit time delay minimum time takes packet pass link 
packets appear similar link allow compare algorithms considering amount data carried routing packet number critical 
noticed algorithms routing packets share basically structure carry approximately amount information differ behaviours 
network load provided poissonian random processes 
basic traffic load uniform node generates packet uniform rate random destination 
non uniform traffic patterns tested including existence hot spots node emitting large amount packets period time 
order test algorithm reactions dynamic context simulator includes events link breakdowns sudden parameter changes 
algorithms probabilistic routing routes selected random scheme proportionally routing table values give probability selecting link destination node 
improve exploration new routes tiny probability choosing hop uniform probability neighbouring nodes 
compared deterministic routing method possible achieve load balancing flows network naturally split different available routes 
evaluate result simulation measurements throughput average delay network number waiting packets 
throughput number packets amount information went network unit time 
average delay experienced packets arrived interval time gives view general status network 
number waiting packets just sum sizes queues buffering links shows efficiently 
case infinite buffer lengths average packet delay highly correlated throughput 
results associated delay metrics 
round trip improved round trip forward improved forward iterations avg nbr hops curves show sum average cost runs packets transiting symmetric network represented sliding time window iterations 
packet cost number hops takes packet reach destination 
vertical lines represent standard deviations 
horizontal line optimal mean number hops dijkstra algorithm 
routing tables initialised random hop counter incremented packets reach destination 
explains slow values observed 
traffic load uniform data packets fed network iteration random source destination nodes routing packets node maintained network 
experimental results network simulator compare different routing algorithms previous sections 
consider static environments associated random traffic load pattern node sends packets random destination uniform rate poissonian traffic load 
dynamic algorithms studied restricting bandwidths random traffic load 
generates buffering delays transmission links lead oscillating responses 
study reaction algorithms simulated events hot spots bursting node emits packets period time bandwidth changes link failures 
results simulation initialised uniform probability data packets started emitted 
routing static environments simulate static environments considering symmetric networks number hops metric restriction bandwidth 
simulations performed simplified network sufficient highlight faster convergence forward routing round trip 
furthermore show advantage improvement bellman principle section 
routing dynamic environments soon add bandwidth constraints network asymmetric due delay metric transmission links handle incoming packets anymore packets wait transmission link buffers 
keep average packet delay reasonable crossing network adaptive load balancing introduced 
simulations delay associated transmission link mainly due time spent buffers transmission metric 
metrics tested enhance efficiency algorithms 
sequel total traffic load data plus routing traffic kept constant simulations close congestion level associated bandwidths 
try minimise routing traffic routing overhead respectively caf round trip routing antnet routing 
method keeps parameter set simulations 
routing fi round trip routing fi antnet set ffl parameters defined di caro dorigo caf fi parameters chose 
load balancing studies initial convergence case random traffic load 
compares average packet delay number waiting packets routing antnet system improved round trip caf routing algorithms 
clearly exhibits faster convergence caf routing lower routing overhead 
initial peak due delay local saturation resulting random values assigned routing table 
similarly shows waiting packets case non uniform traffic load packets emitted node random destination poissonian distribution 
poissonian event number packets emitted single destination 
case caf routing perform better algorithms advantage smaller previously 
believe smaller advantage probably due way non uniform traffic generated current version simulator packets created enter buffers really emitted time spent initial buffers taken account statistics depends limited bandwidths efficiency routing algorithm 
early results implementing traffic types confirm hypothesis 
dynamic load balancing far intrinsic environment variations due limitations transmission link bandwidths studied 
study algorithm responses sudden modifications network exchanging bandwidth close links creating hot spots nodes 
simulation represented bandwidth associated link higher associated link 
iteration network exchanges bandwidths traffic originally went link immediately saturates 
delays increase new load balance 
antnet responds important transient returning normal 
transient decreases round trip routing routing caf routing 
peak waiting packets bandwidth exchange iteration followed burst mean delay 
algorithms reverse distance vector directly updated data traffic efficiency reasons additional reverse routing traffic 
case routing overhead double 
caf routing av 
delay waiting packets improved round trip routing av 
delay waiting packets routing av 
delay waiting packets antnet av 
delay waiting packets packet delay waiting packets iterations iterations iterations packet delay waiting packets iterations caf routing antnet routing improved round trip routing packet delay waiting packets packet delay waiting packets average packet delay average number waiting packets routing improved round trip antnet caf routing simulations identical random traffic loads network represented center 
vertical lines represent standard deviations 
react similar way link failures 
transient network modification iteration larger initial 
due presence large number packets saturating queue buffers modification 
shows algorithm responses creation hot spots 
iteration emission probability node instantly increased 
results important traffic addition random described 
additional traffic originates random destinations 
algorithms show oscillating responses hot spot larger amplitude antnet hand lower frequency due intrinsic low pass filter 
caf routing algorithm dynamically adapts response traffic change small transitory period 
hot spot completion algorithm responses return normal behaviours 
new scheme agents routing communication networks 
approach combines benefits asynchronous distance vector routing adaptive link state routing approach 
addressed asymmetry communication links caf algorithm cooperative asymmetric forward derived previous modules 
proposed algorithms able react deal numerous changes communication bandwidth network topology link removals bandwidth reduction set communication links 
believe properties highest interest contribute quality service network communications 
caf routing round trip routing improved round trip routing antnet antnet waiting packets iterations iterations improved round trip routing round trip routing waiting packets waiting packets iterations waiting packets iterations caf routing average number waiting packets round trip improved round trip antnet caf routing simulations identical poissonian traffic represented network 
order validate algorithms compare existing approaches designed network simulator 
moment simulator reduced functionalities fits needs 
particular possible define play dynamic validate behaviour algorithms numerous contexts 
respect helped confirm potentialities benefits model dealing network changes 
main characteristic algorithms rely parameters 
experience range efficient values parameters large 
contrasts optimisation heuristics 
progress aims activities 
implement algorithms realistic network simulator currently working results simulator 
phase implement algorithms real set routers gather results 
second progress activity aims investigating approach context quality service 
believe proposed algorithms highest interest offering differentiated services fault tolerant networks deal communication bursts timely manner 
partly supported gis groupe int scientifique cnrs project 
martin acknowledges support nortel harlow uk 
improved round trip routing av 
delay waiting packets caf routing av 
delay waiting packets antnet av 
delay waiting packets routing av 
delay waiting packets packet delay waiting packets iterations iterations iterations packet delay waiting packets iterations caf routing antnet routing improved round trip routing packet delay waiting packets packet delay waiting packets average number waiting packets packet delay routing round trip antnet caf routing simulations represented network standard deviation vertical lines 
time see arrows originally large bandwidth associated link exchanged originally small bandwidth associated link 
ahuja magnanti orlin 
network flows theory algorithms 
prentice hall upper saddle river new jersey 
beckers deneubourg goss pasteels 
collective decision making food recruitment 
ins 
soc 
bellman 
routing problem 
applied mathematics 
bertsekas 
dynamic programming optimal control 
athena scientific belmont ma 
bertsekas gallager 
data networks 
prentice hall upper saddle river new jersey 
bonabeau gu erin snyers kuntz th 
routing telecommunication networks smart ant agents 
proceedings sd int 
workshop intelligent agents telecommunications applications paris france july 
boyan littman 
packet routing dynamically changing networks reinforcement approach 
advances neural information processing systems volume pages san mateo ca 
morgan kauffmann 
caf routing antnet routing improved round trip routing routing iterations waiting packets waiting packets waiting packets waiting packets iterations iterations iterations caf routing antnet routing routing improved round trip routing evolution number waiting packets representative simulation 
simulation hot spot created particular node iteration emission probability associated hot spot node instantly increased 
oscillating transient responses observed larger amplitude lower frequency antnet system 
choi 
yeung 
predictive routing memory reinforcement learning approach adaptive traffic control 
proceedings nips neural information processing systems pages cambridge ma 
mit press 
di caro dorigo 
antnet mobile agents approach adaptative routing 
technical report iridia universit libre de bruxelles bruxelles belgium 
di caro dorigo 
ant colonies adaptive routing packet switched communication networks 
springer verlag editor ppsn fifth international conference parallel problem solving nature pages 
di caro dorigo 
antnet distributed stigmergetic control communication networks 
technical report iridia universit libre de bruxelles bruxelles belgium january 
accepted publication journal artificial intelligence research jair 
dijkstra 
note problems connection graphs 
numerical 

new metric dynamic routing algorithms 
ieee trans 
communications march 
gu erin 
multi agent optimization dynamic environment application telecommunication network routing french 
dea dissertation ecole nationale sup erieure des el de 
littman moore 
reinforcement learning survey 
journal artificial intelligence research 
matta shankar 
type service routing datagram delivery systems 
ieee journal selected areas communications october 
schoonderwoerd holland bruten rothkrantz 
ant load balancing telecommunication networks 
adaptive behavior 
subramanian druschel chen 
ants reinforcement learning case study routing dynamic networks 
proceeding ijcai international joint conference artificial intelligence pages menlo park ca 
morgan kaufmann 
tannenbaum 
computer networks 
prentice hall upper saddle river nj 

