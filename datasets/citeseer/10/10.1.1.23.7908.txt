cubical sets generalized transition systems eric goubault list sla cea gif sur france email eric goubault cea fr 
show article labelled cubical sets higherdimensional automata natural generalization transition systems asynchronous transition systems 
generalizes older result holding precubical sets subcategories classical see categories transition systems asynchronous transition systems 
opens new promises actual geometric methods comparisons methods verification concurrent programs 
keywords models concurrency semantics category theory 
great variety models concurrency witnessed instance 
relationships models known newer geometric models concurrency cubical sets hda local po spaces formally linked older models transition systems transition systems independence 
fact cubical sets notion generalized transition definition 
idea relating style winskel operational models concurrency dates back done fairly restricted categories 
extend previous full categories transition systems operational model interleaving concurrency transition systems independence operational model true concurrency main idea relating models compare semantics concurrent languages different formalisms 
hoped specific methods statically analysing concurrent programs deadlock detection algorithm case cubical sets model re giving nice cross hinted section 
transition systems transition systems oldest semantic models sequential concurrent systems 
convenient categorical treatment model sequel taken 
definition 
transition system structure ran set states initial state set labels ran theta theta transition relation transition systems category defining morphisms kind simulation able discuss properties modulo weak strong bisimulation see 
idea transition system simulates transition system soon fire action context fire related context 
morphism defines way states transitions related states transitions making transition systems category ts 
definition 
ran ran transition systems 
partial morphism morphism pair oe oe partial function 
oe ffl oe ffl ran defined implies oe oe ran undefined oe oe 
restrict total morphisms ones total function suitably completing transition systems 
just add idle transitions transition systems similar spirit lifting domains denotational semantics partial functions considered total strict 

new element 
idle transition transition goes state state consider completion ran transition system ran setting fg ran ran sg 
morphism oe total function partial morphism identifying undefined 
conversely partial morphism oe identified oe undefined 
asynchronous automata asynchronous automata nice generalization mazurkiewicz traces influenced lot models concurrency transition systems independence 
independently introduced 
idea decorate transition systems independence relation actions allow distinguish true concurrency mutual exclusion non determinism actions 
slight modification purposes due called automata concurrency relations definition 
automaton concurrency relations quintuple ran disjoint sets distinguished element start state ran subset theta theta ran ran require ran family irreflexive symmetric binary relations required exist transitions ran 
sequel relax condition 
morphism morphism oe underlying transition systems ai implies oe 
automata concurrency relations category written acr 
category automata concurrency relations alphabet named acre similarly section equivalently consider acr ats built transitions total morphisms condition independence relation ai oe cubical sets cubical sets classical objects combinatorial algebraic topology see instance alternative truly concurrent model concurrency particular seminal 
particular precubical ones deriving new interesting deadlock detection algorithms 
algorithms designed see instance 
precubical sets definition 
precubical set family sets face maps ff kn kn gamma gamma ff satisfying commutation rules ff fi fi gamma ff elements kn called transitions 
precubical sets 
morphism precubical sets fn function kn ln fn ffi ff ff ffi 
forms category called upsilon presheaf category follows 
free category objects morphisms generated ffi ffi gamma gamma ffi ffi ffi gamma ffi category set functors set morphisms natural transformations isomorphic category precubical sets 
implies general theorems upsilon elementary topos 
complete complete set complete complete 
general fact sequel categories presheaves op set elements contravariant functors direct limits called representable functors associates homd op set cubical sets precubical sets bit category transition systems idle transitions paths transformed morphisms paths length 
far strict really useful 
instance simulations bisimulations morphisms respectively spans open morphisms general 
impossible describe restriction subset transitions projection restriction ccs instance morphism 
needs generalization idle transitions higher dimensions 
fact close notion cubical sets definition 
cubical set precubical set degeneracy maps ffl kn gamma kn gamma satisfying extra cubical relations ffl ffl ffl ffl ff ffl ffl gamma ff ffl ff gamma id cubical sets 
morphism cubical sets morphism precubical sets underlying precubical sets ffi ffl ffl ffi fn 
corresponding category cubical sets upsilon isomorphic category presheaves op set small category described nice way see 
similarly case category precubical sets category cubical sets elementary topos complete cocomplete 
talk cubical sets connections compositions great interest purposes see instance 
useful functors need interesting quite classical spirit functors 
upsilon category upsilon objects dimensional cubical sets cubical sets 
category seen presheaf category op set full subcategory objects similarly define upsilon category dimensional precubical sets seen presheaf category op set 
instance classical categorical presentation simplicial sets see instance 
lemma 
tn respectively function upsilon respectively upsilon upsilon respectively upsilon upsilon respectively upsilon associates upsilon respectively upsilon ffi ff gamma ffi ff defines functor called truncation functor 
second functor permits build natural cubical set precubical set lemma 
functor free cubical set precubical set upsilon upsilon left adjoint obvious forgetful functor upsilon upsilon similarly functor free cubical set dimension equal precubical set dimension equal fn upsilon upsilon left adjoint obvious forgetful functor kn upsilon upsilon proof uses special form freyd special adjoint functor theorem form kan extension presheaf categories proposition 
see appendix 
labelled cubical sets remaining problem labels transitions 
easily taken care trick 
consider category upsilon labelled cubical sets consisting morphisms morphisms category usual 
diagram commutative 
abuse notation identify 
course upsilon comma category see id upsilon id upsilon 
consider category upsilon pointed labelled cubical sets pairs upsilon initial state morphisms preserving initial states 
call category category higher dimensional transition systems 
alphabet actions sigma construct labelling cubical set sigma follows 
construct oe sigma cubical set oe free cubical set generated precubical set denoted oe abuse notation oe oe oe foeg oe oe oe oe identify sigma cubical set oe sigma oe oe identify sigma oe write 
set sigma theta cubical set sigma theta delta delta delta theta sigma times suitably elements equal iff number letters certain number natural inclusion morphisms iterated products sigma theta delta delta delta gammam sigma theta delta delta delta gammam oe delta delta delta oe delta delta delta ae oe jj gamma construct sigma direct limit diagram objects sigma theta morphisms delta delta delta gammam geometrically sigma dimension wedge set loops oe sigma giving labels transitions 
dimension wedge set tori pair oe sigma theta sigma seen set giving labels transitions notice sigma freely generated precubical set 
adjunctions transition systems prove suitable full subcategory upsilon isomorphic ts 
consider hts category objects pointed labelled cubical sets freely generated precubical sets morphism precubical sets deterministic gamma delta morphisms morphisms pointed labelled cubical sets 
hts full sub category hts consisting pointed labelled cubical sets dimension 
matter fact categories defined quite similar terms 
states ordinary transition systems nature states labelled cubical sets source target representation transitions functional interpretation relation ran 
done formally constructing functors ts hts hts ts inverse ran ffl ffl fa rang ffl ffl ffl ffl 
ran ffl ffl ffl ffl ran unique deterministic 
action functors morphisms follows oe ran 
ran morphism transition systems define components morphism ran ran 
ffl ae oe oe ffl oe ffl oe ffl ae ffl ffl 

morphism hts oe ffl oe state ffl ae im ffl label sequel restrict functors categories models fixed labellings 
call hts category higher dimensional transition systems labelled fixed cubical set fixed arguments set labels longer mention labelling sets 
restriction theorem 
inverse functors 
order compare category higher dimensional transition systems ordinary transition systems look retract hts sub category hts boils looking different adjunctions upsilon upsilon lemmas 
tells lift adjunctions unlabelled labelled cases second tells restrict adjunctions useful dealing determinism condition labelled cubical sets 
lemma 
categories set pairs functors left adjoint elements induce elements idc idc idd idd lemma 
oe pair adjoint functors respectively full sub category respectively 
suppose jc oe jd pair adjoint functors 
mainly different adjunctions upsilon upsilon keep underlying ordinary transitions unchanged interpretation possible ones 
proposition 
pairs adjoint functors follows functor upsilon upsilon left adjoint truncation functor tn upsilon upsilon similarly functor upsilon upsilon left adjoint truncation functor tn upsilon upsilon tn commute free functor 
truncation functor tn upsilon upsilon respectively upsilon upsilon functor gn upsilon upsilon respectively upsilon upsilon 
proof 
direct applications proposition 
see appendix 
intuition functors follows 
just kind inclusion functor takes dimensional cubical set forms cubical set exactly non degenerated elements elements im ffl fact exactly elements dimension equal degenerated elements dimension strictly bigger seen kind abstraction sense interpretation minimal allocation strategy abstraction 
dimensional cubical set prescribes happen degrees concurrency equal interprets exactly interesting actions processes busy time 
contrary gn tries interpret dimensional cubical set maximal allocation strategy tries fill dimensional holes dimensional cubical set imposing filled transition dimensions 
dihomotopy properties proven resolution functor 
left 
notice adjunction upsilon oe tn upsilon restricted lemma full sub categories free objects generated precubical sets respectively upsilon upsilon due fact see proposition tn commute free functors 
restrict adjunction furthermore lemma see adjunction holds restrict deterministic automata 
adjunction hts oe hts 
hts ts isomorphic see theorem deduce pair adjoint functors ts th oe ht hts 
unfortunately manage lift adjunction proposition higher dimensional transition systems 
automata concurrency relations define functors appear inverse functors acr oe hts hts full subcategory upsilon consisting higher dimensional transition systems dimension equal ran ffl ffl ffl ft rang ffl ffl ffl fab ai ffl ab ab depending way coded ab delta delta delta delta delta delta ab respectively delta delta delta delta delta delta ab respectively delta delta delta ab respectively delta delta delta 
ran ffl ran ffl ai exist respectively 
action underlying ordinary transition system asynchronous transition system functor identify ran underlying dimensional skeleton higher dimensional transition system ran 
similarly acts underlying ordinary transition systems identify underlying transition system asynchronous transition system 
fills interleavings independent actions transitions imposes actions independent exists truly concurrent execution higher dimensional transition system 
action morphisms easy define 
oe ran 
ran morphism asynchronous transition systems 
ran ran defined identification ab oe oe oe oe ffl gamma oe oe delta ffl gamma oe oe delta ffl ffl oe ab ran 
morphism upsilon define oe simply previous identification 

sequel fix labelling cubical set higher dimensional transition systems set labels fixed 
theorem 
defined functors 
inverse 
proof 
difficulty show action functions morphisms defined 
thing check definition dimension underlying precubical set coherent 
check necessary equalities notations ab ran notice oe oe oe oe ab ffl oe oe oe oe ffl oe oe ffl oe oe oe ffl oe oe ffl oe ab oe oe ffl oe oe oe oe oe ffl oe equal 
rest proof goes lines see rest appendix 
check oe 
ai implies oe 
suppose ai 
exist know ffi similarly 
furthermore morphism cubical sets oe oe 
adjunctions proposition particular case result theorem imply pair adjoint functors acr ah oe ha hts 
adjunctions adjunctions described variety models concurrency 
hope able lift functors case labelled cubical sets 
particular believe equivalence traces defined category tl mazurkiewicz traces mapped homotopy classes traces hts partially commutative monoid defined mazurkiewicz trace theory analog fundamental category cubical sets defined instance 
left 
domain configurations event structure di domain stable domain la berry see instance believe adjunctions hts adjunctions cubical sets local po spaces geometrical realization functor linked fact partially ordered topological spaces related particular forms scott domains see 
believe equivalence categories form higher dimensional transition systems general petri nets 
difficulties finding right notion independence number transitions petri nets 
possible start adjunction acr petri nets 
seen cubical sets complete complete 
means category labelled cubical sets fixed alphabet form complete complete 
related left right adjoints transition systems asynchronous transition systems limits limits categories 
instance products higher dimensional transition systems correspond parallel combination interference higher dimensional transition systems cartesian product partially ordered topological spaces products correspond non deterministic choice 
fibred products synchronized products category ordinary transition systems allow nice semantical definitions 
allows nice comparison semantics adjunctions 
stubborn sets sleep sets persistent sets methods diminishing complexity model checking transition systems 
semantic observations petri nets case mazurkiewicz trace theory 
believe special forms homotopy retracts cast adjunctions hinted category higher dimensional transition systems 
hope statement formal adjunctions design new state space reduction methods 
defined notion bisimulation 
model concurrency category models path category subcategory represents thought paths models define elements bisimilar exists span special morphisms linking 
special morphisms path lifting property believe higher dimensional transition systems geometric fibration property 
hope homotopy invariants useful study variety bisimulation equivalences 
done direction sense 

arnold 
syst emes de transitions des processus 
masson 


categories asynchronous systems 
phd thesis university sussex 

brown higgins 
algebra cubes 
journal pure applied algebra 

cousot cousot 
interpretation unified lattice model static analysis programs construction approximations fixed points 
principles programming languages pages 


pasting schemes monoidal biclosed structure cat 
phd thesis 

droste 
petri nets automata concurrency relations adjunction 
droste manfred gurevich yuri ed 
semantics programming languages model theory gordon breach science publ 


loops deadlocks 
mathematical structures computer science 

goubault 
detecting deadlocks concurrent systems 
proceedings th international conference concurrency theory available www dmi ens fr goubault 
springer verlag 

goubault 
algebraic topology concurrency 
submitted theoretical computer science technical report aalborg university 

sokolowski 
infinitely running processes loops geometric view point 
electronic notes theoretical computer science proceedings 

gabriel 
calculus fractions homotopy theory 
ergebnisse der mathematik und ihrer volume 
springer verlag 

gaucher 
homotopy invariants higher dimensional categories concurrency computer science 
mathematical structures computer science appear 

godefroid wolper 
partial orders efficient verification deadlock freedom safety properties 
proc 
third workshop computer aided verification volume pages 
springer verlag lecture notes computer science july 

goubault 
geometry concurrency 
phd thesis ecole normale sup erieure 
published available www dmi ens fr goubault 

goubault 
eom etrie du parall analyse autres applications 
technical report habilitation les recherches paris dauphine appear 

goubault jensen 
homology higher dimensional automata 
proc 
concur new york august 
springer verlag 

gunther scott 
semantic domains 
handbook theoretical computer science 
elsevier 

joyal nielsen winskel bisimulation open maps 
proc 
lics 
acm press 

lambek scott 
higher order categorical logic 
cambridge studies advanced mathematics volume 
cambridge university press 

mac lane 
categories working mathematician 
springer verlag 

maclane moerdijk 
sheaves geometry logic 
springer verlag 

plotkin 
domains 
technical report computer science department 

pratt 
modeling concurrency geometry 
proc 
th acm symposium principles programming languages 
acm press 


classification dipaths geometric models concurrency 
mathematical structures computer science august 

sassone cattani 
higher dimensional transition systems 
proceedings lics 

serre 
ere des es 
applications 
phd thesis ecole normale sup erieure 

shields 
concurrent machines 
computer journal 

valmari 
stubborn attack state explosion 
proc 
cav 
springer verlag lncs 

winskel nielsen 
models concurrency volume handbook logic computer science pages 
oxford university press 
proofs proofs particular case existence kan extensions taken proposition 
page proposition 
category direct limits op set functor 
statements equivalent commutes direct limits 
ii left adjoint functor op set 
functor ffi equivalence full subcategory hom op set formed functors commute direct limits hom 
fact functor associates ffi ffi lemma obvious 
lemma proof 
suffices proposition op set functor hom 
defines right adjoint easy see unit adjunction fact identity natural transformation id ffi means induces equivalence categories upsilon upsilon case cubical sets dimension equal treated exactly manner 
theorem proof 
forget labelling set definition transition systems labelled cubical sets 
transition system ran ts fa rang 
ran ran possible possible satisfying conditions ran ran ran ran 
take hts ran nim ffl ran ran fa rang nim ffl free 
free 
proof extends readily morphisms 
morphism hts 
oe ran 
ran 
oe state ae im ffl label oe 
oe ae oe oe ffl oe oe oe oe ae ffl oe 
oe oe unique determinism condition hts going oe oe label equal im ffl necessarily im ffl morphism im ffl order necessary im ffl furthermore oe oe oe ffl oe oe 
oe ran 
ran morphism labelled transition system 
oe ae oe oe ffl oe oe oe oe ae ffl oe 
consider oe 
oe state ae im ffl label im ffl 
time 
oe oe 
lemma proof 
hom homd 
hom idd idd means morphisms diagram commutative diagram commutative functoriality ffi ffi ffi unit adjunction natural transformation square diagram commutes entailing outer square commutative jm ffi jn ffi ffi get naturally morphism hom idc idc ffi jm ffi jn similarly direction get morphism hom idd idd ffl ffi ffl ffi ffl unit adjunction 
prove natural bijection hom idd idd hom idc idc 
composite identity direct consequence right identity page fgf ffl identity natural transformation means diagram commutative fgf ffl jm fg fg ffl fjm fgf fg fg ffl similarly composite ffi id left identity page jm gfg gf gf jm induces pair adjoint functors id id id idd 
lemma proof 
natural bijection homd hom naturally restricts bijection homd homd full hom hom full proposition proof 
take instance proposition op set 
define functor hom follows functor proposition functor commutes direct limits proposition functor right adjoint proposition see hom case hom upsilon equality holding yoneda lemma 
recognize truncation functor 
restricting adjunction categories cubical sets morphisms respecting initial states obvious 
adjunction upsilon oe tn upsilon direct consequence lemma 
proceed similar manner adjunction define proposition sn 
notice fn sn sn sn commuting diagram direct limit 
proof commutation diagram involving tn similar 
part proposition op set functor hom follows hom gives functor tn right adjoint functor op set hom upsilon theorem proof 
difficulty part show action functions morphisms defined 
thing check definition dimension underlying precubical set coherent 
compute notations ab ran ab gamma oe oe oe oe delta oe oe oe oe oe oe oe oe ab oe oe oe oe oe oe oe oe equal 
notice oe oe oe oe ab ffl oe oe oe oe ffl oe oe ffl oe oe oe ffl oe oe ffl oe ab oe oe ffl oe oe oe oe oe ffl oe equal 
notice oe oe ab ffl oe oe ffl oe oe oe ffl oe oe oe ab ffl oe oe oe ffl oe oe oe oe oe equal 
notice oe oe oe oe ab ffl ffl oe ffl oe ffl ffl oe ffl oe ffl oe ffl ffl oe ffl oe ab ffl oe ffl oe ffl oe ffl oe ffl oe ffl oe equal 
check oe 
ai implies oe suppose ai 
exist know ffi similarly 
furthermore morphism cubical sets oe oe 
easy see functors restricted skeleton inverse consequence theorem 
generally easy check ffi id free dimensional cubical sets precubical sets ffi naturally equal 
