formal language security services base modelling analysis denis tr ek bla jo ef stefan institute ljubljana slovenia 
language security services base modelling developed 
security services base defined security mechanisms defined osi security framework 
elements base modelled corresponding channels 
channel set productions introduced form grammar language 
language suitable formal synthesis analysis secure architectures 
method limited cryptographic algorithms 
security mechanisms incorporated 
furthermore method easily machine processing 
keywords 
open systems security security services base security architectures formal methods 

security open computer networks complex problem gained interest scientists years 
difficult handle problems sort formal semiformal approach 
reason methods formal design analysis security architectures introduced 
methods formal notations usually order predicate calculus proof theory 
drawback methods known literature concerned analysis protocols designed process development 
case methods suggested boyd 
proposed general treatment security architectures 
boyd technique notation special grammar consists productions describe way security mechanisms accomplish certain security requirement 
main advantage approach formal syntax supported productions results obtained logical meaning terms strict mathematical logic 
spite productions intuitive suitable handling various aspects associated certain architecture kind cost implementation architecture 
suitable machine added implementation language parsers generators 
discussed detail 
support initialisation re initialisation phases physical secure means exchange initial secret information 
approaches mentioned concerned security cryptographic point view case provision security computer networks envisaged 
extension formal support security architectures generation analysis extended include non cryptographic mechanisms 
study demonstrates security services standards redundant order define minimal set security services needed implement security requirement 
organised follows 
section minimal set security services called security services base defined 
section set modelled cryptographic non cryptographic security mechanisms possible 
modelling corresponding grammar proposed approach suggested 
language produced grammar called security architectures formal language 
analysis synthesis author correspondence sent 
secure architectures shown example section short discussion machine supported processing included 

definition security services base text follows osi standards address security architectures basic start point 
standards form basis secure communications open computer networks 
osi security open communication systems provided security services access control provides unauthorised resources authentication provides authentication communicating peer entity source data communication line confidentiality protects data unauthorised disclosure integrity detects modification insertion deletion data non repudiation provides recipient proof origin sender proof delivery false denying message content prevented 
sub variations services defined osi documents general set representative 
order find orthogonal set security services mentioned security services extracted definitions explicitly implicitly included definitions 
selected services defined sufficient implementation required security service 
needed various combinations services applied provide users desired security service 
respect access control authorised resources required 
implies proper identification entity task authentication 
positive authentication entity allowed access resources 
access control basic security service 
action restriction access resources basis authentication 
regards non repudiation proof origin delivery requires proper identification task authentication 
modifications message hindered proved 
non repudiation basic security service 
simply compound construction authentication integrity 
definition confidentiality explicitly implicitly included definition security service 
means possibility implement confidentiality combinations security services 
element minimal security services set 
holds authentication authentication element minimal security services set 
regarding integrity authors think treated independent security service 
true data integrity provided integrity check value calculated symmetric asymmetric encryption mechanisms 
furthermore data encryption combined redundancy clear text provide integrity product confidentiality 
integrity may appear closely coupled confidentiality fact misleading 
integrity provided various means just confidentiality 
definition protection disclosure required implies integrity element minimal security services set 
restrict security services form elements security services base formal analysis confidentiality legitimate user able read message 
authentication receiver sender assured message created delivered legitimate sender receiver 
integrity receiver notified changes message transmission communication medium 

modelling basic security services definition security services base elements modelled channels authentication channel introduced accessed legitimate user writing anybody read channel 
confidentiality channel introduced access writing legitimate user read 
integrity channel introduced various modifications data possible transmission receiver notified 
mentioned language produced corresponding grammar 
non terminals security services goals starting upper case terminals security mechanisms starting lower case 
language serve tool analysis synthesis security architectures 
case means verify word describes certain architecture belongs 
second case means select desired productions grammar get sequence security services needed 
productions form rule says non terminal symbol appears string rewritten sequence non terminal symbol terminal symbol final sequence terminal symbols obtained represents word belongs language 
sets symbols stands belonging security goal cx stands complexity ca stands trusted party called certification authority ca sec goal conf cx conf ca cx auth cx auth ca cx int cx int ca cx sec mech phys cx sym cx asym cx crc cx ca cx cx definitions terminals non terminals sub sections 
basic definitions definitions homogenous centralised environments homogenous environment participants environment users capabilities terms available channels achieve security goals 
user kind priority 
centralised environment decentralised environment added entity called ca trusted participants 
ca capabilities participants terms availability elementary channels needed achieve security goals 
definitions non terminal terminal elements non terminal symbols definition security services base goals defined 
measure complexity added terms number necessary elementary channels accomplish certain security goal 
homogenous environment participants conf denotes homogenous individual confidentiality 
participant associated unidirectional channel read write 
auth denotes homogenous individual authentication 
participant associated unidirectional channel write read 
int denotes individual integrity 
participant associated channel writing receiver notified data altered 

environment participants trusted authority 
goals defined addition previous ones ca stands certification authority trusted participants conf ca denotes confidentiality centre 
ca associated channel write ca read 
auth ca denotes centralised authentication 
ca associated channel ca write read 
auth ca denotes individual authentication centre 
participant associated channel write ca read 
conf ca denotes individual confidentiality 
participant associated channel ca write read 
int ca denotes ca integrity channel ca user 
int ca denotes integrity channel ca user channel 
channels may considered ether channels infinite mobility space participants ether may consist public key knowledge 
terminal symbols order build security service language defined terminals physical channel message protected physical means physical identification biometrics measurement required 
implementation assume 
general form phys cx 
symmetric channel message protected symmetric cryptographic algorithm sym cx 
assume des 
asymmetric channel message protected asymmetric cryptographic algorithm 
general form asym cx 
assume rsa 
crc channel message protected integrity mechanisms 
denoted crc cx 
assume cyclic redundancy check 
certification authority message relayed ca channels mentioned 
general form ca cx 
definitions ca treated security mechanism 
conversely difficult parse grammar interpret language terminal symbol 
elementary productions execution decentralised environment decentralised environment discussed detail subsections fig 
physical channel fig 
homogenous environment 
security service physical means included sequence applied security mechanisms exchange initial secret data 
physical means employed security mechanism 
define elementary security productions decentralised environment participants auth phys auth production denotes establish authentication channels physical channels needed 
holds confidentiality integrity conf phys conf int phys int define compound security goal secu 
denotes fully secured communication participants 
participant associated secure private channel modelled secu auth conf int pair participants shares private channel able securely communicate user time 
note reduction complexity 
secure communication requires order elementary channels user triple enables securely communicate 
symmetric channel symmetric channel basic security goals achieved ways confidentiality achieved encrypting message symmetric key placing channel means encryption 
authentication achieved calculation mac message authentication code appended original message written channel form mac 
incomplete sequence received discarded 
integrity achieved applying procedure authentication new key 
mic message integrity code appended original message put channel sequence mic mic 
incomplete sequence received discarded 
stressed goal different key 
assumed case evaluation terminal symbols achieve different security goals 
symmetric channel successfully keys distributed authentication confidentiality integrity secu goal definition secu sym secu secu interpretation establish secu channels symmetric channels secu channels key distribution 
authentication confidentiality integrity described productions conf sym conf secu auth sym auth secu int sym int secu clarify realisation conf channels symmetrical channels fig 
realisation conf channels symmetrical channels 
seen conf channels realised symmetric channels 
example user needs symmetric key establish symmetric channel usr symmetric key symmetric channel symmetric channel user means symmetric channels effectively created different symmetric keys realisation conf channel 
asymmetric channel channel way confidentiality sender encrypts message recipient public key writes channel form 
authentication sender encrypts message private key puts channel form 
integrity mic calculated encrypting message sender private key writing channel form 
incomplete sequence received discarded 
basic productions follows conf asym conf auth int auth asym auth auth int int asym int auth int noted asymmetric channel principles described security services order require authentication integrity distribution public keys denoted auth int 
production compound goal secu asym secu auth int realisation follows 
integrity sender encrypts message private key get writes int channel get mic 
sequence mic sent auth channel get mic 
sequence encrypted receiver public key put receiver conf channel form mic delivered receiver 
clarify concept secu fig 
realisation secu auth conf int asymmetric channels 
crc channel implement integrity channels crc channel needed 
reduction complexity common knowledge crc processing int crc int elementary productions execution centralised environment elementary security productions centralised environment participants defined subsections 
centralised environment includes trusted party ca relaying messages participants desired security services 
principles basic secure channels decentralised environment messages relayed ca 
environment seen homogenous environment added ca physical channel 
centralised environment productions written conf ca ca conf phys conf auth ca ca auth phys auth int ca ca int phys int conf ca ca conf phys conf auth ca ca auth phys auth int ca ca int phys int int productions change complexities due basic definition integrity channel 
productions obvious 
subsequent derivations ca add redundancy needed consistent grammar easier understood 
symmetric channel symmetric channel ca participant terminals available ca conf ca conf sym conf ca auth ca auth sym conf ca int ca int sym auth sym auth sym int sym int table terminals available asymmetric channel second columns needed denote inclusion ca third needed exactly describe mechanisms 
basic security goals include ca achieved symmetric channel conf ca achieved user having personal symmetric key pair shared ca 
user encrypts message symmetric key puts channel 
auth ca achieved user having personal symmetric key pair shared ca 
ca calculates mac appends original message writes channel sequence mac 
incomplete sequence received discarded 
analogue procedures applied conf ca auth ca 
int ca int ca achieved new encryption key pair producing mic appending message 
put channel sequence 
incomplete sequence received discarded 
corresponding productions conf ca ca conf sym conf secu ca conf ca ca conf sym conf secu ca auth ca ca auth sym auth secu ca auth ca ca auth sym auth secu ca int ca ca int sym int secu ca int ca ca int sym int secu ca productions introduced compound goal secu ca represents combination authentication confidentiality integrity distribution keys needed centralised environment 
centre shares private channel participant 
assuming ca generates symmetric key pairs secu ca modelled secu ca auth ca conf ca int ca rest productions describing relaying function ca conf conf ca conf ca auth auth ca auth ca int int ca int ca interpretation production follows achieve confidentiality participants ca order confidential channels ca needed ca order additional confidential channel ca users 
productions may appear redundant represent link productions decentralised environment productions ca environment 
asymmetric channel asymmetric channel ca participant terminals available ca conf ca conf asym conf ca auth ca auth asym conf ca int ca int asym auth asym auth asym int asym int table terminals available asymmetric channel basic security goals asymmetric channel achieved way conf ca achieved user encrypting message ca public key putting channel form 
auth ca achieved encrypting message ca private key putting channel form 
conf ca achieved encrypting message ca private key encrypting message user public key 
result put channel 
auth ca achieved encrypting message user private key ca public key putting result channel int ca int ca achieved encrypted message mic appended plain message 
case key ca private key second case user private key 
incomplete sequence received discarded 
corresponding productions conf ca ca conf asym conf auth ca int ca conf ca ca conf asym conf auth ca int ca auth ca int ca auth ca ca auth asym auth auth ca int ca auth ca ca auth asym auth auth ca int ca auth ca int ca int ca ca int asym auth auth ca int ca int ca ca int asym auth auth ca int ca interpretation production achieve confidentiality centre asymmetric channel requires authentication distribution process ca public key participants integrity key 
compound construction secu ca represents establishment secret channels pair participants ca asymmetric channel modelled secu ca auth ca int ca conf ca auth ca int ca conf ca 
realisation secu ca centralised environment 
means establishing secu parties needed establish ca non terminal symbols party non terminal symbols 
note secu secu ca rest productions 
crc channel integrity crc channel provided productions int int ca int ca int ca ca int crc int int ca ca int crc int 
short example assume environment users ca user wants set group communication participants 
user wants closed conference decides realise sending symmetric conference keys desired audience 
purpose asymmetric techniques centre pass conference keys ca 
wants ca asymmetric techniques distribute key corresponding parties 
done group able start conference 
formally written conf ca int ca conf ca int ca inclusion asymmetric channel results ca conf asym conf auth ca int ca int ca ca conf asym conf auth ca int ca int ca int ca result interesting initial goal include authentication grammar resulted authentication requirement 
course system initialised verification users public keys ca verification ca public key observed environment 
implies authentication session keys 
productions final word produced 
describes possible architecture achieve starting goal ca conf asym conf ca auth phys auth ca int phys int ca int phys int ca conf asym conf ca auth phys auth ca int phys int ca int phys int ca int phys int interpretation sequence terminal symbols easy task 
prolog language suggested 
language suitable task supports dcg definite clause grammar notation 
written directly dcg 
artificial intelligence technique possible build parsing trees easier understanding architectures obtained search optimal ones 
addition costs incorporated language terms meaning sentence meaning processing power time delay accomplish security goal key management complexity 
detailed description handling meaning building parsing trees scope 

defined minimal set security services forms security services base 
base starting point design flexible language called 
language formal synthesis analysis security architectures limited cryptographic algorithms 
synthesis security architectures context means generation words analysis means interpretation words 
properties allow direct prolog programming language automatic generation verification security architectures 
area focused proving productions secure strict mathematics logic word obtained example shows place optimisation 
focus oriented automatic processing applications 
american national standards institute data encryption algorithm ansi american national standards institute new york 
boyd security architectures formal methods ieee journal selected areas communications vol 
june 
bratko prolog programming artificial intelligence addison wesley new york 
britton formal verification secure network encryption proc 
ieee symposium security privacy 
oakland april 
burrows abadi needham logic authentication acm transactions computer systems vol 

pp 
february davies price security computer networks john sons new york data communications computer networks osi addison wesley new york 
international standard organisation information processing systems open systems interconnection model security architecture iso july 
international standard organisation directory part authentication framework ccitt recommendation melbourne iso blue book vol 
viii geneva 
open systems security architectural framework finnish government printing centre helsinki 
kemmerer analyzing encryption protocols formal verification techniques ieee journal selected areas communications vol 
may 
rivest shamir adleman method obtaining digital signatures public key cryptosystems comm 
acm vol 
february pp 

spivey notation cliffs nj prentice hall 
rainer formal approach security architectures eurocrypt april 

