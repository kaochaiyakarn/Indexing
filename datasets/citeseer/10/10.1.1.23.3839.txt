designing agents systems adjustable autonomy intelligent agents starting assume responsibility critical tasks 
agents required systems infeasible simply agent behavior unsatisfactory 
desirable reduce agent autonomy give control unsatisfactory aspects agent task competent entity 
adjustable autonomy aa idea means autonomy agents humans system vary dynamically 
look relationship design agents design aa intelligent system 
guidelines help agent designers build agents easier systems aa 
intelligent agents exciting developments artificial intelligence ai centered concept agent 
agent autonomous entity senses environment acts intelligently pro actively goals 
important characteristic agent ability take actions affect environment 
agents sense act purely software environments operating system monitoring agent physical embodiment inhabit physical environment museum tour guide robot 
agent act assigned tasks potentially done quickly efficiently cheaply safely human 
humans freed dangerous boring tasks 
despite long list successful agent applications scratched surface possibilities intelligent agents change way live lives 
autonomous agents take complex tasks act intelligently decisively 
intelligent system consisting intelligent agents possibly humans conventional software 
generally intelligent system assignment responsibility authority autonomy fixed switches small number fixed configurations 
intelligent system aa system flexibly configure assignment autonomy people agents best fit situation 
ai technology develops autonomy agents increases proportionally capable agents authority responsibility 
cases agent autonomy determined system designer agent left fulfill responsibilities specification bounds imposed authority capabilities 
complex environments agent faced paul scerri nancy reed real time systems laboratory department computer information science link pings link ping sweden ida liu se vast range situations act satisfactorily 
agent appropriate reasoning mechanisms sensors actuators act appropriately situations potentially face 
situations agent unacceptable decisions take unacceptable actions potentially serious consequences 
situations agent designers reasonably ignore agent designed handle properly 
situations commonly occur build software robotic hardware properly handle situation may considered expensive time consuming 
situations unacceptably handled agent due bugs software 
importantly reasons cause agent fail handle situation satisfactorily may cause detect encountered situation capable handling satisfactorily 
example autonomous robot detect wall go may detect bumped wall 
autonomy agent complex important tasks potentially serious consequences behavior unacceptable 
agent autonomous agent may detect inadequacy killing agent may way preventing incorrect actions 
completely stopping agent means entity needs take agent responsibilities may unreasonable complex physical system spacecraft 
desirable scenario incorrect parts agent activity taken parts continue function normally 
agent developers faced challenging dilemma 
applications autonomous agents useful situations time 
small number situations small percentage time agent behavior unacceptable potentially serious consequences 
adjustable autonomy adjustable autonomy aa idea meaning dynamically change autonomy intelligent entities agents humans system 
responsibility authority entities fixed design time changed best configure system autonomy current situation 
idea dynamically assign autonomy best leverage constituent entities strengths avoid weaknesses 
aa system intelligent system distribution autonomy changed dynamically optimize system performance 
example human pilot agent detect pilot slightly alter aircraft course details functioning 
flexible assignment autonomy means system deal wider range situations effectively 
aa allows intelligence autonomy agents fully exploited stuck inadequate decision making situations occur agents handle humans handle better 
conceptual model aa entities aa reasoning aa information aa actuation environment adjustable autonomy system conceptual relationship aa intelligent system 
system aa dynamically change entities responsible achievement goals changing decision making responsibility time 
system aa dynamically change authority constituent entities take particular goals 
aa mechanisms manage changing autonomy determining appropriate changes autonomy implementing changes 
key problem addressed building aa determine appropriate distribution autonomy provide mechanisms realize autonomy changes 
distribution autonomy change current situation sub goals reconfiguring best organize system resources achieve system goals 
conceptually task changing autonomy broken parts aa information aai collection information relevant aa decision making 
aa reasoning aar reasoning autonomy changes 
aa actuation aaa realization decisions aar 
shown 
aai provides information prevailing environmental conditions current system state potential referred context relevant aar 
aa reasoner determines changes autonomy distribution lead better system performance respect goals 
aar done human software 
aaa provides mechanisms implementing decisions aa reasoning provides mechanisms realizing changes authority transfer responsibility 
aai aaa tightly constrain design potential aar 
information supplied aai determination appropriate autonomy configurations 
likewise change realized aaa decided aar 
turn aai aaa tightly constrained services provided entities system 
information entities provide supplied aai aar 
similarly autonomy change entities accept implemented aaa 
services provided entities critically important building aa system 
obviously limited designing services software entities provide services human entities fixed 
consider analogy management consultant organization 
consultant job consists collecting information making decisions organizational changes implementing changes 
matter consultant job rely employees organization inform implicitly explicitly current running goals organization order decisions 
employees supply limited insufficient incorrect misleading information consultant job significantly harder results disappointing 
consultant decision needs implemented 
matter decision accepted appropriately implemented decision worthless 
implementation aa works way entities supply appropriate information properly implement decisions best aar useless 
agent design aa agent designs differ way information represented agent easily extracted understandable aar manner 
aai services simple just providing access particular parts agent reasoning complex needing complex algorithms extract information agent depends design agent 
aai guidelines aim guide designers create agents useful understandable information possible gathered inspecting data structures running agent 
guidelines try avoid need complex algorithms extract information running agent 
aa actuation services implement autonomy changes decided aar 
autonomy changes realized aaa services decided aar 
limitations aaa services strictly limit useful con elegantly smoothly agent incorporates autonomy changes decided aar ongoing behavior better behavior system 
example imagine team human furniture carrying piano staircase 
foreman room re assigned job hopefully just go piano walk leaving colleagues squashed piano bottom stairs 
piano safe moving 
behavior furniture removal system successful worker changing tasks switches tasks reasonable manner 
idea applies aa smooth autonomy changes mean better system behavior 
agent exhibit similar common sense behavior furniture aar task simpler changes unnecessary consideration transitions agent behavior 
guidelines capture design knowledge agents aa systems gained implementation complete aa systems set guidelines 
followed designing agents aa systems guidelines lead agents features aa easy implement 
designing intelligent agents competing requirements need reconciled 
requirements related solely observable behavior agent 
example may particular verifiability simplicity computational requirements agent 
designers implicitly explicitly follow guidelines attempting meet requirement design 
guideline statement indication policy procedure determine course action 
example simple guideline minimize computational requirements agent suggest avoiding algorithms involving significant amounts search 
appropriate guidelines designers principled justifiable reason believing design meet requirements 
example design avoids extensive search algorithms designer argue justification implemented design computationally efficient guideline 
guidelines capture experiences designing agents aa systems designers leverage knowledge 
guidelines design process requirements development agents aa systems 
designing agents aa information aa information services provide raw information aai aar 
information aai services provide state intentions agent reasoning 
aar obviously limited reasoning things knows aai services limit aar aa general 
details precise information needed aar precise form information needs depend human software doing aar 
agent designs differ way information represented agent easily extracted understandable aar manner 
aai services simple just providing access particular parts agent reasoning complex needing complex algorithms extract information agent depends design agent 
aai guidelines aim guide designers create agents useful understandable information possible gathered merely inspecting data structures running agent 
guidelines try avoid need complex algorithms extract information running agent 
guidelines provide advice designing agents lead easy build high quality aai explicit information guideline represent agent reasoning process reasoning state explicitly format close format aar 
software engineering guideline software engineering practices agent design easier build aa 
design information guideline represent information information needed reasoning process explains design decisions implicit reasoning process 
designing agents aa actuation able change agent internal structure indirectly directly basic goal aaa results changes behavior 
theory agent allows sufficient access internal structure outside entity force agent capable 
part agent internal structure changed online behavior agent changed arbitrarily online 
nature agent representation behavior affects ease outside entity dynamically alter agent behavior 
example imagine difficulty reprogramming ants building ant hill build wide flat hills tall skinny ones 
new plan need mapped individual ants simple pheromone rules designed possible far trivial 
note distribution control element affects agent behavior easy change 
desire building aaa changes required internal structures agent effect particular autonomy change simple possible making aa easy implement possible 
guidelines summarize design strategies building agents behavior flexibly easily changed online deterministic execution guideline reasoning process agent deterministic predictable possible 
possible format requires translation 
building blocks guideline divide behavior small pieces related semantically clear simple way 
extra mechanisms guideline aaa mechanisms normal reasoning mechanisms agents 
design failure guideline agent designed part fails time behavior degrade gracefully 
discussion guidelines followed implementation aa systems 
system creating agents interactive simulations called ease 
ease aa give user runtime control agents simulation 
domains investigated aircraft control saab air combat simulator football robocup simulator 
second implemented system intelligent agents help human users carry day tasks human organization 
agents look tasks rescheduling meetings user delayed ordering lunch finding presenters meetings 
aim evaluate guidelines way 
map guidelines agent features systems come guidelines 
describe impact features easy implement aa 
showing agent features encouraged guidelines aa easy implement show utility guidelines 
preliminary results show guidelines designing agents aa easy implement 
ongoing looking detail relationships agent features aa facilities 
weakness evaluation ask reader take faith aa facilities show easy build genuinely useful 
proving facilities systems provide useful require complete implementations aa including complete human computer interfaces aar extensive testing unstructured environments 
unstructured real world environments say facilities genuinely useful experiment create facilities provide 
testing scope 
fact showing real world usefulness aa presents interesting problem general 
aa fundamentally doing things anticipated software software designer 
designers useful repeatable controlled experiments ability software things designers expect 
really effective tests aa come extensive real world system 
best point literature offers motivation aa aa genuinely useful real world 
cases due design constraints violated aa guidelines designing agents 
cases look directly implications violating design guideline implementation aa 
preliminary evaluation shows general violated guidelines section aa facilities difficult build resulting features 
showing violating guidelines aa difficult implement strengthen case utility guidelines 
clearly designing particular agent things take account making aa easy implement 
obviously agent able achieve behaviour required 
design requirements ability formally verify agent behaviour simpler difficult design agent 
guidelines explicit implicit advise ways meet requirements straightforward manner 
usual case possible design agent straightforward possible follow guidelines required agent features 
aa guidelines violated due conflicts guidelines requirements aa difficult implement 
tradeoffs different tradeoffs say efficiency flexibility improving detriment 
implemented systems aa high priority aa guidelines violated design requirements met 
despite need violate occasionally guidelines useful allow designers informed tradeoffs competing requirements 
guidelines allow designer understand early design process certain design decision making aa difficult implement turn lead explore options 
important note agent designs implemented aa systems distinctly different 
ease agents reactive behavior style architecture agents model decision theoretic approach 
fact distinct difference important shows guidelines restrictive permit variety different designs provided certain characteristics 
guidelines require certain features agent design overly constrain features achieved 
applications aa systems going diverse critically important guidelines overly restrict designer options 
consider analogy guideline making comfortable shoes advises hard material bottom protect foot soft top give flexibility 
guideline met huge variety different shoe designs requirements football boots dress shoes running shoes hiking boots cases requirements shoe performance may mean guideline violated astronaut space walking boots 
guideline followed comfortable shoes result violated uncomfortable shoes result 
believe aa guidelines designs property aa subsequently straightforward implement 
acknowledgments supported network real time research education sweden project saab operational analysis division swedish national board industrial technical development ik ik ik center industrial information technology 
american heritage dictionary english language 
houghton mifflin 
jeffery bradshaw 
software agents 
software agents pages 
mit press 
wolfram burgard armin cremers dieter fox dirk hnel gerhard lakemeyer dirk schulz walter steiner sebastian thrun 
interactive museum tour guide robot 
proceedings aaai pages 

case studies autonomy 
proceedings flairs pages 
noda 
soccer server simulator robocup 
proceedings ai symposium japanese society artificial intelligence december 
pell gamble gat kurien millar nayak plaunt williams 
procedural deductive executive autonomous spacecraft 
proceedings second international conference autonomous agents pages 
russell peter norvig 
artificial intelligence modern approach 
prentice hall 
erickson gini papanikolopoulos 
team robotic agents surveillance 
proceedings fourth international conference autonomous agents pages 
saab ab operational analysis modeling simulation 
user guide edition september 
swedish 
scerri pynadath tambe 
adjustable autonomy real world multi agent environments 
proceedings fifth international conference autonomous agents agents 
appear 
scerri reed 
engineering characteristics autonomous agent architectures 
journal experimental theoretical artificial intelligence 
agents 
technical abstracts technical demonstrations agents 
paul scerri nancy reed 
creating complex actors ease 
proceedings autonomous agents pages 
paul scerri nancy reed 
ease actor development environment 
proceedings workshop swedish ai society 
shneiderman 
designing user interface 
addison wesley 
hongjun song stan franklin 
fuzzy software agent 
proceedings isca conference intelligent systems pages reno nevada 
michael wooldridge nicholas jennings 
agent theories architectures languages survey 
intelligent agents pages 
springer verlag 
