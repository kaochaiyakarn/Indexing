meanings open source cristina tony lawrie centre software reliability department computing science university newcastle newcastle tyne ne ru united kingdom cristina lawrie ncl ac uk term open source widely applied describe software development methodologies 
provide judgment open source approach exposes fact simply stating project open source provide precise description approach support project 
multidisciplinary point view propose collection characteristics common vary open source projects 
set open source characteristics tick list analysing setting open source projects 
tick list provides starting point understanding meanings term open source 
term open source widely describe software development process relies contribution geographically dispersed developers means internet 
criteria basic requirement open source projects availability source code development evolution software difficult impossible 
apart characteristics confusion project open source project 
aim provide clearer description meant open source 
achieve aim investigated known open source projects linux apache mozilla 
literature studies published materials open source notably cathedral bazaar rebel code open sources people interested open source example 
line resources dedicated various open source projects interviewed individuals working open source projects free time individuals involved open source part job large corporations 
tried dissect open source determining characteristics open source projects usually 
determined set characteristics vary open source projects serves core 
rest structured follows section presents brief history open source important understanding motives directions section describes open source characteristics determining project open source section provides initial section outlines areas researched 
brief history open source started idea building software cooperating community source code available modify redistribute began gnu project mit early 
intention provide freedom relating software systems 
free software foundation fsf pioneered richard stallman generate income free software movement restricting gnu 
free software defined fsf program various freedoms users 
free software program provides users freedom run program purpose freedom study adapt code personal freedom redistribute copies program fee freedom distribute improved modified versions program public discourse fsf tends proprietary closed software view producing kind software big obstacles basic freedoms mentioned 
reflected restrictive viral nature licenses see section 
free software open source movements early term open source coined response announcement netscape plan give away source code web browser 
new term came strategy meeting people realised time dump attitude associated free software past sell idea strictly pragmatic business case grounds motivated netscape 
immediately open source initiative osi set manage promote open source definition osd 
osd composed guideline determine particular software distribution called open source 
osd asserts criteria open source software follow main ability distribute software freely availability source code right create derived works modification 
rest criteria deals licensing issues spell discrimination stance followed 
integrity author source code preserved making source changes clear community discrimination persons groups providing contributions software restriction purpose usage software providing discrimination fields endeavour rights attached software apply recipients re distribution license specific product apply sub parts licensed product license contaminate software permitting distribution non open source software open source open source free software movements compared political parties community 
political parties agree basic principles disagree practical issues open source free software exactly opposite 
disagree basic principles licensing agree practical recommendations availability source code ability modify code 
specific projects achieve goal provide software free terms liberty 
open source open source seen marketing free software attractive business users allows greater liberties licenses see section 
means open source licenses prevent people companies making profit software long source code remains available modified freely 
prominent way open source providing service distribution packages software developed open source fashion 
due fact open source software usually difficult install originally aimed hacker community 
way making money open source relevant open source platform commercial proprietary application software built 
computing corporations turn attention open source business opportunity 
looking new development method innovation sharing source code perceived way facilitating creativity 
commercial organizations attracted contributing open source projects see strategic opportunity undermine powerful dominating competitors 
side afraid maintaining control active open source project difficult 
particularly concerned risk code forking evolution separate strands original code base threatens compatibility 
fear prevents individuals companies active participation open source developments 
code forking risk usually overcome novel attitude open source community 
basing reputation measure give 
gift culture encourages people contribute binds people strand 
information gift culture available eric raymond 
open source approach compared provide clearer picture open source free software stands relation software provide comparisons licensing distribution terms categories software 
simplicity say main categories free software meaning open source proprietary software 
kinds software free category non free software software 
non free software comes author permission modify redistribute legal term means copyrighted 
top allowed add restrictions modified version means copies modified versions may free 
compile program redistribute binary proprietary software 
public domain software special case non free software 
hand software allowed additional restrictions added redistributes modifies software 
consequence copy software modification free software 
prominent distribution terms software covered gnu gpl general public license 
proprietary software closed software source code available public 
restrictive terms condition redistribution modification prohibited 
special cases group software freeware 
allow people download redistribute software free modification impossible usually released executable binary format 
difference limit usage wants keep pay license fee 
important note freeware confused free software especially modification freeware possible source code available 
non free software free download free software gpl ed open source freeware closed proprietary public domain categories software classification software manner seen diagrammatically adapted software categories free software foundation view 
subtle differences open source free software particular licensing issues 
example open source software may proprietary library kde project proprietary library called qt september unacceptable free software 
investigation surrounding differences provide better understanding highlighted section 
table summarises main comparisons characteristics software categories 
subtle differences open source free software particular licensing issues 
example open source software may proprietary library kde project proprietary library called qt september unacceptable free software 
investigation surrounding differences provide better understanding highlighted section 
table comparisons different kinds software open source free software proprietary software non closed freeware availability source code permission redistribute modify add restriction modified version free free download time limit usage possibility making money characteristics open source exposing characteristics open source projects usually hope able develop clearer picture really means particular project software development open source project 
idea open source characteristics characteristics project question compared 
additionally characteristics highlight fact just stating project open source necessarily provide precise definition 
disciplines consider spirit sponsor important highlight software development complex process draws knowledge expertise scientific disciplines 
understand better necessary emphasise interdisciplinary nature 
appears open source software development exception order determine relevant open source characteristics disciplines consider computing science covering technical aspects need considered engage open source project 
term project loosely doubtful oss projects fulfil generic management definition unique novel activity explicit finite timescales 
term create conflicts definition readers interpret term project initiatives 
uk epsrc project dependable interdisciplinary research collaboration computer systems see www org uk 
management issues dealing managerial issues relate open source projects 
social sciences addressing areas related communities involved open source projects behaviour 
psychology accounting characteristics individuals involved open source projects 
organisational aspects dealing aspects organisational structures 
economics looking economic models underlie open source projects corporations respect involvement open source projects 
law focusing legal issues 
clearly osi definition term open source address legal issues extensively encompasses economic aspects 
hand hardly touches computing science areas completely ignores areas management psychology social sciences organizational aspects 
furthermore guarantee project simply adhering osi definition term open source benefits positive effects usually related term open source reviewed people 
open source software characteristics proposed wang wang address technical aspects depth legal managerial aspects 
attempt understand open source determined set characteristics occur umbrella term considering various disciplines mentioned 
characteristics common efforts able investigate vary projects 
set characteristics deem relevant discussing open source described section covering common open source projects section addressing vary projects 
common characteristics open source projects common characteristics 
items listed osi definition open source osd see section basic requirements projects qualify open source 
living open source projects rely characteristics 
identified characteristics successful open source projects addressed 
community active open source projects defined community common interests involved continuously evolving related products results 
anecdotally community vast majority composed men 
communications tend constructive times 
motivation biggest question surrounding open source phenomena people 
explanation having people providing contributions free 
answer questions straightforward thought 
different types contributors individuals corporations 
individuals usually contribute personal satisfaction really strong philosophical beliefs care issues 
corporations usually get involved aim gain market share undermine competitors simply rely products generated open source having build fully equivalent product scratch 
peer recognition plays role motivating contributions 
having contributions recognized appropriate quality community involved individuals corporations status raised project 
consequently opinions considered carefully respect project related decisions reputation may improve outside project boundaries 
developers users set people contribute code specific open source projects composed users code produced 
means open source developers subset open source user community open source developers users users developers 
characteristic explains fact normally precise specifications requirements documents clarifying achieved project 
highlights quite unrealistic expect open source community start developing arbitrary kinds software 
software developers usually expert users medical systems nuclear plant control systems air traffic control systems 
process accepting submissions open source project evolves receiving submissions various sources address various aspects project 
common submissions bug reports source code include documentation test cases 
furthermore open source projects post areas interested receiving submissions 
consequence multiple concurrent submissions may received addressing exact area 
open source projects place processes accepting various types submissions making clear handle multiple concurrent submissions 
process accepting submissions composed main parts decision making process process disseminating information submissions 
parts get implemented varies open source project see section 
development improvement cycles product improvement open source software development process manifest breakthrough continuous improvement modes 
breakthrough improvement involves dramatic relatively impromptu changes 
evidence form product improvement open source development provided raymond development 
notes real turning point project harry sent scratch code forwarding mail client machine smtp port smtp forwarding concept biggest single payoff got parts driver vanished 
configuration got radically simpler way lose mail vanished performance improved 
continuous improvement involves increased frequency change smaller incrementally consolidating stages 
philosophy product development recognises small improvements build larger improvement overtime added advantage far easier implement 
incremental product improvement bug finding fixing development hallmark open source paradigm embodied eric raymond original characterisation release early release idea get quick feedback incorporated back product 
anecdotal claims reinforced research findings aoki open source jun project 
tracked evolution software versions identified incremental improvements single version updates followed significant functionality increases requiring major modification existing architecture 
forms product improvement generically shown 
product improvement breakthrough continuous time open source product improvement time 
modularity benefits modular design established engineering disciplines supports increased understanding design concurrent allocation implementation 
due globally distributed nature open source development defined interfaces modularised source code prerequisite effective remote collaboration 
variable characteristics areas open source projects vary numerous common 
discussion 
choice area previously mentioned open source projects request contributions areas interested receiving submissions 
open source projects process solicited spontaneous contributions open source projects may prone ignoring spontaneous contributions 
balance communities various open source projects organised differently 
strict hierarchy differentiating various levels developers see looser structure 
strict hierarchies bring centralised power structure example core developers power ordinary developers making executive decisions 
open source projects apache possible levels developers 
open source projects multi level developer groups 
looser organisational structures developers level implies decisions times full consensus approving decisions 
culture basic model underlying open source projects knowledge shown means contributions increases perception merit turn leads power 
exactly transition takes place varies project project terms timing obstacles overcome depends actual organisational structure project 
example shows possible transition passive active users start contributing project 
show ability gain respect community invited developer group greater rights code incorporate modifications code base 
projects possibility promotion developer core developer group 
transitions go way core developer wish resign developer leave project completely due commitments personality clash 
business model depending domain open source project addresses different business models may motivate involvement commercial corporations researchers individual developers users 
business models identified far packaging selling platform foundation commercial research software development 
users active users contributors transition transition non developers developers developers core developers passive users reporting bugs suggesting new features reviewing code modifying code making decisions implementing new features fixing bugs transition classification open source users developers decision making process decision making process relies dimensions vary open source project project 
quality goals acceptance criteria enacted cognitive abilities decision group social structure project 
quality goals vary widely open source project observed application area focusing performance portability 
acceptance criteria vary open source projects 
best solution submissions form aggregation multiple submissions requesting changes solution add aspect seen memory previous submissions person submission received additionally ability recognise better solutions highly dependent cognitive abilities decision group 
implies decision making process accepting submissions varies projects potentially projects people involved decisions 
social structure inherent open source project may defined hierarchy different groups people get evaluate different submissions focus area people exercise greater power monolithic group composed developers 
social structure impacts directly decision making process 
group monolithic acceptance submissions may achieved consensus majority voting 
form social structure consensus majority voting may apply times votes members counting 
submission information dissemination process information submissions acceptance may passively disseminated means newsgroups comments code may actively disseminated emails mailing lists may dedicated web space statistical information 
project starting points open source software projects may start scratch existing closed source software systems commercial research 
various projects studied find examples projects transitioned full package closed open source 
envision closed source software making gradual transition open source part subsystem time 
visibility software architecture software architecture computing system depicts structure comprises software components externally visible properties components relationships 
architecture open source software system may open closed 
closedness may occur intentionally accidentally 
having intentionally closed software architecture means core group consciously reveal structure general public 
unintentionally closed software architecture suggests structure exists people minds 
documentation testing documentation testing important aspects software development process 
documentation allows people specifically open source projects understand modify software 
thorough testing enables users developers confidence software developing going function expected 
areas overlooked vary widely open source development process 
open source contributors tend interested coding documenting testing 
probably due nature open source tries replace formal testing process effect eliminating bugs 
adding comments source code perceived sufficient documentation 
effort addressing problem lack documentation linux documentation project mozilla developer documentation web page rarity smaller open source projects 
find sort testing strategies open source projects 
exist implicitly open outside project 
licensing basic freedoms open source software differ software distributions discussed section earlier 
consider main varying features osd fsf qualifying licenses software viral term qualifying refers fundamental freedoms osd fsf agree 
closed proprietary reflects main varying features free open source software 
table illustrates popular public licenses conforming osd fsf definitions 
viral licenses ensure software code software developments cause software come terms original license 
varying feature concerns license allows original source code distributed binary form derived software products 
operational support order facilitate concurrent software development fast controlled evolution open source projects implement form configuration management 
enacted cvs tools ad hoc solution web support 
communication communities related specific open source projects done exclusively electronic means organise 
electronic means commonly dedicated mailing lists newsgroups web site 
exact structure usage web sites mailing lists newsgroups vary open source projects 
size size distinctive measure open source projects 
involved community code base sizes vary widely project project 
term open source computing science community large vague manner consequently creating confusion misunderstandings 
efforts understand open source done extensive literature review explored web sites related topic interviewed individuals corporations involved open source 
performed bearing multiple disciplines mind 
determined project characteristics relevant open source 
characteristics common efforts vary open source projects 
various characteristics relate disciplines discussed section highlighted table 
set open source characteristics tick list analysing setting open source projects 
understand way absolute tick list generated due variations exist table varying characteristics open source licenses licenses viral 
closed 
gpl bsd public ibm netscape mozilla open source project additional variable characteristics may exist 
proposed tick list provides starting point understanding open source meanings 
issues left investigated respect understanding exploiting open source approach 
clarify exact differences open source free software generate table relating various existing open source free software projects characteristics set forth describing projects implement variable parts 
open questions investigate include open source free software foster dependable software development 
claims quality software products developed open source benefit experienced having large number reviewers examining code 
consequently question arises reviews replace formal analysis guarantee dependability 
mutual influences software architecture group structure open source free software development 
architecture decay occur faster open source free software 
responsibility attached software developed open source free 
osd community motivation developers users process accepting submissions development improvement cycles modularity choice area balance culture business model decision making process submission dissemination information process starting points visibility software architecture doc 
testing size operational support licensing common variable open source characteristics common variable shall looking statistical information regarding open source free software run controlled experiments isolate validate various assumptions community large 
funded uk epsrc project dependable interdisciplinary research collaboration www org uk 
volunteers spent time sharing experiences colleagues project involved open source activity various fruitful discussions contributing 
table open source characteristics disciplines considered computing science management issues social sciences psychology organizational aspects economics law osd community motivation developers user process accepting submissions development improvement cycles modularity choice area balance culture business model decision making process submission information dissemination process project starting points visibility software architecture documentation testing licensing operational support size open source initiative open source definition www opensource org docs definition html 
linux home page linux online www linux org 
apache software foundation www apache org 
mozilla org www mozilla org 
raymond cathedral bazaar linux open source accidental revolutionary reilly associates 
moody rebel code linux open source revolution penguin press 
stone open sources voices open source revolution reilly associates 
mockus fielding case study open source software development apache server proceedings icse pp 

godfrey tu evolution open source software case study proceedings international conference software maintenance icsm 
dempsey weiss jones greenberg quantitative profile community open source linux developers tr 
wang wang open source software adoption status report ieee software march april pp 

feller fitzgerald framework analysis open source software development paradigm proceedings st international conference information systems pp 

sourceforge sourceforge net 
www org 
free software definition gnu project free software foundation fsf www fsf org philosophy free sw html 
open source initiative history osi opensource org docs history html 
free software better open source gnu com philosophy free software freedom html 
raymond org writings 
categories free non free software www gnu org philosophy categories html 
desktop environment home www kde org 
slack chambers harland harrison johnston operations management nd ed financial times pitman publishing series 
aoki hayashi reeves yamamoto case study evolution jun object oriented open source multimedia library proceedings rd icse conference toronto canada pp 

limits software people projects perspectives addison wesley 
nelson self turnbull open source methods peering clutter ieee software july august pp 

bass clements kazman software architecture practice addison wesley 
linux documentation project www org 
mozilla developer documentation www mozilla org docs 
