view query processing constraint satisfaction diego calvanese dipartimento di informatica sistemistica universita di roma la sapienza salaria roma italy calvanese dis uniroma giuseppe de giacomo dipartimento di informatica sistemistica universita di roma la sapienza salaria roma italy dis uniroma maurizio lenzerini dipartimento di informatica sistemistica universita di roma la sapienza salaria roma italy lenzerini dis uniroma moshe vardi department computer science rice university box houston tx vardi cs rice edu view query processing requires answer query posed database basis information set views queries database 
problem relevant aspects database management addressed means basic approaches query rewriting query answering 
approach tries compute rewriting query terms views aims directly answering query view extensions 
study view query processing case regular path queries basic querying mechanisms emergent field semistructured data 
results show rewriting general np function wrt size view extensions 
problem arises characterizing instances problem admit rewriting ptime 
second contribution establish tight connection view query answering constraint satisfaction problems allows show characterization going difficult 
third contribution methods computing ptime rewritings specific forms 
method established connection constraint satisfaction problems gives rewritings expressed datalog fixed number variables 
second method automata theoretic techniques gives rewritings formulated unions conjunctive regular path queries fixed number variables 

papers literature show problem view query processing relevant aspects database management including query optimization data warehousing data integration query answering incomplete information :10.1.1.127.3070
informally speaking problem requires answering query posed database basis information set views queries database 
query optimization problem relevant views may speed query processing 
data integration views represent information sources accessible answer query 
data warehouse seen set materialized views query processing reduces view query answering 
views provide partial knowledge database viewbased query processing seen special case query answering incomplete information 
approaches view query processing called query rewriting query answering respectively 
approach query set view definitions goal reformulate query expression refers views provides answer typically rewriting expressed language query views 
approach view definitions extensions views 
goal compute set tuples implied extensions set tuples satisfies databases consistent views 
notice difference approaches 
query rewriting query processing divided steps re expresses query terms query language alphabet view names second evaluates rewriting view extensions 
query answering pose limit query processing goal exploit possible information particular view extensions compute answer query 
years large number results reported problems 
query rewriting studied different assumptions form queries views :10.1.1.57.1452
rewriting techniques query optimization described example :10.1.1.30.6664
comprehensive framework view query answering interesting results 
view query processing studied case regular path queries 
address view query processing context semistructured data 
semistructured data modeled labeled directed graphs introduced aim capturing data web 
main difficulty arising context languages querying semistructured data enable expressing :10.1.1.32.3916
rpq asks pairs nodes database connected path conforming regular expression may contain restricted form recursion 
note query contains unrestricted recursion view query rewriting view query answering undecidable views recursive 
best knowledge known decidability results view query processing case query views may contain recursion reported 
spite large amount subject relationship view query rewriting viewbased query answering completely clarified 
contribution concerns study relationship 
define rewriting query respect set views function extensions views returns set pairs objects contained answer set query respect views 
call rewriting returns exactly set perfect rewriting query wrt views 
view query answering evaluating perfect rewriting view extensions equivalent problems 
typically interested queries ptime functions data complexity 
rewritings ptime 
exploiting relationship view query rewriting view query answering results show perfect rewritings ptime general assuming np 
problem arises characterizing instances query rewriting admit perfect rewriting ptime 
second contribution show going difficult 
draw establish tight connection view query answering constraint satisfaction problems 
constraint satisfaction problem csp traditionally defined terms set variables set values set constraints asks assignment variables values satisfies constraints 
elegant characterization csp terms homomorphisms relational structures 
classes finite relational structures 
constraint satisfaction problem csp decision problem structure structure vocabulary homomorphism 
show csp polynomially reducible view query answering vice versa 
indicates close relationship problem characterizing instances query rewriting admit perfect rewriting ptime problem characterizing instances csp ptime 
discussed problem longstanding open problem appears difficult solve :10.1.1.25.5406
result suggests look ways compute ptime rewriting general perfect 
comes third contribution 
methods computing ptime rewritings considering rewritings formulated expressive tractable query languages 
connection view query answering csp show obtain rewritings expressed datalog fixed number variables 
show rewriting maximal certain sense 
particular rewriting obtained perfect perfect rewriting form exists 
second automata theoretic techniques show obtain maximal rewritings expressed unions conjunctive regular path queries fixed number variables 

view query processing queries consider setting databases expressed terms edge labeled graphs queries ask pairs nodes connected specified path 
setting typical semistructured data data models share characteristic data organized labeled graph nodes represent objects edges represent links objects 
formally consider database edge labeled graph db set nodes called domain represent objects db set binary relations corresponding edges graph labeled elements alphabet 
edges represent links objects labeled attribute names 
denote edge node node labeled query mechanism consider regular path queries basic constituents full fledged query languages semistructured data 
queries denote paths corresponding words specified regular language alphabet expressed means regular expressions finite automata 
answer set rpq database db ans db path rn db regular language defined introduce problem view query answering 
consider database accessible set 
views suppose want answer rpq basis knowledge views 
specifically associated view definition def terms rpq alphabet information extension terms set ext pairs objects denote def 
def def ext 
ext ext set objects appearing ext dv say database db consistent views ext ans def db certain answer set wrt views set cert dv dv cert ans db db consistent problem view query answering set views definitions def extensions ext query pair objects dv decide cert 
complexity problem measured different ways data complexity function size ext 
expression complexity function size expressions def 
assume objects represented constants adopt unique name assumption different constants denote different objects different nodes 
combined complexity function size ext def 
complexity characterization view query answering 
theorem view query answering np complete data complexity pspacecomplete expression combined complexity 
definition view query answering reflects implicit assumptions 
views sound fact pair ext conclude ans def db vice versa 
ii domain open database consistent views may contain additional objects appear view extensions 
assumptions knowledge objects database pairs satisfying views studied 
study relationship view query answering query rewriting 
instance query rewriting query set views definitions def 
tries generate new query symbols approximates answer interpreted ext formally require ans ext cert 
context def 
def regular expressions alphabet regular expression alphabet solution problem rpq rewriting described algorithm compute maximal rewriting wrt rewritings 
rewriting general maximal allow rewritings belong larger class queries 
example shows gain considering conjunctive regular path queries conjunctive queries atoms 
example consider query views def def def maximal rewriting terms rpq empty 
consider xv xv expanding definitions obtain xr xr contained nonempty rewriting point view define rewriting wrt function ext returns set pairs objects contained certain answer set cert 
call rewriting returns exactly cert perfect rewriting wrt problem view query rewriting computing rewriting wrt problem comes different forms depending properties require rewriting 
particular interesting consider rewritings expressible certain query language datalog 
interesting consider rewritings belonging certain data complexity class example polynomial time rewriting belongs data complexity class problem deciding pair objects ext class complexity problem measured respect size ext 
worthwhile compute rewritings maximal certain class 
rewriting wrt maximal class rewriting wrt ext ext ext 
algorithm view query answering algorithm takes input query set view definitions set view extensions determines pair objects answer set query database consistent views 
fix query view definitions def consider algorithm view query answering algorithm recognition problem perfect rewriting wrt remind reader recognition problem query check certain tuple answer database 
observation establishes tight connection view query answering query rewriting 
considering setting view query answering np complete data complexity see theorem obtain result 
theorem perfect rewriting rpq wrt rpq views np function 
rpq set rpq views rewriting wrt conp complete function 
query belongs data complexity class corresponding recognition problem wrt data complexity 
proof 
membership np follows algorithm view query answering rewriting 
hardness note obtain method view query answering follows compute perfect rewriting query wrt views evaluate extension views 
view query answering np hard wrt size view extensions computing depend view extensions follows evaluating extension views np hard general 
typically interested queries ptime functions 
rewritings ptime 
unfortunately theorem perfect rewritings ptime general assuming np 
interesting characterize instances query rewriting admit perfect rewriting ptime 
note finding instances corresponds finding instances view query answering ptime data complexity 
section show going difficult exhibiting tight connection view query answering constraint satisfaction 

constraint satisfaction problems constraint satisfaction problem csp traditionally defined terms set variables set values set constraints asks assignment variables values satisfies constraints 
elegant characterization csp terms homomorphisms relational structures 
vocabulary set 
predicates associated arity 
relational structure domain interpretation function assigns predicate relation appropriate arity homomorphism relational structures vocabulary mapping 

predicate vocabulary 
classes finite relational structures 
uniform constraint satisfaction problem csp decision problem structure structure vocabulary homomorphism 
denote instance csp homomorphism exists say csp satisfiable 
consider special case consists single relational structure set relational structures vocabulary denote csp 
problem special case non uniform constraint satisfaction problem fixed input just structure case take relational structures directed graphs csp corresponds directed graph homomorphism 
general csp polynomially equivalent directed graph homomorphism structure directed graph gb csp polynomially equivalent csp gb restrict attention loss generality csp directed graphs explicitly stated 
definition csp follows directly csp problem np 
general complexity non uniform constraint satisfaction problem csp depends example csp colorability problem csp problem kn node complete graph ptime np complete 
cases domain elements undirected graph known csp ptime np complete 
dichotomy conjecture states holds structure 
recall ptime different np problems ptime np complete 
open problem dichotomy conjecture holds 
related open question characterizing structures csp ptime 

csp view query answering establish tight relationship problems view query answering 
show csp polynomially reducible viewbased query answering 
theorem directed graph 
exists rpq rpq views definitions def holds directed graph extensions ext objects cert csp satisfiable 
proof 
na ea nb eb 
define instance view query answering follows alphabet nb nb eb 
set objects view extensions dv na symbols na views va def nb def nb def va eb ext na ext na ext ea intuitively extension va represents connect nodes respectively start relations final relations query nb show homomorphism cert 
homomorphism consider database db dv defined follows node na edges pair nodes na edge ea construction homomorphism db consistent views 
suppose contradiction ans db 
clearly pair nb ans db 
objects dv 
construction db get contradiction ans db 
db database consistent views ans db 
form definitions extensions views dv ii node na edges nb iii edge ea edge nb form def database db consistent views pair nodes db remove db labeled edge connecting obtain database consistent views 
assume wlog pair nodes labeled edge db connecting define mapping follows node na take nb determined label unique edge sx show ans db implies homomorphism node na edge labeled edge ea defined labels unique edge follows eb contains edge homomorphism 
reduction proof polynomial get corollary 
corollary uniform csp polynomially reducible view query answering 
non uniform csp polynomially reducible recognition problem perfect rewritings 
observe difference view query answering recognition problem perfect rewritings case input includes query view definitions view extensions case perfect rewriting wants check pair answer 
case input perfect rewriting view extensions 
show np data complexity results recast reduction view query answering csp 
query set views definitions def call constraint template wrt structure defined follows 
vocabulary symbols denote binary predicates denote unary predicates 
aq nondeterministic automaton structure 
iff exists word def iff iff 
theorem rpq set rpq views definitions def 
problem verifying ext objects cert polynomially reducible csp constraint template wrt proof 
view extensions ext pair objects construct constraint instance csp follows dv dv set objects extensions includes ext 
show cert homomorphism homomorphism construct database db follows view pair ext choose word def ii introduce db path xn rn 
xn new objects 
db consistent views construction verified ans db 
database db consistent views ans db build mapping putting state repeating change edge db add 
projecting dv obtain homomorphism consequence theorem corollary 
corollary view query answering polynomially data complexity reducible uniform csp 
recognition problem perfect rewritings polynomially reducible data complexity non uniform csp 
theorems exhibit strong connection csp view query answering 
indicates close relationship problem characterizing instances query rewriting admit perfect rewriting ptime problem characterizing instances csp ptime 
discussed problem longstanding open problem appears difficult solve :10.1.1.25.5406

rewriting csp saw section hope perfect rewritings ptime 
furthermore follows results section characterizing ptime perfect rewriting possible difficult problem 
motivates consider rewritings expressed expressive tractable query language 
datalog language database logic programming language received tremendous amount attention past decades cf 

quite different connection applied csp query containment connection applies conjunctive queries :10.1.1.25.5406
proof appendix shows connection establish applies union path queries containment problem decidable polynomial time 
datalog program finite set rules form 
atomic formula 
xn 
relational predicates occur heads rules intensional database predicates extensional database predicates 
designated goal program 
note may occur bodies rules datalog program recursive specification semantics obtained monotone operators see 
datalog program defines query set edb predicates returns value goal predicate 
goal predicate ary program boolean query holds 
note datalog query computable polynomial time bottom evaluation fixed point program terminates polynomial number steps size see 
expressibility datalog sufficient condition tractability query 
easy see special case datalog queries 
suppose query set views definitions def 
datalog query datalog rewriting wrt ans ext cert 
clear check datalog rewriting wrt algorithm critically depends regularity candidate rewritings fact containment regular expressions decidable 
hand known containment datalog queries undecidable 
somewhat surprisingly connection view query answering csp obtain datalog rewritings 
csp class structures homomorphism feder vardi provided unifying explanation tractability non uniform csp problems showing csp expressible datalog 
show cases csp tractable boolean datalog program holds iff csp structure vocabulary 
fact showed obtain sound datalog programs datalog programs holds csp 
key parameter shows analysis number variables 
positive integer datalog collection datalog programs body rule distinct variables head rule variables variables body may different variables head 
example query non colorability expressible datalog definable goal predicate datalog program asserts cycle odd length exists 
key fact datalog csp existence canonical datalog programs 
theorem relational structure positive integer 
exists datalog program maximal sound datalog program csp sound csp contains datalog program sound csp 
note theorem implies csp expressible datalog expressible proof theorem constructive 
exponential time algorithm constructs show theorem derive datalog query rewritings 
rpq set rpq views definitions def 
construct constraint template wrt section 
shown appendix cert homomorphism consists ext addition unary relations objects respectively 
positive integer construct datalog program theorem holds cert 
want datalog program computes answer check pair objects answer 
want program check cert simultaneously pairs 
modify way 
pair variables occurring 
replace idb atom 
xm 
xm particular ary goal predicate 
replace atoms resp resp 
known equality atoms eliminated 
call resulting datalog program show sense maximal rewriting 
theorem rpq set rpq views definitions def 
constraint template wrt positive integer 
rewriting wrt contains datalog rewritings wrt particular datalog program perfect rewriting wrt perfect rewriting wrt proof 
datalog rewriting wrt binary goal predicate 
assume 
add rule goal call resulting datalog program extension ext objects corresponding constraint instance defined proof theorem 
clearly holds csp 
sound csp theorem contained suppose ext holds holds 
ext 
note datalog program 
open question get maximal datalog rewriting 
note perfect rewriting wrt exists datalog program perfect rewriting wrt know check perfect rewriting wrt know check exact check logically equivalent query modulo definitions views 
section describe rewriting technique restricted class queries know check obtained exact rewriting 

rewriting automata theoretic techniques exploit automata theoretic techniques construct rewritings expressed unions fixed number variables 
particular standard way way finite automata nfa nfa 
technical reasons start considering fixed skeleton 
skeleton defined number variables appear body query pair variables number conjuncts involve pair 
loss generality assume variables body query 
xn distinguished variables appear head 
denote skeleton pair 
second component multiset pairs variables range 
xn skeleton 
form 
body contains conjunct pair multiset skeleton union skeleton provide method rpq alphabet set views definitions def skeleton 
computes skeleton maximal rewriting wrt skeleton method characterizing counterexamples containment expansion rewriting means words special form 
particular consider words alphabet 
xn form form hi word represents database containing nodes 
xn constituting paths node edge disjoint start nodes shared different paths connected path labeled word associates view fragment path 
construct rewriting construct automaton follows 
construct nfa accepts words form iff evaluated database represented word empty 
construction exploits ability nfa jump occurrence symbol occurrence word 

construct nfa complements automaton accepts word form iff evaluated database represented word empty 

construct nfa accepts exactly words form def automaton accepts word form iff path fragment language view associated 

construct nfa automaton accepts word form iff path fragment language view associated query evaluated database corresponding word empty 

construct nfa accepts projections 
xn words accepted automaton accepts word form word represents view extensions exists database consistent views query empty 

construct automaton intersecting complement nfa accepts 
automaton accepts words represent view extensions databases consistent views query empty 
observe word accepted viewed skeleton simple form rpq simply concatenation symbols call simple 
language accepted denotes possibly infinite union simple 
show represent possibly infinite union finite union 
construct new automaton set states initial final states alphabet formed symbols regular languages ex variables transitions labeled transitions obtained follows 
pair states pair variables ex intersection language accepted automaton obtained changing initial states final states 
intersection empty contains transition ex 
accepts words correspond simple fixed skeleton accepts words number symbols form ex equal number conjuncts determined skeleton 
language accepted finite corresponds finite union obtained directly word accepted theorem maximal rewriting wrt rewritings correspond possibly infinite unions skeleton proof 
suffices focus words accepted prove word accepted represents simple replacing def results contained possible show check contained sufficient verify database db canonical db contains pair 
database db canonical db constitutes paths conjunct node edge disjoint ii 
path associated conjunct connects node node labeled word 
observe databases canonical represented words 
consider word accepted accepted follows word expands accepted accepted accepted correspond canonical database needs considered corresponds canonical database db subwords annotated view symbols 
case exists word expands corresponds db annotated 
corresponds annotated canonical database accepted means accepted represents canonical database yield 
see maximal rewritings correspond unions skeleton assume rewriting containing simple skeleton corresponds word accepted accepted expansion accepted corresponds canonical database obtained replacing def yield contradicting fact rewriting 
case fix skeleton rewriting number variables construction carries unchanged 
variables form 
em integer 
range 
xn 
note body may contain arbitrary number conjuncts pair variables union variables 
represent queries need consider words form words unlimited number subwords form proceed steps modification 
call resulting automaton consider accepting run word 
subword form corresponds states simple pumping argument shows suffices consider words distinct subwords form deleting subwords get bigger query 
proceed construction rewriting proviso consider words subwords form call theorem maximal rewriting wrt rewritings correspond possibly infinite unions variables 
note variables rewritten datalog program 
theorem con tained nice property know test exact rewriting 
techniques similar check effectively rewriting exact 
unfortunately case know check perfect rewriting 
observe easier evaluate datalog data complexity nlogspace datalog ptime 

studied view query processing semistructured data 
set framework clarifies relationships approaches problem query rewriting query answering 
framework shown perfect rewriting general np function wrt size view extensions 
turned attention problem characterizing instances query rewriting admit rewriting ptime 
tight connection view query answering constraint satisfaction problems shown characterization going difficult 
proposed methods computing ptime rewritings 
method rewritings expressed datalog second method rewritings formulated unions conjunctive regular path queries 
methods rewritings parametrized number variables 
interesting open problems investigate 
study impact extending language inverse operator line 
remains open devise method allows compute maximal ptime rewriting independently language express rewriting 
author supported part nsf ccr 
abiteboul 
querying semi structured data 
proc 
th int 
conf 
database theory icdt pages 
abiteboul duschka 
complexity answering queries materialized views 
proc 
th acm sigact sigmod sigart sym 
principles database systems pods pages 
abiteboul hull vianu 
foundations databases 
addison wesley publ 
reading massachussetts 
abiteboul quass mchugh widom wiener 
lorel query language semistructured data 
int 
digital libraries 
candan papakonstantinou subrahmanian 
query caching optimization distributed mediator systems 
proc 
acm sigmod int 
conf 
management data pages 
afrati 
answering queries materialized views disjunction 
proc 
th int 
conf 
database theory icdt volume lecture notes computer science pages 
springer verlag 
beeri levy 
rousset 
rewriting queries views description logics 
proc 
th acm sigact sigmod sigart sym 
principles database systems pods pages 
buneman 
semistructured data 
proc 
th acm sigact sigmod sigart sym 
principles database systems pods pages 
buneman davidson fernandez suciu 
adding structure unstructured data 
proc 
th int 
conf 
database theory icdt pages 
buneman davidson hillebrand suciu 
query language optimization technique unstructured data 
proc 
acm sigmod int 
conf 
management data pages 
calvanese de giacomo lenzerini vardi 
rewriting regular expressions regular path queries 
proc 
th acm sigact sigmod sigart sym 
principles database systems pods pages 
calvanese de giacomo lenzerini vardi 
rewriting regular expressions semi structured data 
proc 
icdt workshop query processing semi structured data non standard data formats 
calvanese de giacomo lenzerini vardi 
answering regular path queries views 
proc 
th ieee int 
conf 
data engineering icde pages 
calvanese de giacomo lenzerini vardi 
containment conjunctive regular path queries inverse 
proc 
th int 
conf 
principles knowledge representation reasoning kr 
appear 
calvanese de giacomo lenzerini vardi 
query processing views regular path queries inverse 
proc 
th acm sigact sigmod sigart sym 
principles database systems pods 
appear 
chaudhuri krishnamurthy shim 
optimizing queries materialized views 
proc 
th ieee int 
conf 
data engineering icde taipei taiwan 
cohen nutt 
rewriting aggregate queries views 
proc 
th acm sigact sigmod sigart sym 
principles database systems pods pages 
deutsch fernandez florescu levy suciu 
xml ql query language xml 
submission world wide web consortium aug 
available www org tr note xml ql 
duschka genesereth 
answering recursive queries views 
proc 
th acm sigact sigmod sigart sym 
principles database systems pods pages 
duschka levy 
recursive plans information gathering 
proc 
th int 
joint conf 
artificial intelligence ijcai pages 
feder vardi 
computational structure monotone monadic snp constraint satisfaction 
siam computing 
fernandez florescu kang levy suciu 
catching boat strudel experiences web site management system 
proc 
acm sigmod int 
conf 
management data pages 
fernandez suciu 
optimizing regular path expressions graph schemas 
proc 
th ieee int 
conf 
data engineering icde pages 
florescu levy mendelzon 
database techniques world wide web survey 
sigmod record 
ginsberg editor 
readings nonmonotonic reasoning 
morgan kaufmann los altos 
grahne mendelzon 
tableau techniques querying information sources global schemas 
proc 
th int 
conf 
database theory icdt volume lecture notes computer science pages 
springer verlag 
grumbach 
querying aggregate data 
proc 
th acm sigact sigmod sigart sym 
principles database systems pods pages 

query folding inclusion dependencies 
proc 
th ieee int 
conf 
data engineering icde pages 
hell 
complexity coloring 
combinatorial theory series 
hopcroft ullman 
automata theory languages computation 
addison wesley publ 
reading massachussetts 
kolaitis vardi :10.1.1.25.5406
conjunctive query containment constraint satisfaction 
proc 
th acm sigact sigmod sigart sym 
principles database systems pods pages 
ladner 
structure polynomial time reducibility 
acm 
levy 
obtaining complete answers incomplete databases 
proc 
nd int 
conf 
large data bases vldb pages 
levy mendelzon sagiv srivastava 
answering queries views 
proc 
th acm sigact sigmod sigart sym 
principles database systems pods pages 
milo suciu 
index structures path expressions 
proc 
th int 
conf 
database theory icdt volume lecture notes computer science pages 
springer verlag 
papakonstantinou vassalos 
query rewriting semistructured views 
proc 
acm sigmod int 
conf 
management data 
quass rajaraman sagiv ullman widom 
querying semistructured heterogeneous information 
proc 
th int 
conf 
deductive object oriented databases dood pages 
springer verlag 
rajaraman sagiv ullman 
answering queries templates binding patterns 
proc 
th acm sigact sigmod sigart sym 
principles database systems pods 
reiter 
closed world data bases 
gallaire minker editors logic databases pages 
plenum publ 
new york 
republished 
schaefer 
complexity satisfiability problems 
proc 
th acm sym 
theory computing stoc pages 
shmueli 
equivalence datalog queries undecidable 
logic programming 
srivastava dar jagadish levy 
answering queries aggregation views 
proc 
nd int 
conf 
large data bases vldb pages 
solomon ioannidis 
gmap versatile tool data independence 
large database 
ullman 
principles database knowledge base systems volume 
computer science press maryland 
ullman 
information integration logical views 
proc 
th int 
conf 
database theory icdt volume lecture notes computer science pages 
springer verlag 
vardi 
complexity relational query languages 
proc 
th acm sigact sym 
theory computing stoc pages 
vardi 
note reduction way automata way automata 
information processing letters 
