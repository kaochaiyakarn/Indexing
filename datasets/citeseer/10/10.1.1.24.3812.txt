design spaces link structure versioning reflects existing composite hypertext versioning systems presents high level design spaces capture range potential choices system data models versioning links versioning hypertext structure 
design spaces rest foundation consisting containment model describing choices containment hypertext systems design space persistently recording object revision history applicability versioning systems 
example points structure versioning design space corresponding existing composite hypertext versioning systems 
design spaces allows data models existing hypertext versioning systems decomposed compared principled way provides new system designers significant insight design tradeoffs various link structure versioning approaches 
keywords hypertext versioning link structure versioning containment configuration management consider software engineering 
large software project consists thousands files comprising requirements design documents source code test cases build files bug reports memos email web pages 
relationships files source file satisfies requirement stated document test case examines code meet requirement 
chimera examples hypertext systems goal capture relationships software project files hypertext links 
relationships hypertext system allow rapid navigation related files visualization analysis relationship network 
act instantiating relationships concrete effect changing single software file network relationships modifying file create new relationships alter destroy existing ones 
james whitehead jr university california santa cruz mail soe ucsc edu software engineering domain best common practice involves maintaining composing previous states project problem addressed discipline software configuration management 
hypertext version controlled software project necessarily entails accommodating versioned files project configurations 
consequence fact existing hypertext systems software development version links significant factor preventing wider domain 
domains characteristics large amounts content enormous numbers interrelationships prior states content preserved 
document management collections documents contexts aerospace engineering documents interoperability standards need configuration control possess wide range relationships usefully captured hypertext links 
legal documents comprising laws regulations tax codes important class documents full interrelationships 
important store retrieve previous document revisions legal systems prevent ex post facto laws version law affects case effect time 
especially relevant tax codes change frequently 
hypertext support easy navigate related laws precedents regulations codes 
audit papers inter related information gathered creating network content develop independent opinion concerning accuracy financial statements benefit application hypertext 
due collaborative nature task need freeze state documents analysis emergent understanding financial statements change implies linkages audit working papers final audit report hypertext versioning necessary hypertext financial audits 
domains software engineering document management legal audit requirement preserve prior states individual documents necessarily entails systems capture inter document relationships hypertext links provide hypertext versioning support 
past fifteen years slow steady stream research hypertext versioning 
composite versioning systems comprise important class hypertext versioning systems characterized container object composite contain documents hypertext network 
prominent composite systems include neptune cover verse versioning support microcosm 
hypermedia version control framework policy neutral toolkit contains composite objects composite systems 
systems viewed having explored single points complex multi faceted space possible design tradeoffs accomplishing goal versioning hypertext networks 
knowledge generated specific data model system research performed difficult apply different systems problem areas 
consequence application hypertext software engineering document management legal audit similar domains limited absence systematically organized knowledge concerning hypertext versioning 
concerns addressed hypertext versioning research include issues collaboration support visualizing versioned spaces merging hypertext networks representing variants navigating versioned spaces 
issues important addressed hypertext versioning system focuses essence hypertext versioning version hypertext links hypertext structures 
goal provide comprehensive description key decisions tradeoffs involved design spaces versioning links structure 
information conveyed system independent manner data modeling decisions explicit 
design spaces link versioning structure versioning depend additional design spaces containment persistent storage revision histories 
design spaces link versioning structure versioning design spaces follow building 
main contribution systematic overview possible choices involved containment revision history versioning versioning links versioning structure 
design spaces allow existing hypertext versioning systems functionality better understood compared principled way design spaces comparison framework 
design spaces identify approaches tried provide interesting research directions 
improved understanding hypertext versioning provided design spaces expected lead greater hypertext versioning capability domains require version aware hypertext capability 
remainder organized follows 
definitions common terms section 
followed order descriptions design spaces containment persistent storage revision histories link versioning structure versioning 
brief related section completes 
definitions section contains definitions terms description design spaces explained 
definitions basic hypertext abstractions anchor link link structure 
artifact intended create communicative experience document image song 
anchor handle specific set symbols 
link association set works set anchors combination 
link structure set links 
structure evocative sense describe graph created link set 
objects persistently represent basic hypertext abstractions 
object single aggregate data item represents abstraction 
objects represent abstractions works anchors links link structures 
terms characterize versioning state object object capture revision history 
unversioned object object state current state modifications overwrite 
revision snapshot instant evolution object 
versioned object object signifies specific abstraction independent specific revision instant time 
versioned object contains revisions object signifies 
revision selection rule expression evaluated members revision history select multiple members history 
containment design space containment common relationships data models hypertext versioning systems static links versioned objects workspaces compound documents user defined collections viewed types containers 
result understanding relationships entities hypertext versioning systems requires understanding different permutations containment 
basic form container models set element entity abstraction 
container entity holds set 
main aspects containment design space properties container qualities container mathematic set properties properties specific computer representation containment entity number containers hold 
choices single containment entity belongs just containment set multiple containment entity belongs multiple containment sets membership container number times contain entity 
choices single membership entity belong successor linear revision history containing revisions 
revision successor 
successor versioned object referentially contains revisions class successor relationship 
versioned object contains revisions successor relationship 
containment set multiple membership entity belong containment set multiple times case containment set bag multiset ordering persistent ordering container 
choices ordered entities containment set fixed successive arrangement unordered entities prescribed arrangement indexed arrangement determined specification entity values metadata grouped subsets members ordered subsets ordering 
containment type containment relationships represented inclusion referential described 
broadly ways represent container contains particular entity 
container physically include contained item identifier members 
case known inclusion containment referential 
entities containment relationship relationship represented permutations identifier storage 
identifier stored container 
additionally identifier storage delegated separate entity class relationship 
class relationship container permutations identifier storage apply container endpoint relationship endpoint 
typically firstclass relationship holds identifiers container 
persistent storage revision histories objects represent abstractions works anchors links containers workspaces computer 
section presents revision history design successor successor versioned object referentially contains revisions 
revision referentially contains successor 
revisions independent objects connected class link represents successor relationship 
state design choices representing object revision history 
space describing different techniques recording revision history objects 
revision history design space foundational describes basic techniques recording evolution time works anchors links containers workspaces 
approaches create archive past revisions add dimension time previously current time 
design space structure versioning directly builds design space depends exactly works anchors links versioned 
limiting inquiry just state versioning approaches considering change systems pie changes primary objects revisions approaches recording revision history object versioned object object predecessor successor relationship approaches described 
versioned objects approach revision separate object referentially contained versioned object container holds revisions object shown figures 
links relationships record predecessors successors revision objects 
containment relationship revision objects versioned object type typically containment relationship container object container holds identifier 
advantage approach ability record metadata versioned object individual revisions 
range choices represent predecessor successor relationships 
revision viewed having set predecessors set successors containment design space applicable 
versioned object approach requires revision separate object individual revision inclusion containment predecessors successors 
referential containment types employed 
possible revision store predecessor successor relationships revision 
possible revisions hold predecessor relationships predecessor relationships child revisions double duty successor relationships parent 
class relationship objects hypertext links see advantage revision objects need store predecessor successor information potentially participate multiple version histories 
class relationship objects contained versioned object containment type 
revisions contained referential containment revisions belong containers versioned object user created containers folders directories workspaces configurations 
container contents versioned referential containment allows revisions reused revisions versioned containers resulting fewer objects occur reuse wasn possible revisions needed copied belong container revision 
systems contain revisions inside versioned objects containment include cover hypermedia version control framework 
object versioning scheme versioned object uses inclusion containment hold revisions revisions versioned object 
object versioning differs versioned object approach type containment object versioning employing inclusion versioned object referential types 
object versioning shown 
examples include files rcs files sccs versioning capability word processors microsoft word eh edit historian delta 
systems share quality containing revisions concrete representations vary significantly 
advantage technique revisions stored single object possible guarantee stability objects current location endpoint computed 
changes recorded keystroke level object versioning support remote collaborative authoring collaborators simultaneously document operations collaborators recorded 
recording revisions drawback publicly accessible document want reveal prior revisions 
object versioning drawback revisions participate containment structures replica specific revision placed container 
alternately possible referential containment hold entire versioned object included revisions multiple containers 
significant design choices object revision size minimum length content chunk range attributes set chunk 
contrast attributes settable objects attributes set content chunks finer granularity applied subparts entire object 
chunk size varies largest minimum chunk size programming language function choices single line preprocessor programming language token way single character 
settable attributes include person change time change 
common attributes include revision number change rationale comment field 
systems limit settable attributes predefined system provide ability set arbitrary attributes retrieve predicates 
arbitrarily settable attributes allow object versioning systems handle object variant representation tasks 
predecessor successor relationships revision stored separate object container object represents particular versioned object see 
predecessor successor relationships exist revisions version history 
typically repository super container holds revisions objects relationships large pool objects 
information available determine subset object pool comprises version history predecessor successor relationships object revisions 
advantage approach support versioning container objects 
conjunction decentralized name addressing scheme model revision histories span organizational machine boundaries avoids issue machine hosts collection representing versioned object 
revision histories span organizational boundaries referential integrity potential problem communication coordination machines storing individual revisions guaranteed 
disadvantages approach include inefficient revision selection inefficient creation arbitrary configurations inefficient setting metadata unique version history object labels 
examples approach include xanadu ntt labs 
versioning proposal 
link versioning design space design space persistent storage revision histories possible concisely characterize design space link versioning 
representation links typically takes forms link independent object link contained object representing 
independent links entire object versioning design space available representing revision history link 
link contained object representing greater constraints versioned typically link versioning side effect versioning 
independent links independent system object link history recorded techniques recording revision history objects 
versioned object object versioning predecessor successor relationship approaches shown potentially 
links versioned object approach typically container object referentially contains revisions link 
versioned object approach advantage permits creation composites containing consistent set documents links revision specific time specific snapshot development composite 
containment allows creation containers model link structure containing single revision multiple links way capturing link structure 
object versioning advantage needing object record revisions single link 
drawback making composite creation difficult entire versioned object need contained individual revisions need copied versioned object placed container 
important design choice object versioning size minimum length content chunk 
important link versioning 
fine grain change tracking provided typically provide value links minimal content link endpoints justify added complexity change tracking 
link significant chunks metadata annotation fine grain change tracking textual metadata items valuable 
predecessor successor relationships capture revision history links possible 
eliminate need container object representing revisions link permit link revisions easily span control boundaries 
drawback difficult efficiently evaluate revision selection rules 
existing hypertext system versions links way 
links dependent part works hypertext systems links contained dependent objects representing linked works 
links embedded portion object representing content case html links web 
alternately links contained metadata object content case source link webdav 
links contained object content history content object content new revision links content 
versioning links completely subsidiary versioning content 
links contained metadata choices 
metadata versioned rest object link versioning subsidiary versioning object 
conceivable metadata versioned separately main object item metadata possessing revision history 
advantage metadata items links conceptually part object independent version histories 
drawback object substantially complex item metadata contain multiple revisions 
existing hypertext system provides metadata versioning services 
structure versioning design space abstractly structure versioning act maintaining revision history link set 
set represented computer container essence structure versioning placing set links container termed structure container versioning structure container 
premise underlies structure versioning design space 
existence structure container means containment design space brought bear need version structure container brings versioning design space 
structure versioning design space depends existence design spaces terms describe design choices 
criteria determine particular structure versioning design choice complete 
symbolic rendition criterion asserts sufficient information create symbolic rendition view screen display document link endpoints including rendition anchors link endpoints 
structure container include works links anchors collections revision selection rules held structure container possess information connect links works 
works part structure container works links anchors revision selection rules information connect specific link revision specific anchor revision 
link traversal criterion asserts sufficient information perform link traversal anchor 
anchors part system data model sufficient information traverse link symbolic depiction link endpoint symbol represents endpoint link connects entire works 
primary elements structure design space structure container hold 
structure container minimum contain links means limited 
structure container may hold works anchors container objects 
structure container contains links capable representing link structure 
structure container holds works anchors represent link structure consistent slice hypertext holding just links linked works anchor points works 
possible structure container hold works links dependent part works 
approach similarly permits versioning consistent slice hypertext significant drawback versioning structure independent content 
turn substantially difficult maintain multiple versioned structures set works 
goal just version structure structure container need contain sufficient information satisfy completeness criteria 
link endpoint specifies anchor revision anchor revision specifies revision structure container need contain links possible link revision determine information needed create symbolic rendition perform link traversal 
link endpoint specifies versioned object structure container containment relationship link works anchors hold revision selection rule discussed selects specific revision satisfies completeness criteria 
link conjunction revision selection rule contains sufficient information satisfy completeness criteria criteria provide motivation adding works anchors container objects collections composites structure container 
composite hypertext versioning systems include works links composites act structure containers 
motivation composite dual duty structure container workspace 
workspaces provide benefit maintaining internally consistent subset entire object space 
point structure versioning design space fully specified giving complete list entities contained structure container 
versioning design space choice structure container 
structure container choices versioning design space versioned object object versioning predecessor successor relationships 
mandatory structure container versioned order provide structure versioning versioning optional 
example version links individually version structure placing links inside containers versioned revision container records specific revision link structure 
point structure versioning design space fully specified listing structure container contained entities choice versioning mechanism employed record revision history entity 
entity versioned noted 
containment design space choice pairs containers 
container pair involved structure versioning containment relationship needs specified choosing point containment design space 
applies just object contained structure container endpoints links links modeled containers containment relationship anchors objects 
furthermore container pair versioned versioned object object approach necessary determine versioned object individual revision contained 
choices inherent containment relationship containment type inclusion referential greatest impact structure versioning inclusion containment implies versioning contained item dependent versioning container 
referential containment leaves free revision history independent revision history container 
structure container allows single containment objects leads significant object duplication evolution structure revision structure container constitutes separate container singly contained objects belong 
result new structure container revisions employ single containment replicate contained objects new revision working copy 
example case neptune 
structure container holds link single revision endpoint objects anchor revision selection rule located structure collection additional dynamic containment choice available 
typically link referentially contains endpoints selecting specific revision endpoint objects revision selection rule 
structure container evaluates revision selection rule select individual revision endpoint object anchor 
revision selection step duplicated link structure collection 
avoid duplication link employ indirect referential containment link endpoint revision selected structure container 
link endpoint binding point filled revision selection rule evaluation structure collection 
location scope revision selection rule 
dynamic containment revision selection rule structure versioning providing benefits 
revision selection rules may located structure container specific containment relationship 
located structure container scope rule containment relationships versioned object container versioned object object versioning approaches 
located single containment relationship scope relationship 
advantage having revision selection rule structure container evaluation efficiency ease maintenance 
advantage having revision selection rules containment arc flexibility containment arc permitting separate revision selection rule 
revision selection rules bring benefits 
allow expressive selection revisions just explicit versioned object structure collection structure collection revision rsr versioned object works revision containment container multiple containment single membership unordered containment relationship container link unversioned containment container ordered multiple containment single membership ordered containment relationship container selection revision identifier permitting selection revision specific time combination human readable label revision label beta release 
revision selection rules allow single unversioned link refer different revisions time 
trick accomplished having link endpoint versioned object revision selection rule select specific revision 
rule stored separate link rule selected revision change modifying link 
holder revision selection rule versioned link appearance versioned selected revisions change time revision selection rule 
example describes approach detail 
revision selection rules structure container provide single modification point changing contained revisions useful trait performing revision selection label revision selection 
label revision selection additional benefit creating internally consistent hypertext structures assuming hypertext consistent labels applied 
point structure versioning design space complete container pair including structure container links contained endpoints ultimate revision decision revision selection rule structure collection particular containment relationship determines revision endpoint containment arc alternately revision selection rule employed meaning specific revision explicitly selected noted 
structure versioning examples sections provide examples highlight structure versioning design space 
example versioned structure unversioned links example choices structure versioning design space abstractions structure collection works links 
anchors links join works 
structure container contains links versioned objects versioning design space choices structure containers versioned versioned object approach links unversioned works versioned versioned object approach containment design choices structure container link versioned object referential multiple containment single membership unordered containment relationship structure container link versioned object referential multiple containment single membership successively ordered containment relationship link container revision selection rule stored collection affects link endpoints provides selection specific revision versioned object 
containment diagram showing design choices shown 
instance containment structure shown 
structure container referentially contains versioned objects versioned object link endpoint letting revision selection rule choose specific revision need duplicate link point newly created revisions eliminated 
including time revision selection rules allows prior link endpoints recovered reverting prior container revision 
approach achieves structure versioning unversioned links 
essentially approach stores separate revisions links explicitly recording predecessor successor relationships 
predecessor successor relationships links implicitly recorded structure container revision history unversioned shows containment diagram example versioned structure unversioned links 
structure collection revision contains revision selection rule rsr 
shows unversioned link versioned works versioned structure collection rsr versioned object works versioned object structure collection structure collection revision revision link revision containment container multiple containment single membership ordered containment relationship container rsr links contained structure container 
result revision structure container records specific revision link structure 
approach drawback possible efficiently evaluate revision selection rules revisions specific link 
approach focus recording history link structure individual links 
symbolic rendition completion criteria met revision structure container holds versioned object revision selection rule selects revision display links 
information needed create symbolic rendition 
link traversal criteria met link endpoints versioned objects revision structure collection revision selection rule chooses specific revision endpoint 
variants unversioned link approach possible explored existing literature 
works possible object versioning structure container holds entire versioned object permits efficient evaluation revision selection rules 
predecessor successor relationships approach versioning works compatible links require efficient evaluation revision selection rules 
really place revision selection rule stored structure container 
link store rule entail creating new link revision structure container order preserve selected revision time container frozen 
versioned objects store rule impossible freeze rule new structure container revision new revision structure container imply new revision contained versioned objects unversioned 
rsr link versioned object containment container selection rsr multiple containment single membership ordered containment relationship container dynamic containment selects revision versioned object rsr 
rsr rsr rsr rsr rsr rsr example versioned structure versioned links example choices structure versioning design space abstractions structure collection works links 
anchors links join works 
structure container contains link revisions revisions versioning design space choices structure containers links works versioned versioned object approach containment design choices structure container link revision revision link revision referential multiple containment single membership successively ordered containment relationship link container dynamic containment revision selection rule versioned object 
revision selection rule stored containment arc structure container providing selection link revisions link versioned objects selection specific revisions versioned objects 
shows containment diagram structure versioning design choices 
distinguishing element example versioned links revision selection rules containment arcs structure collection revisions link revisions 
example instance structure versioning approach shown 
essence structure versioning approach cover verse 
placement revision selection rules containment arcs yields excellent revision selection flexibility drawbacks 
evaluation individual revision selection rules efficient rsr current time revision selection rules rsr rsr latest time rsr rsr latest time rsr rsr rsr latest time shows containment diagram example versioned structure versioned links 
example containment structure structure container holding revision link works evaluation rule containment arcs 
second increases performed ensure structure container holds consistent hypertext 
consider rsr changed latest time selected 
link traversal starting endpoint result display structure container currently holds 
user perceive inconsistent 
related hypertext versioning fabio written published survey short belongs special issue acm computing surveys hypertext 
provides overview hypertext versioning presenting advantages history recording accountability collaboration permanence 
despite hypertext versioning literature contain detailed survey versioning data models design spaces 
course objective 
hypermedia version control framework hicks presents data model conceptual architecture hypertext versioning open hypertext systems 
comprehensively describes data modeling issues inherent hypertext versioning analysis existing hypertext versioning systems 
extends sp hb data model versioning capabilities 
judicious specialization subtyping concepts equivalent expressive power model 
current emphasizes design choices means characterize design spaces presents information series issues 
additional difference model validated implementation running system 
outside hypertext versioning survey articles relevant hypertext versioning conradi westfechtel survey versioning data models versioning configuration management systems katz survey versioning engineering database systems 
addition predominantly state versioning revision distinct persistent identity conradi westfechtel term extensional versioning discuss intensional versioning revisions constructed property descriptions 
provide detailed discussion versioning taxonomy versioning data models 
taxonomy strong containment model clearly differentiate versioned object object predecessor successor relationships approaches 
versioning issues encountered hypertext versioning configuration management engineering database systems support development integrated circuits 
randy katz performed substantive survey version data models engineering database systems 
similar katz survey basic modeling primitives derivation predecessor successor composition containment variant relationships 
show engineering database systems model various versioning scenarios 
survey provides set unified terminology unified data model high level conceptual architecture 
containment katz survey just simple part relationship involve distinction inclusion containment 
additionally relationships predefined abstraction corresponds hypertext link link structure 
building design spaces containment persistent storage revision histories link versioning structure versioning design space concisely describes range techniques recording history hypertext link structures 
major aspects space determination objects contained structure container versioning design space choice structure container containment design space choice container pairs location scope revision selection rules 
previously composite hypertext versioning systems explored individual points structure versioning design space commonality providing map design possibilities coherent model describing structure versioning capabilities systems 
examples structure design space encompass design choices existing composite hypertext versioning systems serve validation structure design space 
primary motivation enhance state hypertext versioning knowledge engineers creating systems software engineering document management audits law archives able quickly learn known link structure versioning 
knowledge allow add hypertext capabilities systems due lack understanding concerning interactions links versioned objects populate systems 
difficulty versioning link structures limited application hypertext domains hoped extend utility hypertext systems 
acknowledgments dissertation committee richard taylor chair david rosenblum mark ackerman feedback portions derive phd dissertation 
discussion comments david hicks dramatically increased understanding model helped refine 
abu fisher multi grain version control historian system proc 
scm brussels belgium july pp 

anderson taylor whitehead jr chimera hypertext heterogeneous software environments proc 
echt edinburgh scotland sept pp 

atkins version sensitive editing change history programming tool proc 
scm brussels belgium july pp 

bendix fine grained change tracking editing structured documents proc 
scm toulouse france sept pp 

conradi westfechtel version models software configuration management acm computing surveys vol 
pp 

coplien thompson delta system nontraditional approach software version management proc 
international switching symposium phoenix arizona march pp 

dart concepts configuration management systems proc 
third int workshop software configuration management trondheim norway june pp 

delisle schwartz neptune hypertext system cad applications proc 
int conference management data sigmod washington dc may pp 

delisle schwartz contexts partitioning concept hypertext acm transactions office information systems vol 
pp 

hypertext challenges auditing domain proc 
hypertext pittsburgh pa nov pp 

durand change oriented concurrency control support collaborative applications ph dissertation 
boston university boston ma 
edwards mynatt techniques autonomous collaboration proc 
chi atlanta ga march pp 

fraser myers editor revision control acm transactions programming languages systems vol 
pp 

goland whitehead jr carter jensen extensions distributed authoring webdav microsoft irvine netscape novell 
internet proposed standard request comments rfc feburary 
goldstein bobrow layered approach software design interactive programming environments shrobe sandewall eds 
new york ny mcgraw hill pp 

gr nb composites dexter hypermedia framework proc 
echt edinburgh scotland sept pp 

haake cover contextual version server hypertext applications proc 
echt milano italy nov dec pp 

haake cover implementation contextual version server hypertext applications proc 
echt edinburgh scotland sept pp 

haake haake take cover exploiting version support cooperative systems proc 
interchi human factors computer systems amsterdam netherlands april pp 

haake hicks verse hypertext versioning styles proc 
hypertext washington dc march pp 

hicks leggett hypermedia version control framework acm transactions information systems vol 
pp 

katz unified framework version modeling engineering databases acm computing surveys vol 
pp 

kruskal managing multi version programs editor ibm journal research development vol 
pp 

leggett viewing dexter open eyes communications acm vol 
pp 

malcolm schuler industrial strength hypermedia requirements large engineering enterprise proc 
hypertext san antonio texas dec pp 

hall version control microcosm proc 
workshop role version control cscw held ecscw stockholm sweden september 
nelson literary machines ed 
ca mindful press 
structural cognitive problems providing version control hypertext proc 
echt milano italy nov dec pp 

ota takahashi version management meta level links 
internet draft expired accessed nov www ics uci edu pub ietf webdav draft ota version txt 
source code control system ieee transactions software engineering vol 
pp 

bernstein kruskal creation maintenance multiple versions proc 
international workshop software version configuration control germany pp 

soares rodrigues versioning support system multimedia tools applications vol 
pp 

soares rodriguez casanova nested composite nodes version control open hypermedia system int journal information systems vol 
pp 

tichy rcs system version control software practice experience vol 
pp 

versioning hypermedia acm computing surveys vol 

durand versioning support collaboration www proc 
www boston ma november pp 

leggett extensibility develop dynamic open distributed hypertext systems proc 
echt milano italy nov dec pp 

leggett approach open hypermedia systems proc 
hypertext washington dc march pp 

