university southampton introducing relevancy context open hypermedia link service gareth hughes mini thesis submitted transfer registration ph faculty engineering applied science department electronics computer science august contents 
link services related technology 
early hypermedia systems link service 
sun link service 
microcosm 

distributed link service 
intelligently handling link service results 
link overload 
information filtering 
document filtering technologies 
user profiling techniques 
agent systems information filtering user profiling 
brief survey context 
physical constraints ubiquitous computing 
uses context hypermedia systems 
context web 
context personal information assistants 
experimentation 
aims document management system 
link service integration 
minutes 
link compilation 
incorporating link service aims 
searching link service directly 
agent interface 
altering links date experiment context 
research issues 
discussion prototype 
design context system 
investigate knowledge representation 
components system agents 

research plan 

coping amount information fingertips changing way 
mail overload recognised cause stress place query major internet search engine return hundreds thousands answers amount documentation available corporate intranets take number life times read 
information service database system web site agent system needs improve quality information presents user 
information service needs take account person individual circumstances brought person seek particular answer need 
answers need context 
investigate context means computer science enter bewildering field differing opinions approaches entering realms artificial intelligence philosophy 
prevalent method accessing information world wide web browser intranet internet 
simplistic model hypertext links hinder users authors information finding information management 
hypermedia community attempted improve evolving separate link services augment pages produced web servers 
chapter charts history systems examines techniques employ 
system place deliver results links user results need tailored 
results need dynamically filtered altered suit user 
chapter examines fields information retrieval information filtering 
looks components required systems document filtering tools ways gather profiles users 
notion context interpreted differently different branches computer science 
chapter examines number areas surveys done fields physical location computing web adaptive hypermedia systems personal information assistants 
chapter author described 
author created document management system attempted apply variety techniques improve usefulness information provides 
distributed link service starting point culminating prototype application filtering information contextual parameters agent framework 
prototype discussed chapter discussion follows issues trying generalise design form framework support arbitrary methods computing filtering information context form 
areas research identified including knowledge representation ontologies agent systems 
chapter identifies order proceed research presents agenda 
link services related technology early hypermedia systems link service conklin survey early hypertext systems maintains machine supported links key distinguishing feature hypertext system 
features window viewing system text processing capabilities shared families applications necessarily hypertext systems 
summarises early classic hypertext systems including bush visionary ideas incorporated memex engelbart augment nelson xanadu giving conklin view advantages disadvantages hypertext 
hypertext allows user easily trace documents form link easily followed forwards occasionally backwards 
user add network ideas able easily create new links add annotations altering original documents 
variety structures imposed collection documents may structure 
majority systems allow non hierarchical structure built whilst early systems specific support creating hierarchical structures 
systems customize documents linking particular sections document allowing efficient reuse material 
increases modularity information system leading tendency split larger documents smaller modules useful 
advantage links embedded text documents text moved links 
argument seen context age 
majority systems developed mid notable exception advocated separation links content documents 
rest document describes area 
conklin cites ability explore paths enquiry material able trace back path history mechanisms 
conklin describes main problems hypertext systems 
disorientation cognitive overload 
ability organise information complex manner harder user successfully navigate information space 
problem increases number nodes 
cognitive overload arises extra user needs keep track location document space 
key component open hypermedia system links embedded node content stored separately link database 
links managed rest system link service 
early hypertext system separate link server intermedia 
system link server communicated rest hypermedia system socket connections 
rest system custom built authors try integrate link service outside applications 
open hypermedia system suffers extra problems caused consequence links stored separately documents 
document heavily edited anchors longer correspond positions link database 
system version control possible track changes documents 
arises problem version show user 
sun link service practical implementation link service name sun link service amy pearl 
hypertext system right protocol application developers toolkit add hypertext functionality existing applications sun workstation 
implementation consisted link database library developer added application 
library implemented series windows dialogues adding hypertext functionality existing application having large impact existing program interface 
ability link different types nodes raised number issues open hypertext systems faced 
link service direct way knowing node deleted performing exhaustive search 
similar problem caused changes document contained links 
order know put link node link service assumed linked object single full line text 
text stored part link data document loaded service searched document find occurrence line 
link marked document simple icon application developer needed implement 
simplistic approach worked system text documents 
system designed application authors design specific link types attributes including directionality 
authors felt better allow link types created dynamically create fixed set may limit usefulness design 
microcosm microcosm begun integrate variety sources information open hypermedia system 
aim provide system education allow students access media video disk images sound text 
system main advantage open architecture ability integrate third party applications system 
link service implemented part system filters communicating processes 
possible access number link databases linkbases session 
components sat chain modify messages act alter delete links sent viewer 
viewers initially written specifically system third party applications microsoft word integrated variety degrees awareness 
number types links microcosm 
specific links 
link object specific location specific source document 
location defined offset text documents region images 
destination link specific object destination document 
button link special case form link 
case source selection coloured blue 
links marked source document 
local links 
link location specific source document 
link followed occurrence selection source document 
generic links 
link selection occurring location document 
selection document link followed 
user opened document system specially written document viewer request links document system 
linkbases return links reach filter chain returned viewer 
relatively simple matter write filter alter messages behaviour system 
instance number interface components written system understood documents open users browsing history 
see information 
tool new copy open document spawned bring existing window user attention 
involved crucial ability act alter results link services depending user circumstances 
large hypermedia project incorporate separate link service hyper 
ambitious system designed solve problems previous systems break new ground support multiple languages scalability 
eventually embraced web commercial product called 
system scalable distributed open hypermedia system comprising servers clients 
underlying system object oriented database documents links grouped hierarchical collections user maintains private space 
links point point variety stored link databases 
system designed allow dangling links documents deleted 
system features unix file permission system allows complex information structuring link maintenance 
original versions system number specially written clients proprietary rich text format 
commercial system designed store wide variety common document formats 
full index searching automatic documents powerful searching possible documents collections multiple servers 
strong language support includes translators links available language 
special collection type called cluster allows clustering multimedia composites multilingual aggregates 
allows display different language versions document required 
distributed link service clear mid nineties world wide web hypertext research groups began think adapt systems integrate web 
simplistic implementation links html embedding content great step backwards hypermedia community reason success system 
easy users create simple collections interlinked pages special environments tools 
group microcosm developed way provide microcosm style generic links web pages form distributed links service implemented set cgi processes web server 
initially implemented users point view adding interface browser 
clicking added show links menu item user modify currently viewed page additional links dls 
server retrieve page compare word anchors links linkbases 
generic link server add appropriate html create link anchor destination defined linkbase 
interface implementation infeasible maintain code altered release netscape browser 
platform browser specific 
dls implemented web proxy 
difference implementations important change 
dls proxy effective users web integrates relatively seamlessly browser 
documents just altered require user effort activate system proxy 
implementation required user actively ask system return extra links menu item 
whilst type behaviour normal microcosm hypermedia systems compatible simplistic hypertext navigation facilities web user simply clicks blue underlined words follows links 
intelligently handling link service results link overload quite easy put data link service overwhelm user links 
generic link microcosm dls significant drawback 
links real danger returning links user results box microcosm dls turning text web page blue 
problem significant microcosm existence generic link document text highlighted 
user needed select text query system occurrences links 
simplistic hypertext web sophistication catered links need user page 
general case link service just information source contributing results larger query system 
example link service just collection agents representing variety sources 
sources relational databases full text search engines wrappers internet search engines 
total amount information returned quite easily overwhelming 
clear results returned need examined modified returning user microcosm filter chain designed 
information filtering explosion information availability mail usage internet matched radical expansion field information filtering 
new industries help people cope overflowing mail deal daunting amount material available subject 
section presents review subject information filtering relates subtly different discipline information retrieval 
typical information filtering system designed sift large amounts dynamically generated information usually text user sources information satisfy requirements 
process comprises phases collection information sources selection best results display user 
important distinction information filtering process involves user participation supported information filtering system 
field information filtering similar information retrieval lessons older subject applicable 
belkin croft argue fields extremely similar helping people get information need perform tasks 
information retrieval concerned users querying relatively stable sources information library catalogue database 
user interests change rapidly query query 
information filtering assumes user interests needs relatively stable 
information sources information streams change rapidly 
information sources frequently systems built usenet news feeds sift borges browse grouplens name dozens mail systems commercial products web news services 
information filtering introduced luhn idea business intelligence system 
library workers profile individual users information recommend documents person large numbers coming library 
users requested documents list suggestions information fed back profiling system improve match 
system aspects modern information filtering system 
term denning whilst trying move field just discussing generation information include reception information 
malone introduced paradigms information selection cognitive economic social whilst describing system information lens 
cognitive filtering known content filtering 
economic selection takes account intellectual property cost information cost transmission 
rising importance web resources require subscription 
examples include grouplens phoaks 
social collaborative filtering refers users making annotations documents 
information exchanged find communities shared interest 
workshop high performance information filtering held formed basis explosion interest field 
expanded versions papers event published special issue communication acm information filtering december 
see 
document filtering technologies variety methods developed refined describing documents user profiling 
main method keyword extraction 
systems weighted vector representation 
pre processed document decomposed keywords weighted importance 
usually achieved frequency count 
leads creation keyword vectors 
keyword vectors compared techniques nearest neighbor algorithms allows systems determine document similarity document distance 
tool gram distributions 
gram sequence letters usually 
finite combinations grams 
distribution obtained document possible gram sequence 
grams advantage sensitive spelling errors vector incorporates document structure compared keywords 
details prototype information filtering system built weighted trigram analysis combination evolutionary computing algorithm 
variety technique described nsa echelon project automatically classifying documents 
documents contain hyperlinks graph representation relationships documents mapped 
technique filter categorise web pages 
project outlined part larger web kb project develop probabilistic symbolic knowledge base mirrors content web order enable sophisticated information retrieval 
similar project produced set web knowledge base tools store organise retrieve knowledge document elements web pages 
user profiling techniques generating user profile automated means achieved number techniques 
recommender systems schafer list number techniques large web businesses amazon com currently 
field realm big business methods disclosed 
companies technologies include frictionless 
large number commerce sites simplistic techniques falling main categories 
customer purchases item list items bought customers bought item 
technique attempt classify products recommend type classification user purchases 
agent systems information filtering user profiling systems information filtering user profiling agents 
agents provide personalized profile order improve accuracy 
definition exactly agent varies widely situations 
current context example scenarios uses 
agent agents represent user preferences act actual information filter 
agents specializing information retrieval delegated task searching multiple sources interfacing line search engines 
extensive systems include multiple user agents dealing multiple information retrieval agents 
systems incorporate economic models assigning credits successful interactions losses unsuccessful ones 
agent systems similar techniques information filtering systems content analysis collaborative approach 
examples content systems include webwatcher letizia 
mladenic provides comprehensive survey overview systems text learning classification systems collaborative approach 
brief survey context ai community trying create formal model context time 
main reason attempt resolve problem generality identified mccarthy 
argued small addition predetermined possibilities program handle results rewrite starting underlying data structures 
need formalisation occurs areas intelligent information retrieval knowledge representation natural language processing 
akman surav give comprehensive review various attempts formalise context identify role variety fields subject 
keynote information seeking context brenda dervin said ask context 
turns embarrassing certainly question leading quest demands extraordinary tolerance chaos 
mind follows brief survey context variety fields including ubiquitous computing hypertext agents web 
physical constraints ubiquitous computing practical physical constraints placed design running software seen contexts 
lot done variety fields take account physical parameters surroundings system finds attempts solve particularly set problems implement open ended solutions 
building applications issues take account include bandwidth screen size resolution reliability connection user location physical issues user having special needs disabilities 
field especially strong mobile computing creation applications pda phrase context aware synonymous applications needing understand physical practical contexts 
project computing group georgia institute technology built context toolkit java classes building context aware applications 
notion context environmental information gathered sensors 
earlier created framework building self integrating services 
system integrated existing applications mail clients calendar applications address book writing java interface wrappers adding special buttons interface 
dealt context currently selected text application 
difficult maintain required programmer wrap application wished integrate 
group evolved system generic toolkit context widgets mediate application environment way graphical widgets buttons mediate user application 
widgets sensors physical sensors room software sensors understand capabilities resources 
widget set states attributes physical location supply event triggers applications instance person leaves room 
example applications include board displaying personnel building information display 
application displays information relevant user nearby display 
system activate user approaches display show information pertinent 
plan create tour guide system user mobile displays static 
toolkit available download projects 
done integrating computers environment equipment sensors displays part field pervasive ubiquitous computing 
ubiquitous computing described mark weiser method enhancing computer making computers available physical environment making effectively invisible user 
computer focal point user sit computers embedded small natural just user realising 
steps achieving require systems understand users physical context commonly form location systems relationship resources network 
systems known context aware applications subject bill schilit phd thesis subsequent 
systems built fabric offices follow users building known follow applications seen subset context aware applications 
person location detailed profile automatically display users desktop computer building 
uses context hypermedia systems role context hypertext systems aid dynamically generating documents links particular user 
term synonymous adaptive hypertext 
tompa described prototype hypertext system explicit links set link resolvers dynamically compute destination link user attempted follow 
link resolver registered description type text selection handle central process 
user followed link link resolvers tried determine target link 
resolver display window multiple results returned resources full text search definition lookup bibliography search engine 
year hardman described adding information links hypermedia system describing behaviour system destination presentation style 
contexts helped system manage display 
instance link followed piece video context parameters decided new video take place old open new window 
link short piece commentary audio video pause audio completed resume playing 
group continued develop approach creating presentation independent hypermedia systems incorporates standards hytime dsssl smil system 
adaptive hypermedia field right majority aiming develop systems education 
key elements include models 
domain model user model teaching model consisting pedagogical rules 
main techniques content adaption link adaption 
techniques link adaption include sorting hiding annotation changing colours disabling removal 
context web working protocols architecture web proxy implementation powerful way build adaptable systems 
barrett created architecture building transducers intermediaries called wbi pronounced 
comprises toolkit java building blocks possible construct applications 
basic building blocks need put certain sequence order create application 
request editors generators document editors monitors autonomous functions 
monitors observe transactions affecting 
editors modify outgoing requests incoming documents 
generators produce documents response requests 
autonomous functions run independently transaction perform background tasks 
wbi build variety applications 
include personalisation proxy user run machine annotate pages user reads 
powerful system pair transducers convert html xml protocols suited transmit wireless technology 
third filter allowing children web 
system transcoding application ibm websphere transcoding publisher 
transcoding technology converting documents different formats suit variety systems circumstances monochrome displays low bandwidth connectivity operating system differences 
automatic generation adaption web sites area attracted members ai community 
van de velde describe experiment add capture application contextual parameters existing interactive web server 
define context comprising user preferences situation specifics dynamic attributes change session 
contextual information gathered analysis browsing behaviour user 
system natural language approach generate pages contextual parameters 
perkowitz produced system automatically modify index pages web sites analysis user navigation usage site 
rely personal profile information obtaining users preferences analyse content metadata site citing difficult 
analyse web server logs arguing pages user visits transaction conceptually related 
call visit coherence 
form cluster mining finding groups pages visited 
clusters identified system creates new navigation page web site link document cluster 
context personal information assistants large area research making contextual information creation personal information assistants pia 
come variety forms aim help users different aspects lives 
system developed mit context aware office assistant 
developers wanted decrease number interruptions office owner 
noted visitors office want talk office owner may just want leave short message check status person 
office assistant acts intermediary visitors interact behalf office owner 
system combines office door sensor system detect people approaching person office interactive scheduling system ability interact display visitor owner 
agent understands status people decide person important warrant disturbing current meeting 
contexts utilised system listed identity users visitors obtained question answer process office owners schedule office owners status office owners willingness see visitor 
obtained interaction owner 
similar field personal service assistants interactive mediator human computer 
field concerned giving interface affective dimension ability convey emotions 
interface usually employs form quasi human animated character subject large amount initially entertainment industry emotions generally pre determined scripted increasingly distributed multi agents systems mas field 
behaviour system dynamic components system knowledge 
contextual information required systems include users capabilities interests preferences 
experimentation section describes author creating document management system ecs department 
system designed framework research issues link management apply relevant links context requirements users 
aims document management system electronics computer science department need electronic document management solution time 
administrative information available line 
policy keeping documents electronic archive 
documents minutes produced secretaries printed files lost 
printed documents distributed hand secretaries process hours 
number cases electronic files deleted creating set minutes 
administrative staff knowledge creating web documents information line 
project brief create system enable authors documents directly contribute web site forcing large working practice intervention web site editor 
system generates pages fly reducing enormous navigation link maintenance overhead traditional web site 
design aims system automatically generated document database accessible web browser 
implemented lotus notes database hosted lotus domino web server 
submission aims achieved person submitting file produced word processor accompanied details document 
aims application imports file database domino web server renders content file web page automatically 
main deliverable lotus notes database template file 
aims web site currently hosts databases various departments university 
illustrates page aims highlights tools properties system 
link main listing documents system showing current versions documents 
link archive listing documents system 
link full text search page 
link listing showing documents person submitted 
link form submitting document 
link download original file version document 
link open adobe acrobat pdf version document 
tool edit details currently viewed document 
link update document submitting new version 
main body document generated fly server 
html created document contributors 
document aims main design features aims listed 
access documents generated listings 
documents aims system listed automatically generated listings 
number listings available main just lists current versions 
older versions documents accessed document archive listing 
document submission achieved simple form 
submit new document contributor fills line form 
person selects actual file put system browse button 
add title version number choose category 
contributor need create html file 
details documents edited line 
document system possible contributor alter details document line form 
useful correcting spelling errors fields changing security settings document changing category document 
version control supported 
update document system contributor opens document clicks link submit new version 
open document submission form fill fields 
person simply needs select new file submit form 
system add new version document provide navigation links different versions 
aims automatically creates adobe acrobat files 
displayed document suitable printing may accurate rendering original file 
solve problem aims creates adobe acrobat file version word documents system 
automated process handled server overnight 
full text search engine 
interface features include full text search page 
link service integration consequence aims design documents contain embedded links way normal web site 
initial research goal project provide useful links content way easy maintain 
case goal utilise distributed link service try improve integration systems 
dls developed originally founded exploit microcosm system 
versions research implementation features different allowing different experiments performed 
basic principle link service 
link service implemented web proxy 
user configures browser link service web proxy 
browser requests page link service retrieve page server aims annotate html extra links passing enhanced web page back user browser 
links stored link server link databases linkbases 
entry linkbase consists word phrase anchor destination url description link 
link service occurrence word phrase pages user views link destination document link original web page 
generic glossary link implemented microcosm 
example entry linkbase link acronym research group iam home page research group 
link type local restricts anchor occur single document 
main linkbases aims set links undergraduate courses relevant course page large linkbase linking user id user names home pages linkbase variety acronyms useful words phrases 
goal link service aims author linkbases official terms definitions department effort going automating link creation opportunity 
linkbase user names home pages created script accessing department personnel database 
person listed links generated 
user name full name initials followed surname 
gareth hughes hughes 
linkbase undergraduate course codes generated parsing existing department web page listing undergraduate courses 
third linkbase included listings generic terms acronyms research group acronyms abbreviations hod head department 
definitions gathered written manually 
minutes advanced application linking service try structure minutes stored aims 
distributed links service modified experiment link items actions minutes 
minutes department board electronics computer science contain item numbers form number 
frequently items minutes actions items previous editions minutes 
distributed links service link item numbers enabling readers follow trails issues back time 
minutes department board electronics computer science contain item numbers form number 
frequently items minutes actions items previous editions minutes 
distributed link service link item numbers enabling readers follow trails issues back time 
achieved linking item aims server agent 
agent searches database determine document user wishes see 
fact item numbers start year added complication 
item contains action previous set minutes 
user follows link 
link triggers agent aims server 
agent returns link referred document 
body document action problem application applied documents system matching specific pattern 
obvious system assumptions set links link service provides link initials members department home page 
links generated information stored department personnel agent searches database find document containing correct item date document user viewing 
distributed link service link items minutes 
code web navigation patterns users maintainable 
pattern matching algorithms successful users trained accurate numbering schema 
users submitting documents constrained enter fields fields added describe document detail 
quickly discourage users especially lack confidence concerned categorisation considered incorrect 
link compilation documents aims change information stored links change 
step try process pre compilation links 
placing links page fly system devised add links documents compilation style process 
experimental system written pull body aims documents link service added appropriate links 
simple matter design new display template documents aims displayed main body documents web page navigation information shown 
system stored linked html document body extra field database served readers unaware main portion document generated demand 
obvious disadvantage links created fly system looks feels normal web site 
experiment number disadvantages 
implementation awkward system difficult maintain 
design created problems inside database scale 
incorporating link service aims implemented web proxy component link server engine 
link server answers requests port remote clients 
possible write programs communicate directly link server process 
domino system allows developer add programming system events document requested 
program written asked link server links particular document passing link service text body document 
link service acts just manner normal part proxy 
word document link returns html placed document 
java application collects processes fragments html 
application sorts removes duplicates parsing html link objects 
form block html code 
agent embed field notes document 
happens server receiving request responding html 
means text field treated part existing document temporary text gets displayed web page 
processing completed document rendered delivered domino server 
links appear margin bottom page list recommended sites user view 
detail showing links dynamically added left hand margin aims document link service 
links embedded main flow document system dynamically incorporates links demand incorporates simple context users able choose linkbases 
design refined compilation style system database maintains time stamp saying linkbases updated 
night system compile links new documents updated re compile links documents 
system need modification cope large documents 
certain amount text passed time java application needs number requests successive portions text link service 
implementation limitations generic links soon apparent 
links overwhelm reader distraction 
problem addressed done open journals project modifying dls 
dls concept link priority schemes different links priority author system colour links accordingly display certain priority levels links 
pattern matching create links text shown example linking board minutes promising way find link anchors explicit link authoring 
application techniques help recognising names people documents techniques harder implement 
pattern matching algorithms solve problem need complicated compromising performance service slowing access times documents 
needs alternative approach proxy synchronously processing page 
proxy farm processing documents agents examine document try provide user useful information links 
results need delivered browser separately document minor implementation problem 
important implementation issue create useful links documents 
linkbases automatically generated extracting data line systems staff database 
useful limited specific topics 
method require contributors supply potential keywords metadata document 
places unwanted demands people difficult implement 
interesting method system understand content documents generate keywords automatically 
system developed tested aims 
searching link service directly aims application includes full text search facility 
abilities built lotus domino search documents database 
utilised web programmer 
possible full text search classes write applications search database utilise results 
experimental applet written placed left hand margin aims document 
user select text document text selection applet javascript 
applet invoked search program server corba remote procedure call technology 
server perform heavyweight full text search format results way suitable applet display send results back 
applet display list links 
intention applet gateway number remote services full text search engine dls 
system combine results appropriate way display small list recommended documents user text selection 
applet approach continued time writing march internet explorer provided necessary javascript abilities pass text selection applet significant limitations 
version browsers necessary abilities 
applet written partly learning exercise understand corba rmi java lotus notes 
fragment screenshot showing prototype search applet action showing results search word electronic caused user selecting word text 
agent interface problems writing java applications communicate link service solved logical step write simple distributed link service agent contribute mas multi agent system agent framework 
reusable class written communicate link server upgraded improve way handled returned html link service 
result agent find generic links portion text return predicate 
simple object consisting search text destination url description destination document keyword document 
predicate attempt predicate describe basic properties link dls 
meant kept long term simply facilitate creation system 
agent seen way generate links intelligent agents order give answers queries 
agent written query aims system full text search classes provided domino java api 
written predicate agents complementary pair 
client agent framework ask agents answers receive combined set links 
agents provided useful way query resources aims simplistic fashion 
understand questions text mechanical processes keyword matching full text retrieval 
success answers depend skill question composer including useful keywords possible 
altering links date experiment context aims system contains administrative documents department 
information documents needs read context information 
obvious context time 
people leave department people change roles 
affects links created application 
simplest example role head department hod 
majority minutes stored aims written whilst head department professor hey 
older minutes may true 
cases linkbase kept date link point current head department incorrect 
definition hod linkbase needs time frame 
definition link hod professor hey needs include start dates tenure 
follows needs multiple occurrences hod link linkbase cater new hod previous occupants title 
attempt solve problem explore resulting issues done 
simplest way add contextual filtering date existing application add properties link start date date 
properties define date range time frame link valid 
links allowed open ended direction time know current head department move position 
dates links overlap link service just return link destinations 
number scenarios links date range 
date document viewed date point link filtering 
document aims date part metadata 
system displaying links obtain information server display links current time 
instance links people members department time document 
unusual scenario user tell system date wish 
user turns back clock specific point time browse system viewing state play department time 
extended aims application server lists documents created time 
user signs server system knows contextual settings including preferred date 
system uses certain archival database applications 
idea realised modification link service agent accompanying classes 
date information encoded description fields link linkbase 
useful prototype modifications required link service 
links sent agent module communicating link services knows parse descriptions extract date range 
predicate extended predicate normal parameters plus start date date 
result link service agent returns links date ranges querying client agent 
links date enabled focus experiment turn problems implementing agent system alter links variety parameters system 
considering link date range parameters provided user preferred date turning back clock application 
system provided parameters date current document viewed web server 
instance assumed technology built web server dynamically alter links provided 
links filtered user date falls date range link 
links displayed user 
research issues discussion prototype system providing simple action filtering link returned link service certain defined context date range 
general case system need able evaluate links number arbitrary contexts variety parameters 
pseudo code describes sequence steps taken client evaluating user query obtaining links link service modifying 
load user context parameters username load system context parameters talk external link service obtain list links link link result evaluate result null display result link key line pseudo code point link evaluated altered evaluate function rules certain type context 
evaluate alter attributes link object delete link object 
questions arise prototype 
making links exposes weakness simplistic nature link representation 
imagine application contains detailed breakdown people positions time 
example link role hod conversely link name initials person role 
link date range system filter links date document viewed 
immense required obtain information may prove impossible reason 
numbers links involved significant problem problem organise 
application hypermedia history system time line careers members 
represented efficient way 
central issue 
adding extra parameters links linkbase poor design 
scalable link service needs modification cope extra information links temporary solution encoding dates descriptions 
design simply scale 
optimum place extra information linkbase 
need pass extra information system link service filtering system 
context application link service seen tool scanning stream text providing hits rest system seen results generator complemented ways create links system 
example aims search engine produce similar list hits search query 
needs minimal information anchor link destination link description job 
solution store information separate knowledge base generate links link service 
filtering system knowledge base referencing mechanism match link information knowledge base 
instance link unique identifier match data knowledge base 
design context system prototype system written mas agent framework 
client agent registers asks agent supporting predicate 
finds asks agent links particular word phrase 
agent supporting predicate front wrapper link service 
gives text link service obtains number links 
processes creates objects complete start dates 
returned client agent 
client processes object decides keep date chosen user falls date range link 
links users date date range kept 
links returned user 
goal able write new libraries process form contextual information plugged framework part larger system 
order system required describe information needed define context processing library needs perform function 
simplest definition include broad categories name list information needed library list information produced library 
needs defined way form syntax 
requirements similar agent systems 
agent describe ontology supports form agreed syntax 
agents claim support ontology theoretically system perform function 
area research 
entire system implemented way seen library right 
possible number scenarios 
include process results query link activity described agent prototype 
application build link service link service proxy links adds web pages subjected context filtering process improve relevance document person reading document 
objective research programme 
problem define parameters context filter area requiring careful design 
simple examples seen far types parameters 
user parameters 
information gathered user profile actively requested system query 
system parameters 
operating system type network parameters restrictions bandwidth 
context library parameters 
parameters required particular context library perform function 
investigate knowledge representation centre design system issue knowledge representation 
best way represent knowledge system requires 
prototype expanded large amount information structure history people department expressed notation 
major area find method represent knowledge context library understands works 
discussed similarity ontologies distributed agent systems 
research needed investigate technologies fields artificial intelligence find languages techniques represent knowledge structures system 
languages lisp may prove benefit agent languages kqml 
sgml derived languages xml rdf candidates describing notations highly supported industry base language translate languages required 
cohse conceptual open hypermedia services environment project southampton manchester aims integrate terminology service created manchester dls 
goal project implement new form dls combines new distributed approach architecture dls query routing terminology server link documents similar concept descriptors 
system metadata documents document stored separately metadata manager 
project significant similarities covered report ontologies terminology service extremely useful different focus 
cohse aims improve quality linking web documents viewing authoring 
specifically intend improve hypermedia abilities web produce general structure applying contextual abilities variety applications 
components system agents 
interesting discussion arises implement system set distributed agents providing form context processing capability 
current prototype uses mas agent framework simply existing code 
time envisaged system benefit agent approach 
examples simple simply small programs compute result set parameters 
simply function libraries methods class full blown agents 
case keeping implementation library extended set libraries reused built applications application right 
investigation discussion required resolve question 
chapter describes areas research technologies investigate way realising ideas described 
details plan applications designs create order test validity idea built contextual filtering link generation 
notion context vast difficult subject greatly explored 
order build interesting prototype key activity find define contexts system 
area notion task 
presenting results query user take account context task user performing time 
done field user interface design take account task knowledge dialogue browsing history user models dynamically configure interfaces 
author investigate agent technologies ai approaches context ontologies 
help design general framework system best create context libraries 
order model information needs represented manipulated certain context areas ontology design knowledge representation useful 
accompaniment modelling data system ways creating user profiles techniques analysing document content 
includes systems summarise documents keywords mark document 
tools utilised help build powerful libraries 
existing systems employing context examine draw lessons 
fields adaptive hypermedia ubiquitous computing 
projects systems discussed document investigated detail 
research plan focus best build architecture context aware link resolution link presentation 
key factor design adapts number varied scenarios 
plan develop demonstrator particular situation extend improve required number examples 
felt important test design various applications different possible 
examples include fully developing notion links time span description 
aims system provide useful facility creating applications incorporating features ability turn back clock documents links pertinent time period 
variant theme link service automatically relevant links date document user reading 
subtly different applications basic idea 
links defined time span type 
benefit aims allows author tightly integrate link service database application applications appear user 
existing system take advantage multimedia database developed group 
holds number electronic archives electronic representation archive alan turing 
relational database holds large amount structured metadata item archive including date information 
system currently accessible generated web pages modified adapted link service uses date context alter links presents 
author worked design turing archive database schema dynamic web pages access knowledge integrate 
database fully accessible agent framework java 
application ideas document create link service lines dls adds generic links documents links destinations priorities dynamically computed 
documents application previously analysed keywords extracted 
documents categorised grouped document space 
data link service modify priorities links documents alter display user 
destination document generic link document document close world deemed closely related destination link high priority indicated user manner 
gregory abowd christopher atkeson jason hong sue long rob kooper mike pinkerton 
cyberguide mobile context aware tour guide 
acm wireless networks october 
akman mehmet surav 
steps formalizing context 
ai magazine 
andrews maurer 
serving information web hyper computer networks isdn systems 
keith andrews frank hermann maurer 
hyper network information system 
journal universal computer science april 
mamdani 
virtual personal service assistants real time characters artificial hearts 
proceedings international conference intelligent user interfaces new orleans la usa pages january 
robert armstrong dayne freitag thorsten joachims tom mitchell 
webwatcher learning apprentice world wide web 
aaai spring symposium information gathering pages 
barrett maglio 
intermediaries approach manipulating information streams 
ibm systems journal april 
rob barrett paul maglio 
intermediaries new places producing manipulating web content 
computer networks isdn systems april 
bechhofer goble rector solomon 
terminologies terminology servers information environments 
editors proceedings th international workshop software technology engineering practice pages 
ieee computer society press 
belkin croft 
information filtering information retrieval sides coin 
communications acm december 
bernard crowder heath hall 
large scale industrial application open hypermedia system 
proceedings acm hypertext conference edinburgh scotland september 
brown chen 
context aware applications laboratory marketplace 
ieee personal communications october 
peter brusilovsky 
methods techniques adaptive hypermedia 
user modeling user adapted interaction 
dick hardman jack jansen mullender lloyd rutledge 
graphical interface creating playing smil documents 
computer networks isdn systems april 
bush 
may think 
atlantic monthly pages july 
carr hall hill 
distributed link service tool publishers authors readers 
proceedings fourth international world wide web conference boston massachusetts usa 
carr hall davis microcosm link service application world wide web 
proceedings international world wide web conference geneva switzerland may 
les carr david hugh davis wendy hall 
implementing open link service world wide web 
world wide web journal 
conklin 
hypertext survey 
ieee computer september 
mark craven dan dipasquo dayne freitag andrew mccallum tom mitchell kamal nigam se slattery 
learning extract symbolic knowledge world wide web 
proceedings th national conference artificial intelligence aaai th conference innovative applications artificial intelligence iaai pages menlo park july 
aaai press 
marc damashek 
gauging similarity grams language independent categorization text 
science 
nigel davies keith mitchell keith cheverst gordon blair 
developing context sensitive tourist guide 
proceedings workshop human computer interaction mobile devices page glasgow scotland 
davis hall heath hill wilkins 
integrated information environment open hypermedia systems 
nanard nanard editors proceedings acm hypertext conference milano italy pages november 
davis knight hall 
light hypermedia services study third party application integration 
proceedings acm hypertext conference edinburgh scotland pages september 
denning 
electronic junk 
communications acm march 
carnegie mellon computer science department 
cmu world wide knowledge base web kb project 
www cs cmu edu webkb 
david el nicholas gibbins les carr wendy hall 
integrating link resolution services query routing 
th workshop open hypermedia systems acm hypertext conference pages darmstadt germany february 
dervin 
context name methodological tools taming beast 
dervin editors information seeking context pages london uk 
taylor graham 
anind dey gregory abowd andrew wood 
framework providing self integrating context aware services 
proceedings international conference intelligent user interfaces integration pages 

conceptual framework augmentation man intellect 
information handling 
tim finin rich don mckay robin 
kqml language protocol knowledge information exchange 
proceedings th international workshop distributed artificial intelligence pages wa july 
peter foltz susan dumais 
personalized information delivery analysis information filtering methods 
communications acm december 
fountain hall heath davis 
microcosm open model hypermedia dynamic linking 
streitz andr editors hypertext concepts systems applications proceedings hypertext conference inria france pages november 
fox brewer 
reducing www latency bandwidth requirements real time distillation 
computer networks isdn systems may 

exploiting structural information text classification www 
lecture notes computer science 
van de velde 
context sensitive hypertext generation 
working notes aaai spring symposium natural language processing web pages stanford ca stanford university 
hall davis hutchings 
rethinking hypermedia microcosm approach 
kluwer academic press 

learning filtering text information simple interest profiles 
peter matthias klusch editors proceedings ot international workshop cooperative information agents volume lnai pages berlin february 
springer 
hardman dick guido van rossum 
links hypermedia requirement context 
proceedings acm hypertext conference seattle washington usa pages new york ny usa november 
acm press 
andy harter andy hopper pete steggles andy ward paul webster 
anatomy context aware application 
proceedings fifth annual acm ieee international conference mobile computing networking mobicom pages august 
acm press 
hill hall 
extending microcosm model distributed environment 
proceedings acm hypertext conference edinburgh scotland pages september 
hill wilkins hall 
open reconfigurable hypermedia systems filter model 
hypermedia 
andrew jennings higuchi 
user model neural network personal news service 
user modeling user adapted interaction 
henry lieberman bonnie nardi david wright 
training agents recognize text example 
oren etzioni rg ller jeffrey bradshaw editors proceedings third annual conference autonomous agents agents pages new york may 
acm press 
douglas terry 
information filtering 
communications acm december 
luhn 
business intelligence system 
ibm journal research development 
dirk lawrence 
task context support adaptable interface 
proceedings third international conference human computer interaction volume designing human computer interfaces knowledge systems dialogue design pages 
thomas malone kenneth turbak stephen michael cohen 
intelligent information sharing systems 
communications acm may 
jennifer mankoff bill schilit 
supporting knowledge workers desktop 
proceedings acm chi conference human factors computing systems volume technical notes desktop pages 
martin 
webkb set tools 
int gu edu au webkb 
martin eklund 
knowledge retrieval world wide web 
ieee intelligent systems special issue knowledge management internet may 
maurer 
hyper generation web solution 
addison wesley 
john mccarthy 
generality artificial intelligence 
communications acm december 
meyrowitz 
intermedia architecture construction object oriented hypermedia system application framework 
proceedings oopsla pages september 
mladenic 
text learning related intelligent agents survey 
ieee intelligent systems 
luc moreau nick gibbins david el wendy hall gareth hughes dan joyce kim dave millard reich robert mark 
sofar dim agents agent framework distributed information management 
proceedings fifth international conference practical application intelligent agents multi agent systems manchester uk 
elizabeth mynatt back roy want ron frederick 
audio aura light weight audio augmented reality 
proceedings acm symposium user interface software technology blurring physical virtual pages 
nelson 
literary machines 
mindful press 
jason pascoe nick ryan david morse 
human computer giraffe interaction hci field 
proceedings workshop human computer interaction mobile devices page glasgow scotland 
pearl 
sun link service protocol open linking 
proceedings hypertext conference hypertext pittsburgh pennsylvania usa pages november 
perkowitz etzioni 
adaptive web sites automatically synthesizing web pages 
fifteenth national conference artificial intelligence 
paul resnick iacovou suchak peter bergstrom john riedl 
grouplens open architecture collaborative filtering netnews 
proceedings acm cscw conference computer supported cooperative sharing information creating meaning pages 
ray richardson alan smeaton 
wordnet knowledge approach information retrieval 
technical report ca school computer applications dublin city university dublin ireland 
rutledge hardman van 
mix match exchangeable modules hypermedia style 
proceedings acm hypertext conference darmstadt germany pages 
lloyd rutledge van hardman dick 
practical application existing hypermedia standards tools 
dl proceedings rd acm international conference digital libraries pages 
daniel salber anind dey gregory abowd 
context toolkit aiding development context enabled applications 
marian williams mark kate ehrlich william newman editors proceedings conference human factors computing systems chi pages new york may 
acm press 
gerard salton christopher buckley 
term weighting approaches automatic text retrieval 
information processing management 
ben schafer joseph konstan john riedl 
recommender systems commerce 
proceedings acm conference electronic commerce ec pages november 
acm press 
www cs umn edu research grouplens ec pdf 
bill schilit norman adams roy want 
context aware computing applications 
ieee workshop mobile computing systems applications santa cruz ca december 
palo alto research center 
bill schilit 
system architecture context aware mobile computing 
phd thesis columbia university may 
sandbox parc xerox com parctab 
daniel ida 
adaptive information filtering algorithms 
david hand joost kok michael berthold editors proceedings ida rd symposium intelligent data analysis number lecture notes computer science pages amsterdam nl 
springer verlag heidelberg de 
terveen hill amento mcdonald 
phoaks system sharing recommendations 
communications acm march 
frank tompa elizabeth blake darrell raymond 
hypertext components 
proceedings th conference hypertext pages new york ny usa november 
acm press 
weiser 
computer century 
scientific american september 
weiser 
computer science issues ubiquitous computing 
communications acm 
yan selker 
context aware office assistant 
proceedings international conference intelligent user interfaces new orleans la usa pages january 
tak yan hector garcia molina 
sift tool wide area information dissemination 
usenix association editor proceedings usenix technical conference january new orleans louisiana usa pages berkeley ca usa january 
usenix 
yankelovich haan meyrowitz drucker 
intermedia concept construction seamless information environment 
ieee computer 

