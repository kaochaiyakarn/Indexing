relation ontologies schema languages translating oil specifications xml schema michel klein dieter fensel frank van harmelen ian horrocks department computer science vrije universiteit amsterdam dieter cs vu nl department computer science university manchester uk horrocks cs man ac uk 
currently computers changing single isolated devices entry points world wide network information exchange business transactions called world wide web www 
support data information knowledge exchange key issue current computer technology 
ontologies provide shared common understanding domain communicated people application systems 
may play major role supporting information exchange processes various areas 
order develop full power representation languages ontologies comparative existing data exchange standards world wide web 
compare main standardization efforts areas 
compare oil arising standard exchanging ontologies xml schemas arising standard describing structure semantics web documents 
ontology field philosophy buzz word information knowledge systems research cf 
guarino welty appear 
various publications knowledge engineering natural language processing cooperative information systems intelligent information integration knowledge management report application ontologies developing systems 
general ontologies provide shared common understanding domain communicated people heterogeneous distributed application systems 
developed artificial intelligence facilitate knowledge sharing reuse 
database schema developed computer science describe structure semantics data 
known example relational database schema underlying means currently databases cf 
elmasri 
database schema defines set relations certain integrity constraints 
central assumption atomicity elements certain relationships normal form 
nutshell information source better spoken data source set tables 
new information sources available longer fit rigid schema 
especially www document centered information natural language text available 
new schema languages arise fit better needs richer data models 
basically integrate schemas describing documents html sgml schemas designed describing data 
prominent approach new standard defining schema rich semistructured data sources xml schema cf 
malhotra thompson walsh 
xml schemas means defining constraints valid xml documents 
provide basic vocabulary predefined structuring mechanisms providing information xml 
xml pre dominant standard exchanging information www currently important way line dissemination information 
consequence comparing ontologies languages xml schemas timely issue approaches aim partially purpose 
relationship 
ontologies applied line information source may seen explicit conceptualizations meta information describe semantics data 
fensel states differences ontologies schema definitions language defining ontologies syntactically semantically richer common approaches databases 
information described ontology semi structured natural language texts tabular information 
ontology shared consensual terminology information sharing exchange 
ontology provides domain theory structure data container 
statements need formulated precisely comparing ontology languages xml schema languages purpose ontologies purpose schemas 
compare main standardization efforts areas 
compare oil arising standard exchanging ontologies cf 
horrocks appear xml schemas arising standard describing structure semantics web documents 
main results true say oil expressive power xml schemas true way sense xml schemas richer defining structures grammars information elements large variety basic data types provide 
true ontologies describing semi structured natural language texts holds xml schemas 
true ontology shared consensual terminology serious efforts achieve xml 
stems fact xml early language fore designing private databases providing information www 
true ontology provides domain theory structure data container help explain differences ontologies ontology languages xml schemas xml schema definition language 
contents organized follows 
section provide short oil section provide service xml schemas 
central section compare approaches 
explain think mistake directly relate ontology languages xml schemas 
explain relationship ontologies schema definitions modern recall relationship extended entity relationship models cf 
elmasri relational schemas 
refer different abstraction levels describe information different states process developing line information sources 
provide section summary section 
oil horrocks appear defines ontology interchange language oil standard proposal 
section give brief description oil language details horrocks appear 
small example ontology oil provided 
language designed provides modeling primitives commonly description logic dl oriented ontologies 
simple clean defined semantics 
automated reasoning support class consistency subsumption checking provided 
envisaged core language extended sets additional primitives proviso full reasoning support may available ontologies primitives 
ontology oil represented ontology container ontology definition part 
discuss elements ontology specification oil 
start ontology container discuss backbone oil ontology definition 
ontology container adopt components defined dublin core metadata element set version ontology container part oil 
apart container oil ontology consists set definitions import list oil modules included ontology 
xml schemas oil provide limited means composing specifications 
include specifications underlying assumptions names different specifications different different prefixes 
rule base list rules called axioms global constraints apply ontology 
structure rules defined horn clauses dl style axioms etcetera semantic significance 
rule base consists simply type string followed unstructured rules string 
class slot definitions list zero class definitions class def slot definitions slot def structure described 
class definition class def associates class name class description 
class def consists components type type definition 
primitive defined omitted type defaults primitive 
class primitive definition combination subclass slot constraint components taken necessary sufficient condition membership class 
subclass list class expressions structure described 
familiar database concepts may take distinction symbol knowledge level analogy cf 
newell 

purl oclc org dc 
class defined class def sub class class expressions list 
slot constraint list zero slot constraints structure described 
class defined class def sub class slot constraints list note slot constraint defines class 
class expression class name slot constraint boolean combination class expressions operators 
note class expressions recursively defined arbitrarily complex expressions formed 
slot constraint list constraints restrictions applied slot 
slot binary relation instances pairs individuals slot constraint class definition instances individuals satisfy constraint 
example pair leo willie instance slot eats leo instance class lion willie instance class leo instance value constraint applied slot eats 
slot constraint consists main components name slot name string 
slot binary relation may may defined ontology 
defined assumed binary relation globally applicable ontology container class def branch title african animals slot constraint part creator ian horrocks subject animal food description didactic example ontology describing african animals description release value tree class def leaf slot constraint part value branch class def defined carnivore publisher horrocks subclass animal type ontology slot constraint eats format pseudo xml format pdf identifier www cs vu nl dieter oil tr oil pdf source www africa com nature animals html value type animal class def defined herbivore subclass animal carnivore slot constraint eats value type language oil plant language en uk slot constraint part plant relation www com animals jungle ontology definitions slot def eats class def giraffe subclass animal slot constraint eats value type leaf class def lion inverse eaten subclass animal slot def part slot constraint eats inverse part properties transitive class def animal class def plant subclass animal value type herbivore class def plant subclass plant slot constraint eaten value herbivore carnivore class def tree subclass plant fig 
example ontology oil constraints pair individuals instance slot 
value list class expressions 
instance class defined slot constraint related slot relation instance class expression list 
example value constraint slot constraint eats value zebra defines class instance eats instance class zebra instance class 
note mean instances slot constraint eat zebra may partial little gazelle get 
value type list class expressions 
instance class defined slot constraint related slot relation individual instance class expression list 
max cardinality non negative integer followed class expression 
instance class defined slot constraint related distinct instances class expression slot relation 
min cardinality shortcut cardinality 
slot definition slot def associates slot name slot description 
slot description specifies global constraints apply slot relation example transitive relation 
slot def consists main components list slots 
slot defined slot def sub slot slots list 
example slot def daughter child defines slot daughter child pair individuals instance daughter instance child 
domain list class expressions 
pair instance slot relation instance class expression list 
range list class expressions 
pair instance slot relation instance class expression list 
inverse name slot inverse slot defined 
pair instance slot instance slot defined 
properties list properties slot 
valid properties transitive symmetric reflexive 
syntax oil oriented xml rdf 
horrocks appear defines dtd xml schema definition definition oil rdf 
xml schema xml schemas means defining constraints valid xml documents cf 
malhotra thompson walsh 
human readable explanation xml schemas fallside 
purpose dtds provide significant improvements xml schemas definition xml documents 
xml schemas provide rich set datatypes define values elementary tags 
xml schemas provide richer means defining nested tags tags 
xml schemas provide namespace mechanism combine xml documents heterogeneous vocabulary 
discuss aspects detail 
xml schema definitions xml documents 
defines address xml schema 
schema definition address tag xml document dtds provide definition external second language 
clear advantage tools developed xml validation rendering tools immediately applied xml schema definitions 
datatypes datatypes described malhotra 
saw datatype string example 
general datatype defined tuple consisting set distinct values called value space set lexical representations called lexical space set facets characterize properties value space individual values lexical items 
value space 
value space datatype defined ways enumerated outright extensional definition defined axiomatically fundamental notions intensional definition defined subset values defined datatype set properties defined combination values defined value space specific construction procedure example list 
lexical space 
lexical space set valid literals datatype 
value datatype value space denoted literals lexical space 
example different literals lexical space float denote value 
facets 
facet single defining aspect datatype 
facets types fundamental facets define datatype non fundamental constraining facets constrain permitted values datatype 
fundamental facets equality order values lower upper bounds values cardinality categorized finite countably infinite uncountably infinite numeric versus 
xml schemas provide formal language intensional definitions 
primitive datatypes defined prose standard 
derived datatypes constrained facets 
xml version encoding utf doctype schema system wd xmlschema structures dtd schema xmlns www org xmlschema complextype name address element name name type string content mixed element name street type string element name city type string element name state type string element ref zip element name country type string complextype element name zip type zipcode simpletype name zipcode base string pattern value simpletype schema fig 
example schema definition 
constraining non fundamental facets optional properties applied datatype constrain value space length min max pattern constrain allowable values regular expressions enumeration constrains value space datatype specified list lower upper bounds values precision encoding facets constrain possible lexical space datatype 
useful categorize datatypes defined specification various dimensions forming set characterization dichotomies 
atomic vs list datatypes atomic datatypes having values intrinsically indivisible 
list datatypes having values consist sequence values atomic datatype 
example single token matches nmtoken xml recommendation value atomic datatype nmtoken sequence tokens value list datatype 
primitive vs derived datatypes primitive datatypes defined terms datatypes exist ab initio 
generated datatypes defined terms datatypes 
generated datatype defined terms existing datatype referred 
may primitive generated 
type type said subtype value space subtype subset value space 
example date derived base type 
built vs user derived datatypes built datatypes defined xml schema specification may primitive generated 
user derived datatypes derived datatypes defined individual schema designers giving values constraining facets 
xml schemas provide large collection built datatypes example string boolean decimal binary example zipcode user derived datatype 
structures structures provides facilities constraining contents elements values attributes augmenting information set instances defaulted values type information see thompson 
datatypes purpose 
example element zip datatype zipcode 
example definition element type name 
value mixed content attribute allows mix strings sub tags 
attributes defined name datatype constraints values default fixed values constraints presence minoccurs maxoccurs see example attribute name key type integer minoccurs maxoccurs elements constraint simple datatype unconstrained constraint empty allow elements content called rich content model 
case element declarations associate element name type zip incorporation defining datatype element declaration 
case content model consists simple grammar governing allowed types child elements order appear 
mixed qualifier text may occur elements 
child elements defined element element ref zip directly element declaration 
elements combined groups specific order sequence choice 
combination done recursively example sequence elements choice different sequence sequence different elements dtd 
elements groups accompanied occurrence constraints example element name street type string 
previous subsection discussed possibility primitive vs derived datatypes restricts definition see malhotra 
additional mechanism provided derived type definitions defined thompson 
cases distinguished derivation extension 
new type complex type defined adding additional particles definition adding attribute declarations 
example extension provided 
derivation restriction 
new type defined decreasing possibilities available existing type definition narrowing ranges removing alternatives important context definition thompson type said refine type declared refine recursively type refines 
effective constraints union explicit acquired implies inheritance defined explicitly derived definition types 
complextype name personname element name title minoccurs element name minoccurs maxoccurs element name surname complextype complextype name base personname extension element name generation minoccurs complextype element name name type snippet valid xml file schema namespaces xml schema provide mechanism assembling complete component set schema elements cf 
thompson include uri name albert arnold surname gore surname generation jr generation name schema element may contain include elements 
xml schema namespace mechanism schemas combined import namespace uri fig 
example derived type definitions extension taken thompson 
general inclusions provided means combine various schemas module name prefix realize non equality names assumptions identifiers different schemas definition different 
relation oil xml schemas hand ontologies xml schemas serve different purposes 
ontology languages means specify domain theories xml schemas means provide integrity constraints information sources documents semistructured data 
encountering differences comparing xml schemas ontology languages oil surprising 
hand xml schemas oil main goal common 
provide vocabulary structure describing information sources aimed exchange 
compare investigate differences 
section provide twofold way deal situation 
analyze commonalities differences second provide procedure translate oil specifications xml schemas 
guiding metaphor relationship relational model entity relationship model er model cf 
elmasri 
relational model provides implementation oriented description databases 
entity relationship model provides modeling framework modeling required information sources application 
elmasri provides procedure translates models formulated entity relationship model relation model 
system development starts high level er model 
transform model implementation oriented relational model 
see section surprising see easily relationship oil xml interpreted metaphor mind 
compare approaches provide procedure translate oil specifications xml schemas 
picture provided 
comparing oil xml schemas xml schemas oil xml syntax 
improvement xml schemas compared dtds oil 
xml syntax oil useful supporting exchange ontologies specified oil 
defined horrocks appear 
translation approach fig 
relationship schemas ontologies nutshell 
oil differ syntax describe preprocessing directly expressing oil ontologies xml schemas 
purpose xml schema definitions oil different horrocks appear describe xml syntax writing ontologies oil 
provide syntax writing instances oil ontology xml 
xml schemas rich datatypes oil 
xml schemas improve dtds providing richer set basic datatypes just providing pcdata 
xml schemas provide large collection built datatypes example string boolean decimal binary oil provide built datatypes reasoning concrete domains quickly undecidability inefficient 
xml schemas worry aspect inheritance need defined explicitly 
undecidability derivation implicit hierarchical relationships issue 
xml schemas datatype defined value space lexical space set facets 
restricting value space membership classes oil lexical space facets oil 
aspects related representation datatype aspect modeling domain 
date may important aspect domain various different representations data 
important aspect talking represent information 
note oil extremely precise powerful aspect nearly neglected xml schemas 
xml schemas mention possibility define types intensionally axioms 
language semantics actual reasoning service purpose provided 
lies main strength oil 
flexible language intensional axiomatic definition types 
nutshell oil xml schema expressive 
depending point view takes approaches richer expressive power built datatypes lexical constraints facets oil 
oil provides explicit language intensional definition types completely lacking xml schemas 
xml provides structures elements 
xml schemas main modeling primitive elements 
elements may simple composed mixed 
simple elements contents datatypes string integer 
composed elements contents child elements 
define grammar defines built elements 
mixed elements mix strings child elements 
addition elements may attributes 
oil takes different point view 
basic modeling primitives concepts slots 
concepts roughly identified elements child elements roughly equivalent slots defined concept 
slots defined independently concepts equivalent xml schemas 
relation relational model entity relationship model 
provides relations provides entities attributes relationships 
elmasri describes translation procedure richer modeling framework entity relationship model relational model 
concepts relationships expressed relations 
similar reduction step taken transforming oil specifications xml schema definitions 
xml provides structures grammar 
oil provide grammar composing concepts slots instance concept set slots values 
xml schemas allow define stronger requirements grammar sequence choice attributes applied instance defined 
xml provides structures type derivation 
xml schemas incorporate notion type derivation 
partially compared provided inheritance ontology languages oil 
xml schemas inheritance modeled explicitly 
oil inheritance derived definitions concepts 
second xml schemas provide direct way inherit multiple parents 
types derived 
oil ontology languages provides multiple inheritance 
third principle relationship twofold role conceptual modeling directly covered xml schemas top inheritance attributes superclasses subclasses 
assume employee subclass class person 
employee inherits attributes defined person 
bottom inheritance instances subclasses superclasses 
assume employee subclass class person 
person inherits instances elements element employee 
xml schemas aspects modeled artificial way 
dummy intermediate type model full top inheritance attributes extending restricting derivations 
example possible model student person student number age step 
model dummy type young person restricts age persons 
possible model student young person extended student number 
obtain bottom inheritance instances superclasses xml schema provide type element instance document 
type identified type attribute part xml schema instance namespace 
example students valid fillers driver element requires type person write driver xsi type student name michel name driver possible query persons get subtypes person 
xml provides namespaces oil 
xml schemas oil provide limited means composing specifications 
include specifications underlying assumptions names different specifications different different prefixes 
message section nutshell oil relates xml schemas extended entity relationship model relates relational model 
hand oil provides richer modeling primitives 
distinguish classes slots class slot definitions derive hierarchy inheritance 
hand xml schemas provide richer modeling primitives concerning variety built datatypes grammar structuring content elements 
importance building domain model important defining structure documents 
models oil viewed high level description refined aiming document structure model 
prove statement providing translation procedure close spirit provided elmasri 
translating oil specifications xml schemas er models provide entities attributes relationships main modeling primitives 
closely corresponds oil concepts entities slot definitions concepts attributes global slot definitions relationships 
extended er model incorporate animal carnivore animal herbivore animal lion carnivore animal giraffe herbivore animal plant plant part plant tree plant plant part plant plant plant plant part plant branch leaf plant part plant leaf plant part plant leaf plant part plant herbivore carnivore herbivore carnivore animal plant part plant animal plant part plant animal eats slot eaten slot part slot part slot fig 
step materializing hierarchy 
notion inheritance require explicit definition 
hand relation model provides relations arguments called attributes relations 
translation step required translating high level modeling approach extended er schema definitions relational databases 
elmasri provide procedure translation 
describe similar procedure translated high level conceptual description domain specific document definition xml schemas 
assume definition ontology oil 
example provided 
describe stepwise translation xml schema stepwise translation example illustration 
materialize hierarchy 
give complex class expressions subclass definitions slot constraints name 
materialize hierarchy class explicit 
necessary xml schemas lack notion implicit hierarchy possible subsumption decidable oil 
fact system corba interface desired bechhofer purpose 
provides materialized hierarchy running example 
note lion carnivore giraffe herbivore derived stated explicitly oil example 
second create complextype definition slot definition oil 
add elements names domain range domain range components slot definition 
elements get anonymous type definition consisting class forms domain range 
example slot definitions 
third create complextype definition class definition oil 
add names slot constraints elements type definition 
facets slot constraints translated way value facets give minoccurs attribute element element facets give minoccurs min cardinality max cardinality cardinality give minoccurs value maxoccurs value attributes respectively 
elements anonymous type defined derived appropriate slot type defined step 
complextype name complextype name base extension complextype name eaten base extension complextype name herbivore base extension element name domain minoccurs complextype element ref animal complextype element element name range minoccurs complextype element ref plant complextype element complextype fig 
step type definitions slots 
extension base type consist class filler slot 
gives example 
fourth create element definition slot class 
slot class definition translated element definitions xml schema 
type elements obviously complextype definitions created second third step 
allow plain text inside elements content attribute contain value mixed 
see 
fifth define grammar entity associate basic datatypes built datatypes desired add lexical constraints datatypes desired 
final step adds additional level complextype name base extension element name eats minoccurs complextype base extension element ref animal complextype element complextype complextype name base extension element name eats minoccurs complextype base extension element ref plant part plant complextype element complextype complextype name base restriction element name eats minoccurs complextype base extension element ref leaf complextype element complextype fig 
step example type definitions classes 
expressiveness oil 
purely concerned document structure appearance 
sixth replace module concept oil namespace inclusion concept xml schemas 
step straight forward concepts differ syntactically 
question may arise process mechanized reversible 
concerning question state steps completely automatic 
seventh step automated providing sequence standard grammar trying match class names names built datatypes xml schemas 
final tuning human interference may necessary 
reverse direction difficult high degree automatization achievable 
remarks translation saw section subtyping xml schema divided restriction extension 
subtype refines supertype ways 
propose solve problem dummy intermediate type making restricting refinement extension dummy type 
xml schema explicit way define multiple inheritance 
suggest define type inherits attributes supertype multiple times supertype 
sure conflicts intended xml schema type definitions 
fig 
suggest derive restriction 
restriction consist changing allowed elements plant part plant leaf 
strictly spoken real restriction set allowed instances reduced find kind restriction allowed xml schema 
schema document markup resulting schema create xml instance documents 
structure documents conform schema 
distinguish document oriented data oriented xml instance files 
give short examples types 
show excerpt document part food zoo 
piece imaginary webpage shown 
element name carnivore type content mixed element name herbivore type content mixed element name eats type content mixed element name giraffe type content mixed element name leaf type content mixed fig 
step element definitions classes slots xml version encoding utf aa animals xmlns aa african animals xmlns xsi www org xmlschema instance giraffe name name eats leaf acacia tree leaves leaf eats giraffe lion name name eats herbivore xsi type type type origin holland origin herbivore eats lion aa animals fig 
data oriented example xml instance discussion comparing ontologies xml schemas directly encounter danger compare incompatible things 
ontologies domain models xml schemas define document structures 
applying ontologies line information sources things closer 
ontologies xml version encoding utf aa animals xmlns aa african animals xmlns xsi www org xmlschema instance artis zoo amsterdam live african animals 
giraffe giraffe name name 
favorite food consist eats leaf leaves acacia tree leaf eats giraffe 
picture href www artis nl htm years ago lion lion attacked killed eats herbivore xsi type giraffe drinking drinks water drinks pool herbivore eats lion 
aa animals fig 
document oriented example xml instance provide structure vocabulary describe semantics information contained documents 
purpose xml schemas 
compare ontology interchange language oil xml schemas 
main means refer different levels abstraction different phases describing semantics line information sources 
oil provide richer primitives concepts slots complex concept slot definitions implicit definition concept slot hierarchies 
materialize hierarchy translate concepts slots elements order express aspects xml schemas 
hand richer modeling primitives express constraints content information sources 
variety built datatypes xml schemas define grammars structure elements 
approaches conflict refer different phases development process online information sources 
oil may candidate providing intensional definitions datatypes aspect offered undefined xml schemas 
important step understanding relationship translation oil xml schemas centered twofold role relationship conceptual modeling top inheritance attributes superclasses subclasses 
assume employee subclass class person 
employee inherits attributes defined person 
bottom inheritance instances subclasses superclasses 
assume employee subclass class person 
person inherits instances elements element employee 
xml schemas aspects modeled artificial way 
intermediate step needed model full top inheritance attributes extending restricting derivations 
obtain bottom inheritance instances superclasses xml schema provide type element instance document 
set instances class automatically contain instances subclasses 
providing different way defining xml syntax point ontology modeling xml schemas surely add dtds 
questions best way create type help possible capture central relationship ontology xml schemas 
showed xml schema suitable ontology language 
meant criticism xml schemas designed ontological modeling designed describing valid structures documents 
xml schema syntax horrocks appear completely different kind schema produced 
reason different purposes 
horrocks appear provide xml schema write ontology plain xml document 
discussion try generate schema captures underlying semantics ontology representing instances oil ontology xml 
mention result procedure described providing way annotate data ontological grounded markup reached help rdf schema 
case oil defined extension rdf schema done horrocks appear ontology written rdf schema 
instance documents marked rdf 
way annotating documents advantage 
earlier approaches relating ontology languages xml cf 
erdmann studer welty ide fensel neglected dual character ontology focussed proper translation attribute inheritance tag nesting 
deal xml schemas predecessor dtds 
mapping interesting dtds provide limited expressiveness compared ontologies xml schemas 
interpretation markup rdf clear syntax constructs classes slots 
time writing reliable tools rdf markup 
summary main summarised points oil language concerned expressing domain models xml schema concerned expressing document structure 
result languages complementary direct competition purposes 
document representations expressed xml schema ideally domain models expressed oil relation languages 
relation defined terms translation procedure oil domain ontologies xml schema document structures 
translation procedure map oil type hierarchy xml document structure tag nesting expected 
maps oil type hierarchy xml schema type refinement relation tag nesting represent slots values 
acknowledgment 
credits uwe krohn stimulated 
peter fankhauser explaining tricky things xml schemas 
malhotra malhotra xml schema part datatypes working draft february www org tr wd xmlschema bechhofer bechhofer horrocks patel schneider tessaris proposal description logic interface 
lambrix borgida lenzerini ller patel schneider editors proceedings international workshop description logics dl pages 
elmasri elmasri navathe fundamentals database systems rd ed addison wesley 
erdmann studer erdmann studer ontologies conceptual models xml documents research report institute aifb university karlsruhe 
fallside david fallside xml schema part primer working draft february 
www org tr wd xmlschema fensel fensel ontologies silver bullet knowledge management electronic commerce springer verlag appear 
www cs vu nl dieter ftp spool pdf fensel fensel relating ontology languages web standards appear 
www cs vu nl dieter ftp mod pdf guarino welty appear guarino welty formal ontology properties appear 
horrocks appear horrocks fensel broekstra decker erdmann goble van harmelen klein staab studer oil ontology inference layer appear 
www ontoknowledge com oil 
meersman meersman lexicons computer linguistic tools semantics design cooperation database systems 
conference proceedings lecture notes artificial intelligence lnai ed 
zhang 
springer verlag berlin pp 

newell newell knowledge level artificial intelligence 
dieng corby exploitation xml knowledge management 
fensel studer eds knowledge acquisition modeling management proceedings european knowledge acquisition workshop ekaw lecture notes artificial intelligence lnai springer verlag 
thompson thompson beech maloney mendelsohn xml schema part structures working draft december 
www org tr wd xmlschema 
thompson thompson beech maloney mendelsohn xml schema part structures working draft february 
www org tr wd xmlschema 
welty ide welty ide right tools enhancing retrieval marked documents computers humanities special issue tenth anniversary text encoding initiative 
www cs edu faculty welty papers 
walsh walsh schemas xml july 
www xml com pub schemas index html 
