analysis degradation anonymous protocols matthew wright adler brian levine clay shields cs umass edu cs umass edu brian cs umass edu clay cs georgetown edu dept computer science university massachusetts amherst ma dept computer science georgetown university washington dc number protocols proposed anonymous network communication 
investigate attacks corrupt group members degrade anonymity protocol time 
prove particular initiator continues communication particular responder path existing protocols subject attack 
result place upper bound long existing protocols including crowds onion routing dc net maintain anonymity face attacks described 
results show fully connected dc net resilient attacks su ers scalability issues keep anonymity group sizes small 
additionally show violating assumption attack allows malicious users setup participants falsely appear initiator connection 

variety di erent methods proposed provide anonymous communication internet 
previous protocols include dc net crowds apfs onion routing web mixes :10.1.1.30.3785:10.1.1.30.3785
works include insightful analysis attacks network performance 
crowds reiter rubin describe attack allows attacker guess initiator anonymous connection 
guess information predecessor path study supported part national science foundation ani ani dt cx department justice oce justice programs 
contents solely responsibility authors necessarily represent ocial views department justice 
proxies 
presence attack caused designers crowds modify protocol helped ward failed eliminate threat 
syverson examined related attack worked successfully con gurations onion routing systems required timing analysis 
de ne predecessor attack generalized version attacks 
attack runs simply counting number rounds path crowds node sends message part identi able stream communications attacker 
attack require analysis timing size packets exploits process path initialization 
look carefully implications attack variations protocols anonymity 
speci cally contributions de ne class anonymous protocols currently proposed protocols may placed prove entire class subject predecessor attack 
derive upper bounds amount resources attacker requires signi cantly degrade anonymity users dc net onion routing mix net web mixes protocols complementing reiter rubin analysis crowds 
show varying path lengths onion routing systems limited value possibly exposes users attacks faster possible xed path lengths 
identify setup attacks new threat crowds onion routing mix net users falsely accused initiators connections 
shows attacks dc net extremely low cost participants arranged logical ring see 
additionally argue attacks dc net participants fully connected requires unreasonable resources part attacker dc net overhead scale number participants 
dc net easily falls subject service attacks require overhead avoid ectively 
approach probabilistic contrasts epistemic approaches understanding anonymity taken past :10.1.1.26.1009:10.1.1.26.1009
implications anonymous users recurring internet connections protocols provide responder anonymity want support servers remain available long periods time 
section overviews related 
prove theorem section stating generalized attack undermines anonymous protocols 
analyze attacks speci protocols section 
introduce new attack falsely identify initiator connection section 
section discusses merits protocols light attack section concludes 

background previous anonymous communication internet extensive :10.1.1.30.3785:10.1.1.30.3785
survey previous martin 
orts directly compare analyze techniques analyze variety attacks may reduce anonymity protocol user time 
reiter rubin described attack context crowds suciently powerful attackers degrade anonymity user :10.1.1.30.3785:10.1.1.30.3785
related attack described syverson onion routing 
attacks form basis analysis 
distinguish analyses section 
anonymous protocols route messages initiator connection wishes remain anonymous overt responder participate protocol 
common feature proposed protocols anonymity review selection path messages routed selection group nodes send messages 

crowds reiter rubin developed crowds uses group nodes serve proxies initiator group :10.1.1.30.3785:10.1.1.30.3785
initialization message routed initiator series proxies forming path messages initiator 
receiving message proxy decides probability forwarding extend path proxy chosen random uniform probability node path communicate responder directly 
path maintained limited period time paths 
time limit allows nodes join protocol add paths time nodes new paths may easily attributed joined nodes 
paths proxies path leave session 

onion routing onion routing reed syverson goldschlag similar crowds initial message forms path proxies initiator sends messages 
protocol gets name method encrypting initial packet address proxies hop path public key previous step 
scheme results layers encryption peeled step order determine address send path 
requires initiator entire path 
explore bene ts paths layered encryption section 
crowds onion routing node stops forwarding messages reason disrupt paths force new paths communication initiators paths resume 
crowds disruptions lead full path reformation substantial fraction :10.1.1.30.3785:10.1.1.30.3785
onion routing generally implemented onion routers placed network outside control individual users 
argued reduces possibility corruption particular onion router requires users trust operators onion router maintain anonymity 
accordingly users may choose run onion routers locally band cooperatively forward trac 
local con guration distributes trust operators provides opportunities corruption routing nodes 
described detail section primarily analyze local con guration 

mix net number protocols anonymity isdn mixes java anon proxy mixes onion routing david chaum anonymous email solution network mixes :10.1.1.26.1009
refer mix net protocol uses onion routing layered encryption employs mixing techniques thwart timing analysis 
mixing techniques include sending messages reordered batches sending dummy messages introducing random delays 
scope study protocols ectively timing attacks generally ectiveness various mixing techniques 
consider idealized mix net protocol guarantees timing analysis ectively stopped 
onion routing provides defenses timing analysis show di erence predecessor attack section 

dc net chaum solution anonymous communication called dc net participant share secret coin ips participants pairs 
parity ips participant seen announced participants 
ip announced twice total parity 
send message participant incorrectly states parity seen 
causes total parity odd indicates transmission bit 
initiator knows sent message nodes coins sender reveal coin ips 
various techniques available handle collisions similar media access protocols link layer networking 
node may launch denial service attack choosing send message round coin ips 
node anonymous initiator simply detected denied access 
strategies developed waidner detect attacker high cost overhead 

comparison related reiter rubin rst identify predecessor attack :10.1.1.30.3785:10.1.1.30.3785
initial analysis provide analysis derive bound number rounds path required attack high likelihood crowds 
syverson identi ed related attack onion routing 
analyzed con gurations con gurations individuals run onion router remote cor con gurations individuals rst connect remote untrusted cor 
analysis concluded attack described successful local cor con guration routers compromised 
analysis concluded attack complemented limited timing analysis succeeds remote cor con guration average probability number attackers total number nodes 
di ers previous ways 
formally prove attack reiter rubin identi ed successful existing anonymous protocols 
furthermore extend analysis calculate resources required attack protocols allows quantitative comparison robustness protocols 
proves details attack succeeds local cor con guration 
additionally show mix nets hold substantial advantage onion routing defending attack 
additionally analyze mix nets di erent scenarios including variable xed path lengths 
varying path lengths may method confusing attackers fails signi cantly increase security predecessor attack 
fact show crowds approach varying path lengths proposed exposes users greater security risk 
show ring version dc net described chaum schneier easily attacked 
variation dc net safe attack expensive protocol subject simple anonymous denial service attacks 
rst identify setup attacks threat anonymous services 
setup attacks allow malicious initiators falsely third party initiator connection 

general analysis section de ne model anonymous protocols attack protocols 
prove theorem stating generic attack works protocols model speci conditions met 
discuss section major assumptions attack requires operate rst recurring connection party initiates sending message receiver message second session identifying information available attacker transported packets uniquely identi es recurring connection 
justify assumption connection recurs frequently note case web browsing main intended crowds users return site :10.1.1.30.3785
onion routing designed support wider variety internet connections including ftp nntp raw sockets number encourage types recurring activity users web browsing usenet ssh telnet connections remote accounts going email correspondence irc chat programs 

model protocol series instructions set nodes hosts network follow hide origin users communications 
participant node follows protocol send messages anonymously assist sending messages anonymously 
attacker participant collects data interactions participants protocol may share data attackers 
consider peer peer systems simplicity attackers need act full participants effective 
attack works long attackers send receive messages protocol 
participant initiates sending message known initiator 
intended receiver known responder participant 
refer session continuing communications initiator responder 
term sender refer strictly node sends packet directly node responder term receiver strictly refers nodes accepting packets nodes part protocol 
receiver packet determine identity sender sender packet knows identity receiver equate ip addresses identity 
show sucient attackers collect information time compromise anonymity initiator 
speci cally show time attackers increase probability identify initiator session 
single message transmitted initiator set packets sent participants 
refer active set message set participants send receive packets 
note means initiator active set 
denote active set addition total order packets representing global order packets received global order receiver nodes 
total order may uenced protocol behavior network network may deliver packets faster 
ith position active set 
total order position initiator rst sends message identi ed transmission 
analysis assume protocol network combine give property initiator position participants remainder positions chosen uniformly random replacement replacement 
replacement initiator appears position amin minimum active sets total orders occur non zero probability number attackers required determine initiator responder 
example crowds amin sucient attacker rst participant path 
note attackers know identity initiator single round 
case ring dc net amin sucient attackers occupy positions nodes inde nitely stable connections network 
node disconnects active sets part disconnected 
call event reset assume occurs repeatedly operation protocol 
call period resets round 
note active sets reset reset obvious initiator reset stream 
foolish reset active sets immediately new node joins existing node leaves attacker hasten predecessor attack increasing rate resets :10.1.1.30.3785:10.1.1.30.3785
alternately protocol rounds long users service reset 
attackers leave join force resets protocols constrained long delays resets expect rounds occur short regular intervals 
analysis require resets occur repeatedly 
attack identify initiators keep session active responder case multiple initiators contact single responder attackers able link speci data streams initiator information packet round distinguishes sessions 
initiator connection 
responder connection 
set participants forward messages 
number participants 
number attackers 
number rounds 
total ordering nodes onion routing path length 
crowds probability forwarding 
table 
table variables 
information available attack cases considered successful initiator linked particular responder 
case dicult analyze assume initiator maintains session responder 
shall refer single initiator interest attackers node communicating responder note information available distinguishes sessions responder equivalent case 
assume contacts round 
contact round rounds contacted 
duration attack increased factor equal ratio total rounds rounds contacts summary consider assumptions key discussion maintains session protocol 
may leave protocol temporarily halt communications resume protocol 
attacker able distinguish messages corresponding session 
protocol method selecting active set uniformly random sense active sets size equally 
note crowds onion routing speci ed operate 
total order node selected uniformly random 

attack attack depends assumption initiator choose remain contact responder extended period time 
case session initiator responder subject number resets 
reset new active set constructed initiator responder 
active set participant forwards message outside anonymous group responder 
happens assume participant able associate message sent speci session 
basic idea attackers able determine speci session rst attacker sees message 
attack rests fact initiator send message rst attacker participant 
de ne probability correctly guessing initiator rounds participants attackers working cooperatively 
theorem protocol maintain amin proof consider protocol attackers attempt determine identity initiator participant communicating responder show attackers able increase arbitrarily close larger sucient round attackers determine occurs positive probability log participant rst sent message identi ed transmission attackers round 
step attackers identify participant logged largest number times initiator 
key attack case initiator correctly identi ed participant logged 
occurs positive probability 
hand remaining cases due uniformity assumption participants logged equal probability 
expected number times logged attackers greater expected number times node logged attackers 
law large numbers appear node 
probability identi ed initiator grow larger value 
attackers attempt easier task spending rounds trying compose participant set receivers entire set result attack initiators longer anonymous unlinkability initiators maintained 
known attackers initiators communicating identity responders known 
advantage anonymous protocols wishing maintain unlinkability requirement participants form active sets rounds possibly ll null trac threat monitoring attackers 
proofs statements exist similar construction proof 
general non uniformity anonymous protocols exploited attack 

speci attacks describe speci versions generic attack previous section 
provide upper bounds time required degradation initiator anonymity faced attack 
bound time terms rounds de ned 
summarizes results 
resources spent attackers number nodes working cooperatively attack amount time available attack memory processing resources generally signi cant 
attackers handle trac normal participants protocols 
explore resources ectively attack undermine anonymity systems running protocols 
results section suggest long attacking times high proportion attackers 
true fact predecessor attack passive draw attention means continue long periods time interruption proportion attackers high 
suggest unsophisticated attacker limited resources learn attack 
important understand limitations current protocols aware applications protocol appropriate 

crowds attack crowds number attackers may simply join crowd wait paths periodic occurrence usually hourly :10.1.1.30.3785:10.1.1.30.3785
attacker log predecessor path reformation 
initiator far node appear path attackers see node 
large number path clear initiator attack described reiter rubin earlier :10.1.1.30.3785:10.1.1.30.3785
stated number rounds required break crowds show analysis follows directly results 
terms generic proof section attacker required 
attacker appear directly may easily recover responder address plain view information 
multiple attackers perform attack parallel 
simply communicate results combining get larger samples 
helpful attackers crowds determine rst attacker path 
allows attacker appears attacker path disregard predecessor predecessor initiator node 
may coordinated master attacker collect predecessor information attackers 
method attackers submit requests session directly responder path 
attacker may covertly tag messages forwarding route 
case assume rst attacker path log predecessor 
calculate probability particular node path just rst attacker path 
call probability 
assumption paths rst attacker attackers path path ends sends message attacker 
write probability path just attacker path directly initiator 
reiter rubin np probability forwarding :10.1.1.30.3785:10.1.1.30.3785
gives np np apply cherno bounds probability attacker appearing rst path determine long number rounds ln initiator appear attackers times high probability 
bound probability non initiator appears times 
choose yields 
number times particular non initiator seen binomial random variable depends number rounds probability seeing 
protocol rounds attack rounds attack required latency high probability expectation participants crowds log log onion routing :10.1.1.30.3785:10.1.1.30.3785
ln 
mix net xed path length ln variable path length min min ln min min lave lave dc net fully connected lg fully connected lg ring connection lg lg 
summary analysis variations protocols 
applying cherno bound rfb see log probability know non initiator node shows attacker times 
nodes chance node initiator shows times 
number rounds greater log ln algorithm 
exactly node seen times attackers believe node initiator 
nodes threshold attackers determine initiator 
algorithm fail answering answering incorrectly initiator appear suciently non initiator appeared frequently 
non initiator fails probability initiator fails probability total probability failure probability initiator appeared times non initiator appeared leading incorrect initiator identi cation results crowds hold protocol uses multicast paths responder initiator attack takes note ln number rounds 
smaller log larger number rounds 
ln rounds 
example rounds required sure initiator seen rounds required sure node seen attacker selects 
place forward path responder 

onion routing mix nets layered encryption onion routing results substantial advantage node path recognize particular data stream 
attacker compromise rst nodes path know path perform timing analysis packets 
timing analysis done initiator packets done fake packets rst attacker generate 
attack reported syverson single round probability success path lengths greater path lengths exactly 
applying cherno bound see probability initiator communication discovered 
ln rounds path lengths greater ln path length set 
timing attacks defeated treat onion routing mix net analyze 
mix nets subject timing attacks attackers compromise node path initiator responder identify initiator 
terms proof section number attackers equal size active set path length 
xed path length network probability attacker determining initiator particular message cherno bound observe happen probability ln rounds 
note mix nets onion routing initiator directly choose active set may select trusted nodes expects perform honestly 
crowds initiators may similarly choose trusted nodes control rst node path 
strategy defeat attacks describe drawbacks 
set static time attacker may able compromise systems especially number small 
additionally new paths easily attributable nodes join protocol late nodes established paths 
variable path lengths attackers know certainty initiator xed length path mix net system 
bene cial vary path length 
unfortunately bene ts approach limited 
cost latency varying path lengths considered weighted average cost possible path length 
user experience highest latency cost primary cost consideration average performance forgotten delay unacceptably high 
show security system predecessor attack slightly better security system path length xed shortest length value 
means proposal having crowds path length selection onion routing probability forwarding occasionally provide worst case performance system long path lengths er security system single possible path length times constant factor slowdown attack show security onion routing variable path lengths limited light predecessor attack 
suppose path length varied initiator path length chosen randomly range 
shortest path length chosen probability attackers see initiator rounds high probability long ln nodes seen attackers get nodes row actual path length longer 
probability attackers seeing node way letting binomial random variable representing number times node seen apply cherno bound rfb tp tp log node seen tp times probability total probability node seen tp times larger ln log initiator seen tp times node seen times probability greater note number rounds order complexity terms attack xed path length variable path lengths increase average maximum delay provide approximately strength smallest path length attackers attack 
primary advantage variable path lengths reducing certainty attackers result 
xed path length attackers may determine initiator identity certainty single round including rst round attack 
non trivial probability path length set attackers path length certain identi ed initiator correctly 
general prevent predecessor attack greatest path length acceptable performance characteristics 
may reasonable select path length balance performance security vary path lengths higher values greater security attacker certainty 
course onion routing timing attacks may independently path length result 
security longer paths depends general security leaves attackers easier attacking options 
unknown path lengths hiding xed path length mix nets provides little additional protection 
reason interactive applications typical user practically stand performance worse nodes path 
exceptionally protective user path length outside range 
range possible path lengths large path length determined quickly predecessor attack path length 
suppose initiator uses paths hidden length path length xed attackers know comprise full path length initiator seen 
get paths length turns expectation 
times attackers seen di erent nodes high probability 
di erent nodes clear path length greater 
getting node multiple times path length suggests node seen initiator 
attackers wanted strong proof node initiator wait number turns high show longer path high probability 
require amount necessary attack step longer path length 
clearly desirable hide path length possible information useful attackers 
rely assumption attackers path length information system 

dc net dc net graph constructed viewing shared secret edge nodes 
defeat dc net expose messages node attackers surround corrupting nodes share edge share secret coin ips 
doing know coin ips shared know bit parity detect messages 
determine initiator particular session attackers surround node turn initiator 
instantiation dc net allow pairs participants exchanging coin ips 
topology provide attackers opportunities gain information 
data exchange participants prohibitive dc net ring described chaum 
ph thesis martin describes implementation ring dc net context local network 
ring version dc net participant shares secret coin ips neighbors 
section show attack detailed section applied dc net 
discuss attack ring dc net analogous attacks exists topologies 
fully connected attackers active set entire group nodes successors initiator terms proof jamin ring dc net topology partitioned just attackers jamin 

ring dc net anonymity ring dc net degrades zero initiator identity proven attackers average case lg rounds 
round requires attacker leave chaum ring rejoin assume joining nodes placed randomly ring 
nodes placed deterministically piece information nodes node ip address clever attacker simply forge information joining 
allows attacker ectively choose best positions ring perform attack works faster 
assume nodes hear outgoing messages 
requirement sender hear message know sent correctly collision occurred 
system prevent collisions denial service attacks sender able see message know trap set round nonadjacent attackers may share coin ips 
ectively creates new edge dc net graph seen attackers 
new edge creates sub rings new ring consists edges new edge ring consists edges new edge 
chaum protocol announced sub ring initiator sum zero nodes ring may eliminated possible initiators 
attackers able identify initiator immediately node sub rings 
suppose attacker position ring attacker joins ring 
position partition ring segments 
constant fraction nodes appear side partition lg partitions required 
worst case exact position ring required 
take average rounds obtain position 
gives average case lg rounds reduce initiator anonymity zero 
note just rounds initiator degree anonymity substantially reduced 
possible initiator anonymity may reduced zero single round 

setting third parties key assumptions attacks initiator behaves strictly protocol making random selections uniformly nodes 
initiator may select nodes purposefully possibly malicious intent 
section discuss malicious selection active set collaborating nodes basis new attack appear trac originating particular victim 
attack call set attack evidence degradation attack described identify correct initiator locate victim set attack 
attack protocol initiators allowed non randomly select part active set includes crowds onion routing mix nets 

set attacks suppose initiator places victim node direct successor routing path 
attackers attempt determine initiator identity messages appear come malicious intent example link launch attack responder 
sucient evidence existed point stream ensure demonstrate innocence 
alternatively access responder carries illegal content making appear receiving data 
multiple attackers targeting node set attack ective 
example suppose nodes purposefully route paths speci responder 
set nodes performing degradation attack section see initiator 
optimizations available variable unknown path lengths path chosen initiator 
malicious nodes conducting set attack know attackers attempting degradation attack particular sessions set entire path attackers ensuring gets discovered 
joins attackers appear initiator bear consequences arise communications 
risk conducting attack choose degradation attack members attackers give chance join show initiator 
monitor connections decide carry links sent appears setup 
mitigate risk mix nets onion routing crowds selecting node uniformly random place nodes appear equally time 

self protection careful selection nodes forward messages responder allows initiator protect degradation anonymity 
fact placing single trusted node onion routing path time ensures path consist entirely attackers 
placing trusted node path responder identity session identifying information hidden attackers round 
knowing trust random group dicult impossible nodes arrange join group trusted nodes share paths 
ironic viewpoint set attack consider method attack method self defense degradation attack 
protection set attack described section crowds onion routing simple task 
consider fundamental problem protocols allow nodes select active set 
detecting set attacks developing methods countering areas examination 

discussion amount required establish maintain anonymity high vary greatly di erent protocols 
section discuss picking best protocol network performance requirements security including resistance predecessor attack 
summarizes results performance metrics 
fourth column shows upper bounds number active sets participant appear refer simply 
fth column shows length active set initiator responder directly ects network latency 
discuss results section 

crowds onion routing mix nets network performance crowds largely depends path length resulting chosen probability forwarding 
larger path lengths lead linear increase delay result greater participants crowd behalf calculated reiter rubin :10.1.1.30.3785:10.1.1.30.3785
unfortunately simply examining analysis crowds resistance predecessor attack shows increase probability forwarding signi cantly increase number rounds required successful attack 
primary advantage longer path crowds thwart attack traceback 
intuition initiator seen collaborating attacker rst path position probability regardless path length 
crowds onion routing equivalent latency characteristics equal path lengths see 
important note timing attacks onion routing require systems mixing techniques gain security advantage longer path lengths 
requires form dummy messages greater latency due random delay message 

dc net dc net requires substantial participants times 
participant secret coin ips shared substantial amount data shared 
chaum suggests large quantities random data shipped cd 
ecient alternative identical random number generators share seed numbers generated 
scenario node joins need exchange messages node share coin ips attack described section successful dc net fewer participants neighbors 
nodes joined announcements parity coin ips 
message collection methods collect followed broadcast see results 
introduces latency lg set bits sent 
latency cost similar crowds onion routing lg expected path length 
grows dc net latency higher crowds onion routing systems 
complication dc net collision resolution 
discussion issue ecient solutions available 
denial service attacks cause dc net 
denial service attacks users simple perform attackers need send constant stream bits performed nearly anonymity 
modi cation dc net isolates nodes launching attack exists prevent attack requires steps message exchange prior message sent 
requires node send traps messages constant fraction time 
despite resistance fully connected dc net attack described diculties dc net may usable small groups trusted parties 
martin shown costs manageable locally run system 
cost involved fully connected dc net thoroughly examined ring approach substantial pitfalls describe section 
large dynamic groups additional required appears prohibitive real time bandwidth intensive applications 
crowds onion routing entire set participants route messages resilient denial service attacks 
conversely fully connected topologies dc net nodes active set subject degradation anonymity due predecessor attack 
crowds onion routing 
variants dc net allow nodes pick neighbors subject set attacks occur crowds onion routing 

anonymity continues elusive challenging problem 
results show inability protocols maintain high degrees anonymity low overhead face persistent attackers 
provided upper bounds onion routing mix nets time required attackers degrade anonymity particular initiator high probability 
summarizes results 
crowds degradation bounded lg rounds :10.1.1.30.3785:10.1.1.30.3785
onion routing number rounds bounded 
lg mix nets number rounds required depends path length bounded lg proved long attackers selected uniformly random part active set sessions identi ed path degree anonymity sender degrade attack 
allows understand protocols better defense predecessor attack 
example data en layers nal node path determine stream packet belongs onion routing holds defense attackers longer crowds 
mix nets thwart timing analysis increase defense 
dc net pairs nodes shared coin ips attack requires unreasonable resources succeed result hold topologies 
discussed weaknesses protocol prevent usable practice 
identi ed set attacks new threat protocols allow participants choose part active set 
detecting node victim setup attack dicult fundamental problem crowds onion routing mix nets 
predecessor attack applies existing responder anonymous protocols intended provide anonymous web sites 
responder anonymous protocols meant support servers stay inde nitely predecessor attack insures nite time possible 
related uses special properties peer peer networks thwart predecessor attack described 
berthold federrath 
project anonymity unobservability internet 
computers freedom privacy conference cfp workshop freedom privacy design april 
bertsekas gallager 
data networks 
prentice hall 
chaum 
untraceable electronic mail return addresses digital pseudonyms 
communications acm february 
chaum 
dining cryptographers problem unconditional sender untraceability 
journal cryptography 
federrath 
jap tool privacy internet 
anon inf tu dresden de index en html 
goldberg wagner 
taz servers rewebber network enabling anonymous publishing world wide web 
monday 
harmon :10.1.1.30.3785
exploration world wide web tilts eclectic mundane 
new york times august 
national desk 

providing anonymity open system 
information hiding april 
martin 
local anonymity internet 
boston ma 
ph thesis 
raghavan 
randomized algorithms chapter 
cambridge university press 
waidner :10.1.1.26.1009
untraceable communication small bandwidth overhead 
gi itg conference communication distributed systems february 
reed syverson goldschlag 
anonymous connections onion routing 
ieee journal selected areas communication special issue copyright privacy protection 
reiter rubin :10.1.1.30.3785:10.1.1.30.3785
crowds anonymity web transactions 
acm transactions information system security november 
levine shields 
responder anonymity anonymous peer peer le sharing 
proc 
ieee international conference network protocols icnp november 
schneier 
applied cryptography 
wiley sons 
shields levine 
protocol anonymous communication internet 
proc 
th acm conference computer communication security acm ccs november 
staniford chen heberlein 
holding intruders accountable internet 
proc 
ieee symposium security privacy pages oakland ca may 
syverson stubblebine :10.1.1.26.1009:10.1.1.26.1009
group principals formalization anonymity 
wing woodcock davies editors fm formal methods volume volume lecture notes computer science pages 
springer 
syverson tsudik reed landwehr 
analysis onion routing security 
workshop design issues anonymity unobservability july 
waidner 
dining cryptographers disco unconditional sender recipient untraceability computationally secure 
eurocrypt 
waidner 
unconditional sender recipient untraceability spite active attacks remarks 
technical report fakultat fur informatik universitat karlsruhe 

finding connection chain tracing intruders 
proceedings th european symposium research computer security 
esorics 
zhang paxson 
stepping stone detection 
presentation sigcomm new areas research august 
