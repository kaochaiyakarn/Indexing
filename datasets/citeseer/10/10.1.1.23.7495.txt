generating polynomial orderings termination proofs jurgen giesl fb informatik technische hochschule darmstadt 
darmstadt germany email giesl informatik th darmstadt de 
systems automation termination proofs polynomial orderings semi automatic right polynomial ordering user 
show variation lankford partial derivative technique leads easier slightly powerful method semi automatic approaches 
technique develop method automated synthesis suited polynomial ordering 
interesting properties term rewriting system trs termination cf 
ho dj 
term rewriting system terminating set terms exists infinite derivation terms general problem undecidable hl methods proving termination cf 
der 
concerned automation termination proofs 
approaches automated termination proofs path orderings pla der described ait df algorithm knuth bendix orderings kb mar system able handle general path orderings dh 
implementations polynomial orderings lan developed ben lescanne bl steinbach ste ste 
systems bl ste prove termination polynomial ordering steinbach ste describes system tries generate suited polynomial ordering automatically 
new method automated termination proofs polynomial orderings variant lankford partial derivative technique 
method semi automatic section fully automated way sections 
illustrate performance discuss relation approaches automated termination proofs 
technical report technische hochschule darmstadt 
extended version th international conference rewriting techniques applications lncs gie 
semi automatic termination proofs polynomial orderings termination proofs suggested lankford lan 
polynomial interpretation associates integer multivariate polynomial xn ary function symbol termination proofs polynomials monotonic ground terms mapped integers greater equal lower bound 
ground terms 
ordering implicitly defined polynomial interpretation called corresponding polynomial ordering iff 

order compare non ground terms extended interpret variables variables integers 
regard trs finitely rules assume signature contains constant exist ground terms prove termination trs compatible polynomial ordering rule 
hold instantiations variables 
discussion class term rewriting systems termination proved polynomial orderings les lau hl cl 
systems automated termination proofs polynomial orderings semi automatic user provide polynomial interpretation system checks trs compatible corresponding polynomial ordering 
section introduce semi automatic system compare ones bl ste 
illustrate approach example bel bl 
consist terms constructed constant unary function symbol map binary function symbol ffi 
trs associativity endomorphism ffi ffi ffi ffi map ffi map map ffi map ffi map ffi map ffi ffi aim prove termination showing compatible polynomial ordering inequalities true instantiations integers 
ffi ffi ffi ffi ffi map map map ffi ffi map ffi map ffi map ffi example comes area functional programming 
intended meaning ffi composition variables represent functions map mapcar operator result function 
polynomial ordering map ffi xy polynomial interpretation inequality transformed xy xy yz equivalent xz 
show compatible polynomial ordering prove inequalities result polynomial ordering applying simple arithmetic laws 
xz xy xyz xy gamma xz requirement 
holds instantiations variables integers usually strong 
instance inequalities valid instantiations inequalities false 
trs compatible polynomial ordering sufficient demand loe 
roe ground substitutions oe lan 
equivalently sufficient demand 
instantiations variables numbers values ground terms numbers exists ground term 
example ground terms mapped numbers greater equal 
sufficient inequalities hold instantiations numbers 
general condition hard check slightly stronger requirement dj 
demanded instantiations integers greater equal minimal value ground term numbers minf ground 
example ground terms associated numbers 
sufficient termination inequalities hold instantiations integers greater equal 
problem prove requirement 
note general question undecidable lan 
demanding inequality hold sufficient inequality holds xyz xy gamma xz decreasing increasing 
words partial derivative xyz xy gamma xz respect non negative 
replace inequalities yz gamma resulting yz gamma resulting partial derivation application technique demanding hold partial derivatives respect non negative transformed inequalities transformed 
variable eliminated way 
yields inequalities 
resulting inequalities numbers true original inequality holds 
validity inequalities proved way 
semi automatic system termination proofs polynomial orderings mainly consists procedure check polynomial xn positive instantiations variables xn integers greater equal minimal value zz 
example differentiation rules prove requirements 
diff diff repeated application differentiation rules diff diff polynomial inequalities form xn transformed inequalities numbers zz 
transformation sound resulting inequalities numbers true xn holds xn results method semi automatic termination proofs polynomial interpretation minimal value minf ground provided user 
theorem semi automatic termination proofs 
trs monotonic polynomial interpretation mapping ground terms integers greater equal repeated application differentiation rules diff diff gamma rules yields unique set inequalities numbers 
inequalities true terminating 
differentiation rules diff diff partial derivative method lankford lan 
lankford method prove polynomial eventually positive xn holds large 
note sufficient termination trs exists polynomial interpretation gamma eventually positive rule der 
instance trs rule terminating gamma eventually positive polynomial interpretation different semi automatic method ben lescanne bl 
approach uses heuristic fail method improved steinbach ste developed system power bl extended backtracking component 
eliminated restriction bl fixed minimal value 
comparison method ones ste bl extended backtracking arbitrary leads results detailed proofs observations appendix 
ste bl prove polynomial positive method 
reason proved methods ste bl proved methods valid 
repeated application diff diff transforms set valid inequalities 
method prove positive xn exists methods ste bl prove positive xn possible choose example systems ste bl prove gamma method prove 
worst case complexity systems ste bl exponential number monomials method exponential number variables 
precisely complexity method prove variate polynomial degree positive 
ste steinbach suggested additional geometric mean inequality 
allows proofs possible approach 
know heuristic deciding apply inequality prove usual way integrate method 
termination criterion variable coefficients aim develop method automated generation polynomial orderings 
trs synthesize polynomial ordering compatible purpose function symbol associated polynomial 
determine coefficients polynomials proceed steps described section respectively trs compute constraints choice coefficients 
coefficients satisfy constraints compatible corresponding polynomial ordering 
second step consists generation coefficients satisfying constraints 
section termination criterion associations polynomials coefficients integer numbers 
extend theorem termination criterion polynomials variable coefficients 
yields method generate set inequalities representing constraints instantiation coefficients 
instantiation satisfying constraints compatible trs 
discussion find instantiation automatically follows section 
generate polynomial interpretation decide maximum degree polynomials 
follow heuristic ste associate simple mixed polynomial function symbol 
alternatively try prove termination polynomials maximum degree try polynomials maximum degree give maximum degree exceeds certain upper bound 
attempt termination proof simple mixed polynomials example constant associated number unary function symbol map associated polynomial map ffi associated ffi xy 
polynomial interpretation maps function symbols polynomials variable coefficients find instantiation variable coefficients compatible corresponding polynomial ordering 
gamma hold rule example generate instantiation inequalities true instantiations rule variables integers greater equal minimal value ground term 
polynomial interpretation variable coefficients applying simple arithmetic laws inequality gamma gamma gamma gamma gamma xz problem directly check instantiation variable coefficients inequality valid minf ground 
transform new inequalities contain rule variables 
instantiation variable coefficients trivial check satisfy new inequalities 
invariant transformation instantiation satisfying new inequalities satisfies original inequalities minf ground 
transformation termination criterion theorem differentiation rules section 
new variable assume moment instantiated value equal minf ground 
apply differentiation rules diff diff transform inequalities variables obtain gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma non unary polynomial simple mixed iff exponents greater xy gamma xyz simple mixed 
unary polynomial form ff ff ff ff ste steinbach conducted experiments trs literature noticed trs compatible polynomial ordering compatible simple mixed polynomial ordering 
find instantiation variable coefficients valid due theorem inequality holds proceed analogously obtain inequalities contain variable coefficients rule variables exists instantiation variable coefficients satisfying resulting inequalities instantiation satisfies original inequalities words obtained inequalities constraints instantiation variable coefficients 
instantiation satisfies constraints trs compatible corresponding polynomial ordering 
imply termination furthermore ensure polynomials monotonic 
demand 
map map 
ffi ffi 
ffi ffi demanding conditions integers sufficient inequalities hold aim obtain constraints instantiation variable coefficients sufficient validity 
transform inequalities inequalities variables inequality rule variables eliminated application differentiation rules possible monotonicity inequalities 
reason direct application differentiation rules sound conditional inequalities 
assume instance want check gamma 
gamma holds 
true partial derivatives gamma gamma positive 
instantiation falsifies formula 
differentiation technique section works unconditional inequalities 
able eliminate rule variables differentiation rules monotonicity inequalities transformed unconditional inequalities 
inequality guarantees increasing ffi increasing 
demand partial derivative ffi respect positive 
example ffi replaced 
unconditional inequality diff eliminate remaining rule variable way replace general 
demand ensure variable really instantiated value equal minimal value ground term 
purpose demand gamma constants signature 
non constant function symbols demand application yields value greater equal gamma condition sufficient requirement minf ground 
reason function symbol associated monotonic polynomial inequality xn holds xn example instantiation variables satisfy inequalities gamma gamma gamma theorem summarizes termination criterion polynomial interpretations variable coefficients 
theorem termination criterion variable coefficients 
trs polynomial interpretation variable coefficients 
repeated application differentiation rules diff diff gamma rules function symbols gamma function symbols gamma constants yields unique set inequalities containing rule variables 
exists instantiation variable coefficients variable satisfying resulting inequalities terminating 
example start rule inequalities monotonicity inequalities inequalities ensure correct instantiation subsequently rule variables eliminated repeated application differentiation rules diff diff 
resulting inequalities satisfied instantiation corresponding polynomial interpretation section 
theorem termination proved 
differentiation rules steinbach technique ste elimination rule variables suggested ste 
steinbach technique introduces new variables advantage diff diff rules introduce new variable generation polynomial ordering compatible find instantiation variable coefficients section discuss find instantiation automatically 
fully automated termination proof procedure theorem introduced method automatically generate set inequalities containing variable coefficients variable inequalities represent constraints instantiation variable coefficients 
prove termination trs mechanically synthesize instantiation variables satisfying inequalities 
examining term rewriting systems occurring literature noticed termination proofs polynomial interpretations polynomials coefficients 
checking certain instantiation variables numbers satisfies inequalities resulting theorem done efficiently 
suggest apply generate test approach generates instantiations variables numbers instantiations satisfies inequalities 
results fully automated termination proof procedure succeeds term rewriting systems compatible polynomial ordering 
exist term rewriting systems require polynomial ordering coefficients 
trivial example trs constants 
compatible polynomial orderings different coefficients 
undecidable exists instantiation integers satisfying set inequalities 
regard instantiations real numbers problem decidable tar 
decision methods elementary algebra tar coh col synthesis right instantiation 
compatible integer polynomial ordering sufficient termination trs 
non terminating trs infinite derivation ground terms 
ground term mapped integer greater equal lower bound bounded infinite descending chain integers leads contradiction 
unfortunately method termination proofs real polynomial orderings 
reason exist bounded infinite descending chains reals distance different real numbers infinitesimally small 
trs compatible polynomial ordering defined terminating 
consequently termination criterion theorem unsound instantiations real numbers allowed 
associated associated method theorem constructs inequalities satisfied instantiation satisfiability inequalities instantiation real numbers sufficient termination 
develop refined termination criterion instantiations real numbers 
enables application decision methods elementary algebra generate suited instantiation variable coefficients 
der dershowitz proposed method proving termination real polynomial orderings 
showed sufficient termination trs compatible simplification ordering monotonic ordering possessing subterm property 
survey simplification orderings see ste ste ste 
result strengthened der stating termination sufficient trs compatible strict part quasi simplification ordering quasi simplification ordering quasi ordering transitive reflexive monotonic possesses subterm property 
polynomial interpretation defines corresponding polynomial quasi ordering iff 
suggested der prove termination trs showing compatible possibly real polynomial ordering corresponding quasi ordering ordering 
words ensure non strict monotonicity non strict subterm property 
remember section guarantee instantiation variable coefficients resulted monotonic polynomial interpretation 
purpose instantiation satisfy inequality function symbols requirement guarantee monotonicity subterm property corresponding polynomial quasi ordering 
example demand 
map map 
ffi ffi 
ffi ffi map gamma ffi gamma ffi gamma applying differentiation rules transform monotonicity formulas unconditional inequalities 
contrast formulas demand non strict monotonicity arguments increasing result polynomials decreasing 
demanding partial derivatives polynomials positive section sufficient demand non negative 
replace ensure correct instantiation variable demand holds constants condition equivalent minf ground subterm property 
summing obtain alternative termination criterion allows instantiations real numbers 
theorem termination criterion real variable coefficients 
trs polynomial interpretation variable coefficients 
repeated application differentiation rules diff diff gamma rules function symbols gamma function symbols gamma constants yields unique set inequalities containing rule variables 
exists instantiation variable coefficients variable real numbers satisfies resulting inequalities terminating 
example rule inequalities non strict monotonicity inequalities inequalities guaranteeing subterm property inequality ensures correct instantiation eliminate rule variables differentiation rules diff diff 
resulting inequalities satisfied instantiation mentioned section 
contrast theorem theorem sound instantiations real numbers 
non terminating trs theorem constructed inequalities satisfied real instantiation inequalities resulting theorem unsatisfiable 
reason contradiction subterm property 
criterion theorem apply decision methods elementary algebra determine exists real instantiation variable coefficients satisfying resulting inequalities 
instantiation exists trs terminating 
instance example inequalities resulting rule gamma left hand side inequality polynomial gamma variables variable coefficients polynomial interpretation 
coefficients polynomial 
general apply termination criterion theorem find instantiation satisfying set strict non strict inequalities polynomials polynomials variables variable coefficients polynomial interpretation coefficients integers 
words check validity existential formula form denote variable coefficients 
decision method elementary algebra decides formula valid real numbers 
efficient known decision method elementary algebra cylindrical algebraic decomposition algorithm collins col acm hon 
prove validity formula form collins algorithm computes partition ir finite number subsets called cylindrical algebraic decomposition polynomials change sign subsets positive negative equal zero instantiations numbers subset 
example cad formula gamma gamma gamma gamma gamma polynomials change sign subsets cad validity inequalities subset determined checking validity arbitrary sample point belonging subset 
validity inequalities subsets determined checking finitely sample points 
done effectively 
cad covers ir determine validity formula checking validity inequalities subset cad 
purpose choose sample point subset 
existential formula valid iff inequalities valid sample points 
cad choose sample points gamma gamma 
gamma valid sample points gamma validity gamma proved 
disadvantage complete approach known decision methods elementary algebra time consuming 
reason methods rarely automated termination proofs 
suggest incomplete efficient modification collins algorithm adapted specific problem termination proofs 
know trs termination proof requires polynomial interpretation non rational real coefficients restricted algorithm rational real numbers 
eases implementation algorithm considerably avoid disadvantage mentioned der generated rational polynomial interpretation directly printed user possible real numbers 
introduced execution time limits step collins algorithm 
time limit actual step exceeded algorithm results actual step computed far carry step 
main effect modifications sample points computed 
longer check validity inequalities subsets cad 
mentioned sufficient validity existential formula inequalities valid sample point 
check validity sample points may point inequalities valid possibly find 
proof valid formula fail method incomplete 
find sample point inequalities valid validity formula fact proved method remains sound 
collins algorithm decision method heuristic 
note contrast collins original algorithm modified algorithm sound non existential formulas 
modification termination criterion theorem just determine validity existential formula 
elimination rule variables differentiation rules diff diff absolutely necessary enable modified cad algorithm 
sum propose termination proof procedure 
construct set inequalities described theorem polynomial interpretation possibly variable coefficients 

check inequalities satisfied instantiation numbers 

try prove satisfiability modified version collins algorithm 
alternative approach automated generation right polynomial interpretation steinbach ste 
technique approximating polynomials monomials useful number variable coefficients small 
cases steinbach method may search instantiation satisfies inequalities resulting theorem 
implemented termination proof procedure common lisp sun sparc 
table illustrates performance examples 
second row contains execution time algorithm needs generate polynomial interpretation compatible trs row 
example time nested function symbols ste example sec 
endomorphism associativity bel bl sec 
running example ste middeldorp sec 
binomial coefficients ste example ste example sec 
distributivity associativity der sec 
table 
performance method 
efficient powerful easy implement algorithm termination proofs polynomial orderings semiautomatic fully automated way 
method implemented proved successful cf 
table 
jurgen caroline claus alexander stefan thomas jens martin christoph walther comments support 
proofs appendix give detailed proofs observations section concerning comparison method ones ste bl 
observation ste bl prove polynomial positive method 
proof sufficient prove conjecture proved method steinbach proved method 
conjecture conclude original observation due soundness steinbach method implies repeated application differentiation rules yields valid inequalities numbers 
abbreviates 
implementation available anonymous ftp 
informatik th darmstadt de pub termination 
ff kr gamma fi polynomial ff fi positive numbers 
inequality proved steinbach method inequalities featuring new variables satisfiable 
ff ir ir gamma fi fl instantiation non negative real numbers satisfying inequalities 
prove partial derivative respect partial derivative ff gamma kr gamma fi gamma steinbach method prove inequality inequalities featuring new variables satisfiable 
ff ir gamma gamma ir gamma gamma gamma fi consider instantiation gamma gamma fl implies fl non negative 
implies 
proved 
observation method prove positive xn exists methods ste bl prove positive xn proof polynomial 
proved application differentiation rules fi ff fi 
sufficiently large proved method steinbach 
observation worst case complexity systems ste bl exponential number monomials method exponential number variables 
proof proof complexity systems ste bl reader referred ste 
complexity method prove variate polynomial degree prove conjecture induction number variables constant conjecture obviously true 
induction step polynomial form pn gamma gamma pn polynomials containing gamma variables 
degree pn applying differentiation rules times eliminate obtain new gamma variate polynomials degree smaller equal induction hypothesis complexity proving nn gamma 
ait ait kaci 
algorithm finding minimal recursive path ordering 
rairo 
acm collins mccallum 
cylindrical algebraic decomposition siam journal computing 
bel bellegarde 
rewriting systems fp expressions reduce number sequences yield 
symposium lisp functional programming acm austin tx 
bl ben lescanne 
termination rewriting systems polynomial interpretations implementation 
science computer programming 
cl lescanne 
polynomial interpretations complexity algorithms 
proc 
th int 
conf 
automated deduction saratoga springs ny 
coh cohen 
decision procedures real adic fields 
comm 
pure applied math 
col collins 
quantifier elimination real closed fields cylindrical algebraic decomposition 
proc 
nd gi conf 
automata theory formal languages kaiserslautern germany 
df detlefs 
procedure automatically proving termination set rewrite rules proc 
st int 
conf 
rewriting techniques applications france 
der dershowitz 
note simplification orderings 
information processing letters 
der dershowitz 
orderings term rewriting systems 
theoretical computer science 
der dershowitz 
termination rewriting 
journal symbolic computation 
der dershowitz 
corrigendum termination rewriting 
journal symbolic computation 
dj dershowitz 
jouannaud 
rewrite systems 
handbook theoretical comp 
science van ed vol 
ch 
pp 
elsevier 
dh dershowitz 
topics termination 
proc 
th int 
conf 
rewriting techniques applications montreal canada 
gie giesl 
generating polynomial orderings termination proofs 
proc 
th int 
conf 
rewriting techniques applications kaiserslautern germany 
hl hofbauer 
termination proofs length derivations preliminary version 
proc 
rd int 
conf 
rewriting techniques applications chapel hill nc 
hon hong 
heuristic search strategies cylindrical algebraic decomposition 
proc 
st int 
conf 
artificial intelligence symbolic mathematical computing karlsruhe germany 
hl huet lankford 
uniform halting problem term rewriting systems 
rapport institut de recherche informatique automatique le chesnay france 
ho huet oppen 
equations rewrite rules survey 
formal language theory perspectives open problems book ed academic press pp 

kb knuth bendix 
simple word problems universal algebras 
computational problems algebra leech ed pergamon press pp 

lan lankford 
canonical algebraic simplification computational logic 
memo atp university texas austin tx 
lan lankford 
finite termination algorithm 
internal memo southwestern university georgetown tx 
lan lankford 
proving term rewriting systems noetherian 
technical report memo mtp louisiana tech 
univ la 
lau 
note polynomial interpretations 
bulletin european association theoretical computer science 
les lescanne 
divergence knuth bendix completion procedure termination orderings 
bulletin european association theoretical computer science 
mar martin 
choose weights knuth bendix ordering 
proc 
nd int 
conf 
rewriting techniques applications bordeaux france 
mid middeldorp 
sufficient condition termination direct sum term rewriting systems 
proc 
th annual symposium logic computer science pacific grove ca 
pla plaisted 
recursively defined ordering proving termination term rewriting systems 
report univ illinois urbana il 
ste steinbach 
extensions comparison simplification orderings 
proc 
rd int 
conf 
rewriting techniques applications chapel hill nc 
ste steinbach 
termination proofs rewriting systems heuristics generating polynomial orderings 
seki report sr univ kaiserslautern germany 
ste steinbach 
proving polynomials positive 
proc 
th conf 
foundations software technology theoretical computer science new delhi india 
ste steinbach 
simplification orderings putting test 
journal automated reasoning 
ste steinbach 
termination rewriting extensions comparison automatic generation simplification orderings 
doctoral dissertation univ kaiserslautern germany 
tar tarski 
decision method elementary algebra geometry 
university california press berkeley 

