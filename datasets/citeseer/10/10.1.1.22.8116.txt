priority encoding transmission andres johannes jeff edmonds michael luby madhu sudan introduce new method called priority encoding transmission sending messages lossy packet networks 
message transmitted user specifies priority value part message 
priorities system encodes message packets transmission sends possibly multiple receivers 
priority value part message determines fraction encoding packets sufficient recover part 
encoding packets lost enroute receiver able recover parts message sufficient fraction encoding packets received 
international computer science institute berkeley california 
research supported part national science foundation operating ncr computer science department swiss federal institute technology zurich switzerland 
research done international computer science institute berkeley california 
partially supported nsf operating ccr esprit br ec deutsche forschungsgemeinschaft dfg bl 
department computer science york university north york ontario canada 
research done international computer science institute berkeley california 
supported nsf postdoctoral fellowship canadian nserc postdoctoral fellowship 
international computer science institute berkeley california computer science division university california berkeley 
research supported part national science foundation operating ccr ncr united binational science foundation esprit br ec 
ibm thomas watson research center yorktown heights new york 
participated research visiting international computer science institute berkeley california 
set priorities message define natural quantity called girth priorities 
develop systems implementing set priorities total length encoding packets equal girth 
hand give information theoretic lower bound shows set priorities total length encoding packets girth 
system introduce optimal terms total encoding length 
immediate applications multi media high speed networks applications especially bursty sources multiple receivers heterogeneous capabilities 
implementations system show promise practical 
multi media applications long messages transmitted real time multiple network links 
message sent unit broken packets sent medium 
bit corruption may occur packets due transmission handled link link basis error correcting techniques 
assume packets indivisible units arrive intact arrive 
packets sent packets may arrive promptly arbitrary subsets packets may lost delayed point usefulness due global conditions network congestion buffer overflows causes 
call media property lossy media 
point time receiver wait packets longer recover original message possible packets received 
highly plausible packet loss described ordinary phenomena reasonably priced networks connect millions users spread world simultaneously running multitude high bandwidth real time applications 
furthermore packet losses spread uniformly network may vary different sites may fluctuate time 
argued analogous noise nemesis analog communication error nemesis digital communication loss nemesis packet wide area real time communication 
proposes general flexible method cope packet loss call priority encoding transmission pet 
user partitions message segments assigns segment priority value 
priority values segments encoded set packets 
priority value segment specifies fraction packets sufficient decode 
system guarantees segment decoded subset packets long fraction packets subset equal segment priority value 
networking community encoding systems allow recovery message subset packets encoding proposed example system reed solomon codes suggested mcauley empirically evaluated biersack 
similar encoding system proposed rabin 
uses essentially coding techniques 
systems allow priority level entire message 
shacham suggests methods sending prioritized messages networks 
basic idea partition message different priority levels different channel send level 
receiver attaches channels possible order priority channel capacity sender particular receiver 
method requires computation channel capacities sender receiver may impractical large networks capacities vary quickly congestion 
furthermore handle packet losses 
section describes potential applications pet system transmit multicast video images heterogeneous lossy networks 
section gives formal requirements deterministic probabilistic pet systems 
pet system described section 
review codes section main building blocks constructions 
section gives information theoretic lower bound proof total length encoding packets produced pet system 
section describes weak lower bound packet length pet system 
little effort systems efficient 
describes efficient implementation main building block pet system 
preliminary version appeared 
video multicasting information sender received users participating multicast session 
applications protocols retransmit missing information communicating multiple receivers 
consequently information rate determined worst case receiver 
difficulties protocols operate lossy networks 
priority encoding transmission especially suited implementing multicast protocols lossy networks 
example consider straightforward video conferencing multicast protocol jpeg mpeg 
turns quality displayed video degrades rapidly jpeg mpeg function number packets lost transmission degradation dramatic mpeg highly compressed jpeg 
jpeg mpeg apply discrete cosine transform video image produce called message wallace le gall 
allowing highly compressed representation image message nice property 
consider ordering information message lowest frequency coefficients come followed successively higher frequency coefficients 
nice property quality image reconstructed prefix ordered message improves gracefully function length prefix 
information message important 
pet system protect different parts message losses importance 
simpler way protect mpeg pet system prioritizing different types frames mpeg 
mpeg stream consists sequence called frames 
frame displayed independently frames 
frame needs information previous frame displayed correctly 
frame refers previous frame 
defines natural priority order different types frames frames important frames come frames 
frames important frames 
pet system protect frames losses frames turn protected frames 
approach taken 
results promising 
requirements pet system assume basic word size long implement encoding schemes describe 
schemes log total number words encoding sufficient 
practice normal computer word length support reasonable length encodings encodings words 
sequel information implicitly specified units words length stated 
deterministic pet systems system encoding decoding done deterministically 
guarantee certain fraction encoding received decoding certain pieces message successful 
definition pet system pet system message length packet size packets encoding length consists encoding function maps message length encoding total length consisting packets words 
ii decoding function maps sets packets words 
iii priority function ae maps mg interval 
guarantee system messages length mg able decode th message word ae fraction encoding packets 
convention assume packet unique identifier written header 
number bits necessary represent identifier considered part packet size 
convention justified packets usually contain identifier header information anyway case identifier typically small compared rest packet 
identifier decoding process identify portions encoding received 
assume loss generality priority function monotonically increasing ae ae delta delta delta ae ae thought fraction encoding packets needed recover words message 
implementations pet systems user specifies message length packet length priority function ae system computes number encoding packets implements encoding decoding procedures achieve guarantees specified definition 
important measure priority function 
definition girth priority function pet system ae function mapping mg interval 
girth ae girth ae mg ae girth pet system girth priority function 
pet system priority function ae ae fraction encoding determine th message word intuitively implies ae fraction encoding contain word information entire coding contain ae words information intuitively encoding contains girth ae mg ae words total message 
reasonable expect system possible total length encoding girth ae theorem shows intuition correct 
theorem priority function ae pet system priority function ae total encoding length girth ae formal proof theorem section 
shown theorem priority function ae pet system priority function ae closely approximates ae constructed total encoding length girth ae probabilistic pet systems model described section encoding decoding done randomized algorithms 
previous model decoding guarantee high probability 
mentioned section probabilistic pet systems probabilistic erasure resilient codes see section admit faster encoding decoding algorithms deterministic pet systems 
definition probabilistic pet system probabilistic pet system message length packet size packets encoding length failure probability random bits consists family encoding functions map message length encoding consisting packets words words 
ii family decoding functions map sets packets words 
iii priority function ae maps mg interval 
guarantee system messages length mg ae fraction encoding packets function encoding probability gamma function decodes th word message subset 
probability respect uniform distribution random string probabilistic model assumed common random string encoding decoding 
string selected encoding decoding deterministic 
stress failure probability particular distribution messages 
fixed value encoding decoding pair succeeds fails certain subsets packets independent message 
reasonable definition practice set packets lost independent contents depend identifiers arbitrary way 
priority function ae similar meaning deterministic model fraction ae encoding packets received may chance decoding function fails decode th message word 
section show theorem generalized probabilistic pet systems way 
theorem priority function ae probabilistic pet system priority function ae achieves failure probability total encoding length gamma delta girth ae pet system describe general method takes message length packet size priority function ae produces pet system new priority function ae closely approximates ae total length encoding packets girth ae method produce pet system works partitioning message blocks priority function ae partition implement pet system erasure resilient codes 
subsection describe erasure resilient codes 
second subsection assume partitioned message show implement pet system erasure resilient codes 
describe algorithm accepts description arbitrary priority function ae produces partitioned message 
erasure resilient codes erasure resilient code specified triple hm di 
encoding algorithm decoding algorithm 
encoding algorithm encodes word message word encoding property encodings different messages differ words 
note definition message uniquely distinguished message gamma words encoding 
decoding algorithms consider able uniquely efficiently recover gamma words 
impossible able recover message length words encoding case gamma 
furthermore larger value better recovery properties decoding 
best case gamma code called literature maximum distance separable mds code see example 
case message recovered portion encoding units words equal length message 
codes mds specified 
decoding algorithm needs indices words receives help decoding process 
erasure resilient resilient codes implement pet system requirement satisfied convention mentioned previously packet contains unique index 
implementation erasure resilient codes 
message viewed describing coefficients univariate polynomial degree gamma gf 
call polynomial th word code consists value polynomial evaluated field element gf 
degree gamma words indices words uniquely determine message coefficients recovered words interpolation 
need evaluate polynomial different points method requires standard evaluation interpolation algorithms code encoding decoding require quadratic number field operations 
discrete fourier transform reduced log field operations encoding log field operations decoding 
practical value methods doubtful 
practically efficient erasure resilient code described 
variant reed solomon codes socalled cauchy matrices see 
implementation takes quadratic time encoding decoding 
efficient support existing real time video applications implemented current workstations see 
code systematic unencoded message part encoding 
advantage decoding time depends unencoded message missing particular decoding trivial unencoded message part encoding missing 
different family codes called ffl mds codes slightly weaker erasure resilient properties mds code described described constructed alon alon luby 
codes requirement message recovered ffl words encoding 
ffl adjustable parameter establish tradeoff erasure resilient properties code efficiency encoding decoding procedures 
codes expander graphs constant ffl admit linear time encoding decoding 
practical value doubtful 
probabilistic codes ideas codes cauchy matrices ideas spielman show promise efficient deterministic codes practice 
mentioned section codes directly implement probabilistic pet systems faster encoding decoding algorithms 
erasure resilient codes cauchy matrices require word size satisfy gamma log gamma theorem section proves matching lower bound word size erasure resilient code 
block systems input parameters pet system message length packet length priority function ae 
step constructing pet system compute total number encoding packets partition message blocks 
step described subsection 
subsection show implement pet system information 
partition consists sequence positive integers hm message length blocks respective lengths describe implement pet system partition total number encoding packets 
pet system puts information block th word packet 
lemma partition hm pet system consisting encoding packets containing words priority value words message block proof lemma blocks length idea separate erasure resilient code blocks message 
th erasure resilient code encode code consisting words 
entire encoding consists packets size th packet consists concatenation th word code decoding works obvious way 
erasure resilient code block words block priority value 
words code suffice recover block word packet follows fraction packets sufficient recover priority value words block claimed 
system described packet needs contain identifier 
part packet include packet size convention stated section 
give examples block systems 
example example fraction packets needed recover message word linear index 
message length packet length log 
consecutive words message number packets 
note words recovered fraction gamma packets 
total encoding length log 
example suppose message length packet length partition message number packets 
note blocks recovered packets blocks packets remaining blocks packets 
total encoding length example words total message length fraction total encoding length 
partitioning message assume priority function ae message length specifies different priority levels smaller packet length 
big assumption practice ip packets transferring data reasonably high rates typically bytes long words assuming bytes word usually priority levels sufficient 
hff ff partition ae hae ae corresponding priority values blocks words block partition priority value ae goal produce partition number encoding packets directly implement pet system lemma 
basic idea refine original partition simple way take care technical details due round errors 
refinement procedure compute girth ae dg ff ae 
compute gammad 
dg compute fi dae ne 
dg ff dff fi pieces length fi 
lemma input partition hff ff corresponding priority values hae ae refinement procedure produces refined partition properties refined partition parts 
ii value satisfies gammad 
iii part refinement th part partition length ae 
proof lemma prove note number parts refined partition dg ff fi ff fi ff ae ff ae delta gammad definition follows dg ff fi gamma total number parts gamma 
proofs parts ii iii follow directly definitions 
theorem input message length packet length partition hff ff corresponding priority values hae ae efficient procedure produces pet system priority function ae encoding packets properties total encoding length girth ae gammad 
ii words message th block partition priority value ae ae proof theorem proof follows direct combination lemma lemma 
detail missing proof part ii example suppose packet length message total length partitioned priority levels described partition ki associated priority values girth priorities computed step refinement procedure total number packets computed step 
step computed lengths pieces number pieces respectively total pieces recall target value 
total length encoding girth original priorities 
priority values resulting pet system extremely close specified priorities 
note priority level amount redundancy possible recover message fraction encoding fraction middle priority values 
refinement procedure implemented refinement procedure described doesn necessarily produce refinement partition 
alleviates effect round offs moving partition refining partition described block partition associated particular part partition may padded words subsequent block partition 
adjusts number packets downwards words packet example words packet left unused total encoding length slightly girth new priorities 
probabilistic pet system theoretically efficient encoding decoding times constructed similar deterministic scheme described theoretically efficient ffl mds probabilistic erasure resilient codes place deterministic mds erasure resilient codes 
lower bound encoding length section proves theorem priority function ae pet system priority function ae total encoding length girth ae similar methods prove theorem priority function ae probabilistic pet system priority function ae failure probability total encoding length girth ae delta gamma 
proofs give alternatives original proofs results 
alternate proofs noga alon independently stephan 
follow basic outline original proofs elegant originals entropy measures geometric measures information 
theorem finite alphabets oe oe finite alphabets 
suppose deterministic scheme encodes possible vector hm mm vector oe suppose ae ae ae value correctly recovered values set ae coordinates log ae log joe follows logarithms base 
applications pet systems message encoding 
application delta delta delta possible encodings message words oe delta delta delta oe possible encodings packets ae hae ae priority values message words 
theorem immediately implies theorem general case message word packet allowed different number symbols 
prove theorem introducing ideas proof 
preliminaries lower bound random variable density function pr exp gamma log pr denotes binary entropy random variables values oe oe respectively hx subset ng denote random variable hx notations proposition proved case oe general case mentioned proved analogously 
proposition hx 
family subsets ng ng belongs members delta define gamma gamma gamma delta ng jqj xq lemma due han 
sake completeness short proof 
lemma random variable hx proof lemma proposition gamma gamma gamma gamma ng jqj ae jq gamma xq ng jqj gamma xq gamma gamma gamma deterministic lower bound proof proof theorem hm mm attain value theta theta equal probability 
put ae ng define log 
jg hm prove induction ae ae prove 
assuming holds prove 
define ae fix ng jqj eq jm eq jm gamma jm independent jm furthermore value eq determines eq jm eq jm eq jm equation equation equation follows eq jm eq jm gamma summing possible subsets dividing gamma gamma gamma delta conclude gamma gamma ae lemma ae ae ae induction hypothesis implies assertion completing proof induction step 
log joe assertion theorem follows 
probabilistic lower bound proof theorem finite alphabets oe oe finite alphabets 
random string takes possible values set equal probability 
suppose scheme uses encode possible vector hm mm vector oe suppose ae ae ae set ae coordinates value correctly recovered values coordinates value probability gamma respect gamma delta log ae log joe proof theorem proof analogous proof theorem quantities conditioned 
significant difference particular set packets indexed determines probability gamma opposed determining equation equation eq jm eq jm gamma gamma remainder proof identical loss gamma factor remains rest 
theorem immediately implies theorem general case message word packet allowed different number symbols 
lower bound size packet section lower bound word size erasure resilient codes 
bounds imply weak bounds packet size pet system 
theorem hn di erasure resilient code word length gamma gamma gamma equivalently words encoding determine message gamma gamma proof theorem gamma need prove second assertion theorem 
view word element set gamma elements view message element set message denote encoding 
function encoding consider suffix gammam consisting gamma words 
gamma suffixes wm possible messages set ae messages encoding suffix length gamma 
fixed gamma number messages number pairs messages hm gamma sum minimized case value gamma delta gamma gamma delta pairs messages 
messages distinguishable gamma words gamma words encodings gammam gammam gamma gamma previous calculations implies different messages encodings agree gamma gamma words 
encodings agree gamma words encodings messages agree words 
contradicts assumption theorem shows gammam gammam interesting special cases theorem 
code mds erasure resilient code theorem yields log gamma secondly assume system encoding length cm constant ffl efficiently encodable decodable codes parameters priority level constructed 
codes theorem gives lower bound word size approximately log gamma ffl bound asymptotically tight 
algebraic geometric codes achieve bounds see example 
notice cm theorem yield constant lower bounds 
particular pet system priority levels equal length level priority second priority strictly larger theorem provides constant lower bound packet size 
acknowledgment richard karp help original proofs section noga alon stephan pointing alternative proofs theorem theorem 
edmonds luby sudan priority encoding transmission proc 
th symposium foundations computer science focs pp 

luby application programmer interface pet internal icsi document 
alon probabilistic methods extremal finite set theory extremal problems finite sets eds bolyai society mathematical studies ad hungary 
alon edmonds luby linear time erasure codes nearly optimal recovery proc 
th symposium foundations computer science pp 

alon luby linear time erasure codes nearly optimal recovery submitted special issue 
alon spencer probabilistic method john wiley sons new york 
berlekamp algebraic coding theory mcgrawhill new york 
biersack performance evaluation forward error correction atm journal selected areas communication pp 

karp karpinski luby zuckerman xor erasure resilient coding scheme technical report tr international computer science institute berkeley 
chung frankl graham intersection theorems ordered sets graphs combinatorial theory ser 

han nonnegative entropy measures multivariate symmetric correlations infor 
contr 

hardy littlewood inequalities cambridge university press 
luby pet priority encoding transmission new robust efficient video broadcast technology video tape appear acm multimedia 
le gall mpeg video compression standard multimedia applications cacm vol 
april pp 

sloane theory error correcting codes north holland 
mcauley reliable broadband communication burst erasure correcting code proceedings sigcomm philadelphia 
rabin efficient dispersal information security load balancing fault tolerance acm vol 
april pp 

shacham multicast routing hierarchical data proceedings icc chicago 
spielman linear time encodable decodable error correcting codes proc 
th symposium theory computing stoc pp 

algebraic geometric codes kluwer academic publishers 
van lint coding theory springer verlag 
wallace jpeg picture compression standard cacm vol 
april pp 


