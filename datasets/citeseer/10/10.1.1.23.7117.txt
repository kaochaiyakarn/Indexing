notions computability higher types ii john longley april part series papers lon gave historical survey study notions higher type computability 
sequel lon undertake systematic exposition notions higher type computability showing existing ideas results fitted coherent framework 
part ii restrict attention notions computable functional objects type consider total partial functions objects type objects type notions picture easy grasp help fairly concrete naive definitions 
general picture embracing non functional notions computability requiring slightly sophisticated conceptual apparatus part iii 
section develop general theory type structures simple furnishes useful framework understanding particular notions computable functional interrelationships 
section survey various known notions hereditarily total computable functional framework section known notions hereditarily partial computable functional 
part consider total partial cases separately limitation treatment 
section go way rectifying considering total partial notions may related combined 
type structures basic definitions introduce simple general theory allow talk notions higher type computable functional 
definitions minor variations appear frequently literature 
definition weak partial type structures weak partial type structure weak pts set consists data type set elements type equipped canonical bijection partial application function usually omit type subscripts application operations write simply xy 
convention take application left associative 
definition partial type structures partial type structure pts weak pts elements satisfying kxy sxy xz yz appropriate types 
ii weak pts total weak type structure total function 
iii weak pts extensional fx gx extensional total type structures introduced hen called henkin models see mit section 
total type structures called combinatory type structures bar appendix weak total type structures called typed applicative structures mit 
weak pts called partial type frame cf 
mit section set partial functions ordinary function application 
easy see weak pts extensional isomorphic partial type frame 
significance conditions involving definition shown result essentially due curry cur 
weak pts write set typed formal expressions freely generated constants corresponding elements typed variables formal application 
formal expression variables vector elements types match write element denoted valuation defined 
proposition shows pts function representable formal expression representable element 
proposition combinatory completeness weak pts pts formal expression variables formal expression variables types match 
section primary interest total type structures 
type structures represent notions total computable functional type structures represent notions partial computable functional 
partial type structures mainly play auxiliary role means constructing interesting total type structures 
may come surprise intend partial type structures primary means representing notions partial computability argue notion computable functional embodied non total type structure equally embodied total type structure decision focus total type structures allows give somewhat unified treatment total partial cases 
examples show easy construct plentiful supply ptss examples cartesian closed category 
object may define interpretation simple types take hom take function induced evaluation morphism yields total type structure extensional pointed 
ii construction understood syntactically terms typed lambda calculi 
simply typed lambda calculus signature containing single ground type desired collection typed constants 
theory type respecting equivalence relation terms congruence respect operations contains equivalence ordinary call name equivalence 
take set closed terms type modulo induced juxtaposition terms 
yields total type structure called closed term model modulo interesting special cases may take godel system plotkin pcf see observational equivalence contexts 
case obtain total type structure system closed term ground type evaluates numeral 
case obtain total type structure pcf diverging terms ground type terms observationally equivalent 
may obtain variations theme considering di erent evaluation strategies lambda calculus 
discuss section 
iii recall partial combinatory algebra pca consists set equipped partial application operation containing elements satisfying kxy sxy xz yz leading example pca kleene model underlying set operation 
clearly may regard pca partial type structure simply categorical view proceeding examine closely relationship type structures certain categories 
give valuable additional perspective structures interest important conceptual advantages 
primarily applicative definition type structures paragraph may skimmed readers little interest category theory 
recall relaxation definition cartesian closed category definition category weakly cartesian closed weak ccc finite products objects chosen object morphism xy morphism necessarily unique xy id 
category terminal object equivalence relation homset fe ge 
obtain quotient category call pointed collapse isomorphic concrete category constituted image functor hom set 
easy see weak ccc need ordinary ccc evidently example immediately generalizes weak cccs object weak ccc gives rise total type structure 
clearly 
note weak ccc need extensional pointed 
somewhat conversely total type structure may build category follows 
objects finite tuples 
types 
morphisms 

functions representable sense element 


easy check type structure canonically pointed weak ccc extensional ordinary ccc 
abuse notation write object 
easy see type structure conversely weak ccc object isomorphic full subcategory objects generated finite products exponentials 
may identify total type structures pointed weak cccs objects generated single ground type object 
extent matter taste advantages 
opted definition type structure application composition taken fundamental particular notion morphism models wish consider see section naturally phrased terms 
categorical view significant conceptual advantage leads presentation independent characterization notions computability shall explain 
category object said retract morphisms de id may think saying may embedded terms datatypes elements may represented elements way morphisms may adequately represented morphisms note morphism ed idempotent idempotent determines isomorphism 
general say idempotent splits exist object morphisms de id ed thinking set theoretically imagine idempotent implicitly determines subset 
object corresponding world datatypes imagine datatype added extra cost completely determines elements datatype behave 
motivates known construction formally splitting idempotents category definition category category retracts envelope constructed follows objects pairs idempotent morphisms morphisms ghf note embeds fully faithfully idempotent splits 
think completion process throw datatypes trivially representable terms existing datatypes 
particular notion computable function types uniquely determines notion computable function types 
see applies categories built type structures 
fact start simpler category weak ccc defined type structure category objects simple types morphisms total functions representable element consider category retracts 
mild conditions ect certain boring basic operations representable may show little ort products simple types arise retracts simple types 
parsimonious start category objects just pure types mild conditions simple types arise retracts pure types 
proposition summarizes important properties cases interest proposition type structure containing element properties 
pointed weak ccc ordinary ccc extensional 
equipped lifting monad object just global element factor little ort shown hypotheses closed formation positive inductive types dependent types 
skeleton fleshed construction yield abundant world datatypes rich support interesting type theoretic constructs 
clear various ways category considered equivalence categories gives presentation independent way embodying notion computable operation 
firstly sensitive inessential details definition type structure restrict attention pure types include product types give separate ground type booleans richer language types including inductive dependent types 
superficial di erences washed pass category retracts giving type structure definition kind precisely equivalent giving type structure definition 
way independent presentation details specifically partial functions operations 
declared notions partial computable functional represented total type structures arbitrary partial type structures partial type structures categorical perspective shows possibilities fact equivalent total type structure equivalent partial type structure sense yield category retracts similarly combinations 
precise adopt definitions demarcate classes structures talking standard tts call name type structure extensional tts containing element satisfying conditions proposition 
standard pts call value type structure extensional pts containing element satisfying conditions proposition element eval type eval eval 
standard pts lazy type structure extensional pts containing element satisfying conditions proposition element eval properties 
furthermore call category standard category partial functionals pointed cartesian closed contains splittings idempotents contains distinguished object objects retracts pointed ccc idempotents split contains distinguished object equipped bijection hom objects retracts powers contains morphism action global elements modulo bijection 
show standard category partial functionals may endowed lifting monad property mentioned proposition takes certain retract 
theorem canonical bijective correspondences classes structures standard isomorphism 
standard ptss isomorphism 
standard ptss isomorphism 
standard categories partial functionals equivalence categories 
alternative terminology call name call value lazy type structures arises connection evaluation strategies lambda calculi programming languages known computer scientists names 
instance language pcf considered flavours original call name version plo call value version sf lazy version br 
term models languages naturally give rise call name call value lazy type structures respectively 
general form call name lambda calculi indicated example ii 
explicitly define call value lazy variants purpose doing point equivalent purposes 
case pcf relationship variants studied sie rie fully lon chapter syntactic equivalence result comparable theorem proved detail 
view advocating notion computable functional corresponding standard category real underlying object interest di erent definitions type structure merely represent di erent windows object 
point view say category mathematical incarnation corresponding notion computable functional way classifying model logical theory incarnation theory 
usual point view cuts ways 
hand really interested underlying object particular presentation hand envelope construction obviously trivial interesting information standard category clearly corresponding type structure may just study type structure technically convenient 
shall henceforth type structures understanding really just economical concrete presentations underlying notions computability categorical models conceptually faithful embodiment 
notion standard category partial functionals quite canonical ways building categorical model class partial functions 
intuitively notion analogous category pointed sets total functions consider analogues ordinary sets partial functions pointed sets partial functions 
relationships categories understood recovered 
conceptual distance intuitively smaller di erent notions type structure categories serve equally role underlying mathematical object 
ective type structures clearly type structures defined may consist computable noncomputable objects 
formalize idea type structure consisting entirely computable objects propose definition 
definition ective type structures ective structure weak pts family relations satisfying application tracked binary partial recursive function fx fx 
ective weak pts weak pts equipped ective structure 
ii ective structures ectively equivalent unary partial recursive functions 

idea implicit reasonable notion computable object ultimately encoded natural numbers computable operations corresponding partial recursive functions 
course generalize definition ectivity ways instance relativize arbitrary pca place intuition correspond genuine notion ectivity pca turn admitted encoding 
ideas explored technical level part iii 
raise interesting philosophical question believe reasonable forms computation ultimately representable terms natural numbers 
put way think natural numbers ultimate atoms information 
intend discuss question merely draw attention presupposition underlying definitions 
case type structures typically want restrict attention ective structures behave reasonably ground type definition ective weak pts weak pts equipped ective structure 
ii ective weak pts weak pts exists unary partial recursive function undefined 
note passing terms correspondences theorem standard tts ective corresponding standard pts resp 
standard pts ective 
definitions allow talk type structures consisting entirely computable objects acting computable objects 
interested classes computable functions domain definition includes non computable functions 
may take account means obvious notion substructure definition substructure suppose weak ptss 
say substructure thesis reasonable notion higher type computable functional embodied ective pts occurring substructure possibly non ective extensional pts gives domains computable functionals gives computable functionals may happen 
thesis rests various assumptions expect appropriate combinators computable expect computable objects defined 
condition extensional reflects idea higher type objects functions 
notice follow extensional obvious reason insist true important examples 
note correspondence theorem ective substructures call name structures correspond precisely ective substructures call value lazy structures fact correspond effectively subcategories standard categories partial functionals certain sense 
view counts notion higher type computable functional partial case decision focus call name structures 
constructions type structures mention general constructions obtaining new ptss old ones 
constructions recur frequently come consider concrete examples 
construction gives canonical way picking total substructures arbitrary weak pts 
definition total hull weak pts subset may define substructure follows fx fx 
call application operations inherited total hull respect call simply total hull essentially total hull just corresponds unary logical relation determined subset see sta 
clearly total hull weak total type structure pts total hull total type structure necessarily contains combinators easy see total hull maximal total substructures 
emphasize general need unique maximal substructure may total substructures contained total hull 
example 
refer naturally arising examples 
intuitively may think definition giving short sighted greedy strategy picking total substructure sense type level take elements possible substructure 
total substructures may arise sacrificing total elements type level allow oneself total elements higher type level 
second construction gives canonical way turning weak pts extensional 
recall partial equivalence relation set simply symmetric transitive relation equivalence relation subset write set equivalence classes equivalence class containing element definition extensional collapse weak pts partial equivalence relation may define xe fe xe gy 
substructure determined xe 
call pre extensional hull say pre extensional just equality relation may call simply pre extensional hull say pre extensional 
ii situation may obtain total extensional weak type structure defining application induced call extensional collapse gandy hull 
pre extensional hull binary logical relation determined 
definition pts pre extensional hull maximal substructure necessarily unique 
refer natural counterexample 
remarks total hull construction apply equally extensional collapse construction defines greedy strategy obtaining particular extensional type structure type structure 
note ective structure induces ective structure total hull pre extensional hull extensional collapse obvious way 
constructions may combined follows weak pts subset may take total hull extensional collapse 
refer modified extensional collapse 
set explicitly mentioned assumed 
explicitly mentioned assumed equality clearly total total hull clearly 
case extensional modified extensional collapses coincide 
reason generally collapses coincide easy fabricate artificial counterexamples interesting hold natural examples non trivial reasons see example refer bezem example 
examples show collapse constructions arise naturally setting known categories 
general formulation idea part iii 
examples pers partial combinatory algebras partial combinatory algebra category defined follows objects pers morphisms functions tracked element rx 
category enjoys properties see lon chapter 
particular cartesian closed exponential defined track morphism clearly type structure precisely extensional collapse viewed pts 
follows isomorphic objects extensional collapses isomorphic 
interested type structures pers play role particular pca standard coding due curry natural numbers elements defined si ki kn 
instances nn shown natural number object 
details coding essential natural number object type structures coincide 
similar uniform method known constructing suitable arbitrary pca 
individual cases suitable object may obtained applying lifting construction specific pca question 
see examples 
ii likewise category modified pers pca defined follows objects pairs morphisms functions tracked strong sense rx rx category cartesian closed exponential pair defined yx rf track morphism strong sense 
clearly object type structure precisely modified extensional collapse 
see part iii categories defined important connection realizability interpretations logic provides model theoretic setting kleene constructions described exhaust possible general ways picking interesting substructures structures 
wish stress idea particular cases interesting substructures considered 
possibility neglected instance people refer loosely extensional part certain type structure really mean just particular substructure picked extensional collapse construction 
important question ask connection special distinguished extensional collapse type structure fact extensional collapse equivalently corresponds type structure arising cartesian closed category pers 
levelwise maximality unifying concept 
stability robustness total hull extensional collapse 
general theorem saying cbn cbv extensional collapses agree 
want generalize theorem non extensional structures 
su cient conditions tss ext collapse see part iii 
morphisms type structures natural ask di erent ptss related 
particular notion morphism ptss corresponds way simulating allow say notion computability embodied sense powerful embodied purposes prefer notion morphism general possible able embrace di erent kinds relationships ptss possible unified framework able state certain results strong form possible see ref 
anti church theses 
possible candidates definition morphism instance consider algebraic homomorphisms families functions commuting application operations logical relations families total relations fx gy 
notions turn unduly restrictive 
definition shall adopt fact subsumes possibilities style standard realizability corresponding model kreisel style modified realizability 
reason terminology modified extensional collapse 
experts note definition quite right omitted mention right set needed purposes 
definition morphisms ptss weak ptss 
morphism family total relations fx gy fx gy 
weak ptss morphism morphism id motivate convention re definedness 
hang forgotten exactly need 
similar situation condition 
examples morphisms showing ways arise 

total hulls extensional collapses ective substructure inclusions interpretations syntactic calculi semantic structures mention theories translations implementations syntactic calculus 
morphisms clearly compose category weak ptss morphisms full subcategories pts tts partial total type structures respectively 
likewise set category weak ptss morphisms full subcategories interesting special classes morphisms substructure inclusions quotient maps 
morphism quotient map single valued surjective quotient maps may characterized precisely morphisms right inverse 
substructure quotient obtain morphism occurs instance extensional collapse case morphism logical relation 
conversely discrete morphism implies may regard weak ts evident inclusion quotient map note constructions section highly respect notion morphism morphisms general give rise morphisms total hulls extensional collapses 
extensional collapses logical relations closed composition reason favouring definition morphism concept logical relation 
fact morphisms correspond pre logical relations studied hs reader may find details arguments advantages pre logical logical relations 
simple facts proposition suppose extensional pts morphism discrete 
ii morphism identity 
extensional ptss write exists morphism view part ii proposition relation partial order 
write resp 
poset extensional partial resp 
total type structures sub poset partial total type structures admit ective structure 
fact notions computability partially ordered way special functional notions reason functional notions computability deserve special treatment 
idea thinking posets help understand important notions computability related special 
total functionals framework total type structures survey natural classes hereditarily total functionals finite type 
intention collect systematic fashion known interesting notions total computability discovered date 
remains course possibility equally compelling natural notions await discovery fact shall see attempts define class total computable functionals converge notions constitutes kind evidence known type structures cover really important notions computability 
case survey range characterizations presentations type structure question consider intrinsic properties type structure 
total continuous functionals important class functionals embodying ective notion computability occupies central position interesting total type structures kleene kreisel total continuous functionals 
relevance type structure ective computability clearer sections time motivated evident connections ectivity continuity see lon section seek total type structure notion continuity halfway house way type structures ectivity 
detailed study type structure characterizations proofs main results refer reader hyl 
survey 
characterizations continuous functionals ways characterize type structure continuous functionals providing ample evidence canonical status 
review important characterizations 
spaces cartesian closed categories spaces equipped kind convergence structure spaces filter spaces certain kinds topological space arises simply type structure space natural numbers 
account characterizations drawn largely hyl 
simplest category category spaces studied kur 
space set equipped relation read tends countably infinite sequences 
elements satisfying axioms details important finitely subsequence tends tend subsequence subsequence tends particular example space natural numbers finitely function spaces continuous category lsp spaces continuous functions cartesian closed exponential space continuous functions morphisms lsp clearly correspond elements space define underlying sets spaces constitute type structure topological characterizations interesting category topological spaces arises naturally reflective subcategory lsp 
space natural topology open sets sets eventually topological spaces arise spaces way called sequential spaces 
sequential space may recover convergence relation eventually inside open set containing sequential spaces may characterized topologically spaces open sequentially open sets coincide 
easy check category seq sequential spaces continuous maps sense ordinary topology full reflective subcategory lsp cartesian closed 
turns type structure discrete topology seq coincides inclusion seq lsp preserves relevant exponentials see hyl section 
gives purely topological construction fact cartesian closed categories topological spaces give rise way known category compactly generated hausdor spaces 
fact mentioned hyl proved chapter 
characterizations su er limitation topology countable basis 
shown hyl limitation applies topological characterization 
means characterizations readily amenable constructive treatment computability 
called spaces 
filter spaces direction extend lsp larger cartesian closed category fil filter spaces 
filter set non empty family non empty subsets upward closed closed binary intersections 
filter space set collection filters principal 
informally filter gives way converging means family subsets representing approximations continuous map filter spaces function preserves convergent families filter generated 
straightforward check resulting category fil cartesian closed 
filter space contains principal turns type structure fil isomorphic fact inclusion functor lsp fil preserves relevant exponentials 
details hyl 
significant advantage filter space approach topological filter spaces question countable bases countable family subsets completely determine filter structure 
exploit giving construction section 
kreisel definition neighbourhoods give kreisel construction notion continuity neighbourhoods 
kreisel original definition kre neighbourhoods constructed syntactically formal expressions points obtained essentially limits shrinking sequences neighbourhoods 
give slight recasting kreisel definition due hyland hyl pages trivially equivalent kre 
definition follow intensional flavour define class intensional objects obtain type structure functionals represented realized objects 
define non extensional type structure set equipped countable base topology consider poset usual ordering 
set singletons 
types set functions anti monotone 

sets 

consist finite intersections sets form 
application defined obvious way 
unique exists 
may obtain extensional collapse respect equality fact easy show pre extensional quotient definition equivalent proved hyl 
realizability give characterizations type structure realized certain continuous partial combinatory algebras indicated example scott plotkin kleene second model pcas reappear 
realizability ershov berger 
kleene definition associates give kleene original definition kle 
intensional objects involved known associates modulo essentially realizers drawn pca known kleene second model introduced kv 
observation really explicit literature approach definition elements total functions step regard element encoding partial continuous operator follows 
fix coding finite sequences natural numbers natural numbers define 

may consider successively values find smallest number set 
exists undefined 

signals request values 
signals rmation formally may define 
clear continuous function arises infinitely may exploit idea define partial application operation write function defined 
define right hand side total take undefined 
routine tedious check resulting structure partial combinatory algebra 
choose reasonable representation natural numbers example take equality relation subset 
defines natural number object isomorphic course su ce 
extensional collapse 
note kleene original definition explicitly involve partial equivalence relations corresponding types curious feature definition logical terms definedness application property property 
curious turns interesting useful object despite 
defined follows 
sets pure types defined application operations defined obvious way 
existence evident isomorphisms easy see agrees definition 
surprisingly modified extensional collapse yields characterization aware proof fact literature 
bezem 
characterizations characterization type structure sense non standard analysis 
characterizations extensional collapses important type structures mentioned section 
summary virtually natural attempt build total type structure notion continuity leads type structure inclined assert full continuous total type structure properties continuous functionals recursive submodel seen type structure purely notion continuity ectivity involved 
inspired various characterizations section discuss type structure naturally arising ective submodel section discuss natural ective analogue characterizations properties recursive analogue characterizations properties failure church thesis incompatibility 
kleene computability written 
definition funny contravariance fact 
non computability fan functional tait 
normann finite basis 
bit odd 
partial functionals written 
relevant paragraphs borrowed lon essentially di erent finite type structures occur widely nature comes full continuous ective flavour 
type structures number di erent characterizations claim mathematically natural objects study 
full type structures partial continuous functionals finite type structure arising familiar scott domain model sco 
hereditarily sequential functionals nic coincides finite type structure arising fully game models pcf due abramsky hyland ajm ho 
strongly stable functionals bucciarelli ehrhard coincide sequentially realizable functionals longley lon 
intuitively type structure hereditarily sequential functionals smaller precisely partial continuous sequentially realizable hereditarily sequential type structures natural ective analogue 
remarkably case find programming language decidable set terms ective operational semantics defines precisely functionals ective type structure pcf pcf pcf pcf extension pcf parallel exists operators studied plo 
functional see lon 
characterize ective type structures closed term models programming languages 
type structures known examples pcas giving rise partial continuous functionals arise continuous pcas scott graph model sco models sco plotkin universal domain plo kleene second model kv 
ective partial continuous functionals corresponding pcf arise ective analogues pcas kleene model kle 
hereditarily sequential functionals arise various pcas constructed abramsky see lon 
pcas obtained solving various recursive domain equations known fully models pcf categories games sequential domains see 
ective hereditarily sequential functionals pcf definable functionals arise ective analogues term models certain impure calculi see 
longley phoa conjecture asserts type structure arises pure term model semi sensible theory see lon 
sequentially realizable sr functionals arise van oosten combinatory algebra oos combinatory algebra constructed abramsky see lon 
arise combinatory algebra described lon 
ective sr functionals arise ective analogues 
theorem anti church thesis partial functionals ective partial continuous functionals corresponding pcf represent maximal element furthermore morphism ective sr functionals pcf functionals 
contain top element 
explain implications fully lines lon 
relating partial total functionals relating type structures total notions collapses partial notions demonstrates orthogonality issues 
vice versa getting pcf system statman 
mixing total partial function types ajm abramsky jagadeesan malacaria 
full abstraction pcf 
information computation 
bar barendregt 
lambda calculus syntax semantics 
northholland revised edition 
bucciarelli ehrhard 
sequentiality strong stability 
proc 
th annual symposium logic computer science pages 
ieee 
br bloom riecke 
lcf lifted 
proc 
conf 
algebraic methodology software technology 
dept comp 
sci university iowa 
cur curry 
grundlagen der logik 
amer 
math 
hen henkin 
completeness theory types 
journal symbolic logic 
ho hyland 
ong 
full abstraction pcf ii iii 
information computation 
hs honsell sannella 
pre logical relations 
proc 
computer science logic csl volume lecture notes computer science pages 
springer 
hyl hyland 
recursion theory countable functionals 
phd thesis university oxford 
hyl hyland 
filter spaces continuous functionals 
ann 
math 
logic 
kle kleene 
interpretation intuitionistic number theory 
symb 
logic 
kle kleene 
countable functionals 
heyting editor constructivity mathematics proceedings colloquium held amsterdam pages 
north holland 
kre kreisel 
interpretation analysis means functionals finite type 
heyting editor constructivity mathematics proceedings colloquium held amsterdam pages 
north holland 
kur kuratowski 
topologie vol 
warsaw 
kv kleene 
foundations intuitionistic mathematics 
north holland 
lon longley 
realizability toposes language semantics 
phd thesis university edinburgh 
available ecs lfcs 
lon longley 
realizability models sequential computation 
preparation incomplete draft available author home page 
lon longley 
sequentially realizable functionals 
technical report department computer science university edinburgh 
appear annals pure applied logic 
lon longley 
matching typed untyped realizability 
birkedal van oosten rosolini scott editors proc 
workshop realizability trento 
published electronic notes theoretical computer science elsevier 
available www elsevier nl locate entcs volume html 
lon longley 
notions computability higher types ii 
pages approx 
appear proc 
logic colloquium 
draft available www dcs ed ac uk home 
lon longley 
notions computability higher types iii 
pages approx preparation 
draft available www dcs ed ac uk home 
mit mitchell 
foundations programming languages 
mit press 
rohr streicher 
full abstraction universality realisability 
proc 
th annual ieee symposium logic computer science 
ieee 
nic 
hereditarily sequential functionals 
proc 
rd symposium logical foundations computer science lecture notes computer science pages 
springer 
normann 
recursion countable functionals volume lecture notes mathematics 
springer 
normann 
characterising continuous functionals 
journal symbolic logic 
normann 
continuous functionals 
gri editor handbook computability theory pages 
north holland 
oos van oosten 
combinatory algebra sequential functionals finite type 
technical report university utrecht 
appear proc 
logic colloquium leeds 
plo plotkin 
lcf considered programming language 
theoretical computer science 
plo plotkin 
universal domain 
journal computer system sciences 
rie riecke 
fully translations functional languages 
math 
struct 
comp 
science 
sco scott 
continuous lattices 
lawvere editor toposes algebraic geometry logic 
springer 
sco scott 
data types lattices 
siam journal computing 
sco scott 
type theoretical alternative iswim cuch 
theoretical computer science 
written widely circulated unpublished form 
sf sitaram felleisen 
reasoning continuations ii full abstraction models control 
conference lisp functional programming 
acm 
sie 
relating full abstraction results di erent programming languages 
proc 
th conference foundations software technology theoretical computer science bangalore 
springer lncs 
sta statman 
logical relations typed calculus 
information control 

