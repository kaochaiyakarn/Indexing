application requirements qos negotiation multimedia systems thomas knut vera goebel university oslo center technology box goebel quality service qos concept central importance context communication protocols multimedia systems 
generally multimedia systems comprise functional units networks protocols data management systems applications human computer interfaces operating systems 
obviously entire system influencing qos visible human users human computer interface 
respect application requirements qos negotiation complex system partitioned parts user hci application determine application requirements communication system data management system operating system realize certain qos 
propose specification method application requirements vector maximum problem vmp 
specification enables platform related part multimedia system decide resource usage 
applications consider available resources independent particular environments resource utilization optimized 
commonly accepted quality service qos concept central importance multimedia systems commonly accepted definition qos 
understanding qos multimedia systems qos definition vogel quality service represents set quantitative qualitative characteristics distributed multimedia system necessary achieve required functionality application 
communications point view main concern support various qos requirements new protocols 
years recognized protocols able offer guarantees qos placed top networks support qos guarantees atm 
consequently research qos issues extended additionally consider operating system support multimedia protocols example 
respect qos multimedia systems necessary consider communication system operating system multimedia systems manipulate transmit multimedia data 
additionally store retrieve multimedia data proper way user 
general identify functional units multimedia systems networks connect endsystems protocols handled endsystems data management systems comprise repository functions store retrieve change persistent data file system database system applications written solve certain problems human computer interfaces users multimedia systems communicate operating systems elements multimedia systems networks 
human users recognize qos hci 
naturally human users desire qos multimedia system satisfies needs preferences 
user needs preferences form application characteristics called application requirements 
application requirements related qos negotiation performed parts multimedia systems application related part including users applications determine application requirements request corresponding qos multimedia system 
published second workshop protocols multimedia systems salzburg austria october platform related part representing collection generic functional units including networks protocols data management systems operating systems 
functional units realize qos mapping requirements internal functionality reserving resources cpu time main memory disk bandwidth network bandwidth 
application requirements qos negotiation play important role multimedia systems glue complex different worlds 
design implementation application related part reflect results requirements engineering computer supported collaborative cscw user modeling cognitive psychology ergonomics sociology 
contrast application related part platform related part consists collection systems 
communication systems networks protocols data management systems operating systems generic units platform various applications 
obviously qos negotiation application platform related part lead qos contract characterized minimal distance application requirements negotiated qos 
hand users able specify requirements contradicting high quality low costs 
hand extend application requirements fulfilled mainly depends available resources multimedia system 
functional units platform related part know available resources 
order properly glue parts specification method application requirements approach qos negotiation needed support specification users applications able specify requirements user friendly application related terms video frame rate system related terms megabit second 
furthermore possible explicitly express contradicting requirements specification method 
abstraction application related part know care internals platform related part available resources 
optimization qos negotiation directly lead contract optimal resource utilization optimal user support 
study relationship single user multimedia system respectively application related platform related part respect application requirements qos negotiation 
aspects groups users outside scope 
different application requirements group members collaborative applications combined common application requirement 
furthermore distributional services television broadcasting receiver perform qos negotiation system 
situations specification method qos negotiation approach applied 
complex group scenarios qos negotiation approach extended 
remainder structured follows chapter gives overview qos issues 
chapter analyze application requirements qos negotiation respect entire multimedia systems 
exemplified discussion application requirements chapter 
chapter consider problem qos negotiation decision making problem propose specification method application requirements approach qos negotiation supports necessary specification abstraction optimization 
concluding chapter gives summary outlines implications multimedia protocols 
overview qos issues application requirements qos negotiation seen isolated qos issues qos specification semantics qos realize enforce qos 
sections give brief overview issues 
qos specification qos usually expressed set pairs called tuples consist parameter value 
generally approaches quantify qos parameters 
service user specifies target value target range qos parameter 
application layer qos parameters discussed transport layer qos parameters discussed 
concept streams cinema 
stream type determines parameters values qos specification 
values list discrete values value range 
stream type hierarchy allows definition stream types parameters different sets possible values 
approach application classes facilitate qos specification 
define qos classes automatically mapped qos parameters 
classes divide application requirements reliable unreliable time dependent time independent aspects 
application level qos specifications take form channel types encapsulate qos specifications commonly parameters 
application classes isochronous burst low delay introduced 
qos negotiation goal qos negotiation agree qos parameters satisfy service user service provider 
depending scheme negotiation qos involves entities calling service user service provider called service user 
basic negotiation schemes distinguished triangular negotiation involves calling service user service provider called service user 
calling service user passes qos specification service provider may downgrade values qos parameters 
resulting qos specification passed called service user turn may weaken qos parameters 
final qos specification returned calling service user 
service provider called service user may reject request 
scheme subdivided kinds negotiations information exchange calling user introduces request primitive value qos parameter 
example osi transport protocol tp uses scheme 
bounded target calling user introduces values request primitive target lowest quality acceptable 
experimental internet stream protocol st ii uses scheme 
contractual value calling user introduces values request primitive minimum requested value bound strengthening 
bilateral negotiation takes place service users 
service provider allowed change qos specification 
service provider called service user may reject request 
unilateral negotiation calling service user proposes qos specification changed service provider called service user 
unilateral negotiation represents take leave approach request may accepted rejected 
connection request rejected common agreement qos 
service provider called service user provide reason rejection additional information calling service user request modified resubmitted higher probability success cancelled 
information considered having limited validity time amount available resources changing quickly 
completely reliable selecting particular qos 
consequently multiple information exchanges service user service provider necessary find satisfying qos supported 
furthermore qos contract changed sessions lifetime 
example qos requirement may change application session due changed user requirements fact negotiated parameters maintained due network congestion 
general approach qos negotiation renegotiation discussed 
semantics qos degree commitment semantics qos parameters degree commitment service provider 
generally extreme qos semantics best effort qos represent weakest degree commitment 
parties best efforts meet requested qos 
guarantee qos fact provided require monitoring remedial action requested qos achieved 
words service provider obligation maintain negotiated qos 
example osi transport protocol tp supports best effort qos 
guaranteed qos requested qos guaranteed service provider supported resource allocation 
monitoring required 
example experimental internet stream protocol st ii supports guaranteed qos 
approaches introduce new qos semantics degree commitment service provider best effort guaranteed qos 
quality service architecture qos refers qos semantic best fit qos osi defines compulsory qos threshold qos follows compulsory qos requested qos guaranteed service provider supported resource allocation monitoring 
service provider offer service maintained target operating level aborts connection requested qos provided 
threshold qos service provider notifies service user discovers achieve selected values aborting connection 
qos realization enforcement specifying requirements service users qos negotiation service provider perform specific tasks order realize enforce requested qos 
historical view approaches split phases support definition goal communication service error free delivery data 
osi model qos parameters transit delay throughput defined 
monitoring defined best effort semantics 
monitoring stronger semantics compulsory qos threshold qos osi guaranteed qos monitoring required 
chen describe service monitoring atm networks measure qos experienced atm service users 
simoni identify qos monitoring network management task define task levels qos management 
error failure related monitoring links discussed 
reservation network resources guarantee specific qos connection resources reserved network 
new standards high speed networks fddi ii atm offer support resource reservation 
network layer internet stream protocol st ii resource reservation protocol rsvp probably prominent protocols reserve resources called flows network connections 
adaptation protocol functionality insight protocols represent performance bottlenecks communications traditional protocols able support various multimedia requirements resulted proposals flexible protocols 
main goal flexible approaches increase protocol performance decreasing complexity offering requested qos 
flexible lightweight transport protocols tp enable transport user select retransmission strategy 
systems hops virtual protocols allow combine fine granular building blocks protocols comprise functionality osi layers 
adaptive da additionally support mapping application requirements protocol functionality 
operating system support endsystems cpu endsystem represents limited resource multimedia protocols qos guarantees require reservation 
scheduling issues meet protocol processing requirements discussed 
generally reservation cpu supported realtime operating systems 
coulson describe extensions micro kernel chorus support continous media 
contrast gopalakrishnan integrate realtime signals linux operating system enforce qos 
general consideration qos negotiation multimedia systems qos support multimedia systems focuses communication systems operating systems 
necessary consider communication systems operating systems multimedia systems manipulate transmit multimedia data 
additionally store retrieve multimedia data proper way user 
general identify functional units multimedia systems networks connect endsystems protocols handled endsystems data management systems comprise repository functions store retrieve change persistent data file system database system applications written solve certain problems human computer interfaces human users multimedia systems communicate operating systems elements networks 
particularly importance data management systems applications user interfaces users reflected current qos approaches 
illustrates layered architecture sample multimedia system video demand vod application 
video data transferred remote data management system manages disk array protocols network application hci 
obviously entire system represents chain starting disk array stores video data hci presents video data user 
cooperation elements establishes qos recognized human user hci 
qos considerations include elements multimedia systems 
application requirements determined application requirements needs preferences particular user 
consequently application requirements related qos negotiation performed parts multimedia systems application related part including users applications platform related part including networks protocols data management system operating systems 
application related part applications implemented unit 
application programs interfaces decoupled 
allows change interfaces adapt user needs altering application 
application requirements determined orthogonal aspects service class application conversational service direct interactive realtime communication partners messaging services indirect communication intermediate storage facilities retrieval services individual requests information centers distribution services communication services television distribution collection services collecting information distributed monitors communication 
media types handled application user plain text graphics images structured documents animations audio video 
precisely notion media type gibbs derived notion data type programming languages 
media types data types specify representation data structure set operations 
example media type digital video includes representation aspects sampling rate sample size quantization frame rate 
user specific requirements relevant aspects user include level expertise current task perspective role value system degree nature due fatigue illness preferences concerning mode communication 
identification user requirements represents biggest problems 
area requirements engineering problems requirements capture analysis known 
familiar problems include layered architecture sample multimedia system dms eep hni os dms eep hni app hci os network hci human computer interface app application dms data management system eep protocols hni host network interface os operating system multimedia system offers qos user recognizes qos user know requirements user knows requirements articulate individual users representative relevant users 
furthermore users contradicting requirements high quality low costs know resolve 
specification method application requirements properties necessary support high level application related qos parameters application classes media type characteristics allow easy expression probably contradicting requirements allow platform related part map application requirements internal functionality resources optimize resource utility 
platform related part qos issues networks protocols operating systems discussed publications see chapter 
indications relations qos data management systems 
relevance data management system aspects qos multimedia systems broadly recognized 
focus discussion section influence data management systems qos 
term data management system describes collection mechanisms store retrieve change persistent data 
data management systems simple file systems complex database systems 
generally data management mechanisms functional unit platform related part 
example buffer management host network interfaces protocols file systems operating systems 
multimedia systems identify functional unit responsible handling persistent data 
simplest case data management system running single system uses resources cpu data management processes running local cpu compete processes communication processes application processes system processes cpu time 
primary storage results read requests buffered main memory system copied address space application process 
furthermore pages cached main memory reduce response times read requests 
certain area main memory reserved data management data management system assigns memory competing data management processes 
data management processes compete processes main memory 
secondary storage mainly hard disks secondary storage 
disk space represents limited resource write operations 
disk rotation speed head position time determine minimal access times read write operations 
theoretical maximal throughput transfer rate reached multiple processes simultaneously access disk 
new operation involves positioning read write heads data transferred disk time 
addition characteristics availability hardware resources qos influenced software resources respectively data management mechanisms 
data management mechanisms include data modeling integrity maintenance change management query processing physical object storage management transaction workflow management 
detailed discussion relations data management mechanisms qos 
table summarizes data management aspects influence qos parameters throughput delay delay jitter reliability 
traditionally application requirements mainly considered data management systems design implementation phase 
realtime database systems associate timing constraints operational aspects query execution transaction processing 
allow application processes define deadlines operations 
missing hard transaction deadlines disastrous happen soft firm transaction deadlines may missed results interest application user 
terms qos semantics tradi qos parameter data management mechanisms throughput transaction management storage management data modeling query optimization delay transaction management storage management data modeling query optimization delay jitter temporal data modeling storage management transaction management reliability transaction management recovery concurrency control mechanisms table relationships qos parameter data management mechanisms tional transactions support best effort qos hard transaction deadlines support guaranteed qos degree commitment soft firm transaction deadlines similar threshold qos 
usage application requirements depend section depend distance education people different needs project center technology university oslo illustrate importance application requirements multimedia systems 
detailed description map application requirements resources functionality scope 
depend concerned types distance education synchronous means lectures electronic classroom distributed realtime classrooms student workstations asynchronous students browse distributed hypermedia documents including video clips lectures transparencies exercises background material 
depend pays special attention needs users focus specific user group 
factors determine user needs include level expertise current task perspective role teacher student degree nature due fatigue illness visual print disabled hearing impairments motion impairment 
particularly different degrees impairments reflected hci configuration visually impaired persons prefer combine synthetic speech braille devices 
aim depend configure user needs 
user needs modelled stored called user model adjusted runtime user 
user needs hci specific requirements application specific requirements determine application requirements 
application requirements turn negotiated certain qos application related platform related parts see 
platform related part uses application requirements tasks qos mapping data selection 
qos mapping central part multimedia system data selection application requirements special depend 
qos mapping complex task resources functionality protocols networks data management systems operating systems selected way resulting combination elements fulfills application requirements 
apply protocol configuration approach da dynamic configuration protocols system protocols 
da application requirements mapped realtime protocol functionality selecting appropriate protocol mechanisms see chapter 
furthermore protocol configuration da includes selection network service selection 
da system developed computer engineering networks laboratory swiss federal institute technology eth zurich 
application requirements qos negotiation depend functional view user specifications hci configuration application user model application requirements qos mapping data selection view os eep dms nw dms multicast protocols application platform qos negotiation related related part part hci human computer interface app application dms data management system eep protocols hni host network interface os operating system corresponding network qos parameters 
depend prototype shore database system persistent data management 
shore flexible persistent object store allows incorporate application specific data modeling transaction management storage management mechanisms 
words application requirements mapped particular data models transaction management storage management 
extensions include aspects realtime database systems able map application requirements disk scheduling priorities transaction deadlines 
obviously depend processes threads da threads shore threads application threads user processes threads consuming processing power cpu time system 
gopalakrishnan suggest approach derive processing requirements protocols application requirements 
depend approach extended estimations processing requirements shore application hci 
processing requirements turn mapped scheduling algorithms corresponding priority schemes reserve necessary cpu time 
chosen operating system platforms depend solaris chorus 
chorus micro kernel operating system multithreaded address spaces realtime facilities 
different scheduling policies implemented form scheduling classes 
class communicates core scheduler micro kernel pure pre emptive scheduler scheduling decisions class attributes priorities deadlines 
words chorus application requirements mapped priorities deadlines processes threads 
solaris application requirements mapped priorities processes threads 
furthermore application requirements platform related part distinguish data importance user 
example visually impaired persons interested video data graphics hearing impaired users care audio data 
selection called view database systems 
asynchronous teaching view reduce amount data retrieved secondary storage transferred students endsystem 
reduces utilization resources disk bandwidth network traffic cpu time protocol handling data handling application data user 
synchronous teaching data transferred classroom receivers different needs 
multicast relations media types multicast protocols flow splitting fulfill different application requirements receivers save resources network traffic cpu time protocol handling data handling application resources necessary data user 
cases data selection saves resources realize appropriate qos important data 
qos negotiation optimization problem application requirements negotiate certain qos application related platform related part 
obviously users want get service high video frame rate low delay jitter low error rate better service satisfied user 
additionally users prefer low costs need remaining processing capacity perform tasks parallel 
multimedia system limited amount resources available fulfill requested qos 
considering multimedia system unit general problem maximize utility limited resources 
term utility refers degree satisfaction users multimedia systems 
words qos negotiation results optimization problem 
traditional approaches specify target values application requirements optimization problem tackled guesses 
application submits qos request platform related part 
part analyzes possible support qos 
answer application may submit guess 
qos suggestion application fulfilled represents solution qos negotiation problem probably optimal solution 
application user know available resources multimedia system approach solve qos negotiation problem try error approach 
obviously platform related part better position solve qos negotiation problem find optimal solution knows available resources 
requires application specifies probably contradicting objectives 
specifying application requirements form vector maximum problem scientific methods techniques operations research decision making maximize utility limited resources 
particular mathematical programming techniques linear programming designed solve optimization problems 
techniques require mathematical description optimization problem comprises elements measure merit respectively objective function minimized maximized 
instance maximize quality video audio stream video conference minimize response time distributed query 
set variables influence value objective function 
variables include amount resources network bandwidth cpu time disk bandwidth 
set constraints allow certain values variables exclude 
example response time rt bounded certain value positive optimization problem formulated find values variables minimize maximize objective function satisfying constraints 
users optimize number different objectives 
instance video quality maximized cost minimized 
usually different objectives compatible variables optimize objective may far optimal 
example order support higher video quality network bandwidth reserved 
reservation bandwidth increases cost decreasing 
operations research practice problems multiple objectives reformulated single objective problems forming weighted combination different objectives replacing objectives constraints 
resulting problem referred vector maximum problem vmp mathematically represented follows dimensional decision variable vector constraints objectives 
order specify application requirements dimensional decision variable vector comprises qos parameters relevance application 
constraints express non negativity variables minimal maximal acceptable value decision variable 
objectives indicate certain decision variables minimized maximized important optimization respect variables 
qos negotiation da da system uses application requirements specified vmp find optimal protocol configuration qos negotiation 
da layer model splits communication systems layers endsystems communicate transport infrastructure layer representing available communication infrastructure connectivity services generic 
layer communication support adds functionality services ac interface services provided run distributed applications layer 
da configures realtime qos negotiation layer protocols optimally adapted application requirements offered network services available resources 
fine granular building blocks perform single protocol functions serve building blocks configuration 
building blocks provide unified interface implemented hardware software 
da supports easy integration existing devices compression boards en decryption cards encapsulated unified interface 
application requirements ar specified da form tuples requirements single attribute types ar delay delay jitter packet loss rate security level ar ar 
tuple ar includes attribute type attribute value ary weight function ar specified attribute value minimal acceptable value met protocol entity 
call value knock value constraint vmp 
application sets attribute value equal element value set hard constraints accepts value 
weight functions describe objectives application defining importance particular requirement 
application requirements passed layer max subject heuristic method cora configuration resource allocation performs connection management protocol qos negotiation 
da supports unilateral bilateral negotiation 
unilateral negotiation cora entity initiators side coarse optimistic admission control 
probably resources available cora entity configures protocol selects modules network services certain qos satisfies application requirements possible vmp light possible unnecessary functionality minimal resource usage 
cora performs detailed admission control knows resources needed offer requested qos 
bilateral negotiation cora entities perform tasks compare results 
entity selects globally best configuration informs peer 
cora entities communicate connection management protocol 
words qos negotiation da performed passing application requirements layer cora entities select best protocol 
combination admission control protocol configuration represents form resource reservation 
da version implemented sunos 
enforced protocol threads receive cpu time 
performance measurements cora demonstrate protocol configuration admission control performed realtime 
table summarizes response times cora modes mini medium full increasing response times increasing qualitative results different scenarios 
measurements sun sparcstation 
complexity denoted comp 
optimization problems measured number possible configurations quality compares far qos selected protocol configuration fulfills application requirements 
input values cora application requirements properties building blocks measurements derived literature estimations 
performed worst case analysis created optimization problems unrealistic high complexity 
problems solved milliseconds results high quality 
extensions depend da solutions application requirements qos negotiation extended generalized depend protocols part multimedia systems 
specification method da supports abstraction allows layer optimize utility resources 
furthermore contradicting requirements easily expressed weight functions 
attribute types low level parameters replaced depend user friendly application related terms 
particular factors determine application requirements specify application requirements media type application class user needs necessary minimal quality user preferences simple weight functions 
application requirements sp ar specified form tuples requirements single media types ar digital video digital audio text sp ar ar 
tuple ar includes media type minimal quality ary weight function application class ar notion media type depend suggested 
media types specify representation operations implementation applications depend 
easy pass information application platform related part 
obviously representation related information comp comp comp comp time quality time quality time quality time quality ms ms ms ms mini ms ms ms ms medium ms ms ms ms full ms ms ms ms table response times cora mapped easily resource requirements 
illustrates media types digital video digital audio image defined 
user needs media type expressed form minimal acceptable quality 
quality measure coarse realized scale 
value represents bad quality value quality 
needs stored user model acquired users help examples 
weight functions assume simple functions described higher quality better particular quality level best user care need media type 
furthermore application delivers specification application class media type 
application classes defined isochronous class burst class low delay class 
isochronous classes continous media streams handled burst classes bulk data transferred 
remote procedure requests example low delay class 
application classes offer additional information qos negotiation 
particular indicate parameters important optimized 
example media type video handled mail application application class burst video conference 
application class isochronous 
total throughput main relevance mail application video conferences delay jitter represents crucial parameters 
qos negotiation extract functionality cora da implement extended version functional unit platform related part 
cora additionally considers properties functionality resource usage current load data management system operating system application hci configuration resource allocation 
functional unit comprises called local qos manager delivers information cora performs actions functional unit demanded cora 
furthermore qos negotiation protocol includes information exchange cora entities various endsystems 
illustrates relation cora functional units multimedia systems 
analyzed problem application requirements qos negotiation respect entire multimedia systems 
entire multimedia systems comprise functional units applications data management systems protocols networks operating systems 
application requirements determined application hci user needs user preferences 
suggest specify application requirements form 
hand specification increases independence application related part platform related part multimedia systems specify target qos values 
target specifi 
represents applications redundancy media types application class 
want exclude applications combine different classes isochronous video audio addition bulk transmission documents 

obviously media types application classes include redundant information 
aspects directly derived application specification represents computational overhead 
sample media types media type digital audio representation sampling frequency sampling size quantization number channels tracks interleaving negative samples encoding operations storage retrieval editing effects filtering conversation media type digital video representation analog formats sampled sampling rate sampling size quantization data rate frame rate compression support interaction scalability operations storage retrieval synchronization editing effects conversation media type image representation color model alpha channels number channels channel depth interlacing indexing pixel aspect ratio compression operations point operations filtering compositing geometric transformations conversation cation require knowledge resources multimedia system 
due complexity multimedia systems resources applicable done 
independence application related part platform related part additionally minimizes necessary effort port application hci initial environment environments different resources 
hand vmp specification enables platform related part optimize utility resources offer qos fulfills possible application requirements 
performance measurements heuristic method cora demonstrate optimization problems solved realtime 
specification method qos negotiation depend approach da 
media types application classes substitute low level attribute types da combined minimal acceptable qualities weight functions specify application requirements 
depend project design phase 
additionally single elements depend implemented study feasibility experiences foundation design considerations 
particular implementation activities implementation adaptable world wide web browser users different degrees visually impairment da chorus micro kernel realtime support da protocols implementation multimedia database system shore 
obviously depend approach implications design implementation multimedia protocols 
new approaches multimedia protocols combining data management mechanisms protocols mechanism buffer management forward error correction applied data management systems communication protocols 
example data management systems vod applications apply buffer management reading blocks disk arrays clients terminals site displaying data minimize delay jitter 
buffer management protocols applications perform flow control minimize delay jitter 
common buffer management save expensive copy operation data management system communication system server client site 
order reduce probability loss data striped disk array data management systems vod systems perform form forward error correction 
multimedia protocols forward error correction important continous media streams require low delay jitter tolerate retransmission corrupted packets 
forward error correcting code data striped network protocol 
step direction forward error correcting code data management system protocols de data data management system communication system 
save servers site decoding process data management system encoding process communication system 
considering storage systems intermediate systems interesting applications mainly read multiple times data secondary storage vod applications 
applications communication systems transport data remote server multiple times server users 
cases data transported space 
data management system transfer data time retrieve exactly data written certain time 
considering storage system configuration resource allocation qos management depend lq dms lq lq hni eep os lq app hci cora lq dms lq lq hni eep os lq app hci cora endsystems logical relations hci human computer interface app application dms data management system eep protocols hni host network interface os operating system lq local qos manager system situation data transport space time 
principles intermediate network nodes valid intermediate storage node 
example necessary handle protocol stack respectively corresponding functions physical layer application layer 
network layer protocol data units stored directly handling higher layer protocols writing disk 
correspondingly read operation network protocol data units retrieved disk forwarded new destination address link layer 
bibliography anderson media acm transactions computer systems 
vol 
august pp 
barth levels quality service cinema appear proceeding german swiss computer science society conference zurich switzerland september bauer wilde plattner design considerations multicast framework proceedings tenth annual workshop computer communication washington september biersack server array scalable video server architecture proceedings nd iasted ismm int 
conf 
distributed multimedia systems applications stanford california usa august pp 
box schmidt suda adaptive object oriented framework flexible adaptive communication protocols proceedings th ifip conference high performance networking liege belgium december campbell coulson hutchison leopold integrated quality service multimedia communications proceedings ieee infocomm san francisco march pp 
campbell coulson hutchison orchestration services distributed multimedia synchronization high performance networking iv editors science publishers 
north holland pp 
campbell coulson hutchison multimedia enhanced transport service quality service internal report mpg dept computing lancaster university campbell coulson garcia hutchison leopold quality service multimedia communications proc 
ieee infocom march pp 
carey dewitt franklin hall mcauliffe naughton schuh solomon tan white persistent applications proceeding acm sigmod conference management data minneapolis mn may pp 
chen liu service monitoring qos atm networks proc 
gigabit networking workshop boston massachusetts april clark lambert zhang netblt bulk data transfer protocol network working group request comments march cohn high speed transport protocol contribution iso iec jtc sc wg september coulson blair robin micro kernel support continous media distributed systems computer networks isdn systems special issue multimedia gibbs tsichritzis multimedia programming objects environments frameworks acm press addison wesley goebel johansen generation database technologies advanced communication services appear rd int 
conf 
intelligence broadband networks services greece lncs springer october leonard osi connection mode transport service enhanced qos ifip conference high performance networking liege december best effort enhanced qos race cec deliverable number cio ds july overview tp transport protocol project high performance communication editor ahmed january ferrari client requirements real time communication services ieee communications magazine november pp 
freedman dewitt scalable video demand system proceedings acm sigmod sigmod record volume issue june pp 
gopalakrishnan framework qos guarantees multimedia applications endsystem appear proceeding german swiss computer science society conference zurich switzerland september haas protocol structure high speed communication broadband isdn ieee network magazine january pp 
approach quality service management distributed multimedia applications open distributed processing experiments distributed environments raymond armstrong 
editors ifip chapman hall pp 
high speed transport systems multi medis applications protocols high speed networks rudin editors science publishers north holland ifip pp 
hwang multiple objective decision making methods applications lecture notes economics systems beckmann editors open systems interconnection osi model notation service definition itu international telecommunication union ccitt blue book volume viii facsimile viii melbourne australia november quality service framework draft itu telecommunications standardization sector study group wps source sc wg project jtc geneva switzerland february quality management quality assurance concepts terminology international standard iso subcommittee sc ramaswami wang analysis link error monitoring protocols common channel signaling network ieee acm transactions networking vol 
february pp 
jeffay bennet rate execution abstraction multimedia computing 
th international workshop network operating system support digital audio video april pp 
jung translation qos parameters atm performance parameters isdn proceedings ieee infocomm san francisco march pp 
vogel distributed multimedia presentational applications functional computational qos negotiation proc 
th int 
ifip workshop protocols high speed networks chapman hall london pp 
liu layland scheduling multiprogramming hard real time environment journal acm vol 
january pp 
louis class service high performance storage system open distributed processing experiments distributed environments raymond armstrong 
editors ifip chapman hall pp 
metzler specification broadband transport protocol cec deliverable cio ds february design continuous media data transport service protocol tech 
rep tr computer science division university california berkley april nahrstedt network service customization point perspective tech 
rep ms cis university pennsylvania computer information sciences december nahrstedt smith qos broker ieee multimedia spring pp 
neal shapiro knowledge multimedia systems multimedia systems john contributing editor acm press addison pp 
malley peterson layered architecture high speed networks protocols high speed networks ii johnston science publisher 
north holland november pp 
snodgrass temporal real time databases survey ieee transactions knowledge data engineering vol 
august pp 
plattner vogt walter model dynamic configuration light weight protocols proceedings ieee third workshop trends distributed computing systems taipei taiwan april pp 
plattner vogt walter modules building blocks protocol configuration proceedings international conference network protocols icnp san francisco usa october pp 
plattner cora heuristic protocol configuration resource allocation protocols high speed networks iv neufeld ito 
editors ifip chapman hall pp 
framework dynamic protocol configuration phd thesis swiss federal institute technology zurich diss 
eth zurich switzerland september goebel depend distance education people different needs proceeding nd iasted ismm int 
conf 
distributed multimedia systems applications stanford california usa august pp 
rozier armand herrmann kaiser leonard overview chorus distributed operating systems chorus systemes technical report cs tr quality service abstraction tool advanced distributed applications open distributed processing experiments distributed environments raymond armstrong 
editors ifip chapman hall pp 
simoni qos definition management proc th ifip conference high performance networking belgium ifip december simpson ppp link quality monitoring internet request comments rfc internet engineering task force may steinmetz analysing multimedia operating system ieee multimedia spring pp 
stiller flexible protocol configuration support service integrated system german vol 
germany vdi february tobe chou qos control continous media communications inet april pp 
ed experimental internet stream protocol version st ii rfc oct vogel distributed multimedia qos survey ieee multimedia summer vol 
pp 
vogt plattner walter run time environment da proceedings inet international networking conference internet society san francisco august pp 
rethinking requirements analysis implications research producer consumer relationship development requirement engineering social technical issues goguen 
edt academic press pp 
zhang deering estrin shenker zappala rsvp new resource reservation protocol ieee network september pp 
stiller model flexible high performance communication subsystems ieee journal selected areas communications volume number may pp 

