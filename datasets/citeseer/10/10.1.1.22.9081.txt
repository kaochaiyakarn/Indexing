nettimer tool measuring bottleneck link bandwidth kevin lai mary baker cs stanford edu department computer science stanford university measuring bottleneck link bandwidth path important understanding performance internet applications 
existing tools measure bottleneck bandwidth relatively slow measure bandwidth direction actively send probe packets 
nettimer bottleneck link bandwidth measurement tool distributed packet capture library experiments quantifying utility 
test nettimer variety bottleneck network technologies ranging kb mb wired wireless symmetric asymmetric bandwidth local area paths packet capture hosts 
cases nettimer error worst error cross country paths hops 
converges kb large packet arrival consuming network traffic measured 
network bandwidth continues critical resource internet heterogeneous bandwidths access technologies file sizes 
cause unaware application stream gb video file kb cellular data link send version web site mb link 
knowledge bandwidth path allows application avoid mistakes adapting size quality content choosing web server proxy higher bandwidth replicas ste 
existing solutions problem examined throughput ste tcp throughput mm available bandwidth cc bottleneck link bandwidth 
tcp current january dominant application transport protocols internet applications transport protocols video audio streaming different performance characteristics 
consequently performance predicted tcp throughput 
available bandwidth combined latency loss rates metrics predict performance wide variety applications transport protocols 
available bandwidth depends bottleneck link bandwidth cross traffic 
cross traffic highly variable different places internet highly variable place 
developing verifying validity available bandwidth algorithm deals variability difficult 
contrast bottleneck link bandwidth understood theory kes bol pax lb techniques measure straightforward validate practice see section 
bottleneck link bandwidth measurement techniques shown accurate fast simulation lb 
furthermore parts internet available bandwidth frequently equal bottleneck link bandwidth bottleneck link bandwidth small wireless modem dsl cross traffic low lan 
addition bottleneck link bandwidth current utility help development accurate validated available bandwidth measurement techniques available bandwidth dependence bottleneck link bandwidth 
current tools measure link bandwidth measure link bandwidths just bottleneck measure bandwidth direction actively send probe packets 
tools pathchar jac clink dow pchar mah lb measure link bandwidths path time consuming unnecessary applications want know bottleneck bandwidth 
furthermore tools bprobe cc measure bandwidth direction 
tools pax pathrate drm actively send probe traffic accurate passively measuring existing traffic results higher overhead lb 
nettimer sim lb tool works simulation 
contributions nettimer bottleneck link bandwidth measurement tool distributed packet capture library experiments quantifying utility 
current tools nettimer passively measure bottleneck link bandwidth path real time 
nettimer measure bandwidth direction packet capture host directions packet capture hosts 
addition distributed packet capture library allows measurement programs nettimer efficiently capture packets remote hosts doing expensive measurement calculations locally 
experiments indicate cases nettimer error bottleneck link technology mb ethernet mb ethernet mb wavelan mb wavelan adsl modem cdma cellular data 
nettimer converges bytes large packet arrival 
measuring mb bottleneck nettimer consumes network traffic measured cycles mhz remote packet capture server cycles mhz bandwidth computation machine 
rest organized follows 
section describe packet pair property networks show measure bottleneck link bandwidth 
section describe implement packet pair techniques described section including distributed packet capture architecture api 
section preliminary results quantifying accuracy robustness agility efficiency tool 
section conclude 
packet pair technique section describe packet pair property fifo queueing networks show measure bottleneck link bandwidth 
packet pair property fifo queueing networks packet pair property fifo queueing networks predicts difference arrival times packets size traveling source destination max bl source flow direction packets lb destination shows packets size traveling source destination 
wide part pipe represents high bandwidth link narrow part represents low bandwidth link 
spacing packets caused queueing bottleneck link remains constant downstream additional downstream queueing 
arrival times second packets respectively destination transmission times second packets respectively size second packet bl bandwidth bottleneck link 
intuitive rationale equation full proof lb packets sent close time cause packets queue bottleneck link bl packets arrive destination spacing exited bottleneck link 
spacing remain bl packets size link downstream bottleneck link lower bandwidth bottleneck link shown variation jac 
property assumptions may hold practice 
assumes packets queue bottleneck link link 
violated packets queueing packets bottleneck link packets queueing front second packets downstream bottleneck link 
events occur equation hold 
section describe mitigate limitation filtering samples suffer undesirable queueing 
addition packet pair property assumes packets sent close time queue bottleneck link 
problem high bandwidth bottleneck links passive measurement 
example equation cause queueing byte packets gb bottleneck link transmitted microseconds apart 
active technique passive satisfy assumption control size transmission times packets 
section describe passive techniques detect problem filter effect 
assumption packet pair property bottleneck router uses fifo queueing 
router uses fair queueing packet pair measures available bandwidth bottleneck link kes 
packet pair property assumes transmission delay proportional packet size routers store forward 
assumption transmission delay proportional packet size may true example router manages buffers way byte packet copied proportionally faster byte packet 
effect usually small ignored 
assumption routers store receive bit packet forwarding bit true internet 
packet pair property solve equation bl bandwidth bottleneck link bl call received bandwidth bandwidth measured receiver 
filtering section bandwidth measured sender sent bandwidth filtering techniques section describe detail assumptions section violated practice filter effect 
measurements sizes transmission arrival times packets equation get samples received bandwidth 
goal filtering technique determine samples indicate bottleneck link bandwidth 
approach develop filtering function gives higher priority samples lower priority bad samples 
describing filtering functions differentiate kinds samples want keep want filter 
shows case satisfies assumptions packet pair property cases 
possible scenarios combinations cases 
case shows ideal packet pair case packets sent sufficiently quickly queue bottleneck link queueing bottleneck link 
case bottleneck bandwidth equal received bandwidth need filtering 
case packets queue second packets causing second packet fall farther caused bottleneck link 
case received bandwidth bottleneck bandwidth unknown amount filter sample 
case packets queue packet bottleneck link causing second packet follow packet closer caused bottleneck link 
case received bandwidth greater bottleneck bandwidth unknown amount filter sample 
case sender send packets close queue bottleneck link 
case received bandwidth bottleneck bandwidth unknown amount filter sample 
active techniques avoid case samples sending large packets little spacing passive techniques susceptible 
examples case traffic tcp voice ip traffic remote terminal protocols telnet ssh instant messaging protocols 
filtering density estimation filter effect case insight samples influenced cross traffic tend correlate case samples correlate strongly pax cc 
assume cross traffic random packet sizes arrive randomly links path 
addition insight packets sent low bandwidth arrive high bandwidth definitely case filtered pax 
shows hypothetical example apply insights 
second insight eliminate case samples received bandwidth sent bandwidth line 
remaining samples calculate smoothed distribution pick point highest density bandwidth 
ways compute density function set samples pax cc including bl bl bl bl bl bl bl cross traffic cross traffic bl bl bl bl shows cases spacing pair packets changes travel path 
black boxes packets traveling source left destination right 
underneath pair packets spacing relative spacing caused bottleneck link 
gray boxes indicate cross traffic causes packets queue 
ing histogram 
histograms disadvantages fixed bin widths fixed bin alignment uniform weighting points bin 
fixed bin widths difficult choose appropriate bin width previously knowing distribution 
example samples meaningful choose bin width 
hand samples bin width received bandwidth sent bandwidth density highest density left graph shows packet pair samples plotted received bandwidth sent bandwidth 
samples correspond case right graph shows distribution different values received bandwidth filtering samples line 
example density estimation indicates best result 
flatten interesting maxima 
disadvantage fixed bin alignment 
example points lie close side bin boundary bin boundary ignores relationship 
uniform weighting points bin means points close density points opposite ends bin 
advantage histogram speed computing results interested accuracy robustness saving cpu cycles 
avoid problems kernel density estimation sco 
idea define kernel function property dt density received bandwidth sample xi kernel width ratio number points xi ith point 
kernel width ratio control smoothness density function 
larger values give accurate result computationally expensive 

kernel function received bandwidth dd sent bandwidth density structure 
example ratio received bandwidth sent bandwidth better indicator density estimation 
function gives greater weight samples close point want estimate density simple fast compute 
filtering received sent bandwidth ratio density estimation best indicator situations case samples fool density estimation 
example host transfer data directions different tcp connections correspondent host 
data mainly flows forward direction reverse direction consist tcp sent large spacings data packets sent small spacings 
shows possible graph resulting measurement samples 
density estimation indicate bandwidth lower correct case samples resulting widely spaced acks 
improve accuracy results favor samples show evidence causing queueing bottleneck link lb 
case samples caused queueing bottleneck link close line hand case samples average far line meaning sent high bandwidth received lower bandwidth 
suggests queue bottleneck link 
insight define received sent bandwidth ratio received bandwidth sample ln ln sent bandwidth take log bandwidths bandwidths frequently differ orders magnitude 
unfortunately samples sent bandwidth favors smaller received bandwith 
counteract define received bandwidth ratio ln ln xmin ln xmax ln xmin composing filtering algorithms compose filtering algorithms described previous sections normalizing values linear combination max max maximum kernel density value 
choosing maximum value bottleneck link bandwidth take account density received sent bandwidth ratio favoring smaller values weighting components arbitrary 
optimal weighting results section indicate weightings 
sample window addition filtering function bandwidth samples 
allows quickly detect changes bottleneck link bandwidth agility resistant cross traffic stability 
large stable small include periods cross traffic different sources cross traffic correlate particular received bandwidth 
large agile small essentially reason 
clear define situations currently problem making user defined parameter nettimer 
implementation section describe nettimer implements algorithms described previous section 
issues address define flows take measurements distribute measurements 
definition flows section packet pair property refers packets source destination 
nettimer interpret flow defined source ip address destination ip address tuple network level flow interpreted defined source ip address source port number destination ip address source port number tuple transport level flow 
advantage transport level flows penetrate network address translation nat gateways 
advantage network level flows aggregate traffic multiple transport level flows tcp connections samples 
chose network level flows started implementing nettimer nat gateways widespread popular www browsers open short tcp connections servers 
describe possible solution problem section 
measurement host section assume transmission arrival times packets 
practice requires deploying measurement software sender receiver may difficult 
section describe mitigate limitation nettimer trade offs doing 
hosts ideal case deploy measurement software sender receiver 
technique called receiver packet pair rbpp pax nettimer employ filtering algorithms described section transmission times reception times 
addition deploying measurement software sender receiver nettimer needs architecture distribute measurements interested hosts described section 
show section rbpp accurate technique 
host deploy software host measure bandwidth host host sender packet pair sbpp pax host measurement host receiver packet pair ropp lb 
sbpp works arrival times application level arrival times packets 
application technique deploy measurement software server measure bandwidth server clients software deployed 
issues technique application level information non packet susceptibility reverse path cross traffic 
nettimer uses transport applicationlevel information match packets 
currently implements functionality tcp 
unfortunately tcp strict packet policy 
acks packet packets order 
furthermore delays acks 
acks delayed cross traffic reverse path causing noise filtering algorithm deal 
show section non packet sbpp accurate packet pair techniques 
describe solution problem section 
ropp works arrival times packets 
prevents filtering algorithms described section longer calculate sent bandwidth 
application technique deploy measurement software client measure bandwidth servers modified client 
show section cases little cross traffic ropp close accuracy rbpp 
distributed packet capture section describe architecture distributed packet capture 
nettimer tool uses architecture measure transmission arrival times packets internet 
explain approach describe implementation 
approach approach distinguish packet capture servers packet capture clients 
packet capture servers capture packet headers distribute clients 
servers calculations 
clients receive packet headers perform performance calculations filtering 
allows flexibility packet capture done calculation done 
possible approach calculation packet capture hosts mj 
advantage approach packet capture hosts consume bandwidth distributing packet headers 
advantages separating packet capture performance calculation reducing cpu burden packet capture hosts gaining flexibility kinds performance calculations done reducing amount code run root privileges 
doing performance calculation packet capture clients servers capture packets distribute clients 
especially important packet capture server receives packets high rate packet capture server collocated servers web server performance calculation consumes cpu cycles case filtering algorithm described section 
advantage clients flexibility change performance calculation code modifying packet capture servers 
avoids possible security problems allowing client code run server 
operating systems linux require packet capture code run root privileges 
separating client server code server runs root privilege client run normal user 
implementation distributed packet capture library 
built top libpcap library mj 
result nettimer tool measure live internet tcpdump traces 
start server application specifies parameters send thresh send interval filter cmd cap len 
send thresh number bytes packet headers server buffer sending client 
usually tcp maximum segment size fewer full size packet report packets sent 
send interval amount time wait sending buffered packet headers 
prevents packet headers server waiting data exceed send thresh 
server sends buffer send interval send thresh exceeded 
filter cmd specifies packets captured server libpcap filter language 
cut amount unnecessary data sent clients 
example capture tcp packets cs stanford edu eecs harvard edu filter cmd host cs stanford edu host harvard stanford edu tcp 
cap len specifies packet capture 
start client application specifies set servers connect filter cmd 
client sends filter cmd servers connects 
restrict types packet headers client receives 
client connects server server responds cap len clock resolution 
different machines operating systems different clock resolutions captured packets 
example linux resolution ms linux resolution microseconds times difference 
significant difference accuracy calculation server reports clock resolution client 
calculate bandwidth consumed packet reports distributed packet capture server sends clients start size report cap len sizeof timestamp bytes table table shows different path characteristics experiments 
short long column list number hops host host short long path respectively 
rtt columns list roundtrip times short long paths ms type short rtt long rtt ethernet mb ethernet mb wavelan mb wavelan mb adsl modem cdma sizeof cap len bytes sizeof flags bytes 
tcp traffic nettimer needs bytes packet header 
addition link level headers consume variable amount space 
safe set capture length bytes packet report consumes bytes 
headers fit byte tcp payload total overhead approximately bytes 
heavily loaded network problem 
interested pre determined subset traffic packet filter reduce number packet reports 
experimentally verify cost section describe ways reduce section 
experiments section describe experiments quantify utility nettimer 
methodology section describe explain methodology running experiments 
approach take tcpdump traces pairs machines transfer machines varying bottleneck link bandwidth path length workload 
run traces nettimer analyze results 
methodology consists network topology hardware software platform accuracy measurement network application workload network environment 
network topology consists variety paths listed table vary bottleneck link technology length path 
wavelan wav wireless local area network technology lucent 
adsl asymmetric digital subscriber line high bandwidth technology uses table table shows different software versions experiments 
release column gives rpm package release number 
name version release gnu linux kernel redhat tcpdump nettimer phone lines bring connectivity homes small businesses 
tested pacific bell sbc dsl adsl service 
international telecommunication union itu itu standard data communication analog phone lines 
service stanford university 
cdma code division multiple access digital cellular technology 
tested cdma service sprint pcs spr global internet services internet service provider 
link technologies currently available users 
cases bottleneck link link closest hosts 
allows measure best worst cases nettimer described 
short paths representative local area metropolitan area networks long paths representative cross country wide area network 
able get access international tracing machine 
tracing hosts intel ranging mhz mhz 
versions software listed table 
measure network accuracy showing lower bound tcp throughput path little cross traffic upper bound nominal bandwidth specified manufacturer 
tcp throughput insufficient include bandwidth consumed link level headers ip headers tcp headers retransmissions 
nominal bandwidth insufficient manufacturer usually measures conditions may difficult achieve practice 
possibility measure bottleneck link technologies isolated test bed 
number types link technologies difficult 
network application workload consists scp secure file transfer program copy byte mp file directions path 
transfer terminated minutes file fully transferred 
copy file directions adsl technology asymmetric want mea sure bandwidths want take measurements bottleneck link link link 
link bottleneck link worst case nettimer provides opportunity cross traffic interfere packet pair property 
link bottleneck link best case opposite reason 
copy byte file compromise having samples having samples traces cumbersome 
terminate tracing minutes wait hours file transferred lower bandwidth links 
network environment centers stanford university campus includes networks pacific bell sprint pcs harvard university isps connect stanford harvard 
ran trials measure effect different levels cross traffic different times day different days week 
traces started pst friday pst saturday pst monday pst monday pst tuesday 
believe traces cover peak traffic times networks tested commute time sprint pcs cellular weekends nights pacific bell adsl stanford stanford residential network hours stanford harvard computer science department networks 
limits resources selected different values experimental parameters possible capture heterogeneity internet 
results section analyze results experiments 
varied bottleneck link goal determine nettimer measure wide variety network technologies 
dealing different network technologies just matter dealing different bandwidths different technologies different link physical layer protocols affect bandwidth measurement 
table examine short path receiver packet pair results different technologies 
table gives mean result times days tcp throughput receiver result reported nettimer 
ethernet mb case lesser extent ethernet mb case show tcp measure bandwidth high bandwidth link table table summarizes nettimer results times days 
type lists different bottleneck technologies 
lists direction transfer 
indicate data flowing away bottleneck respectively 
path indicates ong path 
lists nominal bandwidth technology 
tcp lists tcp throughput 
rb lists nettimer results receiver packet pair 
lists standard deviation different traces 
high bandwidth technologies mb type tcp rb ethernet ethernet ethernet ethernet ethernet ethernet ethernet ethernet wavelan wavelan wavelan wavelan wavelan wavelan wavelan wavelan adsl adsl low bandwidth technologies kb type tcp rb adsl adsl cdma cdma cdma cdma inaccurate expensive 
ethernets tcp throughput significantly nominal bandwidth 
caused cross traffic able open tcp window bottlenecks disk inefficiencies operating system encryption scp application 
general tcp measure bandwidth requires filling bandwidth 
may expensive resources inaccurate 
explanation rbpp result mb long path 
wavelan cases nettimer estimate tcp throughput estimate deviate significantly nominal 
study bpsk reports peak tcp throughput wavelan mb mb took traces distance wireless node base station obvious sources electromagnetic radiation nearby 
speculate mb mb nominal rates achieved optimal environment shielded external radio interference conclude nettimer reported rate close actual rate achievable practice 
anomaly nettimer measured wavelan bandwidths consistently higher direction direction 
nettimer calculation error tcp throughputs similarly asymmetric 
hardware pcmcia nics host base station identical due asymmetry mac layer protocol 
nettimer measured adsl bandwidth consistently deviates nominal 
tcp throughput close nettimer measured bandwidth deviation due overhead ppp headers byte pacific bell sbc adsl uses ppp ethernet overhead encapsulating ppp packets atm pacific bell sbc adsl modems atm communicate switch 
link layer overhead cause deviation results 
cdma results exhibit asymmetry similar wavelan results 
fairly certain base station hardware different client transceiver may explain difference 
may due interference source close client hidden base station 
addition tcp throughputs far nominal nettimer measured bandwidth deviation may due nettimer measurement error 
conclude nettimer able measure bottleneck link bandwidth different link technologies maximum error cases error 
resistance cross traffic expect long paths cross traffic short paths interfere nettimer 
addition expect bandwidth direction difficult measure bandwidth direction packets travel entire path arrival time measured 
table shows rbpp technique nettimer filtering algorithm able filter effect cross traffic nettimer accurate long paths direction 
contrast ropp accurate paths paths section 
pointed anonymous reviewer may environments busy web server packet sizes arrival times highly correlated violate assumptions described section 
definitely parts internet containing technologies traffic patterns different described cause nettimer filtering algorithm fail 
example multi channel isdn longer common united states 
simply claim nettimer accurate variety common cases justifies investigation effectiveness cases 
different packet pair techniques section examine relative accuracy different packet pair techniques 
table shows receiver sender results day traces 
sender packet pair particularly accurate reporting estimated bandwidth short paths 
mentioned result passively tcp non delayed 
discuss possible solutions section 
direction long short paths receiver packet pair accurate rbpp 
contrast receiver packet pair amazingly inaccurate direction 
ropp accurate measurement packets preserve spacing resulting link journey links 
ropp filter sent bandwidth section cooperation sending host 
consequently ropp poor accuracy compared rbpp 
agility section examine quickly nettimer calculates bandwidth connection starts 
shows bandwidth nettimer rbpp reports connection 
connection begins seconds point graph 
nettimer initially reports low bandwidth correct high bandwidth low bandwidth converges high bandwidth 
total time connection convergence seconds 
takes long scp requires table table shows pst nettimer results type lists different bottleneck technologies 
lists direction transfer 
indicate data flowing away bottleneck respectively 
indicates ong path 
nom lists nominal bandwidth technology 
ro sb list receiver sender packet pair bandwidths respectively 
lists standard deviation duration connection 
high bandwidth technologies mb type nom ro sb ethernet ethernet ethernet ethernet ethernet ethernet ethernet ethernet wavelan wavelan wavelan wavelan wavelan wavelan wavelan wavelan adsl adsl low bandwidth technologies kb type nom ro sb adsl adsl cdma cdma cdma cdma round trips authenticate negotiate encryption 
measure data packets flow nettimer converges th data packet arrives ms data packet arrives bytes connection 
tcp reported throughput point kb converging bytes means adaptive web server measure bandwidth just text portion web pages adapt images measurement 
ethernet mb long rbpp graph shows bandwidth reported nettimer rbpp particular time ethernet mb direction long path 
shows bandwidth log scale 
axis shows number seconds tracing began 
table table shows cpu overhead consumed nettimer application measuring 
user lists user level cpu seconds consumed 
system lists system cpu seconds consumed 
elapsed lists elapsed time program running 
cpu lists user system scp elapsed time 
name user system elapsed cpu server client scp resources consumed section quantify resources consumed nettimer 
contrast experiments took traces nettimer process traces experiment nettimer captured packets calculated bandwidth connection progress 
measure ethernet mb short path requires efficient processing 
scp copy file 
distributed packet capture server ran unloaded mhz pentium ii packet capture client nettimer processing ran unloaded mhz pentium ii 
table lists cpu resources consumed components 
cpu cycles consumed distributed packet capture server negligible mhz processor mb link 
nettimer consume substantial number cpu seconds classify packets flows run filtering algorithm 
relatively old mhz machine functionality need collocated machine providing actual service measured case scp program 
transferring packet headers server client consumed bytes 
file transferred bytes overhead 
higher predicted section scp transfers extra data connection setup data packets retransmitted significantly server captures traffic 
server captures traffic distinguish scp data packets packet header traffic captures headers packets containing headers packets containing headers 
fortunately limit recursion net overhead close predicted overhead 
section describe possible improvements nettimer implementation 
improvement determine optimal weighting components filtering algorithm section improvement allow runtime choice flow definition section measure bandwidth nat gateways 
improvement allow distributed packet capture servers randomly sample traffic reduce amount bandwidth packet reports consume 
add active probing component sav cause large packets flow directions hosts special measurement software cause prompt flow back sender 
pathrate drm tool shows active packet pair accurate 
describe trade offs involved implementing nettimer packet pair tool passively measuring bottleneck link bandwidths real time internet 
show utility wide variety bottleneck link technologies ranging kb mb wired wireless symmetric asymmetric bandwidth local area cross country paths packet capture hosts 
hope nettimer ease creation adaptive applications provide insight network performance analysis lead development precise performance measurement algorithms 
acknowledgments people research extremely difficult 
anonymous usits reviewers provided valuable comments 
margo seltzer dave sullivan harvard university graciously allowed critical cross country tracing machines 
brian roberts gave available mb ethernet switch port floor 
ed hosted laptops campus apartment 
giuli lent laptop weeks 
supported gift ntt mobile communications network 
ntt 
addition kevin lai supported part usenix scholar fellowship 
bol jean bolot 
packet delay loss behavior internet 
proceedings acm sigcomm 
bpsk hari balakrishnan venkata padmanabhan srinivasan seshan randy katz 
comparison mechanisms improving tcp performance wireless links 
proceedings acm sigcomm 
cc robert carter mark crovella 
dynamic server selection bandwidth probing wide area networks 
technical report bu cs boston university 
cc robert carter mark crovella 
measuring bottleneck link speed packet switched networks 
technical report bu cs boston university 
dow allen downey 
pathchar estimate internet link characteristics 
proceedings acm sigcomm 
drm dovrolis ramanathan david moore 
packet dispersion techniques measure 
proceedings ieee infocom april 
dsl dsl 
www com dsl 
armando fox steven gribble eric brewer elan amir 
adapting network client variability demand dynamic distillation 
proceedings seventh international conference architectural support programming languages operating systems 
itu itu 
www itu int 
jac van jacobson 
congestion avoidance control 
proceedings acm sigcomm 
jac van jacobson 
pathchar 
ftp ftp ee lbl gov pathchar 
kes srinivasan keshav 
control theoretic approach flow control 
proceedings acm sigcomm 
lb kevin lai mary baker 
measuring bandwidth 
proceedings ieee infocom march 
lb kevin lai mary baker 
measuring link bandwidths deterministic model packet delay 
proceedings acm sig comm august 
mah bruce mah 
pchar 
www ca sandia gov software pchar 
mj steve mccanne van jacobson 
bsd packet filter new architecture userlevel packet capture 
proceedings winter usenix technical conference 
mj robert malan jahanian 
extensible probe architecture network protocol performance measurement 
proceedings acm sigcomm 
mm mathis mahdavi 
diagnosing internet congestion transport layer performance tool 
proceedings inet 
pax vern paxson 
measurements analysis internet dynamics 
phd thesis university california berkeley april 
sav stefan savage 
sting tcp network measurement tool 
proceedings usenix symposium internet technologies systems 
sco dave scott 
multivariate density estimation theory practice visualization 
addison wesley 
spr sprint pcs 
www com 
ste mark stemm 
network measurement architecture adaptive applications 
phd thesis university california berkeley 
wav wavelan 
www wavelan com 
