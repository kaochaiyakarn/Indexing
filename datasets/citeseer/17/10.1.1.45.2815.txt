support tools visual information management bruce draper eliot moss edward riseman department computer science university massachusetts amherst ma visual applications need represent manipulate store retrieve raw processed visual data 
existing relational object oriented database systems fail offer satisfactory visual data management support lack kinds representations storage structures indices access methods query mechanisms needed visual data 
argue extensible visual object stores offer feasible effective means address data management needs visual applications 
isr visual object store development university massachusetts management persistent visual information 
isr designed offer extensive storage retrieval support complex large visual data customizable buffering clustering spatial temporal indexing variety multi dimensional access methods query languages 
index terms visual information management persistent object store extensible visual object store supported part advanced research projects agency army tec contract number contract number national science foundation number cda 
visual application application manipulates visual data part processing 
advances image analysis visualization video technologies increasingly large amounts digital visual data generated visual applications tremendously diverse range domains geographic astronomical environmental information management engineering scientific visualization military intelligence computer aided design manufacturing cad cam medical imaging 
visual data consumed applications consist raw sensory data images processed data knowledge structures visual interpretation systems associated model data cad cam models 
scale visual applications grows need efficiently process store access raw processed data acute 
typically large amount data generated visual application needed temporary 
line extraction algorithm example may produce hundreds thousands line segments image 
permanent data may accessed repeatedly modules line grouping model matching algorithms efficiency memory data representation retrieval critical 
hand priori knowledge maps models permanent data base information visual algorithms access repeatedly alter occasionally 
similarly generated long term data set extracted line segments site model stored access 
voluminous image temporary data mentioned data persistent grows larger total amounts time 
managed efficient storage access mechanisms geared nature spatial temporal data 
addressed management temporary data earlier visual data management process integration tool called isr 
discuss issues related management persistent data visual applications shortcomings current relational object oriented systems dealing issues 
argue extensible visual object stores offer feasible efficient means address data management needs visual applications isr visual object store development university massachusetts 
current technology described efficient storage retrieval large volumes permanent visual data aerial images site models mri scans imposes requirements vastly different conventional data processing 
result existing relational object oriented database systems fail offer kinds storage structures indexing access methods query mechanisms needed visual data 
efficient storage structures large multi dimensional objects 
issue manage storage retrieval large multi dimensional objects images 
space time efficient storage access large visual objects critical projects national digital library program library congress involves providing access major subset approximately items large numbers digitized pictures 
applications store images files leave management memory page swaps operating system 
approach result large number page swaps especially physical clustering image disk match access pattern application 
traditional database systems provide appropriate data types built support images similar objects maps 
adaptive clustering techniques clustering multi dimensional data patterns access mature ones suggested depend complex access pattern statistics 
associative clustering 
discussed visual applications need store raw images symbolic data extracted associated images 
contentbased image retrieval example commonly stored data include color histograms invariants shape moments texture features 
symbolic data need associated image region came retrieved sub image 
radius program example site models reconstructed sets aerial images need grouped stored retrieved functional areas 
database systems provide little control clustering information external storage sub image related analysis results stored disk page retrieved efficiently 
support tools visual information management multi dimensional temporal indexing visual data spatial nature geometric image structures need accessed spatial properties image world positions 
spatial indices need maintained efficient access data 
needed especially military intelligence medical imaging applications temporal indices defined time sequence image data 
typical medical query example find sign tumor history mri data 
unfortunately lack effective support multi dimensional temporal indexing techniques existing database systems 
simply adding popular indexing methods dimensional trees limited solution awaiting situations completely different index needed 
ability incorporate indexing mechanism data management system called 
query mechanisms optimization spatial temporal geometric representations 
current relational object oriented query languages express necessary spatial temporal geometric concepts operators effectively 
example usually build specific concrete representations dimensional points lines curves regions systems provide appropriate treatment geometric anomalies arise example numerical roundoff errors 
represent concepts points lines attempting express notions distance collinearity leads inefficient query processing traditional database systems 
explicit coding data types sacrifices representational independence 
likewise typically efficient algorithms available computational geometry 
approximate ranked retrieval 
deeper problem existing query languages boolean 
fact record definitely lies query result set 
queries visual applications concerned approximate matches ranked retrieval goal find best answers query rank degree quality 
simple example finding objects near object return list objects ranked distance query object maximum distance maximum number objects 
query optimization 
addition query languages limited concepts operators existing query optimizers prepared take account geometric algorithms spatial temporal indexing ranked retrieval 
may critical issue scaling large systems query optimization frequently orders magnitude impact performance 
extensible visual object stores visual object store object store associated tools facilities provided support representation manipulation storage retrieval visual data 
extensible visual object store number unique features help overcome problems discussed section ffl provide powerful core functionalities answer basic data management needs application including efficient built data types basic storage retrieval ability efficient storage structures access methods query mechanisms complex visual objects 
ffl application programmers provided flexibility add new features needed levels system 
bruce draper eliot moss edward riseman ffl multiple policies implementations available database implementor choose 
ffl buffer management data clustering policies accessible customization fine tuning 
ffl applications lighter weight features visual object store integrated features needed part application unnecessary features turned 
visual information management systems 
similar research effort focused development visual information management systems 
variety application domains types visual data employ continuous vs discrete temporal vs spatial need spectrum single encompassing 
hand applications share basic set common needs need represent manipulate effectively store retrieve visual data 
addressing mutual needs independently application result duplication effort 
extensible visual object store offers exactly needed building application specific support shared basic data management needs 
isr isr extensible visual object store development university massachusetts 
shown isr integration earlier visual data management process integration tool called isr mneme persistent object store developed university massachusetts 
isr intermediate symbolic representation name series symbolic databases visual information developed university massachusetts isr version 
dpi database programming interface visual data management library routines memory persistent data buffer file management persistent data disk server concurrency security visual application address space spatial data structures associative code data service application software storage manager mneme visual data application specific type info data model isr transient data memory isr integration isr mneme 
overview isr spatial geometric representations 
embedded host language isr allows arbitrarily complex objects defined processed provides initial set standard visual representations including single band multi spectral images points lines edges regions points lines surfaces volumes 
object oriented data model uniform complex representations spatially indexed sets line segments histograms image features transparently move isr mneme 
customizable data clustering 
isr offers storage support provides methods customizing mneme buffer management clustering policies application needs 
example database implementor mneme basic capabilities introduce data clustering policies reduce data access delays specific applications storing image region computed features physical segment 
similarly features multidimensional nature geometric image structures clustered disk user specified access patterns efficient access 
example customizing storage access visual applications isr tools visual information management image format image clustered disk sub images brought memory needed demand 
ability significantly reduces number page swaps common image processing operations 
concurrent distributed database operations 
mneme supports concurrent database operations arbitrarily complex objects distributed setting 
provides customizable transaction concurrency support extensible caching clientserver modes operation 
spatial temporal indexing query methods 
isr equipped hierarchy classes provide representations methods associatively spatially organizing accessing sets memory resident objects 
particular geometric objects images spatially stored twodimensional grids retrieved spatial position image 
currently developing persistent versions access methods 
manipulating persistent data techniques significantly reduce data access times index data structures need kept inmemory indexing persistent objects 
visual data reside disk brought memory accessed demand 
access data structures stored disk program termination 
mneme provides standard indexing mechanism tree 
mneme provides database programmer flexible powerful interface building different types indices including spatial indices quad trees trees multi dimensional indices 
general access structure similar generalized search tree gist construction mneme extensible data types index queries support 
adding access mechanisms spatial temporal query languages techniques framework 
temporal index time index optional versioning provided support historical queries 
indices built query languages techniques implemented framework 
extensibility 
isr offers generic solutions lend immediate visual database implementor concurrent distributed storage retrieval ability arbitrarily complex objects 
single generic solution suitable specific needs application dependent data structures query methods indexing mechanisms 
cases isr provides initial set powerful tools leaves database implementor generate representations operators indices query facilities tailored application 
example isr allows encourages user extend initial set representations adding new ones 
visual data types easily defined integrated system isr data definition language ddl see section 
likewise mneme fully accessible building multi dimensional indices tuning buffer management data clustering policies application specific data requirements 
architecture isr isr major components database programming interface dpi isr storage manager sm mneme 
dpi provides data definition language defining visual objects hierarchy visual representations support visual data variety common file formats graphics tools displaying visual data 
provides initial set indexing techniques storing retrieving primarily data 
storage manager hand provides concurrent distributed storage customizable indexing buffer management disk clustering support persistent visual objects 
bruce draper eliot moss edward riseman trihedral junction point line token visual event image integer valued pixels integer valued pixels float valued pixels float valued pixels image color color image gray scale image gray scale image isr object class hierarchy includes representations single band multi spectral images points lines edges regions points lines surfaces volumes 
database programming interface isr object class hierarchy answers representational needs hierarchy representations visual objects 
essential equipped rich set visual representations especially aimed support wide range applications 
shown root isr object hierarchy token basic abstraction visual object 
token defines visual object attributes input output display methods 
isr provides initial set commonly token classes including types images points lines regions edges 
rich initial set tokens may appropriate applications 
likewise originally appropriate representation may adapt evolving set data requirements 
dpi addresses issues allowing modification extension data types 
token really instance class derived token refer instance type token difference clear context 
data definition language ddl provided defining new tokens modifying existing ones ensures new token transparently integrated rest system see section 
similar object hierarchy part image understanding environment 
object oriented environment aims facilitate exchange research results image understanding iu community providing basic data structures operations needed implement iu algorithms 
isr differs emphasizes flexibility simplicity extensibility focus completeness 
isr flexible object hierarchy allows researchers add new objects define object relationship constraints 
hierarchy hand aims provide standard complete class hierarchy specifies visual data type process falls taxonomy 
isr hierarchy kept simple mainly focus visual objects attempt offer uniform treatment data types 
isr objects including complex objects set image curves spatially organized image features guaranteed input output persistent storage display support 
uniform treatment possible complex object hierarchy includes mathematical objects transforms camera models procedural objects tasks 
associative spatial access methods second dpi contribution comes form representations methods associatively spatially organizing accessing sets memory resident objects 
visual objects especially features computed image loosely structured sets groups 
example content query operations related multiply occurring features frequently need treated single entities operations performed support tools visual information management array implementation sets indexed access linked list implementation sets hash table functionality spatial storage retrieval grid set tokens loosely structured token visual event isr provides hierarchy representations associative spatial token organization access 
group image analyst executes polygon finder set lines group features extracted aerial image order form building hypotheses 
extreme operations require isolating elements group satisfy certain desired properties finding image lines orientation lies specified range 
shown dpi serves purposes hierarchy classes derived token called 
set operations range queries defined associative access methods 
particular geometric objects spatially stored dimensional grids retrieved spatial image 
isr extensible grouping techniques oct trees data easily implemented 
flexible visual objects 
third form assistance dpi provides input output support visual data produced operations 
dpi recognized token set tokens output file read back 
methods allow storing tokens ascii binary format files 
ascii format file allows inspection tokens stored binary format compact faster read 
addition isr formats routines support reading writing image files commonly external formats 
common image formats graphics 
set common image formats comprise form support 
visual data types need managed applications images largest prevalent 
consequently images need special attention 
address needs wide variety applications dpi supports commercially available image formats including gif tiff im soon jpeg 
allows image processing image understanding operators widely distributed systems applied isr data 
support smooth integration new operators system dpi provides facilities convert image format 
external dpi isr supplies interactive graphics displaying inspecting system data objects stored files executable called 
isr data definition language ddl way define data types provided isr introduce external language defining characteristics objects convert descriptions preprocessing step class definitions recognized isr 
second approach favored directly define objects syntax 
eliminates preprocessing step need learn separate language object definition 
true ddl powerful expressing object oriented bruce draper eliot moss edward riseman concepts programming language abstractions provided object definition manipulation sufficient satisfy needs typical 
mentioned earlier visual object mapped instance class called token isr 
token type defines global properties objects available operations 
isr objects derive token inherit properties 
definition isr object type takes form class classname public token public presentation support methods name trace draw input output storage manager support methods size traverse pack unpack object public field signature definitions protected definitions visible subclasses classname private private field signature definitions 
objects arbitrary complexity defined definition rule restriction object attributes 
token introduced system set support methods properly manipulated system 
listed support methods need supplied name input output trace draw size traverse pack unpack 
methods easy generate require line code attribute token 
traverse method example visits objects referenced token consists calls system function object class public token public line segment line segment line segment point center segments forming junction junction point traverse tt tt add segment tt add segment tt add segment tt add center add object list objects traversed 
recognized system object included accessed associatively spatially stored retrieved persistent object store output read back file displayed inspected 
storage manager storage manager mneme persistent object store provides storage support complex visual objects 
described section storage manager mainly acts interface maps database programming interface requests objects corresponding mneme requests objects 
actual storage retrieval objects associated buffer disk management carried mneme 
mneme mneme object store aims provide illusion large heap objects directly accessible storage manager 
main abstractions provided mneme storage manager objects object pointers files object pools buffer pools 
mneme views object collection bytes objects 
object uniquely referenced object identifier 
mneme objects grouped units called files 
file special object called root object store information objects support tools visual information management stored file 
files objects logically grouped object pools policy managed 
policies governing management objects pool dictated set routines called strategies 
mneme defines pool strategies users supply specialized strategies 
mneme object member exactly pool pool member exactly file 
mentioned mneme currently supports tree index indexing visual objects disk general customizable access structure construction support different types applicationspecific indexing queries structure 
object storage retrieval mentioned token defined database programming interface isr ddl 
typically token born transient created space dpi 
needs persistent dpi passes token name storage manager request store specific file 
storage request may include clustering parameters near object 
alternatively done automatically inserting object index structure store object way access rapidly 
multiple indices conflicting clustering requirements need kept object multiple copies object optionally object immutable known modified creation 
save storage space reduce database access time isr tokens stored mneme compact format 
isr token stored storage manager maps compressed mneme object 
similarly storage manager retrieves compressed object mneme passing dpi 
pack unpack traverse methods compression decompression required part object ids disk disk store retrieve store retrieve packed token disk dpi sm packed token unpack pack unpack pack simple token composite token storage manager provides interface functions dpi mneme 
ken definition see section storage retrieval support guaranteed isr token including complex objects spatial grid line segments histogram image features 
storage manager acquires pointer mneme object desired file maps token mneme object compressing process 
mneme assigns unique id object 
storage manager accesses object id pointer 
dpi hand access token name 
names stored part object mneme storage manager keeps translation table mneme file convert name id uses id access object 
identifier desired object mneme returns pointer memory resident object 
object previously memory resident brought memory file contains object 
storage manager object isr token passes token dpi 
storage retrieval complicated object stored retrieved objects see composite object 
object bruce draper eliot moss edward riseman converted ids storage back direct pointers retrieval 
performance analysis scheme called copy swizzling thoroughly investigated scope 
storage manager provides methods lock release objects mneme buffers 
mneme guarantees keep object resident time pointer object obtained time release operation performed object 
mneme force released object disk space object 
objects transferred secondary storage program termination 
ensure name id correspondences valid different executions program translation table automatically stored corresponding mneme file program terminates restored file opened 
tile image format isr tile image storage access model achieves improved storage access performance tuning interaction storage manager buffers disk segments 
idea divide image possibly overlapping tiles represent image collection tiles 
tiles stored separate objects brought memory image subregion covered tile accessed 
image tiling strategies straightforward 
example mapping multiple dimensions 
temporal function type site models dimension disk clustering 
shows tile image overlap tiles 
tile image model observation part image accessed time typical applications 
radius project example common divide swizzling refers replacement id memory resident persistent objects direct pointers 
copy swizzling making separate copy object swizzled versus carrying swizzling place object manager buffers 
tile overlap tile size tile overlap moveto cursor tile size tile image tile overlap cursor 
image access sub images functional area site model 
model possible image parts 
desirable especially image fit physical memory sub image read time 
radius images example typically theta larger 
hand memory large accommodate entire image may want limit amount buffer space room left objects building models extracted 
typical applications large images maintain window image keep memory sub image falls window 
model aims take advantage fact images rarely modified creation time 
allows focusing readonly operations optimizing buffer management image data 
example parts image read memory accessed directly mneme buffers creating copy tokens called place swizzling buffer page holding image data recycled having worry writing contents back disk 
created tile image accessed support tools visual information management random access mode scan mode 
access modes represent typical access patterns visual applications 
random access mode cases pixels distant image locations accessed consecutively resulting jump location 
pattern arise example examining pixel values different visual objects image 
scan mode hand convolution image processing operations pixel visited value computed pixel neighbor pixels 
access modes provided cursor window image allows access pixels located window 
random access mode cursor moved location image scan mode allowed move locally left right 
issue related images needs addressed storage retrieval compressed images 
common practice store large images compressed form 
desirable support transparent access images user know image compressed database 
problem arises dealing continuous media video data 
video sequences stored disk compressed form mpeg transparently uncompressed playback 
achieved presenting image video frame application program image compressed null operation 
may want copy swizzle compressed images scheme creates larger copy object case 
motivating examples content image retrieval number current application areas exist immediately benefit isr 
content image retrieval example qbic project 
qbic color texture shape sketch features computed image areas outlined user query time image retrieval 
features consist objects complex histograms reduced resolution edge maps currently stored extensible relational database called starburst 
images hand stored flat files 
achieve better data clustering faster data access images related features stored strategies isr 
isr directly support storage qbic objects need disk data format transformations current transformation tuples objects 
second image features associated image region came stored retrieved sub image 
useful qbic especially wants see features selected image region 
accessing region retrieve corresponding features displayed 
feature indexing capability critical qbic 
current tree index fast object retrieval different types multi dimensional indices built incorporated isr 
indices query mechanisms implemented 
site models photo interpretation intelligence gathering operations provide applications 
example radius project developing image understanding iu tools image analysts support automated cite model acquisition model extension change detection 
typical scenario analysts build folder image data intelligence site 
information analysts form map functional areas site including features typical number bruce draper eliot moss edward riseman cars parking lot 
models permanent structures area built 
site model developed images intelligence reports compared set processes called change detection analysts search temporal change functional areas features structures site 
geometric site models plus collateral information text maps representative imagery need stored fashion allows efficient data retrieval change detection programs interactive query support photo analysts military planners 
currently radius testbed database stores complex objects geometric models collateral data imagery information relational dbms sybase image pixel data stored flat files 
isr allow radius features grouped stored retrieved functional areas 
images partitioned functional areas subimages clustered disk associated features 
addition fast access image objects approach leads better buffer management especially large aerial site images restricts data movement small relevant portion image 
radius images typically theta pixels larger efficient buffering mechanisms required 
qbic spatial indices query languages built isr answer interactive queries analysts planners set images give ones new structure give image folder site building appears time 
support historical time queries functional areas linked time form spatio temporal sequence site structures indexed 
similar manner isr support applications visual representations operators storage management including astronomy sky survey databases geographic environmental information management cad tools medical imaging 
visual applications need efficiently represent manipulate store retrieve raw processed persistent visual data 
extensible visual object stores offer effective means address data management needs visual applications 
isr extensible visual object object store offer extensive storage retrieval support complex large visual data customizable buffering clustering spatial temporal indexing 
doing provide variety multi dimensional access methods query languages 
query optimization approximate ranked query methods planned additions 
draper beveridge hanson 
isr database symbolic processing computer vision 
ieee computer 
editors christensen crowley 
experimental environments computer image processing 
world scientific 
draper 
isr user manual 

schek 
data space partitioning variable sized storage clusters 
advances spatial databases proceedings rd international symposium ssd pages 
elmasri wuu kim 
time index access structure temporal data 
proceedings conference large databases pages august 
support tools visual information management niblack qbic project querying images content texture shape 
spie storage retrieval image video databases volume pages 
le gall 
mpeg video compression standard multimedia applications 
communications acm april 
hellerstein naughton pfeffer 
generalized search trees database systems 
technical report university wisconsin madison october 

radius testbed database issues design 
monterey ca volume pages nov 
jain 
workshop report nsf workshop visual information management systems 
spie storage retrieval image video databases volume pages 
lohman lindsay pirahesh 
extensions starburst objects types functions rules 
communications acm 
moss 
working persistent objects swizzle swizzle 

software engineering 
moss hosking brown 
mneme user guide 
eliot moss 
design mneme persistent object store 
acm transactions information systems april 
mundy committee 
image understanding environment overview 
washington pages april 
mundy welty strat 
radius common development environment 
san diego ca pages jan 

application development environment 
pages 
sarawagi stonebraker 
efficient organization large multidimensional arrays 
international conference data engineering volume pages 
williams 
image understanding tools 
icpr atlantic city number pages june 
bruce draper eliot moss edward riseman 
