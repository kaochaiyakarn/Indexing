published international conference software maintenance icsm august th september rd oxford england 
short 
published full proceedings 
full printed conference booklet provided attendees 
visualising software akey research area claire knight malcolm munro visualisation research group research institute software evolution 
department computer science university durham durham dh le uk 
knight malcolm munro durham ac uk keywords software visualisation metaphors program comprehension software maintenance visualisation software systems long investigated primarily graph structures representing aspects system consideration 
claimed visualisation successful size complexity software true purely graph displays 
auxiliary discussions including areas intelligence amplification metaphors discussed detail 
information reader referred www dur ac uk dcs documents tec report ps gz 
position case dimensional visualisations try overcome problems starting point brooks comments software going unsuccessful attempts visualise graphs 
poses question visualisations successful true say software visualisation ability successful useful tool 

visualisation long illustrate facts programs software systems graphically years visualisation research moved consider dimensions 
consideration structures graphs dimensional spaces newer concept 
traditional graphs example call graphs visualisation community seen facet useful techniques 
sheer size complexity modern systems legacy systems years evolution maintenance illustrate shortcomings graph structured approach cluttered confusing pictures generated 
whilst dimensions display techniques going magically remove problems provide reason investigate visualisation styles methods 
proponents graph displays known research purely basis lack empirical evidence benefit dimensions 
whilst evidence short supply software maintenance program comprehension fields psychological information reused studies relating graphics colours navigation general information visualisation 

software visualised 
silver bullet brooks wrote software invisible software difficult 
diagrams control flow variable scope nesting variable cross dataflow hierarchical data structures feels dimension interlocked software elephant 
diagrams generated relevant views difficult extract global overview 
points valid overcome minimised mean software visualisation possible effective 
theoretically answer considerations concessions visualisation effective communicating information viewer 
excerpt visualisations referred brooks graph data sets displayed visually 
time brooks writing visualising software meant displaying information aspect software graph structure 
need case advances computer hardware graphics technology 
seen brooks valid point problem visualising complex pieces software graphs 
call graph commercial system shows call graph small maintained commercial system 
visual information system clear new techniques visualisation needed 
visualisation possibility powerful tool software engineers maintainers 
sections information main areas visualisation considers visualisation software feasible brooks comments hold true 

visualisation hypothesis premise visualisation possible effective 
detailed arguments supporting premise knight munro consider brooks comments existing dimensional newer dimensional approaches intelligence amplification metaphors 
definition visualisation remainder software visualisation discipline various forms imagery provide insight understanding reduce complexity existing software system consideration 
definition justifications various parts defined knight full 
basis definition term visualisation restricted computer images visualisation purpose help users investigate complexity 
real world visualisations visualisation programs done date nature geometrical shapes dimensions possibly differing colours represent elements program code 
shown simply transferring traditional dimensional graphs dimensional space generate effective usable visualisations cases 
dimensional visualisations moves away graph oriented displays example seen 
documented detail young briefly shows modules software system laid calling structure program 
modules detailed information seen top module blocks 
visualisation real world visualisations rely metaphors mappings translate data items elements everyday human world 
data items visualised mappings create scene glance appear alien human eye 
commonality scene allows thought analysis directed underlying data example incompatibilities scene real world indicate certain properties underlying data 
example real world software visualisation documented knight munro example seen :10.1.1.34.7599
software world visualisation uses city metaphor represent software system buildings represent methods doors windows buildings representing number local variables number parameters method respectively 
software world real world visualisation whilst real world approaches differ representations complimentary systems visualisations 
solutions visualisation problem encompass elements 
underlying data set effect visualisation style utilised 
program code style acceptable software intangible tangible data actual data values may indicate style 
de jong note visualisation thing right view 

visualisation possible 
comments section brooks writes geometric reality captured geometric abstraction 
reality software inherently embedded space 
ready geometric representation way land maps silicon chips diagrams computers connectivity schematics 
tends suggest metaphors real world mappings software 
precisely software metaphors abstractions powerful technique 
say successful visualisation mapping implementation mapping easy task 
problems associated visualisations forms 
basic visualising code deciding best mappings language elements metaphor 
knight munro point difficult problems dealing possible range data items visualised :10.1.1.34.7599
hardest problem visualising theoretically visualisation able deal range items infinity 
massive range means automation layout algorithms dimensional visualisations hard problems 
means visualisations need defined mind provide way dealing large numbers indicating fact user 
sizing issue hindrance metaphor reason investigation visualisations 
brooks writes spite progress restricting simplifying structures software remain inherently mind powerful conceptual tools 
lack impedes process design mind severely hinders communication minds 
link intelligence amplification power metaphor able bring visualisations 
information possible conclude software visualisation especially newer techniques threedimensional non graph imagery feasible research area 
visualisations software dimensions explicitly draw form graph node arc structure sort research encouraged 
doing valid criticisms brooks avoided complexity software system portrayed hindering comprehension 
partly financed epsrc studentship 
brooks 
silver bullet 
ieee computer april pp 
knight munro :10.1.1.34.7599
comprehension virtual environment visualisations 
proceedings ieee th international workshop program comprehension pittsburgh pa may pp 
young munro 
visualising software virtual reality 
proceedings ieee th international workshop program comprehension italy june pp 
lynch 
image city 
press harvard university press cambridge massachusetts 
de jong 
visualization software architectures 
communications acm december vol 
pp 
knight 
visualisation program comprehension information issues 
university durham computer science technical report 
www dur ac uk dcs documents survey tech reports tech report ps gz knight munro 
visualising software key research area 
university durham computer science technical report 
www dur ac uk dcs documents te ch report ps gz 
