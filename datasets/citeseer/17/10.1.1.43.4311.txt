reconfigurable computing digital signal processing survey russell tessier wayne department electrical computer engineering university massachusetts amherst ma 

april steady advances vlsi technology design tools extensively expanded application domain digital signal processing past decade 
application specific integrated circuits asics programmable digital signal processors remain implementation mechanisms choice dsp applications increasingly new system implementations reconfigurable computing considered 
flexible platforms offer functional efficiency hardware programmability software quickly maturing logic capacity programmable devices follow moore law advanced automated design techniques available 
initial reconfigurable technologies emerged new academic commercial efforts initiated support power optimization cost reduction enhanced run time performance 
presents survey academic research commercial development reconfigurable computing dsp systems past fifteen years 
placed context available dsp implementation media including asics fully document range design choices available system engineers 
shown contemporary reconfigurable computing applied variety dsp applications including video audio speech control remains realize full potential 
individual implementations asic reconfigurable resources offer distinct advantages integrated combinations technologies provide complete solutions 
keywords signal processing reconfigurable computing fpga survey 
history computing digital signal processing applications pushed limits compute power especially terms real time computation 
processed signals broadly ranged speech audio video waveforms specialized radar sonar data calculations performed signal processing systems exhibited basic computational characteristics 
inherent data parallelism dsp functions dsp algorithms ideal candidates hardware implementation leveraging expanding vlsi capabilities 
dsp received increased attention due rapid advancements multimedia computing high speed wired wireless communications 
response advances search novel implementations arithmetic intensive circuitry 
application areas span broad spectrum basic computational parameters dsp operations remain need real time performance operational parameters target system cases need adapt changing data sets computing conditions 
general goal high performance systems ranging low cost embedded radio components special purpose ground radar centers driven development application domain specific chip sets 
development financial article abridged forthcoming marcel dekker publication programmable digital signal processors hu editor 
programmability specialization reconfigurable hardware asic programmable dsp general purpose processor dsp implementation spectrum 
cost approach large motivating need new approaches computer architecture offer computational attributes fixed functionality architectures package customized field 
second goal system adaptability generally addressed software programmable commodity digital signal processors 
platforms enable flexible deployment due software development tools great economies scale application designers compilers customize processing approach available computing resources 
flexibility comes cost performance power efficiency 
shown reconfigurable computers offer compromise performance advantages fixed functionality hardware flexibility software programmable substrates 
asics systems distinguished ability directly implement specialized circuitry directly hardware 
additionally programmable processors reconfigurable computers contain functional resources may easily modified field deployment response changing operational parameters data sets 
date core processing element reconfigurable computers field programmable gate array fpga 
bit programmable computing devices offer ample quantities logic register resources easily adapted support finegrained parallelism pipelined dsp applications 
current logic capacities exceeding gates device substantial logic functionality implemented programmable device 
appropriate classes implementations fpgas represent possible implementation range possible reconfigurable computing building blocks 
number reconfigurable alternatives presently evaluation academic commercial environments 
survey evolution reconfigurable computing regard digital signal processing considered 
study includes historical evaluation reprogrammable architectures programming environments support dsp applications 
chronology supported specific case studies illustrate approaches address implementation constraints system cost performance power consumption 
seen technology progressed richness applications supported reconfigurable computing performance reconfigurable computing platforms improved dramatically 
reconfigurable computing dsp remains active area research need integration traditional dsp technologies apparent goal automated high level compilation dsp increases importance 
organization follows 
section brief history issues techniques involved design implementation dsp systems described 
section presents short history reconfigurable computing 
section describes reconfigurable computing promising approach dsp systems 
section serves provides history application various reconfigurable computing technologies dsp systems discussion current state art 
conclude section predictions reconfigurable computing digital signal processing 
predictions formulated extrapolating trends reconfigurable technologies describing dsp applications performance cost power flexibility design effort asic high high low low high programmable dsp medium medium medium medium medium general purpose processor low low medium high low reconfigurable hardware medium medium high high medium table dsp implementation comparison 
may targeted reconfigurable hardware 
definitions definitions describe various attributes related reconfigurable computing ffl reconfigurable adaptive context reconfigurable computing term indicates logic functionality interconnect computing system device customized suit specific application post fabrication user defined programming 
ffl run time dynamically reconfigurable system logic functionality interconnect connectivity modified application execution 
modification may data driven statically scheduled 
ffl fine grained parallelism logic functionality interconnect connectivity programmable bit level 
resources encompassing multiple logic bits may combined form parallel functional units 
ffl specialization logic functionality customized perform exactly operation desired 
example synthesis filtering hardware fixed constant value 
background dsp implementation dsp system implementation choices early goals driven development dsp implementations 
data parallelism 
application specific specialization 
functional flexibility 
general design decisions regarding dsp system implementation require tradeoffs system goals 
result wide variety specialized hardware implementations associated design tools developed dsp including associative processing bit serial processing line arithmetic systolic processing 
implementation technologies available basic approaches matured meet needs application designers 
shown table various cost metrics developed compare quality different dsp implementations 
performance frequently critical system requirement dsp systems demanding real time constraints 
past decades cost significant dsp migrated predominantly military scientific applications numerous low cost consumer applications 
past years energy consumption important measure dsp techniques widely applied portable battery operated systems cell phones cd players laptops 
flexibility emerged key dsp implementations allows changes system functionality various points design life cycle 
results cost tradeoffs resulted primary implementation options including application specific integrated circuits asics programmable digital signal processors general purpose microprocessors reconfigurable hardware 
implementation option presents different trade offs terms performance cost power flexibility 
specialized dsp applications system implementation include application specific integrated circuits meet performance power constraints 
asic design cycles remain long trend automated synthesis verification tools simplifying high level asic design 
asic specification done behavioral register transfer level functionality performance asics easier represent verify 
important trend pre designed cores defined functionality 
cores fact risc microcontrollers software written stored chip 
asics significant advantage area power high volume designs cost gate performance level high speed commodity fpgas 
characteristics especially important power aware functions mobile communication remote sensing 
unfortunately fixed nature asics limit reconfigurability 
designs adapt changing data sets operating conditions software programmable components included target system reducing available parallelism 
additionally low volume prototype implementations costs related asic may justify improved performance benefits 
application domain programmable digital signal processors identified tracing development lineage 
thorough summaries programmable dsps 
programmable digital signal processors introduced texas instruments 
initial processor architectures primarily cisc pipelines augmented handful special architectural features instructions support filtering transform computations 
significant changes second generation adaptation harvard architecture effectively separating program bus data bus 
optimization reduced von neumann bottleneck providing path data local memory processor pipeline 
early dsps allowed programs stored chip rom supported ability chip accesses instruction capacity exceeded 
dsps coefficient roms recognizing opportunity exploit relatively static nature filter transform coefficients 
contemporary digital signal processors highly programmable resources offer capability field update processing standards change 
parallelism extensive generally consists overlapped data fetch data operation address calculation 
instruction set modifications specialize signal processing 
addressing modes provided simplify implementation filters transforms general control overhead loops minimized 
arithmetic instructions fixed point computation allow saturating arithmetic important avoid overflow exception oscillations 
new hybrid dsps contain variety processing features including parallel processing interfaces vliw function unit scheduling flexible data paths 
addition numerous special purpose memories chip dsps achieve high bandwidth moderate extent reconfigurable interconnect 
due volume usage parts costs reduced commonly interfaces included 
addition benefits dsp specific limitations 
general optimal performance applications written utilize resources available dsp 
high level compilation systems perform function available difficult get exactly mapping desired 
additionally interface memory may appropriate specific applications creating bandwidth bottleneck getting data functional units 
characterized dsp mass commercial market 
dsp transition fairly academic acronym seen widely advertisements consumer electronics software packages 
battle dsp market primarily manufacturers asic vendors developers types general purpose processors desk top microprocessors high microcontrollers 
general purpose processors intel pentium provide signal processing needed desktop applications audio video processing especially host microprocessor resident system highly optimized extensive software development tools 
general purpose desk top processors realistic alternative embedded systems due cost lack power efficiency implementing dsp 
category general purpose processors high microcontroller 
chips dsp applications presenting system designers straightforward implementation solutions useful data interfaces significant application level flexibility 
dsp hardware implementation compromise developed development domain specific standard products programmable asic formats 
community determined certain applications high volume worthwhile tailor particular domain specific markets 
led availability inexpensive commodity silicon allowing users provide application differentiation software 
asics developed general functions mpeg decoding standards set allow large number applications basic function 
reconfigurable computing platforms dsp offer intermediate solution asics general domain specific processors allowing reconfigurable specialized performance application basis 
emerging technology primarily applied experimental commercial systems application level potential reconfigurable platforms great 
examination needs contemporary dsp applications current trends application reconfigurable computing dsp explored 
changing world dsp applications past years application space digital signal processing changed substantially motivating new systems area reconfigurable computing 
new applications time span changed definition dsp created new different requirements implementation 
example today market dsp human computer interfaces sound cards video cards speech recognition systems application areas limited practical significance just decade ago 
human integral part systems different processing requirements contrast communications front ends dsl modems cdma receiver chips qualcomm 
large application dsp read circuitry hard drive cd dvd storage systems 
dsp algorithms modems system constraints quite different 
consumer products extensive dsp low cost low power implementations 
wireless multimedia hottest topics consumer electronics rely heavily dsp implementation 
cellular telephones gsm cdma currently largely enabled custom silicon trends implementation media growing 
modems dsl cable lans wireless rely sophisticated adaptive equalizers receivers 
satellite set top boxes rely dsp satellite reception channel decoding mpeg decoder asic video decompression 
set top box dvd player emerged fastest growing consumer electronics product 
dvd player relies dsp avoid intersymbol interference allowing bits packed area disk 
commercial video market digital cameras rapidly affordable alternatives traditional analog cameras largely supported photo editing authoring software web 
development large set dsp systems driven indirectly growth consumer electronics 
systems include switching stations cellular terrestrial satellite cable infrastructure cameras authoring studios encoders content production 
new military scientific applications applied digital battlefield including advanced weapons systems remote sensing equipment rely dsp implementation operate reliably adverse resource limited environments 
existing dsp implementation choices suitable consumer military driven applications higher performance efficiency flexibility needed driving current interest reconfigurable solutions 
applications data processing considerably sophisticated traditional filters transforms characterized dsp 
general performance grown importance data rates increased algorithms complex 
additionally increasing demand flexible diverse functionality environmental conditions workloads 
power cost equally important critical system cost performance 
new approaches application specific dsp implementation developed research community years application practice limited market domination reluctance designers expose schedule risk sensitive asic projects non traditional design approaches 
combination new design tools increasing intellectual property cores dsp implementations allowed ideas find wider 
implementation choices include systolic architectures alternative arithmetic rns lns digital serial optimization parallelizing transformations memory partitioning power optimization techniques 
design tools proposed close gap software development hardware development hybrid dsp implementations 
subsequent sections seen tools helpful defining appropriate application reconfigurable hardware existing challenges dsp 
cases basic design techniques develop asics domain specific devices re applied customize applications programmable silicon limitations implementation technology account 
brief history reconfigurable computing mid field programmable gate arrays fpgas subject extensive research experimentation 
section reconfigurable device architecture system integration investigated eye identifying trends lead century 
summary pre clr ce pre ce clr look table look table carry carry preset clk clk enable reset pre clr ce pre ce clr look table look table carry carry preset clk clk enable reset logic block slice slice simplified xilinx virtex logic block 
logic block consists lut slices 
provides sufficient background evaluate impact reconfigurable hardware dsp sections thorough discussions fpgas reconfigurable computing 
field programmable devices modern era reconfigurable computing commercial sram fpgas xilinx 
early reprogrammable devices subsequent offerings xilinx altera contain collection fine grained programmable logic blocks interconnected wires programmable switches 
logic functionality block specified small programmable memory called lookup table driven limited number inputs typically generates single boolean output 
additionally logic block typically contains flip flops fine grained storage 
early fpga architectures contained small numbers logic blocks typically new device families quickly grown capacities tens thousands lookup tables containing millions gates logic 
shown fine grained lookup table flip flop pairs frequently grouped tightly connected coarse grained blocks take advantage circuit locality 
interconnection logic blocks provided series wire segments located channels blocks 
programmable pass transistors multiplexers provide block segment connectivity segment segment connections 
interest reconfigurable computing spurred development maturation field programmable gate arrays 
development systems fpgas greatly enhanced exponential growth rate gate capacity reconfigurable devices improved device performance due shrinking die sizes enhanced fabrication techniques 
shown reported gate counts lut fpgas companies xilinx roughly followed moore law past decade increase capacity enabled complex structures multi tap filters small risc processors implemented directly single fpga chip 
time period system performance devices improved exponentially 
mid system level fpga performance mhz considered acceptable today lut fpga designs frequently approach performance levels mhz 
programmable nature reconfigurable devices performance penalty circuit implemented reprogrammable technology versus direct asic implementation generally order factor 
practice usable gate counts devices significantly lower reported data book values 
generally proportion device logic usable remained roughly constant years indicated 
xilinx fpgas xilinx fpgas xilinx virtex xilinx virtex proposed year fpga device gate count growth fpga gate capacity 
early reprogrammable systems soon commercial fpga computer architects began devising approaches leveraging new programmable technology computing systems 
summarized evolution reconfigurable computing significantly shaped influential projects splash ii programmable active memories pam 
projects addressed important programmable system issues regarding programming environment user interface configuration management applying pre existing computational models areas special purpose statically scheduled communication reconfigurable computing 
splash ii multi fpga parallel computer uses orchestrated systolic communication perform data transfer 
board multi board splash ii system contains xilinx xc series fpga processors associated sram 
multi fpga predecessor splash limited strictly near neighbor systolic communication splash ii board contains inter fpga multi hop data transfer broadcast 
software development system typically involves creation vhdl circuit descriptions individual systolic processors 
designs meet size performance constraints target fpgas 
processor creation high level inter fpga scheduling software ensure system wide communication synchronized 
general system dynamically reconfigured operation 
applications simd characteristics compiler created automatically partition processing fpgas synchronize interfaces local 
numerous dsp applications mapped splash ii including audio video algorithm implementations 
applications described greater detail section 
programmable active memory systems contain arrangements fpga processors dimensional mesh memory devices aligned array perimeter 
pams designed create architectural appearance functional memory host microprocessor pam programming environment reflects 
programming standpoint multi fpga pam accessed memory interface fpga written values treated inputs read values results 
designs generally targeted pams hand crafting design sub tasks appropriately sized fit fpga 
pam array successor pamette interfaced host workstation backplane bus 
additional discussion pams regard dsp applications appears section 
reconfigurable computing research directions important aspect reconfigurable devices ability reconfigure functionality response changing operating conditions application data sets 
sram fpgas supported slow millisecond recon figuration rates time devices created allow rapid device reconfiguration run time 
dynamically reconfigurable fpgas contain multiple interconnect logic configurations programmable location reconfigurable device 
architectures designed allow configuration switching small number system clock cycles measuring nanoseconds milliseconds 
dpga devices developed research environments currently commercially available due large overhead costs associated required large configuration memory 
promote reconfiguration lower hardware cost commercial fpga families introduced allow fast partial reconfiguration fpga functionality chip memory resources 
significant challenge development compilation software partition schedule order computation take place determine circuitry changed 
preliminary area completed advanced tools needed fully leverage new hardware technology 
software approaches applied dynamic reconfiguration include definition hardware subroutines dynamic reconfiguration instruction sets 
high level compilation microprocessors active research area decades development compilation technology reconfigurable computing infancy 
compilation process systems complicated lack identifiable coarse grained structure fine grained fpgas dispersal logic resources pin limited reconfigurable devices single computing platform 
particular reconfigurable computers contain multiple programmable devices design partitioning forms important aspect compilation systems 
compilation systems reconfigurable hardware followed traditional multi device asic design flow involving pin constrained device partitioning individual device synthesis rtl compilation 
overcome pin limitations achieve full logic utilization device basis approach excessive internal device interconnect counts needed 
hardware virtualization approach outlined promotes high device logic utilization 
design partitioning placement inter fpga wires scheduled inter device wires compiler determined time slices allowing pipelining communication 
inter device pipelining forms basis fpga system compilation approaches start behavioral level 
high level synthesis technique described outlines inter fpga scheduling rtl level 
functional allocation performed takes account amount logic available target system available inter device interconnect 
combined communication functional resource scheduling performed fully utilize available logic communication resources 
inter fpga communication fpga memory communication virtualized recognized memory inter fpga bandwidth frequently critical resource reconfigurable systems 
promise reconfigurable computing dsp motivations goals reconfigurable computing consistent needs signal processing applications 
seen section deployment dsp algorithms reconfigurable hardware aided advancement fields past fifteen years 
general direct benefits reconfigurable approach dsp summarized critical areas functional specialization platform reconfigurability fine grained parallelism 
specialization stated section programmable digital signal processors optimized deliver efficient performance set signal processing tasks 
specific implementation tasks modified software applications frequently customized meet specific processor architectural aspects cost performance 
currently dsps remain inherently sequential machines parallel vliw multi function unit dsps developed 
reconfigurable hardware numerous advantages signal processing systems 
applications digital filtering possible customize irregular datapath widths specific constant values directly hardware reducing implementation area power improving algorithm performance 
additionally standards change modifications quickly reimplemented hardware expensive costs 
reconfigurable devices contain sram controlled logic interconnect switches application programs form device configuration data downloaded application basis 
effectively single wide program instruction defines hardware behavior 
contemporary reconfigurable computing devices little cost shelf development tools design synthesis layout 
reconfigurable implementations may exhibit performance reduction compared circuit implemented custom logic limited manual intervention generally needed map design reconfigurable device 
contrast substantial costs require asic designers focus high speed physical implementation involving hand tuned physical layout design verification 
time consuming asic implementation tasks lead longer time market windows increased inventory effectively critical path link system design chain 
reconfigurability reconfigurable devices systems contain sram programmable memory allow full logic interconnect reconfiguration field 
despite wide range system characteristics dsp systems need configurability variety constraints 
constraints include environmental factors changes statistics signals noise channel weather transmission rates communication standards 
factors data traffic interference change quite rapidly factors location weather change relatively slowly 
factors regarding communication standards vary infrequently time geography limiting need rapid reconfiguration 
specific ways dsp directly benefit hardware reconfiguration support factors include ffl field customization reconfigurability programmable devices allows periodic updates product functionality advanced vendor firmware versions available product defects detected 
field customization particularly important face changing standards communication protocols 
asic implementations reconfigurable hardware solutions generally quickly updated application demands need manual field upgrades hardware swaps 
ffl slow adaptation signal processing systems reconfigurable logic may need periodically updated course daily operation variety constraints 
include issues variable weather operating parameters mobile communication support multiple time varying standards stationary receivers 
ffl fast adaptation communication processing protocols require nearly constant re evaluation operating parameters benefit rapid reset computing parameters 
issues include adaptation time varying noise communication channels adaptation network congestion network configurations speculative computation changing data sets 
parallelism abundance programmable logic facilitates creation numerous functional units directly hardware 
characteristics fpga devices particular especially attractive digital signal processing systems 
fine grained parallelism devices matched high sample rates distributed computation required signal processing applications areas image audio speech processing 
plentiful fpga flip flops desire achieve accelerated system clock rates led designers focus heavily pipelined implementations functional blocks inter block communication 
highly pipelined parallel nature dsp tasks image speech processing implementations exhibited substantially better performance standard 
general systems implemented task functional unit pipelining 
dsp systems featured bit serial functional unit implementations systolic inter unit communication take advantage synchronization resources contemporary fpgas need software instruction fetch decode circuitry 
detailed section bit serial implementations particularly attractive due reduced implementation area 
reconfigurable devices increase size nibble serial parallel implementations functional units emerged effort take advantage data parallelism 
additions reconfigurable architectures aided suitability signal processing 
architectures included bit sram banks store small amounts intermediate data 
allows parallel access data distributed computation 
important addition reconfigurable architectures capability rapidly change small portions device configuration disturbing existing device behavior 
feature leveraged help adapt signal processing systems 
ain bin carry sum bit serial adder bit bit serial bit serial adder multiplier 
reduce power 
speed adaptation may vary depending specific signal processing application area 
history reconfigurable computing dsp appearance reconfigurable computing systems dsp applications served important test cases reconfigurable architecture software development 
section wide range dsp design approaches applications mapped functioning reconfigurable computing systems considered 
stated design complete dsp systems stressed including memory interfacing high level compilation real time issues mapping individual benchmark circuits 
reason large number fpga implementations basic dsp functions filters transforms implemented directly system hardware omitted 
consideration history dsp reconfigurable computing roughly chronological noted trends initially investigated number years ago 
trace trends advancements directly contrasted early contributions 
fpga implementation arithmetic soon fpga mid interest developed devices dsp especially digital filtering take advantage specialized constants embedded hardware 
large portion filtering approaches involves multiplication efficient multiplier implementations fixed floating point particular interest 
early fpga multiplier implementations circuit structures adapted early days lsi development reflected restricted circuit area available initial fpga devices 
fpga capacities increased diversity multiplier implementations grown 
fpga bit serial arithmetic extensively implement fpga multiplication 
shown taken bit serial multiplication implemented linear systolic array suited fine grained nature fpgas 
data values input multiplier including parallel value bits input simultaneously sequential value values input serially 
general data sampling rate value clock cycles supported input word length 
cell systolic array typically implemented logic blocks similar shown 
bit serial approaches advantage communication demands independent word length 
result low capacity fpgas efficiently implement 
pipelined nature bit serial multipliers implemented fpgas typically possess excellent area time products 
bit serial formulations applied finite impulse response filtering 
special purpose bit serial implementations included canonic signed digit power sum difference 
dual lookup tables small memories distributed arithmetic da effective implementation choice lut fpgas 
possible group multiple luts larger ram rom bits data addr ram rom bits data addr bit adder product product input distributed arithmetic multiplier 
fanout memory large luts da easily created 
general distributed arithmetic requires embedding fixed input constant value hardware allowing efficient pre computation possible dot product outputs 
example distributed arithmetic multiplier taken appears 
seen fast adder sum partial products nibble look 
cases may effective implement luts rams new constants written execution program 
promote improved performance parallel arithmetic implementations fpgas formulated 
general parallel multipliers implemented lut fpgas achieve speedup performance compared bit serial counterparts area penalty 
specific parallel implementations multipliers include carry save implementation systolic array cordic arithmetic pipelined parallel 
fpga system development interest upgrading accuracy calculation performed fpgas particularly floating point arithmetic 
general floating point operations difficult implement fpgas due complexity implementation amount hardware needed achieve desired results 
applications requiring extended precision floating point necessity 
initial attempt develop basic floating point approaches fpgas met ieee standards addition multiplication 
area performance considered various fpga implementations including shift add carry save combinational multiplier 
similar explored applied bit wide floating point adders multipliers fft systolic fir filters implemented splash ii avoid overflow underflow fixed point formats 
extended full bit floating point multipliers bit parallel adders digit serial multipliers 
re examines issues eye greater area efficiency 
reconfigurable dsp system implementation research reconfigurable computing focused advanced issues dynamic reconfiguration special purpose architecture date focused effective application parallelization specialization 
general number different dsp applications mapped reconfigurable computing systems containing fpga devices 
section number dsp projects mapped reconfigurable hardware described 
implementations represent broad set dsp application areas serve starting point advanced research years come 
image processing applications pipelined fine grained nature reconfigurable hardware particularly match image processing applications 
real time image processing typically requires specialized data paths pipelining implemented fpga logic 
number projects focused application area 
set image processing tasks mapped splash ii platform described section outlined 
tasks gaussian pyramid image compression image filtering transforms image conversion dft operations discussed 
subsequently extended include dct implemented splash ii platform 
distributed construction stand splash ii system containing numerous physical ports shown particularly useful achieving high data rates 
splash ii effective implementing systolic versions algorithms require repetitive tasks data shifted linear array image data quickly propagated processing pipeline 
targeted image processing applications generally implemented block systolic computations fpga operating systolic processor groups fpgas performing specific tasks 
additional reconfigurable computing platforms perform image processing tasks 
commercial version pam pamette interfaced ccd camera liquid crystal filter perform solar 
activity application effectively synchronized software alpha workstation 
multi fpga systems process dimensional volume visualization data ray casting 
implementations show favorable processing characteristics compared traditional microprocessor systems 
system described dimensional dct implemented single fpga device attached backplane bus processing card 
algorithm implementation uses distributed arithmetic initially coded vhdl subsequently compiled rtl synthesis tools 
commercial multi fpga system described applied spatial median filtering 
application pci fpga board convolution 
system implemented single fpga processing board described performs image interpolation 
system primarily uses bit serial arithmetic exploits dynamic reconfiguration quickly swap portions computation located reconfigurable hardware 
computational task similar computational structure reconfiguration time fpga minimal 
video processing applications image processing video processing requires substantial data bandwidth processing capability handle data obtained analog video equipment 
support need reconfigurable computing platforms adapted video processing 
pam system described section platform video applications 
pam system programmed perform stereo vision applied applications requiring dimensional elevation maps needed planetary exploration 
stereo matching algorithm implemented shown substantially faster programmable dsp approaches 
implementation employed dynamic reconfiguration requiring reconfiguration programmable hardware distinct processing tasks run time 
smaller single fpga system described focused primarily block motion estimation 
system tightly coupled sram single fpga device allow rapid data transfer 
interesting application fpgas video computation described 
stereo transform implemented fpga devices aligning images determine depth images 
scan lines data streamed adjacent memories processing fpgas perform comparison 
illustration benefit single fpga video system processing platform described transputer tightly coupled fpga device perform frame object tracking 
single fpga video coder reconfigured dynamically different sub functions motion estimation dct quantization described 
key idea project data located hardware move functions operate reconfigured place 
audio speech processing audio processing typically requires bandwidth video image processing audio applications benefit datapath specialization pipelining 
illustrate point sound synthesizer implemented multi fpga pam system producing real time audio different voices khz 
primarily designed additive synthesis techniques lookup tables implementation included features allow frequency modulation synthesis nonlinear distortion sampling machine 
physical implementation pam stand processing system facilitated interfacing tape audio amplifiers 
system setup shown order magnitude faster contemporary shelf dsp 
smaller projects contributions audio speech processing areas 
methodology described perform audio processing dynamically reconfigurable fpga 
audio echo production facilitated dynamically swapping filter coefficients parameters device adjacent sram 
third party dsp tools generate coefficients 
fpga cross correlator radio astronomy described 
system achieves high processing rates mhz inside fpga heavily pipelining aspect data computation 
support speech processing bus multi fpga board tabula rasa programmed perform markov searches speech 
system particularly interesting allowed behavioral partitioning contained codesign environment specification synthesis simulation evaluation design phases 
target recognition important dsp application applied splash ii target recognition 
support application images broken columns compared pre computed templates stored local memory pipelined video data 
described section near neighbor communication splash ii compare pass pixels stored templates form partial sums 
image broken pieces splash ii implementation performs second level detection roughly identifying sections sub images conform objects templates 
general fpgas provides unique opportunity quickly adapt target recognition new algorithms possible asics 
fpga implementation target recognition researchers broke images pieces called chips analyzed single fpga device 
swapping target templates dynamically range targets may considered 
achieve high performance design templates customized meet details target technology 
communication coding modern communication systems signal noise ratios data coding important aspect communication 
result convolutional coding improve signal noise ratios constraint length codes increasing power budget 
reconfigurable computing systems configured aid transmission receipt data 
applications reconfigurable hardware communications involved pam project 
board pam system ram trace possible states viterbi encoder allowing computation states clock cycle 
flexibility system allowed quick evaluation new encoding algorithms 
run length viterbi decoder described created implemented large reconfigurable system containing fpga devices 
constraint length decoder able achieve decode rates mbit single fpga system described supports variable length code detection video transfer rates 
reconfigurable computing architecture compiler trends dsp past decade large majority reconfigurable computing systems targeted dsp commercial fpga devices programmed rtl structural hardware description languages 
architectural programming methodologies sufficient initial prototyping advanced architectures programming languages needed 
advancements especially needed support advanced features dynamic reconfiguration high level compilation years 
section trends reconfigurable computing dsp regard architecture compilation explored 
near term research advancement important areas breadth dsp applications appropriate reconfigurable computing increase 
architectural trends commercial fpga architectures optimized perform efficiently broad range circuit domains 
architectures changed better suit specific application areas 
specialized fpga architectures dsp fpga architectures specifically designed dsp proposed past decade 
fine grained programmable architecture considered uses customized lut logic cell 
cell optimized efficiently perform addition multiplication inclusion xor gates lut logic blocks 
additionally device inter cell wire lengths customized accommodate local global signal interconnections 
specialized dsp operator array detailed 
architecture contains linear array adders connected programmable bus shown efficiently implement fir filters 
basic cell lut fpga augmented include additional flip flops multiplexers 
combination allows tight inter block communication required bit serial dsp processing 
external routing augmented architecture due limited connectivity required bit serial operation 
fine grained look table fpgas effective bit level computations dsp applications benefit modular arithmetic operations 
need lead interest coarse grained functional units 
device dsp optimized parallel computing architecture includes alus localized memories 
part architecture global instruction address distributed processors instructions fetched local instruction store 
organization allows high instruction bandwidth 
communication paths processors configured communication switch changed basis 
architecture motivated need high data throughput flexible datapath control real time image audio video processing applications 
coarse grained matrix architecture similar terms block structure exhibits localized control 
vliw control word distributed processors matrix exhibits mimd characteristics 
matrix tile contains small processor including small sram alu perform bit data operations 
near neighbor length wires interconnect individual processors 
inter processor data ports configured support static data dependent dynamic communication 
architecture targeted multimedia applications designed perform simd computation single control word distributed processors 
dimensional grid bit processors globally controlled simd instruction sequencer 
inter processor communication takes place near neighbor interconnect horizontal vertical buses 
chess architecture bit alus contains pipelined near neighbor interconnect 
computational tile architecture contains memory store local processor instructions local data memory 
colt architecture specially designed adaptable architecture dsp allows interconnect reconfiguration 
coarsegrained architecture allows run time data steer programming information dynamically determined points architecture 
mixture bit bit functional units allows bit word processing 
coarse grained architectures organized dimensional array offer significant interconnect flexibility signal processing applications filtering accommodated linear computational pipeline 
coarse grained reconfigurable architectures created address class applications 
piperench pipelined linear computing architecture consists sequence computational stripes containing look tables data registers 
modular nature piperench dynamic reconfiguration stripe basis straightforward 
rapid reconfigurable device linear data control paths 
coarsegrained architecture datapath includes multipliers adders pipeline registers 
piperench interconnect bus architecture segmented allow non local data transfer 
general communication patterns built rapid interconnect static dynamic operation possible 
pipelined control bus runs parallel pipelined data control computation 
dsp compilation software reconfigurable computing high level compilation systems designed target dsp algorithms reconfigurable platforms outlined partially developed complete synthesis systems constructed 
highlevel synthesis system described reconfigurable systems promotes high level synthesis behavioral synthesis language 
system dsp designs represented high level flow graph user specified performance parameters terms maximum minimum execution schedule guide synthesis process 
compilation system described converts standard ansi representation filter fft operations bit serial circuit applied fpga field programmable multi chip module 
compiler debugger linker targeted dsp data acquisition described 
uses high level model communicating processes specify computation communication multi fpga system 
integrating converters configurable platform primitive digital oscilloscope created 
dynamic reconfiguration reduce area overhead computing systems motivated renewed interest reconfigurable computing 
large amount remains completed area preliminary development software manage dynamic reconfiguration dsp accomplished 
method specifying optimizing designs dynamic reconfiguration described 
selective configuration scheduling portions application image processing dynamically reconfigured need 
outlined techniques bipartite matching evaluate portions dynamic application reconfigured 
technique demonstrated image filtering example 
dsp projects address need compile time run time management dynamic reconfiguration 
run time manager described single chip reconfigurable computing system large fir filter test case 
compile time analysis approach aid reconfiguration described 
reconfiguration times statically determined advance compilation system determines minimum circuit change needed run time point allow reconfiguration 
benchmark examples approach include arithmetic units fir filters contain embedded constants 
algorithms described perform dynamic reconfiguration save dsp system power time varying applications motion estimation 
software tool created dynamically alters search space motion vectors response changing images 
power motion estimation implementation roughly correlated search space reduced search proves beneficial applications mobile communications 
additionally unused computational resources scheduled memory rescheduled computing elements computing demands require 
integration dsp reconfigurable hardware just considered single chip implementation board level systems constructed 
provided commercially available dsp fpga board containing analog devices xilinx xc kb sram mb dram 
pc system implement dsp applications including image processing 
board dsp fpga product line currently available 
system couples xilinx virtex fpga tms dsp 
addition supporting pc bus interfaces system operating system compiler suite debugging software 
reconfigurable computing dsp reconfigurable computing dsp systems determined trends affect development systems today system integration dynamic reconfiguration high level compilation 
dsp applications increasingly demanding terms computational load memory requirements flexibility 
traditionally dsp involved significant run time adaptivity characteristic rapidly changing 
emergence new applications require sophisticated adaptive statistical algorithms extract optimum performance drawn renewed attention run time reconfigurability 
major applications driving move adaptive computation include wireless communications dsp hand sets base stations satellites multimedia signal processing embedded communications systems disk drive electronics high speed wired interconnects remote sensing environmental military applications 
applications strict constraints cost development time due market forces 
primary trend impacting implementation contemporary dsp systems moore law resulting consistent exponential improvement integrated circuit device capacity circuit speeds 
national technology roadmap semiconductors growth rates moore law expected continue year 
result corollaries moore law require new architectural approaches deal speed global interconnect increased power consumption power density system chip level defect tolerance 
architectural approaches suggested allow reconfigurable 
network asic mul mem fpga alu mul architectural template single chip device 
fpga fpga dsp dsp fpga dram dram sram switch fpga tile distributed single chip dsp interconnection network 
dsp systems best large amounts vlsi resources 
architectures characterized heterogeneous resources novel approaches interconnection 
term system chip describe level complexity heterogeneity available vlsi technologies 
figures illustrate various characteristics reconfigurable dsp systems 
mutually exclusive combination features probably emerge driving application domains wireless hand sets wireless base stations multimedia platforms 
taken shows architecture containing array dsp cores risc microprocessor large amounts uncommitted sram reconfigurable fpga fabric reconfigurable interconnection network 
research efforts condense dsps fpga logic dsps single substrate fashion pursued project 
focuses selecting correct collection functional units perform operation interconnecting low power 
experimental compiler created system testing performed determine appropriate techniques building low power interconnect 
alternate adaptive approach takes distributed view interconnection appears 
shows regular tiled interconnect architecture overlaid set heterogeneous resources 
tile contains communication switch allows statically scheduled communication adjacent tiles 
cycle cycle communications information held embedded communication switch sram 
increased complexity vlsi systems enabled moore law presents substantial challenges design productivity verification 
support continued advancement reconfigurable computing additional advances needed hardware synthesis high level compilation design verification 
compilers developed allow software development done high level enabling construction complex systems including significant amounts design re 
additional advancements multi compilers needed partition designs generate code synchronize interfaces variety heterogeneous computational units 
vliw compilers needed find substantial amounts instruction level parallelism dsp code avoiding overhead run time parallelism extraction 
compilers target design hardware software leverage techniques static inter processor scheduling allow truly reconfigurable systems specialized specific dsp computations 
critical aspect high quality dsp system design effective integration re usable components cores 
cores range generic blocks rams risc microprocessors specific blocks mpeg decoders pci bus interfaces 
trends involving core development integration continue tools support core design emerge allowing significant user interaction design time run time specialization reconfiguration 
specialized synthesis tools refined leverage core design extract optimum efficiency dsp kernels conventional synthesis approaches surrounding circuitry 
verification complex adaptive dsp systems require combination simulation emulation 
simulation tools ptolemy significant progress supporting heterogeneity high level continue evolve near 
newer verification techniques logic emulation emerge effective mechanisms reconfigurable multi fpga platforms verify dsp systems developed 
new generations fpgas advanced emulation software new emulation systems provide capability verify complex systems near real time rates 
power consumption dsp systems increasingly important coming years due expanding silicon substrates application battery powered power limited dsp platforms 
dynamic reconfiguration shown approach allow system adapt power consumption changing environments computational loads 
low power core designs allow systems assembled requiring detailed power optimizations circuit level 
domain specific processors loop transformations proposed techniques avoiding inherent power inefficiency von neumann architectures 
additional computer aided design tools needed allow high level estimation optimization power heterogeneous architectures dynamically varying workloads 
dsp fields avionics medicine created high reliability requirements addressed available fault tolerance 
reliability larger system goal power component 
dsp deeply embedded systems reliability critical 
increasing complexity devices systems software introduce numerous failure points need thoroughly verified 
new techniques especially developed allow defect tolerance fault tolerance reconfigurable components dsp systems 
promising technique takes advantage fpga reconfiguration various grain sizes described 
reconfiguration dsp systems driven different goals performance power reliability cost development time 
different applications require reconfiguration different granularities different rates 
dsp systems require rapid reconfiguration may able exploit regularity algorithms architectures reduce reconfiguration time power consumption 
approach called dynamic algorithm transforms dat philosophy moving away designing algorithms architectures worstcase operating conditions favor real time reconfiguration support current situational case 
basis reconfigurable asics just amount flexibility demanded application introduced 
configuration cloning caching compression approaches address need dynamic reconfiguration 
techniques computer architecture regarding instruction fetch decode need modified deal tasks applied configuration data 
reconfiguration promising technique implementation dsp systems 
current research area leverages contemporary semiconductors architectures cad tools methodologies effort support increasing demands wide range dsp applications 
done reconfigurable computing presents different computational paradigm dsp system designers dsp algorithm developers 
abbott athanas chen elliott 
finding lines building pyramids splash 
proceedings ieee workshop fpgas custom computing machines napa ca apr 

architecture dsp field programmable gate array 
ieee transactions vlsi systems mar 
altera 
flex data sheet 
altera 
www altera com 
carter snider 
configurable custom computing 
proceedings ieee workshop fpgas custom computing machines napa ca apr 
arnold buell davis 
ii 
proceedings th acm symposium parallel algorithms architectures pages san diego ca 
horrocks 
high level performance estimation primitive operator filter fpga 
proceedings international symposium circuits systems 
athanas abbott 
real time image processing custom computing platform 
ieee computer feb 
athanas hudson 
rapid prototyping teach design complete computing solutions 
proceedings ieee workshop fpgas custom computing machines napa ca apr 
atmel 
data sheet 
babb lee frank barua amarasinghe 
parallelizing applications silicon 
proceedings ieee symposium field programmable custom computing machines napa ca apr 
babb tessier dahl agarwal 
logic emulation virtual wires 
ieee transactions computer aided design integrated circuits systems june 
bell 
dynamic digital disk 
ieee spectrum oct 
bittner athanas 
wormhole run time reconfiguration 
international symposium field programmable gate arrays monterey ca feb 
box 
field programmable gate array reconfigurable preprocessor 
proceedings ieee workshop fpgas custom computing machines napa ca apr 
gray 
reconfigurability variable length code detection video rates 
proceedings field programmable logic applications fpl pages oxford england august 

www com 
buck ha lee messerschmitt 
ptolemy framework simulating prototyping heterogeneous systems 
international journal computer simulation 
burns hogg singh de wit 
dynamic reconfiguration run time system 
proceedings ieee symposium field programmable custom computing machines napa ca apr 
chen rabaey 
reconfigurable multiprocessor ic rapid prototyping algorithmic specific high speed dsp data paths 
ieee journal solid state circuits dec 
carter snider 
exploring architectures volume visualization computer 
proceedings ieee workshop fpgas custom computing machines napa ca apr 
dally 
digital systems engineering 
cambridge university press 
dao cook silver 
acceleration template ray casting volume visualization fpgas 
proceedings ieee workshop fpgas custom computing machines napa ca apr 
dehon 
dpga coupled microprocessors commodity ics st century 
proceedings ieee workshop fpgas custom computing machines napa ca apr 
rabaey 
cathedral ii computer aided synthesis system digital signal processing vlsi systems 
computer aided engineering journal pages apr 
dick 
fpga systolic array architectures computing discrete fourier transform 
proceedings international symposium circuits systems 
duncan hendry gray 
overview cobra abs high level synthesis system 
proceedings ieee symposium field programmable custom computing machines napa ca apr 
ebeling franklin berg 
mapping applications rapid configurable architecture 
proceedings ieee symposium field programmable custom computing machines napa ca apr 
evans 
efficient fir filter architectures suitable fpga implementation 
ieee transactions circuits systems july 
bier 
evolution dsp processors early architecture latest developments 
ieee signal processing magazine mar 
fagin 
field programmable gate arrays floating point arithmetic 
ieee transactions vlsi systems sept 
ferguson lee 
generating audio effects dynamic fpga reconfiguration 
computer design feb 

robust adaptive coded modulation time varying channels delayed feedback 
proceedings fifth annual allerton conference communication control computing pages oct 
goel 
dynamic algorithm transforms dat systematic approach low power reconfigurable signal processing 
ieee transactions vlsi systems dec 
goel 
dynamic algorithm transforms low power adaptive equalizers 
ieee transactions signal processing oct 
gokhale holmes lucas sweeney lopresti 
building highly parallel programmable logic array 
computer jan 
gokhale 
fpga computing data parallel proceedings ieee workshop fpgas custom computing machines pages napa ca april 
goldstein schmit moe budiu taylor laufer 
piperench coprocessor streaming multimedia acceleration 
proceedings international symposium computer architecture atlanta ga june 

guide field programmable gate arrays application specific digital signal processing performance 
xilinx application note 
greenbaum baxter 
increased fpga capacity enables scalable flexible example image processing 
proceedings ieee symposium field programmable custom computing machines napa ca apr 
hastie cliff 
implementation hardware subroutines field programmable gate arrays 
proceedings ieee custom integrated circuits conference may 
hauck 
role fpgas reprogrammable systems 
proceedings ieee apr 
hauck li schwabe 
configuration compression xilinx xc fpga 
proceedings ieee symposium field programmable custom computing machines napa ca apr 

fpga implementation fir filters pipelined bit serial canonical signed digit multipliers 
custom integrated circuits conference 
woods turner 
development run time reconfiguration systems low reconfiguration overhead 
journal vlsi signal processing 
herzen 
signal processing mhz high performance fpgas 
international symposium field programmable gate arrays monterey ca feb 
horowitz gonzalez 
energy dissipation general purpose processors 
journal solid state circuits nov 
hu 
programmable digital signal processors 
marcel dekker new york 
hudson athanas 
run time reconfigurable engine image interpolation 
proceedings ieee symposium field programmable custom computing machines napa ca apr 

dai 
bit serial pipeline synthesis multi fpga systems design capture 
proceedings ieee workshop fpgas custom computing machines napa ca apr 
singh 
software environment multiprocessor dsp 
proceedings th design automation conference june 
abbott 
fpga implementation high performance fir filters 
proceedings international symposium circuits systems 

vliw architectures media processing 
ieee signal processing magazine mar 
tessier 
tolerating operational faults cluster fpgas 
international symposium field programmable gate arrays monterey ca feb 
lee 
programmable dsp architectures part ieee signal processing magazine oct 
lee 
programmable dsp architectures part ii 
ieee signal processing magazine jan 
chapman meier 
high level synthesis generating fpgas system 
journal vlsi signal processing 
mcmillan underwood 
re evaluation practicality floating point operations fpgas 
proceedings ieee symposium field programmable custom computing machines napa ca apr 
lim evans liu 
efficient bit serial fir filter architecture 
circuits systems signal processing may 

ling 
data driven computer virtual hardware 
proceedings ieee workshop fpgas custom computing machines napa ca apr 
johnson cook 
implementation ieee single precision floating point addition multiplication fpgas 
proceedings ieee workshop fpgas custom computing machines napa ca apr 
luk shirazi cheung 
modelling optimising run time reconfigurable systems 
proceedings ieee workshop fpgas custom computing machines napa ca apr 
mangione smith hutchings andrews dehon ebeling hartenstein morris prasanna 
seeking solutions configurable computing 
ieee computer dec 
marshall stansfield vuillemin hutchings 
reconfigurable arithmetic array multimedia applications 
international symposium field programmable gate arrays monterey ca feb 
mckinley weaver 
compiler architectures heterogeneous processing 
languages compilers parallel processing lecture notes computer science aug 

data sheet 
www com 
dehon 
matrix reconfigurable computing architecture configurable instruction distribution deployable resources 
proceedings ieee workshop fpgas custom computing machines napa ca apr 
olukotun 
quantitative analysis reconfigurable coprocessors multimedia applications 
proceedings ieee symposium field programmable custom computing machines napa ca apr 

mb disk drive read channel um cmos incorporating programmable noise predictive detection trellis coding 
proceedings ieee international solid state circuit conference 
ohta 
new fpga architecture bit serial pipeline datapath 
proceedings ieee symposium field programmable custom computing machines napa ca apr 
page 
constructing hardware software systems single description 
journal vlsi signal processing 
park 
reconfiguration power savings real time motion estimation 
proceedings international conference application specific signal processing 
park 
configuration cloning exploiting regularity dynamic dsp architectures 
international symposium field programmable gate arrays monterey ca feb 
peterson 
assessment suitability reconfigurable systems digital signal processing 
master thesis brigham young university department electrical computer engineering september 

fpga data acquisition system ghz band radar 
proceedings international conference acoustics speech signal processing 

architectural approaches multimedia processors 
proceedings multimedia hardware architecture spie 
qualcomm 
www qualcomm com 
rabaey 
vlsi design implementation signal processing revolution 
ieee signal processing magazine pages jan 
jain rover 
convolution splash 
proceedings ieee workshop fpgas custom computing machines napa ca apr 
hutchings 
automated target recognition splash ii 
proceedings ieee symposium field programmable custom computing machines napa ca apr 
engels 
programming environment design complex high speed asics 
proceedings th design automation conference june 
schmit thomas 
behavioral synthesis fpga computing 
proceedings ieee workshop fpgas custom computing machines napa ca apr 
shand 
flexible image acquisition reconfigurable hardware 
proceedings ieee workshop fpgas custom computing machines napa ca apr 
shand moll 
hardware software integration solar 
proceedings ieee symposium field programmable custom computing machines napa ca apr 
shirazi luk cheung 
automating production run time reconfigurable designs 
proceedings ieee symposium field programmable custom computing machines napa ca apr 
shirazi walters athanas 
quantitative analysis floating point arithmetic fpga custom computing machines 
proceedings ieee workshop fpgas custom computing machines napa ca apr 
singh rabaey pedram 
power conscious cad tools methodologies perspective 
proceedings ieee 
singh 
accelerating adobe photoshop reconfigurable logic 
proceedings ieee symposium field programmable custom computing machines napa ca apr 
strauss 
digital signal processing new semiconductor industry technology driver 
ieee signal processing magazine mar 
sylvester 
getting bottom deep 
proceedings international conference computer aided design oct 
synopsys 
www synopsys com 
tessier 
incremental compilation logic emulation 
ieee tenth international workshop rapid system prototyping clearwater florida june 
tessier 
adaptive systems chip 
university massachusetts department ece technical memo 
www ecs umass edu ece tessier 
texas instruments 
tms dsp data sheet 
thomas thomas schmit 
model methodology hardware software codesign 
ieee design test computers pages sept 

low power reconfigurable adaptive equalizer architecture 
proceedings asilomar conference signals systems computers monterey ca october 
varghese 
efficient logic emulation system 
ieee transactions vlsi systems june 
hutchings 
flexibility configurable computing 
ieee signal processing magazine sept 
mangione smith 
configurable computing 
scientific american june 
schoner 
chia zapata 
configurable computing solutions automated target recognition 
proceedings ieee workshop fpgas custom computing machines napa ca apr 
schoner jones 
video communications rapidly reconfigurable hardware 
ieee transactions circuits systems video technology dec 
vuillemin bertin shand touati 
programmable active memories reconfigurable systems come age 
ieee transactions vlsi systems mar 
wan zhang george prabhu rabaey 
design methodology low energy reconfigurable single chip dsp system 
journal vlsi signal processing 
weinberger 
new millennium wireless technologies truly mobile society 
proceedings ieee international solid state circuit conference 
brown 
software development system fpga data acquisition systems 
proceedings ieee workshop fpgas custom computing machines napa ca apr 
hutchings 
dynamic instruction set computer 
proceedings ieee workshop fpgas custom computing machines napa ca apr 
woodfill herzen 
real time stereo vision parts reconfigurable computer 
proceedings ieee symposium field programmable custom computing machines napa ca apr 
woods trainer 

applying xc real time image processing 
ieee design test computers pages jan 
xilinx 
programmable logic data book 
xilinx 
programmable logic data book 
xilinx 
virtex data sheet 
xilinx 
www xilinx com 
yeh chow 
racer reconfigurable constraint length viterbi decoder 
proceedings ieee workshop fpgas custom computing machines napa ca apr 
zhang prabhu george wan rabaey 
heterogeneous reconfigurable processor ic baseband wireless applications 
proceedings ieee international solid state circuit conference 

