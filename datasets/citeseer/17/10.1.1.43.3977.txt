temporal query languages survey jan chomicki january category survey area temporal databases define formal notions temporal domain temporal database survey wide spectrum temporal query languages 
distinguish temporal database concrete representations accordingly concrete temporal query languages 
address issue incomplete temporal information 
temporal database repository temporal information 
temporal query language query language temporal databases 
propose formal notion temporal database notion surveying wide spectrum temporal query languages 
need store temporal information arises computer applications 
consider example records various kinds financial personnel medical judicial 
monitoring data telecommunications network management process control temporal dimension 
lot research temporal databases past years evidenced book 
think field temporal databases mature allow unifying formal framework 
proposed framework attempts integrate research temporal databases database theory logic research 
framework relevant research knowledge representation area artificial intelligence 
hope serve foundation systematic advances early version invited tutorial th acm symposium principles database systems may washington version appeared proc 
international conference temporal logic july bonn germany lecture notes artificial intelligence springer verlag 
address computing information sciences kansas state university manhattan ks usa mail chomicki cis ksu edu 
field temporal databases 
tried generally accepted database theory logic terminology possible limit number specialized temporal database terms minimum 
reasons decided follow proposed temporal database glossary 
known ansi sparc architecture distinguishes different levels database physical conceptual external 
context temporal databases propose split conceptual level distinguish temporal database concrete 
intuitively temporal database captures formal representation independent meaning temporal database concrete provides specific finite representation terms specific temporal data model 
accordingly study query languages semantics defined temporal databases concrete query languages defined specific concrete representations 
languages group order logic temporal logic relational algebra number deductive languages second languages described proposed temporal extension sql 
study issues particular formal semantics expressiveness query processing computational complexity representation independence concrete query languages 
address implications query languages allowing incomplete information temporal databases 
list open problems 
survey different existing surveys mainly emphasis single unifying formal framework applicable wide spectrum languages 
discusses technical issues involved representing infinite temporal databases scope limited concrete temporal query languages 
survey number different temporal formalisms compare respect set informally defined criteria 
survey unique including discussion constraint databases constraint query languages 
framework similar independently proposed context incomplete temporal information 
survey scope limited constraint databases 
claim survey exhaustive 
different temporal data models query languages proposed possible describe detail single 
attempted extract important features models languages single unified framework 
believe framework applicable approaches explicitly covered 
lack space address important issues temporal query languages query optimization techniques physical storage structures 
limit discussion relational model data 
survey query languages temporal object oriented databases appears 
plan follows 
section introduce formal framework temporal databases 
particular specify notions temporal domain temporal database concrete temporal database 
section introduce number general properties interest temporal query languages 
section discuss temporal query languages section number concrete temporal query languages 
section discuss incomplete temporal information section summarize related artificial intelligence 
section draw 
temporal databases formal framework temporal databases issues need addressed ffl choice temporal domains points vs intervals linear vs branching dense vs discrete bounded vs unbounded time ffl definitions concrete temporal database ffl query languages formal semantics expressiveness implementation 
section address issues 
temporal query languages discussed sections 
temporal domains temporal ontology basically options exist points instants vs intervals researchers logic artificial intelligence aware distinction long time 
temporal databases intervals confused sets points discuss issue places 
natural language example help clarify difference 
example suppose just car trip washington new york 
lasted hours pm 
saying driving washington new york pm mean driving washington new york time instant interval 
notion interval serves just description set points 
clearly true driving washington new york interval subinterval interval 
say driving washington new york pm 
situation different say drove washington new york pm 
mean interval subintervals points belonging 
case view time point intervals just sets points second interval 
database context point view predominant concentrate 
term instant time point 
ai research date survey see takes interval view 
point view intervals obtained pairs points 
interval view common designators interval endpoints 
usually moving views easy order case propositional case different concern 
mathematical structure rule kind mathematical structure imposed time instants 
common order partial total linear 
orders studied temporal databases usually linear 
exceptions exist linear transitive order irreflexive asymmetric model cyclic time partial order satisfies left linearity branching left model branching time 
linear time handled ultimately periodic sets see discussion section 
survey consider linear orders prevalent temporal database applications 
propose view temporal domain order structure signature set constant function relation symbols 
typical elements signatures ffl binary order relation symbol ffl constant symbol denote origin standard point temporal domain ffl unary successor function symbol capture succession time points ffl binary function symbols plus gamma minus capture relative distance time points ffl binary relation symbol congruence modulo capture periodicity 
standard temporal domains context natural numbers integers rationals reals 
usually assume equality available temporal domain 
unexpectedly strong assumption 
violated example tsql temporal extension sql described section 
temporal domains considered universes finite bounded subsets standard domains 
temporal database applications commonly assumed time discrete isomorphic natural numbers 
ai view time usually assumed dense :10.1.1.40.1018
continuous time turned extremely valuable mathematics physics standard nascent area hybrid systems 
emerging consensus different temporal domains supported truly general temporal dbms 
notion constraint formula possible finitely represent dense sets computer storage 
time instance interpreted database domain 
include space physical quantities temperature fact issues occurring representation temporal information analogues application areas storage interpreted data essential 
time granularity temporal domains mentioned far flat 
handle multiple time granularities days vs weeks necessary consider multiple interrelated temporal domains 
instant higher level domain corresponds contiguous set instants lower level domain 
consider multiple time granularities survey treated 
temporal databases propose formal notion temporal database captures representation independent meaning temporal database 
temporal database may viewed different equivalent ways 
model theoretic view basic treats temporal database order structure 
snapshot view treats function maps instant set tuples 
timestamp view treats mapping associating set instants tuple 
simplicity assume single temporal dimension single temporal domain single data domain domain contains standard database constants 
show lift restrictions 
context relational data model definition generalized data models formulated firstorder framework certain object oriented models described beeri 
assume database schema fixed consists fixed set relations 
model theoretic view consider relation arity model fact tuples correspond facts holding time instant introduce temporal relation arity tuples meaning iff holds instant formally known relational database may viewed finite structure order language ld containing relation symbols relations database constant symbols elements corresponding temporal database called temporal structure structure sorted order language containing new temporal relation symbol temporal relation constant symbols elements possibly elements 
arity arity plus 
extra argument convention called temporal arguments called data 
language contains relation function symbols language temporal domain symbols interpreted fixed meaning 
language knowledge representation reasoning proposed area artificial intelligence 
note concept temporal database parameterized temporal domain assumptions 
going say database finite consists finite relations 
definition allows finite infinite databases 
fact applications dealing infinite periodic data natural consider infinite databases 
snapshot view snapshot view temporal database called snapshot database set functions ff instant holds tg snapshot database may thought consisting snapshot relations relation symbol 
relation arity non nf relation values second attribute sets tuples 
timestamp view timestamp view temporal database called timestamp database set functions fg ft holds tg timestamp database may thought consisting timestamp relations relation symbol 
timestamp relation data attribute data argument corresponding relation symbol timestamp attribute 
timestamp relation non nf relation values timestamp attribute sets instants 
clear views expressive power 
show table european history database viewed timestamp relation 
table fragment corresponding snapshot relation table relation part corresponding temporal structure 
multiple temporal dimensions multiple temporal dimensions necessary model intervals pairs points multiple kinds time valid time time fact holds real world transaction time time fact recorded database 
simplicity assume single temporal domain 
handle multiple temporal dimensions notion temporal database needs appropriately generalized obvious way 
modeltheoretic view introduce notion relation type temporal relation data temporal attributes type 
different interpretations multidimensional temporal databases captured additional axioms serving integrity constraints 
example constraint may state interval precedes 
snapshot timestamp views modified lines model theoretic view 
consensus number temporal dimensions need supported temporal database 
addition valid transaction times postulates time event time 
adding temporal dimensions results considerably complicated query languages harder implement negative influence computational complexity query processing 
illustrate points 
properties temporal databases claim definitions temporal database provides representation independent meaning database defined extant temporal data models relational model 
model specific database called concrete temporal database just representation temporal database 
concrete temporal databases equivalent represent temporal database 
notions temporal relation associated type clarifies notoriously confusing issue temporal data model point interval 
instance consider valid time temporal databases 
model point facts associated single time points interval associated intervals represented pairs points 
case semantics concrete temporal databases expressed terms temporal relations type relations type necessary 
show section notion temporal database possible study integration interoperability different temporal data models single precise framework 
semantics query languages integrity constraints defined directly temporal databases concern way represented 
discuss topic section 
particular integrity constraints just order axioms model theoretic view adopted 
concrete temporal databases notion temporal database sufficient deal temporal database applications 
fundamental reason temporal database may infinite finite objects explicitly represented computer storage 
extant temporal database models provide specific incompatible notions temporal database 
necessary consider concrete temporal databases specific finite representations temporal databases 
simplicity discuss case temporal dimension 
properties classes concrete temporal databases primary interest data expressiveness succinctness 
data expressiveness temporal data model set temporal databases representable 
different temporal data models formally compared terms expressiveness 
data expressiveness distinguished query expressiveness discussed section 
second property succinctness space necessary represent temporal relation 
may serve basis comparing different temporal data models 
concrete timestamp databases different views temporal database timestamp view leads natural useful notion concrete database 
timestamps infinite sets sets implicitly represented timestamp formulas firstorder formulas free variable language temporal domain 
example 
example concrete timestamp database shown table 
may ask subsets temporal domain serve timestamps defined timestamp formulas 
example temporal domain timestamps finite finite subsets interesting case presburger arithmetic timestamps ultimately periodic subsets example set natural numbers period described presburger formula equivalent formulation means congruent modulo 
example congruence formula 
consequently allow presburger congruence formulas timestamps infinite ultimately periodic temporal databases finitely represented 
temporal database ultimately periodic instant natural number holds holds infinite periodic sets useful define calendars set business days set 
finite periodic sets better represented infinite sets plus constraints guaranteeing finiteness 
example consider set year 
describes adding symbolic calendar level top timestamp database 
main technical tool theory timestamp databases quantifier elimination 
notion covered logic textbooks 
theory said admit quantifier elimination formula language theory equivalent quantifier free formula effectively constructed 
additionally require quantifier free formulas obtained effectively tested satisfaction 
additional requirement especially important want able effectively test specific instant belongs timestamp defined timestamp formula 
fortunately theories temporal domains proposed earlier section admit quantifier elimination 
quantifier elimination may give different results different temporal domains signature 
example consider formula quantifier elimination yields formula 
quantifier elimination yields quantifier elimination plays distinct roles timestamp databases 
possible limiting attention quantifier free timestamp formulas 
quantifier elimination leads exponential blowup size formula performed 
second basic tool query evaluation see section 
constraints atomic timestamp formulas 
consider tuple timestamp relation quantifier free timestamp formula oe 
formula oe transformed disjunctive normal form oe delta delta delta oe subsequently negation eliminated disjunct dealing linear orders giving oe oe delta delta delta oe result disjunct oe conjunction constraints 
replace tuple tuples wm new tuple data components identical oe timestamp formula 
disjunction negation eliminated timestamp formulas 
finite timestamp relation form generalized relation 
call timestamp formula oe separable oe conjunction formulas form want admit time dimension represent intervals need timestamps formulas free variables 
example 
distinguished ranges instants timestamps defined single variable formulas 
multi dimensional timestamp formulas describe example set subintervals interval 
existing temporal data models choose variant timestamp representation 
usually assumed timestamps finite bounded sets 
timestamp formulas implicitly represent infinite sets possible limitation 
open question timestamps defined richer language order theory time domain 
mention approaches timestamps associated tuples attribute values 
finite temporal databases snapshot databases temporal structures natural notion implicit finite representation 
concrete databases enforce restriction finite describe finite subset time domain 
obvious examples snapshot databases temporal structures quite wasteful terms space usage typical applications 
logic programs temporal database infinite structure finitely represented logic program consisting set deductive horn rules finite database 
temporal database corresponding program herbrand model 
example represented program sunday sunday introduced kind representation temporal databases time domain unary successor symbol 
syntax logic programs restricted requiring successor symbol function symbol occur argument relations 
resulting language extension datalog language function free logic programs called datalog 
datalog discussed query language section 
equally expressive logic programming language syntax temporal logic proposed 
simple syntactic translation datalog 
interesting note data expressiveness datalog identical timestamp representation presburger timestamps express exactly ultimately periodic temporal databases 
representation datalog may exponentially succinct timestamps periodicity implicit explicit 
interoperability framework temporal databases possible formulate issue temporal database interoperability natural way 
part represents ongoing 
suppose temporal data models delta delta assume underlying temporal domains 
meaning delta resp 
delta defined total mapping resp 
concrete temporal databases defined delta resp 
delta temporal databases 
inverse mappings gamma gamma may partial necessarily temporal database representable data model example model capable representing finite temporal databases 
mappings may uniquely defined problem inverse mapping equally 
assuming ffi denotes function composition database gamma ffih defined represents concrete database delta corresponding concrete database delta database queried query languages defined delta providing access database pointed corresponding concrete relations represent relations type 
way interoperability formal basis provides general direction implementation 
data expressiveness data model sets exact limits interoperability 
gamma defined hope delta notice case semantics query language defined directly temporal databases inverse mappings deal process considerably simplified 
heterogenous databases different underlying temporal domains additionally construct coercion domains 
coercion natural example properties query languages semantics query languages defined respect temporal databases concrete query languages respect concrete temporal databases 
sections survey properties concrete temporal query languages ffl declarative semantics ffl closed form evaluation ffl representation independence ffl query expressiveness ffl data complexity query evaluation ffl efficient implementation 
explain notions 
semantics query language declarative assigns meaning query referring way query evaluated 
preferably semantics logical provide precise notion model query 
query evaluated closed form result query represented language database 
trivially satisfied languages relational databases kinds databases containing constraints nontrivial property 
representation independence means answer query concrete databases representing temporal database property identified 
clear query language representation independent correctly implemented 
concrete query languages representation independence needs separately proved 
query expressiveness defined follows 
considering queries queries said equivalent return answer database 
query language expressive query language query formulated equivalent query expressive additionally query equivalent query 
notion expressiveness called query expressiveness formally defined class sets temporal databases queries language evaluate true 
notion possible away features specific temporal data model compare query languages different data models 
careful compare queries concrete relations equivalents different types example queries defined relations representing interval data defined relations representing point data 
notion query expressiveness important theory query languages relational databases 
data complexity query evaluation defined mean computational complexity set finite databases fixed query evaluates true 
study combined complexity query part input 
data complexity measure better computational effort necessary evaluating queries formulated language 
notion extensively database theory 
query languages relational calculus order language temporal database assuming model theoretic view query language suggested 
commonly known domain relational calculus semantics standard tarskian semantics obviously declarative 
answer order query set valuations query formula true database 
example consider query list countries lost regained independence 
query formulated order logic follows shorthand independent example functional dependency employee salary time simply expressed emp emp type constraint may limit range time instants appear temporal relation 
example suppose constraint transaction done business days monday friday time point corresponds sunday 
constraint expressed transaction uses order logic formulate taxonomy temporal databases 
resulting formulas viewed constraint dependencies generalize traditional dependencies 
order logic concrete query language 
straightforward finite temporal structures 
finite snapshot relations example table relational calculus requires second order constructs dealing sets 
language proposed 
example consider query list countries lost regained independence example 
second order relational calculus formulated follows assume sn snapshot relation sn sn sn proposal second order calculus temporal databases 
data model snapshot timestamp 
timestamps associated tuples attribute values 
general issue second order calculus corresponding extensions relational algebra extensively researched context data models non nf relations complex values 
far know results obtained course research transferred temporal databases 
concrete timestamp databases essentially possibilities implement query evaluation 
translate query relational algebra example algorithm generalized versions relational algebra operations described subsection 
directly evaluate query closed form result timestamp relation quantifier elimination procedures temporal domain data domain 
second approach theory data domain admit quantifier elimination 
proposed elegant quantifier elimination algorithm infinite domains inequality constraints applicable assume mathematical structure data domain 
needs done order see quantifier elimination implemented efficiency approaching standard relational database operations 
discuss issue data complexity order logic queries concrete temporal databases various temporal domains 
analyzed computational complexity various constraint query languages results apply finite timestamp databases timestamp formulas conjunctions constraints atomic formulas 
fixed number temporal dimensions single temporal domain allowed 
characterize data complexity processing order logic queries ffl logspace countably infinite dense linear order ffl nc real arithmetic 
considered timestamp formulas constraints presburger arithmetic 
show data complexity order queries ptime 
results apply fixed number temporal dimensions 
relational algebra semantics relational algebra defined set theoretically arbitrary necessarily finite relations fits model theoretic view temporal databases 
snapshot view relational algebra operations pointwise snapshots corresponding time instants different relations 
needs consider generalized versions relational algebra operations simultaneously apply instants 
analogous filter apply operation proposed area functional programming applied databases complex values 
additional operations relate different instants necessary 
approach pursued context temporal domain proposal address implementation issues snapshot relations required finite 
timestamp view relational algebra operations need generalized deal timestamp relations 
example natural join defined oe oe oe oe sg oe oe timestamp formulas 
projecting temporal attribute implemented quantifier elimination 
standard relational algebra consider constant timestamp relations 
case finite finite represent infinite temporal relations 
example define singleton unary constant relation time consisting time instants 
example query list countries lost regained independence formulated relational algebra renaming gamma oe time ptime evaluable algebras proposed temporal domain 
developing efficient implementation methods query optimization techniques appropriately generalize developed relational databases open problem 
constraint databases may applicable 
possibility generalizing methods query processing developed finite temporal databases explored 
temporal logic consider temporal relations type 
order language temporal extension ld denoted tl ld 
language contains binary temporal connectives meaning ffl true instant iff true instant true instant ffl true instant iff true instant true instant past shorthand true shorthand true 
comprehensive temporal logic 
example query list countries lost regained independence example formulated temporal logic follows temporal logic interest ubiquity different areas computer science 
databases temporal logic language querying finite snapshot databases formulating temporal integrity constraints 
possible implementation method temporal logic queries timestamp databases translate order logic queries implementation order logic queries described earlier 
may possible develop query evaluation optimization methods specific temporal logic 
believe central research issue query expressiveness temporal logic 
tl equally expressive assuming signature temporal domain contains order relation symbol 
interesting open research problems area temporal databases 
relevant early results due mainly kamp 
showed propositional temporal logic equally expressive monadic order logic dedekind complete temporal domains 
showed tl strictly expressive arbitrary temporal databases 
construction essential way infinite temporal databases applicable dense temporal domains 
conjecture separation order temporal logics holds finite databases discrete domains 
important result proved connective suffices propositional case eliminated 
proof uses kamp result question order temporal logic remains open 
temporal relations type temporal logic longer applicable 
choice powerful temporal logic determined semantics temporal attributes 
meant represent intervals kind interval temporal logic called 
meant represent multiple kinds time form multi dimensional temporal logic 
inductive query languages temporal query languages discussed far order natural queries order inductive second order 
example example inductive temporal query may posed find persons risk risk defined way person risk time earlier infected contact risk 
notice having contact risk result classifying person risk 
clear query order inherent recursion 
inductive temporal queries formulated number logic programming languages 
languages extend datalog language function free logic programs various ways 
consider ffl datalog datalog integer order constraints ffl datalog datalog rational order constraints ffl datalog datalog unary successor symbol argument ffl datalog unary successor symbol linear arithmetic constraints :10.1.1.42.8212
strictly speaking languages proposed temporal relations arbitrary number temporal attributes data attributes temporal relations type 
generalization arbitrary temporal relations type straightforward 
hand datalog allows temporal relations type 
language allows temporal relations arbitrary type 
datalog applicable finite temporal structures remaining languages applicable concrete timestamp databases 
example formulation datalog datalog query example natural infected contacted rules example range restricted 
usually case constraint languages lead difficulties evaluation mechanism languages general standard bottom evaluation 
formulation datalog transparent order relation symbol directly available infected contacted syntactic restrictions number arguments successor function symbol may appear datalog express datalog queries 
deductive languages extended stratified negation clause bodies 
extension datalog denoted stratified datalog 
addition negation deductive languages capable expressing order logic queries temporal databases type 
example query example expressed datalog stratified negation query semantics logic programs negation herbrand models 
presence stratified negation semantics perfect models 
datalog subset prolog implementation requires adaptation existing logic programming implementation techniques 
hand implementation constraint languages datalog datalog requires quantifier elimination procedure 
languages proofs closed form evaluation termination bottom computation quite involved 
discuss issue data complexity deductive languages 
obtained closed form evaluation ptime computability datalog datalog considered extension datalog negation different inflationary semantics closed form evaluation ptime computability 
extending datalog stratified inflationary negation problematic define relation coding successor function symbol obtain turing computable functions 
possible extend datalog congruence constraints preserving closed form evaluation ptime computability 
data complexity datalog stratified datalog queries finite temporal structures pspacecomplete subsets datalog queries evaluated ptime 
datalog unary successor symbol linear arithmetic constraints expressive language termination query evaluation guaranteed 
way obtain inductive queries extend logic query languages fixpoint operators 
fixpoint query languages queries defined greatest solutions equations oe oe logic formula relation set 
best known fixpoint query languages fixpoint queries finite relational databases temporal fixpoint calculus propositional temporal logic extended fixpoint operators 
languages add extra expressive power underlying logic languages 
example language possible expression transitive closure queries expressible order logic 
second language capable defining property true numbered state case temporal database may viewed sequence states expressible propositional temporal logic 
context temporal databases natural consider fixpoint extensions order logic temporal logic 
topic current research 
conjectured earlier temporal logic strictly expressive order logic 
similar separation hold fixpoint extensions languages 
worthwhile study relationship deductive fixpoint second order languages 
showed propositional temporal fixpoint calculus monadic stratified datalog equally expressive similar correspondence positive fixpoint calculus monadic datalog propositional temporal fixpoint calculus second order monadic logic quantification sets time points known equally expressive 
proposed extend relational algebra recursively defined operators 
operators essentially limited propositional temporal fixpoint operators 
restricted finite snapshot databases finite temporal structures 
algebra achieve full power propositional fixpoints unable express 
version relational algebra equally expressive temporal logic discussed earlier 
additionally proposed introduce special time relation keeps track flow time 
relation arithmetic selection conditions expressed 
exact expressive power data complexity resulting query language studied 
concrete query languages section discuss number temporal query languages semantics defined respect concrete temporal databases 
summarize main limitations languages 
tquel tquel proposed known temporal query language derived quel 
supports single temporal domain discrete infinite multi level way refer specific day hour temporal dimensions valid time transaction time 
simplicity consider valid time single granularity 
data model tquel variant timestamp representation 
specifically timestamp interval ha bi start interval 
associating interval ha bi fact equivalently tuple relation corresponding means holds ha bi ft tg 
intervals required maximal timestamps identical facts coalesced denote overlapping intervals 
requirement imposes quite burden database update procedures insertion may trigger coalescing operation 
hand timestamp representation maximality enforced may arbitrarily succinct tquel 
intervals represented tquel additional attributes relation 
important see data model tquel point interval 
intervals serve representational device 
truth values facts associated points intervals 
example impossible represent database situation fact true interval subintervals 
formally tquel relation valid time represents temporal relation type 
tquel relations finite 
data expressiveness tquel timestamp relations separable timestamp formulas defined section 
semantics tquel queries indirectly translation quel 
tquel presently declarative logical semantics semantics principle possible 
example assuming country capital query list countries lost regained independence example written tquel follows range range retrieve name valid name name precede negation example necessary assumed timestamps represent maximal intervals coalesced 
fact language contain negation 
temporal attributes attributes treated special way directly referenced queries 
pair values attributes viewed interval compared intervals predefined set interval relationships precede example 
query expressiveness tquel depends repertoire interval relationships 
sufficiently rich set relationships shown tquel queries simulate temporal logic queries 
show temporal logic simulate tquel express interval relationships temporal logic difficult 
obtain power full fledged logical negation tquel quel uses sequences queries 
example query correct country multiple capitals capital gives rise different disjoint interval 
case sequence tquel queries intermediate relations necessary 
pointed existence translation tquel quel turn translated relational calculus prove tquel subsumed relational calculus claimed 
translation yields relational calculus queries relations type point semantics tquel require compared calculus relations type 
show relations type obtained translation fact firstorder definable relations type fortunately case interval endpoints order definable 
tquel essentially order incapable expressing inductive temporal queries 
data complexity tquel queries analyzed clearly polynomial 
due maximality requirement timestamps temporal relation uniquely represented tquel relation 
guarantees representation independence tquel queries 
syntax semantics tquel quite cumbersome transaction time considered 
support temporal dimensions 
tsql tsql proposed extension sql 
proposal refrains making commitment specific temporal domain linearly ordered consequently allow testing equality time instants 
equality lead queries give different answers discrete dense temporal domains 
equality family relation symbols provided granularity 
meaning happened granule granularity 
valid transaction time multiple time granularities supported 
tquel tsql point interval 
tsql relations tquel relations facts timestamped maximal intervals finite unions maximal intervals 
fact exactly timestamp 
data expressiveness tsql identical tquel ignoring multiple time granularities 
aware comprehensive description informal semantics tsql queries 
impossible establish formal properties language 
description syntax leaves doubts tsql query language matched data model 
particular tsql designers set interval relationships 
unions intervals set sufficient augmented lines 
historical relational data model earlier foundational influential temporal data models 
similar model proposed 
supports single discrete infinite temporal domain single time dimension 
relations finite 
treatment relation attributes uniform designated parts key 
non key attributes take values functions domains subsets temporal domain provides limited form non nf relations 
clear subsets temporal domain serve domains functions specified difficult assess data expressiveness model computational complexity answering queries 
assumption domains functions required finite relations represent finite temporal relations 
specific ways efficiently storing functions relations proposed 
example function constant storing value domain function sufficient 
stepwise constant functions handled similarly 
algebra obtained relational algebra redefining relational operators context data model 
semantics relational algebra operations defined set theoretically 
noted algebra limited expressive power express queries relate database snapshots different time instants 
consequently express query example 
essentially order character algebra express inductive temporal queries 
data complexity algebra representation independence queries analyzed 
extension sql proposed shown representation independent 
different temporal data model backlog relations proposed 
model supports single discrete infinite temporal domain temporal dimensions valid transaction time independent tquel 
backlog relations store raw data requests change data 
transaction time instants stored 
find specific fact true valid time instant appropriate backlog relation scanned sure appropriate tuple inserted subsequently deleted modification handled similarly 
backlog relations finite represent finite temporal relations 
example backlog relation representing part european history database introduced section shown table 
relation attributes contains consecutive number update operation second name operation third transaction time fourth fifth relevant data country capital 
assuming transaction generate single request insert delete specific fact temporal relation uniquely represented backlog relation 
guarantees representation independence query languages 
matching insert delete pair backlog relation corresponds endpoints tquel interval succinctness identical tquel 
backlog model support relational query language example relational algebra calculus 
particular query list countries lost regained independence example written algebra renaming oe id id id backlog relation table 
data complexity processing relational algebra calculus queries backlog relations clearly polynomial 
describes techniques incremental evaluation queries model 
limitations temporal data models query languages different temporal data models query languages 
fully relational allowing non nf relations limited forms object identity 
book presents different temporal data models extensions relational model 
specific temporal data model obtained choosing single fixed temporal domain adopting specific framework concrete temporal databases usually timestamp variety defining query languages applicable particular framework 
timestamp framework selected assumed timestamps finite bounded sets 
consequently temporal databases represented finite 
signatures time domain contain order relation symbol 
serious limitation expressiveness temporal query languages discussed book languages discussed chapters inability express inductive temporal queries 
virtually temporal data models mutually incompatible 
situation seriously hinders systematic progress area temporal databases remarked 
solution provision single unifying temporal data model models mapped sufficient 
fall short defining semantics temporal databases 
fact model uses notion concrete temporal database admittedly simpler general 
model limited deals single temporal domain timestamps finite sets 
think model unnecessarily complicated 
violates ockham razor introducing new type entity element 
objectives achieved simpler way adopting framework described section 
current interoperability temporal databases addresses similar concerns 
snapshot timestamp views identified referring underlying model theoretic view 
finite snapshot databases single fixed temporal domain considered 
hand pointed deals issue multiple time granularities address 
treating temporal database special kind order structure transfer results techniques mathematical logic database theory possible 
database theory particular supplies concepts query expressiveness data complexity necessary analysis mathematical properties query languages 
think single notion completeness query languages temporal databases 
proposed order logic language temporally complete query language 
language inductive temporal queries expressible 
claim temporal logic equally expressive order logic substantiated 
strong evidence contrary 
conjecture claim hold finite databases 
context relational databases shown papers single complete query language different classes query languages related intricate ways 
believe situation temporal databases similar 
incomplete temporal information temporal information may incompletely specified 
example partial ordering events may 
way dealing problems give linearity known mathematical structures develop temporal logic events 
generalize notion temporal database 
describe solution predominant database area 
deal incomplete temporal information authors proposed apply classic framework timestamp databases 
modelled incomplete information context relational data model marked nulls placeholders standing rule stating entities multiplied needlessly interpreted mean simplest competing theories preferable explanation unknown phenomena attempted terms known 
webster ii new riverside university dictionary 
value domain 
null value may appear different columns different rows table 
row quantifier free local condition associated contains nulls row 
entire table quantifier free global condition relating nulls different rows proposed 
clear close correspondence local conditions tables quantifier free timestamp formulas 
koubarakis pursued correspondence full generality context temporal domains approach may temporal dimensions variables timestamp formulas 
timestamp formulas contain variables may additionally contain nulls cc null 
call timestamp formulas indefinite 
indefinite timestamp formulas define indefinite timestamps just sets timestamps 
indefinite timestamp table finite set tuples indefinite timestamp formulas local conditions global condition 
semantics sem indefinite temporal table defined steps 
rep set timestamp relations obtained substituting domain values nulls way global condition satisfied 
second sem set temporal relations corresponding timestamp relations rep 
example suppose know exact time split czechoslovakia different countries know 
incomplete knowledge represented table table global condition 
far query languages incomplete temporal databases concerned semantics query languages discussed section generalize easily 
semantics indefinite timestamp table set sem temporal relations answer query indefinite timestamp table representing set temporal relations corresponding answers obtained separately individual members sem 
addition modal queries asked facts certain true member sem possible true member sem 
example consider table 
query possible czechoslovakia returns true certain czechoslovakia returns false split may occurred earlier year 
hand query certain slovakia returns true slovakia certain independent 
implementation query languages incomplete timestamp databases raises new problems presence global conditions timestamp formulas nulls 
modal queries need supported 
studied relational calculus algebra incomplete timestamp databases 
shown complexity query processing databases worse incomplete relational databases 
obtained corresponding lower bounds restricted framework 
single values null non null constitute timestamps 
consequently finite temporal databases represented framework 
nulls related global conjunctive condition 
may arbitrarily temporal dimensions surprisingly complexity evaluating queries crucially depends number 
shows data complexity obtaining certain answers order queries ffl ptime dimensional time disjunctive queries original proof nonconstructive constructive ffl np complete dimensional time 
interesting results combined complexity evaluating queries discuss lack space 
results apply finite orders 
pursued problem incomplete temporal information concrete query languages 
didn base approaches degree approaches recast framework 
context discrete temporal domain postulated represent indefinite point possible interval viewed indefinite timestamp formula meaning instant indefinite interval pair possible intervals 
null values appearing timestamp formulas associated different tuples compared equality 
incomplete temporal relation example represented framework 
hand quadratic query evaluation algorithm possible queries expressed slightly restricted subset tquel 
proposed incorporate kinds probabilistic information incomplete temporal databases described possible implementation 
context discrete temporal domain proposed represent indefinite timestamp pair lower bound upper bound bounds finite unions intervals 
easily represented indefinite timestamp formula 
approach precise expressiveness complexity bounds query processing determined 
historically deal problem incomplete temporal information 
approach completely fit framework 
approach temporal database records information events points intervals relationships 
characteristically relationships just attribute values constant may appear database 
possible formulate queries asking relationships events purely order language 
set allowed relationships user defined derivable relationships events specified special essentially horn clausal form 
query evaluation efficient polynomial time 
derivation disjunctions possible incomplete disjunctive queries 
discussed evaluation atomic queries 
recast indefinite timestamp tables 
point events viewed null values ordering captured global condition 
related ai briefly summarize differences database ai perspectives representation processing temporal information 
ai approaches restricted propositional case non temporal part propositional 
exceptions include 
second take interval view time originates 
approach associate proposition interval holds 
proposed algebra intervals basic kinds interval relationships operations relationships included boolean operations composition 
intervals related set relationships represented disjunction 
rich array disjunctive information represented 
example fact intervals disjoint represented expressed logical formula assume gamma interval gamma gamma gamma possibility formulating sets interval relationships quantifier free formulas algebra subsumed terms expressive power framework described section 
determining satisfaction set interval relationships turned np complete 
restricted ptime algebras proposed 
interesting compare algebras tractable subclasses indefinite timestamp databases identified 
works introduced constructs representing distance information 
represented order framework assuming signature time domain contains successor addition 
third difference query languages supported query evaluation 
allowed queries typically involve establishing relationship points intervals 
representation languages propositional unable represent relational database 
consequently order queries involving quantifiers supported 
queries evaluated constraint satisfaction algorithms 
open question approaches generalized order logic 
ai research concerned representation querying temporal information temporal reasoning drawing additional assumptions persistence defaults special procedures abduction 
survey proposed single uniform formal framework studying temporal databases temporal query languages 
applied framework wide spectrum query languages 
identified number important mathematical properties query languages 
believe framework serve foundation systematic advances area temporal databases 
acknowledgments grateful marianne michael surajit chaudhuri curtis manolis koubarakis peter revesz rick snodgrass david toman pierre wolper sharing insights knowledge temporal databases 
members fall database theory class ksu comments 
abadi manna 
temporal logic programming 
journal symbolic computation september 
abiteboul hull vianu 
foundations databases 
addison wesley 
abiteboul vianu 
expressive power query languages 
theoretical studies computer science 
academic press 
ahn 
database issues telecommunications network management 
acm sigmod international conference management data 
allen 
maintaining knowledge temporal intervals 
communications acm november 
allen hayes 
moments points interval temporal logic 
computational intelligence 
apt blair walker 
theory declarative knowledge 
minker pages 
bacchus tenenberg 
non reified temporal logic 
artificial intelligence 

temporal logic programming complete expressive 
acm symposium principles programming languages 

simple proof completeness temporal logic programming 
nas del cerro editors intensional logics programming 
oxford university press 

expressiveness temporal logic programming 
information computation 
appear 
chomicki wolper 
temporal deductive databases 
tansel pages 
chomicki wolper 
constraint generating dependencies 
international conference database theory prague czech republic january 
short version proc 
nd workshop principles practice constraint programming 
ni wolper 
representation infinite temporal data queries 
acm symposium principles database systems 
beeri 
formal approach object oriented databases 
data knowledge engineering 
brodsky jaffar maher 
practical constraint databases 
international conference large data bases 
chandra 
theory database queries 
acm symposium principles database systems pages 
chandra harel 
computable queries relational databases 
journal computer system sciences 
chandra harel 
structure complexity relational queries 
journal computer system sciences 
chaudhuri 
temporal relationships databases 
international conference large data bases 
chaudhuri 
personal communication 
chomicki 
functional deductive databases query processing presence limited function symbols 
phd thesis rutgers university new brunswick new jersey january 
laboratory computer science research technical report lcsr tr 
chomicki 
polynomial time computable queries temporal deductive databases 
acm symposium principles database systems nashville tennessee april 
chomicki 
history checking dynamic integrity constraints 
ieee international conference data engineering phoenix arizona february 
chomicki 
depth bounded bottom evaluation logic programs 
journal logic programming 
appear 
chomicki nski 
temporal deductive databases infinite objects 
acm symposium principles database systems austin texas march 
chomicki nski 
finite representation infinite query answers 
acm transactions database systems june 
clifford 
historical relational data model algebra lifespans 
ieee international conference data engineering 
clifford 
historical relational data model revisited 
tansel pages 
clifford tuzhilin 
completeness historical relational query languages 
acm transactions database systems march 
clifford 
semantics bi temporal variable databases 
international conference extending database technology cambridge uk march 
clifford tansel 
algebra historical relational databases views 
acm sigmod international conference management data 
clifford warren 
formal semantics time databases 
acm transactions database systems june 
dean mcdermott 
temporal data base management 
artificial intelligence 
dechter meiri pearl 
temporal constraint networks 
artificial intelligence 
denecker bruynooghe 
temporal reasoning abductive event calculus 
european conference artificial intelligence 
dreyer dittrich schmidt 
research perspectives time series management systems 
sigmod record march 
snodgrass 
historical indeterminacy 
ieee international conference data engineering 

personal communication 
soo snodgrass 
tsql data model time 
tsql commentary march 
elmasri wuu 
time index monotonic tree 
tansel pages 
emerson 
temporal modal logic 
van leeuwen chapter pages 
enderton 
mathematical logic 
academic press 
eshghi 
abductive planning event calculus 
international conference logic programming 
finger 
handling database updates dimensional temporal logic 
journal applied non classical logic 
international organization standardization 
database language sql 
iso iec 
gabbay 
declarative past imperative executable temporal logic interactive systems 
barringer pnueli editors temporal logic specification volume pages 
springer verlag lncs 
gabbay 
temporal logic historical databases 
international conference large data bases 
gabbay pnueli shelah 
temporal analysis fairness 
acm symposium principles programming languages 
gabbay hodkinson reynolds 
temporal logic mathematical foundations computational aspects 
oxford university press 
gadia 
homogenous relational model query languages temporal databases 
acm transactions database systems december 
gadia 
temporal databases prelude parametric data 
tansel pages 
gadia nair poon 
incomplete information relational temporal databases 
international conference large data bases 
grahne 
problem incomplete information relational databases 
springerverlag lncs 
grossman nerode ravn rischel editors 
hybrid systems 
springer verlag lncs 
halpern shoham 
propositional modal logic time intervals 
journal acm october 
imielinski 
incomplete information relational databases 
journal acm 
jaffar 
lassez 
constraint logic programming 
acm symposium principles programming languages 
jensen clifford gadia segev snodgrass 
glossary temporal database concepts 
tansel pages 
jensen mark 
differential query processing transaction time databases 
tansel pages 
jensen mark roussopoulos 
incremental implementation model relational databases transaction time 
ieee transactions knowledge data engineering 
jensen snodgrass 
temporal specialization 
ieee international conference data engineering pages 
jensen soo snodgrass 
unification temporal data models 
ieee international conference data engineering 
kabanza 
wolper 
handling infinite temporal data 
acm symposium principles database systems pages nashville tennessee april 
kamp 
formal properties 
theoria 
kamp 
tense logic theory linear order 
phd thesis university california los angeles 
kanellakis 
elements relational database theory 
van leeuwen chapter pages 
kanellakis goldin 
constraint programming database query languages 
conference theoretical aspects computer software 
springerverlag 
kanellakis kuper revesz 
constraint query languages 
acm symposium principles database systems pages nashville tennessee april 
appear journal computer system sciences 
kanellakis ramaswamy vitter 
indexing data models constraints classes 
acm symposium principles database systems 
kautz ladkin 
integrating metric qualitative temporal reasoning 
national conference artificial intelligence 

kim chakravarthy 
modeling time adequacy distinct time concepts temporal databases 
international conference entity relationship approach arlington texas december 
kolaitis papadimitriou 
negation fixpoint 
journal computer system sciences 

indexing techniques historical databases 
tansel pages 
koubarakis 
representation querying temporal databases power temporal constraints 
ieee international conference data engineering 
koubarakis 
database models infinite indefinite temporal information 
information systems march 
koubarakis 
foundations indefinite constraint databases 
international workshop principles practice constraint programming orcas island washington may 
lncs springer verlag 
koubarakis 
foundations temporal constraint databases 
phd thesis national technical university athens 
kowalski sergot 
logic calculus events 
new generation computing 
ladkin 
primitives units time specification 
national conference artificial intelligence pages 
ladkin 
logic time representation 
phd thesis university california berkeley 
cliff leung muntz 
stream processing temporal query processing optimization 
tansel pages 
ligozat 
generalized interval calculi 
european conference artificial intelligence pages 
saake 
monitoring dynamic integrity constraints temporal logic 
information systems 
lloyd 
foundations logic programming 
springer verlag nd edition 
lomet salzberg 
transaction time databases 
tansel pages 
pernici 
temporal data management systems comparative view 
ieee transactions knowledge data engineering december 
jr mckenzie snodgrass 
evaluation relational algebras incorporating time dimension databases 
acm computing surveys december 
meiri 
combining qualitative quantitative constraints temporal reasoning 
national conference artificial intelligence 
minker editor 
foundations deductive databases logic programming 
morgan kaufmann 
montanari pernici 
temporal reasoning 
tansel pages 
montanari pernici 
temporal logic reconstruction temporal databases 
proc 
international workshop infrastructure temporal databases arlington texas june 
nebel 

reasoning temporal relations maximal tractable subclass allen interval algebra 
national conference artificial intelligence 
ni 
st 
efficient symbolic representation periodic time 
international conference information knowledge management 
orgun muller 
temporal algebra model 
orlowska papazoglou editors advances database research proceedings th australian database conference pages 
world scientific 
paredaens van den bussche van gucht 
theory spatial database queries 
acm symposium principles database systems 
przymusinski 
declarative semantics deductive databases logic programs 
minker pages 
smith patterson 
medical information systems characterization challenges 
sigmod record september 
revesz 
closed form datalog queries integer order 
international conference database theory pages 
springer verlag lncs 
revesz 
closed form evaluation datalog queries integer gap order constraints 
theoretical computer science 
roddick patrick 
temporal semantics information systems survey 
information systems 
segev 
join processing optimization temporal relational databases 
tansel pages 
sistla wolfson 
temporal triggers active databases 
ieee transactions knowledge data engineering 
appear 
snodgrass 
temporal query language tquel 
acm transactions database systems june 
snodgrass 
temporal object oriented databases critical comparison 
kim editor modern database systems pages 
addison wesley 
snodgrass ahn 
temporal databases 
ieee computer 
snodgrass tsql tutorial 
sigmod record september 
snodgrass tsql language specification 
sigmod record march 
snodgrass 
temporal databases 
theories methods spatio temporal reasoning geographic space pages 
springer verlag lncs 
tansel clifford gadia jajodia segev snodgrass editors 
temporal databases theory design implementation 
benjamin cummings 
tansel 
generalized relational framework modeling temporal data 
tansel pages 
loucopoulos 
time dimension conceptual modelling 
information systems 
thomas 
combinatorial approach theory automata 
information control 
toman chomicki rogers 
datalog integer periodicity constraints 
international logic programming symposium ithaca new york november 
tuzhilin clifford 
temporal relational algebra basis temporal relational completeness 
international conference large data bases 
ullman 
principles database knowledge base systems volume 
computer science press 
van beek 
reasoning qualitative temporal information 
artificial intelligence 
van benthem 
logic time 
reidel nd edition 
van der meyden 
complexity querying indefinite data linearly ordered domains 
acm symposium principles database systems 
van der meyden 
personal communication 
van emden kowalski 
semantics predicate logic programming language 
journal acm 
van gelder topor 
safety translation relational calculus queries 
acm transactions database systems june 
jan van leeuwen editor 
handbook theoretical computer science 
elsevier mit press 
vardi 
temporal fixpoint calculus 
acm symposium principles programming languages 
vardi 
complexity relational query languages 
acm symposium theory computing pages 
vardi 
fundamentals dependency theory 
borger editor trends theoretical computer science pages 
computer science press 
venema 
expressiveness completeness interval tense logic 
notre dame journal formal logic 
vilain kautz 
constraint propagation algorithms temporal reasoning 
national conference artificial intelligence 
wang jajodia subrahmanian 
temporal modules approach federated temporal databases 
acm sigmod international conference management data pages 
wolper 
temporal logic expressive 
information control 
country capital years independence czech kingdom prague czechoslovakia prague czech republic prague slovakia bratislava poland poland poland warsaw table timestamp view year independent countries delta delta delta delta delta delta fg czechoslovakia prague poland warsaw delta delta delta delta delta delta slovakia bratislava czechoslovakia prague poland warsaw delta delta delta delta delta delta czech republic prague slovakia bratislava poland warsaw delta delta delta delta delta delta table snapshot view country capital year independence delta delta delta delta delta delta delta delta delta czechoslovakia prague poland warsaw delta delta delta delta delta delta delta delta delta slovakia bratislava delta delta delta delta delta delta delta delta delta czechoslovakia prague poland warsaw delta delta delta delta delta delta delta delta delta czech republic prague slovakia bratislava poland warsaw delta delta delta delta delta delta delta delta delta table model theoretic view country capital years independence czech kingdom prague czechoslovakia prague czech republic prague slovakia bratislava poland poland poland warsaw table timestamp view timestamp formulas id op time country capital insert czech kingdom prague delete czech kingdom prague insert czechoslovakia prague delete czechoslovakia prague insert slovakia bratislava delete slovakia bratislava insert czechoslovakia prague delete czechoslovakia prague insert czech republic prague insert slovakia bratislava delta delta delta table backlog representation country capital years independence czech kingdom prague czechoslovakia prague czech republic prague slovakia bratislava poland poland poland warsaw global condition table incomplete information 
