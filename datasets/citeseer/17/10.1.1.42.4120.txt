coalgebras modal logic martin technische universitat dresden institut fur algebra dresden germany mail math tu dresden de coalgebras growing importance theoretical computer science 
develop languages significant specification verification systems modelled 
modal logic proved suitable purpose 
far approaches language describe deterministic coalgebras 
introduces generalization covers non deterministic systems 
special case obtain usual modal logic kripke structures 
models modal language coalgebras functor inductively constructed constant sets identity functor product coproduct exponentiation power set functor 
define language show embeds prove image finite coalgebras expressive distinguish elements bisimilarity 
give complete calculus case constants occuring finite 
coalgebras provide unifying view large variety dynamic systems transition systems automata data structures coalgebras modal logic objects cf 
jac rut 
great interest develop kind language describe 
theoretical point view give means compare systems existing languages 
hand languages instance specify systems verify properties 
jac equations describe coalgebras 
corradini cor introduces equational calculus describe coalgebras certain polynomial functors 
gum kurz kur show characterized kind equations constitutes dual version birkhoff theorem 
mos moss shows underlying functor determines modal logic 
large class functors derives languages corresponding expressive distinguish elements bisimilarity 
baltag follows ideas bal presents infinitary modal languages capture notion simulation bisimulation 
kurz kur introduces modal language coalgebras certain polynomial functors contains atomic propositions 
illustrates relevance specification systems gives complete axiomatization 
similar language ro larger class coalgebras 
approach generalized ro corresponding coalgebras models great variety deterministic systems 
articles notion syntax tree give complete axiomatization 
jacobs jac adds operators language 
considers allow modelling non deterministic systems draws relationship galois algebras 
deal class functors jac inductively constructed constant sets identity functor product coproduct exponentiation power set functor 
corresponding coalgebras constitute bridge kripke structures turn special case 
derive modal language depends functors coalgebras lying functor case kripke structures language equivalent usual modal logic 
define expressive language embedded language expressive distinguish elements bisimilarity 
section presents complete calculus expressiveness needed 
definitions proofs twofold induction outer induction runs structure formulas inner structure functor 
section presents basic definitions coalgebra theory examples order illustrate coalgebras model dynamic systems 
language semantics section 
section define language show embeds prove language logical equivalence coincides bisimilarity 
section contains completeness proof calculus 
wish alexandru baltag fruitful discussions topic 
functors coalgebras chapter define polynomial functors corresponding coalgebras basic notions coalgebra theory 

definition 
call functor set set polynomial inductively constructed ffl constant functors fc 
fixed nonempty set ffl identity functor id 
ffl power set functor id 
finitely times coalgebras modal logic ffl product theta 
theta ffl coproduct 
ffl exponentiation 
fixed non empty set ffl power set functor 
gamma delta article assume fixed non empty polynomial functor 
note definition jac polynomial functor coincide definition polynomial functor rut ro power set functor omitted 
course functor id need included explicitly definition constructed construction principles 
considering case explicitly obtain closer analogy modal logic kripke structures 
convenient opportunity modelling equally determinism nondeterminism ground level 

definition 
set set polynomial functor 
coalgebra pair ff consisting set mapping ff 
mapping homomorphism coalgebras ff ff ffi ff ff ffi relation theta called bisimulation relation exists ff corresponding projections homomorphisms 
elements called bisimilar exists bisimulation relation coalgebras model transition systems automata functor determines kind system modelled 
examples visualize cf 
gol pop alternating automata var deterministic transition systems cf 
rut 

example kripke structures 
kripke structures coalgebras ff functor id theta functors coalgebras denotes set atomic propositions world ff gives set worlds accessible component set atomic propositions hold second component 

example alternating automata 
denote set positive boolean formulas boolean formulas built elements including formulas 
alternating buchi word automaton var tuple sigma sigma finite non empty alphabet finite non empty set states initial state set accepting states theta sigma partial transition function 
word sigma run automaton labeled tree root node depth children set labels fx satisfies 
instance nodes run tree level contain label label contain label label automaton sigma regarded coalgebra gamma id fg delta sigma theta fi fg suppose sigma write defined disjoint normal form automaton sigma corresponds coalgebra ff ff 
gamma sigma delta phi fs psi defined 
elements indicate initial accepting state respectively 
underspecification conversely coalgebra fact alternating buchi word automaton instance need unique initial state 

example transition systems 
deterministic transition systems output sigma represented coalgebras ff coalgebras modal logic functor sigma theta id fg 
state transition system perform transition gamma 
terminates 
corresponds cases ff 
ff 
respectively 
language section defines language coalgebras gives semantics 
show homomorphisms preserve formulas 
set denote set boolean formulas boolean formulas built elements 
denote set disjunctive formulas say built elements including formula 
analogously denotes set conjunctive formulas words built elements including formula 
mapping denotes set ff gamma denotes set fx 
definition 
modal operators defined inductively structure denoted define set mod mod modal operators follows mod consists ary modal operators fc mod mod id mod mod fl id mod mod theta mod delta mod delta mod mod delta mod delta mod mod delta mod language mod mod arity sum arities modal occuring set define mod fmod mod mod xg language defined follows mod mod mod words gamma mod delta defined usually 
note definition delta denotes elementwise concatenation 
order define semantics basically need inductions outer induction structure formulas inner induction structure functor analyzing modal operator 
frequently nested induction definitions proofs 
note mappings definition corresponding projections injections respective products coproducts 

definition 
ff coalgebra 
subset satisfying formula defined twofold induction 
outer induction semantics boolean connectives defined usually 
mod set ff gamma mod set defined inner induction follows kck fcg id fl id theta delta oek gamma gamma koek delta oe mod delta oek gamma koek delta oe mod coalgebras modal logic delta oek gamma gamma koek delta oe mod mod set gamma delta fa mod gamma mod delta puts arguments mod places corresponding modalities words identity mod inductively gamma bm delta gamma delta gamma bm delta assume semantics gamma mod delta extends semantics mod accordingly 
write ff ffl mean write ff ffl mean ff ffl expresses ff ffl ff ffl expresses ff ffl 
furthermore ffl denotes ff ffl coalgebra ff ffl means ff ffl coalgebra ff 
polynomial functors power set functor definition modalities ro 
similar notion paths defined jac definitions differ cases fc id 
setting mod case definition resulting set mod unary modal operators exactly correspond set paths 
way capture notion invariants cf 
jac mod mod formula represents invariant modal operator mod holds 

example 
continued 
coalgebras id theta obtain language language 
ff coalgebra ff fp gamma ff delta 
formula holds holds worlds accessible holds atomic proposition say atomic proposition holds formula expresses hold consider usual finitary modal logic 
obtain equivalent corresponding translation 



example 
continued 
assume deal alternating automata represented coalgebras functor gamma id fg sigma delta theta fi fg obtain language 
coalgebra ff ff gamma sigma delta phi fs psi defined 
formulas indicate initial final state respectively words respectively 
sigma formula expresses defined 
instance form 
formula satisfied holds holds note formulas language models run trees models coalgebras 
coalgebras modal logic 
example 
continued 
consider coalgebras functor sigma theta id fg represent deterministic transition systems output alphabet sigma 
language fl sigma 
ff coalgebra formula holds ff words ff terminate yielding output formula fl expresses ff performs transition holds successor state 
satisfied ff means ff terminates prove homomorphisms coalgebras preserve formulas 
proposition 
ff 
ff homomorphism ff ffl ff ffl proof 
show gamma gamma delta outer induction runs structure 
obvious boolean connectives 
mod show mod gamma gamma delta verified inner induction structure induction hypothesis fc kck fcg id gamma fcg gamma gamma kck delta id fl gamma gamma delta gamma gamma fl delta id gamma delta gamma gamma delta gamma gamma delta gamma gamma delta theta oe mod 
delta oek gamma gamma koek delta gamma gamma gamma koek delta gamma gamma gamma koek delta gamma gamma delta oek delta bisimilarity logical equivalence coincide oe mod 
delta oek gamma koek delta gamma gamma koek delta gamma gamma koek delta gamma gamma delta oek delta oe mod 
delta oek gamma gamma koek delta gamma gamma gamma koek delta gamma gamma gamma koek delta gamma gamma delta oek delta observe induction hypothesis holds oe mod holds oe gamma mod delta get mod gamma delta gamma gamma delta gamma gamma delta gamma gamma delta set consider mod 
homomorphism get ff gamma gamma delta ff gamma gamma gamma delta gamma gamma ff gamma delta gamma gamma delta bisimilarity logical equivalence coincide order distinguish elements bisimilarity need full expressiveness sufficient restricted set modal operators 
define restricted language show embedded prove powerful distinguish elements bisimilarity logical equivalence coincides bisimilarity 

definition 
define set mod mod modal operators inductively structure follows mod consists ary modal operators definition analogous definition cases id 
coalgebras modal logic fc mod mod id mod mod fl id mod mod pig theta mod delta mod delta mod mod delta mod delta mod mod delta mod mod mod pia mod arity mod mod sum arities modal operators occuring set define set mod fmod mod mod xg language mod mod mod note modal operators form mod pi mod mod mod 
definition 
ff coalgebra 
semantics defined twofold induction 
semantics boolean connectives outer induction defined usually 
mod set ff gamma mod defined analogously definition cases id follows fcg id fl bisimilarity logical equivalence coincide id fu pi fu theta delta oe gamma gamma oe delta oe mod delta oe gamma oe delta oe mod delta oe gamma gamma oe delta oe mod pi mod set fu pi fu defined analogously definition semantics extended mod gamma mod delta accordingly 
write ff ffl mean write ff ffl mean mod mod mod mod ff ffl mod nkn exists ff ffl mod ik 
dually ff ffl pi mod nkn holds exists ff ffl mod ik 
show embedded preceeding definition gives way lifting boolean connections formulas mod level upper 

definition 
theta emb gamma mod delta gamma mod delta mod emb oe 
delta oe continued gamma mod delta canonical way 
coalgebras modal logic emb gamma mod delta gamma mod delta mod emb oe 
delta oe continued gamma mod delta canonical way 
emb gamma mod delta gamma mod delta mod emb oe 
delta oe continued gamma mod delta canonical way 
define emb gamma mod delta mod emb oe 
gamma oe see definition 
note mapping definition bijection emb defined 
semantics mod extended gamma mod delta canonical way 

lemma 
ff coalgebra 
theta oe gamma mod delta oe gamma koek 
oe gamma mod delta oe koek 
oe gamma mod delta oe gamma koek 
oe gamma mod delta oe gamma koek delta proof 

induction oe 

oe gamma oe gamma gamma oe delta gamma koek delta eventually define translation tr embeds 
definition 
define tr twofold induction 
outer runs structure formulas bisimilarity logical equivalence coincide boolean connectives defined usually 
mod set tr tr translation tr mod gamma mod delta defined inner induction follows tr 
id tr fl 
fl tr id tr 
tr tr pi 
gamma tr delta theta tr delta oe 
emb gamma tr oe delta oe mod tr delta oe 
emb gamma tr oe delta oe mod tr delta oe 
emb gamma tr oe delta oe mod tr 
emb gamma tr delta tr pi 
emb gamma tr delta tr gamma mod delta gamma gamma mod delta delta gamma mod delta continued mod canonical way 
straightforward check satisfaction relation preserved 
proposition 
ff coalgebra ff ffl ff ffl tr proof 
induction definition 
boolean connectives outer induction obvious 
case mod apply inner induction 
means prove mod ktr show induction structure fc fcg ktr coalgebras modal logic id fl ktr fl tr ktr id gamma delta gamma ktr delta tr ktr pi fu fu ktr ktr tr ktr pi theta oe mod 
induction hypothesis lemma yield delta oe gamma gamma oe delta gamma gamma ktr oe delta tr oe ktr delta oe oe mod 
induction hypothesis lemma yield delta oe gamma oe delta gamma ktr oe delta tr oe ktr delta oe analogous case theta induction hypothesis shows oe ktr oe holds oe gamma mod delta mod 
fu fu ktr gamma ktr delta tr ktr dual case pi mod follows analogous way 
get mod ff gamma ff gamma ktr ff gamma ktr ktr proof shows adding pi operators id increase expressiveness bisimilarity logical equivalence coincide roughly speaking translation push boolean connectives respective modal operators level upper level power set reached 
language usually expressive instance fc countable set 
give formula mod holds coalgebra ff ffl countable empty 
hand 
mod satisfies property 
immediately obtain proposition homomorphisms preserve formulas 
corollary 
ff 
ff homomorphism ff ffl ff ffl prove fact expressive distinguish elements bisimilarity 
purpose need equivalent definition bisimulation see definition induction definition equivalent definition lifting relation jac 

definition 
theta define rg theta follows fc trg id trg trt id trg xry xry theta trg trg gamma delta gamma delta gamma gamma note injective mapping gamma partial mapping domain 
coalgebras modal logic trg trg xr xr 
lemma 
ff ff coalgebras theta bisimulation relation ff ff 
proof 
induction structure similarly kripke structures obtain bisimilarity coincides logical equivalence called image finite structures 
concept defined follows 

definition 
polynomial functor set 
element called image nite functor constructed finite power set functor power set functor 
coalgebra ff called image nite ff image finite 
preceeding lemma need formula delta mod constructed image finite ff ffl delta 

definition 
image finite 
define formula delta mod follows fc delta id delta fl id delta theta delta delta delta gamma delta delta delta delta gamma gamma delta gamma delta delta delta delta gamma delta fixed bisimilarity logical equivalence coincide delta gamma mod delta nkn fx delta mod ik 

lemma 
ff coalgebra image finite 
ff ffl delta proof 
induction assume image finite coalgebras ff ff 
lemma gives formula distinguishes elements cf 
definition denotes logical equivalence 
elements logically equivalent satisfy exactly formulas 

lemma 
ff ff image finite coalgebras theta denote logical equivalence 
exists formula mod ff ffl ff proof 
induction fc set id exists ff ffl ff 
set fl 
id assume fy find formulas ff ffl ff set pi 
case exists fx obtain formulas ff ffl ff put coalgebras modal logic theta set delta gamma delta gamma delta gamma delta set delta delta gamma gamma delta lemma automatically get ff ffl ff 
case gamma delta gamma gamma 
induction hypothesis yields gamma gamma gamma delta put delta gamma gamma gamma delta exists set delta gamma delta assume fy obtain mod ik ff ffl ff define gamma pi mod delta nkn 
case exists treated analogously 

proposition 
ff ff image finite coalgebras 
largest bisimulation relation theta ff ff logical equivalence relation theta coincide 
proof 
assume corresponding projections bisimulation relation homomorphisms 
corollary 
assume exist lemma ff ff 
lemma yields gamma ff ff delta hand ff ff ffl gamma ff ff delta hand ff ff gamma ff ff delta contradicts surprising need assume coalgebras proposition image finite 
restriction needed analogous result case kripke structures 
complete calculus proposition shows expressive distinguish elements bisimilarity 
proposition proves embedded words expressive language expressive distinguish elements bisimilarity 
complete calculus complete calculus defined expected twofold induction 
need define formula delta ffl delta words formula property holds satisfaction relation ffl independently coalgebraic structure choice purpose need restrict functor remainder assume constant sets occur finite 
means regard coalgebras transition systems sets output values required finite 
restriction surprising needed kur ro order define complete calculus 

definition 
define formula delta gamma mod delta follows fc delta id delta fl id delta theta delta emb delta delta emb delta emb delta delta emb delta fixed delta 
note lemma semantics extended mod gamma mod delta cf 
lemma 
coalgebras modal logic 
lemma 
ff coalgebra delta gamma delta proof 
assume arbitrary straightforward show induction structure delta 
lemma delta gamma delta delta gamma delta 
definition 
define syntactical calculus twofold induction 
outer induction axioms rules formulas taut substitution instances boolean tautologies mp ni defined formulas gamma mod delta inner induction follows fc det id det fl fl fl fl fl ni fl id 
ni theta ni oe emb oe emb delta emb delta emb delta emb delta complete calculus ni oe emb delta emb oe delta oe emb delta oe mod ni oe emb oe taut substitution instances boolean tautologies gamma mod delta mp oe oe emb oe gamma emb emb oe delta ni oe emb oe 
example 
continued 
case models deal functor id theta order state calculus functor derive axioms rules id 
ni det ni id theta ni 

coalgebras modal logic get calculus taut substitution instances boolean tautologies mp ni 
det clause exactly complete calculus known modal logic kripke structures cf 
gol pop 
axiom states contribute expressiveness dispense formula 
restricted language syntactically equivalent cf 
example 

proposition soundness 
ffl proof 
induction length proof show simultaneously gamma mod delta implies ffl implies ffl 
completeness result need introduce 
definition 
define syntactical calculus fl extends calculus formulas gamma mod delta follows taut substitution instances boolean tautologies gamma mod delta mp fl fl oe fl oe ext oe fl oe complete calculus note fl coincide 
introduce notion canonical coalgebra usually constructed maximal consistent sets formulas course induction structure functor 

definition 
subset phi gamma mod delta consistent formulas oe oe phi fl oe oe subset phi gamma mod delta called maximal consistent oe gamma mod delta oe phi oe phi set sg phi gamma mod delta phi 

lemma 
theta oe gamma mod delta fl oe implies fl emb oe oe gamma mod delta fl oe implies fl emb delta emb oe oe gamma mod delta fl oe implies fl emb oe proof 
induction length proof 

lemma 
gamma sg cases fc exactly gamma id gammafl fl gammag theta gamma emb gamma gamma exactly emb delta gamma gamma emb gamma gamma coalgebras modal logic gamma emb gamma gamma proof 
fc gamma exists gamma 
gamma axiom det 
id assume exist gammafl fl 
rule ni axiom conclude fl fl fl fl 
axiom det obtain fl gamma yields contradiction fl gamma 
assume gammafl fl fl gamma fl fl gamma 
get contradiction fl fl gamma axiom det 
eventually proves gammafl theta maximality gamma follows lemma definition 
axiom ensures exactly emb delta gamma 
emb delta gamma maximality gamma proved applying lemma definition 
analogously case thetat apply lemma definition 

definition 
structure define mapping ff sg follows fc ff gamma 
gamma id ff gamma 
gammafl id ff gamma 
gamma gamma gamma theta ff gamma 
gamma ff gamma ff gamma delta ff gamma 
gamma ff gamma delta emb delta gamma complete calculus ff gamma 
gamma ff gamma delta ff gamma 
fff gamma gamma oe gamma mod delta emb oe gamma oe gamma define ff canonical coalgebra 
lemma guarantees ff defined 
lemma contains standard results cf 
gol pop proved 

lemma 
language containing boolean connectives syntactical calculus including substitution instances boolean tautologies modus ponens 
phi consistent subset members phi 
exists maximal subset gamma gamma consistent gamma gamma phi gamma 
psi psi equivalent psi ii gamma gamma maximal psi gamma gamma 

lemma 
gamma ff gamma ffl gamma proof 
twofold induction structure 
outer induction obvious boolean connectives 
case mod show gamma ff gamma gamma delta gamma 
prove inner induction gamma sg mod ff gamma gamma fc definition lemma ff gamma kck ff gamma gamma 
coalgebras modal logic id induction hypothesis get ff gamma fl gammafl gammafl fl gamma 
id ff gamma definition induction hypothesis get gamma gamma gammag gamma gamma lemma obtain formulas gamma 
application rule ni axiom yields fl proves gamma gamma 
gamma follows gamma gamma gamma gamma gamma gamma equivalent gamma induction hypothesis shows ff gamma theta definition induction hypothesis oe mod ff gamma delta oek gamma gamma koek delta gamma ff gamma delta ff gamma koek oe gamma delta oe gamma definition induction hypothesis axiom ni oe mod ff gamma delta oek gamma koek delta emb delta gamma ff gamma koek emb delta gamma oe gamma delta oe gamma analogous case theta shows induction structure formulas gamma mod delta induction hypothesis gamma oe gamma mod delta ff gamma koek oe gamma complete calculus mod 
follows ff gamma gamma gamma emb gamma gamma gamma ff gamma induction hypothesis equivalent gamma claim 
lemma gives oe oe gamma fl oe oe 
conclude oe oe 
taut mp get emb gamma oe oe 
delta ni 
axiom yields fl emb oe emb oe definition proves gamma 
mod assume gamma 
gamma gamma gamma gamma gamma claim gives gamma gamma gamma ff gamma eventually proves ff gamma 
theorem 
polynomial functor constant sets occur finite 
equivalent ii ffl iii ff ffl 
proof 
ii 
proposition 
ii iii 
obvious 
iii 
assume 
consistent existed gamma gamma lemma ff gamma ffl lemma 
get 
yields contradiction assumption 
coalgebras modal logic approach shows generalize modal logic kripke structures see gol pop modal languages coalgebras represent deterministic systems cf 
kur ro 
introduced method functor derives language order describe corresponding coalgebras 
modal operators complex general arbitrary finite arity 
simpler language cf 
jac possibly greater interest specifying verifying systems 
pay price reduced expressiveness bisimilarity probably equal logical equivalence 
application purposes interest built different modal operators modelling methods object single modal operator 
inductive structure easy 
instance cases theta definition product mod mod coproduct 
similar way probably built modal operator capturing structure correspond coalgebraic logic mos 
interest possibly simpler language distinguish elements similarity cf 
bal weak bisimilarity 
option altering language add operators cf 
jac order gain expressiveness 
general add arbitrary fixed points language done modal calculus cf 
sti possibly derive generalization modal calculus coalgebraic setting 
polynomial functors power set functor language coincides language coalgebras ro 
underlying functors ro called constructed polynomial functors power set functor greatest fixed points functor 
instance describe coalgebras streams 
sake simplicity construction principles functor omitted 
easily added order extend approach 
bal baltag truth simulation coalgebraic perspective logic games 
unpublished manuscript cor corradini complete calculus equational deduction coalgebraic specification report sen national research institute mathematics computer science amsterdam 
gol goldblatt logics time computation csli lecture notes csli 
gum equational implicational classes coalgebras 
th international seminar relational methods logic algebra computer science warsaw 
reichel defining equations terminal coalgebras 
trends data type specification astesiano reggio tarlecki eds lncs 
jac jacobs cofree coalgebras 
algebraic methods software technology nivat eds lncs 
jac jacobs objects classes algebraically freitag jones lengauer 
schek eds object orientation parallelism persistence kluwer acad 
publ 
jac jacobs temporal logic coalgebras galois algebras technical report csi computing science institute university nijmegen 
kur kurz variety theorem modal logic proceedings advances modal logic uppsala csli stanford 
coalgebras modal logic kur kurz specifying coalgebras modal logic entcs 
mos moss coalgebraic logic ann 
pure appl 
logic 
appear pop steps modal logic cambridge university press 
ro modal logic terminal coalgebras tcs 
appear ro languages coalgebras entcs 
rut rutten universal coalgebra theory systems tcs 
appear sti stirling modal temporal logics processes 
lncs 
var vardi alternating automata unifying truth validity temporal logics 
proc 
th international conference automated deduction mccune ed lncs 
