error correction techniques handwriting speech ambiguous error prone systems interfaces support natural inputs handwriting speech prevalent desirable trend 
interface techniques error prone 
despite research efforts improve recognition rates certain amount error removed 
suitable research efforts attend problem correction techniques error prone techniques 
humans developed countless ways correct errors understanding clarify ambiguous statements 
time interface designers focus ways computers 
survey new area user interface research design implementation study interfaces correcting error prone input technologies 
ground definition research topic previous research flexible pen note environments 
keywords handwriting speech recognition interface design error handling motivating problem computer interfaces support natural human forms communication handwriting speech gestures supplement replace elements gui paradigm 
interfaces low learning curves ability support tasks authoring drawing drastically changing structure 
additionally people disabilities traditional mouse keyboard accessible 
unfortunately new interfaces come new set problems mistakes 
errors occur initial reaction system designers try eliminate example improving recognition accuracy 
difficult task improvement necessary majority people notice difference speech recognition system 
worse eliminating errors may possible 
humans mistakes dealing forms communication 
example consider handwriting recognition 
expert handwriting recognizers humans recognition accuracy low looking word fragments benefit context 
human accuracy increases cursive handwriting printed handwriting perfect 
evidence points computer handwriting recognition perfect 
computer recognizers error prone humans 
data start fine grained humans able sense 
processing power 
variables vocal fatigue cause usage data differ significantly training data causing reduced recognition accuracy time speech recognition systems 
hand recognition accuracy determinant user satisfaction 
complexity error recovery dialogues hewitt amount gained effort affect user satisfaction 
example users frustrated recognition errors task enter command form writing journal entries 
suggests pay back entering single word case command larger paragraph journal entry compared effort entering word 
error handling new problem 
fact endemic design computer systems attempt mimic human abilities 
research area error handling recognition technologies assume errors occur answer questions best ways deal 
goal survey existing research discovering correcting errors recognition interfaces 
defining area survey identified key research areas error handling recognition interfaces 
error reduction error reduction involves research improving recognition technology order eliminate reduce errors 
focus extensive research easily subject 
evidence suggests holy grail elimination errors probably achievable 
big improvements required users notice difference 
facts chosen address error reduction 
error discovery system user take action related error know error occured 
system may told error user input help user find errors output 
addition system designers techniques automate error discovery thresholding rules historical statistics 
error correction techniques just user interface way party inform error occured way user correct error 
current error handling techniques fall main categories choosing default encouraging ambiguous input mimicking natural human correction strategies 
validation techniques validation goes hand hand research error correction techniques 
validation way determine effectiveness different designs 
survey uncovered research theoretical issues compare techniques practical results techniques effective 
toolkit level support toolkits provide reusable components useful class common similar problems exists 
interfaces error handling benefit tremendously toolkit re time error prone situation arose 
addition interface widgets toolkit need support complete reversibility keep track multiple potential interpretations 
addition surveying existing building platform test strategies dealing segmentation errors handwriting recognition errors gesture recognition errors see 
system called supports handwriting recognition context personal note 
motivation application support note document creation situations typing option 
user interface 
words potential recognized correctly 
darker word recognizer 
word interpretations recognized incorrectly 
user moves mouse word alternatives displayed shown blow 
words ink originally incorrect user able select similar set potential choices 
includes mobile settings users repetitive stress injuries disabilities keyboard typing difficult 
rest describes results survey 
discuss research sub areas mentioned error discovery error correction techniques validation techniques toolkit level support 
error discovery system support error recovery way user handle error needs know error occurred 
user interface conduit system user pass information 
user input notify system error correct described detail section 
visual oral feedback system helps user identify errors 
system try determine mistake user help thresholding hone poon brennan rule base hone davis historical statistics marx schmandt 
user input help system find errors common approaches notification user explicitly indicates presence error example clicking word saying special keyword 
speech handwriting recognition systems approach 
known examples palmpilot tm tm apple tm example user clicks word apple tm menu alternative pictures user interfaces adapted drawing understanding left goldberg pen input right igarashi interpretations appears 
cases special interface notification correction user action may help system discover errors 
example user deletes word enters new system may infer error occurred matching deleted word new 
system output help user find errors plethora hidden information available system designer help users identify errors 
likelihood correct history values item possible values user original input just non application specific ones 
survey shows designer designer beneficial reveal hidden information user brennan davis goldberg igarashi kurtenbach rhodes starner common pieces information display probability correctness called certainty multiple alternatives 
example system shows information certainty system 
probability correctness displayed color 
example word lighter certain corresponding words ink 
shows example systems display multiple alternatives 
drawing understanding system designed igarashi 

bold line represents system current top guess 
dotted lines represent potential alternatives plain line past accepted guess 
shows character recognition system designed goldberg 
larger character system top choice smaller letters second third possibilities 
systems user click alternative tell system default choice changed 
systems user continues input normal implicitly accepting default choice 
interestingly igarashi success approach system goldberg required great cognitive overhead effective character recognition system 
certainty display multiple alternatives achieved audio setting demonstrated brennan 
base approach linguistic research showing humans reveal positive negative evidence converse 
positive evidence output confirms listener heard speaker correctly 
example listener may spell back name just dictated 
negative evidence output reveals listener case recognition system sure understood speaker correctly 
examples repeating speaker sentence replacing questionable word pause simply saying huh 
negative evidence display multiple alternatives example system may say call john jane response user request 
brennan built sophisticated response system techniques 
positive negative evidence limit display alternatives contextual analysis likelihood correctness 
setting multiple alternatives commonly displayed word prediction alm greenberg 
word prediction support communication productivity people disabilities typing cases mouse difficult 
user types letter system retrieves list words completions typed far 
large number potential completions displayed distance actual input screen 
thresholding error prone systems return measure probability result correct return result 
probability represents confidence interpretation 
resultant probabilities compared threshold 
fall threshold system assumes error occurred 
fall assumption error occurred 
systems set threshold zero meaning assume mistake 
systems may set meaning assume wrong word prediction systems try determine reasonable threshold statistics means poon brennan hone 
rules hone suggest rule base determine errors may occurred prove sophisticated statistics thresholding allows context determining error occurred 
example rule user just written lower probability correctness alternatives word write members set variable names currently scope 
goes simple statistics uses knowledge context word written detect errors 
historical statistics error prone systems return measure probability estimates probability may wrong new probabilities generated doing statistical analysis historical data system mistakes 
talk benefits error discovery 
historical analysis help increase accuracy thresholding rules 
example marx schmandt compiled speech data letters misrecognized frequencies list potential alternatives speech recognizer returned 
letter alphabet 
example shows pen data generated author repeating letter alphabet times palmpilot tm column represents letter written columns show letters palmpilot tm graffiti tm recognizer returned 
letters mistaken shown 
original top guess guesses sort matrix called confusion matrix shows potential correct answers system may confused returned answer 
way historical statistics may provide default probability correctness answer 
sophisticated analyses help creation better rules choice apply certain rules 
error discovery necessary component error handling interfaces stigma associated task error discovery error prone 
rules thresholding historical statistics may wrong 
user explicit actions observed system may incorrectly infer error occurred 
user action explicitly notify system error sure error really occurred user eyes 
words approaches mentioned may create new source errors leading cascade error handling issues 
error correction techniques mistake identified system take action correct ask user help correcting sort error handling interface 
alternatively system support error handling integrated fashion 
example interactive beautification system shown displays alternatives stroke 
interface supports notification user selects alternative system infer original default wrong alternative correct 
tasks supported require selection single correct interpretation user input exception search engines may multiple correct responses 
important choice facing designer error handling techniques active system selecting interpretation 
essentially designer choose accept certain choice default wait user confirmation 
part section discusses choice shown literature 
remaining parts discuss commonly techniques error handling encouraging ambiguous input mimicking natural human correction strategies 
choosing default number answers returned error prone system larger number answers expected user 
leaves interface designer choice selecting answers selecting answers correct default 
example drawing understanding system mentioned selects line default shown bold igarashi 
interface designer information probability correctness overhead correcting mistaken choice default decide appropriate choose default 
case drawing understanding system interface designed user system selects default doesn 
system selects correct choice user don select continue drawing 
example system select default rhodes starner remembrance agent 
remembrance agent retrieves documents relevance current text editor 
immediately displaying relevant document small permanent window shows single line potentially interesting documents 
selecting document displaying far invasive difficult correct user wants 
system relevant documents user may want interrupted order read 
word prediction systems demonstrate designer may choose select default 
example system assumes top prediction correct insert 
word prediction particularly difficult task top choice wrong 
take keystrokes user delete mistake continue typing simply typed word place especially similar mistakes happen automatically character typed 
appropriate choose default user choice may wrong user interface needs support error correction 
way support display alternatives user select correct choice 
approach unobtrusively provide ways change default necessarily displaying alternatives 
example goldberg suggest simple gesture tap select choice 
example consider tivoli system inputs interpreted gestures simply ink drawn screen moran 
user draws gesture trigger action move system default assumes action intended simply drawing screen 
user doesn follow selecting object move case moran automatically undo replacing alternate interpretation plain ink 
encouraging ambiguous input certain modes input known error prone compare typing handwriting recognition times appropriate fact 
example suhm recognition accuracy decreases sort error repair speech recognition system suhm 
option computer offer ambiguous input method alternative 
technique effectively apple tm speech input marx schmandt pen input goldberg mixture suhm 
alternatively interface designer may choose encourage error prone input outset 
example designers palmpilot tm chose alphabet goldberg richardson 
easier recognize recognize handwriting possibility segmentation errors letter exactly stroke pen pen 
example goldberg suggest screen marks boxes reduce segmentation errors discourage cursive handwriting 
researchers human tendency mimic output communicating 
zoltan ford people mimic sentence structures computer responses helps natural language processing easier 
kurtenbach 
investigated sheets display gestures user copy 
user request animation command clicking picture sheet 
sheets successfully improve recognition character recognition system wolf 
mimicking natural human correction strategies computers major source errors humans mistakes 
experience research shown humans ways correcting mistakes 
may cross letter add letter word just wrote 
mis speak may pause repeat correct word addition non speech audio cues indicate error 
call natural correction strategies 
corrections natural users may recognizers don know interpret corrections 

experimented handwriting pre processor looks applies corrections sending handwriting recognizer 
essentially user doing strategy correcting original input original form midst entering 
done handwriting speech novel types input 
example support strategy keyboard mankoff abowd 
brennan applying linguistic research interface design described section error discovery demonstrate usefulness mimicking humans 
human strategy don mimic pause 
questions long pause investigated researchers aref kato nakagawa lopresti tomkins kurtenbach 
example kurtenbach 
pause allow user request guidance drawing gesture 
gesture really selection pie menu displayed user pauses gesture sets called marking menus 
pause support delayed lazy recognition 
suggests echoing input case invisible commands gestures 
system provide moment user act undo command permanent 
validation techniques designers need basis choosing huge number possible techniques support error handling 
user studies standard hci methods gathering qualitative quantitative data user interfaces major source guidance 
variety results guide design error recovery interfaces literature 
studies small limited representation demonstrates gain investigating area deeply 
place observing users situations error correction occurs everyday life hone hewitt interactions error prone computer programs cook 
example hone hewitt studied effectiveness human recovery strategies context speech recognition 
verifies linguistic theories human conversation patterns guide error recovery techniques 
possible ask user direct questions handle errors may point best error handling happens little conscious attention possible 
alternative compare task completion speeds error correction support test satisfaction frustration 
innovative measuring frustration quantitatively qualitatively done 
research affect measurable aspects emotions 
order compare studies different interfaces error correction application suhm suggests normalizing data number errors occur 
systems generate ascii devised way relate accuracy words minute suhm 
simplest type error correction possible simply repeat input mistaken 
survey uncovered studies compare sophisticated correction technique repeat 
hewitt users prefer repeat input having choose menu finding confirmed ainsworth pratt 
realm pen input goldberg alternative guesses displayed takes cognitive effort user select result meshes observations input speed word prediction community alm 
hone give overview pros cons repetition vs choice 
suhm added spoken repetition faster choosing list partial word repair better 
partial word repair allows users correct part word correct 
done pen spoken input 
user testing help identify sources errors design error handling techniques 
example 
systems tend misunderstand subset possible written inputs worse rest result confirmed marx schmandt realm speech recognition 
toolkit level support error handling toolkits support creation reusable components 
common application areas toolkits building user interfaces combining widgets especially graphical user interfaces 
benefit toolkits sophisticated interface features available programmer 
identify reusable components domain error handling provide toolkits interface designers include support error handling interfaces 
domain interfaces error handling significant overlap toolkits building user interfaces 
key features needed support error handling complete reversibility support keeping track multiple potential interpretations 
system may easily able undo wrong choices user may part may unable help correct system commit single interpretation stage possibly throwing away potentially useful data 
incorporating multiple potential interpretations interface difficult support toolkit 
lot introducing undo reversibility gui toolkits particularly objectoriented toolkits 
example amulet system supports regular selective undo myers 
theoretical treatment subject thimbleby book user interface design 
addition reversibility support multiple potential interpretations addressed hudson newell probabilistic state machines handling input 
focused event handling stage interface toolkit applicable handling visual feedback 
example uncertainty user pointing button button probabilistic state machine simplify task highlighting buttons 
clear system keep track multiple potential system states result potentially pressing buttons 
experimenting best way support correction see need toolkit immediately obvious 
attempts simple problem trying different approaches displaying differing numbers alternatives handwritten word hindered lack toolkit level support 
goals create toolkit help solve problems 
infrastructure simplify task comparing testing techniques 
introduced new area study error handling techniques recognition prediction search ambiguous error prone systems 
surveys done areas error discovery error handling techniques validation toolkit level support 
uncovered extensive areas significant questions remain 
error discovery improve accuracy error discovery 
errors error discovery handled 
best technique error discovery change depending situation 
error correction techniques error handling require new types interfaces widgets different interfaces 
error handling occur 
integrated error handling interfaces normal workflow interface 
validation techniques compare methods applications 
possible uncover general rules design error handling interfaces 
toolkit level support possible separate encapsulate interface techniques error handling techniques belong toolkit 
complete reversibility possible alternatives 
efficient ways keeping track increasing numbers probabilities 
research developing system platform answering questions 
task develop toolkit supports techniques uncovered survey 
addition encapsulating standard techniques plan continue developing innovative new techniques investigating existing hci techniques applied error correction 
ainsworth pratt 
feedback strategies error correction speech recognition systems international journal man machine studies 
alm arnott newell 
prediction conversational momentum augmentative communication system communications acm 
aref kamel lopresti 
handling electronic ink acm computing surveys 
hone 
modelling error recovery repair automatic speech recognition international journal man machine studies 
brennan 
interaction feedback spoken language system theoretical framework knowledge systems 

just noticeable difference speech recognition accuracy proceedings acm chi poster 
davis 
interactive transfer expertise acquisition new inference rules artificial intelligence pp 
hull morgan 
recognition accuracy user acceptance pen interfaces proceedings acm chi pp 
jones 
decline accuracy automatic speech recognition function time task fatigue voice drift international journal man machine studies 
goldberg stylus user interfaces manipulating text proceedings acm uist pp 
goldberg richardson 
touch typing stylus proceedings acm interchi 
greenberg witten 
predictive interfaces think extra ordinary human computer interaction interfaces users disabilities cambridge university press pp 
hudson newell 
probabilistic state machines dialog management inputs uncertainty proceedings acm uist pp 
yang waibel 
interactive error repair online handwriting interface proceedings acm chi poster pp 
igarashi matsuoka tanaka 
interactive beautification technique rapid geometric design proceedings acm uist pp 
kato nakagawa 
design interface creative anzai ogawa mori eds hci international symbiosis human artifact elsevier science 
kurtenbach moran buxton 
contextual animation gestural commands computer graphics forum pp 
lopresti tomkins 
computing ink domain anzai ogawa mori eds hci international symbiosis human artifact elsevier science 
mankoff abowd 
word level keyboard pen input proceedings acm uist pp 
marx schmandt 
putting people specifying proper names speech interfaces proceedings acm uist pp 
moran chiu van 
pen interaction techniques organizing material electronic whiteboard proceedings acm uist pp 
myers 
reusable hierarchical command objects proceedings acm chi 
cook 
analysis line debugging process empirical studies programmers second workshop pp 
poon weber cass 
tool searching digital ink proceedings acm chi pp 
rhodes starner 
remembrance agent proceedings international conference practical application intelligent agents multi agent technology paam pp 
klein fernandez picard 
frustrating user purpose pilot study detect user emotional state proceedings acm chi pp 

user interface aspects recognizing connected cursive handwriting proceedings iee colloquium handwriting pen input number institution electrical engineers london 
suhm 
empirical evaluation interactive multimodal error correction ieee workshop speech recognition understanding ieee santa barbara 
suhm myers waibel 
designing interactive error recovery methods speech interfaces proceedings acm chi workshop designing user interface speech recognition applications 
suhm myers waibel 
interactive recovery speech recognition errors speech user interfaces proc 
icslp vol 
philadelphia pa pp 
thimbleby 
user interface design addisonwesley publishing 
acm press reading ma 

wolf 
understanding handwriting recognition user perspective proceedings human factors society th annual meeting vol 
computer systems modeling pp 
hewitt 
investigation error recovery dialogues user interface management system speech recognition proceedings ifip interact pp 
zoltan ford 
get people say type computers understand international journal man machine studies 
