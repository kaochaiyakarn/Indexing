object oriented multimodel approach integrate planning intelligent control simulation jin lee william dean norris ii paul fishwick department computer information sciences university florida gainesville fl areas planning intelligent control simulation spawned representational structures 
deliberative planning approaches ai rule simulation function 
intelligent control approaches perceived need integrate reactive control deliberative planning suggested integration modeling techniques formed integration techniques scarce 
propose multimodel method large scale systems containing intelligent non intelligent objects 
initial results planning control truck depot show current deliberative planning methods extended include richer set model types production rule systems 
reactive control modulated deliberative planning model structures entire model formed easy comprehend 
key words autonomy intelligent control planning object oriented simulation object oriented approach simulation discussed different literature camps 
computer simulation system entity structure ses extension devs defines way organizing models inheritance hierarchy 
ses models refined individual blocks contain external internal transition functions 
object oriented design literature effort similar object oriented simulation accomplished building class model dynamic models object containing state information 
harel defines useful visual modeling methods form state charts dynamics may seen form finite state machines 
perspective object oriented approach provides excellent starting point deciding organize information dynamical systems 
start concept model system 

create class model visual approach omt 
phase involve creating relationships classes 

specify dynamics class instance state transition factor 
note classes contain state information relations may dynamic nature 

construct multimodel build network models defines part system 
usual object oriented approach phase translates creating methods object alter state object 
problem phase quite complex depending scale system modeled 
needs way developing multi level models specify phase dynamics 
approach purpose :10.1.1.34.1072:10.1.1.5.9508
paradigm designing executing models 
defined model types connect lower levels refine higher levels 
due cis tr tbp conf 
ai simulation planning high systems hierarchical structure multimodel approach object oriented paradigm natural implementation 
model types executed methods initialize input output state update 
having method communication model type models executed regardless model types 
integrating simulation planning idea integrated simulation planning developed efforts overcome problems inherent artificial intelligence ai simulation 
traditionally ai planning researchers concerned building planner produces symbolic plan order primitive actions achieve certain tasks 
planner unable control execution modify plan order guarantee success proposed plan 
traditional ai planners unrealistic 
basically deliberative planners assumed perfect knowledge static world 
extreme researchers developed purely reactive planners react environment executing actions extensive reasoning 
logical step combine planning control produce planner deliberative reactive 
dean provides overview various problems techniques available areas 
traditional planners built far purely deliberative purely reactive 
efforts develop combined planner 
due divided research deliberative reactive planners technology fields divided 
believe major difficulty trying build combined planner integrating different methods area 
allows integration different techniques submodels 
planning control combined want integrate different modeling types exist ai simulation 
previous done integration ai simulation 
integration major advantages 
intelligent non intelligent objects modeled simulated simulation able test evaluate performance valve valve valve concept model truck depot aerial view system 
planning perspective testing evaluation modification done connecting planner actual physical device object 
truck depot problem originally taken 
problem contains non intelligent objects basin trucks valves intelligent objects robots people equal emphasis problem inspired find solution optimization combining fields simulation simulating non intelligent objects ai simulating intelligent objects unifying modeling paradigm 
truck depot example fig 
shows aerial view truck depot represents concept model system 
depot contains basin input pipes carrying different chemicals output pipe pipe valve controls flow 
valve servo motor attached enabling human operator remotely close open valves 
empty trucks arrive depot wait move pipe filled mixture basin 
truck leaves basin cargo tested 
truck filled acceptable mixture leaves system dumps cargo returns 
mixture overflows basin truck treated waste 
version problem capacity trucks constant 
cis tr tbp conf 
ai simulation planning high systems open close arrive depart controls flow controls flow controls flow basin trucks human mixture truck depot chemical chemical flow rate angle ratio capacity capacity fills controls fills plan valve control valve valve valve instance model truck depot empty trucks trucks full truck depot basin valve truck human intelligent object non intelligent objects top view system intelligent objects control non intelligent objects see fig 

case human operator plans controls valves depot achieving goal maximizing profit depot maximizing number trucks filled minimizing cost 
depot charged total amount chemicals flow input pipes period open 
trucks independent objects arrive exponential distribution period time depot open 
notion time consider simulation 
start simulation time corresponds opening time depot simulation time corresponds closing time real world 
remaining mixture basin closing time waste 
fig 
shows control system simulation 
control mixture control height optimal exception control state basin state basin state basin critical critical level level level multimodel planner intelligent objects arrival trucks dynamic determined number trucks priori type offline planning possible 
illustrated fig 
adopted brook subsumption architecture integrate different level modules 
simulation discrete allow output suppressed higher level time step event arrives causes output 
multimodel planner multiple levels divided critical reaction level success planner 
levels reflect reactivity control lowest level module reactive module highest level reactive 
general may case 
exception control lowest level hierarchy exception control module exists reactive critical 
problem critical situations 
overflow basin truck avoided expense spilled mixture recovered 
second close simulation time planner avoid having empty basin truck filled 
exception control takes state basin input volume mixture basin vol volume mixture truck vol vol fuzzy logic infer basin overflow empty state 
vol fuzzy logic decide truck overflow state 
conditions arise exception control cis tr tbp conf 
ai simulation planning high systems closing open open open open closing closing closing open closed closing opening opening closing closed opening closing closed closed closed closed opening closed closing closed open goal ratio total volume total volume open closed fsa mixture control react send output command close open valve vn 
change corresponds null signal sent 
level output fuzzy set identical valves overflow empty occurs occur valves need closed opened time 
control overflow truck volume mixture truck monitored inferred fuzzy logic state full full 
output set valve similar valves fuzzy logic suited concerned precisely events occur appropriate time start monitoring controlling prevent overflow 
fuzzy logic model best mimics actual performance human operator level 
mixture control mixture control module responsible maintaining correct ratio chemicals basin 
initially planner ratio maintained simulation 
mixture considered acceptable correct ratio actual ratio falls range gamma 
type model mixture control finite state automaton shown fig 

current state valves represented tuple vn open closed opening closing 
depending current state state reached choosing appropriate transition 
state reached transition state state contains valve settings ing output command sent create event change physical state valves 
output command may suppressed higher level reaching basin model 
may case exception control module 
detailed explanation suppressor function refer 
optimal height control optimal height control module controls height order maximize profit 
module reactive involves symbolic knowledge reasoning heuristics lower level modules rule reasoning best suited task 
notion optimal height time dependent 
simulation start time intelligent object different strategies maintaining height different times 
consideration optimal height control module takes account speed chemical flow 
flow rate valve depends height mixture basin 
optimal height control module uses heuristics optimality guaranteed 
included module evaluator evaluates profit system simulation 
formula gt gamma amount reward unit volume amount money charged unit volume 
gt represents total volume trucks represents total volume input 
simulating 
models composed models network graph called 
allow modeling large scale systems varying levels abstraction 
combine expressive power known modeling types cis tr tbp conf 
ai simulation planning high systems fsas petri nets block models differential equations queuing models 
known models principle orthogonality avoid creating new modeling system unique syntax 
model executed highest level abstraction lowest level representing refined parts model executed 
high level state duration calculated executing refined levels finer granularity 

truck depot example question arises 
non intelligent objects system modeled control functions classical control theory provide optimal solution 
multimodel may necessary 
offer advantages classical control theory 
ffl extensibility multimodel able extended 
making change model adding evaporation mixture basin having variable filling capacity trucks difficult impossible implement classical control theory 
ffl objects system replaced object accepts input gives output 
example input valves replaced input valves 
ffl reusability planner basin entire truck depot context larger model containing depot component 
ffl comprehensibility physical system modeled classical control theory drawbacks 
example equations large scale systems prohibitively complex unsolvable small changes system 
type model petri net block differential equation fsa queuing similar features input output state transition state 
model types lower level components encode information model 
fsa state holds information needed answer question model 
contrast transition place petri net information subset system combined describe complete system 
simulate multimodel necessary input model type accept output type model 
model able recognize output refining model valid input 
synchronize system highest level coordinator process external inputs 
coordinator creates initializes model components organizes models specified hierarchy 
coordinator executes refining models allows external output levels specified level 
coordinator uses event list fel keep track event model model component event sent token caused event global time simulation 
level model wait event execution posts new state fel 
methods simulate model types 
reads model specifics creates model instance 
initialize describes model refining models initially set 
input collects input data model receives execution 
state returns current system state 
update causes input event applied current state state scheduled fel 
output returns output current state 
non intelligent objects model design modeling basin poses challenges 
model state includes continuous discrete variables constraints functional relationships 
volume mixture basin changes continuously simulation 
input signals control valves give continuous outputs change discrete times 
cis tr tbp conf 
ai simulation planning high systems sync full wait loads bad tested test control signal control signal truck control signal fill basin fill truck basin full trucks truck arrivals truck queue valve control signals petri net model basin control signal control signal mixture volume basin refinement transition fill basin trucks move system discrete objects constrained waiting filled signal valve open valve basin mixture fill truck filling area empty 
chose petri net model top level see fig 

inputs model truck arrivals control signals opening closing valves 
output model includes statistics showing number trucks filled properly volume chemical poured basin simulation 
truck queue transition refined queuing model 
chosen model trucks waiting filled 
queue maintain trucks arrival order 
transition fill basin refined block model see fig 

control signals passed refining models valve valve respectively 
closing opening closed open fsa model valve basin basin truck truck basin basin truck basin truck basin truck basin truck truck basin truck overflow fsa model volume mixture basin refining model returns value representing control applied 
function block mixture volume basin takes control input returns value states truck loads basin currently holds 
fill truck refined block model similar fig 
shows relationship valve mixture volume truck function block 
valve takes input control signals open close returns amount control applied due current state valve function block fill truck takes control value input returns value truck filled 
function blocks refined finite state automaton 
fsas fsas refine valves similar refinement valve function block valve refined fsa shown fig 

input fsa control signal valve 
fsa change state internal transition detected 
fill basin function refined fsa dis cis tr tbp conf 
ai simulation planning high systems played fig 

input fsa amount control applied system valves output truck loads mixture basin contains 
function block mixture volume truck refined fsa states 
input fsa amount control applied valve system output state truck truck filling full overflowing 
control equation ax bu model continuous state variables system 
subsystem state control valves amount control applied 
model execution coordinator create execute multimodel system 
level model created levels connected refining models level initialized 
initial conditions truck depot example basin empty valves closed trucks waiting serviced 
coordinator task execution dequeue events fel direct event model specified 
truck depot example demonstrated integrate simulation planning tasks object oriented multimodel framework 
designing model system performed phases concept model class model instance model relationships specified discussed section 
shown integrate different type models hierarchy integrate model types coming completely different background disciplines 
extend truck depot example include dynamic properties varying truck capacity allowing planner reorder trucks arrive 
experiment different intelligent objects mobile robot adding constraints problem asynchronous control valves 
adaptive control adaptive fuzzy systems extension 
general add graphical interface creating models distributed persistent object database store objects created 
user load object internet 
acknowledgments institute simulation training ist university central florida partial funding research connection mission planning sub contract 
booch 
object oriented design 
benjamin cummings 
brooks 
robot layered control system mobile robot 
ieee journal robotics automation 
dean wellman 
planning control 
morgan kaufmann 
fishwick 
heterogeneous decomposition coupling combined modeling 
winter simulation conference pages phoenix az december 
fishwick 
integrated approach system modelling synthesis artificial intelligence software engineering simulation methodologies 
acm transactions modeling computer simulation 
fishwick 
simulation environment 
accepted publication 
fishwick 
computer simulation model design execution 
prentice hall 
published textbook 
fishwick zeigler 
multimodel methodology qualitative model engineering 
acm transactions modeling computer simulation 

artificial intelligence simulation 
ellis horwood limited john wiley sons 
cis tr tbp conf 
ai simulation planning high systems harel 
visual formalisms 
communications acm may 
harel 
biting silver bullet brighter system development 
ieee computer january 
kaelbling 
architecture intelligent reactive systems 
reasoning actions plans pages 
morgan kaufmann los altos ca 
miller 
heterogeneous hierarchical modelling knowledge autonomous systems 
phd thesis university florida 
nielsen 
applications ai techniques simulation 
fishwick editors knowledge simulation methodology application pages 
springer verlag 
keefe 
role artificial intelligence discrete event simulation 
nielsen editors artificial intelligence simulation modeling pages 
john wiley sons 
praehofer 
theoretic foundations combined discrete continuous system simulation 
phd thesis university linz austria 
praehofer environment devs modeling common lisp 
accepted publication 
rumbaugh blaha premerlani frederick 
object oriented modeling design 
prentice hall 
zadeh 
fuzzy logic 
ieee computer pages april 
zeigler 
object oriented simulation hierarchical modular models intelligent agents systems 
academic press 
