constraint nets semantic model hybrid dynamic systems ying zhang alan mackworth department computer science university british columbia vancouver canada mail zhang mack cs ubc ca hybrid dynamic systems systems consisting non trivial mixture discrete continuous components controller realized combination digital analog circuits robot composed digital controller physical plant robotic system consisting computer controlled robot coupled continuous environment 
hybrid dynamic systems general traditional real time systems 
composed continuous subsystems addition discrete event controlled components 
develop semantic model constraint nets cn hybrid systems 
cn captures general structure dynamic systems systems discrete continuous time discrete continuous variables asynchronous synchronous event structures modeled unitary framework 
aggregation operators system modeled hierarchically cn dynamics environment dynamics plant dynamics controller modeled individually integrated 
algebra topology cn supports multiple levels abstraction system analyzed different levels detail 
cn provides rigorous formal programming semantics design hybrid real time embedded systems 
motivation dynamic system defined structure ht ai time structure domain structure time domain structures continuous discrete 
table shows examples basic types models dynamic systems 
call dynamic system composed components basic type hybrid system example controller realized combination digital analog circuits robot composed digital controller physical plant robotic system consisting computer controlled robot coupled continuous environment 
hybrid dynamic systems general traditional shell canada fellow canadian institute advanced research table examples basic types models dynamic systems dynamic systems discrete time continuous time discrete domain finite state machines asynchronous circuits continuous domain difference equations differential equations real time systems 
composed continuous subsystems addition discrete event controlled components 
development models hybrid systems active years 
take different approach study hybrid systems 
approach motivated arguments 
hybrid systems consist interacting discrete continuous components 
fixing model particular time domain structures model hybrid systems developed time structures data types 
second hybrid systems complex systems multiple components 
model hybrid systems support hierarchy modularity 
third hybrid systems generalizations basic discrete continuous systems 
model hybrid systems powerful existing computational models 
short model unitary modular powerful 
start general definition time linearly ordered set initial time point metric space measure space 
examine domain structures algebra topology 
time structure domain structure define basic types elements dynamic systems traces functions time transductions mappings traces traces 
constraint net model cn developed dynamics structure composed trace space set basic transductions memoryless combinational processes unit delays transport delays sequential processes event driven transductions 
event driven transductions play important role model channels continuous discrete time components synchronizers asynchronous components 
syntax constraint net bipartite graph types nodes locations transductions set connections locations transductions 
constraint net composed hierarchically modular aggregation operators 
semantically constraint net represents set equations locations variables transductions functions 
semantics constraint net location denoting trace fixpoint set equations 
semantics system obtained hierarchically semantics components internal connections 
model temporal integration defined vector spaces infinitesimal transport delays 
cn deterministic dynamic process model nondeterminism modeled hidden uncontrolled inputs 
powerful simpler inherently nondeterministic models probabilistic stochastic analysis incorporated 
cn general dynamic process model discrete state machines differential state equations particular instantiations model 
summary cn satisfies objective provide model formal general modular composite powerful practical 
rest organized follows 
section introduces syntactic structure constraint nets 
section develops topological structure dynamic systems 
section presents semantics constraint nets fixpoint theory defines temporal integration infinitesimal transport delays 
section discusses modeling constraint nets 
section surveys existing hybrid system models 
section concludes points related research 
appendix presents mathematical preliminaries proofs theorems propositions appendix syntactic structure constraint nets section introduce syntax constraint nets characterize composite structure modularity model 
syntax intuitively constraint net consists finite set locations finite set transductions finite set connections 
location fixed sort location value typically changes time 
location regarded wire channel variable memory location 
transduction causal mapping inputs outputs time operating certain time activated external events 
connections relate locations ports transductions 
clock special kind location connects event port event driven transduction 
syntactically constraint net triple cn cni lc finite set locations associated sort td finite set labels transductions associated set input ports output port port associated certain sort cn set connections locations ports transductions sort restrictions output port connecting location port transduction connects unique location location isolated 
location output location transduction iff connection output port input location iff connection input port location output constraint net output location transduction input set input locations constraint net cn denoted cn set output locations denoted cn 
constraint net open input location closed constraint net represented bipartite graph locations depicted circles transductions boxes connections arcs 
example transliteration state transition function ffi unit delay open net represent state automaton time set natural numbers 
closed net constraint net representing state automaton represent differential equation time left closed real interval 
constraint net representing modules module triple hcn oi denoted cn cn constraint net cn cn subsets input output locations cn respectively defines interface module 
module cn closed open 
locations cn gamma hidden inputs locations cn gamma hidden outputs 
module nondeterministic iff ae cn 
graphically module represented box rounded corners 
compound module constructed simple ones 
basic operations applied modules obtain new module 
union generates new module modules modules side side 
second coalescence coalesces locations interface module location restriction locations output location 
third hiding deletes location interface 
addition basic operations define combined operations 
cascade connection connects modules series 
second parallel connection connects modules parallel 
third feedback connection connects output module input 
cn cn cn cn cn cn cn cn cn cn parallel feedback cascade cascade parallel feedback connections reasons introducing modules 
modules create hierarchical composition structure complex systems 
example state automaton module sa created select locations constraint net interface 
input output automaton ioa developed cascade connection sa transliteration 
ioa defines transduction input traces output traces 
sa ioa input output automaton denotes second modules provide flexible way generating different systems set components 
illustrate idea look input output automata 
types input output automata mealy machines moore machines 
general input output automaton tuple hi set input values set states initial state theta state transition function set output values output function 
ways define output function theta mealy machines moore machines 
constraint net model input output automaton mealy moore machine deduced selecting different output locations interface state automaton module 
selected ioa mealy machine ffi selected ioa moore machine third modules capture notion abstraction hidden locations 
clearly hidden outputs encapsulate internal states system 
role hidden inputs obvious 
consider state automaton 
input location chosen hidden module closed nondeterministic state transition system generated 
particular state transition function defines state transition relation theta iff equally set possible states state ff ji ig 
general module cn ae cn defines nondeterministic system 
powerful simpler inherently nondeterministic models probabilistic stochastic analysis incorporated 
similar concepts explored earlier general systems theory 
topological structure dynamic systems section discuss topological structure time domains traces transductions basic elements dynamic systems 
mathematical preliminaries general topology partial orders metric spaces appendix time structures understanding time key understanding dynamics 
formalize time structures capture important aspects time linearity metric measure 
time structure general considered linearly ordered set start time point associated metric quantifying distance time points measure estimating duration time 
formally time structure triple ht ffl linearly ordered set ht element ffl ht di forms metric space metric satisfying ffl ht forms measure space borel measure 
clearly defined sets form total set furthermore gamma 
simplicity refer time structure ht ambiguity arises 
time structure discrete iff cauchy sequence 
dense iff exists continuous iff metric space connected 
clearly continuous time dense vice versa 
example set natural numbers set nonnegative real numbers jt gamma time structures 
discrete continuous 
set rational numbers metric measure forms dense time structure 
set gamma jn jn metric measure defines time structure discrete dense 
definition time structures extremely general discrete continuous time structures commonly 
time structure may related time structure time mapping ffl order time points preserved implies ffl element preserved ffl distance time points preserved ffl measure finite interval time points preserved 
time sample time example defined time time structure time dense domain structures time formalize domains structures discrete continuous domains defined uniformly 
domain simple domain composite domain 
simple domain pair ha da set means undefined da metric simplicity refer simple domain ha da ambiguity arises 
example set real numbers simple domain connected metric space simple domain discrete topology simple domain associated partial order relation ha flat partial order element addition associated derived metric topology metric topology induced metric da fag 
simple domain represented triple ha partial order relation derived metric topology 
domain defined recursively simple domains 
ha partial order relation derived metric topology domain iff ffl simple domain ffl composite domain product family domains fha ig ha product partial order family partial orders fha ig ha product space family spaces fha ig note restriction index set arbitrary finite infinite countable uncountable 
simplicity refer domain ha ambiguity arises 
example natural number composite domain components equally composite domain infinitely components 
take signature syntactical structure class multi sorted domains associated functions defined domains 
sigma hs signature set sorts set function symbols 
equipped mapping type theta denotes set finite tuples type type denote type hs si 
example signature boolean algebra described sigma hb gi 
sigma sort constant nullary function unary function binary functions domain structure signature defined follows 
sigma hs signature 
sigma domain structure pair hfa ff domain sort theta function denoted example hb gi sigma domain structure negation conjunction disjunction respectively 
trace event structures trace mapping time domain example sin gammat traces 
trace provides complete information finite point time 
values infinite time points represented explicitly derived limits introduced 
example lim sin lim gammat 
linear order domain linear set values 
value limit linear set values written iff limit derived metric topology 
definition set limits properties 
proposition imply proposition theta iff set limits fv jv directed subset ha upper bound 
define limit linear set values follows 
limit written lim defined upper bound set limits lim fv jv limits properties 
proposition theta lim lim proposition lim lim time structure set downward closed intervals implies obviously trace extended completion lim jt jt denotes restriction trace completion provides values infinite finite time points 
trace lim considered final value 
simplicity refer completion ambiguity arises 
furthermore pre ft jt tg gamma ft jt clearly pre gamma pre gamma 
time structure semi discrete iff pre greatest element defined iff greatest element 
trace structures derived follows 
time structure domain ha trace space triple ha gammai product set set functions product partial order relation partial order relation gamma product topology derived metric topology simplicity refer trace space ha gammai ambiguity arises 
linear set traces limits limit defined follows 
trace limit written iff limit derived metric topology 
similar properties limits linear set values properties limits linear set traces follows 
proposition linear order trace space iff set limits fv jv directed subset ha upper bound 
define limit linear set traces follows 
limit written lim defined upper bound set limits lim fv jv proposition lim lim event trace special type trace domain trace defined follows 
trace iff implies oe trace theta iff event trace generates sample time structure ht ht ffl defined ft je 
pre transition point event trace defines time point 
ffl thetat ffl 


proposition sample time structure generated event trace semi discrete welldefined 
event trace dot depicts time point event space triple gamma time structure ae set event traces time structure order relation partial order relation gamma subspace topology gamma 
transductions transduction mapping input traces output traces satisfies causal relationship inputs outputs output value time depends inputs time 
formally coincident iff 
mapping trace space trace space causal iff coincident 
causal mapping trace spaces called transduction 
instance state automaton initial state defines transduction discrete time structure temporal integration initial value typical transduction continuous time structure 
just nullary functions represent constants nullary transductions represent traces 
obviously transductions closed functional composition 
characterize classes transductions primitive transductions event driven transductions 
primitive transductions defined generic time structure primitive transductions functional compositions types basic transductions delays 
transliteration pointwise extension function 
pointwise extension time structure denote transliteration ambiguity arises 
intuitively transliteration transformational process memory internal state combinational circuit 
domain initial output value time structure unit delay ffi transduction defined ffi pre unit delay ffi acts unit memory data domain semi discrete time structure ffi denote unit delay ffi ambiguity arises 
unit delays meaningful non semi discrete time structures 
transport delays essential sequential behaviors dynamic systems 
domain initial output value time structure time delay transport delay delta transduction defined delta gamma delta denote transport delay delta ambiguity arises 
primitive transductions functional compositions basic transductions delays input output traces sharing time structure 
hybrid system consists components different time structures 
rest section consider event driven transductions constitute important aspect model 
consider types transductions map traces time structure 
time time mapping sample trace trace hand extension trace trace gamma gamma sampling type transduction output sample trace input 
extending type transduction output extension trace input 
event driven transduction primitive transduction augmented extra input event trace operates event point output value holds events 
additional event trace input event driven transduction called clock transduction 
eventdriven transduction works follows 
sample input trace time sample time generated event trace perform transduction extend output trace back set event traces time structure primitive transduction 
define event driven transduction time structure ffi theta ffi te ffi denote event driven transduction ffi ambiguity arises 
dynamics structures preliminaries established characterize structures dynamics 
sigma hs signature 
sigma domain structure time structure sigma dynamics structure pair hv fi ffl fa sorted set trace spaces event space ffl ffi ff fffi vs delta vs set basic transductions ffi ff ffi jf set event driven transductions 
far topological structure dynamics formalizing time domains traces topological spaces characterizing primitive event driven transductions 
topological structure continuous discrete time domains represented uniformly hybrid dynamic system studied unitary model 
advantages developing dynamics structure ffl algebraic specification domain structure extended dynamics structure 
ffl algebraic transformation applied control synthesis 
ffl real time programming semantics developed sound mathematical base 
ffl dynamic system analyzed different levels abstraction topological spaces 
semantics constraint nets far syntactical structure constraint nets graphical modular 
syntax serves mechanism creating model meaning model provided 
models syntax similar constraint nets petri nets example totally different interpretations 
transductions mappings traces traces direct interpretation constraint net denote location trace right sort 
constraint net denotes set equations locations variables transductions functions semantics constraint net solution set equations 
set equations possibilities set equations solution exactly solution solution 
example gamma solution gamma solution gamma gamma solutions gamma 
common technique define semantics element solution set partial order 
defined partial order trace space guaranteed solution exists set equations clear solve set equations 
section fixpoint theorems partial orders examine properties dynamics structure partial order topologies 
established define semantics constraint nets fixpoint theorems partial orders 
fixpoint theorems continuous domain structures fixpoint theorems complete partial orders cpo 
continuous functions functions continuous partial order topologies 
theorem fixpoint theorem cpo 
continuous function fixpoint particular ff extending function arguments theorem 
theorem fixpoint theorem ii cpo 
theta continuous function exists unique continuous function fixpoint equally 
clear partial orders set multi sorted trace spaces event space cpo set basic transductions event driven extensions continuous partial order topologies semantics constraint nets composed primitive event driven transductions provided constructed fixpoint theorems 
fact partial orders multi sorted trace spaces cpo established propositions 
proposition partial order simple domain cpo 
proposition partial order domain cpo 
proposition partial order trace space cpo 
proposition partial order event space cpo 
propositions characterize continuity basic transductions partial order topologies 
proposition continuous time structure continuous 
proposition unit delays continuous semi discrete time structures 
proposition transport delays continuous defined time structures 
property characterizes continuity event driven transductions 
proposition primitive transduction continuous event driven transduction ffi continuous 
conclude section introducing continuous domain structures 
sigma hs signature 
sigma domain structure hfa ff continuous iff continuous partial order topology fact continuous domain partial order topology real restriction 
partial total function theta continuous function theta defined theta defined call strict extension function strict continuous function 
example sigma hr 
delta hr continuous sigma domain structure delta addition multiplication denote strict extension ambiguity arises 
come theorem sigma dynamics structures 
theorem continuous sigma dynamics structure continuous sigma domain structure defined time structure sigma dynamics structure hv fi satisfies multi sorted set cpo transductions unit delays continuous partial order topology 
semi discrete transductions continuous 
fixpoint semantics constraint nets section come semantics constraint nets composed primitive transductions event driven transductions 
intuitively constraint net set equations locations variables transductions functions 
take fixpoint set equations semantics net 
sigma hs signature 
constraint net signature sigma triple cn sigma cni ffl location lc associated sort special sort denoting clocks sort location written ffl transduction td primitive transduction event driven transduction 
types basic transductions 
transliteration set input ports output port sort input port sort output port 
unit delay ffi input port output port input output ports associated sort 
transport delay delta input port output port input output ports associated sort primitive transduction set input ports output port ffi event driven extension set input ports feg output port sort event input port cn sigma constraint net signature sigma hv fi continuous sigma dynamics structure 
cn sigma denotes set equations fo cn primitive transduction composed corresponding continuous transductions event driven transduction cn output location fo lc tuple input locations semantics constraint net defined fixpoint theorem ii 
semantics constraint net cn sigma defined continuous sigma dynamics structure fixpoint set equations fo cn transduction input trace space output trace space cn theta cn theta cn consider semantics constraint net transduction semantics module defined set transductions 
semantics constraint net cn cn theta cn theta cn semantics module cn cn ff theta theta oa cn jo theta cn gammai set hidden input traces 
semantics composite module derived semantics components 
module describes relation inputs outputs 
take union set transductions semantics module cn noting transduction set pairs obtain relation relation scheme relation tuple mapping input output locations traces satisfying equations net 
represent semantics cn relation relation scheme lc cn cn noting functions transductions special type relations cn pi cn pi denotes projection relation relation scheme ae cn cn relation general function transduction 
nondeterminism modeled hidden inputs 
modules cn cn nondeterministically equivalent written cn cn iff cn cn 
constraint net defined continuous dynamics structure fixpoint fixpoint may defined 
example gamma fixpoint gamma fixpoint 
relationship definedness constraint nets strict continuous functions algebraic loops studied 
parameterized nets temporal integration finishing section introduce parameterized nets net associated set parameters discuss limiting behaviors parameterized nets providing semantics constraint nets temporal integration 
systems share structure follow law exhibiting different behaviors different parameters 
parameter variable value change time differs system system example mass friction coefficient initial state time delay gain threshold set parameters associated parameter set values cn parameterized net iff cn constraint net set parameters cn semantics cn denoted cn mapping parameter space set transductions cn theta 
theta cn theta cn parameter tuple theta cn cn cn denotes cn replaced corresponding value 
important class parameters limiting behaviors 
ffl parameter ffl ae ffl partial order relation ffl ffl ffl iff ffl ffl hd ffl ffl linear order 
call parameter ffl infinitesimal 
limiting semantics closed constraint net cn infinitesimal ffl written cn defined limit linear set traces cn ffl cn lim cn ffl 
far definition temporal integration important type transduction continuous time structures 
define temporal integration vector spaces provide semantics constraint nets temporal integration limiting semantics 
topological vector space special class domain structures functions theta delta thetau continuous partial order derived metric topology 
temporal integration initial state defined follows 
consider case discrete time structure 
discrete pre greatest element denoted pre 
temporal integration follows sigma pre delta pre clearly transduction fixpoint equation ffi dt delta ffi dt pre arbitrary time structure discrete sample time generated event trace particular solution delta ffl infinitesimal ffl 
int ffi dt delta ffi temporal integration corresponds module cn cn represented equations int ffi delta ffl ffl infinitesimal 
definition considered derived forward euler method interested semantics numerical simulation differential equations 
example investigate limiting semantics net gammas 
closed net represented equations int ffi delta ffl gammas solution ffl solution computed fixpoint int ffi gammas 
fixpoint theorem element int ffi gammas ffl int ffi gammas ffl gamma ffls ffl ffl 
int ffi gammas ffl gamma ffls ffl ffl 
sigma gamma ffl 
ffl fs fixpoint equation ffl 
limiting semantics net lim ffl lim ffl sigma gamma 
gammai 
ffl ffl sigma gamma 
gammat solution gammas 
limiting semantics forms temporal integration temporal integration bounded state output values reset input defined 
modeling constraint nets formal model constraint nets cn hybrid dynamic systems syntax cn graphical modular semantic cn denotational composite 
modular aspect cn provides hierarchical structures system composition provides simple general concept nondeterminism 
denotational semantics fixpoint theorems partial orders provides rigorous straightforward interpretation meaning cn 
parameterized nets temporal integration increase representation power cn 
result cn model hybrid discrete continuous dynamic systems various event driven components events generated feedback loop computations 
hybrid dynamic system consists modules different time structures domain structure multi sorted 
typical hybrid domain structure include continuous domain set real numbers discrete finite domain associated functions 
typical time hybrid dynamic system set nonnegative real numbers event driven modules associated different clocks characterizing different sample time structures generated event traces 
event trace fixed sampling rate generated delta created discrete event generator instance transition generated system enters leaves predefined set states 
multiple event traces combined generate event traces 
typical event interactions event event event select defined terms event logics 
event logic modules asynchronous components coordinated 
typical hybrid system robotic system consists robot coupled continuous environment robot integration continuous plant discrete controller 
hybrid system consists subsystems plant controller environment modeled constraint net 
plant controller environment robotic system state control sensing variables respectively able model hybrid systems elevator system event driven control structure robot car soccer player discrete continuous components 
computational models developed particular algebra constraint net model abstraction 
able prove constraint nets compute partial recursive function simple domain structure 
traditional analog computation fits model 
define time domains topological spaces study various levels abstraction homomorphisms 
studied time domain abstraction refinement trace transduction abstraction equivalence behavior specification robustness complexity framework 
models hybrid systems research hybrid systems carried years 
section survey typical models hybrid systems historical point view 
branch interest hybrid system models originated concurrency models evolved timed concurrency models 
example alur dill developed theory timed automata reason timed behaviors 
henzinger incorporated time interleaving model concurrency upper lower bounds time delay associated transition 
various real time extensions process algebras proposed model relative speed processes 
time petri net model introduced specify verify real time systems 
models able represent continuous change 
effort develop models hybrid systems generalizing timed transition systems phase transition systems computations consist alternating phases discrete transitions continuous activities 
hybrid system specification described 
duration calculus continuous time developed integrators applied predicates time interval 
weakest precondition predicate transformers derivation sequential process control software discussed 
constraint net model closely related dataflow models languages operator net model lustre signal temporal automata 
operator net model abstracted lucid defined continuous algebras fixpoint theory 
attractive feature model independence particular algebra 
continuous algebra specifies data types basic operations sequence continuous algebra obtained operator net defined 
idea development constraint net model 
lustre development lucid real time programming language sequences interpreted time steps 
addition lustre introduces clocks expression evaluated clock sampling rate 
time structures lustre discrete continuous 
signal similar lustre real time reactive programming language 
lustre clocks introduced trigger various components 
semantics signal discrete time structures 
temporal automaton model step modeling causal functions multiple time domains 
temporal automaton model provides explicit representation process time symmetric representation machine environment aggregation individual machines form machine coarser level granularity 
time continuous model remain problems modeling continuous change event control 
standard hybrid systems modeling language proposed 
conceptual definition hybrid system underlies hybrid modeling simulation environment provided 
system modeled consists continuous continuous time domain example differential equations discrete discrete time continuous domain example difference equations logic discrete time domain components 
considered architecture definition language software hardware codesign 
formal semantics language 
topological structure hybrid systems studied nerode kohn 
continuity hybrid systems represented small topologies 
topology domains constraint net model influenced development 
related developed unitary model constraint nets cn hybrid dynamic systems 
order model general studied time domain structures dynamics structures derived 
syntactic structure model graphical modular semantics denotational composite 
summary major contributions cn cn models asynchronous synchronous components coordination components different time structures cn supports data types functions algebraic specifications cn provides programming semantics design analysis hybrid real time embedded systems cn serves foundation specification verification hybrid systems 
modeling focuses underlying structure system organization coordination components global behaviors system explicitly represented 
developed timed linear temporal logic timed automata specification languages 
formal semi automatic automatic verification methods timed automata developed integrating generalized model checking technique automata generalized stability analysis dynamic systems 
design methodology simplify verification robotic system 
control synthesis system verification coupled requirement specifications 
explored relation constraint satisfaction dynamic systems constraint methods proposed systematic approach control synthesis requirement specifications 
goal research provide theoretical underpinnings robot engineering systematic development real time hybrid embedded control systems 
wish nick pippenger peter lawrence qi valuable discussions anonymous referee constructive comments 
research supported natural sciences engineering research council institute robotics intelligent systems 
alur dill 
theory timed automata 
huizing rozenberg editors real time theory practice number lecture notes computer science pages 
springer verlag 
ashcroft 
dataflow eduction data driven demand driven distributed computation 
rozenberg editors current trends concurrency number lecture notes computer science pages 
springer verlag 
benveniste 
hybrid dynamical systems theory signal language 
ieee transactions automatic control may 
benveniste 
denotational theory synchronous reactive systems 
information computation 
diaz 
modeling verification time dependent systems time petri nets 
ieee transactions software engineering march 
caspi pilaud halbwachs plaice 
lustre declarative language programming synchronous systems 
acm proceedings principles programming languages pages 
elmqvist 
interactive simulation program nonlinear systems 
proc 
simulation 

elementary topology 
dover publications 
nerode 
simulation hybrid systems nonlinear control 
proc 
ieee conference decision control pages december 
hansen zhou 
semantics completeness duration calculus 
huizing rozenberg editors real time theory practice number lecture notes computer science pages 
springer verlag 
hennessy 
algebraic theory processes 
mit press 
henzinger manna pnueli 
timed transition systems 
huizing rozenberg editors real time theory practice number lecture notes computer science pages 
springer verlag 
shoham 
temporal automata 
technical report stan cs robotics laboratory computer science department stanford university stanford ca 
mackworth 
seeing robots 
basu li editors computer vision systems theory applications pages 
world scientific press singapore 
maler manna pnueli 
timed hybrid systems 
huizing rozenberg editors real time theory practice number lecture notes computer science pages 
springer verlag 
marzullo schneider 
derivation sequential real time programs 
van editors foundations real time computing formal specifications methods pages 
kluwer academic publishers 
mealy 
method synthesizing sequential circuits 
bell sys 
tech 
journal 

general systems theory mathematical foundations 
academic press 
moore 
experiments sequential machines 
shannon mccarthy editors automata studies 
princeton university press 
nerode kohn 
models hybrid systems automata topologies controllability observability 
grossman nerode ravn rischel editors hybrid systems number lecture notes computer science pages 
springer verlag 
nicollin sifakis 
atp timed graphs hybrid systems 
huizing rozenberg editors real time theory practice number lecture notes computer science pages 
springer verlag 
nicollin sifakis 
overview synthesis timed process algebras 
huizing rozenberg editors real time theory practice number lecture notes computer science pages 
springer verlag 
peterson 
petri net theory modeling systems 
prentice hall englewood cliffs 
shannon 
mathematical theory differential analyzer 
journal mathematics physics 
sutherland 

communication acm june 
taylor 
software requirements specification modeling design development evaluation distributed hybrid intelligent 
technical report odyssey research associates ithaca ny april 
vickers 
topology logic 
cambridge university press 
wadge ashcroft 
lucid dataflow programming language 
academic press 

optimal control differential functional equations 
academic press 
wood 
specification cat mouse problem 
huizing rozenberg editors real time theory practice number lecture notes computer science pages 
springer verlag 
zhang 
foundation design analysis robotic systems behaviors 
phd thesis forthcoming 
zhang mackworth 
constraint programming constraint nets 
workshop principles practice constraint programming pages 
revised version appear book title mit press 
zhang mackworth 
design analysis embedded real time systems elevator case study 
technical report department computer science university british columbia february 
zhang mackworth 
specification verification constraint dynamic systems 
second workshop principles practice constraint programming pages 
zhang mackworth 
robot right thing 
proc 
artificial intelligence pages banff alberta may 
mathematical preliminaries appendix summarize mathematical preliminaries required 
start general topologies focus special kinds topologies partial order topologies metric topologies 
related concepts stated 
general topology set 
collection subsets said topology axioms satisfied ffl ffl ffl members said open subsets merely open ambiguity arises 
subset closed iff gamma open 
hx called topological space 
denote hx ambiguity arises 
topology trivial iff fx topology discrete iff topological space separated union disjoint non empty open sets connected 
hx topological space subset called neighborhood iff open 
hausdorff space iff 
hx hx topological spaces 
function continuous iff open subsets gamma open 
clearly continuous functions closed functional composition 
subset said basis topology iff member union members subset said iff set intersection finitely members sg basis hx family topological spaces theta product set 
theta jv open subset topology theta product topology iff theta called product space spaces hx topology theta denoted ae fw jw easy check topology called subspace topology hx called subspace hx topologies set compared sense finer topology iff trivial topology coarsest discrete topology finest 
sections introduce important types topologies extremes partial order topologies metric topologies 
partial order topologies typical non hausdorff topologies metric topologies typical hausdorff topologies 
partial order topology binary relation set called partial order relation iff reflexive transitive antisymmetric 
set partial order relation hx partial order 
linear order iff partial order relation denote inverse denote strict relation 
denote partial order hx ambiguity arises 
element element iff xx elements exist unique 
partial order flat iff element implies element upper lower bound subset iff upper greatest lower bound iff upper lower bound 
upper greatest lower bounds exist unique denoted 
subset directed iff partial order hx complete partial order cpo iff element directed subset upper bound 
proposition flat partial order cpo 
fx set partial orders 
product partial order relation theta defined iff hx called product partial order fhx ig proposition product partial order cpo cpo 
partial order 
order relation ae defined iff hx called order hx partial order hx partial order topology induced follows 
subset open iff upward closed implies inaccessible directed subset set open sets forms partial order topology 
partial order non trivial iff proposition non trivial partial order topological space non hausdorff 
proposition cpos 
function continuous partial order topology iff directed subset directed subset 
function theta right continuous iff continuous 
left continuous function defined similarly 
proposition function theta continuous iff left right continuous 
function 
point fixpoint iff fixpoint iff fixpoint fixpoints exist unique 
theorem continuous function cpo fixpoint ff metric topology function theta metric iff ffl 
ffl 
ffl iff hx di metric space 
metric topology fn ffl ffl ffl denotes ffl neighborhood ffl fx jd fflg 
proposition metric topologies hausdorff 
family oe subsets oe field iff contains empty set complement element oe union denumerable subcollection 
function oe measure iff sigma hx topological space smallest oe field containing called borel field sets denoted sigma borel 
measure defined sigma borel called borel measure 
limit linear order topological space mapping 
point limit written iff 
proposition greatest element 
proposition hausdorff imply proposition linear order theta theta product topology iff metric space 
sequence cauchy iff 
vector space vector space set defined functions theta delta theta element satisfying conditions ff ffx ff fi ffx fix ff fix fffi sigma denote sum elements topological vector space vector space topology delta continuous functions 
proofs theorems propositions proof proposition neighborhood 
hausdorff unique limits propositions 
proof proposition follows proposition 
limits upper bound limit 
proof proposition pi proof proposition flat 
implies 
product lim lim lim lim proofs propositions proofs similar proposition 
proof proposition semi discrete pre ae greatest element means infinitely transitions pre defined 
similarly defined 
proofs propositions follows propositions 
proof proposition ae set traces 
element upper bound directed subset proposition proof proposition directed upper bound prove 
fv jv dg ff jv dg continuous ff jv dg proof proposition unit delay ffi directed upper bound semi discrete pre greatest element denoted pre 
ffi pre fv pre jv dg fffi jv dg ffi proof proposition defined gamma greatest element proof proposition prove sampling extending continuous 
time structure time structure time mapping sampling transduction tr tr prove continuous 
tr directed upper bound tr 
fv jv dg fv jv dg dg tr similarly extending continuous sample time structure defined 
proof divided steps 
ffi right continuous continuous 
second ffi left continuous 
proposition ffi continuous 
time structure fixed event trace sampling continuous extending continuous 
continuous ffi right continuous continuous functions closed functional composition 
prove left continuous 
time structure fixed 
directed subset chain 
definition ffi chain directed subset 
furthermore 
ffi ffi 
hand ffi monotonic left argument ffi ffi 
ffi ffi left continuous 
proof theorem theorem 
proof theorem 
continuous right continuous 
continuous function partial order monotonic 
ff jk 
clearly fixpoint prove continuous 
clearly continuous continuous continuity closed functional composition 
directed subset ff jk ff gjk ff jk gja dg proof theorem follows propositions 
