iterative sampling procedure resource constrained project scheduling time windows cesta ip cnr national research council viale marx rome italy pscs rm cnr angelo ip cnr national research council viale marx rome italy pscs rm cnr stephen smith robotics institute carnegie mellon university forbes avenue pittsburgh pa usa sfs isl ri cmu edu extend integrate previously reported techniques resource constrained scheduling develop csp procedure solving rcpsp max resource constrained project scheduling problem time windows generalized precedence relations start time activities 
rcpsp max studied problem operations research community presence large set benchmark problems provides opportunity comparative performance analysis 
base csp scheduling model generalizes previous profile approaches cumulative scheduling focusing global analysis minimal conflicting sets pairwise conflict analysis 
generalization increases tendency effective conflict resolution 
rcpsp max optimization problem ideas prior adapted embed base csp model multi pass iterative sampling procedure 
procedure called ises iterative sampling earliest solutions applied mentioned set benchmark problems 
ises shown perform quite comparison current state art procedures rcpsp max particularly search space size limiting systematic procedures 
years csp scheduling research increasingly concerned development models solving cumulative multi capacity resource scheduling problems 
models important better matched requirements practical scheduling environments traditional csp scheduling models 
area focused constraint propagation techniques exploit structure cumulative resource constraints capable stronger inference 
attention paid development effective heuristics managing scheduling search process 
focus issue 
drawing previous resource constrained scheduling develop base csp resolution procedure cumulative scheduling 
procedure proceeds iteratively detecting leveling resource contention peaks periods demand projected exceed resource capacity 
conflict selection resolution heuristics procedure direct search generalize employed previous profile scheduling approaches replacing localized pair wise analysis competing resource requests global analysis minimal conflict sets 
extended analysis expected lead informed resolution decisions 
specific interest application scheduling approach resource constrained project scheduling problem time windows rcpsp max studied difficult makespan minimization problem 
extensions developed enable base resolution procedure larger optimizing search process 
define rcpsp max problem section 
describe elements composite rcpsp max solution procedure sections 
report comparative performance results previously studied set benchmark problems section 
rcpsp max problem rcpsp max scheduling problem formalized follows ffl set activities executed activity fixed duration activity start time completion time satisfies constraint ffl set temporal constraints activity pairs form gamma min ij max ij called start start constraints time lags generalized precedence relations activities 
ffl set renewable resources resource integer capacity 
note activity durations constant values start start constraints activities represented start start form 
ffl execution activity requires resources 
resource integer rc represents required capacity size activity schedule assignment values activities sn 
schedule time feasible temporal constraints satisfied constraints gamma min ij max ij hold 
schedule resource constraints satisfied fi js set activities progress time rc usage resource time constraint hold 
schedule feasible satisfies type constraints 
rcpsp max optimization problem find feasible schedule minimum makespan mk mk maxfc 
shown finding feasible schedule rcpsp max np hard 
difficulty due presence maximum separations max ij rcpsp max problem subject investigation operations research community yielding lower bound analysis schwindt number branch bound solution procedures de herroelen mohring schwindt dorndorf 
problem generator progen max schwindt available web set problems kolisch constructing feasible solution specifying core csp resolution procedure generating feasible solutions instances rcpsp max 
approach follows general schema constraint posting scheduling approaches cheng smith cesta 
initial time feasible solution computed ignoring resource constraints 
resource constraints super imposed iterative search performed resolve resulting resource conflicts sets activities competing resource capacity time interval 
iteration particular conflict selected resolve additional precedence relation posted eliminate contention 
search continues feasible solution conflicts eliminated unresolvable conflict discovered case search fails 
clearly key effectiveness greedy search procedure strength heuristics select resolve pending conflicts 
regard approach integrates ideas previously reported clique approach resource reasoning ghallab improve previously developed heuristics cumulative scheduling 
second way effectiveness partial procedure enhanced addition backtracking restarting mechanisms serve broaden search event failure 
exploiting approach taken smith develop randomized variant conflict selection heuristic embed core resolution procedure larger iterative sampling search 
elaborating design aspects feasible solution generator briefly summarize constraint propagation machinery support search 
constraint propagation csp resolution procedure integrates basic components search procedure responsible refining current csp decisions possible values variables constraint propagation procedure choice search computes implications updating status csp eliminating inconsistent values 
scheduling problem rcpsp max temporal resource constraints sources propagation time constraints 
search procedure manipulates temporally consistent network time points constrained initially set temporal constraints identified section constrained additional precedence constraints posted search 
path consistency network dynamically maintained pair shortest path computation making distance information pair time variables available focusing search 
resource constraints 
resource constraint propagation done approaches disjunctive cumulative scheduling problems nuijten aarts nuijten le pape 
form deduction seen complementary approach added transparent way prune search space potentially improve reported results 
direction current research 
esa basic resolution algorithm specifies basic conflict removal procedure generate feasible solution referred esa earliest start algorithm 
algorithm accepts problem instance problem upper bound makespan horizon 
computes earliest start time solution assumes infinite capacity line attempts incrementally transform initial time feasible solution resource feasible solution 
step resource conflict current solution selected resolved posting precedence constraint delays earliest start time competing activities 
contention peaks resource profiles 
time feasible earliest start time schedule straightforward identify time instants resource capacity constraint resource violated 
say contention peak resource time condition holds 
intuitively contention peak resource characterizes conflict esa problem horizon 
horizon 
loop 

return 


return 

conflict 
conflict 
post update 
loop 
pass greedy algorithm identifying set activities simultaneously require combined capacity requirement obviously feasible solutions contain peaks possible way transform feasible solution detect remove peaks 
basic idea profile scheduling procedures cesta peak removed leveling posting precedence constraints pairs activities contributing peak constraints posted time activity start time avoid overlap 
leveling conflict choice pair activities order quite crucial quality solution possible add precedence relations strong peak leveling effect 
example assume resource capacity peak includes activities capacity requirements brackets fa pairs activities selected ordering 
case combined requirement exceeds feasible solution reciprocally ordered 
alternatively ordering pair may may essential leveling conflict 
observed shortcoming previous profile approaches cumulative scheduling tendency post unnecessary ordering constraints conflict selection resolution heuristics rely strictly pairwise analysis competing activities cesta conflicts minimal critical sets activities 
alternative approach conflict analysis overcome problem proposed ghallab scheme activity intersection graph constructed systematically searched particular cliques 
clique called minimal critical set mcs 
specifies set activities simultaneously require resource combined capacity requirement combined requirement subset important advantage isolating mcss single precedence relation pair activities mcs eliminates resource conflict 
unfortunately exponential nature intersection graph search prohibits basic approach scheduling problems interesting size 
cesta shown advantage type global conflict analysis retained approximate procedure computing mcss 
pragmatic cost recomputing mcss resources iteration csp resolution procedure remains high significantly limits scalability 
esa achieve better computational tradeoff integrating mcs analysis profile scheduling framework 
iteration search compute contention peaks quadratic number activities isolate areas solution conflicts mcss computed 
generate set mcss peak 
steps embedded respectively predicate function lines algorithm description 
number mcss contained peak quite large worst case gamma jv ck delta accordingly esa utilizes approximate heuristic scheme computing mcss 
computation critical minimal sets 
heuristic sampling schemes computing set mcss associated contention peak evaluated linear sampling quadratic sampling 
cases activities sorted order decreasing size capacity requirements largest promote detection critical mcss 
schemes summarized follows linear sampling 
scheme queue select mcs activities sequentially considered sorted order inserted sum resource requirements exceed resource capacity 
point set current mcs collected list mcss element removed 
previous steps iterated mcss collected activities quadratic sampling 
scheme seen extension linear sampling second step expanded follows 
current mcs collected immediately removing element forward search remaining activities performed collect mcss obtained dropping item placed substituting single subsequent activities mcs composed 
consider peak previous example fa resource 
peak contains mcss linear sampling collects fa fa quadratic sampling hand find third fa conflict removal 
lines esa algorithm remove mcs current solution 
basic steps involve selecting mcs current conflict set line selecting precedence constraint resolves selected mcs line posting constraint perform temporal constraint propagation line 
heuristics govern conflict selection conflict resolution esa directly commitment concepts previously utilized problems maximum time lags cheng smith ghallab 
candidate mcss ordered temporal flexibility contain function degree constituent activities reciprocally shifted time 
flexibility mcs critical resolve 
greater flexibility retained posting precedence constraint resolves mcs desirable post constraint 
quantify notion temporal flexibility heuristic estimator suggested ghallab 
candidate mcs set fpc pc precedence constraints posted pairs activities mcs mcs defined follows mcs commit pc gamma commit commit pc ranges estimates loss temporal flexibility result posting constraint pc pc min precedence constraint minimum value commit pc 
note mcs takes highest value cases specific precedence constraint feasibly posted resolve conflict 
general closer mcs unresolvable higher value mcs 
conflict selection heuristic chooses mcs highest value conflict resolution heuristic simply chooses pc min randomizing esa esa resolution procedure defined deterministic partial solution procedure recourse event unresolvable conflict encountered 
provide capability expanding search cases incurring combinatorial overhead conventional backtracking search define random counterpart conflict selection heuristic style smith embed resulting random esa procedure iterative sampling search framework 
specifically heuristic employed modified follows 
define acceptance band fi consider equivalent set mcss kmax gamma fi mcs kmax conflict resolved randomly selected set resulting non deterministic choice 
depicts larger iterative sampling algorithm 
designed simply invoke random esa problem horizon 
best 
sol mk 
counter 
counter mk sol mk 
sol esa problem horizon 
mk sol mk best 
best sol 
counter counter 

return best 
restarting esa procedure resolution procedure fixed number times restarts failure produce feasible solution 
broader objective makespan minimization restart provides new opportunity produce different feasible solution lower makespan 
optimization procedure restarting procedure just described fact retain smallest makespan solution generated calls principal role produce feasible solution relative upper bound horizon 
section define rcpsp max optimization procedure feasible solution generator relate previous approaches rcpsp max 
ises algorithm similar csp procedures makespan minimization cheng smith adopt multipass approach feasible solution generator repeatedly applied solve problems increasingly smaller temporal horizons longer possible find feasible solution lower bound solution 
shows specific multi pass version base esa procedure defined called ises iterative sampling earliest solutions 
ises composed basic steps 
feasible solution invoking horizon value maxh greater lower bound mk 
mk initial infinite capacity solution problem 
successive calls time substituting new best makespan previous call new problem horizon 
iteration stops call returns empty solution lower bound solution obtained solution returned improve previous best 
comparison approaches previously noted investigates mathematical properties problem similarly characterizes solution space temporal constraints 
notion forbidden sets introduced represent resource conflicts equivalent ises problem maxh 
best find feasible solution 
sol problem maxh 
sol improve current makespan 
repeat 
best sol 
sol problem mk best 
mk mk sol mk best 
return best 
ises optimization algorithm definition contention peaks 
defines concept similar mcs called reduced forbidden set 
sketch systematic procedure similarly starts infinite capacity solution extends set precedence relations problem 
unfortunately computational analysis quite limited 
small instances mentioned approach influenced computational approaches rcpsp max 
ises seen approximation algorithm ideas evolved origins 
approaches retained idea extending time feasible solution adding precedence relations analyze current solution differently 
de herroelen schwindt peaks considered increasing chronological time order set minimal delaying activities detected resolving conflicts 
alternatively esa depend chronological time order opportunistically acts constrained part solution 
algorithms differently 
example mohring solves resource conflicts increasing release dates minimum time lags relative project certain activities introducing precedence relations 
proposal dorndorf obtained strong results combination techniques couples set temporal resource constraint propagation rules binary branching schema exploits particular properties current partial solution successively fix delay start times various activities 
approximate approaches defined literature 
heuristic analysis franck neumann obtained results rcpsp max benchmark problems 
despite classified priority rules approach uses step method sophisticated decomposition analysis performed identify critical sub components scheduled independently scheduled sub components partial schedules integrated set priority rules 
note step uses properties due presence maximum time lags 
respect ises approach deterministic relies quite different analysis problem 
experimental evaluation experimental evaluation ises focuses sets problems taken rcpsp max problem repository problem set benchmark problem set described kolisch consists sets problems named problems activities respectively resources 
known results problem set date obtained procedure schwindt problem set benchmark problem set introduced schwindt approaches mentioned section 
consists problems activities resources feasible rest provably infeasible 
set lower bounds known problem schwindt providing common point measuring deviation optimal solutions 
problem sets generated progen max flexible random networks generator schwindt allows generation project scheduling problems varying structure difficulty 
due differences generation parameters case important differences characteristics problems set 
parameter settings generate problem set closer problem set settings produce hardest possible problems franck neumann particular problems set exhibit higher levels resource contention higher contention peaks set increased parallelism project activities increased sequencing 
properties expect deeper search trees larger search space solving problems set problems set greater number ordering decisions needed build feasible solution 
problem set contains larger activity problems problems problem set challenging 
experimental design 
results obtained ises problem sets linear quadratic mcs sampling schemes 
experiments randomization factor fi mcs selection set mcss maximum ranked considered equivalent 
number restarts resolution procedure horizon set problem set problem set maximum horizon maxh set theta mk algorithms compared ises implemented run pentium imposed time limit seconds problem 
current available ftp ftp uni karlsruhe de pub progen max implementation ises common lisp reported results obtained sun ultrasparc mhz 
lisp implementations directly comparable imposed second time limit 
problem set compute performance ises second limits better understand behavior algorithm 
non deterministic nature ises problem solved multiple times different random seeds similar nuijten le pape evaluates random restart algorithm 
report results best result ises best obtained best result single problem different runs average result ises avg obtained average result problem runs 
problem set table gives performance results problem classes problem set best performing ises configuration quadratic sampling approach schwindt labeled bs 
column opt interpreted differently case algorithm bs indicates number problems solved optimality ises indicates number problems solution obtained 
second column feas gives number problems feasibility solved approaches 
column impr sense ises indicating number problems ises finds better solutions bs average ises solution times problems seconds respectively 
observe ffl smaller problems exact bs procedure dominates ises sets ises finds feasible solutions 
ffl ises finds feasible solutions runs elude average improves solutions produced bs ffl problem size increases ises finds lower makespan solutions increasing numbers problems 
table shows relative deviation makespans produced ises produced ises best ises avg configuration 
see ffl average deviation solution quality problems 
ffl differential solution quality progressively decreases problem size increased 
table indicate effects solution quality varying mcs sampling strategy number restarts problem subset 
seen increasing number restarts positive effect accurate quadratic sampling produces significant improvement 
table set runs secs quadratic sampling set algorithm opt feas impr secs ises secs best ises secs avg secs ises secs best ises secs avg secs ises secs best ises secs avg table set average best deviation secs quadratic sampling problems best avg balance comparative results problem set suggest ises provides scalable alternative exact solution procedures hard rcpsp max problems 
worth mentioning franck neumann results similar size problems number activities range similar parameters progen max reported heuristic approach proposed compared quite badly respect problem set table reports performance results ises problem set metrics originally study schwindt include ffl delta lb average relative deviation lower bound computed schwindt ffl opt percentage optimal solutions solutions equal best known lower bound proved optimal ffl feas percentage problems solved feasibility 
compare performance ises linear sampling reported branch bound approaches rcpsp max including de herroelen labeled mohring labeled bm schwindt table number restarts vs type sampling sampling linear quadratic best avg table set independent runs linear sampling problems delta lb opt feas secs secs secs secs pr best fn ises secs best ises secs avg ises secs best ises secs avg ises secs best ises secs avg labeled dorndorf labeled bd 
include mentioned heuristic procedure franck neumann labeled pr best fn 
case decomposition strategy priority rule pair outperform problems include table results obtained best performing decomposition scheme problem best solution priority rules 
observations follow table ffl ises approaches able find feasible solutions second time bound 
regard ises outperforms previously best heuristic procedure known rcpsp max 
fact ises appears robust runs performed ises feasible solutions missed single run 
ffl approaches find higher percentages optimal solutions ises 
regard deviation lower bound solutions delta lb ises ranks third bd bs fact fairly comparable bs second time limit 
note delta lb influenced number feasible solutions solving difficult problems typically increases deviation dorndorf 
ffl contrasting performance ises different time limits significant improvement obtained increasing time limit seconds increase seconds achieves limited improvement 
clearly dominating procedure problem set bd dorndorf interesting note approach exploits resource constraint propagation rules straightforwardly added ises 
currently investigating possibility 
average solution times obtained ises different time limit give additional insight table set runs quadratic sampling problems delta lb opt feas ises secs best ises secs avg behavior problem set follows seconds second limit seconds second limit seconds second limit 
fact average solution times rise fairly slowly proportion increases time limit indicates relatively small percentage problems efficiently solved 
example examining particular runs ises percentage solvable problems require seconds solution seen 
table indicates performance effect incorporating comprehensive quadratic mcs sampling strategy second time bound 
case average solution time increases just slightly seconds table shows virtually improvement solution quality 
ineffectiveness explained recalling prior discussion characteristics problem set level resource contention problems small moderate resulting contention peaks relatively smooth contain mcss 
accordingly mcss linear sampling accurate strategy adds little 
investigates iterative sampling procedure solve rcpsp max complex optimization problem 
ises procedure uses combination constraint guided greedy search randomization 
greedy search procedure utilizes analysis minimal conflict sets mcss identify additional ordering constraints required avoid resource contention 
mcs analysis integrated commitment principles related retaining temporal flexibility provide heuristics focusing search 
randomization introduced way incorporates bias greedy search heuristics 
provides basis smoothing decisions deterministic algorithm broadening search include equivalent search paths space enhancing probability finding better quality solutions 
contribution represented approximate computation mcss avoids basic exponential computation attempts select critical minimal conflicts low polynomial cost 
ises compared best existing approaches rcpsp max 
outperforms systematic heuristic approaches different problem sets 
particular ises shown perform quite situations due problem characteristics heavy resource contention search space quite large serious obstacle systematic approaches 
case non systematic random ap proach demonstrates advantageous trend comparison best known systematic algorithm terms number quality solutions provided problem size increased 
worth noting method relies mainly composite search strategy heuristics set propagation rules early pruning search space 
addition interesting direction research 
acknowledgments authors dr christoph schwindt creating repository possible experimental comparison described giving prompt clarifications 
various authors available updated unpublished works topic 
cesta angelo supported italian space agency cnr committee information technology project sci sia cnr committee biology medicine 
stephen smith sponsored part national aeronautics space administration contract ncc department defense advanced research projects agency contract cmu robotics institute 
mohring 
scheduling project networks resource constraints time windows 
annals operations research 
cesta cesta smith 
profile algorithms solve multiple capacitated metric scheduling problems 
proceedings fourth int 
conf 
artificial intelligence planning systems aips 
cesta cesta smith 
scheduling multi capacitated resources complex temporal constraints 
technical report tr robotics institute carnegie mellon university 
cheng smith cheng smith 
generating feasible schedules complex metric constraints 
proceedings th national conference ai aaai 
cheng smith cheng smith 
applying constraint satisfaction techniques job shop scheduling 
annals operations research 
de herroelen de herroelen 
branch bound procedure resource constrained project scheduling problem generalized precedence relations 
european journal operations research 
appear 
dorndorf dorndorf pesch phan 
time oriented branch bound algorithm resource constrained project scheduling generalized precedence relations 
technical report university bonn faculty economics 
franck neumann franck neumann 
resource constrained project scheduling problems time windows structural questions priority rule methods 
technical report universitat karlsruhe 
revised november 
schwindt schwindt 
lower bounds rcpsp max 
technical report universitat karlsruhe 
kolisch kolisch schwindt sprecher 
benchmark instances project scheduling problems 
editor handbook advances project scheduling 
kluwer 
ghallab ghallab 
planning sharable resource constraints 
proceedings international joint conference artificial intelligence ijcai 
mohring mohring stork 
resource constrained project scheduling time windows branching scheme dynamic release dates 
technical report fachbereich technische universit berlin 
nuijten aarts nuijten aarts 
computational study constraint satisfaction multiple capacitated job shop scheduling 
european journal operational research 
nuijten le pape nuijten le pape 
constraint job shop scheduling ilog scheduler 
journal heuristics 
smith smith 
stochastic procedures generating feasible schedules 
proceedings th national conference ai aaai 
schwindt schwindt 
generation resource constrained project scheduling problems minimal maximal time lags 
technical report universitat karlsruhe 
schwindt schwindt 
branch bound algorithm resource constrained project duration problem subject temporal constraints 
technical report universitat karlsruhe 
