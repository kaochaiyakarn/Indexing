tsimmis approach mediation data models languages hector garcia molina yannis papakonstantinou quass anand rajaraman yehoshua sagiv jeffrey ullman vassalos jennifer widom stanford university stanford ca usa tsimmis stanford ibm manager multiple information sources system integrating information 
offers data model common query language designed support combining information different sources 
offers tools generating automatically components needed build systems integrating information 
shall discuss principal architectural features rationale 

section introduce core concept mediators tsimmis system implements 
section discusses components tsimmis section discusses oem data model tsimmis 
section introduces mediator specification language msl section learn generate mediators components automatically 
section consider language lorel oem data model 
tsimmis user query language query language related lore lightweight object repository dbms 

mediator concept mediator architecture wiederhold proposed deal problem integration heterogeneous information 
simple concept employees single may represented different ways different information sources 
sources heterogeneous levels 
ffl may relational 
may databases file systems web legacy systems 
ffl types data may vary salary stored integer character string 
ffl underlying units may vary salaries stored hour month basis example 
supported usaf contract nsf iri bsf 
permanent address dept cs hebrew univ jerusalem 
ffl underlying concepts may differ subtle ways 
payroll database may regard employee benefits department 
conversely payroll department may include consultants concept employee benefits department 
ffl information may conform rigid schema advance 
examples semistructured information include sgml documents repositories acedb thierry durbin human genome project lotus notes 
way integrate different information sources deal real world entities create mediator facility capable answering queries entities 
mediator uses raw sources suitably interfaced wrapper mediators answer queries suggested fig 

mediator mediator wrapper wrapper source source query fig 

network mediators information sources 

mediator requirements goal easy build mediator networks suggested fig 

see requirements mediator architecture 

common data model flexible models commonly database management systems 
mediator model support rich collection structures including nested structures type system typical modern programming languages 
graceful handling missing information related information widely differing structures 
meta information information structures meanings terms data 

common query language allow new mediators join old ones augmented functionality new sources provide input existing mediator 

tools creation new mediators mediator systems easier case built scratch 
information source mediator generator mediator msl msl lorel generator wrapper wrapper fig 

components tsimmis 

tsimmis mediation system principal components tsimmis suggested fig 

ffl lightweight object model called oem object exchange model serves convey information components 
lightweight require strong typing objects flexible ways address desideratum 
shall say oem section 
ffl mediators specified logic object oriented language called mediator specification language msl seen view definition language targeted oem data model functionality needed integrating heterogeneous sources 
ffl wrappers called translators specified wrapper specification language wsl extension msl allow description source contents querying capabilities 
wrappers allow user queries converted queries 
assume sources databases important goal project cope radically different information formats uniform way 
ffl common query language links components 
msl query language specification language mediators query language wrappers 
query language lorel lightweight object repository language extension oql cattell targeted semistructured data oriented user queries query language lore lightweight database system storing oem objects locally 
discuss msl section lorel section 
ffl wrapper mediator generators 
developing methodologies generating classes wrappers mediators automatically simple descriptions functions 
discuss mediators wrappers automatic generation section 
general discussion tsimmis including components constraint management user interfaces described see chawathe 

object exchange model object exchange model oem described papakonstantinou garcia widom 
data represented oem self describing sense parsed external schema 
capability simplifies interfaces tsimmis components 
second feature oem flexibility data organization structures described tolerance alternative forms similar objects differences terminology differences kinds information obtainable similar sources 
oid label type value fig 

oem object 

oem objects possible see oem object oriented sense fundamental oem concept object 
type system oem quite elementary 
suggested fig 
oem objects components 
object id may constructed mediators expression describing object came 
may pointer object workspace answer query 
object oriented database systems oem object id may local query 
need persistent 

label tells object represents roughly class 
schema 
objects label required particular set subobjects 
labels expected human understandable definitions may retrieved easily user 
labels carry information objects refer oem self describing 

type value set atomic type string 

value atomic value set objects 
primitives possible simulate structures conventional object oriented type systems 
example record structures simulated sets objects labels names field structure 
significantly objects organized classes 
query address objects structure matches conditions query 
set book aho author string title string compilers 
library set 
fig 

collection oem objects 
example shows collection oem objects 
top root object label library 
value set objects type set 
set objects form value library see labeled book 
reason suppose objects library label book 
may objects labeled report video example 
may find objects labels kind imagine 
book object value type set 
library object set simulate record structure 
expect find value book object set subobjects different labels representing fields structure 
shown subobject labeled author subobject labeled title string type atomic value 
subobjects example object labeled postscript atomic value postscript image book 
author labeled subobjects appropriate 
schema books expect practice library composed information variety sources books different sets fields structure 

oem logical data model natural think oem object oriented model provides advantages natural representation complex structures object oriented models useful see oem form order logic 
logic labels predicates relate object identifiers object identifiers atomic values way objects 
example root library object example may thought predicate library 
value set object id books objects members value library object 
similarly corresponding label book predicate book value set pairs 
object id book object object id object set value object id instance object id book object shown fig 
object id author title subobjects shown book book true 
put way members relation value predicate book 
expect fig 
predicate title value set pairs 
object id object label title string title appears value object important remember oem enforce schema 
permissible title predicate contains pairs corresponding title objects value set 
case string object id objects member set value object 
mediator specification language msl mediator generator provides high level language msl allows declarative specification mediators 
msl object oriented logical query language targeted oem data model 
contains features facilitate integration heterogeneous systems 
msl borrows concepts logic oriented languages datalog ullman ullman hilog chen kifer warren flogic kifer lausen 
number problems avoided sets restricted way variables may explicitly refer existing sets objects 
absence negative clauses msl viewed simply variant datalog 
contribution unstructured structured data queried datalog oql cattell 
query consists rules 
rule consists head followed body 
head describes objects available mediator body describes conditions satisfied source objects 
general heads bodies patterns form object id label value 
may omit object id field irrelevant 
missing body pattern means care object id appearing source 
missing head pattern means invent arbitrary unique object id generated object 
complete specification msl including formal syntax semantics papakonstantinou garcia molina ullman 
shall give example suggests flavor language 
object structure suggested fig 

example find books aho author 
booktitle 
library book title 
author aho 
intuitively msl triangular brackets associate labels values curly brackets group members set set value object type set 
query applies root object labeled library suppose available source called wrapper mediator 
object pattern patterns appear body query matched object structure source looking paths object structure agree nested structure query 
example fig 
path sequence labels library book author practice 
variable binds value title subobjects book objects author subobject value aho 
query head indicates value binds included result value object labeled booktitle 
technically objects subobjects object label answer produced query 
rule example really query 
rule specify trivial mediator exports book titles books aho source 
discuss mediator specification section 
wrappers mediators generators central goal tsimmis easy produce mediated systems 
support goal common data model language designed easy integrate information related quite information sources 
support tools generating wrapper mediator components automatically 

wrappers wrappers provide access heterogeneous information sources converting application queries source specific queries commands 
assume information sources sql similar capability 
sources may text files data organized tables spreadsheet files format 
source may query command system bibliographic search system 
wrappers accept queries expressed msl 
wrappers differ set labels deal set supported queries involving labels 
relational databases sql queries database schema answered information sources answer limited set queries 
example bibliographic search system may understand concepts author title publication date 
system may respond queries asking titles written certain author publication dates books unable unwilling respond query asking titles published example 
tsimmis wrapper takes query decides underlying source answer query query directly supported 
turns query underlying source respond 
wrapper converts answer appropriate oem objects returns result 
query directly supported wrapper determines query answered applying local filtering 
selection directly supported query 
wrapper converts answer received source appropriate oem object applies filter returns result 

wrapper generation built template tool generating wrappers vassalos 
wrapper generator takes set templates form msl template action takes user written functions needed connect wrapper source execute queries source 
example suppose wish build wrapper source bibliographic search system stanford 
define rules books 
library book title 
author au 
sprintf lookup query find author au generated wrapper examines query compares patterns wrapper specification file 
query matches pattern string place parameter au associated action executed string place parameter 
query books 
library book title 
author aho 
generate native query source asking books authored aho 
function sprintf action effect assigning variable lookup query string find author aho 
string passed source 
currently exploring wsl wrapper specification language vassalos extension msl functionality needed source descriptions 
architecture wrapper implementation toolkit generating wrappers described papakonstantinou gupta garcia ullman 

extending wrapper rules query language logic opportunity answer certain queries match pattern 
query deduced logically equivalent query pattern rule combination queries patterns appear rules 
simple example system capable handling query pattern condition query order reversed answered 
process enhancing capability wrapper mediator logical deduction specification called query normalization 
rajaraman sagiv ullman examines problem deducing query equivalent sequence queries match patterns rules 
example suggest achieved general 
example suppose information source genealogy form query patterns answer 
individual find parents 

find individuals parents specified information source 
reasons source limited way 
example relational database child parent relation index child component 
query patterns handle query find grandparents individual find set parents query 
ii individual set query find parents iii answer union individuals step ii 
sequence queries suggested fig 

consider query find grandchildren individual 
need query 
fig 

finding individual grandparents 
find individuals 
ii find parents individuals 
iii find parents individuals ii 
iv find individuals grandparents iii individual sequence queries suggested fig 

expensive strategy best done queries source answer 
fig 

finding individual grandchildren 

mediator generation mediators integration multiple heterogeneous information sources 
set sources wrappers export oem objects build mediators integrate refine information 
particular restrict attention mediators provide integrated oem views underlying information 
run time mediator receives request information mediator specification interpreter msi collects integrates necessary information sources specification 
sources wrapper raw information source mediator 
process analogous expanding query conventional relational database view 
describe mediator msl gives logical rules define oem objects mediator available view 
queries mediator refer objects view 
bodies rules describe object objects source exist defined object appear mediator view conditions objects satisfy 
approach mediator generation msl define wrappers illustrated section 
principal difference sources mediator speak oem need specialized actions describe done wrapper source 
example consider sources contain information staff computer science department 
source relational database containing tables schemas employee name title reports student name year wrapper named cs exports information set oem objects 
second source university whois facility contains information employees students 
source contains things information dept relation university student employee 
wrapper whois provides access source 
consider mediator called med access wrappers cs whois exports set cs person objects 
goal example cs person object represents person appearing sources 
subobjects cs person object represent combined information person 
example object information john doe exported cs whois med combines information exports fused object 
msl specification med mediator follows rules cs person name 
rel 
person 
dept cs 
relation 
whois name 
cs intuitively may think process creating virtual objects mediator pattern matching 
match patterns appear body object structure cs whois trying bind variables represented identifiers starting capital letter object components cs whois 
bindings construct objects specified head rule 
difference msl query language objects specified query rule head materialized client 
msl offers important capabilities ffl language allows recursive definition view objects 
example suggests capability important 
example suppose source arcs graph wish query paths graph 
define mediator supports view set path objects justified graph 
ask mediator nonrecursive msl query path node node mediator issue source queries necessary answer query 
note approach allows problem computing transitive closures efficiently solved mediator generated time query asked 
ffl second language allows assignment semantic object ids objects imported mediator 
semantic ids specify various objects combined merged objects exported mediator 
object id set formation replaces need explicit grouping operators 
msl allows object id computed logical terms particular skolem functions logic kifer lausen 
example illustrates capability advantage 
example capability give objects description derived sources 
important feature describing views source objects grouped sets 
example suppose source enrollment objects student course pairs 
create view objects labeled course value equal set students enrolled course 
rules describing view define course object identifier course 
student course pair enrollment source create view object label student value equal require part msl specification mediator view exported mediator student object member set value course object id course 

lorel query language lorel lightweight object repository language oql query language oem model 
user query language tsimmis 
query language lore lightweight object repository related project stanford building dbms oem data model 
complete specification lorel including formal syntax semantics quass rajaraman sagiv ullman widom 
shall give example suggests flavor language 
object structure suggested fig 

example find books aho author select library book title library book author aho query applies root object labeled library 
root object available specify root roots clause library new generation lorel development see db stanford edu lore details 
appear select clauses sql 
answer query looking paths object structure follow path expressions query sequences labels connected dots 
example fig 
path sequence labels library book author practice 
find path labeled library book title fig 
common prefixes library library book match objects paths form object assignment matches path expressions query 
fortunately condition clause author aho satisfied object assignment 
title object path corresponding select clause part answer 
technically copy title object subobject object label answer produced query 

importance partial object assignments interesting explore major design decisions lorel differs corresponding approach oql sql 
believe lorel approach correct languages serve information integrators sql approach may fine conventional query languages 
reader may aware peculiar way sql handles operations clauses 
suppose unary relations wish compute 
supposing relations single attribute expect sql query trick 
select unfortunately empty result empty elements reason sql semantics requires total assignment tuples relations mentioned clause 
empty find total assignment way produce answer 
expect intuitively partial assignment tuples adequate 
example empty contain tuple assign tuple assign find condition satisfied produce answer tuples 
distinction important sql empty relation conventional relational database 
analogous situation mediated databases 
example lorel query library suggested fig 

find books written aho having subject compilers select library book title library book author aho library book subject compilers book suggested fig 
subject subobject way create object assignment matches path expressions query 
book suggested fig 
answer intuitively matches query 
fortunately lorel requires partial match 
match path expressions library book author library book title paths fig 
exactly example satisfy condition 
produce title compilers answers lorel query 

related various projects integration heterogeneous sources see ahmed kim batini hammer litwin thomas gupta su motro focus integrating relatively small numbers structured databases 
research projects focuses resolving semantic schematic heterogeneities arise integration 
solutions rely semantically rich data models allow easy representation semantic connections distributed data 
systems tsimmis relies lightweight model easily adapt different information representations 
furthermore relies explicit view definition specifying integrated view 
interesting alternative sims arens information manifold levy reasoning phase required realizing sources data interest tsimmis view expansion needed finding data source contribute 
new generation projects focused integration sources may necessarily structured databases 
discussed earlier integration system able process client queries queries supported participating sources 
hermes subrahmanian solves problem mediator specification language literals explicitly specify parameterized calls sent sources 
unfortunately reduces interface integration system sources limited set explicitly listed parameterized calls 
hermes tsimmis garlic papakonstantinou gupta haas source query capability descriptions may describe infinite sets queries 
tsimmis garlic information manifold consider wrappers thin modules support directly specified queries 
capability extensions happen mediator level 
importance information integration research highlighted arrival generation commercial products 
include ibm gupta lin microsoft 

summary hope reader obtained feel principal innovations tsimmis system confuse title begins compilers subject exist 

oem data model object oriented model uses object labels represent class information attributes instance variables objects 

flexibility oem representing objects varying structure 

idea mediator wrapper generation way components expressed specification language msl 

idea query normalization allowing power mediator wrapper increased discovery additional queries logical specification implies answer 

query language lorel oem objects partial match semantics matches flexible structure oem objects 
ahmed 
pegasus heterogeneous multidatabase system ieee computer 
arens chee 
hsu knoblock 
retrieving integrating data multiple information sources intl journal intelligent cooperative informations systems june 
batini lenzerini navathe 
comparative analysis methodologies database schema integration acm computing surveys 

data access masses ole db acm sigmod international conf 
management data pp 

cattell 
object database standard odmg san mateo 
chawathe garcia molina hammer ireland papakonstantinou ullman widom 
tsimmis project integration heterogeneous information sources ipsj conference tokyo 
available anonymous ftp pub chawathe tsimmis overview ps db stanford edu 
chen kifer warren 
hilog foundation higher order logic programming journal logic programming february 
gupta 
integration information systems bridging heterogeneous databases 
ieee press 
gupta lin 
practical approach multidatabase access proc 
pdis conf page 
hammer mcleod 
approach resolving semantic heterogeneity federation autonomous heterogeneous database systems intl journal intelligent cooperative information systems 
kifer lausen 
logic higher order logic reasoning objects inheritance schemes acm sigmod international conf 
management data pp 

kim 
resolving schematic heterogeneity multidatabase systems distributed parallel databases 
levy rajaraman ordille 
querying heterogeneous information sources source descriptions proc 
vldb conf 
litwin mark roussopoulos 
interoperability multiple autonomous databases acm computing surveys 
motro 
multiplex formal model multidatabases implementation technical report tr george mason university 
papakonstantinou gupta haas 
capabilities query rewriting mediator systems appear pdis 
available anonymous ftp pub papakonstantinou cbr extended ps db stanford edu 
papakonstantinou abiteboul garcia molina 
object fusion mediator systems proc 
vldb conf 
available anonymous ftp pub papakonstantinou fusion ps db stanford edu 
papakonstantinou gupta garcia molina ullman 
query translation scheme rapid implementation wrappers proc 
dood conf 
available anonymous ftp pub papakonstantinou ps db stanford edu 
papakonstantinou garcia molina widom 
object exchange heterogeneous information sources proc 
intl 
conf 
data engineering march 
available anonymous ftp pub papakonstantinou object ps db stanford edu 
papakonstantinou garcia molina ullman 
mediation system declarative specifications proc 
intl 
conf 
data engineering march 
available anonymous ftp pub papakonstantinou ps db stanford edu quass rajaraman sagiv ullman widom 
querying semistructured heterogeneous information proc 
dood conf 
available anonymous ftp pub quass querying full ps db stanford edu 
rajaraman sagiv ullman 
answering queries templates binding patterns proc 
pods conf pages 
available anonymous ftp pub rajaraman limited ps db stanford edu 
su 
ncl common language achieving rule interoperability heterogeneous systems journal intelligent information systems integrating artificial intelligence database technologies pp 
june 
subrahmanian 
hermes heterogeneous reasoning mediator system available www cs umd edu projects hermes overview 
thierry durbin 
syntactic definitions acedb data base manager technical report mrc xx mrc laboratory molecular biology 
thomas heterogeneous distributed database systems production acm computing surveys 
ullman principles database knowledge base systems vol classical database systems 
computer science press new york ny ullman principles database knowledge base systems vol ii new technologies 
computer science press new york ny vassalos 
wrapper specification query processing tsimmis project unpublished memorandum 
wiederhold 
mediators architecture information systems ieee computer pp 


