model checking vs theorem proving manifesto joseph halpern moshe vardi ibm almaden research center san jose ca usa email almaden ibm com argue representing agent knowledge collection formulas doing theorem proving see formula follows agent knowledge base may useful represent knowledge semantic model model checking see formula true model 
discuss construct model represents agent knowledge number different contexts consider approach model checking problem 
extended version appears principles knowledge representation reasoning procedings second international conference allen fikes sandewall eds pages 

standard approach ai knowledge representation going back mccarthy represent agent knowledge collection formulas view knowledge base 
agent said know fact provable formulas knowledge base 
called rosenschein interpreted symbolic structures approach 
problems applying approach 
comes difficulty representing agents knowledge terms formulas appropriate language 
second lies difficulty theorem proving 
problems closely related need logic represent agents knowledge necessitates expressive logics expressive logic harder prove theorems logic 
argue model theoretic proof theoretic approach problem 
essentially idea represent agent knowledge data structure representing semantic model spirit situated automata approach rosenschein rosenschein kaelbling replace theorem proving model checking checking formula true model 
example approach consider context relational database systems 
relational database order query 
approach view representing formula evaluate query trying prove disprove 
unfortunately theorem proving order logic undecidable 
model checking approach hand check holds database evaluated time polynomial size data cf 
vardi 
example consider agent alice knows current epistemic state information obtained far world possible states 
possible worlds approach situation modeled kripke structure possible worlds 
usual say alice knows fact true worlds alice considers possible epistemic state 
particular tautologies true worlds alice considers possible follows alice knows propositional tautologies 
may strange 
set propositional tautologies known np complete 
alice possess extraordinary reasoning power know tautologies prove 
model checking approach unusual fact 
alice knows propositional formula true states alice considers possible 
checked time linear length 
notice alice knows tautologies facts knows epistemic state know facts knows tautologies probably care 
known logical omniscience problem hintikka difficulties model checking approach theorem proving approach shall see related difficulties arise 
paradigm model checking arose explicitly context finite state program verification 
see clarke grumberg overview 
suppose finite state program think example communications protocol want know satisfies specification assume expressed temporal logic 
hard completely characterize program temporal logic formula 
essentially describes possible transitions possible global state possible finite state protocol 
way checking satisfies specification check valid manna pnueli 
unfortunately validity problem temporal logic extremely difficult 
technically exponential time complete emerson halpern harder validity problem propositional logic 
researchers noticed approach equally clarke emerson clarke sifakis 
having represented formula represented kripke structure states represent possible global states edges represent possible transitions note size number states essentially length viewed string symbols 
checking satisfies specification amounts checking true state corresponds initial state done time linear size 
course argued argument shows special subclass formulas form validity problem significantly simpler general 
observation encourage find subclasses validity problem solvable polynomial time cf 
emerson 
claim argument misses point 
reason formulas form easy discussion presumes branching temporal logic 
case linear temporal logic situation somewhat complicated see emerson halpern sistla clarke lichtenstein pnueli deal characterizes particular state particular structure state satisfied isomorphic initial state structure defined formulas validity problem reduces modelchecking problem tractable 
model theoretic approach finite state program verification quite practical systems model checking implemented clarke grumberg burch 
extended deal complicated protocols environments including probabilistic protocols assumptions fairness vardi wolper 
cases assumptions dealt fairness expressible language specification formula 
hindrance modeltheoretic approach 
check model satisfies assumptions expressible language 
core section devoted detailed description model checking approach discussion potential problems approach dealt current techniques comparison model checking approach theorem proving approach 
consider section logical omniscience problem model checking point view discuss logic appropriate reasoning model checking approach inspired logic resource bounded knowledge moses conclude section general discussion appropriateness 
model theoretic approach 
muddy children puzzle getting technical details motivate model theoretic approach applying known muddy children puzzle 
particularly appropriate festschrift mccarthy pioneers attempting formalize puzzles epistemic logics muddy children puzzle generalization wise men puzzle considered mccarthy 
version muddy children puzzle taken barwise imagine children playing 
mother children told get dirty severe consequences 
course child wants keep clean love see get dirty 
happens play children say get mud 
see mud forehead 
course says thing 
comes father says mud head expressing fact known spoke 
father asks question know mud head 
assuming children perceptive intelligent truthful answer simultaneously happen 
proof gamma times asks question say th time dirty children answer 
proof induction result obvious dirty child sees muddy muddy 

just dirty children answers time mud 
says realizes muddy known mud head answered time 
answers second time 
goes reasoning 
suppose dirty children child argues follows 
assume don mud head 
case answer second time 
don realizes assumption false muddy answer third question 
similarly general case similar 
attempts describe type reasoning logic particularly context wise men puzzle 
mccarthy formalization mccarthy formalizations carried mccarthy example attardi simi aiello aiello kuo konolige abdallah stark 
wise men puzzle essentially special case muddy children puzzle muddy children wise men queried sequentially simultaneously 
special case formalizing puzzle nontrivial previous formalizations involve mechanism typically higher order logic circumscription capturing deduction capabilities agents logic 
show situation characterized model theoretically particularly elegant way 
explain characterization need preliminaries modal logic possible worlds paradigm 
want describe agent knowledge 
traditional way say agent knows fact true worlds agent considers possible 
capture means kripke structure 
kripke structure agents tuple set possible worlds states associates world truth assignment propositional order case may binary relation intuitively truth assignment tells true world relation intended capture possibility relation agent agent considers world possible world say agent knows world structure write true worlds agent considers possible world captures intuition agent knows fact true worlds considers possible 
return muddy children puzzle discussion taken forthcoming book fagin 
consider situation father speaks 
suppose children altogether number children muddy rest 
describe possible situation tuple form child muddy forehead 
tuple form say exactly children muddy child child 
suppose actual situation described tuple 
situations child consider possible father speaks 
child see children doubt mud forehead 
child considers situations possible actual situation 
similarly child considers situations possible 
note general child information possible worlds exactly agree components possibly th component 
capture general situation kripke structure consisting states tuples 
child considers world possible agrees components possibly th component take exactly agree components possibly th component 
notice definition equivalence relation 
complete description kripke structure define truth assignment decide primitive propositions language 
take fp pg intuitively stands child muddy forehead stands child muddy forehead 
define course equivalent truth value determined truth value primitive propositions 
prevent choosing language primitive propositions independent 
convenient add primitive proposition describing father statement 
completes description kripke structure may quite complicated elegant graphical representation 
think states nodes graph place edge labeled states tell apart states agree components component 
suppose ignore self loops labeling edges moment 
structure nodes described tuple nodes joined edge exactly differ component 
reader imagination see defines dimensional cube 
case illustrated 
gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma kripke structure muddy children puzzle intuitively child knows children muddy 
intuition borne formal definition knowledge 
example easy see actual situation worlds child considers possible actual situation child muddy forehead 
similarly child knows child forehead muddy 
child know forehead muddy world considers possible forehead muddy 
returning analysis puzzle consider happens father speaks 
father says fact known children children muddy 
state knowledge changes children know going back example initial situation knew father spoke child muddy forehead child considered situation possible father spoke 
situation child consider possible 
father spoke child thought possible child thought possible children muddy forehead 
father speaks common knowledge child muddy forehead 
notion common knowledge knows knows knows 
mccarthy terminology mccarthy fool knows plays crucial role shall see 
represent change group state knowledge graphically general case simply removing point cube getting truncated cube 
accurately happens node remains edges nodes exactly disappear common knowledge child muddy forehead father speaks child consider possible muddy forehead 
situation illustrated 
show time children respond father question group state knowledge changes cube truncated 
consider happens children respond father question 
claim nodes exactly eliminated 
accurately edges nodes nodes exactly disappear graph 
nodes fewer longer reachable nodes 
fact children muddy common knowledge children children muddy 
reasoning parallels done proof story 
actual situation described say tuple child initially considered situations possible gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma kripke structure father speaks 
father speaks common knowledge possible know situation described know forehead muddy 
answers father question common knowledge situation 
note assumption common knowledge intelligent truthful reasoning required show possible 
similar reasoning allows eliminate situation exactly 
children answered father question common knowledge children muddy 
arguments spirit show children answer times eliminate nodes accurately disconnect nodes rest graph 
sequence kripke structures describing children knowledge step process 
essentially going node common knowledge node impossible edges node reachable eliminated 
situation easier describe add time picture 
return point section 
rounds questioning common knowledge children mud 
true situation described tuple exactly father asks question st time children muddy know exact situation particular know muddy consequently answer 
note couldn answer earlier point child muddy forehead considers possible muddy forehead 
contend model argument gives clearer indication going puzzle previous formalizations attempted describe theorem proving abilities agents formal logic 
reader note reasoning puzzle applies number children number dirty children 
contrast approaches puzzle usually deal fixed typically 
ability deal parametrized family models important instances common sense reasoning cf 
kaufmann important feature model checking approach see clarke sistla german 

appropriate semantic model 
construction semantic model muddy children puzzle somewhat ad hoc 
clearly apply model theoretic approach general need techniques describing constructing semantic model techniques checking formula true model 
consider issue subsection leave second subsection 
ai applications deal agents interacting external environment 
setting believe possible worlds paradigm yields appropriate semantic model 
model system interacting agents kripke structure 
formal model fagin halpern fagin turn earlier models appeared halpern moses parikh ramanujam chandy misra rosenschein kaelbling 
briefly describe formal model shall referring reader halpern fagin details 
assume point time agent local state 
informally notion agent taken loosely 
agent robot observing environment knowledge base knowledge bases told information processor parallel machine 
say applies contexts 
local state encodes information observed far 
addition environment state keeps track relevant system recorded agents states 
global state sequence consisting environment state local state agent run system function time ease exposition assume ranges natural numbers easily take range reals global states 
run sequence global states roughly speaking complete description happens time possible execution system 
take system consist set runs 
intuitively runs describe possible sequences events occur system 
system refer pair consisting run time point 
points viewed worlds kripke structure 
say points indistinguishable agent write agent local state points 
take play role possibility relation note equivalence relation interpretation 
interpreted system pair consisting system mapping associates truth assignment point 
semantics knowledge formulas interpreted systems identical kripke structures 
particular point interpreted system points 
notice interpretation agent knows true situations system agent current information encoded local state 
distributed protocol relatively straightforward construct system corresponding protocol 
local state process typically characterized number internal variables example describe messages far received values certain local variables transition function describes system changes global state 
see example halpern zuck detailed example modeling process knowledge analysis distributed protocol 
case muddy children puzzle runs corresponding initial situation 
dimensional cube started describes initial situation kripke structure consisting just time points 
truncated cubes kripke structures consisting time points viewing system set runs bring time picture natural way see fact nodes disappear edges 
accurately runs may joined edge time may edge time agent couldn distinguish time acquired information allowed distinguish time 
see halpern fagin detailed description set runs corresponding muddy children puzzle 
knowledge applications modeling problem may harder difficulty describing state space 
basically clear describe states contain information agents knowledge 
context knowledge structures approach suggested fagin may prove useful cf 
hamilton delgrande 
suppose constructed model system 
provided completely characterize agent local state formula reduce problem checking agent local state knows checking validity agent knows local state true possible worlds local state able characterize agent local state means formula certainly require expressive logic theorem proving quite intractable 
model checking approach hand require local states encodable formulas 
require resorting logic expressive necessary express assertion 
important issue consider comparing approaches representation 
theorem proving approach requires represent agent knowledge collection formulas language 
model checking approach represents agent knowledge local state structure 
complete freedom decide representation local state structure 
applications arise frequently ai logical choice representation terms formulas 
example problem solving system strips represents state set order formulas operations state represented adding certain formulas deleting fikes nilsson 
example levesque levesque studies knowledge bases kbs tell ask operations 
kb told sequence facts able represent situation set facts told 
kripke structure represent 
thing decide global states going 
agent system kb global state pair consisting environment state kb local state 
said identify kb local state formulas told 
environment 
assume real world external kb take environment complete description relevant features world 
model environment state relational structure 
global state pair relational structure intuitively describing world formula intuitively conjunction facts kb told 
decide allowable global states 
turns quite sensitive expressiveness kb 
suppose assume kb assertion told facts assertion language facts knowledge 
restrict attention global states formula true 
captures assumption kb told true facts world 
restrictions definition knowledge knowledge base kb knows fact state holds global states form 
means kb knows state holds models equivalently logical consequence example shows model checking approach viewed model evolution knowledge base temporal structure point represented set formulas 
see morris discussion model 
may reasonable cases represent situation set facts agent told note doing assuming things kb told facts static situation information arrived irrelevant 
example consider propositions truth may change time may point kb told told 
necessarily want view kb inconsistent state point 
get difficulty augmenting representation include time time inconsistent time 
imagine sophisticated kb discards earlier fact inconsistent information 
approach quickly leads difficulties encounters general updating beliefs see fagin gardenfors 
example facts pairwise consistent conjunction inconsistent 
facts discard 
relational structure consists domain individual elements assignment functions relations function relation symbols assertion language 
generalization theorem proving approach 
model checking approach gives added flexibility 
example consider closed world assumption reiter fact explicitly stored database taken false 
need assumption negative information stems fact complex application number negative facts vastly number positive ones totally infeasible explicitly represent negative information database 
capture assumption restricting attention pairs true atomic formula implied false closed world assumption formalized order logic means theorem proving approach query closed world knowledge bases reiter analyzing problem model checking perspective leads complete characterization complexity query answering furthermore enables deal higher order queries usually amenable theorem proving approach vardi 
closed world assumption consider making restrict attention certain 
shoham shoham observed forms nonmonotonic reasoning viewed attempts restrict attention collection preferred pairs 
focus works nonmonotonic reasoning logical formalism describe set preferred models 
necessary wishes apply theorem proving approach 
contention theorem proving just way evaluate queries necessarily optimal way 
point view right question prove assertion follows knowledge base nonmonotonic logic holds kripke structure represented nonmonotonicity captured restricting attention preferred set possible worlds 
complication arising notion preference situation gets complicated assume kb told facts include information knowledge specification knowledge 
pointed levesque quite important practice 
example suppose kb told facts small group people john teacher mary teacher know teachers 
expect kb know bill teacher assuming knows bill distinct mary john 
intuitively assertions restrict set possible worlds ones john mary teachers 
model 
pairs allow conjunction formulas mentioned 
clearly pairs true relational structure determine truth formulas involving knowledge 
answer knowledge specification select allowable states time allow notion preference 
collection possible states consistent kb 
just focus global states consider resulting kripke structure 
intuitively trying describe kripke structure consisting collection pairs true resulting kripke structure 
notice truth depends kripke structure just 
just potentially states consistent assertion specification potentially kripke structures consistent knowledge specification 
notion preference select unique kripke structure 
popular notion preference tries circumscribe kb knowledge 
idea view knowledge specified kb known 
preference viewed closed world assumption knowledge level 
notion received lot attention past decade fagin halpern moses konolige levesque levesque levesque parikh vardi 
far considered situations single agent 
situations kripke structures degenerate essentially sets worlds 
ai applications deal multiple interacting agents 
try give formal semantics sentences dean doesn know nixon knows dean knows nixon knows break full power kripke structures comes play 
situations circumscribing agents knowledge highly nontrivial cf 
fagin parikh vardi 
summarize relatively simple settings may difficult describe implicitly explicitly set runs characterize system get kripke structure appropriate semantic model 
preference criteria defaults may task difficult expect case task manageable understanding notions 

model checking suppose constructed consider appropriate semantic model 
want check formula true particular state model 
checking arbitrary formula extended language holds world kripke structure components able check assertions knowledge free formulas hold state call assertion checking check knowledge formulas formulas form hold state 
tasks handle arbitrary formulas induction structure formula 
checking knowledge formula holds involves quantification possible worlds complexity model checking depends typically polynomial product quantities complexity assertion checking size kripke structure size formula 
ability model checking efficiently depends crucially ability assertion checking efficiently ability deal large structures 
propositional languages assertion checking quite easy done linear time 
adding modalities knowledge significantly complicate things 
finite kripke structure define jjm jj sum number states number pairs jjm jj measure size kripke structure length viewed string symbols 
proposition 
algorithm checks propositional formula satisfied structure algorithm runs time jjm jj theta 
proof subformulas listed order length ties broken arbitrarily 
subformula easy check subformulas 
easy induction shows label state depending true time jjm jj 
nontrivial case form label state iff state labeled assuming inductively state labeled step clearly carried time jjm jj desired 
things get complicated move order languages 
assertion checking may difficult 
consider structures infinite domains clear represent assertion checking 
works kanellakis kabanza address special cases assertion checking infinite structures 
restrict attention structures finite domains assertion checking may difficult due size domain 
general check truth formula may check truth domain element assertion checking easy cope multitude possible worlds 
example context incomplete knowledge bases number possible worlds exponential size knowledge base query evaluation intractable vardi 
note fact number possible worlds quite large automatically mean hard check knowledge formulas 
results dwork moses moses tuttle demonstrate knowledge formulas interest evaluated efficiently certain contexts despite exponential number possible worlds 
deal situations number possible worlds number domain elements large handle 
number approaches pursue 
thing hope able find restricted interesting subclasses formulas model checking efficiently certain restricted interesting subclasses structures just techniques doing inference efficiently certain subclasses formulas horn clauses 
formulas essentially correspond horn clauses see brachman caveats checked efficiently hierarchies 
second approach consider heuristics defaults 
difficulty model checking arises large structures large domains need heuristics handling situations 
fact heuristics time daily life 
example possibilities possible worlds focus attention ones deem relevant metric probability distribution ignoring rest 
consider situation alice asked knows case 
answer question alice check worlds considers possible see holds 
may worlds alice considers possible means lot checking 
alice probability space worlds may subset worlds size probability 
alice check worlds holds taken sufficient evidence alice say holds 
explicit probability alice notion worlds relevant 
similarly large domain want check truth formula heuristics defaults cut search space checking potentially abnormal domain elements 
approach notion features relevant problem identify worlds agree irrelevant features cutting search space 
able depends able identify relevant notions able check relevant features rapidly 
going back previous example suppose propositional formula primitive propositions 
easy see true false 
truth values propositions clearly irrelevant truth 
depending alice possible worlds represented may alice check alice consider world possible false checking possible worlds 
formalisms expressing reasoning irrelevance developed probabilistic example pearl verma non probabilistic subramanian genesereth area remains done 
approaches show depends precisely worlds generated represented 
finding appropriate representations course major open problem 
great deal effort theorem proving expended finding heuristics formulas arise practice 
analogously model checking useful find heuristics structures arise practice 
model checking regard infancy early results appear quite promising burch 
example verifying circuits dealing arbitrary kripke structures 
regularity structure suggests heuristics structures states burch 
course techniques need developed allow heuristics defaults principled way 
viewed spirit etherington levesque 
idea cut number possibilities filling hopefully inessential details 
possible worlds framework probability bacchus fagin halpern halpern nilsson may provide insights probabilistic heuristics principled way cut search space 
notice defaults way led naturally nonmonotonicity 
logic nonmonotonic model checking tonic 
withdraw formula true structure get information leads believe default assumptions simplify model checking problem correct 

modeling resource bounded agents known standard possible world model knowledge suffers logical omniscience problem agents know tautologies know logical consequences knowledge inference rule infer axiom 
logical omniscience problem viewed major shortcoming possible world framework 
various attempts overcome see example fagin halpern levesque 
logical omniscience problem somewhat transformed viewed model checking perspective 
mentioned earlier longer unreasonable agent knows tautologies agent typically know formulas knows true fact tautologies 
observed earlier model checking intractable 
case definition agent know formula able compute knows formula 
viewed logical omniscience problem model checking framework 
source problem definition knowledge truth possible worlds 
definition take account computational effort needed evaluate truth possible worlds 
formal way capturing knowledge resource bounded agent model checking framework 
moses moses presents logic resource bounded knowledge tries sense notions agent compute polynomial time 
approach spirit model theoretic approach advocated means able compute polynomial time proved appropriate axiom system polynomial time truth particular state structure computed polynomial time 
informally discuss details moses logic relate framework reader encouraged consult moses related approach logical omniscience problem theorem proving viewpoint proposed konolige konolige approach agent initial information 
knows deduce initial information particular axiom system bounded number steps 
details motivation 
moses uses distributed systems model discussed previous section system identified set runs 
mentioned definition means hold point run take account complexity theoretic considerations 
want define notion intuitively amounts agent knows compute knowledge polynomial time 
notice depends agent local state point 
say agent knows compute polynomial time take mean matter state compute 
capture intuition require exist algorithm gets local state input computes polynomial time implied local state 
notice slight subtlety said run polynomial time said time polynomial 
sidestep issue simply assuming local state parameter computation polynomial parameter 
example parameter number agents system particular shared input appropriate cryptographic applications see halpern time corresponds roughly number pieces information agent received far computation polynomial amount information held agent 
summarize interpreted system point system say 

exists algorithm takes input local state agent returns depending holds resp 
points local state runs time polynomial parameter associated logic resource bounded reasoning provides elegant framework analyzing resource bounded notions knowledge 
shown useful analyzing polynomialtime knowledge viewed special case explicit knowledge logic general awareness fagin halpern logic general awareness operators represent respectively agent implicitly knows explicitly knows aware 
agent explicitly knows exactly implicitly knows aware equivalence holds 
logic resource bounded reasoning polynomial time knowledge plays role explicit knowledge usual notion knowledge plays role implicit knowledge able compute polynomial time plays role awareness 
distributed protocols moses extended number ways halpern deal cryptographic protocols 
extensions suggest modifications logic applicable ai 
discuss 
note holds polynomial time algorithm allow agent compute knows state structure 
agent may know algorithm realistically having access polynomial time algorithms agent may algorithms try knows 
easy modify logic handle situation 
set algorithms 
define just second clause require polynomial time 
course take consist polynomial time algorithms recover definition 
alice tries exactly algorithms true consist algorithms alice hold point exactly alice knows compute fact algorithms 
imagine different agents access different algorithms agent expertise access better algorithms 
way model situation agent knows 
framework extended capture learning 
way agent learn learns new algorithms 
having class algorithms fixed imagine function state may change time 
formally expand notion kripke structure include function associates state agent set algorithms agent disposal state define agent explicitly knows true state holds state agent knows compute algorithms 
omit formal details straightforward 
practice may strong requirement alice know 
example may alice know high probability algorithms occasional mistakes long frequent 
hard modify definitions get probabilistic notions computable knowledge issues discussed detail halpern 
probabilistic notions error allowed may give principled way deal problem having states model efficient model checking 
issue deserves exploration 

discussion argued model theoretic proof theoretic approach reasoning knowledge 
mean suggest model theoretic approach panacea 
difficulties overcome involving find model model checking large structures just difficulties theorem proving approach 
hope model theoretic perspective suggest new heuristics new approaches 
feel approaches currently tried including preferred models approach nonmonotonic reasoning idea knowledge bases best understood context model checking framework 
perspective may allow unify number current lines research 
question remains particular application model theoretic proof theoretic approach 
level argued non question sufficiently high level approaches converge sufficiently rich logic certainly characterize model inside logic proof theoretic approach prevents doing theorem proving model checking 
similarly suggested previous sections model checking approach capture theorem proving simply look class models consistent axioms 
assuming logic complete axiomatization fact true provable 
convergence obscures fact approaches different philosophies domains applicability 
theorem proving approach appropriate know models look best way describe means axioms 
contrast model checking approach appropriate know models look describe precisely muddy children puzzle 
argue model checking approach major advantage theorem proving approach immediately obvious way described 
theorem proving approach implicitly assumes language describing situation system model language describing properties system interested 
example situation calculus purposes mccarthy introduced version mccarthy appeared 
may need powerful languages describing situation typically far powerful needed describing properties want prove system evident muddy children wise men puzzles 
model checking approach allows effectively decouple description model description properties want prove model 
decoupling useful cases circumscription issue 
consider case programming languages 
view program describing system 
particular set runs corresponding program 
may want prove properties program termination invariants 
awkward require properties program expressed language model program essentially required theorem proving approach 
examples suggest model checking approach probably useful techniques constructing complicated models simpler models various constructors 
techniques major focus study programming languages years 
typical example ccs milner colleagues milner 
discipline complicated systems need analyzed techniques constructing models complicated system simpler components 
emphasis model checking approach lead lines 
hope better understanding models coming able devise better techniques doing model checking 
summary expect model checking approach supplant theorem proving approach 
hope techniques inspire advances 
case hope manifesto inspires research model checking techniques ai perspective 
acknowledgments ideas 
brief paragraph discussing issues appeared halpern 
discussions hector levesque yoram moses helped formulate issues 
ron fagin adam grove david israel steve kaufmann gerhard lakemeyer hector levesque useful comments earlier draft 
aiello aiello nardi schaerf 
solution puzzle 
proc 
rd int 
symp 
methodologies intelligent systems pages 
aiello aiello nardi schaerf 
reasoning knowledge ignorance 
proc 
int 
conf 
fifth generation systems pages 
attardi simi attardi simi 
reasoning viewpoints 
proc 
ecai pages 
bacchus bacchus 
representing reasoning probabilistic knowledge 
mit press cambridge mass 
barwise barwise 
scenes situations 
journal philosophy 
brachman brachman 
trees defaults definitions knowledge representation 
ai magazine 
burch burch clarke dill hwang mcmillan 
symbolic model checking states 
information computation 
chandy misra chandy misra 
processes learn 
distributed computing 
clarke grumberg clarke grumberg 
research automatic verification finite state concurrent systems 
traub grosz lampson nilsson editors annual review computer science vol 
pages 
annual reviews palo alto calif 
clarke clarke emerson sistla 
automatic verification finite state concurrent systems temporal logic specifications 
acm trans 
programming languages systems 
early version appeared proc 
th acm symposium principles programming languages 
clarke clarke grumberg browne 
reasoning networks finite state processes 
proc 
th acm symp 
principles distributed computing pages 
dwork moses dwork moses 
knowledge common knowledge byzantine environment crash failures 
information computation 
emerson clarke emerson clarke 
branching time temporal logic synthesize synchronization skeletons 
science computer programming 
emerson halpern emerson halpern 
decision procedures expressiveness temporal logic branching time 
journal computer system sciences 
emerson emerson sadler srinivasan 
efficient temporal reasoning 
proc 
th acm symp 
principles programming languages pages 
etherington etherington borgida brachman kautz 
vivid knowledge tractable reasoning preliminary report 
proc 
eleventh international joint conference artificial intelligence ijcai pages 
fagin halpern fagin halpern 
belief awareness limited reasoning 
artificial intelligence 
fagin halpern fagin halpern 
uncertainty belief probability 
computational intelligence 
fagin fagin ullman vardi 
semantics updates databases 
proc 
nd acm symp 
principles database systems pages 
fagin fagin halpern vardi 
model theoretic analysis knowledge 
journal acm 
preliminary version appeared proc 
th ieee symposium foundations computer science 
fagin fagin halpern vardi 
machines know 
properties knowledge distributed systems 
journal acm 
fagin fagin halpern moses vardi 
reasoning knowledge 
mit press cambridge mass 
fikes nilsson fikes nilsson 
strips new approach application theorem proving problem solving 
artificial intelligence 
gardenfors 
knowledge flux 
mit press cambridge mass 
halpern fagin halpern fagin 
modelling knowledge action distributed systems 
distributed computing 
preliminary version appeared proc 
th acm symposium principles distributed computing title formal model knowledge action communication distributed systems preliminary report 
halpern moses halpern moses 
theory knowledge ignorance 
proc 
aaai workshop non monotonic logic pages 
reprinted apt ed logics models concurrent systems springer verlag berlin new york pp 

halpern moses halpern moses 
knowledge common knowledge distributed environment 
journal acm 
preliminary version appeared proc 
rd acm symposium principles distributed computing 
halpern zuck halpern zuck 
little knowledge goes long way knowledge derivations correctness proofs family protocols 
journal acm 
halpern halpern moses tuttle 
knowledge analysis zero knowledge 
proc 
th acm symp 
theory computing pages 
halpern halpern 
reasoning knowledge analyze distributed systems 
traub grosz lampson nilsson editors annual review computer science vol 
pages 
annual reviews palo alto calif 
halpern halpern 
analysis order logics probability 
artificial intelligence 
hamilton delgrande hamilton delgrande 
investigation modal structures alternative semantic basis epistemic logics 
computational intelligence 
hintikka hintikka 
impossible possible worlds 
journal philosophical logic 

improved protocol reachability analysis technique 
software practice experience 
kabanza kabanza 
wolper 
handling infinite temporal data 
proc 
th acm symp 
principles database systems pages 
kanellakis kanellakis kuper revesz 
constraint query languages 
proc 
th acm symp 
principles database systems pages 
kaufmann kaufmann 
formal theory spatial reasoning 
allen fikes sandewall editors principles knowledge representation reasoning proc 
second international conference kr pages 
morgan kaufmann san francisco calif 
konolige konolige 
circumscriptive ignorance 
proc 
national conference artificial intelligence aaai pages 
konolige konolige 
deduction model belief 
morgan kaufmann san francisco calif 
kuo kuo 
formal natural deduction system knowledge 
manuscript computer science dept stanford university 
ph 

subjective logic knowledge 
manuscript 
levesque levesque 
interaction incomplete knowledge bases formal treatment 
proc 
seventh international joint conference artificial intelligence ijcai pages 
levesque levesque 
foundations functional approach knowledge representation 
artificial intelligence 
levesque levesque 
logic implicit explicit belief 
proc 
national conference artificial intelligence aaai pages 
levesque levesque 
making believers computers 
artificial intelligence 
levesque levesque 
know study autoepistemic logic 
artificial intelligence 
lichtenstein pnueli lichtenstein pnueli 
checking finitestate concurrent programs satisfy linear specifications 
proc 
th acm symp 
principles programming languages pages 
manna pnueli manna pnueli 
verification temporal programs temporal framework 
boyer moore editors correctness problem computer science 
academic press new york 
mccarthy mccarthy sato hayashi 
model theory knowledge 
technical report stan cs stanford university 
mccarthy mccarthy 
programs common sense 
minsky editor semantic information processing pages 
mit press cambridge mass 
part article reprint article title proc 
conf 
mechanization thought processes national physical laboratory england vol 
pp 

mccarthy mccarthy 
formalization puzzles involving knowledge 
manuscript computer science dept stanford university 
milner milner 
calculus communicating systems 
lecture notes computer science vol 

springer verlag berlin new york 
morris morris 
representing actions assumption truth maintenance system 
proceedings fifth national conference artificial intelligence aaai pages 
moses tuttle moses tuttle 
programming simultaneous actions common knowledge 
algorithmica 
moses moses 
resource bounded knowledge 
vardi editor proc 
second conference theoretical aspects reasoning knowledge pages 
morgan kaufmann san francisco calif 
abdallah abdallah 
algebraic approach model theory knowledge 
theoretical computer science 
nilsson nilsson 
probabilistic logic 
artificial intelligence 
parikh ramanujam parikh ramanujam 
distributed processing logic knowledge 
parikh editor proc 
workshop logics programs pages 
parikh parikh 
monotonic nonmonotonic logics knowledge 
fundamenta informaticae 
pearl verma pearl verma 
logic representing dependencies directed graphs 
proceedings sixth national conference artificial intelligence aaai pages 
sifakis sifakis 
specification verification concurrent systems cesar 
proc 
th int symp 
programming lecture notes computer science vol 
pages 
springer verlag berlin new york 
reiter reiter 
logical reconstruction relational database theory 
brodie mylopoulos schmidt editors conceptual modelling pages 
springer verlag berlin new york 
rosenschein kaelbling rosenschein kaelbling 
synthesis digital machines provable epistemic properties 
halpern editor theoretical aspects reasoning knowledge proc 
conference pages 
morgan kaufmann san francisco calif 
rosenschein rosenschein 
formal theories ai knowledge robotics 
new generation computing 
shoham shoham 
semantical approach nonmonotonic logics 
proc 
nd ieee symp 
logic computer science pages 
reprinted ginsberg ed readings nonmonotonic reasoning morgan kaufman san francisco calif pp 

sistla clarke sistla clarke 
complexity propositional linear temporal logics 
journal acm 
sistla german sistla german 
reasoning processes 
proc 
nd ieee symp 
logic computer science pages 
stark stark 
logic knowledge 
zeitschrift fur mathematische logik und grundlagen der mathematik 
subramanian genesereth subramanian genesereth 
relevance irrelevance 
proc 
tenth international joint conference artificial intelligence ijcai pages 
vardi wolper vardi wolper 
automata theoretic approach automatic program verification 
proc 
st ieee symp 
logic computer science pages 
vardi vardi 
complexity relational query languages 
proc 
th acm symp 
theory computing pages 
vardi vardi 
model theoretic analysis monotonic knowledge 
proc 
ninth international joint conference artificial intelligence ijcai pages 
vardi vardi 
querying logical databases 
journal computer system sciences 

