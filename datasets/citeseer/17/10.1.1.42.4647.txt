interpolatory subdivision open quadrilateral nets arbitrary topology kobbelt department computer sciences university wisconsin madison west dayton street madison wi kobbelt cs wisc edu december simple interpolatory subdivision scheme quadrilateral nets arbitrary topology generates surfaces limit 
scheme satisfies important requirements practical applications computer graphics engineering 
requirements include necessity generate smooth surfaces local creases cusps 
scheme applied open nets case generates boundary curves allow join subdivision patches 
due local support scheme adaptive refinement strategies applied 
simple device preserve consistency adaptively refined nets 
keywords curve surface modeling interpolatory subdivision adaptive mesh refinement problem address generation smooth interpolating surfaces arbitrary topological type context practical applications 
applications range design free form surfaces scattered data interpolation high quality rendering mesh generation finite element analysis 
standard set problem usually form equivalent net representing input mapped refined net required sufficiently close approximation smooth surface 
notation sets contain data points ir input output respectively 
sets represent topological information nets 
elements finite sequences points ae ae enumerates corners necessarily planar face net 
elements length called quadrilateral net achieve interpolation data ae required 
due geometric background problem assume feasible point exists plane projection faces meeting injective 
net closed edge part exactly faces 
open nets boundary edges occur belong face 
major schools computing classic way doing explicitely find collection local piecewise polynomial parametrizations patches corresponding faces patches smoothly join common boundaries form smooth patch complex 
net obtained sampling patch sufficiently fine grid 
important step approach find smoothly joining patches represent surface arbitrary topology 
lot done field pet loo pet way generate define refinement operator directly maps nets nets constructing explicit parametrization surface 
operator performs topological refinement net splitting faces geometric refinement determining position new points order reduce angles adjacent faces smoothing 
iteratively applying produces sequence nets certain properties sequence converges smooth limiting surface set sufficiently large algorithms kind proposed cc ds loo dll scheme stationary refinement scheme dyn cdm 
rules compute positions new points simple affine combinations points unrefined net 
derived modification known point scheme 
scheme refines 
gamma gamma 
gamma sufficient ensure convergence smooth limiting curve dl 
standard value scheme cubic precision 
order minimize number special cases restrict refinement quadrilateral nets 
faces split shown fig 
complete definition operator need rules new points corresponding edges faces unrefined net 
generalize algorithm interpolating arbitrary nets precomputing step needed cf 
sect 

refinement operator splits quadrilateral face 
new vertices associated edges faces unrefined net 
new vertices valency 
major advantages scheme offers interpolation property works quadrilateral nets 
appropriate engineering applications compared non interpolatory schemes triangular nets finite element analysis sch 
scheme provides maximum flexibility applied open nets arbitrary topology 
produces smooth surfaces yields possibility generate local creases cusps 
support scheme local adaptive refinement strategies applied 
technique keep adaptively refined nets consistent cf 
sect 
shortly describe appropriate data structure implementation algorithm 
precomputing conversion quadrilateral nets fairly simple task convert arbitrary net quadrilateral net straightforward solution apply single catmull clark type split cc face cf 
fig 

split operation divides sided face quadrilaterals needs position newly computed face points defined 
vertices remain unchanged 
number faces modified net equals sum lengths sequences number faces net reduced half net closed applying topological square root refinement operator double application equivalent application cf 
fig 

split new face points computed 
open nets split modifies boundary polygon non intuitive way 
handle special cases boundary triangles interested behaved boundary curve resulting surface 
transformation arbitrary net quadrilateral net catmull clark split middle square root right closed nets 
subdivision rules closed nets arbitrary topology topological structure quadrilateral net applications uniform refinement operator consists large regular regions isolated singularities correspond non regular vertices initial net cf 
fig 

topological regularity mean tensor product structure faces meeting vertex 
natural way define refinement operators quadrilateral nets modify tensor product scheme special rules vicinity non regular vertices 
interpolatory point scheme tensor product version basis modification 
isolated singularities refined net 
consider portion regular quadrilateral net vertices vertices indexed locally face represented sequence fp points refined net classified disjunct groups 
vertex points fixed due interpolation requirement 
edge points computed applying point rule corresponding grid direction gamma gamma face points computed applying point rule consecutive edge points gamma gamma resulting weight coefficient masks rules shown fig 

differentiability limiting curves generated point scheme smoothness limiting surfaces generated infinitely refining regular quadrilateral net follows immediately 
simple tensor product argument 
face point edge point subdivision masks regular regions ff gamma fi 
oe ff ff fi fi refinement irregular quadrilateral nets nets include vertices faces meet consistent indexing allows application rules impossible 
edges meet vertex clear choose points apply rule computing edge points 
edge points known exactly possibilities choose consecutive edge points computing certain face point net quadrilateral 
important property tensor product schemes regular nets possibilities lead result commuting refinement operators 
order modify tensor product scheme little possible generalizing applicable nets arbitrary topology want conserve property 
propose subdivision scheme needs additional rule computing edge points corresponding edges adjacent non regular vertex 
edge points face points computed application original point scheme additional rule possibilities face points yield result 
notation fig 
points neighborhood singular vertex index taken modulo number edges meeting applying original point rule possible leaves points undefined 
require possible ways compute applying standard point rule edge points lead result get dependence relating gamma gamma gamma gamma gamma gamma considered compatibility condition 
regular case condition satisfied tensor product rule 
compatibility uniquely defines cyclic differences gamma sum zero telescoping sums 
exists solution degree freedom left definition notation vertices singular vertex points computed rotated versions subdivision mask 
vicinity symmetric refinement proceeds 
distance center gravity measure roughness net near rate distance tends zero understood smoothing rate 
center gravity regular case gamma gamma gamma gamma non regular case gamma gamma gamma gamma gamma combining common terms telescoping sum equating right hand sides formulas leads gamma gamma define virtual point gamma gamma gamma gamma gamma gamma gamma computed applying points formula holds case virtual point defined edge endpoints 
refine edge connects singular vertices compute virtual points apply edge points known refinement operation completed computing face points defined edge point rule constructed possible ways lead result 
convergence analysis subdivision scheme proposed section stationary scheme convergence criteria bs rei applied 
regular regions net enlarge refinement smoothness limiting surface immediately follows smoothness curves generated univariate point scheme 
complete convergence analysis sufficient look finitely isolated singular vertices cf 
fig 

points fixed neighborhood singular vertex size considered neighborhood depends support underlying tensor product scheme contains rings faces case 
collection rules compute new points scaled layer neighborhood refined net represented block circulant matrix matrix called refinement matrix bs rei convergence analysis reduced analysis limiting surface unique tangent plane sufficient leading eigenvalues satisfy table shows theses eigenvalues refinement matrix vertices adjacent edges standard case 
computation spectrum done exploiting block circulant structure omit details dimension theta 
addition uniquely defined tangent plane local injectivity order guarantee regularity surface 
checked looking natural parametrization surface spanned eigenvectors corresponding subdominant eigenvalues injectivity parametrization sufficient condition 
details rei 
fig 
shows meshes characteristic maps behaved 
table leading eigenvalues subdivision matrix sketch characteristic maps neighborhood singular vertices 
boundary curves subdivision scheme supposed practical modeling reconstruction applications provide features allow definition creases cusps hop 
requirements satisfied scheme includes special rules refinement open nets yield behaved boundary curves interpolate boundary polygons net 
having scheme creases modeled joining separate subdivision surfaces common boundary curve cusps result topological hole initial net geometrically shrinks single point cf 
fig 

allow join subdivision patches initially nets common boundary polygon necessary limiting boundary curves depend common points depend interior point 
scheme achieve simply applying original univariate rule boundary polygons 
boundary curve limiting surface exactly point curve defined initial boundary polygon 
necessary generate smooth boundary curves allow piecewise smooth boundary curves cases subdivision patches meet common point 
case cut boundary polygon segments marking vertices boundary corner vertices segment corner vertices treated separately open polygon 
dealing open polygons possible refine edge original point scheme rule requires defined neighborhood 
find rule point subdivides edge define extrapolated point gamma gamma point results application gamma obviously additional modeling sharp features piecewise smooth boundary crease cusp rule expressed stationary linear combination points non extrapolated open polygon gamma gamma rule compute point gamma subdividing edge gamma defined analogously 
modification original scheme affect convergence continuously differentiable limit estimates contraction rate maximum second forward difference convergence proof remain valid 
obvious extrapolation adds zero component gamma sequence second order forward differences 
main convergence criterion applies 
remains define refinement rules inner edges net endpoint boundary faces including boundary vertex 
obtain rules heuristic univariate case 
extrapolate unrefined net boundary edge get additional layer faces 
computing face points refining original net rules sect 
additional points 
complete refinement step extrapolated faces deleted 
inner points net connected boundary point extrapolated point gamma boundary point belongs face fp vg connected inner vertex define gamma boundary edge pq add extrapolated face fp tangent plane continuity resulting limiting surface proved sufficient criteria bs rei 
obvious fixed number interior edges adjacent boundary vertex refinement extrapolated net rewritten set stationary refinement rules define new points vicinity linear combinations points non extrapolated net 
refinement matrix longer block circulant 
surface point lying boundary tangent plane continuous surface tangent direction determined tangent boundary curve case point curve depend inner vertices 
boundaries drop requirement rei leading eigenvalues refinement matrix equal 
symmetry consequence assumption rules compute new points singular vertex identical modulo rotations block circulant refinement matrix 
causes increasing local distortion net smoothness limiting surface affected 
effect viewed direction 
compare distortion regular net refined binary subdivision direction 
summarize different special cases occur refining open net rules 
fig 
net refined consists solid white faces extrapolated faces drawn transparently 
dark vertex marked corner vertex 
distinguish different cases boundary segments apply succeeding boundary vertices 
edge open boundary segment apply special rule 
inner edge points computed application 
necessary extrapolated points involved 
face point class sequence points applied 
possibilities choice points lead result guaranteed construction 
occurences different special cases 
case appropriate sequence points 
apply point points opposite side corner face 
order achieve independence grid direction case corner vertex marked apply directions compute average results 
adaptive refinement numerical applications exponentially increasing number vertices faces iterative refinement allows small number refinement steps computed 
high needed finite element analysis high quality rendering usually sufficient perform high resolution refinement regions high curvature flat regions may approximated coarsely 
order keep amount data reasonable step introduce adaptive refinement features 
decision high resolution refinement needed strongly depends underlying application discussed 
major problem deal adaptive refinement nets performed handle eliminate gamma inconsistencies occur faces different refinement levels meet 
simple trick repair resulting triangular holes split bigger face quadrilaterals fashion cf 
fig 
split repair hole 
shifts hole adjacent edge 
combining elements build chain connecting inconsistencies leads consistent net 
new vertices necessary splits computed rules sect 

fact element contains singular vertex causes problems refinement element temporary nature faces neighboring face split local refinement adaption split undone proper catmull clark type split performed proceeding 
simple technique known engineering community author aware theoretical background technique derived 
sketch simple proof shows conditions technique applies 
order apply technique restrict considered nets balanced nets 
adaptively refined nets elements refinement levels neighboring faces differ 
non balanced inconsistencies handled technique 
looking particular face th refinement level faces having vertex common levels gamma 
proof think repairing inconsistencies level gamma proceed higher levels 
loss generality restrict considerations situation relevant faces level gamma critical edge edge triangular hole occurs due different refinement levels adjacent faces 
sequence elements arranged critical edges connected surrounding endpoint critical edge corona elements critical edge reached cf 
fig 

closed nets require number critical edges 
open nets boundary hole adaptively refined net element fill 
edge chain elements 
show satisfied induction number faces th level environment gamma faces 
faces generations 
gamma affect situation assume net balanced 
combination elements adaptive catmull clark type split uniformly refined net produces critical edges 
succeeding split changes number critical edges number gamma depending number direct neighbors split 
number critical edges 
faces form ring having total number critical edges separated odd number inside odd number outside 
turns happen inner region surrounded ring faces consist quadrilaterals having total number edges candidates critical 
edge shared quadrilaterals reduces number candidates number boundary edges inner region 
situation argument valid occurs considered net open hole odd number boundary edges 
case loop faces enclosing hole odd number critical edges side 
restrict class nets apply technique open balanced nets hole odd number edges restriction serious transform net order satisfy requirement applying initial uniform refinement step adaptive refinement started 
initial step needed anyway arbitrary net transformed quadrilateral cf 
sect 

remains find algorithm place elements correctly decide critical edges connected corona 
problem trivial interference elements building islands faces lying close occur 
describe algorithm uses local information decides orientation separately face marching islands 
initially net level uniformly refined adaptive refinement begins level 
vertex adaptively refined net associated generation introduced 
faces net result catmull clark type split elements placed far property vertices belong generation fourth vertex belongs generation fact yields unique orientation face 
algorithm starts marking vertices net endpoints critical edge gamma face fp meets faces fp fq marked 
marking phase elements placed 
fp vg face net unique vertex belongs elder generation 
marked element placed face 
marked element oriented shown fig 
marked face refined proper catmull clark type split 
orientation elements depends vertices marked black white 
status vertices matter gray 
correctness algorithm obvious vertices marked phase common faces different levels 
second phase guarantees corona elements built vertex cf 
fig 

implementation examples described algorithm designed useful practical applications 
features creating creases cusps ability adaptively refine quadrilateral net efficiency compact implementation important 
achieved algorithm 
crucial point implementation design appropriate data structure supports efficient navigation neighborhood vertices 
frequently needed access operation data structure representing balanced net enumerate faces lie vertex enumerate neighbors vertex 
vertex associated linked list objects constitute vicinity 
propose implicitely storing topological information data structure face typ contains information quadrilateral face corner points directly neighboring faces 
doubly linked list vertex available 
maintain adaptively refined net need additional datatype consistently store connections faces different refinement levels 
define structure face typ holds vertices neighbors 
multi faces considered split faces geometric information new edge face points computed topological split performed 
adaptive refinement face split neighbors generation converted face typ 
faces pointers neighbors mimic faces different generations connect correctly 
face typ candidates placement elements order re establish consistency 
various different kinds faces shown fig 

relieve application program decides adaptively refine keeping track balance net implementation refinement algorithm perform recursive refinement operations necessary face refined gamma neighbors vertex common split 
pictures generated experimental implementation 
criterion adaptive refinement discrete approximation gaussian curvature 
running time algorithm directly proportional number computed points complexity output net 
number regions deep refinement necessary usually fixed reduce space time complexity exponential linear function highest occurring refinement level output 
appended colored pictures shows quadrilateral net gray corresponding adaptively refined net colored additionally gaussian curvature printed red positive blue negative 
face typ face typ face typ different kinds faces 
examples adaptively refined nets 
bs ball conditions tangent plane continuity recursively generated spline surfaces acm trans 
graph 
pp 
cc catmull clark recursively generated spline surfaces arbitrary topological meshes cad pp 
cdm micchelli stationary subdivision memoirs ams pp 
ds sabin behaviour recursive division surfaces near extraordinary points cad pp 
dub interpolation iterative scheme jour 

anal 
appl pp 
dyn gregory levin point interpolatory subdivision scheme curve design cagd pp 
dyn gregory levin butterfly subdivision scheme surface interpolation tension acm trans 
graph 
pp 
dl dyn levin interpolating subdivision schemes generation curves surfaces 
approx 
interp eds birkhauser verlag basel dyn dyn subdivision schemes computer aided geometric design adv 
num 
anal 
ii wavelets subdivisions radial functions light ed oxford univ press pp 

dll dyn levin liu interpolatory convexity preserving subdivision schemes curves surfaces cad pp 
halstead kass derose efficient fair interpolation catmull clark surfaces computer graphics pp 
hop hoppe surface reconstruction unorganized points thesis university washington kobbelt discrete fourier transform analyse interpolatory subdivision schemes submitted loo loop smooth subdivision surfaces triangles thesis university utah loo loop triangular spline surface arbitrary topological type cagd pp 
pet peters smooth mesh interpolation cubic patches cad pp 
pet peters smoothing polyhedra easy acm trans 
graph vol pp 
rei reif unified approach subdivision algorithms near extraordinary vertices cagd pp 
sch universitat karlsruhe private communication 
