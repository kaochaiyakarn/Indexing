methodology design evaluation ontologies michael gruninger mark fox department industrial engineering university toronto toronto canada gruninger msf utoronto ca april information systems play active role management operations enterprise demands systems increased 
departing traditional role simple repositories data information systems provide sophisticated support manual automated decision making answer queries explicitly represented enterprise model able answer queries implied model 
goal tove toronto virtual enterprise enterprise modelling project create generation enterprise model common sense enterprise model 
common sense mean enterprise model ability deduce answers queries require relatively shallow knowledge domain 
viewed second generation knowledge engineering approach constructing common sense enterprise model 
extracting rules experts engineering ontologies 
ontology formal description entities properties relationships constraints behaviours 
interaction industrial partners encounter problems arise particular enterprises 
approach engineering ontologies begins problems define ontology requirements form questions ontology able answer 
call competency ontology 
second step define terminology ontology objects attributes relations 
way ontology provides language express definitions terminology constraints required application 
third step specify definitions constraints terminology possible 
specifications represented order logic implemented prolog 
lastly test competency ontology proving completeness theorems respect competency questions 
initial efforts focused ontologies support reasoning industrial environments 
tasks targeted support supply chain management extends mrp manufacturing requirements planning include logistics distribution fox gruninger concurrent engineering looks issues coordination engineering design 
enterprise engineering project conducting research leading creation information system support enterprise design known business process reengineering execution 
enterprise design environment allows exploration different designs models enterprise various perspectives efficiency cost quality agility 
axioms formalizing knowledge different design perspectives supported different ontologies 
effort creating representations organisation behaviour activity state causality time gruninger pinto objects manipulate resources inventory orders products 
efforts underway formalising knowledge iso quality kim fox activity costing tham organisation fox agility 
ontology goal agree shared terminology set constraints objects ontology 
agree purpose ultimate ontologies 
provide mechanism guiding design ontologies providing framework evaluating adequacy ontologies 
framework allows precise evaluation different proposals ontology demonstrating competency proposal respect set questions arise applications 
justify existence properties objects ontology 
describes methodology enterprise integration laboratory design evaluation integrated ontologies including proposal new ontologies extension existing ontologies see 
illustrate ideas examples activity organisation ontologies 
motivating scenarios development ontologies motivated scenarios arise applications 
particular scenarios may industrial partners problems encounter enterprises 
motivating scenarios form story problems examples adequately addressed existing ontologies 
motivating scenario provides set intuitively possible solutions scenario problems 
solutions provide idea informal intended semantics objects relations included ontology 
proposal new ontology extension ontology describe motivating scenario set intended solutions problems scenario 
essential provide rationale objects ontology particularly cases different objects different proposals ontology 
providing scenario understand motivation proposed ontology terms applications 
oe oe order terminology order completeness scenario motivating informal competency questions formal competency questions logic logic axioms theorems procedure ontology design evaluation informal competency questions motivating scenario set queries arise place demands underlying ontology 
consider queries requirements form questions ontology able answer 
informal competency questions expressed formal language ontology 
specifying relationship informal competency questions motivating scenario give informal justification new extended ontology terms questions 
provides initial evaluation new extended ontology evaluation determine proposed extension required competency questions solved existing ontologies 
may happen people prior informal ontologies application 
case object attribute relation axiom proposed ontology proposed extension ontology informal competency question query intuitively requires objects constraints defined object 
ideally competency questions defined stratified manner higher level questions requiring solution lower level questions 
designed ontology competency questions form simple lookup queries questions solutions simple queries 
competency questions generate ontological commitments evaluate ontological commitments 
evaluate expressiveness ontology required represent competency questions characterize solutions 
activity ontology enterprise modelling want define actions performed enterprise define constraints plans schedules constructed satisfy goals enterprise 
leads set informal competency questions ffl temporal projection set actions occur different points properties resources activities arbitrary points time 
ffl planning scheduling sequence activities completed achieve goal 
times activities initiated terminated 
ffl execution monitoring external events effects occurrence external unexpected events machine breakdown unavailability resources plan schedule 
ffl time competition want design enterprise minimizes cycle time product 
essentially task finding minimum duration plan minimizes action occurrences maximizes concurrency activities 
organisation ontology linking structure organisation behaviour agents organisation define organisation ontology integrated activity ontology 
consider organisation set constraints activities performed agents competency questions organisation ontology extensions temporal projection plan existence problems incorporate abilities obligations agents 
temporal projection problem characterize constraints agents satisfy able perform activities plan existence characterizes set achievable goals 
propose set informal competency questions organisation ontology respect agent behaviour authority empowerment commitment goal achievement 
ffl activities particular agent position role perform 
ffl possible agent perform activity situation 
agent ability perform activity 
ffl order perform particular activity permission needed 
ffl agent allowed perform activity situation 
ffl goals agent committed achieving 
ffl authority constraints necessary set agents order achieve goal 
ffl goals unachievable agent 
goals unachievable plan contains activities agent capable performing 
goals require assistance agents achieve 
ffl goals achievable agent effects activities agents capable performing 
ffl goal unachievable agent agents required assist agent achieving goal 
specification order logic terminology informal competency questions posed proposed new extended ontology terminology ontology specified order logic equivalently kif 
recall ontology formal description objects properties objects relations objects 
provides language express definitions constraints axioms 
language provide necessary terminology restate informal competency questions 
designing new ontology informal competency question objects attributes relations proposed ontology proposed extension ontology intuitively required answer question 
step specifying terminology ontology identify objects domain discourse 
represented constants variables language 
attributes objects defined unary predicates relations objects defined ary predicates 
activity ontology terminology tove project adopted situation calculus provide semantics ontology activity state 
intuition situation calculus initial situation world changes situation actions formed 
predicate poss true action performed situation structure situations tree different sequences actions lead different situations 
branch starts initial situation understood hypothetical 
tree structure situation calculus shows possible ways events world unfold 
arbitrary sequence actions identifies branch tree situations 
impose structure situations isomorphic natural numbers introducing notion successor situation reiter 
function name situation results performing action situation define initial situation denoted constant represent complex actions predicate denotes action done situation possible situations reached 
complex action defined specifying subactions constraints occurrence subactions 
define evaluation truth value sentence situation predicate holds represent fact ground literal true situation fluent predicate function value may change situations 
formal competency questions competency questions posed informally terminology ontology defined competency questions defined formally entailment consistency problem respect axioms ontology 
forms ontology set axioms proposed ontology ground set ground literals instances order sentence predicates language ontology ffl determine ontology ground ffl determine ontology ground determine consistent ontology ground stage may axioms ontology formal competency questions place restrictions axioms included 
important understand terms statement formal competency questions included terminology ontology 
proposal new extended ontology accompanied set formal competency questions 
way evaluate ontology claim adequate 
ontologies may distinguished competency questions capable solving ontology may able represent solve different set competency questions ontology 
case relationship ontologies formally represented questions 
problems reasoning action terminology earlier define formal competency questions ontology activity 
action set axioms activity ontology 
temporal projection formally defined problem problem ground formula sigma defining set action occurrences determine action sigma ground simple formula 
problem formalizes competency question sentence characterizing fluents state guarantee plan exists achieve goal 
problem sentence free variables exist sentence phi free variables action phi specification order logic axioms axioms ontology specify definitions terms ontology constraints interpretation defined order sentences predicates ontology 
important understand significance axioms define terms constraints objects ontology 
simply proposing set objects proposing set ground terms order logic constitute ontology 
axioms provided define semantics meaning terms 
important realize implementation ontology specification ontology 
implementation ontology translatable kif 
process defining axioms difficult aspect defining ontologies 
process guided formal competency questions 
informal competency questions axioms ontology necessary sufficient express competency questions characterize solutions axioms express question solution axioms express question solutions 
solution competency question entailed consistent axioms ontology 
proposed axioms insufficient represent formal competency questions characterize solutions questions additional objects axioms added ontology sufficient 
development axioms ontology respect competency questions iterative process 
may different ways axiomatize ontology formal competency questions generating axioms 
evaluate completeness sets axioms particular axiomatization 
sense compare expressiveness different sets axioms competency questions 
competency question set axioms represent set expressive 
different axiomatizations represent competency question characterize solutions equivalent respect question comparison criteria 
applications may common core ontology shared different groups extensions specific applications 
case necessary explicitly characterize relationships core different extensions 
fact advantage specifying ontologies order logic able represent reason ontological commitments different applications 
theories action axiomatization discrete situation calculus reiter 
situation calculus sorted second order language equality 
domain sorts action types situations fluents time arbitrary domain objects 
important property represented notion causality specification holds world performing action 
part logical specification activity ontology solution frame problem reiter 
basic idea solution derive successor state axioms fluent provide necessary sufficient conditions fluent true situation state situation successor state axioms form oss oe holds fl holds fl gamma fl fl gamma simple formulae provide conditions action produces effect fluent important notion represent occurrence actions 
pinto reiter extends situation calculus selecting branch situation tree describe evolution world unfolds 
done predicate actual defined axioms actual actual oe actual oss actual actual oe represent occurrences introduce predicate occurs defined actions performed actual line occurs actual notions actual line action occurrences illustrates important concept expressiveness ontologies 
need express class constraints suppose plan exists violates constraint want allow plans violate constraint 
distinguish constraint satisfied order plan exist 
notion actual line reason hypothetical branches allow constraints violated enforce constraints actual line branches violate constraints actual 
addition axioms may necessary define sentences serve assumptions 
define special cases competency question provide solution 
example minimum duration need definitions assumptions order prove restricted completeness theorem definition action occurrence closure assumption sentence occurs sn definition fluent duration closure fdc assumption sentence occurs initiate occurs terminate gamma oe dn definition resource interaction nri assumption sentence shared completeness theorems competency questions formally stated define conditions solutions questions complete 
forms basis completeness theorems ontology 
theorems forms ontology set axioms ontology ground set ground literals instances order sentence specifying query competency question phi set firstorder sentences defining set conditions solutions problem complete ffl ontology ground phi ontology ground ffl ontology ground phi ontology ground consistent 
ffl ontology ground phi ontology ground phi ffl models ontology ground agree extension predicate completeness theorems provide means determining ontology making explicit role axiom plays proving theorem 
extension ontology able preserve completeness theorems 
theorems reasoning action section examples completeness theorems activity ontology 
include give idea format theorems details refer readers cited papers 
example completeness theorem temporal projection gruninger pinto 
set ordering constraints subactions circ refers circumscription theory 
second example completeness theorem minimum duration special case resource constraints 
mda set sentences formalize notion critical path set activities 
theorem models circ action sigma start agree extension predicate holds 
theorem sigma occ set ground occurs literals 
suppose sigma occ action fdc model sigma occ action minimum duration model sigma occ action iff model sigma occ action mda 
described methodology guiding design ontologies providing framework evaluating adequacy ontologies 
framework allows precise evaluation different proposals ontology demonstrating competency proposal respect set competency questions arise applications 
justify existence properties objects ontology 
able prove completeness theorems ontologies respect formal competency questions 
fox gruninger 
resource ontology enterprise modelling 
third workshop enabling technologies infrastructures collaborative enterprises west virginia university 
fox gruninger 
organisation ontology enterprise modelling preliminary concepts linking structure behaviour fourth workshop enabling technologies infrastructures collaborative enterprises west virginia university 
fox gruninger 

ontologies enterprise integration proceedings second international conference cooperative information systems pages 
gruninger pinto 
theory complex actions enterprise modelling aaai spring symposium extending theories action stanford march 
kim fox 
ontology quality enterprise modelling fourth workshop enabling technologies infrastructures collaborative enterprises west virginia university 
pinto reiter 
temporal reasoning logic programming case situation calculus 
proceedings tenth international conference logic programming 
reiter 

frame problem situation calculus simple solution completeness result goal regression 
vladimir lifschitz editor artificial intelligence mathematical theory computation papers honor john mccarthy pages 
academic press san diego 
tham fox gruninger 
cost ontology enterprise modelling 
third workshop enabling technologies infrastructures collaborative enterprises west virginia university 
