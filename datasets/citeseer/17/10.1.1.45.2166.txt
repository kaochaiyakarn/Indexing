completion equational theorem proving taxonomic constraints jorg department computer science university kaiserslautern postfach kaiserslautern mail informatik uni kl de approach prove theorems slightly different axiom systems simultaneously 
represent different problems taxonomy tree node inherits knowledge predecessors solve problems inference steps rules equations simple constraints words identifying nodes taxonomy 
demonstrate substantial gain achieved taxonomic constraints avoiding repetition inference steps different problems achieving run times shorter accumulated run times proving problem separately 
problem interested equational theorem proving taxonomic constraints theorem proving approaches generation facts set equations goal want prove methods knuth bendix completion see kb turned highly efficient problem 
sophisticated heuristics developed search goal directed search space see df 
distributed theorem provers designed implemented see ad adf enhance power provers 
focus problem prove theorems slightly different axiom systems simultaneously 
clearly unrelated theorems proved separately 
situations axiom systems large parts common 
situation occurs example wants prove conditional consequences mathematical structure 
may want repeat inference steps different proofs 
propose organize axiom systems taxonomy tree node set facts associated initially axioms inherited successors node set theorems prove 
taxonomies play important role kl knowledge representation formalisms see bs 
inference rules system ax reflect structure taxonomy initially associating axiom taxonomic constraint describing path root node contains axiom 
similar way taxonomic constraints added theorems prove 
inferences axioms theorems allowed nodes common path 
tested easily determining corresponding constraints prefix 
result inference step stored deeper nodes involved 
concept constraint quite different common concept constraints deduction processes see bu kkr stem logic programming see example sm 
normally constraints added derived fact describe validity words constraint assigned fact clause equation formula logical formula 
oe valid substitutions oe satisfy context problem arises handle constraints especially solve 
problems appear context 
show examples approach allows simultaneously solve sets problems inference steps 
constraint handling extremely simple results directly faster proofs 
report organized follows provide necessary definitions formulate method section 
section inference system unfailing completion taxonomic constraints deal completeness system provide control algorithms system useful 
section experiments method 
section discuss situations completion taxonomic constraints useful section give utter remarks 
basic definitions equational theorem proving deals solving problem input set equations fixed signature sig goal equation sig question hold model deal modification problem input fe kg sets equations fixed signature sig goal equations sig question hold model take closer look problem 
th denote set equations sig hold model birkhoff theorem th iff transformed replacing equals equals 
provers rewriting completion techniques developed knuth bendix kb improved unfailing completion hr bdp proven quite successful solving problem 
assume reader familiar rewriting completion techniques 
overview am dj 
signature sig consists set sorts set operators function fixes input output sorts operators 
denote set terms set variables 
denote subterm position replacement denote set ground terms set new constants 
reduction ordering founded ordering compatible substitutions term structure implies oe oe 
total called ground reduction ordering 
rule oriented equation written ar ar 
set rules compatible set equations re foe oe oe substitution oe oe set orientable instances equations 
denote 
re oe oe called reducible write term reducible element normal form 
equations non variable subterm unifiable say general unifier oe mgu 
oe oe oe th 
oe oe oe oe oe oe oe oe critical pair base inference system unfailing completion taxonomic constraints inference system ad slight improvement system bdp need ordering terms ordering 
strict part quasi ordering defined iff oe substitution oe position general proof procedure equational theorem proving unfailing completion works follows input set ground equation skolemized goal ground reduction ordering 
procedure uses sets cp 
input equations put cp 
loop repeated normal forms terms subsumed equation set cp empty select equation cp 
normal forms respect 
subsumed equation critical pairs added cp resp 
normal forms 
comparable respect appropriate rule added added elements reduced new rule equation removed normal forms added cp 
order solve second problem taxonomic constraints 
define taxonomy definition taxonomy tree node consists set en equations set rn rules set gn goal equations fixed signature sig called taxonomy 
node successors successors ordered th node ordering assigned number node described path root represented word wn wn ffl root wn wm th successor node accumulated sets equations rules defined recursively 
root en rn successor node en rn equality relation node defined note purposes sufficient define taxonomy tree 
readers may find useful directed acyclic graphs case taxonomy definitions knowledge representation 
unfailing completion theorem proving taxonomic constraints section unfailing completion taxonomic constraints means inference rule system called ax see correctness completeness ax follow directly correctness completeness standard unfailing completion bdp 
thoughts fair selection strategies constraint critical pairs necessary 
provide fair selection strategy take constraints account give insight implementational aspects 
discuss obvious variations ax possible effects variations 
inference system experiences shown theoretical reasons useful calculi general completion algorithms particular form inference systems 
having prove small variation algorithm completeness defines called fairness criteria guarantee control strategy inference rules fulfills criteria produces complete algorithm 
method presenting constraint completion method 
inference system define form taxonomic constraints semantics transfer set problems taxonomy transfer taxonomy back starting sets completion inference system 
definition taxonomic constraint constraint equation rule goal taxonomy node word wn called taxonomic constraint taxonomic constraint equation rule goal equation constraint equation constraint rule vjw constraint goal 
stated want solve proof problems simultaneously means transforming taxonomy performing completion constraint rules equations goals obtained taxonomy 
goal change standard unfailing completion little possible accomplish task 
constraints rules equations goals sufficient represent taxonomy obtained identify node constraint wn result performing completion expect sets en rn gn node taxonomy change appropriate inference rule applied 
prove remains completion process node taxonomy 
standard unfailing completion works sets equations rules 
order solve problem need sets goals 
initially sets obtained taxonomy define inference system construct taxonomy proof problems ways construct taxonomy problems task done user system ax construction obtain initial taxonomy proof problems 
root node defined en rn gn fs je en partition set fe je en sets mm node successor node constructed en en rn gn fs je construction repeated gn note may partitions set mm partitions preferably small big sets en selected 
definition inference system ax taxonomy 
inference system ax works triples set constraint equations set constraint rules set constraint goals 
initial set defined fs en constraint ng fs gn constraint ng 
inference rules ax follows 
orient fs fs 
generate fs jw jw critical pair mgu oe oe 
oe oe 
oe 
simplify equation fs fu wv 
simplify right side rule fl jw fl jw 
simplify left side rule fl jw fs jw jw 
subsume equation fs jw jw fs jw oe oe 
simplify goal fs fu vv 

subsume goal fs jw fs jw fs jw oe oe 
delete goal fs 
success fs success ax deals facts associated paths taxonomy 
manipulating fact level path facts higher level representing general knowledge 
results inferences involving facts different levels belong deeper specialized level 
note differences ax general method constraint theorem proving described kkr 
discuss differences section 
theoretical aspects inference rules ax essentially rules ad necessary additional definitions proofs establish correctness completeness bdp taken 
theorem correctness ax constraint equations rules goals taxonomy result applying rules ax 
nodes holds 
proof reduce problem standard unfailing completion considering node constraint wn rules prove set may changed 
allow simplification term pairs rules constraints prefixes constraints term pairs see comment section critical pairs get longer constraint node affected term pairs inference rule uses constraints prefixes wn means term pairs correctness un constraint inference system ad guarantees holds 
important property algorithm inference rule system fair selection applications inference rules 
stated completion fair selection critical pairs required 
definition fairness bdp taken constraint critical pairs 
definition fairness derivation derived application rule ax called fair critical pair vjw vjw ji ji omit constraint usual definition fairness 
theorem completeness ax taxonomy input problems ground reduction ordering derivation fair defined 
pair ground terms normal forms respect identical 
proof bdp define proof ordering show proof elements appropriate constraints rewrite proof proof elements appropriate constraints equal smaller respect fact proof ordering bdp proof totally neglecting constraints 
restrict rules equations particular proof 
modification ax allow simplification term pairs constraint elements constraint wv ffl fewer simplifications possible constraints 
proof means bdp apply simplification inference possible respect ax match mgu critical pair generation step applied trick resulting smaller proof 
fairness guarantees eventually proof rewrite proof containing smaller 
pair ground terms reached proof rewrite proof noetherian 
practical aspects problem face guarantee derivations fair 
obvious solution fifo strategy selecting critical pairs known fifo performs badly 
intelligent strategies needed 
way extend known intelligent strategy unfailing completion deal constraints 
fortunately necessary 
selection strategy smallest component strategy hu call see ad produces fair derivations ax need considering constraints 
selects critical pair smallest term weight system computed counting function symbol variable 
term weight term critical pair added get weight pair name 
limited number term pairs lower term weight critical pair limited number term pairs weight fair selection strategy respect fairness defined bdp 
number nodes limited term pair occur limited number different constraints 
limited number term pairs constraints lower weight constraint critical pair means fair 
aspect looking selection strategy heuristic interested completeness critical pairs absence goal orientation 
criticism may directed system ax case simple unfailing completion goal oriented selection heuristics defined df 
store critical pairs list sorted selection strategy nodes seperate list selection lists organized different selection strategies 
goals solve goal oriented heuristic critical pair lists contain goal 
lists employ strategy example 
fairness concern goal orientation involved selection critical pair list critical pair chosen fair list chosen regularly 
far experiments shown need complex selection mechanisms sufficient see section 
seen theoretical point view sets interesting 
included sets goals ax inference rules mainly dealing goals goals important implementations ax empty list indicate initial problems solved run terminated absence goals part node leaves part allows choosing critical pairs constraints referring part discussion ax section discuss technical differences ax constraint completion systems example kkr 
main conceptual difference constraints ax define different contexts kind different worlds deriving systems constraints limit allowed instances fact differences observed level inference rules 
inference rule merges constraints provide function merging 
possible rule equation goal renaming variables occurs different constraints 
rule equation goal represented twice respect ax time constraint 
think designer completion algorithm ax decide wants sets constraints avoiding double representation term pairs wants allow constraint avoiding splitting constraint term pairs example result term pair reduced respect constraint reduced respect 
splitting means constraint term pair splitted term pair constraints allow reduction constraints 
duplication term pairs introduced 
avoid splitting simplification inference rules allow simplification term pair constraint prefix constraint element reduce pair 
wants allow simplifications introduce second list constraints called application inference rule possible element prefix constraint term pair inference rule 
results inference system difficult understand difficulties implementing completion procedure 
see ax definition results decrease inference steps decreasing run times respect proving problem 
necessary complicate ax 
concept solving constraints 
collect constraints restrict substitutions necessary computation regarding combination solvability 
major problems constraint completion approaches far satisfactory solved applications 
problem ax experimental results equational theorem proving taxonomic constraints intended situations slightly different sets equations goals proved 
typically situations occur wants prove validity conditional equations theory consisting unconditional equations 
experiments chosen theories lattice ordered groups equational axiomatization propositional calculus theory chosen conditional equations generated problem sets solved implementation ax compare run times numbers rules equations generated numbers critical pairs computed numbers reductions implementation constraints cumulated results obtained implementation proving conditional equation 
experiments sun sparc times seconds 
note implementation discount system see adf indexing techniques realizing lists critical pairs heaps 
lattice ordered groups theory lattice ordered groups set equations literature example kk lattice ordered groups characterized combination mathematical structures lattices groups 
seen group operator arity neutral element inverse operator lattice partial ordering binary functions greatest lower bound upper bound elements 
functions get rid partial ordering help definition iff iff axiomatization 
ways eliminating possible formulations problem indicated letter names examples 
lat und lat different formulations problem 
conditional theorems skolemized form additional axioms goal prove 
ax mono ax mono ax mono ax mono ax mono ax mono lat lat lat lat lat lpo precedence get results reported table proving example 
addition rules example equations produced 
ex 
run time rules crit 
pairs reductions ax mono ax mono ax mono ax mono ax mono ax mono lat lat lat lat lat table lattice ordered groups statistics runs example generated examples experiments taxonomic constraints 
examples included taxonomy partition level fax mono ax mono ax mono ag fax mono ax mono ax mono cg flat lat lat ag flat lat bg fp cg fp dg fp ag fp bg fp cg fp dg second level flat ag flat ag comment obvious partition proving examples 
examples included ax mono ax mono ax mono ax mono ax mono ax mono lat lat lat lat lat taxonomy partition level fax mono ax mono ax mono ag fax mono ax mono ax mono cg flat lat lat ag flat lat bg fp cg fp dg fp ag fp bg second level flat ag flat ag comment removing examples worked positive implementation 
examples included ax mono ax mono ax mono lat lat lat taxonomy partition level fax mono ax mono ax mono ag flat lat lat ag fp cg fp ag fp cg second level flat ag flat ag comment examples translation premisses 
obvious partition 
examples included ax mono ax mono ax mono lat lat taxonomy partition level fax mono ax mono ax mono cg flat lat bg fp dg fp bg fp dg second level unnecessary comment examples translation premisses 
obvious partition 
examples included lat lat taxonomy partition level flat ag flat bg second level unnecessary comment testing different proofs translations 
obviously different 
exp run times rules crit 
pairs ax ax ax ax table lattice ordered groups statistics runs taxonomic constraints propositional calculus equational axiomatization propositional calculus axiomatization inspired ta 
function represents logical implication negation true 
selected kw pages conditional equations skolemized form additional axioms goal prove 
numbers numbers kw examples appearing additional easy meaning solved second 
lpo precedence get results table proving examples taxonomic 
equations produced 
examples generated experiments 
pcexp examples included taxonomy partition level second level comment way partition examples 
aim get set level big possible 
sets consist element 
ex 
run time rules crit 
pairs reductions table propositional calculus statistics runs example pcexp examples included taxonomy partition level second level comment goal partition get sets element level partition possible 
pcexp examples included taxonomy partition level second level comment part biggest partition examples 
pcexp examples included taxonomy partition level second level comment biggest partition examples pcexp 
pcexp examples included taxonomy partition level second level unnecessary comment examples put having second level 
pcexp examples included taxonomy partition level second level comment subset pcexp 
pcexp examples included taxonomy partition level second level comment partition pcexp element sets 
pcexp examples included taxonomy partition level second level comment smaller sets partition additional examples 
exp run times rules crit 
pairs ax ax ax ax pcexp pcexp pcexp pcexp pcexp pcexp pcexp pcexp table propositional calculus statistics runs taxonomic constraints discussion results obvious important result experiments number inferences done ax substantially smaller accumulated sum runs single examples run times see table table 
shows claim taxonomic constraints easy efficient handle true 
typically ratio accumulated sum ax rules critical pairs reductions better slightly higher run time 
compare example domains number equations common examples lattice ordered groups twice number propositional calculus 
concerning experiments examples pcexp pcexp examples prove lattice ordered groups propositional calculus 
expect ratio ax statistics better lattice ordered groups propositional calculus 
doesn hold true 
reasons phenomenon usage structure domains 
additional axioms examples domains quite short 
means produce critical pairs short selected prior critical pairs elements common axioms 
domains number common axioms important 
take closer look examples domain lattice ordered groups observe additional axioms due translations 
proofs steps common number steps quite similar effects concentration directions 
illustrated examples lat lat 
solves examples seen ax needs nearly number rules critical pairs reductions accumulated sum single runs run time course 
examples domain lattice ordered groups divided groups translation 
look results ax examples group experiments ratio ax better statistics 
expectation addition examples domain require totally different proofs increase statistics ax statistics case proven experiments pcexp pcexp pcexp pcexp pcexp pcexp 
pairs experiments increase ax statistics tables 
experiments domain propositional calculus demonstrate effects different partitions examples pcexp pcexp pcexp pcexp 
general say results allow favor certain partition heuristic 
examples problem allow different partitions decide statistics run 
interesting question behaviour ax proving examples totally different equations common 
answer question combined examples domains single experiments 
results table 
experiment example domain lat 
selected longest run times group 
experiment added examples examples pcexp 
solved examples pcexp means examples proved 
experiments results sum basic experiments sum results pcexp resp 
pcexp 
exp run times rules crit 
pairs ax ax ax ax table propositional calculus lattice ordered groups combined experiments show overhead produced handling constraints 
run times experiments nearly sums 
gains provided constraints disturbed examples 
question small restriction interreduction reduction term pairs higher taxonomy rule apply causes problems 
question negated 
ratio ax number rules number critical pairs experiments comparable ratio number reductions 
reductions mentioned important performance system 
discussion experiments say ax results decrease respect number inferences run time compared proving examples 
decrease quite substantial overhead taxonomic constraints applications need prove theorems slightly different axiom systems ax dynamic taxonomies applications far taxonomies change completion 
discuss situations certain change taxonomy dynamic extension required 
called dynamic taxonomy proof task new successors nodes taxonomy may added 
course new successors inherit equations rules ancestors 
long taxonomy remains finite dynamic change influence correctness completeness results 
note form constraints guarantees necessary inheritance actions taken addition simply adding new equations goals new constraints 
especially need copy actions 
sketch situations dynamic taxonomies combination ax useful 
kurihara kondo method complete set equations respect reduction orderings 
intention method case reduce repetition inference steps result trying completion reduction ordering 
reduction orderings suggested solve problem sets equations reduction ordering may produce infinite computation results finite convergent system 
unfortunately trying know reduction ordering best 
method drawback reduction orderings completion started 
safe side example permutations precedence ordering lpo rpo function symbols may necessary due form equations 
dynamic extension missing approach 
dynamic extension achieved completion taxonomic constraints 
nodes dynamic taxonomy represent reduction orderings better rules oriented orderings ordering successor node node extension ordering situation stems completion theorem provers interactive proof environments proof assistants 
environment example ilf system da discount system solving pure equational problems 
user system interested checking consequences manipulations parts axioms proving goal 
means basis equations set equations added 
equations second set may withdrawn equations may added 
dynamic taxonomy ax change second set forces user start new run completion prover repeat inferences basis equations remaining equations second set prior experiments 
redundant frustrating user 
user able order equations second set respect possibility withdrawn ax degenerated taxonomy path additional equation second set assigned new node order 
case user wants withdraw equation add ones new node new ones new equations may withdrawn added successor father node representing withdrawn equation 
assuming careful planning experiments results prior experiments new ones improving acceptance proof assistant 
taxonomic constraints way reduce repetition inferences wants prove theorems slightly different axiom systems case equational deduction unfailing completion 
transforming examples wants prove taxonomy transforming taxonomy back sets constraint equations rules goals able develop theorem prover inference steps needed prove examples time 
sketched situations theorem prover taxonomic constraints useful 
center exploiting dynamic taxonomies development selection heuristics constraint critical pairs implementation experimental evaluation idea section goal oriented selection heuristics 
taxonomic constraints theorem provers interest 
ad distributing equational theorem proving proc 
th rta montreal lncs pp 
available sr university kaiserslautern 
adf fuchs discount system distributed equational deduction proc 
th rta kaiserslautern lncs pp 

am term rewriting equational reasoning banerji ed formal techniques artificial intelligence elsevier pp 

bdp bachmair dershowitz plaisted completion failure coll 
resolution equations algebraic structures austin academic press 
bs brachman schmolze overview kl knowledge representation system cognitive science pp 

bu resolution principle clauses constraints proc 
th cade kaiserslautern springer lnai pp 

da walther wolf integrating logical functions ilf internal report institut fur reine mathematik university berlin 
df fuchs goal oriented equational theorem proving teamwork proc 
th ki saarbrucken lnai pp 
available seki report sr university kaiserslautern 
dj dershowitz jouannaud rewriting systems van leeuwen ed handbook theoretical computer science vol 
elsevier pp 

hr hsiang rusinowitch word problems equational theories proc 
th icalp karlsruhe lncs pp 

hu huet confluent reductions properties applications term rewriting systems journal acm vol 
pp 

kb knuth bendix simple word problems universal algebra computational algebra leech pergamon press pp 

kk fully ordered groups press 
kurihara kondo completion multiple reduction orderings proc 
th rta kaiserslautern lncs pp 

kkr kirchner kirchner rusinowitch deduction symbolic constraints revue intelligence artificielle pp 

kw der logik bd 
dtv verlag 
sm smolka logic programming polymorphically order sorted types ph thesis university kaiserslautern 
