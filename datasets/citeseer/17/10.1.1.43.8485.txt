copy detection mechanisms digital documents sergey brin james davis hector garcia molina department computer science stanford university stanford ca mail sergey cs stanford edu october digital library system documents available digital form easily copied copyrights easily violated 
serious problem discourages owners valuable information sharing authorized users 
main philosophies addressing problem prevention detection 
unauthorized documents difficult impossible easier discover activity 
propose system registering documents detecting copies complete copies partial copies 
describe algorithms detection metrics required evaluating detection mechanisms covering accuracy efficiency security 
describe working prototype called cops describe implementation issues experimental results suggest proper settings copy detection parameters 
digital libraries concrete possibility today technological advances areas storage processor technology networks database systems scanning systems user interfaces 
aspects building digital library today just matter doing 
real danger digital library relatively documents interest patchwork isolated systems provide restricted access 
reason danger electronic medium easier illegally copy distribute information 
information provider gives document customer customer easily distribute large mailing list post bulletin board 
danger illegal copies new course time consuming reproduce distribute cds videotape copies line documents 
current technology strike balance protecting owners intellectual property giving access need information 
extreme open sources internet free valuable information frequently unavailable dangers unauthorized distribution 
extreme closed systems research sponsored advanced research projects agency arpa department defense 
mda national research initiatives cnri 
views contained document authors interpreted necessarily representing official policies endorsement expressed implied arpa government cnri 
just example knight ridder june ceased publishing clarinet dave barry mike columns subscribers re distributed articles large mailing lists 
ieee currently uses distribute papers cd rom 
completely stand system users look specific articles view print move data electronic form system add data 
clearly infrastructure gives users access wide variety digital libraries information sources time gives information providers economic incentives offering information 
ways believe central issue digital information library systems 
component information infrastructure addresses issue 
key idea quite simple provide copy detection service original documents registered copies detected 
service detect just exact copies documents overlap significant ways 
service see section variety ways information providers communications agents detect violations intellectual property laws 
copy detection idea simple challenging issues address involving performance storage capacity accuracy need resolved 
furthermore copy detection relevant database community central component large database registered documents 
stress copy detection complete solution means simply helpful tool 
number important tools assist safeguarding intellectual property 
example encryption authorization mechanisms needed cases 
important mechanisms charging access information 
articles discuss variety topics related intellectual property 
tools topics covered 
section briefly discuss options safeguarding intellectual property argue copy detection promising approach 
section define basic terms evaluation metrics copy detection 
section describe working prototype cops report initial experiments 
sampling technique reduce storage space registered documents speed checking time analyzed section 
security considerations discussed section 
safeguarding intellectual property ensure document seen person authorized paid see 
illustrate possibilities problems suggesting particular techniques 
technique notion secure printer 
printer sealed opened owner 
contains public key encryption device private key unique printer known printer 
printer public key name owner registered database provided trusted printer manufacturer 
owner requests document information vendor vendor ensures owner authorized paid fetches public key printer registry encrypts document public key sends result 
owner receives data send printer decrypt print document 
electronic data printer decrypt 
data resent printer create copy document reproduced way 
illegally reproduced copies previously unsolved problem scheme address 
main problem scheme restrictive 
electronic delivery system 
users browse documents buying parts document quotes 
furthermore requires special purpose hardware 
may useful conjunction schemes 
example users allowed browse low resolution copies documents documents key components missing 
user decides wants read document purchase high quality copy delivered secure printer 
scheme adapted secure computer printer 
second technique wish illustrate active document suggested 
idea information vendor send documents sends programs generate documents 
user receives programs call run local machine 
embedded data structures encrypted document runs displays document 
display sends message vendor informing run waits response 
way vendor charge time runs limit number times runs 
scheme drawbacks 
user read document favorite viewer 
vendor know architecture user machine advance generate appropriate code 
user see document vendor machine unavailable network 
scheme bullet proof user run software emulator machine record characters document displayed 
examples believe illustrate common problem document protection techniques cumbersome usually get way users 
alternative detection techniques 
assume users honest allow access documents focus detecting violate rules 
software vendors approach superior protection mechanisms get way honest users sales may decrease 
possible direction incorporate watermark document identifies origin 
example think documents images may encode watermark small number random bits image 
users unaware watermark bits information vendor originally provided document extract determine document sold originally 
document possessed different person organization violation detected 
main weakness approaches users may destroy watermark processing document 
instance passing image document noise filter lossy compression algorithm easily change bits really altering image destroy watermark 
second approach advocate text documents copy detection server 
basic idea follows author creates new registers server 
server repository copyright registration system suggested 
documents registered broken small units say sentences 
sentence hashed pointer stored large hash table 
documents compared existing documents repository check plagiarism types significant overlap 
document checked broken sentences 
sentence probe hash table see particular sentence seen 
document previously registered document share threshold number sentences violation flagged 
threshold set depending desired checks smaller looking copied paragraphs larger want check documents share large portions 
human examine documents see truly violation 
case watermarks easy user automatically subvert system undetectable copy 
example decomposition units sentences user change large number sentences document 
involves just adding blank space words assuming hashing scheme ignores spaces 
course determined user change sentences goal hard copy documents impossible 
hard rapidly distribute copies documents 
copy detection server variety ways 
example publisher legally liable publishing materials author copyright may wish check soon published document original document 
similarly bulletin board software may automatically check new postings fashion 
electronic mail gateway may check messages go checking transportation stolen goods 
program committee members may check submission overlaps author previous 
lawyers may want check documents prove illegal behavior 
copy detection computer programs focus text 
applications involve detection undesirable behavior 
example user retrieving documents information retrieval system reading electronic mail may want flag duplicate items overlap threshold 
registered documents seen copies represent messages retransmitted forwarded times different editions versions 
course potential duplicates deleted automatically user decide wants view possible duplicates 
summary think detecting copies text documents fundamental problem distributed information database systems 
issues need addressed 
instance decomposition units paragraphs sentences 
take account order units paragraphs sentences hashing sequences units 
feasible hash fraction sentences registered documents 
hash table smaller hopefully making catch major violations 
hash table relatively small cloned 
mail gateway perform checks locally having contact remote copy detection server message 
implementation issues need addressed 
example sentences extracted say latex word documents 
extract postscript documents bit maps ocr 
questions addressed rest 
start sections defining basic terms evaluation metrics options copy detection 
section describe working prototype cops report initial experiments 
sampling technique reduce storage space registered documents speed checking time analyzed section 
general concepts section define basic concepts copy detection evaluating mechanisms implement 
far know text copy detection formally studied start basics 
starting point concept document body text structural information word sentence boundaries extracted 
initial phase formatting information non textual components removed documents see section 
resulting canonical form document consists string ascii characters whitespace separating words punctuation separating sentences possibly standard method marking paragraphs 
violation occurs document document way duplicating portions text 
number violation types occur including plagiarism sentences exact replication entire document steps 
notion checking particular type violation documents captured violation test 
violation test holds document violates document particular test 
example plagiarism true document document extend notation include checking set documents true holds document violation tests interested defined require decision human 
example plagiarism particularly difficult test 
instance sentence proof follows may occur scientific papers considered plagiarism occurred documents sentence certainly 
consider test subset detects document essentially subset need consider smaller document significant contributions 
requires human evaluation 
goal copy detection system implement defined algorithmic tests termed operating tests notation violation tests approximate desired violation tests 
instance consider operating test holds sentences contained test may considered approximation subset test described 
system flags violations human check subset violations 
ordinary operational tests rest focus specific class operational tests ordinary operational tests implemented efficiently 
believe accurately approximate violation tests interest subset overlap plagiarism 
describe need define primitives specifying level detail look documents 
mentioned section documents contain structural information 
particular documents divided defined parts consistent underlying structure sections paragraphs sentences words characters 
call types divisions unit type particular instances unit types called units 
define chunk sequence consecutive units document unit type 
document may divided chunks number ways chunks overlap may different sizes need completely cover document 
example assume document letters represent sentences units 
organized chunks follows ab cd ef ab bc cd de ef fg abc cd efg method selecting chunks document divided units chunking strategy 
important note units chunks structural significance document chunking strategies structural information document 
oot uses hashing detect matching chunks implemented set procedures 
code intended convey key concepts efficient complete implementation 
section describes actual prototype system 
preprocessing operation preprocess takes input set registered documents creates hash table second procedures fly adding documents registering new documents removing un registering documents 
third function evaluate computes 
insert documents hash table procedure insert uses function ins chunks break document chunks 
function returns set tuples 
tuple represents chunk text chunk location chunk measured unit 
entry stored hash table chunk document 
procedure evaluate tests document violations 
procedure uses eval chunks function break reason different chunking function evaluation time apparent section 
assume ins chunks eval chunks identical chunks refer 
chunking procedure evaluate looks chunks hash table producing set tuples match 
ld lr 
match represents match chunk size location ld document matches hash key chunk location lr registered document match set function decide match size size number preprocess insert insert ins chunks oot dependent 
hash assume size reg 
doc 
may obtained id implementation unspecified delete ins chunks 
hash implementation unspecified evaluate eval chunks size matches empty set ld 
hash ss lookup returns lr 
matching lr 
ss matches ld lr 
return decide matches size oot dependent pseudo code oot chunks returns set matching registered documents 
set non empty violation holds 
note instance oot specified simply ins chunks eval chunks decide functions 
way differ 
particular section start considering oot chunks functions extract sentences decide function selects registered documents exceed threshold fraction oe matching chunks 
count match number tuples form 
match 
document selected count match greater 
example oe document check sentences registered documents matching sentences selected 
call decide function match ratio function 
code store ids registered documents full documents 
tuple simply name id copy detection system may store separately registered documents 
cops prototype 
useful showing user matching documents highlighting matching chunks 
measuring accuracy described earlier operational tests general intended approximating violation tests plagiarism subset 
important evaluate oot approximates test 
important evaluate security hard subvert copy detection efficiency computational resources require 
accuracy security discussed rest section efficiency addressed section 
assume random registered document chosen distribution registered documents probability particular document population registered documents 
similarly assume random test document selected distribution test documents define accuracy metrics implicitly parametrized definition test define freq 
stands probability intuitively freq measures frequently test true 
example suppose uniform fx test documents just tested uniform fy documents equally registered 
assume hold pairs documents violations 
freq holds possible choices 
operating test approximates violation test freq close converse true accept disjoint sets 
freq operating test small compared violation test approximating conservative 
large operating test liberal 
suppose operating test violation test define measures accuracy 
note applied operating tests general tests 
definition alpha metric corresponds measure false negatives alpha 
note alpha symmetric 
high alpha value indicates operating test missing violations definition beta metric analogous alpha measures false positives beta 
beta symmetric 
high beta value indicates finding violations definition error metric combination alpha beta takes account false positives false negatives defined error 
symmetric 
high error value indicates tests dissimilar 
security far assumed author test document know copy detection system works intend sabotage 
important measure oot hard malicious user break 
measure notion security terms changes need registered document identified oot copy 
definition security oot applicable operating test document sec minimum number characters inserted deleted modified produce new document false 
higher sec value secure notion evaluate compare 
example consider oot considers entire document single chunk 
sec changing single character document detectable copy 
assumes decision function doesn flag violation matches reasonable condition 
instance true matter matches statement hold 
example consider oot uses sentences chunks match ratio decision function 
sec gamma oe size size number sentences instance oe document sentences need change 
third example consider oot uses pairs overlapping sentences chunks 
instance document sentences 
considers chunks ab bc cd 
need modify half sentences roughly modification affect chunks 
sec approximately equal sec approximately half secure note security definition weak assumes adversary knows oot 
keeping certain information oot secret enhance security 
model having large class vary parameters secretly choosing oot assume adversary know oot chosen needs subvert 
model define sec number characters inserted deleted modified false examples classes oot see chunking strategy section section consider seed random number generator parameter 
notice security measures address authorization issues 
example user registers document system ensure user claims owns document 
user checks violations show matching documents just inform violations 
owner document notified checking document violates 
owner identity person submitting test document 
important administrative questions attempt address 
taxonomy units selected chunking strategy decision function affect accuracy security oot 
section consider options tradeoffs involved 
units determine documents divided chunks choose units 
key factor consider number characters unit 
larger units equal tend generate fewer matches smaller freq selective 
course compensated changing chunk selection strategy decision function 
important factor choice unit type ease detecting unit separators 
example words separated spaces punctuation easier detect paragraphs distinguished ways 
important factor unit selection violation test interest 
instance meaningful sequences sentences copied sequences words sentence fragments sentences words units 
chunks number strategies selecting chunks 
contrast consider number units involved number hash table entries required document upper bound security sec 
see table summary strategies consider 
variations covered 
table jrj refers number units discussion assume documents significant numbers repeating units 
strat summary example abcdef space units sec unit jrj jrj units abc def jrj units abc bcd cde def jrj jrj hashed breakpoints ab cdef jrj jrj table properties chunking strategies document chunked parameter strategies 
space column gives number hash table entries need units gives chunk size 
chunk equals unit 
unit sentence chunk 
yields smallest chunks 
units small chunks tend freq oot smaller 
major weakness high storage cost jrj hash table entries required document 
secure scheme sec bounded jrj 
depending decision function may necessary alter jrj characters chunk subvert oot 
chunk equals nonoverlapping units 
strategy break document sequences consecutive units sequences chunks 
uses th space strategy insecure altering document adding single unit start cause matches original 
call effect phase dependence 
effect leads high alpha errors 
chunk equals units overlapping gamma units 
take sequence consecutive units document chunks 
suffer phase dependence strategy unfortunately space cost equivalent strategy comparing oot uses strategy oot strategy see alpha alpha beta beta violation test true implies true 
strategy prone higher alpha errors lower beta errors 
strategy relatively insecure secure modifying th unit registered document sufficient fool system 
nonoverlapping units determining break points hashing units 
start hashing unit document 
hash value equal constant modulo chunk simply unit 
consider second unit 
hash value equals modulo chunk units 
consider third unit find unit modulo identifies chunk 
repeat procedure identify nonoverlapping chunks 
shown expected number units chunk strategy similar hash table requirements 
affected phase dependence similar text break points 
strategy higher alpha lower beta errors compared furthermore freq slightly significant portions duplicated text caught just key advantage strategy secure 
really family strategies secret parameter see section knowing hash function change unit test document sure get system warnings 
decision functions options choosing decision functions 
match ratio function section useful approximating subset overlap violation tests 
simple decision function matches parameter simply tests number matches test registered document certain value useful detecting violations plagiarism 
consider ordered matches tests certain number matches occurring order documents 
useful unordered matches coincidental 
prototype preliminary results built working oot prototype test ideas understand select chunks decide functions 
prototype called cops copy protection system shows major modules 
documents submitted email including dvi troff ascii formats 
new documents registered system tested existing set registered documents 
new document tested summary returned listing registered documents violates 
converter converter converter hashing sentence identification tex ascii dvi ascii troff ascii db query processing document registration modules cops implementation 
cops allows modules easily replaced permitting experimentation different strategies different ins chunks eval chunks decide functions 
explanation simplest case sentence chunking insertion evaluation match ratio decision function discuss possible improvements 
document submitted system unique document id id index table document information title author 
register document converted canonical form plain ascii text 
process occurs dependent document format 
document piped unix utility document troff formatting commands converted 
similarly dvi document formats filters handle conversion plain ascii text 
producing plain ascii ready determine hash document individual sentences 
periods exclamation points question marks sentence delimiters hash sentence numeric key 
current document unique id stored permanent hash table sentence 
wish check new document existing set registered documents similar procedure 
generate plain ascii determine sentences generate list hash keys look hash table see section 
sentences match registered document report possible violation 
conversion ascii procedure described ideal case 
practice number interesting difficulties arise 
consider challenges associated conversion ascii text 
important exact objective method reducing formatted document ascii exists 
documents formatted troff precisely value added plain text 
extra formatting represented ascii lost 
example embedded graphs ascii equivalent 
retain text items labels associated graph primary structure translatable 
equations tables difficulties 
implementation discard graphs equations tables pictures pieces information represented naturally ascii 
choose discard text formatting commands effect presentation content document 
example command sequences produce italic type change font removed ignored 
conversion process perfect 
document input format dvi impossible distinguish equations plain text 
consider sentence equal answer 
sentence translated ascii exactly shown 
equation discarded leaving sentence equal answer 
conversion plain ascii produced different sentences system unable recognize sentence match occurred 
section discuss system enhancements allows detect matching sentences despite imperfect translations 
complication dvi gives directions placing text page specify text part main body part subsidiary structures footnotes page headers bibliographies 
dvi converter attempt rearrange text simply considers text order appears page 
case handle column format 
reading characters left right top bottom corrupt sentences column format converter detects inter column gap reads left column right 
input format cops handle general postscript 
postscript programming language difficult convert layout commands plain ascii text 
postscript generators microsoft word produce relatively simple postscript text extracted 
produce postscript code require generation page bit maps 
scanned ocr optical character recognition analyze reconstruct text 
process difficult error prone 
summary approach taken cops converters reasonable job converting ascii necessarily perfect 
matching sentences translated identically system enhancements discussed attempt negate effects common translation 
matching sentences missed matches overlapping documents cops flag violations 
experimental results confirm 
sentence identification hashing difficult problems arise sentence identification hashing module 
particular correctly translated plain ascii clear extract sentences 
approximation identify sentence merely words period question mark 
sentences contain abbreviations broken multiple parts embedded periods 
extension simple model explicitly watches eliminates common abbreviations sentences broken way 
unexpected abbreviations cause difficulties 
example actual sentences am citizen large system identify set sentences 
am citizen large 
notice sentence identified twice 
system flag match actual sentences 
reduce sort error disregard sentences composed single word similar errors may occur 
example title author names head document difficult extract sentences rarely punctuation 
discuss improvements simple algorithm described 
note paragraph detection needed involve similar issues 
cops currently detect paragraphs 
units cops oot words sentences see section 
cops converts word text hash key 
result sequence hash keys interspersed markers 
chunking sequence done calling procedure combine units step unit type units number units combined chunk step number units advance chunk unit type indicates considered unit 
example calling combine word creates chunk word input sequence 
calling combine sentence creates chunk sentence 
combine word takes words chunk combine word produces overlapping word chunks 
combine sentence produce overlapping sentence chunks 
see scheme gives great flexibility experimenting different chunks functions 
noted chunks function chosen consistently documents 
flexibility just described useful experimental setting 
exploratory tests evaluate accuracy system conducted exploratory experiments set latex ascii dvi technical documents papers 
experiments intended comprehensive goal simply understand matching chunks real documents expected converters 
documents average approximately words sentences length 
approximately half documents grouped topical sets labeled tables 
documents group closely related usually multiple revisions conference journal describing 
documents separate topical groups unrelated author affiliation research group stanford 
remaining half documents topical group drawn outside stanford related document collection 
documents registered cops queried complete set 
goal see cops determine closely related documents 
terminology section considering violation test related evaluates true group 
approximated oot computes percentage matching sentences number high documents assumed related 
table shows results exploration 
reporting number violations particular match ratio yield show percentage matching sentences case 
gives information regarding closeness documents 
result column table gives matches document 
document group compute match size see section average values report row group 
fact values column simply confirms cops working properly 
numbers second column computed follows 
document group compute match size documents group average results 
refer values second column affinity values represent match self match related documents match unrelated documents affinity noise group sigma sigma table average number matching sentences 
close documents 
third column compare group groups 
refer number column noise represent undesired matches 
numbers reported bottom table averages document comparisons performed column 
report standard deviation individual tests illustrate spread values 
ideally wants affinity values high possible noise values low possible 
possible threshold value affinity noise levels distinguish related unrelated documents 
table reports related documents average matching sentences unrelated ones 
reason affinity relatively low notion related documents broad 
example journal version conference version quite different 
noise level equivalent sentences larger expected 
discrepancy caused things 
sentences partially supported nsf quite common journal articles unrelated documents contain 
sentences may exact replicas coincidence 
hash collisions may factor especially large numbers registered documents issue experiments 
note relatively large variance reported table 
particular unrelated documents order matching sentences 
process document translated ascii effect noise level 
example translation convert documents produces somewhat noise translation dvi 
caused differences inclusion 
unrelated documents cite possibly generating matching sentences 
filter include output separate bib files noise reduced 
differences noise generated ascii translation significant enhancements discussed added system 
larger noise level harder detect plagiarism small passages paragraph 
set threshold oe say size sentences oot high beta error rate unrelated documents flagged plagiarism violations set higher say size actual violations high alpha error 
important reduce noise level possible 
enhancements need decrease noise sacrificing affinity 
affinity low hard approximate related target test leading high alpha beta errors 
goal mind considered series enhancements basic cops algorithms 
results summarized table 
line represent base case additional line table represents independent enhancement 
reported values averages document groups equivalent row table 
match self match related match unrelated affinity noise simple method sigma common chunks sigma drop numbers sigma short sentences sigma short words sigma enhancements sigma table cops enhancements 
common chunks enhancement chunks occurring hash table times eliminated lookup function see 
keeps legitimate common phrases passages causing document violation 
example sentence supported nsf documents reported match 
enhancements remove indicated occurrence input stream 
drop numbers word numeric digit dropped short sentences arbitrarily defined fewer words short words defined fewer characters 
enhancements motivated discovery numbers short sentences short words involved incorrect matches 
recall problem abbreviations described section row table shows effect enhancements 
see combined enhancements quite effective reducing noise keeping affinity roughly levels 
note parameter values enhancements number occurrences chunk common worked collection probably adjusted larger collections 
study effect increasing number overlapping sentences chunk enhancements table 
solid line shows average noise function number overlapping sentences chunk 
see noise decreases dramatically number overlapping sentences grows 
beneficial decreases minimum amount plagiarism detectable 
shows effective noise curve average noise plus standard deviations 
assume noise normally distributed variable interpret effective noise curve lower bound threshold order eliminate false positives due noise 
example sentence chunks set threshold oe beta error 
described section alpha error increase combine sentences chunks 
mean instance unable detect plagiarism multiple noncontiguous sentences 
security system reduced section takes fewer changes document pass new 
effect converters final issue investigate impact different input converters 
example say latex document initially registered cops 
dvi version document produced running original latex processor submitted testing 
find dvi copy clearly matches registered latex original dvi copy number sentences chunk effect chunk size document noise average noise effective noise noise function number overlapping sentences 
similar number matches documents original 
table explores issue 
row basic cops algorithm second row version includes enhancements table 
third fifth columns included 
altered self column reports average matching sentences dvi document compared latex original 
altered related column gives average percent matching sentences dvi document compared related latex documents 
results far perfect remain matches dvi flagged related original documents original related 
match self altered self related group altered rel 
unrelated simple enhanced table results mechanically altered documents 
believe results section definitive provide insight selection threshold value cops related target test 
threshold value say oe sentences identify vast majority related documents triggering false violations due noise 
conclude detecting plagiarism sentences roughly documents quite hard high alpha beta errors 
approximating section address efficiency scalability 
copy detection scale require operate large collections registered documents ability quickly test new documents 
effective way achieve scalability sampling 
illustrate say oot decide function tests percent chunks document match 
checking chunks simply take say random chunks check matched samples 
expect new oot sampling approximates original oot 
average test document contains chunks reduced evaluation time factor 
cost course lost accuracy analyzed section 
sampling option sample registered documents 
idea insert hash table random sample chunks registered document 
example say chunks hashed 
suppose checking chunks new document find matches registered document 
registered document sampled matches equivalent original oot 
exceed threshold document flagged violation 
case savings storage space hash table registered chunks 
smaller hash table possible distribute sites copy detection done distributed fashion 
cost loss accuracy 
third sampling option sample registration testing time 
due space limitations consider option sampling testing 
note analysis sampling registration time identical results analogous 
start giving precise definition sampling testing strategy 
oot chunking functions ins chunks eval chunks match ratio decide function threshold oe section 
define second oot intended approximate chunking function evaluation eval chunks simply eval chunks eval chunks return random select random select picks chunks random 
chunking function insertions changed ins chunks ins chunks 
decide function selects documents number matching chunks count match greater 
chunks tested size threshold number chunks oen 
decide selects documents number matching chunks count match greater oen 
accuracy randomized wish determine different section distribution input documents distribution registered documents 
random document follows random document follows proportion chunks chunking function match chunks probability density function dx 
compute alpha beta error 
details computation appendix results follows alpha oe dx oe dx beta oe gamma dx oe dx efficient way sample 
code just explanation purposes 
oe oe exaggerated error oe dx oe gamma dx gamma gammaj results evaluate expressions need know distribution 
recall tells proportion matches test registered document 
option measure body documents results specific particular body 
parametrized function lets consider variety scenarios 
observations section arrive function 
high probability test document unrelated registered 
case noise matches model normally distributed mean standard deviation oe probably small 
probability gamma test document unrelated registered 
case assume number matching chunks normally distributed mean standard deviation oe expect oe large seen related documents tend widely varying numbers matches 
function weighted sum normal truncated distributions normalized 
shows sample function exaggerated parameters form apparent 
area curve range represents likelihood noise matches rest range represents mainly matches related documents 
practice course expect closer comparisons unrelated documents oe smaller 
parametrized results show approximation important issue study number samples required accurate results 
shows alpha beta error values function oe 
recall oe value means looking registered documents error beta alpha oe oe oe effect number sample points accuracy chunks match chunks test document 
value may picked say interested subset target test 
parameters 
note values simply monotonically decreasing 
example alpha error values increase goes 
rounding error cause 
example selects documents count number matching chunks greater oen matches 
documents count greater selected 
consider test document matches say chunks registered document selected 
select get hits 
select extra sample get hits 
effect leads higher alpha error 
spite non monotonicity important note error decreases rapidly increases 
error stays 
shows approximate relatively small number sampled chunks 
note alpha error decrease rapidly serious 
alpha error say mainly caused test documents match ratio slightly higher oe 
area curve vicinity right gives probability getting documents 
cases sampling oot may hits trigger detection 
case original oot may approximating violation test interest 
words percent matches close may clear documents related 
fact detects violation serious believe 
results sensitive parameters demonstrate effect oe effect see error stays low long oe near oe 
oe close oe get documents region trouble identifying documents selected similarly error keeps low high range expect practice 
summary sampling conditions oe far bulk match ratios 
large gain efficiency small loss accuracy 
stated earlier sample registration oot analyzed identically done shown substantially reduce storage costs 
error oe oe oe effect oe error 
error oe oe oe effect error 
proposed copy detection service identify partial complete overlap documents 
described prototype implementation service cops experimental results suggest service detect violations interest 
analyzed important variations including ones breaking document chunks sampling chunks detecting overlap 
important note described copy detection centralized function ways distribute 
example copies registered document hash table distributed permit checking duplicates remote sites 
table contains samples section relatively small distributable easily 
document registration performed set distributed registration services 
services periodically exchange information new registered documents seen 
important question regarding copy detection authors convinced register documents substantial body documents service useful 
believe especially starts documents particular community netnews users sigmod authors 
regardless success cops copy detection believe essential explore understand solutions safeguarding intellectual property digital libraries 
success hinges finding approach works 
anderson 
stewart feder mechanized search 
nature april 
low maxemchuk gorman 
document marking identification line word shifting 
technical report bell 
may obtained ftp ftp research att com dist ps 
low maxemchuk gorman 
electronic marking identification techniques discourage document copying 
technical report bell 
choudhury maxemchuk paul schulzrinne 
copyright protection electronic publishing computer networks 
technical report bell 
submitted ieee network magazine june 
garrett alen 
copyright management system digital libraries 
technical report copyright clearance center 
griswold 
method protecting copyright networks 
joint harvard mit workshop technology strategies protecting intellectual property networked multimedia environment april 
jensen 
making copyright electronic publishing models 
review 
kahn 
deposit registration electronic copyright management system 
technical report national research initiatives reston virginia august 
lyons 
knowledge systems copyright 
review 
parker 
computer algorithms plagiarism detection 
ieee education may 
popek kline 
encryption secure computer networks 
acm computing surveys december 
wheeler 
computer networks said offer new opportunities 
chronicle higher education pages june 
appendix error terms sampling oot appendix compute alpha beta error terms sampling testing oot 
recall proportion chunks chunking function match chunks probability density function pr dx 
compute alpha follows alpha pr jo pr pr compute numerator denominator equation consider possible value separately integrate possible values weight integral relative probability value 
case denominator simple pr oe dx numerator somewhat complicated pr oe pr jm dx oe dx pr jm 
probability proportion chunks match probability chunks probability matching oen matches 
event chunk matching denoted matches 
pr pr gamma gammaj evaluation cumulative probability mass function binomial distribution parameters evaluated floor oen 
alpha oe dx oe dx similarly derive beta oe gamma dx oe dx error oe dx oe gamma dx 
