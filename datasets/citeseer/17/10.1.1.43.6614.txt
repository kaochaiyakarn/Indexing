real time interaction vr distributed multi agent system hans luc henri bal frans groen division physics astronomy division mathematics computer science faculty sciences vrije universiteit amsterdam informatics institute university amsterdam amsterdam keywords interactive virtual reality distributed interactive simulation collaborative visualization describe virtual reality system allows users different locations interact distributed multiagent system 
robocup robot soccer case study 
human player immersed cave interact robocup simulation natural domain playing virtual soccer game 
system supports distributed collaboration allowing humans different geographic locations participate interact real time 
difficult problem address deal latency induced multi agent simulation wide area network different caves 
navigation software anticipates movements human player optimizes interaction navigation kicking 
sends minimal amount state information wide area network 

multi agent systems increasingly important society 
majority systems way related internet applications predominantly field electronic commerce 
real world robots infancy growing importance 
application area broad covering cleaning public safety pollution detection fire fighting traffic control games 
real world cyber world multi agents able cooperate develop optimal sensing action strategies show adaptiveness task 
multi agent systems nature distributed rely broad range different sensors 
interaction human multi agent system real time poses intriguing problems representation world seen agents type interaction possibility sharing virtual world possibly remote users 
study virtual reality vr techniques real time interaction humans distributed multi agent system 
virtual reality sensor data human interact agents study control multi agent system 
facilitate progress research area useful define standard problem 
artificial intelligence community robot soccer better known robocup chosen standard problem wide range technologies integrated examined 
goal robocup teams cooperating autonomous agents play soccer match real agents robots simulated players 
show robocup useful challenging application studying real time interaction distributed simulation 
objective construct distributed vr environment humans different geographic locations play real time running robocup simulation natural way participating real soccer match 
robocup differs earlier case studies virtual tennis humans interact running distributed simulation program just humans 
human take role simulated soccer players useful testing strategies coded simulation program 
interacting simulation program harder implement interaction humans 
simulation program unavoidably introduce delays realistic real time visualization interaction challenging problem discuss depth 
organized follows 
section discuss related 
section introduces basic concepts robocup 
section overview virtual robocup environment 
difficult implementation issues real time navigation interaction remote collaboration discussed depth section 
draw discuss section 
main contributions follows 
propose robocup useful case study vr research real time interactions humans multi agent systems distributed simulation programs general 

describe prototype distributed implementation allows humans different geographic locations participate virtual soccer match 
prototype demonstrated robocup tournament stockholm playing distributed virtual match caves amsterdam stockholm 

discuss difficult important problem detail achieve natural interaction presence latencies 
latency problem caused delay simulation introduces generating virtual reality 
multiple caves wide area interconnection network increases latency 
latency problem general appears vr applications humans interact simulations 
describes experiments give insight problem 

related interactive collaborative visualization radically change way scientists computer systems 
interactive visualization user interact program visual domain 
distributed collaboration allows multiple users different geographic locations cooperate interacting real time shared application 
existing applications restrict interaction visualization process direction view zoom factor 
advanced form interaction steering allows user interact simulation process 
systems exist support steering typically provide low level interactions require users monitor change application program internal variables 
authors describe robots steered virtual reality environment 
robocup application allows user interact simulation program high level natural way 
think capability beneficial scientific applications 
examples high level interaction reported literature simulation molecular docking molecular dynamics 
robocup may different scientific applications fact study issues distributed multi agent systems remote collaboration man multi agent interaction 
application collaborative allows real time interaction humans different geographic locations challenge implementation 
system induced latency network latency different sites difficult problem 
applications address network latency problem dedicated atm links 
authors compare performance users achieving different tasks network conditions varying latency jitter collaborative virtual environment 
show high latency reduces performance variability latency prediction difficult introduces lack hand eye coordination 
interesting performance metric complete time lag system response including simulation tracking rendering network synchronization 
lag msec interactivity difficult 
try minimize amount communication user simulation program 
particular couple remote users level simulation program visual level allowing transfer small simulation state large images 
similar problem problem remote modeling objects large distributed system large scale military simulations networked games 
centralized world state soccer server techniques dead reckoning position history dead reckoning applied 
research related virtual games 
implemented collaborative environment virtual tennis game humans different locations 
study interaction humans 
study interaction humans simulation programs 
put emphasis realistic modeling human bodies 
robocup application raises interesting problems human computer interaction example input output devices manipulate objects virtual environments 
issue movement user limited area soccer field larger cave 
investigate problem research simply wand mouse navigate natural way navigate 
approach scale user movements size field goes delimited zone 
approaches proposed neural networks detect walking movement hardware devices allow locomotion 

robocup robocup robot world cup attempts promote intelligent robotics research providing common task evaluating various theories algorithms agent architectures 
robocup comprises sub fields real robots simulations 
deals simulation part robocup 
player player team player player player team game state soccer monitor cave monitor soccer server positions orientations player state soccer commands soccer commands player translator 
software architecture robocup application software architecture robocup application shown 
translator cave monitor developed described remaining components part existing robocup software described 
mode camera interaction view monitor event driven coupled ball workbench void point select non immersive cave human play immersive table 
overview different visualization modes characteristics central role simulation played called soccer server keeps track state game provides players information game 
server seen virtual world ideal sensors players operate 
players individual processes request state information server autonomously calculate change globally behavior 
server enforces rules robocup ignores invalid commands players 
reason participants robocup tournament allowed changes server 
robocup vr system uses unmodified server software 
players communicate server send soccer commands 
commands intentional behavior player expressed simple language consisting dashes accelerations turns kicks dash dash amount turn turn angle kick kick force kick direction server discretizes time slots msec 
prevent server overloading unfair play command player server time slot executed commands ignored server 
kick command requires player certain distance ball meter default command effect 
players team state server defined dimensional coordinates player ball 
current implementation robocup dimensional dimension 
dimensional visualizer called soccer monitor provided standard robocup software distribution bandwidth required transmit state game msec bytes second storage format positions 
bandwidth small current internet connections telephone lines 
summarize robocup application multi agent system agents players centered virtual world soccer server discrete time discrete interaction space 

overview virtual robocup system stated objective construct environment humans play running robocup simulation way natural possible 
describe functionality system 
section discuss implementation 
virtual robocup system uses immersive environments cave integrates various visualization devices shown 
identify different modes human observe robocup multi agent system monitor mode workbench mode cave mode see table 
mode approach human notion soccer match closely possible 
mode monitor mode allows different locations passively watch match graphical workstations 
developed automated camera system tracks ball switches original robocup simulation software www robocup org interaction interaction workstations cave stockholm cave amsterdam workbench delft soccer game visualization 
interactive collaborative visualization soccer match camera positions user definable algorithm 
mode approximation standard tv coverage 
second mode implemented workbench provides overview soccer match 
main feature visualization miniaturized allow human overview state predefined viewing angle 
goal allow coach steer game give instructions players 
implemented camera system partial implementation workbench software 
remainder focus third mode cave mode 
cave mode allows user immersed game interact 
implemented new robocup monitor cave monitor uses information communication original monitor see visualizes state game cave 
starting point visualization built virtual stadium parameterized soccer player 
animation players walker motion data included glut opengl utility toolkit distribution 
state walker characterized degrees freedom 
movement governed set basic points interpolated splines 
movement periodical 
discriminate different modes movement standing walking running 
visualization movement adjusted linearly interpolating modes 
visualization system compute quantities successive states game 
reason soccer server tries reduce required communication bandwidth sending minimal amount information visualization system 
example direction movement velocity players events kicking ball determined successive states game 
likewise determining acceleration requires successive states 
addition visualization software developed software track behavior human cave 
trackers handle interaction human vr software 
tracker connected viewing glasses monitor positional changes human player inside cave 
second tracker connected wand global movements soccer field 
third tracker attached foot human player recognize kick 
difficult problem realizing virtual robocup system caused latency simulation program soccer server 
human player moves virtual soccer field moves happen instantaneously human 
contrast soccer server require time process change position 
consequence position human cave may different position stored workbench uses projector generate image slightly tilted projection plate 
users see scene comes table 
server 
difference especially affect kick command robocup rules require player certain distance ball able kick 
human player may think close virtual ball server simulation may different information ignore kick 
problem typical example delay introduced simulation program harm natural real time interaction 
player wand player head cave outline position seen server blue disk direction kick 
interaction radius human position soccer server study problem introduce visual cue human called blue disk 
center disk corresponds human position currently stored server radius corresponds interaction area area human allowed kick 
illustrated 
usually blue disk stay close human player 
lack tracking user aware server making illegal move 
practical experiments determined human user easily recognize disk experience presence distracting 
implementation details problem section 
virtual robocup environment allows visualization front ends different geographic locations coupled simulation 
respect environment example distributed collaborative application important class scientific applications 
explored possibility virtual soccer match played august caves amsterdam stockholm 
match human players cities joined team simulated players 
large distance kilometers caves introduces similar latency problem described actual position human remote cave may different position currently stored soccer server 
holds especially human player stockholm server simulated players run amsterdam 
describe study latency effect section 
visualization remote human position shown pyramid corresponding player shown ordinary player 
arrows denote viewing direction human remote cave 

implementation performance issues robocup system uses standard soccer server part existing robocup software 
player processes developed university amsterdam 
extended software ways 
implemented cave monitor visualizes soccer game cave discussed previous section 
addition adapted virtual player process allow human take identity players participate game interact simulation 
purpose translator process see translates tracker changes soccer commands transmits soccer server just normal virtual players 
coupled caves different locations 
caves connected soccer server humans participate game 
caves exchange tracking data achieve coupling network functionalities cave library 
tracking system cave player walk inside cave joystick look kick 
player reaction draw stadium animate player animate draw ball 
visualization compute distances select optimal command read tracker data 
translation 
update soccer state send command 
receive soccer state player player ball 
temporal difference major problem implementing system inherent delay illustrated 
cycle cave monitor receives state information soccer server 
data expanded visualized cave 
user reacts world immersed 
movements converted translator process commands sent back soccer server 
steps processed pipelined manner user reacts previous state soccer server movements processed simulation step 
inherent lag system significantly influences navigation interaction collaboration describe 
study optimize system done experiments cave located sara amsterdam 
cave connected ibm sp runs robocup simulation multiple processors players processes 
wide area experiments second cave located stockholm connected local sp 
goal human player cave able kick ball wants 
possible soccer server human close ball 
reduce distance position user cave corresponding position simulated world possible offer natural interaction 
obvious solution sample joystick mounted wand emit directly corresponding commands forward motion means dash sideways motion means turn 
visualization updated cycle monitor data 
approach user reacts past view 
movements limited experiences non natural interaction 
refresh rate monitor data soccer server hz slow provide smooth visualization 
explain solution problem detail 
tested system benchmark trajectories 
path simulated player cmunited team cmu track taken final robocup simulator tournament 
trajectory originally built simulation native turn dash commands 
ideally suited test algorithm 
second benchmark path human cave uses joystick mounted wand steer player soccer field joystick track 
trajectory native soccer server expect harder follow 
replayed trajectories varied dash factor parameter algorithm see measured average distance user corresponding simulated player 

navigation simulation player position orientation player position orientation virtual world soccer field 
difference human represented player described translator process receives changes position orientation human player cave 
compares information position orientation stored simulation see 
tries emit soccer command reduces difference bring simulated position orientation close human 
soccer server accept command msec translator waits soccer server acknowledged previous command sending new command 
interesting problem command emitted translator 
position orientation may differ virtual world simulation 
ideally translator emit turn command cover difference orientation angle time dash command cover distance illustrated 
unfortunately soccer server allows command cycle need way serialize turn dash commands 
tried strategies accurate strategy simply alternate turn 
strategies gives steady streams commands fixed time consecutive command angle distance 
property allows optimize turn simple extrapolations partially modeling inverse soccer server 
taken account algorithm left variable parameter dash factor 
algorithm constructed way parameter value momentum units keep distance minimal 
shows results trajectories local wide area setups 
shaded area indicates interaction range distance player allowed kick ball 
set meter soccer server 
expected wide area results show larger average distance 
case algorithm needs recover network latency effects glitches common internet 
furthermore algorithm clearly prefers motions native soccer server 
average distances cmu track smaller joystick track 
due large amount noise system average distances clear optimal tested trajectories 
results show roughly dash factor increases cmu track wan cmu track local joystick track wan joystick track local dash factor momentum units distance meters 
dash factor influence average distance average distance 
low strength cases algorithm keep speed human cave 

interaction full interaction robocup soccer game consists furthermore able kick virtual ball 
added third tracker cave setup sara 
vr software recognizes kick command tracker attached preferred foot human 
kick command issued conditions met 
firstly tangential speed foot set threshold 
furthermore human kicking range ball foot move ball 
force parameter kick command derived instantaneous speed foot angle parameter derived instantaneous direction foot 
speed direction sampled point speed reaches local maximum 
approach possible give hard soft dribbling kicks 
accuracy trackers ascension flock birds magnetic trackers limited especially tracker highly asymmetric position case foot tracker detection kick data crude 
shows distribution distances measured cmu track locally wide area setup 
shows time indicated line marked distance meter time indicated line marked meters making natural interaction possible cases 
tail indicated large latency errors larger wide area case 
expected algorithm recovers latency problems wide area setup 
currently preparing experiments test ability experienced inexperienced users play soccer virtual environment 
consist local exercises dribbling path moving objects global tasks running field ball kicking accurately long distances 
experiments give insight effectivity natural interaction robocup environment 

collaboration robocup event played soccer match human players caves amsterdam stockholm 
soccer server located amsterdam amsterdam player experienced cmu track wan cmu track local large latency errors occupation rel 
distance meters 
distance histogram cmu track local latency effects stockholm player experienced wide area latency effects 
difference noticeable soccer experience sides game success 

described virtual reality system allows users different locations interact distributed multi agent system 
case study robocup interaction natural similar human soccer player user cave kick virtual ball 
difficult problem addressed deal latency induced multi agent simulation wide area network connects different caves 
latency causes difference real position human virtual space position stored simulation 
latency unavoidable extent problem live 
reduce impact latency problem ways 
navigation software anticipates movements human player tries reduce difference positions 
provide visual feedback user showing current position simulation 
exploit principle compression send minimal amount state information network 
sending complete images transmit state soccer game smaller expand state locally images 
especially important communication slow wide area networks 
current study scientific applications exploit interactive collaborative visualization 
example applications intend investigate simulation nonlinear systems lasers earlier described visualization molecular dynamics interactive visualization cornea human eye 
scientific applications exhibit similar problems identified robocup 
example visualization cornea useful eye surgery modeling cornea computation intensive process resulting latency problems 
currently studying parallel cluster computing may reduce latency allow visualization done real time 
bal jacobs langendoen ruhl kaashoek 
performance evaluation orca shared object system 
acm transactions computer systems feb 
cruz defanti hart 
cave audio visual experience automatic virtual environment 
communications acm june 
drucker zeltzer 
system implementing intelligent camera control 
symposium interactive graphics pages apr 
foster kesselman 
grid blueprint new computer infrastructure 
morgan kaufman 
iwata 
walking virtual environments infinite floor 
ieee virtual reality pages 
johnson leigh 
projects vr multiway tele immersion supercomputing 
ieee computer graphics applications july aug 
karp feiner 
automated presentation planning animation task decomposition heuristic reasoning 
graphics interface pages may 
kitano veloso stone tambe coradeschi osawa noda matsubara asada 
robocup synthetic agents challenge 
pollack editor th international joint conference artificial intelligence pages 
van earnshaw de matos 
collaborative visualization vr atm networks 
ieee computer graphics applications mar apr 
leech prins 
visual steering molecular dynamics protein design 
ieee computational science engineering winter 
leigh johnson defanti brown 
review tele immersive applications cave research network 
ieee virtual reality pages 
levine stevens 
stalk interactive system virtual molecular docking 
ieee computational science april june 
mulder lenstra 
visualization sisyphus attractor 
computers physics may june 
lee magnenat thalmann thalmann 
tennis 
presence apr 
mulder van wijk van liere 
survey computational steering environments 
generation computer systems 
park 
effects network characteristics human performance collaborative virtual environment 
ieee virtual reality pages 
parker miller hansen johnson 
integrated problem solving environment computational steering system 
hawaii international conference system sciences pages jan 
center parallel computers royal institute technology stockholm 
www kth se 
bal 
infrastructure computational steering virtual reality environments 
technical report vrije universiteit amsterdam faculty sciences mar 
sara academic computing services amsterdam 
www sara nl 

virtually telling robots 
informatique montpellier interface real virtual worlds 
singhal zyda 
networked virtual environments design implementation 
addison wesley 
singhal 
effective remote modeling large scale distributed simulation visualization environments 
ph thesis cs tr stanford university department computer science sept 
bal groen 
man multi agent interaction vr case study robocup 
ieee virtual reality poster new brunswick nj mar 
taylor chen papka stevens 
interactive virtual reality simulations exploring lag time 
ieee computational science engineering 
usoh arthur slater brooks 
walking walking place flying virtual environments 
computer graphics acm siggraph proceedings 
vos 
visualization corneal topography 
ieee visualization pages oct 
vos van der van groen 
new instrument measure shape cornea 
ieee trans 

meas 

