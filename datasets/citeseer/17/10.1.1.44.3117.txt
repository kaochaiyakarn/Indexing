interaction modeling techniques desktop handed input ken hinckley mary czerwinski mike sinclair microsoft research microsoft way redmond wa sinclair microsoft com tel describe input devices handed interaction techniques support map navigation tasks 
discuss design variations user testing handed navigation techniques including puck stylus input wacom tablet novel design incorporating touchpad hand mouse preferred hand 
support technique introduce new input device touchmouse standard mouse augmented pair bit touch sensors palm index finger 
propose enhancements buxton state model graphical input extend model encompass handed input transactions 
keywords handed input state model input devices tablets touchpads touchmouse map navigation handed input promising technique improve directness degree manipulation afforded desktop computers 
strong foundation research exists techniques allow hands drive continuous input signals common :10.1.1.22.5361
reasons 
designers begun develop understanding human bimanual behaviors 
application knowledge design development interaction techniques transducers capable capturing appropriate input signals lacking 
lack descriptive models specify interaction techniques explore alternate designs 
pragmatic side universal serial bus standard difficult connect multiple input devices pc furthermore users accustomed mouse keyboard transitioning installed user base new input techniques major issue 
fig 
input devices desktop handed interaction techniques touchpad hand touchmouse modified microsoft sense user touching 
current number contributions 
describe implementations bimanual input techniques map manipulation task different sets input devices wacom tablet puck pressure sensitive stylus novel input design incorporating touchmouse touchpad fig 

provide informal usability observations suggest strengths weaknesses approach 
goal precisely modeling devices techniques suggest enhancements buxton model descriptive model pointing devices extend model handed transactions petri net representation 
extended models context current input devices design problems helped suggest new models time new models helped better understand describe designs 
previous number systems demonstrate handed input techniques 
buxton myers handed input study shows pair touch sensitive strips jumping scrolling hand result improved performance 
interface paradigm explores tablets hands transparency high artwork applications :10.1.1.22.5361
toolglass metaphor uses mouse trackball driven hand position semi transparent tool sheets 
zeleznik hands wacom tablet perform camera manipulations 
previous examples handed map manipulation include metadesk 
examples leverage physical objects handed interaction include bricks real world interface props 
proceedings acm uist symposium user interface software technology 
balakrishnan patel describe touchpad integrated mouse hand input 
balakrishnan patel touchpad command selection touchpad spatial positioning tasks 
similarity touchmouse sense user touching pad 
models distinguish devices fig 
fig 

electric field sensing devices detect capacitance user hand body allow position orientation sensing multiple dimensions 
touchmouse senses capacitance signal contact sensing role describe number novel applications contact signals 
different modes sensing capacitance potentially combined input devices 
harrison pressure sensors detect contact handheld displays example automatically detect user handedness 
input devices interaction techniques implementation handed map manipulation techniques utilizes single wacom ii tablet fig 
left puck hand pressure sensitive stylus preferred hand 
design goal support annotation panning zooming maps user interface free heavyweight mode switches mode switches require user click icon perform menu selection change behavior pointing devices 
additional degrees freedom afforded interface potentially simplify syntax required input actions result simpler user interface 
essence handed interface allows users think terms navigating map strictly terms atomic actions panning zooming 
buxton cognitive chunking approach hierarchy subtasks map navigation illustrated fig 
right 
note performing just zoom subtask mouse problematic mouse senses continuous degrees freedom continuous zooming requires degrees freedom scaling factor origin scaling transformation 
iho hhf qh qy shp 

fig 
left wacom tablet puck stylus 
right chunking subtasks map navigation task 
puck stylus interface provides functionality follows clicking dragging puck pans map 
pressing stylus annotates map leaving ink trail 
clicking puck pressing stylus allows handed dragging 
handed dragging follows stretch squeeze metaphor pulling hands apart stretches map get detail pushing hands map compress map getting bird eye view 
stretching squeezing users translate hands direction achieve compound panning zooming actions navigation metaphor similar technique described kurtenbach rotation allowed :10.1.1.22.5361
user testing test users practice device individually tablet 
told users stretch squeeze metaphor try map manipulations 
users performed tasks pan zoom map los angeles salt lake city visible 
users initially uncomfortable puck hand 
users trouble discovering stylus sensed pressure needed click button puck pan map 
initial practice phase users able complete structured tasks intervention usability tester 
trying dragging actions users performed pure zooming actions stretching squeezing just trials users gained sufficient skill perform compound panning zooming actions 
test users tried mouse microsoft commercially available mapping program 
users commented availability standard mouse functions right clicking easier discover 
incomplete nature tablet prototype reactions users generally quite positive compared application mouse 
user commented pretty natural felt tablet efficient way just matter learning left hand 
user remarked mouse look maps requires lots steps hands continuous movement thing 
touchmouse encouraged user responses tablet techniques knew long run design technique samples position puck call stylus user grabs map 
computes midpoint cursors 
repeatedly takes initial point device positions midpoint subsequent frame computes transformation matrix consisting translation offset uniform scale scaling relative origin satisfies 
test users recruited microsoft usability labs varying computer experience 
users mouse experience 
including mouse probably practical common desktop applications 
began explore design space useful mouse sense touched description device call touchmouse 
touchmouse fig 
right modified microsoft integrates mouse ability sense user hand touching 
prototype design support touch sensors touch sensors conductive paint applied mouse shell 
conductive paint connected touchmouse internal circuitry senses parasitic capacitance user hand contacts touch sensor mechanical actuation switch necessary 
capacitance user hand induces slight time delay circuit 
time delay passes critical threshold touch release event generated 
provide strong coupling passive tactile feedback user feels touches device capacitance sensors generate touch release events exactly user finger palm breaks contact surface 
current prototype sends touch data host pc parallel port 
touchmouse described provides independent bits touch data palm area extends side mouse sense thumb contact left mouse button senses index finger 
palm sensor useful implicit actions take advantage knowing user grabs releases mouse 
example user touches mouse computer reveals mouse cursor performs quick animation seconds long pixel radius circle collapsing mouse cursor position 
helps direct user attention focus interaction 
user lets go mouse computer hides mouse cursor fading seconds 
palm sensor may applications user modeling example differentiate user dwelling icon mouse versus user go mouse just happened leave cursor icon 
finger sensor intended explicit user actions easy lift finger button intentional action 
example handed touchmouse touchpad interaction technique finger sensor combination touchpad ability sense contact cue user interaction involving input devices 
experimented touching button touch talk mechanism voice recognition applications gives user fine grain control computer listen voice commands 
user tested feature feel effective common alternatives push talk button keyboard voice commands activate deactivate recognizer 
users able quickly learn touch sensing features touchmouse reactions device generally positive discovering sensors may issue 
order get unbiased impression tell users touch sensors initial half test users discovered touch sensors prompting 
users grab mouse quickly notice sensed touched 
user habit holding index finger button clicking dragging initially notice finger sensor 
handed touchmouse touchpad map navigation propose handed technique uses touchmouse touchpad support stretch squeeze metaphor 
decided explore designs incorporating mouse plus touchpad hand felt touchpads number desirable properties application low cost small fixed device footprint rapid device acquisition speed ability sense touched 
critical distinction tablet implementation techniques versus mouse touchpad implementation mouse touchpad sense state information puck stylus devices 
buxton state model illustrates distinction defining states shown table state description range device physical tracking range 
tracking moving device causes tracking symbol move 
dragging allows move objects interface 
table states defined buxton state model 
puck stylus wacom tablet sense states 
example fig 
shows state diagram puck state state puck tablet puck tablet state button button range tracking dragging fig 
state transitions puck wacom tablet 
comparison touchpad senses states standard mouse senses states shown fig 
button button state state mouse touch release state state touchpad range tracking tracking dragging fig 
state models touchpad left standard mouse right 
principle dragging state state introduced touchpad commonly done laptops touchpad 
typically user holds button touching pad performs tap drag gesture drag objects 
practice mechanisms tedious interfere cursor motion 
considered mechanisms unacceptable hand usage touchpad 
touchpad lack dragging state overcome conceiving touchmouse touchpad unified handed device supports range state touching devices cursor tracking state dragging states handed devices individually combination touchpad pans map clicking dragging touchmouse annotates map leaving ink trail 
combination touching index finger mouse allows cursor tracking devices clicking mouse allows dragging stretching squeezing map devices 
hand provides positional contact information require hand click button control pressure touchpad 
fig 
shows visual feedback provided prototype mapping application 
feel touchmouse touchpad design results effective handed input note feels different tablet technique 
usability observations handed actions touchmouse touchpad natural tablet 
see main limitations touchmouse touchpad input technique 
touchmouse touchpad operate separate coordinate space hand tablet devices operate common absolute coordinate system 
touchmouse touchpad design benefit user natural ability know hand relative 
second difficulty control display ratios devices may equivalent 
means equal physical movements hands result unequal cursor movements screen 
practice find significant problem mouse motion set fastest settings 
split control space limitation technique advantage 
tablet puck stylus bump making impossible place cursors right offset introduced 
touchmouse touchpad happen 
problem map transformation sensitive small movements cursors close 
refer cross problem user trying zoom squeezing map easy overshoot cursors cross suddenly find map zooming back distance cursors increasing stretching map 

address issue implemented software constraints limit cursors go handed dragging 
prevents cursors crossing setting imaginary wall touchpad cursor mouse cursor 
defines small dead zone currently set radius pixels cursors radius map scaled regardless cursor separation 
find technique effectively eliminates problem 
provide interactive audio feedback panning zooming map 
audio feedback panning takes direction speed panning maps volume pitch timbre produce realistic sliding desk sound 
stretching map zooming creates sound guitar string stretched 
volume slightly louder size region manipulated increases 
sounds generated sequencing parametric sound events midi synthesizer creative labs awe gold card 
fig 
stretching map touchmouse touchpad 
user positions cursors area interest left 
clicking dragging mouse touchpad stretches map dragging rectangle helps show area map grabbed middle 
user releases mouse button map updates filling additional detail right 
new map fades second animation reduce visual discontinuities 
user tests brief tutorial practice get feel devices users able effective hands complete structured tasks 
user reactions varied tablet version interface 
user commented think great 
just takes time learn felt strongly didn prefer just hand 
user commented get hands operate new feeling took minute 
alternative mouse touchpad techniques alternative design uses touchpad standard mouse touch sensing 
touch sensor impossible know user touchpad user trying mouse touchpad 
design touching pad moves cursor hand 
clicking dragging mouse performs behavior 
clicking dragging mouse touching pad initiates handed dragging 
panning map achieved clicking mouse moving moving hand touchpad 
rationale design choice natural perform handed actions hand moves relative preferred hand movement devices interpreted handed behavior 
possible pan resorting clicking button touchpad feels awkward hand variation uses touchpad panning wheel zooming centered mouse cursor 
technique support compound panning zooming tasks practice panning map touchpad zooming map wheel serially interleaved 
depend coordinating action devices affected split control spaces potentially unequal control display ratios devices 
extending state model implemented interaction techniques input devices contemplated design alternatives started feel buxton state model currently exists quite appropriate design problems faced 
example felt touchmouse afforded different interactions puck wacom tablet state model treats nearly identical state devices devices sense range tracking dragging states 
light experience goal extend buxton state model wider range design users tried tablet pool users participated user test 
pressure sensing touchpad useful resolving problem light pressure moves cursor heavier pressure pans map 
touchpad senses contact area 
problems input devices interaction techniques 
offer straightforward extensions state model 
show annotating states model continuous properties position rotation pressure sensed state useful tool design better describe idiosyncrasies various devices 
second draw distinction events touch versus proximity input device sensor 
annotating states continuous properties propose annotating state continuous device properties sensed state useful reminder exactly actions possible state potentially suggest new devices 
notation capture properties multi channel input devices 
similarities design space proposed mackinlay card robertson describes devices multiple continuous discrete sensors 
design space shows connections properties device senses describe state transition behavior devices 
important issue continuous properties device vary depending current state 
contribution add notation continuous properties table state model capture state transition behavior 
notation description property sensed absolute position sensing dx relative position sensing motion sensing absolute angular calibrated dial dr relative angular wheel df force change force dt torque change torque nil state sense continuous signal 
table notation continuous properties 
essentially shorthand notation mackinlay 
add nil indicate states sense continuous property 
notation addresses limitation original state model buxton pointed representing transducers capable sensing pressure 
example fig 
describes wacom pressure sensitive stylus 
nil stylus tablet stylus tablet range tracking dragging fig 
annotated states pressure sensing stylus stylus pressure control continuous property line thickness mode 
state models fig 
illustrate utility approach 
devices continuous properties effectively sensed vary depending current state device 
defer model fig 
section incorporates touch sensing capabilities 
dx dy dr dx dy button button tracking dragging fig 

omit dr state difficult turn wheel dragging mouse 
precludes useful transactions scrolling document dragging place 
distinguishing touch vs device proximity buxton state model distinguish states touch versus device proximity 
considering model touchmouse touchpad wacom tablet useful differentiate 
note buxton input device taxonomy draw similar distinction devices touch versus devices require mechanical intermediary 
contribution apply distinction state model show devices discrete properties classification possible 
short propose buxton range state union potentially different states state range state triggered touch hand body contact device state range state triggered device proximity sensor 
consider hand device physical intermediary play role state 
claim distinction useful reasons 
useful design handed techniques 
example shows awkward implement similar technique touchmouse puck touchpad puck generate range event lifted awkward lifting finger pad 
technique puck sense touched 
second states profitably design interaction techniques natural different things 
seen application state palm sensor touchmouse provide enhanced cursor functionality 
state wacom puck implement relative mode user gestures mouse users lifting puck allow relative motion tablet 
third suggests new devices sense states 
aware device commercially research literature 
show devices propose examples puck wacom tablet senses user holding touchmouse sense lifted desk state 
modified version fitzmaurice bricks brick sense user holding 
point introduce descriptive model touchmouse fig 

interaction techniques developed think touchmouse state device supports state state fourth state touch dragging state triggered touching index finger mouse button 
call state short touch state 
note comparison mouse fig 
state intermediary state mouse tracking state dragging clicking button state 
state provides example distinguishing touch vs mechanical actuation useful differentiate dragging states 
palm rel 
button palm rel 
nil dx dy dr dx dy dx dy palm touch finger rel 
finger touch palm release button range touch tracking touch dragging dragging fig 
touchmouse 
state touch dragging state supported device 
offers second example state fig 

example device state sense multiple pairs coordinates indicate touchpad coordinates necessarily coordinate system mouse coordinates dx dy distinguishing prime symbol 
input device wacom tablet sense multiple devices puck stylus registered coordinate system prime symbol omitted 
dx dy dx dy touch pad release pad tracking touch dragging fig 
supports state touchpad sense finger contact 
describing handed transactions state models considered far handle individual devices effective considers handed interaction techniques 
example puck stylus wacom tablet support states buxton model 
avoid ambiguity name states stylus subscript preferred hand usage states puck hand 
cross product yields state model total compound states shown fig 
nil puck clk rel 
puck tablet stylus clk rel 
stylus tablet stylus puck puck click rel 
stylus clk rel 
puck click release stylus click release puck tablet stylus tablet range proximity tracking states dragging states fig 
full state model wacom puck stylus 
dashed arcs show events puck solid arcs events stylus 
hard see model corresponds individual state models puck stylus 
straightforward state model provides technically correct model puck stylus find unwieldy hard see states correspond original state models individual device 
express inherent parallelism hands devices 
extra states may interest interaction technique included 
example fig 
states just variations states track cursors 
petri net model propose new model essentially special case petri net model see tanenbaum quick review 
petri net model appropriate thinking handed interaction design problems terms device states input events intended whiteboard design sessions hypothesizing transitions states effective 
state model shown fig 
petri net model preserves flavor state model explicitly representing inherent parallelism handed input 
note petri net model describe composite handed interaction techniques specific capabilities individual devices practice petri net model side side state diagrams individual devices 
petri net model starts set desired states handed interactive technique support 
states contain exactly tokens black token representing preferred hand device gray token representing hand device 
rules govern movement tokens black token visit states solid border gray token visit states dashed border 
borders indicate token allowed visit particular state 
token may traverse arc dashed solid long arc leads state token allowed visit rule 
coloring solid dashed arcs indicates input device generates signal corresponding arc start simple example puck stylus devices interact fig 
nil stylus tablet stylus tablet tip click tip release nil puck tablet puck tablet button button stylus puck range states proximity tracking states dragging states fig 
simple model puck stylus tablet 
tokens start states indicating device proximity 
label tokens clarity 
fig 
shows states petri net model correspond directly state models individual devices 
shows petri net represents parallel nature multiple devices separate token represent current state device 
tokens move states response device events 
example placing stylus tablet moves black token state shown fig 
nil stylus tablet stylus tablet tip click tip release nil puck tablet puck tablet button button stylus puck range states proximity tracking states dragging states fig 
movement black token response placing stylus tablet 
refine example fig 
incorporate dragging puck stylus interact 
introduce additional state model state np dragging state hand device puck preferred hand device stylus 
state np state diagram black gray token enter state np colored solid dashed border 
add arcs state np indicate interaction technique maps device events allow user start handed dragging fig 
button nil stylus tablet stylus tablet tip click tip release nil puck tablet puck tablet button button np button tip release tip click button tip release range states proximity tracking states dragging states fig 
complete petri net model puck stylus showing additional state np models interaction devices handed dragging 
see works assume user currently dragging puck stylus black gray tokens state np tip stylus depressed clicked puck button held 
relaxing pressure stylus causes tip release black token moves np tip release arc 
gray token follow arc allowed move solid colored state 
relaxing pressure stylus causes gray token move np shorter tip release arc 
black token follow arc leads dashed state gray token allowed enter dashed states 
example shows single input event potentially cause tokens move 
relaxing pressure stylus black token state gray token state corresponds dragging puck 
point click stylus black token moves directly np puck button token move button arc 
example shows token pass intermediary state way final destination state 
parallel gray token moves np tokens state np indicating handed dragging operation 
modeling touchmouse touchpad model interactions touchmouse touchpad handed interaction technique 
touchpad supports states touchmouse supports states shown fig 

dragging cursor tracking default state touchpad contact technique uses touchpad contact pan drag map palm rel 
button palm rel 
dx dy dr palm touch finger rel 
finger touch palm release button nil dx dy dx dy touch release nil range states touch tracking states touch dragging dragging fig 
simple petri net model device states touchmouse top states touchpad bottom states 
touchpad touchmouse interaction technique augments basic device states additional states cursor tracking touchpad np handed dragging touchpad touchmouse 
add state basic device states fig 
palm rel 
button palm rel 
dx dy dr palm touch finger rel 
finger touch palm release button nil dx dy dx dy touch release nil finger touch finger rel 
release range states touch tracking states touch dragging dragging fig 
adding state device states support cursor tracking dragging touchpad 
see tokens move example suppose user grabs mouse moving black token touches finger sensor moving black token 
user touches touchpad gray token moves preferred hand touching finger sensor gray token immediately continues finger touch arc state initiating cursor tracking state touchpad 
incorporate handed dragging state np petri net model touchmouse touchpad fig 

model provides full specification device states events handed touchmouse touchpad map navigation technique palm rel 
button palm rel 
dx dy dr palm touch finger rel 
finger touch palm release button nil dx dy dx dy touch release nil finger touch finger rel 
touch release np dx dy button button release button release range states touch tracking states touch dragging dragging fig 
complete petri net model states events touchmouse touchpad interaction technique 
various examples provide specific instances petri net model applied need flesh model characterize design options handed interaction techniques general 
petri net model doesn help designer see pairs states possible possible 
example fig 
tokens states time 
example token reach state np accompanied second token 
tasks analyses important 
described new interaction techniques input devices support user interfaces hands 
current demonstration uses map navigation example application techniques explore ideas generalize applications 
need perform user testing designs get better sense strengths limitations 
explore alternative input devices support handed input trackball touchpad additional configurations touch sensors touch sensing input devices 
experimental studies needed analyze factors influencing input touch sensing devices general 
may possible extend interaction models quantitative data 
example add weighting factors state transitions quantify cognitive motor costs interaction technique 
quantify extent maintaining particular state interferes device motion holding button moving mouse approach described mackenzie may appropriate 
comprehensive model incorporate extent multiple continuous degrees freedom single state interfere coordination metric introduced zhai 
model unify various performance metrics possible state transition model help characterize input technique performance 
brown university computer graphics group letting wacom tablet driver touchpad samples geography products unit help interfacing microsoft commercial mapping engine hardware products group ideas discussions dave thiel audio feedback dan robbins photographs maarten van dantzich jeff pierce reviews george robertson managerial support design discussions 

balakrishnan patel facilitating selection spatial positioning non dominant hand chi 

bier stone pier buxton derose toolglass magic lenses see interface proceedings siggraph 

buxton chunking phrasing design human computer dialogues information processing proc 
ifip th world computer congress 

buxton state model graphical input proc 
interact 

buxton touch gesture marking readings human computer interaction year baecker editors 
morgan kaufmann publishers 


buxton hill rowley issues techniques touch sensitive tablet input computer graphics 

buxton myers study handed input proceedings chi acm conference human factors computing systems 

fitzmaurice ishii buxton bricks laying foundations graspable user interfaces proceedings chi acm conference human factors computing systems 

guiard asymmetric division labor human skilled bimanual action kinematic chain model journal motor behavior 

harrison fishkin want squeeze hold tilt exploration manipulative user interfaces chi 

hinckley pausch goble passive real world interface props visualization proceedings chi acm conference human factors computing systems 

hinckley pausch proffitt attention visual feedback bimanual acm siggraph symposium interactive graphics 

hinckley pausch proffitt cooperative bimanual action proceedings chi acm conference human factors computing systems 

horvitz breese heckerman lumiere project bayesian user modeling inferring goals needs software users proceedings fourteenth conference uncertainty artificial intelligence madison wi july 
morgan kaufmann san francisco 

buxton sellen handed input compound task proceedings chi acm conference human factors computing systems 

kurtenbach fitzmaurice baudel buxton design gui paradigm tablets hands transparency proceedings chi acm conference human factors computing systems 

mackenzie comparison selection techniques touchpads chi 

mackenzie sellen buxton comparison input devices elemental pointing dragging tasks chi 

mackinlay card robertson semantic analysis design space input devices human computer interaction 

matsushita rekimoto wall designing finger hand body object sensitive wall proceedings acm uist symposium user interface software technology 

smith white dodge allport paradiso gershenfeld electric field sensing graphical interfaces ieee computer graphics applications may 

tanenbaum computer networks 
englewood cliffs nj prentice hall 

ullmer ishii metadesk models prototypes tangible user interfaces proceedings acm uist symposium user interface software technology 

zeleznik strauss pointer input interaction acm siggraph symposium interactive graphics 

zhai milgram quantifying coordination multiple dof movement application evaluating dof input devices chi 

zimmerman smith paradiso allport gershenfeld applying electric field sensing human computer interfaces proceedings chi acm conference human factors computing systems 
