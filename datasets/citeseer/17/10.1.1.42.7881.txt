david goldschlag michael reed paul syverson 
hiding routing information workshop information hiding cambridge uk may 
hiding routing information david goldschlag michael reed paul syverson naval research laboratory center high assurance computer systems washington usa phone fax mail itd nrl navy mil 

describes architecture onion routing limits network vulnerability traffic analysis 
architecture provides anonymous socket connections means proxy servers 
provides real time bi directional anonymous communication protocol adapted proxy service 
specifically architecture provides bi directional communication initiator proxy server knows previous hops communication chain 
implies respondent proxy server external observer need know identity initiator proxy server 
prototype onion routing implemented 
prototype works world wide web proxies 
addition analogous proxy telnet implemented 
proxies ftp smtp development 
presents architecture limits network vulnerability traffic analysis 
call approach onion routing relies layered object direct construction anonymous bi directional real time virtual circuit communicating parties initiator responder individual routing nodes circuit know identities adjacent nodes nodes encrypt multiplexed virtual circuits studying traffic patterns yield information paths messages 
difficult traffic analysis determine communicating 
onion routing provides anonymous socket connection proxy server 
proxies defined interface application layer protocols adapted proxy servers order accommodate firewalls onion routing easily applications 
prototype works world wide web proxies 
addition proxy telnet implemented 
traffic analysis help deduce communicating analyzing traffic patterns data sent 
example networks relatively easy determine pairs machines communicating watching routing information part packet 
data encrypted routing information sent clear routers need know packets destinations order route right david goldschlag michael reed paul syverson 
hiding routing information workshop information hiding cambridge uk may 
direction 
traffic analysis done watching particular data move network matching amounts data examining coincidences connections opening closing time 
onion routing hides routing information making data stream follow path nodes en route destination 
path defined node proxy service requested requests 
proxy routing node sensitive sites concerned traffic analysis manage proxy routing node 
see important proxy routing node intermediate routing node virtual circuits 
compromise routing nodes compromises hiding uncompromised routing node sufficient complicate traffic analysis 
illustrates topology onion routing network nodes proxy routing node initiator site 
proxy routing node controlled secure site internet secure site routing proxy node initiator machine responder machine routing node link encrypted connection routing nodes fig 

routing topology 
goal onion routing provide anonymous communication 
parties free usually identify message 
public network automatically give away identities locations communicating parties 
example imagine researcher uses world wide web collect data variety sources 
david goldschlag michael reed paul syverson 
hiding routing information workshop information hiding cambridge uk may 
piece information retrieves publicly known may possible outside observer determine sensitive interests studying patterns requests 
onion routing difficult match requests site 
anonymous re attempt limit feasibility traffic analysis providing anonymous store forward architecture 
prevent replay attacks re keep log sent messages 
characteristics anonymous re approach unsuitable applications requests generate enormous log require bi directional communication 
anonymous isdn severe real time bi directional requirements architecture isdn network considerably different architecture internet 
onion routing provides bi directional communication requiring responder know initiator identity location 
individual messages logged 
addition onion routing easily adapted electronic mail 
messages include reply onions permit reply sender knowing address keeping original virtual circuit open 
rest organized way section presents background information 
section describes onion object directs construction virtual circuit 
section describes construction virtual circuits 
section describes vulnerabilities onion routing architecture 
section presents concluding remarks 
background chaum defines layered object routes data intermediate nodes called mixes 
intermediate nodes may reorder delay pad traffic complicate traffic analysis 
done mixes atm networks 
anonymous remailers mixes provide anonymous mail services invent address mail forwarded back original sender 
remailers store forward manner mail application layer stripping headers mix forwarding mail message mix 
remailers provide confirmation delivery 
mixes provide untraceable communication isdn network 
phone system telephone line assigned particular local switch local exchange switches interconnected long distance network 
anonymous calls isdn rely anonymous connection switch caller long distance network obtained routing calls predefined series mixes 
long distance endpoints connection mated complete call 
notice observers tell local switches connected 
approach relies unique features isdn switches 
phone line subset switch total capacity pre allocated real cost associated keeping david goldschlag michael reed paul syverson 
hiding routing information workshop information hiding cambridge uk may 
phone line active time making calls phone lines switch long distance network 
keeping phone lines active complicates traffic analysis observer track coincidences 
phone line control circuit connection switch switch broadcast messages line control circuits 
switch truly anonymous connection established phone line anonymous connection mix 
mix broadcasts token identifying connection 
recipient token anonymous connection specified mix mates connections complete call 
goal anonymous socket connections internet differs anonymous remailers anonymous isdn 
data different real time constraints severe mail somewhat looser voice 
isdn connections bidirectional isdn connections small requests followed short bursts returned data 
local switch capacity pre allocated phone line broadcasting efficient 
broadcasting internet free defining broadcasts domains trivial 
importantly network topology internet akin network topology long distance network switches capacity shared resource 
anonymous isdn mixes hide communication local switch connections switches hidden 
implies calls businesses large entire switch reveal businesses communicating 
onion routing mixing dispersed internet improves hiding 
onions session initiator responder initiator proxy identifies series routing nodes forming route network constructs onion encapsulates route 
illustrates onion constructed initiator proxy routing node anonymous route responder proxy routing node intermediate routing nodes initiator proxy sends onion route establish virtual circuit responder proxy 
onion data structure composed layer layer encryption wrapped payload 
leaving aside shape payload center basic structure onion route responder chosen initiator proxy 
route initiator proxy encrypts responder proxy preceding node route back routing node send onion 
onion received node knows sent onion pass onion 
knows nodes chain place 
david goldschlag michael reed paul syverson 
hiding routing information workshop information hiding cambridge uk may 
exp time fx fx bx bx exp time fy fy exp time null fz fz bz bz padding fig 

forward onion 
node receives looks time hop pk public encryption key routing node assumed corresponding decryption key 
decrypted message contains expiration time onion routing node payload sent payload function key pairs specifying cryptographic operations keys applied data sent virtual circuit 
forward pair applied data moving forward direction route onion traveling backward pair applied data moving opposite direction onion reverse route 
receiving node responder proxy hop field null 
intermediate routing node payload onion 
expiration time detect replays pairs compromised nodes try correlate messages 
node holds copy onion exp time 
receives copy onion time simply ignores 
receives onion expired ignores 
notice hop onion shrinks layer peeled 
avoid compromised nodes inferring route information monotonically diminishing size random bit string size peeled layer appended payload forwarding 
proxy know payload receives padding won know depending certain assumptions fields onion layer naive rsa implementation simple public key encryption implied notation vulnerable attack described 
implementation potential vulnerability illusory public key encrypt secret key secret key encrypt remainder message efficient symmetric algorithm 
efficient implementation simple straightforward implementation public keys 
specifying pairs functions unifies virtual circuits constructed forward reply onions 
see section 
david goldschlag michael reed paul syverson 
hiding routing information workshop information hiding cambridge uk may 
chain 
simply decrypts padding rest onion 
constant size onion traced onions size fix size onion 
maintain constant size hide length chain responder proxy initiator proxy pad central payload size onion number hops 
onion arrives responder proxy amount padding added initially en route 
creating circuit goal sending onion produce virtual circuits link encrypted connections running routing nodes 
details section 
onion occurs data field presently described messages 
messages contain circuit identifier command create destroy data data 
command considered error node receives message ignores message return destroy command back virtual circuit 
create command accompanies onion 
node receives create command onion chooses virtual circuit identifier sends create message containing identifier node onion padded layer peeled 
stores virtual circuit identifier received virtual circuit identifier sent pair 
circuit destroyed receives data connection sends 
applies forward cryptographic function key obtained onion data moving forward direction route onion traveled backward cryptographic function key data moving opposite direction onion reverse route 
virtual circuit established onion illustrated data sent initiator virtual circuit pre repeatedly proxy applying inverse forward cryptographic operations specified onion innermost 
layers cryptography peeled data travels forward virtual circuit 
data sent responder proxy previous node virtual circuit backward cryptographic operation specified corresponding layer onion 
initiator proxy applies inverse backward cryptographic operations specified onion outermost stream obtain plaintext 
loose routing necessary entire route prespecified initiator proxy 
instruct various nodes route choose route onions carry data onions tracked prevent replay introduce large cost 
define verb crypt mean application cryptographic operation encryption decryption logically interchangeable 
david goldschlag michael reed paul syverson 
hiding routing information workshop information hiding cambridge uk may 
data flow function key pairs socket connection virtual circuit link encrypted connection routing nodes link encrypted connection routing nodes bx bx initiator machine responder machine routing node routing proxy node internet secure site bz bz fy fy fz fz fx fx proxy routing node controlled secure site fig 

virtual circuit 
prespecified node 
useful security adding hops chain 
initiating proxy know complete connected route responder believes node break occurs construct route node 
loose routing handle connection changes occur initiator unaware 
onions fixed size fixed maximum length route initiator proxy responder proxy 
loose routing allows increase size maximum fixed onion size 
clear presently 
possible iterate loose routing process allowing nodes added route add chain 
obviously need mechanism prevent chain lengthening indefinitely 
incorporated onion structure 
onion system allows loose routing follows time hop max node receiving onion decides loose route onion prepares new onion max layers 
payload onion david goldschlag michael reed paul syverson 
hiding routing information workshop information hiding cambridge uk may 
simply onion received pk changed innermost node added chain 
words behaves initiator proxy payload onion 
node behaves initiator proxy respect data repeatedly pre post crypt data moves diverted route 
keep onion constant length truncate payload amount commensurate layers added onion 
initiating proxy anticipate amount padding initially added truncated en route central payload time loose routing occurs allow truncation 
failure pre pad correctly ignoring onion fixed size result malformed onion route 
total max values occurring added layers plus number added layers equal max value adding node received 
reply onions applications useful responder send back reply original circuit broken 
allow answers mail replies sent queries available time original connection 
shall see presently allows responder initiator remain hidden 
way allow delayed replies sending reply onion accompany reply 
forward onion reveals node en route step taken 
structure forward onion treated way nodes en route 
intermediate nodes processing onion differentiate forward reply onions 
furthermore behavior original initiator responder proxies circuit formed 
primary difference forward reply onion innermost payload 
payload forward onion effectively empty containing padding 
reply onion payload contains information enable initiator proxy reach initiator cryptographic function key pairs crypt data virtual circuit 
initiator proxy retrieves keys onion 
illustrates reply onion constructed initiator proxy routing node anonymous route back starting responder proxy routing node intermediate routing nodes difference virtual circuits established reply onions forward onions circuits established reply onions intermediate routing nodes appear think forward points initiator proxy 
behavior intermediate routing nodes symmetric difference irrelevant 
terminal proxy routing nodes behavior circuits established forward reply onions 
virtual circuit formed reply onion illustrated identical virtual circuit illustrated circuit formed reply onion moving responder proxy node david goldschlag michael reed paul syverson 
hiding routing information workshop information hiding cambridge uk may 
exp time bz bz fz fz exp time fy fy exp time bx bx fx fx exp time null null null null null identity bx bx fx fx fy fy bz bz fz fz padding fig 

reply onion 
initiator proxy node 
internally intermediate nodes forward cryptographic functions applied data moving direction circuit established backward cryptographic functions applied data moving opposite direction 
location terminal proxy routing nodes sense reversed initiator proxy circuit responder proxy circuit 
behavior initiator responder proxies identical behavior virtual circuit formed forward onion 
reason having forward backward function key pairs layer onion 
forward onion reply onion 
node receives onion kept expires onion received compared detect replay 
replay detected treated error ignored 
reply onions multiple replies desired multiple reply onions sent 
course need follow return route may replies forthcoming anonymous reply onions broadcast 
reply unused onion 
maintain anonymity cooperation responder proxy reply onion anonymously 
implementation easiest way build system requiring complete redesign deployment new client server software existing proxy technologies 
historically proxy technologies create tunnels firewall 
proxy technologies requires client applications proxy aware 
widespread deployment firewalls internet created demand proxy aware applications software manufacturers rushing meet 
david goldschlag michael reed paul syverson 
hiding routing information workshop information hiding cambridge uk may 
firewall setting system administrator set proxy server firewall machine responsible forwarding requests protected domain open internet maintain return path response request 
proxy server divided parts front receives parses request back processes request returns results back requester 
classically front back ends process running machine 
system traditional proxy front back separate processes separate machines tunnel connecting 
manner proxy routing nodes look different client server software proxy server 
couple assumptions hold remainder proxy routing nodes intermediate routing nodes know advance operation public key certificates node securely distributed prior operation 
nodes connected link encrypted connections multiplex virtual circuits initiator responder proxy nodes 
connections link encrypted odd way efficiency 
messages moving connections fixed size components header payload fields 
header fields contain virtual circuit identifier command link encrypted stream cipher 
payload fields encrypted mechanisms public keys onion keys need link encrypted 
commands nodes understand 
create virtual circuit 
node virtual circuit connections 
data arriving passed 
circuit defined labels connections 
creating virtual circuit process defining labels node route 
proxy routing node connection link initiator link routing node 
proxy routing node creates onion defining sequence intermediate routing nodes responder proxy routing node 
breaks onion payload sized chunks transmits chunks order node control field containing label connection create command 
subsequent node onion layer onion reveals node route cryptographic function key pairs 
acting create command node checks onion expired replay 
check replay node consults table onions 
onion valid inserted table node labels new connection node passes peeled padded onion similar sequence messages node 
updates table containing labels cryptographic function key pairs associated new virtual circuit 
appropriate forward backward function key pair crypt data moving circuit 
responder proxy routing node recognizing onion empty partially update tables 
standard proxies data message david goldschlag michael reed paul syverson 
hiding routing information workshop information hiding cambridge uk may 
circuit identify responder 
second command data 
second role initiator proxy routing node pass stream data initiator virtual circuit control information responder proxy routing node 
breaks incoming stream payload sized chunks repeatedly pre chunk inverse cryptographic operations specified onion innermost 
function key pairs applied virtual circuit identifier connection node obtained table 
header field payload label connection data command 
subsequent node looks table obtaining cryptographic function key pair associated circuit appropriate direction virtual circuit identifier connection node 
layer cryptography forwards peeled payload node 
data reaches responder proxy final produce plaintext processed forwarded responder 
data command move data responder proxy routing node initiator proxy routing node 
responder proxy routing node obtains cryptographic function key pair virtual circuit identifier node tables stream 
breaks stream payload sized chunks forwards node appropriate control field 
subsequent node stream payload appropriate function key associated virtual circuit 
messages arrives initiator proxy routing node looks table applies inverse backward cryptographic operations specified onion outermost stream obtain plaintext 
plaintext forwarded initiator 
third command destroy tear virtual circuit longer needed response certain error conditions 
notice destroy messages initiated node virtual circuit node obligation forward destroy messages appropriate directions 
node initiating destroy message active virtual circuit forwards directions 
node receives destroy message passes direction 
payload destroy command empty padding 
payload appropriate function key pair 
addition destroy command control field contains virtual circuit identifier recipient destroy command 
receipt destroy command node deletes table entries associated virtual circuit 
vulnerabilities onion routing invulnerable traffic analysis attacks 
data possible analyze usage patterns educated guesses routing messages 
application requires real time communication may possible detect near simultaneous opening socket david goldschlag michael reed paul syverson 
hiding routing information workshop information hiding cambridge uk may 
connections proxy servers revealing requesting information 
sorts attacks require collection analysis huge amounts data external observers 
attacks depend compromised proxy servers routing nodes 
initiator proxy compromised information revealed 
general sufficient single routing node uncompromised complicate traffic analysis 
single compromised routing node destroy connections forwarding messages resulting denial service attacks 
onion routing uses expiration times prevent replay attacks 
curious timestamps vulnerability due poorly synchronized clocks denial service attack replay attack 
node clock fast timely onions appear expired 
expiration times define window nodes store onions node slow clock storing information 
responder proxy compromised determine unencrypted data stream corrupted possible compromised nodes earlier virtual circuit corrupt stream ask responder proxy received uncorrupted data 
working compromised nodes suspected initiator proxy identify virtual circuit 
difficulty attack data stream corrupted remain corrupted stream cipher limiting analysis 
order onion routing effective significant nodes proxy nodes intermediate routing nodes 
choosing appropriate balance efficient network capacity security hard problem theoretical practical standpoint 
theoretically difficult calculate value tradeoff 
security network traffic relatively constant 
requires sending dummy traffic connection traffic light buffering data traffic heavy 
traffic bursty response time important smoothing network traffic requires wasting capacity 
traffic relatively constant additional smoothing may necessary 
practical point view internet may provide control necessary smooth traffic atm users capacity shared connections 
important observation onion routing forms architecture tradeoffs explored 
onion routing architecture hides routing information providing real time bi directional communication 
provides virtual circuit replace socket connection onion routing protocol adapted proxy service 
telnet easy imagine applications 
mail example onion routing create anonymous socket connection sendmail daemons 
contrasts anonymous remailers remailer pro david goldschlag michael reed paul syverson 
hiding routing information workshop information hiding cambridge uk may 
vides single hop chain mail forwarding 
sense onion routing rerouting messages independent type message 
extensions possible integrate nicely proxy approach anonymity 
example create completely anonymous conversation parties party anonymous connection anonymity server mates connections sharing token 
approach similar irc servers responder trust initiator especially broadcast reply onions 
responder builds trusted connection anonymity server asks anonymity server build connection initiator reply onion mate connections 
party protected route determined 
onion routing encryption burden connected intermediate nodes burden link encryption routers 
link encryption packet encrypted sender decrypted recipient 
onion routing header payload message separately header encrypted decrypted connection key payload recipient appropriate function key pair associated virtual circuit 
goal provide anonymous communication place identification belongs 
public network automatically reveal identities communicating parties 
anonymous communication undesirable easy imagine filters endpoint machines restrict communication signed messages 
onion routing effective complicating traffic analysis proxy routing nodes widespread widely 
obvious tension anonymity law enforcement 
tension resolved favor law enforcement straightforward integrate key escrow system onion routing information available authorities 
discussions people helped develop ideas 
ran atkinson markus john mclean cathy meadows andy moore moni naor holger peterson birgit pfitzmann michael steiner anonymous referees helpful suggestions 

chaum 
untraceable electronic mail return addresses digital pseudonyms communications acm feb pages 

chaum dining cryptographers problem unconditional sender recipient untraceability journal cryptology pages 
david goldschlag michael reed paul syverson 
hiding routing information workshop information hiding cambridge uk may 

chuang 
security management atm networks ph thesis progress cambridge university 

comer 
internetworking tcp ip volume principles protocols architecture prentice hall cliffs new jersey 

cottrell 
mixmaster remailer attacks com loki remailer remailer essay html 
tsudik 
mixing email babel symposium network distributed system security san diego february 

pfitzmann pfitzmann 
break direct rsa implementation mixes advances cryptology eurocrypt proceedings springer verlag berlin pages 

pfitzmann pfitzmann waidner 
isdn mixes untraceable communication small bandwidth overhead gi itg conference communication distributed systems mannheim feb informatik springer verlag pages 

pfitzmann waidner 
networks user observability computers security pages 

schneier 
applied cryptography protocols algorithms source code john wiley sons 

stevens 
tcp ip illustrated volume tcp transactions nntp unix domain protocols addison wesley reading mass 

stein 
set maintain world wide web site guide information providers addison wesley reading mass 
article processed macro package llncs style 
