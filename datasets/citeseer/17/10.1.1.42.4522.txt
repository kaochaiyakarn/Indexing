key management secure internet multicast boolean function minimization techniques chang robert engel dilip kandlur dimitrios saha ibm watson research center kandlur dimitris watson ibm com internet today provides support privacy authentication multicast packets 
increasing number applications require secure multicast services order restrict group membership enforce accountability group members 
major problem associated deployment secure multicast delivery services scalability key distribution protocol 
particularly true regard handling group membership changes member departures necessitate distribution new session key remaining group members 
frequency group membership changes increases necessary reduce cost key distribution operations 
explores batching group membership changes reduce frequency cost key re distribution operations 
focuses explicitly problem cumulative member removal presents algorithm minimizes number messages required distribute new keys remaining group members 
algorithm conjunction new multicast key management scheme uses set auxiliary keys order improve scalability 
contrast previous schemes generate fixed hierarchy keys proposed scheme dynamically generates suitable key hierarchy composing different keys 
cumulative member removal algorithm uses boolean function minimization techniques outperforms schemes known terms message complexity 
proposed scheme toolkit secure internet multicast services developed 
internet today supports basic form multicast service 
receivers join leave multicast group identified class ip address sending igmp messages local routers 
send datagrams multicast group sender need member group 
simply address datagrams group address 
responsibility multicast capable routers communicate multicast routing protocols deliver datagrams members group 
multicast group open group senders know identities receivers group 
likewise receivers mechanisms available authenticate identity senders 
support privacy authentication multicast distribution useful number applications important restrict set receivers authenticate data source 
applications pay view distribution digital media pay multi party games restricted conferences fall category receiver set needs restricted legitimate subscribers 
addition applications multicast distribution stock market information important authenticate data source 
add secure services top ip multicast secure multicast group usually associated trusted servers responsible managing membership group 
refer servers group controllers simply controllers 
order join secure multicast session sender receiver client request access group controller responsible session 
receiving request client join secure multicast session controller examines client credentials form login name password digital certificate 
client permitted join group controller provides requisite keys multicast address client listen control data messages 
keys sent client include session key shared members session possibly auxiliary keys depending key distribution algorithm 
group controller responsible handling client de registration removal 
de registration initiated client important applications pay view client leaving group ensure longer charged usage 
removal group member initiated member domain controller important cases member question loses access control privileges multicast group due lack authentication credit client de registration removal pose complex scalability problem multicast key management 
illustrate problem consider secure multicast group consisting members sharing session key data transmissions 
assume member group removed 
session key changed communicated remaining members group 
guarantee removed member decrypt group communication furthermore send legitimate data group 
communicating new session key scalable secure fashion remaining members group non trivial task 
simplest solution separate secure unicast con controller remaining group member assumes client exists unique key shared client controller 
simple solution suffers poor scalability requires secure unicast connections secret keys 
topic key management multiparty communication studied literature 
exception scalability problem associated frequent key changes large group addressed :10.1.1.39.4261
iolus scalability problem addressed dividing large group multiple subgroups employing hierarchy group security agents 
scheme proposed uses hierarchy keys solve scalability problem 
scheme key update requires messages size group 
client maintain key ring keys controller manage tree keys 
approach similar scheme proposed sense uses smart distribution keys achieve scaling 
fixed hierarchy keys dynamically generate suitable key hierarchy composing different keys 
scheme requires controller send messages single member group size multicast groups large size frequent membership changes modification distribution new session keys expensive operation especially individual member departure 
new keys generated periodic intervals time response significant number member departures 
focuses explicitly problem cumulative member removal proposes scheme find minimum number messages required distribute new keys remaining group members 
boolean function minimization techniques scheme outperforms schemes known terms message complexity removing multiple group members simultaneously 
advantage scheme controller maintain keys opposed 
detailed comparison approach approach proposed section iv 
note scheme conjunction iolus :10.1.1.39.4261
rest organized follows 
section ii key management distribution scheme 
section iii contains analysis proposed scheme 
comparison approach schemes proposed literature section iv 
section draw 
ii 
key management scheme scheme member group associated unique user id uid binary string length consequently uid written boolean notation written length uid depends size multicast group 
example group members bit uids 
depending member uid registers group controller join session receives common session key session key shared current members group encrypt decrypt data messages sent multicast group 
additionally mem ber receives set auxiliary keys written auxiliary keys update session keys secure manner 
keys drawn set key pairs 
key pair corresponds bit uid 
member receives exactly key key pair 
controller manages auxiliary keys shows example keys possessed different members group size square leaf nodes tree represent members group 
shown member identified unique bit uid 
round nodes tree represent keys system 
notice levels tree corresponding bit position uid 
member possesses keys branch leaf representing uid root tree 
example member uid possesses auxiliary keys addition session key shared members 
general session auxiliary keys change group member de registers removed longer send receive messages addressed group 
term event change keys group re keying 
group re keying takes place discrete times denote session key auxiliary keys current round number 
define round sequence number starting time multicast session created interval session key remains unchanged 
individual member removal member multicast group expelled subscription expired new session key needs distributed member leaving sure expelled member longer receive send data addressed group 
similarly member voluntarily leaves multicast group session key updated depending re keying policy group controller 
useful sessions members pay duration membership group 
note values complements unrelated keys 
sk sk key distribution departure fig 

key distribution update group size order update session key controller computes new session key new session key encrypted keys complementary ones departing member 
example assume departing member uid possesses keys new session key encrypted sent different mes sages means string encrypted key multicast entire group 
departing member receives messages decrypt message encrypted key departing member possess 
guarantees member group decrypt message 
due fact uid member differs uid departing member bit position key sets differ key 
differing key decryption 
shows visual interpretation re keying scheme described example 
keys corresponding solid round nodes correspond keys possessed departing member hatched round nodes represent complementary set keys possessed note branch root tree solid round nodes 
branch hatched node 
new session encrypted individually keys possessed member members able decrypt messages 
simple analysis key distribution algorithm shows group members number keys need maintained controller order number messages need sent update session key removal single member message encrypted key 
alternatively pack encrypted keys sin gle message 
packing multiple encrypted payloads single message reduces overhead message signed controller ensure authenticity 
clearly scheme departing member excluded learning new session key 
sure auxiliary keys decrypt session key updates auxiliary keys updated 
update key way hash function yields updated auxiliary key follows guarantees member possession new session key obtain updated auxiliary key departing member know new session key excluded form updates session key 
removal multiple members key update procedure described previous section applied times successively remove members multicast group 
efficient strategy aggregate removal members group 
useful policies key updating done certain intervals save resources members expelled depart simultaneously small time interval 
section systematic approach problem removing members round 
general consider set clients user id uid client written binary form bit id point time membership secure multicast group determined boolean function uid 
client uid group 
client excluded group 
sk fig 

example multiple members departing round 
group re keying achieved updating session auxiliary keys clients extent re keying information encrypted keys unknown excluded clients 
scalability efficiency reasons desired re keying requires minimum number messages sent group minimum number encryption operations performed 
intuitively achieved encrypting re keying information keys common subsets remaining members 
consider example 
suppose members uid uid removed group 
objective re keying provide new session key denoted remaining members note general set actual remaining group members subset uids may assigned 
uids assigned treated don care conditions impact procedure 
example sufficient multicast messages containing encrypted new session key message decrypted second members combination messages covers sufficient group re keying 
shows visual interpretation re keying scheme described 
solid round nodes represent keys possessed clearly keys may encrypt new session key 
mentioned keys cover remaining set members 
messages containing new session key encrypted individually sufficient update keys rest group 
observe sending total messages required re keying performed sequentially need messages aggregating removal members 
number fact number messages required remove single member 
intuitively number messages reduced uids remaining group members bits common different excluded members uids 
example members value bit uid different value excluded members 
translates key known members excluded ones possess 
similarly members excluded members possess decrypt message 
value bit possess problem cumulative group member removal grouping remaining members share common bits uids common keys different removed members efficient systematic way 
formally problem equivalent minimization boolean membership function example membership function written represents logical multiplication represents logical 
words membership function evaluates uids members group 
form equation suggests straightforward solution re keying group multicast messages term sum message encrypted key function keys corresponding term 
function way hash function applied elementary keys yields composite key message encrypted 
example term corresponds message encrypted key derived keys obvious messages decrypted remaining group members aggregation utilization keys common different remaining members 
need simplification aggregation arises 
similar problems addressed years area switching theory logical design 
objective minimize boolean functions complexity digital circuits reduced 
context logical design operation corresponds gate multiplication gate 
typical objectives include minimization total number gates number circuit stages 
borrow results logical design construct efficient re keying process 
define terms subsequent discussions 
literal variable complement product term series literals related minterm product term contains literals variables function 
equation products 
sum term series literals related normal term product sum term variable appears 
standard form usually considered simplification boolean functions form known sum products expression 
context logical design product corresponds gate literal gate input 
context multicast group re keying problem product corresponds message literal key input function derives encryption decryption key message 
criteria applied optimizing sum products form 
context logical design sum products expression regarded minimal expression exists equivalent expression involving fewer products expression involving number products smaller number literals 
rationale definition optimality typically cost additional gate times additional input existing gate elimination gates primary objective minimization process 
interestingly definition optimality applicable problem 
argument case complexity sending additional message far greater adding extra key id message indicate key input deriving new key 
deriving minimal expression map representation boolean functions 
maps provide intuitive visual technique helps identify product terms 
large number variables method hard essentially error method relies ability recognize patterns 
systematic approach applicable complex functions developed quine improved 
provides step step approach find minimum number tabular method easily implemented computer 
details 
controller executes quine algorithm compute messages need sent multiple members depart group round 
understand boolean minimization applies problem key updates minimum number messages consider example 
assume currently state group members uids assigned 
suppose remove group 
table shows membership function group departure note output uids corresponding 
output corresponding members input output table boolean membership function 

uid corresponding assigned round output set don care intuitively auxiliary keys updated left group able decrypt messages encrypted new keys 
shows map representation membership function 
field map corresponds specific minterm marked step minimization procedure identify largest possible rectangles contain shown 
rectangles called prime implicants function 
choosing minimum number prime implicants minimum function obtained 
example function minimized straightforward analogy minimizing boolean functions aggregating re keying messages 
interpretation follows 
fields containing correspond members removed group 
fields containing correspond remaining members group need updated new session key 
fields containing correspond uids assigned 
updating session auxiliary keys cumulative removal set group members reduces finding minimum number blocks table block block mapped message encrypted identifier block multicast group 
due minimal number auxiliary keys key management distribution scheme maintains may susceptible collusion attacks 
collusion attack set members previously removed group collude combining sets keys may able obtain currently valid set keys able continue unauthorized receipt group communication 
illustrate map prime implicants fig 

map minimization membership function 
problem consider group members members ids respectively removed round 
easily observed members mount collusion attack collectively hold auxiliary keys group 
impossible eliminate risk collusion attack auxiliary keys possible bar larger auxiliary key space sparse distribution uids 
iii 
properties performance section analyze performance proposed key management scheme 
focus performance terms total number messages required update session key multiple members leave group 
section iii derive worst case complexity cases departure members secure multicast group departure members 
section iii upper bound average number messages required aggregate removal arbitrary number members 
worst case performance cumulative removal group members examine case new keys distributed clients removed secure multicast group 
assume client ids binary representation respectively 
clients represented bit id total 
loss generality assume discussion section holds value uid assume hamming distance uids maximum denotes complement client keys client keys prove worst case terms messages sent update remaining members 
show messages needed group re keying 
claim messages distribute new keying information remaining group members 
terms expression corresponds single message contains new session key encryption derived way function keys 
straightforward option assume encrypted composite key 
composite key doubly encrypted keys 
alternatively employ way function hash function computes single key arguments avoiding extra cost double encryption 
show messages expression sufficient group re keying 
observe able decrypt messages possesses keys encrypt message 
show remaining members multicast group decrypt messages 
lemma excluding member secure multicast group decrypt messages expression 
proof 
consider arbitrary remaining member obviously dif group uid ferent ids highest order bit ids differ bit possesses decrypt th message expression 
lowest order bit ids match bit 
decrypt decrypt th message expression possesses th message expression 
possesses theorem re keying secure multicast group size group members removed requires messages 
proof 
ids users denoted bits maximum hamming distance lemma applies 
differ ids bit common 
observe message encrypted key corresponds complement sufficient distribute new keying information half group members 
members belong excluding group th bit remaining ids 
bit effectively ignored problem reduces removing users group members ids bits 
procedure applied recursively yielding message common bit 
th message users left 
common bits uids solution including comprised steps 
generate messages convey new keying information clients 
re key group clients ids size bits hamming distance ids users removed maximum 
shown lemma problem solved messages 
summing steps solution messages 
assume loss requires generality common bits follows messages expressed follows note messages sufficient easily verified 
aggregate removal members consider secure multicast group members new keys distributed clients removed group 
claim worst case complexity corresponds case uids remaining members assigned hamming distance uids larger 
means remaining member uids differ bit assigned de uid members remaining member encircled departing members shown table fig 

worst case aggregate removal members 

intuitively means remaining member grouped remaining member optimization boolean membership function 
result re keying requires message sent remaining group members total messages 
prove absolute worst case number terms update messages need sent number departing members 
show consider case number departing members greater equal number remaining members 
clearly number messages required number remaining members worst send message update remaining member message minterm membership function 
case number messages required 
consider case number departing members number remaining members greater 
looking additional member remains group equivalently additional minterm membership function exists previously existing minterm function grouped 
grouping done systematic way additional member grouped existing ones 
example pairing member largest uid smaller 
argument holds existing placed shown moving shown position table reduce number messages 
average case performance interesting study average number messages required aggregate removal arbitrary number members multicast group 
logic minimization literature average number products minimum sum products expressions boolean functions studied extensively 
mentioned earlier switching functions average number products equal average number gates minimum level circuits context equal average number messages required re keying 
derives upper bound average number products minimum claimed tightest reported date 
bound considers valued input valued output functions general case case considered 
reasons completeness result adapted 
introducing concept vp equivalence relation proceed theorem stating upper bound 
definition relation satisfying conditions variable valued input valued output function called vp equivalence relation 


permutation input variables 

arbitrary mapping set truth values take values 
permutation values variable 
vp equivalence called np equivalence 
theorem upper bound average number products minimum variable valued input valued output functions number elements number called weight denoted 
representative functions classes number products minimum number functions vp equivalent 
equation number possible different variable valued input valued output functions number different functions weight 
upper bound function variable 
general larger tighter upper bound larger computational complexity number vp equivalence classes 
contains representative examples coefficients 
proof 
see 
iv 
related authors addressed problem providing security multiparty communication 
overview various issues related multicast security please refer 
works closely related gkmp prominent 
gkmp group member selected group key controller responsible handling join requests distributing new keys 
group key controller generates group keys joint operation selected group member 
contacts valid group member sends group keys encrypted key mutually shared group key controller member 
approach suffers scalability problems single entity involved sending group keys member basis encrypted specific shared key prominent multicast key management protocol works conjuction core tree cbt multicast protocol 
allows members securely join cbt group tree 
enhances scalability exploiting implicit hierarchy cbt distribution tree fact routers delivery tree know identities tree neighbors 
cbt tree constructed tree root operates group controller responsible group key generation distribution 
ability distribute group keys delegated routers join delivery tree 
achieves high scalability offer satisfactory solution re keying problem case frequent group membership changes 
furthermore vulnerable breach security corrupt routers distribution tree 
iolus scalability problem addressed dividing secure multicast group multiple sub groups organized multi level hierarchy 
main focus architecture group hierarchy inter group key management 
iolus terminology focuses key management single subgroup topic addressed 
terms addressing scalability problem group key management scheme proposed closest 
scheme clients organized virtual hierarchy shown 
round node tree represents key label key id label root tree represents session key group 
client represented square leaf node possesses keys branch leaf root tree 
client leaves gets expelled group keys branch leaf representing client root compromised changed 
updated keys multicast sub groups unicast individual members group 
member example leaves group keys updated 
encrypted key key key encrypted new key encrypted sages need sent new multi remove multiple members round 
cast messages key key entire group 
scheme key update requires example remove members size group 
note scheme proposed key controller needs send client keys controller key messages manage tree keys 
scheme similar scheme terms message complexity individual controller uses new member removal 
updated key encrypt 
remove manage members number different keys maintained scheme send messages controller compared approach 
computed generating new keys expensive reduction map 
number keys significant advantage approach 
keeping track key assignment easier case functional mapping uids keys 
importantly scheme superior minimizing number messages multiple members leave session efficient key management round 
explain distribution scheme secure multicast scales ex detail 
terms group size dynamics 
multicast group members number keys need shows distribution keys mem maintained group controller group scheme 
show key sage complexity associated updating keys single hierarchy special case number key member departs group 
removal hierarchies dynamically generated scheme 
multiple group members round desired accomplished defining mapping boolean minimization order find minimum num hierarchies compute key hierarchy ber messages needed update keys terms mes different composite keys set sage complexity removing multiple members elementary keys 
mapping round scheme outperforms schemes known defined set keys 
fact depending identity specific members set keys way hash leaving group number messages required update function 
keys times number messages required single member 
secure multicast applications pay view events members join leave group bursts 
applications efficient removal multiple members round critically important 
applications multi party games membership changes spread time aggregation multiple departures single key update event important performance reasons 
efficiency scheme aggregating key updates due multiple departures translate tremendous performance advantage 
clearly mapping easily extended larger groups key hierarchies 
note differ ent mappings example swap pair key 
easily redraw key graph swapping keys different levels affecting keys members possess composite key hierarchy fixed hierarchy keys 
additional degrees freedom translate increased number key hierarchies formed 
flexibility exploited reducing number mes extended ways 
process analyzing average case overhead algorithm simulations 
continuing benchmark optimize various components toolkit including key distribution algorithm 
plan toolkit enhance number multicast applications security synchronization web caches proxies updating distributed databases multi party games 
vi 
acknowledgment kyushu institute technology discussions minimizing sum product expressions 
sk key hierarchy key hierarchy scheme fig 

comparison key hierarchies scheme scheme proposed 
bounds average number products minimum sum products expressions multiple valued input valued output functions ieee transactions computers vol 
pp 
may 
map method synthesis combinational logic circuits transactions communications electronics vol 
pp 
november 
ballardie scalable multicast key distribution rfc may 
iolus framework scalable secure multicasting proceedings acm sigcomm cannes france pp 

wallner eric harder ryan key management multicast issues architectures informational rfc draft arch txt july 
jr minimization boolean functions bell system tech 
journal vol 
pp 
november 
huitema routing internet prentice hall 
steve deering host extensions ip multicasting rfc august 
steve deering multicast routing datagram internetworks ph thesis stanford university december 
group key management protocol gkmp architecture rfc july 
group key management protocol gkmp specification rfc july 
ballardie francis crowcroft core trees architecture scalable inter domain multicast routing proceedings acm sigcomm san francisco ca september 
ran canetti juan garay daniele micciancio moni naor benny pinkas issues multicast security taxonomy secure multicast protocols efficient authentication schemes draft manuscript 
ran canetti benny pinkas taxonomy multicast security issues internet draft may 
alan freier philip paul kocher ssl protocol version internet draft draft freier ssl version txt november 
howes lightweight directory access protocol rfc march 
chung kei wong mohamed gouda simon lam secure group communications key graphs proceedings acm sigcomm vancouver british columbia september 

