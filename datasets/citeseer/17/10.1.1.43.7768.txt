approximating weighted shortest paths polyhedral surfaces technical report tr mark anil maheshwari jorg sack school computer science carleton university colonel drive ottawa canada mail scs carleton ca consider simple polyhedron possibly non convex composed triangular regions faces assigned positive weight indicating cost travel region 
experimentally study algorithms compute approximate weighted geodesic shortest path points surface algorithms simple practical prone numerical problems adaptable wide spectrum weight functions elementary data structures 
additional feature algorithms execution time space utilization traded accuracy likewise sequence approximate shortest paths pair points computed increasing accuracy execution time desired 
dynamic changes polyhedron removal insertions vertices faces easily handled 
key step algorithms construction graph introducing steiner points edges polyhedron compute shortest path resulting graph dijkstra algorithm 
different strategies steiner point placement examined 
experimental results obtained triangular irregular networks tins modeling terrains geographical information systems gis show constant number steiner points edge suffice obtain high quality approximate shortest paths 
time complexity algorithms tins obtained real data randomly generated data experimentally investigated log 
analysis bounds approximate shortest path cost wmax delta jl denotes geodesic shortest path boundary longest edge wmax maximum weight faces respectively 
worst case time complexity bounded 
alternate algorithm graph spanners runs log worst case time reports approximate path fi wmax delta jl fi constant 
planar subdivisions best known algorithm computing exact geodesic weighted shortest path runs log time space due mitchell papadimitriou 
aware adequately documented algorithm computing approximate weighted shortest paths 
substantial interest observed computing approximate shortest paths unweighted polytopes see 
methodology computing approximate shortest paths unweighted tins involves computing sequence faces approximate path passes constructing path performing sleeve computation 
turns tins studied set faces intersected approximate shortest path identical actual shortest path 
cases sleeve computation reports actual shortest path 
time complexity approximation algorithm applied tins log 
research supported part nserc 
shortest path problems fundamental problems studied computational geometry 
consider problem computing shortest cost path points polyhedral surface surface composed triangular regions faces region associated positive weight indicating cost travel region 
problem arises numerous applications areas robotics traffic control search rescue water flow analysis road design navigation routing geographical information systems 
applications demand simple efficient algorithms compute approximate shortest paths opposed complex algorithm computes exact path 
polyhedra arising applications approximate real surfaces approximate path typically suffice 
interest motivated research development parallel system gis spatial modeling 
research computing shortest geodesic path unweighted polyhedral surfaces began special case convex polyhedra 
approximate computations euclidean paths unweighted polyhedra reported 
computation euclidean shortest paths non convex polyhedra investigated currently best known algorithm due chen han runs time :10.1.1.43.7768
best known algorithm query problem source destination unknown requires ffi ffi answer queries log time 
mitchell papadimitriou introduced weighted region problem algorithm computes shortest weighted cost path points planar subdivision requires log time worst case 
state algorithm applies non convex polyhedral terrains modifications 
see survey mitchell suri results shortest path problems 
motivated practical importance problems high complexities computing exact shortest paths investigate algorithms computing approximated shortest paths 
propose simple practical algorithms schemes compute approximated weighted shortest path points surface possibly non convex polyhedron accuracy approximation varies length longest edge max faces variations algorithm 
ensures wmax delta jl second ensures fi wmax delta jl fixed constant fi 
experimental results indicate schemes perform practice guarantee excellent results polyhedra 
jl typical running time algorithms log worst case running times algorithms log respectively 
due lack space provide proofs graphs results appendix 
preliminaries polyhedron triangular faces 
face assigned positive weight represents cost traveling face 
cost determined varadarajan agarwal propose algorithm computes unweighted approximated path times actual path length requires log time 
provide algorithm requires log time produces path times optimal 
approximated path length unbounded slope type terrain water forest 
weight edge weight minimum face adjacent edge 
points surface shortest cost path denoted cost composed sequence adjacent straight line segments cost segment passing face assumed delta js similarly approximated path denoted cost segments longest edge max maximum weight face respectively 
define special class polyhedra called triangular irregular network tin triangular faces 
tin constructed triangulated point set plane point assigned height 
shortest path approximations polyhedral surface simple approach polyhedron compute graph edge weights follows 
vertices correspond vertices edge vertices corresponding vertices connected edge 
simplicity assume source target points vertices approximate shortest path computed dijkstra algorithm 
scheme confines path traveling edges quality approximation depends triangulation bad worst case see 
approximated path links may length delta jl larger 
approximation algorithms improve previous scheme introducing steiner points edges polyhedron 
set vertices consist vertices steiner points designed strategies placing vertices edges graph distinguishes schemes examined 
adding steiner points edges face 
fixed scheme add steiner points evenly edge positive integer face compute subgraph follows 
steiner points original vertices vertices connect vertex pair form edge represent steiner points lie different edges represent steiner points adjacent edge weight graph edge euclidean distance times weight 
example shows steiner points edges added face form non planar graph steiner points edge 
graph computed forming union approximated shortest path computed determining shortest path dijkstra algorithm transforming path corresponding path easily shown edges lie surface path approximation path surface order analyze cost approximated path consider segment shortest path approximated 
compute path passes sequence faces claim claim approximate segment passing face edge delta js delta js delta jl number steiner points added edge face proof edge divided intervals length jl properties weighted paths described mitchell papadimitriou follows crosses completely travels edge shown show weighted shortest path obeys snell law refraction bends edges 
assume begins point inside interval edge ends point inside interval edge possibly loss generality assume begins interval endpoint steiner point say closest ends interval endpoint say closest different edges know steiner edge joining 
lie edge exists series adjacent collinear steiner edges joining view collinear edges single segment triangle inequality ensures js js 
chose wf possible weighted shortest path segments intersect face 
crossing face traveling edge segments slightly offset demonstration purposes 
closer interval endpoints js js multiplying delta js delta js delta jl case know bounds 
easily shown equations hold 
proof applies segments may internal claim prove lemma lemma exists approximated path delta wmax jl proof approximated path segments passes sequence faces 
write fs delta js fs delta js fs weight face passes 
applying results claim segment fs delta js fs delta js fs delta jl 
rewrite fs delta jl fs wmax definition delta wmax jl theorem fixed scheme compute approximation weighted shortest path points polyhedral surface max delta jl longest edge max maximum weight face compute path time 
proof know mitchell papadimitriou shortest weighted path may cross edge times 
weighted shortest path may segments 
lemma set obtain wmax delta jl fixed scheme edge contributes graph vertices face contributes graph edges 
dijkstra shortest path algorithm fibonacci heap takes time graph 
interval scheme fixed scheme assumption analysis edge crossed shortest path length jl practice edges small length compared jl examined edge length histograms data 
means addition steiner points smaller edges resulted small intervals length jl improve fixed scheme forcing intervals adjacent steiner points edge length jl result typically reduce number steiner points added edge considerably 
shows example steiner points added faces fixed scheme exactly steiner points edge interval scheme steiner points added ensure interval steiner points edge length jl far path accuracy concerned difference examples 
maximum length interval jl proofs claim lemma apply theorem holds interval scheme 
worst case analysis schemes reduction steiner points advantage reducing number graph vertices edges created processed graph shortest path algorithm 
spanner schemes time complexities previous schemes improved described approximation achieved 
intuitively able eliminate edges joining steiner points drastic reduction approximation factor 
eliminate edges notion spanner 
complete graph formed applying edge decomposition scheme face steiner points edge 
vertices edges including face boundaries 
construct fi spanner call vertices vertices sort ccw order interior point form sorted list effects approximated path caused varying number steiner points edge steiner points edge ensuring intervals length jl cone spanner edges added vertex ffi set cones apex conical angle ae ae 
vertex perform radial sweep vertices mod gamma mod 
sweep compute vertex min minimal distance ae cones add edge connecting min see 
results clarkson ensure fi spanner fi cos fi spanner vertices edges 
create similar spanner face individually merge form union approximate shortest path computed computing shortest path claim segment passing approximated path delta jp fi delta delta js fi delta delta jl number steiner points added edge 
proof claim follows delta js delta js delta jl segment definition follows approximated path jp fi delta js substituting result claim delta jp fi delta js delta js delta jl delta jp fi delta delta js fi delta delta jl lemma applying fi spanner scheme steiner points edge approximate path obtained fi delta delta fi delta wmax jl proof proof uses results claim techniques lemma 
approximated path subpaths passes faces respectively 
definition path cost follows fs delta js fs delta jp 
applying results claim segment fs delta jp fi delta fs delta js fi delta fs delta jl 
rewrite fi delta fi delta fs delta jl fs max definition fi delta delta fi delta max jl theorem approximate weighted shortest path points polyhedron faces computed log time fi wmax delta jl fi longest edge max maximum weight face proof correctness follows lemma 
apply fi spanner scheme obtain face steiner points edge subgraph contains graph vertices vertex constant depending fi degree spanner 
computed applying radial sweep vertex order add incident edges 
brute force approach sweep take time vertex 
constant number cones ae divide vertices equal number partitions 
vertices sorted radially apply binary search cones obtain partitions log time 
partition apply binary search obtain closest vertex min log time 
constant number partitions vertices processed log time computed log time 
faces requires log time create 
shortest path computed dijkstra algorithm fibonacci heap runs log time 
improvement graph construction stated cost matches dijkstra shortest path algorithm 
sleeve schemes scheme discussed applies unweighted polyhedra 
compute approximate shortest path fixed interval scheme 
determine sleeve unfolding faces edge sequence compute shortest path lies sleeve 
implemented algorithm similar algorithm guibas hershberger applied approximated path 
omit details sleeve computation due space constraints version 
section shows approximated paths accurate additional computation negligible increase execution time 
cases edge sequence approximated path identical exact shortest path 
sleeve computation produces exact shortest path 
efficient algorithm computing shortest paths weighted 
weighted case perform second approximation outcome 
select buffer faces computation second approximation selecting faces passed approximated path 
approximated path passed vertex add incident faces vertex buffer 
apply approximation scheme buffer faces increased number steiner points edge 
result obtain refined path 
refinement repeated times desired 
implementation related issues variation dijkstra algorithm place dijkstra shortest path graph algorithm implemented known variation algorithm 
scheme associate additional weight vertex euclidean distance target vertex 
algorithm iteration cost vertex choose minimizes sum cost source vertex plus euclidean distance target vertex possible vertices 
space complexity applications space requirements algorithms tins important 
address schemes store graph pertains steiner points implicitly 
iteration dijkstra algorithm adjacency information computed fly little penalty 
numerical issues suri points chen han algorithm unfolding sensitive numerical problems :10.1.1.43.7768
due fact rotations performed errors accumulate paths geometric structures computed 
schemes paths go vertices steiner points exception variation final step sleeve computation drastically reduces numerical problems 
faces exaggerated heights data source dem dem random random dem dem table various tins attributes 
legend id scheme sleeve buffer int interval fix fixed interval fixed table different approximation schemes tested 
experimental results geographic information systems cartography related areas context shortest path problems arise frequently terrains 
tin represent terrain 
main difficulties presenting experimental results choose benchmark tins 
conceivable different tin characteristics affect performance algorithm 
attempted accommodate different characteristics performing tests tins different sizes number faces height characteristics smooth spiky modeled heights data sources random sampled digital elevation models dem 
table shows attributes tins tested 
tins exaggerated heights created multiplying heights factor 
tin computed set random vertex pairs 
tested approximation schemes shown table 
give id scheme appear graphs 
test computed path cost vertex pairs obtained average path cost pairs 
tests performed iterations number steiner points edge 
scheme tested weighted non weighted scenarios exception sleeve computations computed unweighted case second approximation buffer applied weighted case 
weighted domain tins assign weight face slope face 
steeper faces higher weight 
edge tin weight equal minimum adjacent faces 
determined experimentally spanner schemes provide slightly worse approximations provide adequate improvement running time omit graphs 
analysis approximation bounds number steiner points edge worst case far values required test suites typical tins 
path accuracy ran tests terrain weight homogeneous face examined euclidean shortest path problem 
graphs depict results tests variations approximation schemes 
see small number steiner points edge approximated path length quickly converges actual path length computed chen han algorithm :10.1.1.43.7768
graph shows small number steiner points edge suffice obtain close optimal approximations 
graphs illustrate additional sleeve computation helps obtain accurate approximations 
best non weighted schemes interval scheme sleeve computation 
average number steiner points edge face unweighted tin fix int chen han average number steiner points edge face unweighted tin fix int chen han graph shows converges average steiner points edge 
graph shows run times different schemes compared algorithm chen han 
graphs right represent approximations obtained tins heights vertices multiplied factor 
graphs show results remain approximate path length converges steiner points edge added 
see convergence quick 
mainly due fact steiner points placed apart longer edges 
requires steiner points reduce interval size flatter tin 
interval scheme performs better fixed scheme interval scheme favors placement steiner points longer edges longer edges crossed set random paths 
computation time adding constant number steiner points average edge running time algorithms log 
general algorithms running times depend number steiner edges evoking dijkstra graph shortest path algorithm 
graph depicts results face tin 
schemes exhibit identical running times number graph edges 
graphs depict running time test 
see algorithms substantially faster chen han :10.1.1.43.7768
main reason algorithms require complex data structures perform expensive computations rotation unfoldings 
precompute graph perform search query query pair source destination measure time takes answer query 
graphs see time required additional sleeve computation negligible 
weighted paths problem determining accuracy algorithm weighted scenario implementation algorithm determines actual shortest weighted path 
graphs show accuracy obtained experimentation 
unweighted case path costs converge value steiner points added edge 
conjecture cost paths converge similar non weighted scenario 
graphs see second approximation buffer technique provides similar increase accuracy unweighted sleeve computations 
algorithm unweighted weighted scenarios obtained identical running time shown 
see second approximation resulted significant increase computation time respect increase shown unweighted sleeve computations 
increase mainly due construction new refined graph necessary query 
shortest path problems belong class geometric problems fundamental significant practical relevance 
realistic shortest path problems frequently arise applications cost travel uniform domain time space implementation complexities existing algorithms planar case extremely large motivates study approximation algorithms 
experimental results show high quality approximations obtained run times 
precisely provided empirical results showing typical terrain data requires constant steiner points edge 
reduces running time log practice orders magnitude smaller best known exact shortest path algorithm 
solutions simple practical value 
theoretically establish bounds approximation quality give worst case bounds run time algorithms 
theoretically investigating new modification dijkstra algorithm having improved worst case run time class graphs containing approximation algorithms 
experimental nature report improvement 
unweighted scenario compared accuracy chen han gave results indicating algorithm performs times faster nearly identical path results :10.1.1.43.7768
claim algorithm efficient accuracy versus running time simple implement 
algorithm particular interest case queries unknown source destination 
currently investigating scenarios involve realistic weights consideration physical properties vehicles 
appendix shows example path taken vehicle hilly terrain slope turning angles restricted 
working parallel implementation algorithms 
acknowledgments doron useful discussions 
har peled sharir varadarajan approximating shortest paths convex polytope dimensions proc 
th annual symp 
computational geometry philadelphia pa pp 

agarwal aronov rourke schevon star unfolding polytope applications appear siam journal computing 
chen han shortest paths polyhedron proceedings th acm symposium computational geometry pp :10.1.1.43.7768

clarkson approximation algorithms shortest path motion planning proc 
th annual acm symp 
theory computing pp 

dijkstra note problems connection graphs numerical mathematics pp 
guibas hershberger optimal shortest path queries simple polygons proceedings rd acm symposium computational geometry pp 

hershberger suri practical methods approximating shortest paths convex polytope proceedings th annual acm siam symposium discrete algorithms pp 

mitchell mount papadimitriou discrete geodesic problem siam journal computing august pp 

mitchell papadimitriou weighted region problem finding shortest paths weighted planar subdivision journal acm january pp 

mitchell suri survey computational geometry ball eds handbooks operations research management science elsevier science vol 
chapter pp 

mount finding shortest paths convex polyhedra technical report department computer science university maryland baltimore md 
rourke suri booth shortest paths polyhedral surfaces extended dept electrical engineering computer science johns hopkins university baltimore maryland september 
rowe ross optimal grid free path planning arbitrarily terrain anisotropic friction gravity effects ieee transactions robotics automation vol 
october pp 

sharir shortest paths polyhedral spaces siam journal computing pp 

suri personal communication 
varadarajan agarwal approximating shortest paths polyhedron unpublished report november 
average number steiner points edge face unweighted tin fix int chen han average number steiner points edge face unweighted tin stretched heights fix int chen han average number steiner points edge face unweighted tin random heights fix int chen han average number steiner points edge face unweighted tin random stretched heights fix int chen han average number steiner points edge face unweighted tin fix int chen han average number steiner points edge face unweighted tin stretched heights fix int chen han graphs showing average length approximated euclidean paths various tins different schemes 
graphs show approximations converge optimal path length computed algorithm chen han 
average number steiner points edge face unweighted tin fix int chen han average number steiner points edge face unweighted tin stretched heights fix int chen han average number steiner points edge face unweighted tin random heights fix int chen han average number steiner points edge face unweighted tin random stretched heights fix int chen han average number steiner points edge face unweighted tin fix int chen han average number steiner points edge face unweighted tin stretched heights fix int chen han graphs showing average computation time approximated euclidean paths various tins different schemes 
graphs show running time significantly algorithm chen han 
average number steiner points edge face weighted tin fix int average number steiner points edge face weighted tin stretched heights fix int average number steiner points edge face weighted tin random heights fix int average number steiner points edge face weighted tin random stretched heights fix int average number steiner points edge face weighted tin fix int average number steiner points edge face weighted tin stretched heights fix int graphs showing average length approximated weighted paths various tins different schemes 
graphs show approximations converge similar non weighted scenario 
average number steiner points edge face weighted tin fix int average number steiner points edge face weighted tin stretched heights fix int average number steiner points edge face weighted tin random heights fix int average number steiner points edge face weighted tin random stretched heights fix int average number steiner points edge face weighted tin fix int average number steiner points edge face weighted tin stretched heights fix int graphs showing average computation time approximated weighted paths various tins different schemes 
graphs show time grows quadratically number steiner points increases 
weighted shortest paths terrain travelling water cheap expensive 
shortest weighted path consideration maximum slope vehicle travel turning angle 
