configuring versioned software products conradi bernhard westfechtel 
department computer systems telematics norwegian institute technology nth trondheim conradi idt unit lehrstuhl fur informatik iii rwth aachen 
aachen bernhard informatik rwth aachen de 
despite advances software configuration management scm constructing consistent configurations large complex versioned software products remains challenge 
provide overview existing approaches address problem 
approaches compared means taxonomy analogy deductive databases construction configuration corresponds evaluation query versioned database stored version selection rules 
consistently configuring large product existing versions difficult task 
constraints combining revisions variants taken account 
frequently constraints documented properly specified formally 
user scm system select consistent combinations versions 
furthermore dependencies changes taken account bug fixes may require bug fixes included 
user commits error may turn testing selected source configuration failures customer site 
provides overview existing approaches configuring versioned products 
perspective deductive databases configuring versioned product corresponds evaluating query versioned database stored version selection rules 
section taxonomy developed analogy 
scm systems wide spectrum different version models version model defines objects versioned version identification organization operations retrieving existing versions constructing new versions 
focuses support configuring versioned products intensional description 
survey distinguish classes version models treated sections respectively carried research stay nth 
support nth gratefully acknowledged 
version oriented models describe configurations product versions terms explicit versions components 
component versions arranged version graphs describing evolution histories 
configuration described version rules select appropriate versions help attributes history information 
constraints refer consistent combinations versions different components general small fraction potential combinations compatible 
differences versions described deltas referenced version rules 
change oriented models describe configurations terms changes relative base configuration 
version graphs just version rules describing potential combinations changes 
changes differ deltas ways changes named comprise logically related modifications multiple components applied flexible way delta tied specific pair versions 
contrast version oriented models change oriented models maintain restricted explicit component versions 
new component versions implicitly constructed merging changes resulting higher flexibility version oriented models 
drawback inconsistent configurations may produced easily 
constraints required express conditions consistent change combinations 
ends sections table summarizes main points comparison 
final section 
conceptual framework section defines terminology rest lays foundations comparing specific approaches sections 
start general definitions lines software object item kind identifiable entity put scm control 
object may atomic decomposed internals irrelevant scm composite 
composite object related components composition relationships furthermore may dependency relationships dependent master objects 
version implicit explicit instance versioned object groups similar objects sharing properties 
distinguish revisions historical versioning variants parallel versions 
configuration consistent complete version composite object set component versions relationships 
configuration called bound exclusively contains versions components 
conversely unbound configuration exclusively consists versioned objects 
partly bound configuration lies 
configuration satisfying version rules product constraints versioned database configuration description query product part root object relationship types constraints preferences defaults constraints preferences defaults evaluate query deductive database construct configuration product space version space version part rule base stored version rules fig 

construction configuration deductive database perspective construction configuration may regarded search problem deductive database fig 
configuration description query evaluated versioned database augmented rule base version selection 
configuration constructed result evaluating query 
versioned database contains versioned products configured 
consists parts product space composed stored objects items relationships 
typical software objects documents requirements specifications source files relocatable files user documentation test data review forms measurement data project plans product space organized relationships objects composition relationships part file part directory dependency relationships include dependencies programs traceability dependencies lifecycle documents 
version space composed version structures version rules histories characterized version attributes specified domains 
attributes may globally locally defined 
version oriented models version graphs describe revisions historical versioning variants parallel versions software objects annotated attribute values 
version space dimensional space dimension corresponds time dimension variant attribute 
change oriented models versions described changes dynamically combined merged produce specific versions 
change described attribute value defines dimension dimensional space characterizing potential versions 
discussing relations product version space thoroughly pull forward important point general product structure may depend versions selected different versions may different outgoing relationships versioned relationships 
conversely version space may depend product space version attributes may depend part product configured 
example may attribute characterizing style user interface motif 
attribute apply database part product may oracle ingres 
configuration description specifies configuration constructed consists parts product part describes product composite object 
done specifying root object set set relationship types composition dependency relationships 
product constructed transitive closure root object specified relationship types 
version part contains version selection rules constrain guide search see 
selection rules contained rule base stored rules 
rule base exists independently query 
may distinguish kinds version rules classification applies rule base configuration description constraint mandatory rule satisfied 
violation constraint indicates inconsistency sun vax variant selected simultaneously 
preference optional rule applied may satisfied 
corresponds property preferred enforced released module versions preferred 
default optional rule weaker preference 
default rule applied unique selection performed latest version main branch version graph may selected default 
tool constructs configuration evaluating configuration description respect versioned database rule base called configurator note intentionally avoid notion builder concerned source configurations classical builds tool considered 
graphs describing structure versioned product explaining version selections performed configuration process 
node represents product part 
node intertwined node node edge edge sample selections product version fig 

different kinds graphs selection orders selected outgoing edges relationships need followed constructing configuration 
node represents version group member selected 
kinds selection orders may distinguished fig 
product 
entire product structure selected selection 
case composite object consisting known set components 
component may expand multiple versions selection 
version 
inverse approach product version selected selection 
subsequently selection performed obtain components belonging selected version 
general set components depends version selected 
intertwined 
product selections intermixed version selections multilevel selections 
graphs structured selections alternate bipartite graph 
configuration process non deterministic selections defaults may need performed 
selections performed automatically automatic configurator user assistance interactive configurator 
case non deterministic choice may wrong configurator able backtrack wrong selections 
furthermore may classified versioned objects bound specific versions 
static binding means mapping constructed 
case dynamic binding configuration description evaluated object accessed 
define consistency configuration consistent satisfies constraints mandatory conditions configuration description rule base 
concentrate version level consistency versioned database selection order product version intertwined product space files modular programs 
version space revisions variants changes 
configuration description formalism sql queries boolean expressions 
rule classes constraints preferences defaults rule base formalism see rule classes see configurator binding modes static degree automation automatic interactive backtracking table 
taxonomy comparing constraints describing legal version combinations 
typical examples select operating system variant configuration include change changes depends 
address product related consistency satisfied consistent configuration 
particular described guarantee syntactic semantic consistency result configuration process 
product related consistency treated module interconnection languages systems languages inscape 
framework developed applies version oriented models 
specific points discussed version oriented models version rules refer versioned components 
change oriented models versions components mentioned version rules 
change oriented models version product selected version oriented models selection order applied 
version oriented models explicit versions components construct configurations 
product consisting modules existing versions exist potential configurations number potential configurations grows polynomially actual number may large modules exists versions 
change oriented models construction configuration rely explicit component versions 
versions components constructed implicitly merging changes fine grained level text lines files 
case unconstrained combination changes change product foo supports different operating systems dos unix vms window systems windows database systems oracle informix 
straightforward constraints variants available vms run dos 
furthermore various changes performed maintenance foo bug fixes denoted fix fix changes may mutually exclusive may depend 
versions components foo states indicating degree consistency coded tested released 
fig 

running example may applied skipped potential configurations changes number potential configurations grows exponentially example changes potential combinations 
table shows taxonomy comparisons sections 
taxonomy structured fig 

fig 
shows small running example sections 
version oriented models survey version oriented 
sort graph represent versioned product configured 
graph traversed starting root node version selections performed nodes 
rcs rcs successor sccs manages versions text files 
rcs selects product express versioned relationships 
version member version group contained directory 
members version group arranged version graph consists branches variants composed sequence revisions 
example fig 
sample product foo represented directory containing version groups source files file configuration descriptions take simple form options supplied checkout command 
options describe preferences terms values builtin version attributes 
example command retrieves latest versions state released created specified date sake convenience version group represented oval surrounding members 
version group directory version component consistent configuration successor relationship composition relationship mk foo fig 

rcs rcs support rule base version selection 
consistent version selections difficult perform 
consistent configuration may consist versions located different places respective version graphs see grey boxes fig 

configuration may regarded thread version graphs 
thread may represented tagging versions symbolic name 
version group checkout command selects latest version satisfying options 
matching version exists options specified latest version main branch selected default 
clearcase clearcase successor dsee adopts scm systems sccs rcs approach versioning individual files 
addition directories may versioned directory foo fig 

kinds versioned objects files directories uniformly denoted elements 
contrast rcs clearcase selects version 
single version view established versioned file system configuration description 
view filter dynamically binds generic specific versions 
filter read write accesses 
excludes components specified configuration fig 

configuration description consists sequence rules 
distinction constraints preferences defaults 
product part rule describes scope may specific element elements certain subtree simply visible elements 
version part boolean expression refers version numbers branches values version attributes 
example configuration description foo mk mk version filter versioned file system configuration description foo fig 

clearcase element foo 
element foo 
oracle time oct element foo 
unix time oct element foo 
main time oct foo denotes product part subtree oracle 
specify branches cut date time option clearcase support stored version rules addition configuration description 
particular way state constraints dos compatible 
operating system process compiling linking program executed configuration description supplied process start 
configuration description evaluated element accessed 
rules evaluated sequentially ordering rules indicates priority 
evaluation stops unique match versions returned query reside branch 
case latest version branch selected 
error reported matching rule 
config config language independent approach configuring modular programs 
versions modular programs represented bipartite graph fig 

accordingly config performs intertwined selections 
config distinguishes revisions variants 
modular program evolves set revisions denoted natural numbers 
structure evolution history irrelevant config 
program revision may exist multiple variants 
variants characterized attributes 
description perform changes specific stable context 
configuration description pair re va re denotes revision va tuple attribute values 
attributes characterizing program variant value specified incomplete specifications allowed 
example os dos ws windows db selects pc variant revision sample program foo 
rule base consists parts 
version module version description set denoted vd maintained consists pairs described 
vd indicates configurations module version belongs 
version description sets different versions module mutually disjoint 
example version main module may version description set os dos ws windows db os unix ws db oracle os dos ws windows db os unix ws db oracle lines version dos unix variant program revision 
second version puts constraints versions modules depends 
constraints attached dependencies 
constraint defined mapping version description vd current module version description vd module 
simplest case mapping identity vers propagates current version description module configuration process starts complete configuration description vd re va see root module 
vd uniquely selects version new version descriptions computed selecting versions modules 
version description sets different module versions mutually disjoint configurator operates deterministic way non deterministic choices backtracking 
module multiple modules selection wins inconsistencies different selections detected 
adele config adele configuration manager performs sophisticated intertwined product version selections configuring modular program 
adele modular programs organized families 
structure family relationships families depicted fig 
family may sake convenience hybrid nodes represent interfaces variants 
interface revision family variant 
depends provides realized evolves fig 

adele multiple interfaces realized alternative variants evolving sequences revisions 
note realization variants may module bodies previously constructed 
dependencies emanate interfaces variants interfaces 
adele supports configuration descriptions stored version rules attached families 
configuration descriptions stored version rules specified language 
version rules similar clearcase 
product part rule defines scope may specific family set families root family 
version part consists boolean expression version attributes 
os unix ws db informix state tested clearcase adele explicitly distinguishes different classes rules constraints preferences defaults 
rules short intensional descriptions large complex configurations 
configuration description interface configurator traverses graph families selecting revision family 
configurator maintains set version rules initialized configuration description 
extended gradually adding stored rules attached selected versions 
avoid wrong choices version selection family performed constraints known 
case versions families selected 
selection possibly help preferences defaults retracted backtracking 
sio sio scm system extends relational database technology 
sio selects product 
product consists fixed set versioned modules 
module represented rdbms relation tuple corresponds single version 
version characterized attributes fields tuple 
set fields may vary module 
configurations described sql manner 
query selects version module 
sio distinguishes constraints preferences 
preferences act filters query results applied outcome filter application empty 
preferences may ordered sequentially resulting sequential filtering user defined priorities 
example query specifies configuration unix oracle constraints versions state released preferred state tested preferences select instances foo having versions modules having os unix ws db oracle prefer having versions modules having state released prefer having versions modules having state tested rule base contains constraints specified compatibility rules 
compatibility rule assertion restricted order predicate calculus 
conditions versions different modules compatible stated terms version attributes 
constraints quantify versions modules supported 
due restricted form constraints sio efficiently check contradictions 
configuration description evaluated database module relations compatibility rules account 
query evaluator deductive component goes conventional database technology 
addition checking compatibility rules constructing new configuration sio analyses existing configurations satisfy new compatibility rule 
modification rule base disallowed existing configuration inconsistent 
nora ice scm system software development environment nora feature logic 
feature denotes property object feature os denotes underlying operating system 
simplest form feature term consists list pairs features values os unix ws db oracle feature terms configuration descriptions stored rules 
serves example configuration description query 
feature terms describe constraints preferences defaults supported 
versions object represented feature terms containing special object feature value object identifier 
example terms denote versions user interface module database module respectively ui object ui ws os unix ui object ui ws windows os dos db object db db os dos db object db db oracle os vms unix feature term configuration constructed intersection operator unification handles object feature special way union values intersection 
intersection fails corresponding features unified mutually inconsistent constraints 
example ui may combined db db ui db object dbg ws os unix db oracle ui db nora supports incremental construction configuration constraintbased guidance 
features specified step step selection menus simultaneously query inconsistent choices disabled nora 
example selecting unix operating system uniquely identifies configuration eliminating need choices 
nora may classified version oriented approach 
interesting note feature logic applied scm general way 
zeller proposes unified version model scm covers version oriented change oriented versioning 
particular changes modeled features included omitted see cov section 
summary table summarizes approaches described section 
different selection orders version product intertwined 
product space composed files components assumption object contents modular programs flat hierarchical 
formalisms describing version rules differ widely ranging command options fully developed query languages 
adele nora represent configuration descriptions stored rules uniform way 
clearcase approaches perform static binding 
nora adele support interactive construction configuration 
approaches supporting constraints backtrack wrong choices config excludes non determinism 
db feature os set valued indicated braces 
rcs clearcase config adele sio nora vers 
db 
selection order product version intertwined intertwined product product product space flat files file hierarchy flat modular programs hierarchical modular programs component hierarchy nested components version space version graphs version graphs revisions variants variants revisions version sets version sets conf 
descr 
formalism checkout options order expressions attribute tuple order expressions extended sql feature terms rule classes preferences rules constraints constraints preferences defaults constraints preferences constraints rule base formalism attribute functions order expressions order expressions feature terms rule classes constraints constraints preferences defaults constraints constraints configurator binding modes static dynamic static static static static degree automation automatic automatic automatic automatic interactive automatic interactive backtracking table 
comparison version oriented approaches change oriented models survey change oriented 
version oriented graphs change oriented origin conditional compilation 
conditional compilation addresses multiple maintenance problem storing multiple versions single file preprocessor statements control visibilities fragments sequences text lines 
editing source files embedded preprocessor statements may confusing 
change oriented approaches described automate management visibilities hide corresponding control expressions users offered single version view versioned database 
pie early approach change oriented versioning developed xerox parc 
pie manages configurations smalltalk programs internally represented graph data structures 
change placed layer 
layers aggregated contexts act search paths layers constructing context degrees freedom layer may included omitted second layers included arranged sequential order 
combinatorial complexity overcome defining contexts terms contexts aggregates contain consistent reusable combinations layers 
furthermore pie provides relationships document constraints combination layers 
example depends implies context containing include 
conversely repairs indicates bug layer fixed layer included selected 
pie enforce constraints 
documented relationships merely warn user possible inconsistencies 
aide de camp aide de camp describes versions products terms change sets relative base version 
change set describes physical change may affect multiple files 
finest grain change text line 
contrast layers change sets totally ordered creation times 
change set created applied change sets included product version 
change set may viewed switch turned 
aide de camp detects physical conflicts change set applied product version 
conflict occurs modification included change set refers text lines part product version 
furthermore aide de camp provides way merge tool combines alternative versions respect common base detects contradictory modifications text lines 
pie aide de camp support relationships detect inconsistent combinations change sets 
text editor supports simultaneous editing multiple versions text file 
text file consists collection fragments sequences words 
fragment visibility attached determines versions fragment belongs 
versioned file may vary multiple dimensions 
version space modeled table columns correspond dimensions rows represent specific versions fig 
similar approach 
db oracle informix informix ws windows os dos unix unix unix os unix db ws os unix db informix ws versions edit set view fig 

distinguishes edit set view 
edit set write filter controlling versions affected change 
edit set specified query example style help regular expressions edit set fig 
denotes unix versions 
view read filter selects edit set single version displayed user support stored version rules 
particular way state constraints combinations different dimensions 
cov change oriented versioning emphasizes management logical changes 
version space structured global options 
option defines dimension version space 
options may denote variants unix dos vms define different variants underlying operating system 
options may represent changes fix fix represent certain bug fixes 
option may bound true false may left unbound 
set option bindings corresponds region dimensional version space 
versioned database consists collection versioned fragments 
example fig 
see box database update left hand side 
sample database consists fragments denoted 
single version exist versions denoted respectively 
fragment version visibility attached 
visibility fragment version boolean expression describing product versions fragment version belongs 
example visibility unix 
means contained unix versions regardless window system selected 
cov designed multi version editing distinguishes read filter called choice write filter named ambition 
changes performed transactions ambition choice 
ambition choice sets option bindings 
choice extends ambition option bindings ambition included note clearcase sets view versioned database distinguish read write filter 
update unix fix version description dos vms unix windows fix unix fix fix unix unix dos windows single version view true windows dos evaluator ambition dos fix fix choice read filter write filter database update database update rule base fig 

change oriented versioning choice 
choice corresponds single point version space 
point contained region corresponding ambition 
example fig 
choice unix fix particular means change performed version runs unix window system 
ambition set fix 
indicates bug fix applied valid regardless operating system window system 
scope changes reflected visibilities assigned updated inserted fragments 
fig 
updated inserted 
fragment versions visibility fix 
top base mechanisms high level concepts provided 
validities express states versions tested released validities global refer product individual components 
validity defined boolean expression 
may referenced version description see ensure selected product version certain state may want tested version 
version description consists constraints preferences 
constraint mandatory condition option bindings 
preference consists option bindings enforced 
preferences weighted rational numbers 
positive number means binding option certain value preferred analogously negative number indicates option binding avoided 
fig 
version description requires inclusion fix constraint prefers inclusion unix fix unix keep version descriptions short aggregates introduced 
aggregate named version rule refers set mandatory preferred option bindings 
example aggregate denotes sequence fixes applied fixes fix fix fix rule base consists version rules form version descriptions 
aggregates stored rule base may referenced version descriptions 
note aggregates modularize rule base modules activated required mentioning names version descriptions 
furthermore defaults added implicitly version description evaluated 
fig 
version rules defaults express mutual exclusion options 
constraints defined means operator omega unix omega dos omega vms omega omega windows evaluator takes version description rule base calculates choice ambition 
general unique best solution satisfying version description 
heuristic algorithm searches solution guided preferences 
case ambition algorithm tries minimize number option bindings case choice tries maximize number options set true 
example ambition evaluates fix preferences narrow ambition 
affect choice options unix 
high level extensions change oriented versioning described companion 
introduces additional types constraints covered option dependencies describes tools managing option space supporting consistent version selection 
summary table summarizes change oriented models section 
blank entries clearly indicate research version rules required 
cov addresses issue extent 
pie aide cov vers 
db 
selection order version version version version product space smalltalk programs er database file entities text files eer database file entities version space layers change sets dimensions options conf 
descr 
formalism extensional extensional query example boolean expressions rule classes distinction constraints preferences rule base formalism relationships layers boolean expressions rule classes constraints constraints preferences defaults validities table 
comparison change oriented approaches table contrasts main features version oriented change oriented approaches configuring versioned products 
summarize strengths weaknesses change oriented models nice link change requests long transactions 
user directly refers change spanning multiple components bothered tedious task bookkeeping component versions logical change 
flexibility extremely high new component versions constructed required merging changes 
constraints change combinations managed carefully raw merging yields inconsistent result 
version oriented models product structure referenced version rules white box approach 
version oriented models may express product related version concepts alternative realization variants interface see adele go black box approach models 
hand version oriented models lack grouping logical changes affecting multiple components 
furthermore flexibility limited existing component versions construction configuration implicit merges 
suggest topics addressed version oriented models change oriented models version space version graphs revisions variants version attributes product level changes attributes controlling change application configuration component versions base version changes product structure white box approach query structure black box approach structure transparent query version rules expressions version attributes expressions change attributes constraints conditions version attributes consistent variant selection conditions change combinations implies versioning explicit members version graph implicit change combination modules versions changes table 
comparison version oriented change oriented models change oriented version oriented models complementary strengths 
initial attempts combine approaches undertaken done come unified model 
construction configuration viewed evaluation query deductive database 
deductive databases widely general scm 
potentials applying deductive databases need investigated 
focused primarily technical issues particular concerning formalisms writing version rules 
experiences gained actual discussed 
operate low semantic level raw text oriented merges change oriented approaches composition versioned files version oriented approaches 
raising semantic level may improve detection inconsistencies conflicts 
support required managing complexity version space 
version change oriented models version space may large software product evolves long period 
constraints excluding inconsistent combinations versions changes essential managing complexity 
furthermore appropriate visualization techniques may prove helpful see 
tacitly assumed rule base located top versioned database versioned 
rule base subject change underlying product evolves 
versioning rule base raises difficult modeling issues concerning relations evolution rule base product meta rules configuring rule base 
anonymous reviewers bj rn gulla bj rn helpful constructive comments 

bernard lacroix 
configuration management open environment 
goos hartmanis editors proceedings st european software engineering conference lncs pages 
springer verlag sept 

conradi 
configuration management 
course material nth june 


deltas 
byte pages january 

estublier 
configuration manager adele data base programs 
proceedings workshop software engineering environments large pages massachusetts june 

estublier 
configuration management notion tools 
winkler pages 

estublier 
adele configuration manager 
tichy pages 

goldstein bobrow 
layered approach software design 
technical report csl xerox parc 

gulla 
user support facilities software configuration management 
phd thesis nth trondheim 

gulla 
karlsson yeh 
change oriented version descriptions epos 
software engineering journal nov 

kaiser habermann 
environment system version control 
digest papers spring compcon pages 
ieee computer society press feb 


knowledge configuration management 
shriver editor proceedings st annual hawaii international conference system sciences pages 


cm challenge configuration management works 
tichy pages 

mclean jr configuration management large scale software development efforts 
proceedings workshop software engineering environments programming large pages massachusetts june 

lie conradi karlsson 
change oriented versioning 
ghezzi mcdermid editors proceedings nd european software engineering conference lncs pages 
springer verlag sept 

mackay 
state art concurrent distributed configuration management 
estublier editor proceedings th international workshop software configuration management lncs pages 
springer verlag 


managing version space 
proceedings th international workshop software configuration management 


larsen gulla conradi 
karlsson 
uniform versioning change oriented model 
proceedings th international workshop software configuration management preprint pages baltimore md may 

scacchi 
maintaining configurations evolving software systems 
ieee transactions software engineering se mar 

perry 
version control inscape environment 
proceedings th international conference software engineering pages monterey ca mar 

ramamohanarao harland 
deductive database languages systems 
vldb journal april 


source code control system 
ieee transactions software engineering se dec 

bernstein kruskal 
creation maintenance multiple versions 
winkler pages 

software maintenance development systems 
aide de camp product overview 

tichy editor 
configuration management 
john wiley sons new york 

tichy 
data model programming support environments 
proceedings ifip wg working conference automated tools information system design development pages jan 

tichy 
rcs system version control 
software practice experience july 

tichy 
tools software configuration management 
winkler pages 

winkler 
version control families large programs 
proceedings th international conference software engineering pages monterey ca mar 

winkler editor 
proceedings international workshop software version configuration control stuttgart germany 
german chapter acm teubner 

zeller 
unified version model configuration management 
proceedings acm sigsoft symposium foundations software engineering pages 

zeller snelting 
handling version sets feature logic 
proceedings th european software engineering conference lncs pages 
springer verlag 
article processed macro package llncs style 
