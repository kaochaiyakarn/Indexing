formal methods communication services dietrich 
hubaux institute computer communications applications ica swiss federal institute technology ch lausanne august survey formal methods applied development communication services 
report industrial academic projects consider different tele communication architectures related feature interaction problem 
survey results reported literature importantly extensive discussions industry investigate important industrial concerns criticisms formal methods development communication services 
report collaborative project swiss federal institute technology lausanne thomson industrial concerns taken account 
results project currently integrated industrial software development platform 
unreliable communication services easily trigger huge losses damage customer faith 
rectify users bad impressions telecom operator correct errors compensate unsatisfied customers 
today competitive markets customer faith difficult commodity restore 
formal methods fms advocated possible approach increase software reliability 
liberal meaning formal methods fm safe say formal methods rarely industry 
academics see formal methods inevitable software profession practitioners see formal methods irrelevant 
specifically interested formal methods applied development communication services 
main contributions follows 
survey formal methods applied development communication services 
excellent surveys formal methods general currently tackles specific area communication services 
pointed practice preference fms industrial acceptance 
report industrial academic projects separately explicitly identifying formal methods gained industry acceptance 
consider different tele communication architectures discuss related feature interaction problem 

survey results reported literature importantly extensive discussions industry analyze important industrial concerns criticisms formal methods development communication services reporting major barriers application fms communications industry 

collaborative project swiss federal institute technology lausanne paris industrial concerns taken consideration 
results project currently integrated industrial development platform providing strong evidence applicability formal methods industry specific needs ignored 
remainder chapter structured follows section explain mean communication services identify peculiarities 
section survey formal approaches communication services 
section discuss industrial concerns application formal methods show addressed formal methods research 
section describe carried collaboration show proposal pays attention industrial concerns 

peculiarities communication services section explain mean communication services identify peculiarities 
follow definition service defined meaningful set capabilities provided existing intended set systems utilize subscribers users network providers service providers seeing different perspective service 
term communication service refers telecommunication services internet services hybrid services 
telecommunication service defined service provided public switched telephone network mobile technology 
typical examples telecommunication services call forwarding originating call screening video conference services 
internet service defined service provided internet infrastructure 
hybrid service defined service spans network technologies especially public switched telephone network pstn internet 
example simple hybrid service click dial enables user request web browser connection set telephones connected pstn 
term frequently communications domain protocol 
protocol special set rules communicating points communication connection send signals back forth 
protocols exist levels communication connection 
protocols described industry international standard 
example internet tcp ip protocols consisting tcp transmission control protocol uses set rules exchange messages internet points information packet level ip internet protocol uses set rules send receive messages internet address level 
expressly refrain looking application formal methods communication protocols concentrate communication services 
acknowledge possible draw clear line communications protocols communications services cases tempted say service just protocol 
intuitively exclude works explicitly refer protocols 
concurrency distribution reactivity communication services belong class concurrent distributed reactive systems 
real time communications services meet real time deadlines means respond stimulus fixed necessarily range milliseconds time limit 
code size complexity industrial communication software huge code size composed thousands hundreds thousands lines implementation code 
large scale environment communications services operate large scale environment large scale refers major points wide geographical distribution ii high number participating objects processes iii high number users interacting service 
reliability availability fault tolerance marginal time acceptable communication systems 
increase reliability availability industrial communication systems developed considering fault tolerance quite essential point communication systems 
key characteristics communication systems theta operation seldomly restarted 
streams connectivity communications services incorporate streams provide sort connectivity cases user data conveyed connectionless network 
coexistence interoperability communication service coexist interoperate services 
heterogeneous environment authors point real peculiarity tele communication services singles set complex real time software nuclear plants aircraft environment system production system operation 
tremendous heterogeneity todays communication systems result historical evolutionary development perpetual new services technologies 
services newly introduced existing services extended changed updated cope heterogeneous environment 
long lived evolving communications systems long term investments existing systems constantly extended 
communication services offered long time period subject upgrades evolutions 
table peculiarities communication services characteristics public networks identified peculiarities telecommunication systems briefly discussed 
characteristics partly match characteristics communication services 
important characteristics communication services summarized table attributing specific meaning order listed 
come back peculiarities section 
survey formal methods communication services section survey application formal methods communication services 
look done industry academia investigate formal methods specific telecommunication architectures intelligent network tina look related feature interaction problem 
covers aspect describing industrial project feature inter action detection tina architecture referenced times discussed appropriate 
outside scope survey discuss advantages disadvantages formal method respect formal methods 
reader interested comparative study referred authors provide comparative case study esterel lotos sdl set eleven fundamental important criteria described mentioned fms evaluated criteria 
fsm finite state machines 
simple finite state machine composed states connected transitions 
relative simplicity finite state machines especially suitable formal analysis 
sdl specification description language extended finite state machine model supplemented features specifying data types 
sdl probably received attention industry formal method supported tools commercially available 
lotos language temporal ordering specification formal specification technique specifying concurrent distributed systems 
consists language specifying processes algebraic specification language called act 
estelle extended finite state machine language 
estelle specification defines system hierarchically structured state machines 
state machines communicate exchanging messages bi directional channels communication ports 
esterel synchronous programming language perfectly synchronous concurrency model concurrent processes able perform computations exchange information zero time 
non executable formal specification notation set theory order predicate logic 
temporal logic formal specification language description analysis time dependent behavioral aspects 
temporal logic extension conventional propositional logic incorporates special operators cater time 
temporal logics linear time temporal logic ltl actl action temporal logic 
promela protocol validation language 
spin tool devised validate promela specifications 

formal techniques larch tla temporal logic actions received limited attention tele communications community 
table formal techniques table lists frequently formal techniques 
formal method applied communication services finite state machines fsm petri nets promela esterel 
tele communications community paying special attention standardized lotos estelle sdl 
originally developed unambiguously specify protocol standards standardized years ago successfully applied protocol specification validation design errors number protocols 
number projects service design increased steadily tools available 
application protocol specification languages service engineering triggered extensions real time object orientation led fact formal methods 
formal methods industry reliable statistics faults communication systems 
starting telephone companies required notify federal communications commission outages affecting customers 
reports statistically analyzed 
analysis revealed interesting facts ffl overloads accounted percent outages percent time 
ffl software errors caused percent outages system time percent 
source failure vandalism 
telecommunication network multitude telecommunications software largest network worldwide reliable networks 
surprising telecommunications industry forefront formal methods research 
importance fms clearly acknowledged 
preference fms industrial acceptance tool support production quality standardized 
sdl fulfils requirements 
table summarizes projects formal methods applied design communications services industrial setting 
turns sdl promela communications industry industry paid attention formal methods lotos specification validation communication services 
temporal logic tl attracted interest industry connection sdl 
tl integrated commercial products 
fm esterel sdl sdl tl promela bellcore promela ltl bt bt sdl cselt promela deutsche telekom petri nets sdl dutch ptt sdl actl france el nortel sdl score sdl actl sni fsm tl table formal methods communications industry fm projects aimed designing implementing software ess electronic switching system 
formal methods applied longer time period 
deutsche telekom france el cnet tele score consortium ibm france cap telecom cap gemini innovation france el cnet ericsson telecom ab inesc ptt nl tele ab promotor uppsala ab verilog cselt abb corporate research nr 
split ess associated lucent 
jagadeesan described technique supporting tools automatically verify esterel programs satisfy safety properties 
verification properties automated translation temporal properties esterel compilation program parallel esterel model properties analysis resulting finite state machine satisfaction violations properties 
project described ran year period 
specification lines non commented sdl code written correctness properties formally specified verified sdl model 
result total serious design errors detected design requirements 
holzmann claims automated formal verification techniques industrial software design attempted scale 
best knowledge true 
holzmann points generation fms developed live promise engineering discipline scientific method 
lists characteristics mature engineering discipline minimally ffl discriminates requirements implementations possible explicit formal statements correctness requirements design independent design 
ffl uses engineering models prototypes verify design decisions 
ffl predict essential characteristics product built 
sdl esterel provide means statements correctness design independent design correctness requirements ess switching software expressed temporal logic 
weakness sdl expressing correctness requirements pointed 
proposal authors temporal logic actl express properties telecommunication services 
temporal logic project described deserves special attention describes step commercial product 
specification services intelligent network siemens informationssysteme munich germany university passau germany developed environment creation intelligent network services 
services described framework formally verified model checking 
service properties expressed temporal logic 
making formally specified constraints option service designer decide degree willing invest formality specification constraints leads faithful verification service design 
promising avenue follow 
need evolutionary revolutionary integration formal methods system development expressed 
projects produce complete formal specifications approach advocated british telecom leeds metropolitan university leads gradual formal specification 
add normal development process 
system specifications developed usual specifications transformed formal specification cselt developed application construction environment ace specification development generation tina services 
containing family graphical editors comprises compiler translates intermediate code specification promela 
spin tool model checker 
application formal description language specification tmn telecommunication management network interfaces studied shown specification osi management information model 
zave investigates promela specification telecommunication services 
joint semantics promela specifications written promela composed reasoned number ways tools available promela starting point investigation distributed feature composition virtual architecture detailed 
score consortium investigated mscs sdl actl produce formal specifications score recommends omt sdl corresponding supporting tools 
pointed lot done wants introduce methods industrial environment 
described starts identification industrial problems interviewing nortel engineers 
fms evaluated suitability sdl chosen formally specify multi media messaging subsystem 
formal methods academia formal methods design communications services heavily advocated academics 
formal method existence applied communication services 
table lists communication service related formal methods projects carried academic environment 
fm fsm petri nets lotos promela sdl tl table formal methods academia application lotos specification telephone systems example described 
papers address question integrate behavioral properties lotos specifications 
authors investigate lotos real time temporal logic called qtl specification verification multimedia services 
academic related feature interaction problem specific communication architectures discussed sections 
formal methods feature interactions significant amount application formal methods design communication services deals problem service interactions 
service interaction occurs addition new feature introducing new service system disrupts existing services 
service interactions desired service explicitly designed interact 
cases wants verify services interact exactly expected 
cases simply wants ensure behavior service alter composed supposedly non interacting services features 
yearly international workshop dedicated feature interaction fi problem related publications provide strong evidence importance problem relevance researchers 
table summarizes works related fi problem categorizes fm 
fm fsm petri nets promela sdl lotos tl table formal methods feature interactions approach described proposes detect feature interactions describing services layered finite state machines 
originating terminating call described simple finite state machines features added top layers 
similarly authors advocate finite state machines describe system behavior 
network considered black box service specifications descriptions desired terminal behaviors 
feature interactions modelled unwanted properties descriptions 
follow authors analyze weaknesses original proposal timing verification propose new method petri nets 
nakamura describe algorithm detection non deterministic features petri net model 
algorithm efficient typical detection algorithms state enumeration 
experimental results shown proposed algorithm may theoretically detect non determinism occur non determinism detected sample service specifications detected correctly 
features modelled building blocks combined complete descriptions 
features procedural representation form promela code assertions described linear time temporal logic 
similar spin tool check assertions expressed temporal logic described claims promela violated 
papers describe lotos describe features detect interactions 
temporal logic inspired lamport tla temporal logic actions describe different features 
features interact result inconsistent description 
approach described incorporates formal notations sdl petri nets mscs 
different formalisms interaction detection mechanisms proposed different phases service life cycle 
consistency global approach achieved defining models form basis methods 
formal methods specific architectures formal methods communication services concentrates specific communication architectures 
consider intelligent network telecommunications information networking architecture tina 
table summarizes approaches discussed 
arch 
fm lotos promela sdl fsm tl tina lotos tina odp lotos tina promela tina ltl tina sdl table formal methods specific architectures look formal approaches intelligent network bouma approach analyzing feature interactions cs capability set global functional plane 
desired behaviour service feature represented property satisfied lotos specification feature interaction problem appears satisfiability problem conjunction properties 
model checking simulation techniques identify violations composite properties 
etique bases approach fusion method object oriented development method basis construction services intelligent network 
fusion method formal allow automated validation specifications fusion notations extended formalized obtain language called fus 
validate fus specification translated promela subsequently spin tool validate corresponding promela specification 
described uses sdl validate test services 
models network model service plane model 
network model supports nodes built interaction detection ability architecture 
service plane model view telephone service mechanisms creation addition services 
network operators telecommunications equipment computer equipment manufacturers formed telecommunications information networking architecture consortium tina define validate common open software architecture provision telecommunication information services 
due evolving character tina doubts formal methods design implementation tina services early stage 
tina built odp concepts uses corba common object request broker architecture underlying platform services results obtained applying fms odp open distributed processing corba frameworks reused tina services 
approach described behavioral properties tina services expressed event behavioral abstraction linear time temporal logic ltl 
service implementation violated violating formally specified properties checked run time 
approach applied industrial desktop video conferencing service supported tool 
odp formal language similar tina odl object definition language offers capability formally specify behavior 
formal semantics lotos 
example specify plain old telephony system 
similarly authors start interface descriptions corba idl interface definition language tina odl lack behavioral description components investigate sdl behavior descriptions 
authors lotos design tina applications 
specifically specify verify tina service components odp computational viewpoint discuss compliance checks enterprise model odp carried 
concerns communications industry section look problems industry prevent hinder application formal methods industrial environment 
discuss important industrial concerns show industrial concerns addressed formal methods research 
industrial concerns may may justified may may agree outside scope investigate justified 
important industrial concerns 
argue actively addressing formal methods easier transfer mainstream service development show section 
formal methods applied simple personal preferences historical background researchers 
increasing number extensions formal description techniques taken example 
despite fact formal methods available years attracted reasonable interest industry academic research continues industrial criticism largely ignored 
formal methods communications industry shown survey noted vast majority projects carried departments 
far away integration formal methods mainstream development process 
considering existing fms sdl said gained wide acceptance industry 
industrial concerns discussed show major barriers application fms communications industry 
identified discussions industrial partners 
focus implementation vs models industrial statement thing counts final implementation model 
communications industry especially frequently argues proving correctness models pay provide guarantee proven properties preserved actual implementation 
key characteristics communication systems theta operation 
example switching system supposed available hours year period 
systems seldomly restarted leaves particularly vulnerable runtime problems memory faults 
problems related feature set systems implementation 
pass system tests occur field 
absence kind sophistication optimization design algorithms data structures formal specifications data packing optimal coding pointers dynamic storage allocation interrupts leads faithful representation industrial communications services 
course relevance formal model actual running program degree faithfulness model represents real executions final program 
pointed construction model close real life situations time consuming 
respect models detection feature interactions stated models academic nature high level lot interactions appear takes details real world system account 
similar drawn 
authors point models produced applying existing formal methods bear relation actual industrial software 
developing faithful models account larger set phenomena associated real executions approach closely final implementation 
obviously tradeoff degree detail incorporated model complexity 
newly developed formal model compared formal models little discussion different formal models reflect reality supposed represent 
formal analytical methods formal specification verification systematic development hard transfer mainstream software development shown clearly effort validating mathematical model contributes quality final implementation 
generation implementations possible avenue follow 
moment generation correctness preserving implementations validated design specifications matured level satisfies industry requirements 
far seen little way model reality studies experimental give confidence proposed validation techniques models value industrial implementations 
size large code vs toy examples industrial statement industrial communication systems enormous significantly complex academic examples 
academic examples easily extrapolated industrial size systems 
example development portion software ess switch took man years 
formal approach shown dining philosophers examples formal methods applied large industrial communication systems 
non trivial examples kept mind advocates formal approach quite easy construct select suitable application 
feasibility formal approach industrial service developed industry significantly different showing feasibility self defined example chosen works final analysis 
scaling frequently applied method making verification large systems practically feasible 
errors service involve thousands users deployed small number users verification process 
order deal systems different sizes formal specifications parameterizable 
additionally formal verification feasible common practice raise abstraction level 
raising abstraction level leads representation actual system model away reality 
model checking verifying system satisfies specification 
model checking requires examination reachable system states suffers state space explosion 
despite impressive progress model checking community years model checking computationally infeasible systems represented lower abstraction level faithful representation real system 
applicability industry goals formal approach showing feasibility industry provided example help significantly building credibility 
heterogeneous environment industrial statement problems encountered due arises heterogeneous environment 
heterogeneity increases time spent checking implemented service behaves correctly environment 
account environment communication services supposed run beneficial build formal models faithfully represent service environment 
considering enormous heterogeneity today communication systems tricky cases unattainable goal 
case reports formal methods explicitly state assumptions restrictions imposed validation process checked implementation platform environment respect assumptions 
example single assumption non preemptive character operation hold platform render entire validation procedure useless 
homogeneous environments assumptions known relatively easy check rarely true environment today communications systems providing high barrier validation highly models communications industry 
time market industrial statement simply don time develop large formal specifications 
introducing new services telephone network slow process deployed services offered long period 
lifetime new communication services especially internet services hybrid services shorter standard telecommunications services 
furthermore compared past time market services significantly reduced 
increased pace development communication services influences application formal techniques development communication services market pressure increases time market decreases increased development time hardly acceptable 
studies outside domain communication service show formal methods reduce development time confront reports formal methods projects came time providing fuzzy idea actual costs formal methods 
advocates formal methods frequently provide information size formal specifications developed information time took develop specifications rarely included reports 
consequential detailed provision kind information important step detailed investigation 
obviously necessarily case research results collaborative project nortel university toronto author claims fms increase quality software lengthening development cycle 
projects described investigate usefulness fms quantitatively analyzing productivity changes highly important better understanding real costs benefits fms 
improve return investment formal methods application provide benefits possible users 
jackson wing state naive presumption formalization useful right dropped 
removing ambiguities provision additional benefits formality appealing industry test case generation formal specifications verification formal model generation correctness preserving implementations just examples 
jackson wing point industry reasons adopt formal methods benefits formalization obtained immediately analysis require massive investment 
note existing formal methods conventional manner achieve goals 
formal methods add ons normal development process favored industry 
confidence communication service required safety critical applications time permits formal approaches added 
examples provided described 
tool support industrial statement formal approach complemented adequate tool support 
project requirements adopted integration formal methods ffl tools fit smoothly existing design environment 
ffl usage tools requires minimal training 
ffl tools deal effectively complexity application 
project requirements led decision favor sdl 
identified requirements assumed general requirements applicability formal methods tools industry 
goguen lists requirements success domain specific tools 
narrow defined understood problem domain addressed 
community users potential financial resources understand domain 
tool graphical user interface intuitive user community embodying language conventions 
tool takes large grain approach synthesizing procedures statements synthesizes systems modules may library components synthesize code putting 
inside tool powerful engine encapsulates formal methods concepts algorithms may theorem prover code generator users know works 
requirements definitely satisfied communication services 
industrial development process industrial statement formal approach fit typical development process usable engineers 
projects industry academia formal methods applied academic partner simple goal demonstrating application formal methods useful 
seen little goal providing formal methods tools applied engineers 
ultimate goal formal methods research develop approaches applied engineers daily 
proving theorems pencil definitely suited catch interest industry immediately rejected industry doomed fail industrial environment 
case notions notations engineers significantly improve chances smooth integration formal methods industry 
omt object modelling technique uml unified modelling language msc message sequence charts keywords software engineers familiar 
years considerable research effort connection formal methods typical development processes software combining benefits formal methods mainstream development methods fusion uml 
trend continue 
important issue addressed inadequately fm research iterative development communication services 
formal models kept consistent changing system requirements code 
authors point possibly biggest obstacles applying formal modelling techniques requires firm commitments entire development team 
transferring formality industry example years researchers swiss federal institute technology lausanne working collaborative project industrial partners thomson 
today academic formal methods research academics industry see helpful focus collaboration providing approach industry daily 
thomson adopted proposal development platforms object oriented distributed applications platform providing strong evidence applicability formal methods industry specific needs ignored 
section show proposal addresses industrial concerns discussed section 
outside scope give detailed technical description 
technical details provided far necessary discussion proposal caught interest industry integrated industrial platform 
project focused validation object oriented distributed systems general corba common object request broker architecture systems particular 
corba platform choice tina architecture development internet services 
extensions fault tolerance real time standardized corba technology appealing development communication services 
platform designed built thomson common laboratory industry provided corba software platform specifically addresses requirements highly available dependable autonomous systems 
basis tenet uml specifications build application possible integrating real time fault tolerant properties architectural level 
order check services developed platform behave correctly validated proposal 
brief description approach service validation general idea approach service validation follows formally specify behavioral properties service construction satisfy 
properties expressed formal model service 
formal service model contain formal behavior description formal model formal property specification complementary 
formal model described detail 
corba services significant part formal model automatically means tool derived idl interface definition language specification service 
idl specification written level abstraction particularly suitable providing basis express behavioral properties 
advantages expressing properties idl abstraction level appealing property making items idl specification inherits implementation language independent character idl 
standardized mapping idl implementation languages enables automate process finding idl information implementation level 
behavioral constraints specified formalism linear time temporal logic ltl 
formally specified properties expressed model checked corresponding service implementation written java service run time 
general illustration approach see illustration approach works identification specification important properties service development essential tasks development process carried software engineers steps service life cycle 
properties explicitly implicitly stated development documents informal semi formal way 
approach software engineer identifies behavioral properties specified formally importance 
number formally specified properties adjusted needed 
check final implementation violated violating formally specified properties suffices give properties monitoring testing tool developed 
automatically map model properties implementation properties check service run time implemented system violating properties expressed model 
description 
express behavioral constraints independently specific implementation language relying completely set observable events 
idea event behavioral abstraction frequently testing debugging especially useful accommodating heterogeneous platforms multilanguage programming environments 
model provide set predefined events appropriate modelling industrial strength object oriented systems 
events model mapped straightforward manner events occur execution final implementation 
set events determined collaborating industrial players account trade offs flexibility complexity model property language 
relating proposal industrial concerns discuss approach service validation addresses aforementioned industrial concerns 
industrial statement thing counts final implementation model 
solution formally specified properties expressed service model checked final implementation service run time 
framework constructing formal models described detail allows definition formal models abstraction level faithfully represents real executions final implementation 
evolved large number iterations subsequent improvements number discussions industrial partners 
starting point construction model investigation today development platforms distributed services industry 
validating properties service model check final implementation service run time directly contributing increased confidence final implementation industrial statement industrial communication systems huge significantly complex academic examples 
solution case study taken industrial service example influence selection service 
approach applied desktop video conferencing system developed dutch telecom currently applied air traffic management system thomson 
cases choice application outside control 
formal reasoning validation properties model theoretically possible focus investigation 
industrial statement problems encountered due arises heterogeneous environment 
solution properties checked run time final implementation 
checking formally specified properties respected final implementation run time automatically check service behaves correctly environment 
industrial statement simply don time develop large formal specifications 
solution approach places focus formal specification arbitrary number behavioral constraints 
development large formal specifications rarely feasible industrial projects 
engineers mathematics derive important properties proposed design 
described indicates temporal logic serve possible vehicle specification correctness requirements 
approach number behavioral constraints adjusted needs possible concentrate limited number properties assumed important possible specify properties 
case typical development process changed 
construction formal model behavioral constraints expressed straightforward large extend done automatically 
industrial statement formal approach complemented adequate tool support 
solution developed monitoring testing tool 
encapsulates formal methods concepts provides guidance support specification properties 
properties specified guidance constantly checked final service implementation observed run time property violated service error message user 
detailed description 
prototype able demonstrate usefulness approach convince industrial partner integrate environment 
manual formal techniques restricted formal specification properties service construction satisfy 
formally specifying properties property specifier guided allows assemble different events temporally relate events 
ltl specification behavior benefit known solutions constructing test oracles 
generation test oracles ltl formulae done automatically 
industrial statement formal approach fit typical development process usable engineers 
solution combination approach uml currently investigated 
main characteristics platform currently developed thomson uml specifications build application possible 
automatic semi automatic generation formal properties uml documents currently investigated 
surveyed formal methods communication services industry academia noted formal methods attracted attention industry 
sdl said gained wide acceptance communications industry 
industry shown considerable interest promela temporal logic formal methods lotos academic tools little application communication services industry 
listed discussed major industrial concerns applicability formal methods 
points seriously taken consideration formal methods community trigger changes focus formal methods research 
peculiarities communication services concurrency real time understood today heterogeneous environment communication services run complexity industrial communication services inadequately addressed 
believe integration impressive results formal methods research past industry helped formal mechanism model concurrency providing satisfying answers industrial concerns discussed 
briefly reported collaborative project swiss federal institute technology thomson 
proposed approach service validation currently integrated industrial development platform engineers daily 
successful transfer formal methods industry possible explicitly addressing industrial concerns discussed 
author researchers engineers thomson interesting discussions 
authors comments 
jagadeesan von 
framework evaluating specification methods reactive systems experience report 
ieee transactions software engineering june 
bryant 
applying formal methods structured development 
journal selected areas communications february 
bates 
debugging heterogeneous distributed systems event models behavior 
acm transactions computer systems february 
bellcore 
switching systems generic requirements 
bellcore 
bennett lindner 
sdl ess switching system development 
proceedings th international conference software engineering telecommunication switching systems eindhoven netherlands april 
blair blair 
stefani 
specification architecture multimedia systems open distributed processing 
computer networks isdn systems special issue specification architecture 
blom bol kempe 
automatic detection feature interactions temporal logic 
cheng ohta editors feature interactions telecommunications systems iii pages 
ios press 
blom jonsson kempe 
temporal logic modular specification telephone services 
bouma velthuijsen editors feature interactions telecommunications systems pages 
ios press 
martini 
ace environment specifying developing generating tina services 
proceedings fifth international symposium integrated network management san diego ca usa may 
bouma velthuijsen editors 
feature interactions telecommunications systems 
ios press 
bouma 
formal analysis feature interactions model checking 
proceedings international workshop feature interactions telecommunications systems st petersburg fl usa december 
bouma levelt 
formalization properties feature interaction detection experience real life situation 

editors telecommunication service infrastructure number lecture notes computer science pages 
springer verlag 

automated detection feature interactions 
pages 
ios press 
combes pettersson ruiz 
consistent interaction detection comprehensive approach integrated service creation 
pages 
ios press 
ccitt recommendation 
specification description language sdl 
ccitt sg contribution com 
cheng 
formal model incremental service specification interaction management support 
pages 
ios press 
cheng ohta editors 
feature interactions telecommunications systems iii 
ios press 
clarke wing 
formal methods state art directions 
acm computing surveys december 
coleman arnold hayes 
object oriented development fusion method 
prentice hall 
score consortium 
score deliverables 
www tdr dk public score score deliverables html score consortium 
industry requirements service creation environment 
score identifier available april 
score consortium 
score presentation version 
score identifier available december 
score consortium 
report methods tools service creation third version volume service interaction 
score available december 
dietrich 
hubaux 
modelling testing object oriented distributed systems linear time temporal logic 
submitted theory practice object systems 
dietrich 
hubaux 
testing temporal logic properties distributed systems 
editors ifip international workshop testing communicating systems pages russia august 
kluwer academic publishers 
dillon yu 
oracles checking temporal properties concurrent systems 
proceedings nd acm sigsoft symposium foundations software engineering volume pages december 
dini logrippo editors 
feature interactions telecommunication networks iv 
ios press 
eberlein 
development new telecommunications services expert system 
bt technology journal january 

etique 
service specification verification validation intelligent network 
phd thesis swiss federal institute technology lausanne 
logrippo 
specifying features analysing interactions lotos environment 
pages 
ios press 
logrippo st 
formal specification telephone systems lotos constraint oriented approach 
computer networks isdn systems pages 
logrippo st 
structural models specifying telephone systems 
computer networks isdn systems pages 
proceedings international workshop feature interactions telecommunications software systems st petersburg fl december 
flora holmquist grady 
telecommunications software design virtual finite state machines 
proceedings international switching symposium iss berlin germany pages april 
fault tolerant corba draft document omg 
glass 
formal methods surrogate serious software concern 
ieee computer pages april 
goguen 
formal methods social context software development 
tap soft th international conference theory practice software development number lecture notes computer science pages 
springer verlag may 
ch 
gr ferguson 
neglected topics feature interactions mechanisms architectures requirements 
dini logrippo editors feature interactions telecommunication networks iv pages 
ios press 
gries 
need useful formal logic 
ieee computer april 

lin 
extending telecommunications systems problem 
ieee computer august 
holzmann 
design validation computer protocols 
prentice hall 
holzmann 
theory practice formal method 
proceedings ifip world computer congress volume pages hamburg germany august 
north holland publ amsterdam netherlands 
holzmann patti 
validating sdl specifications experiment 
proceedings ninth international workshop protocol specification testing verification 

hubaux 
le boudec 
impact internet telecommunications architectures 
computer networks isdn systems 
appear 
iso 
lotos formal description technique temporal ordering observational behavior 
iso tc sc november 
iso 
estelle formal description technique extended state transition model 
iso tc sc 
itu 
general recommendations telephone switching signalling intelligent network series intelligent network 
jackson wing 
lightweight formal methods 
ieee computer pages april 
jackson zave 
distributed feature composition virtual architecture telecommunications services 
ieee transactions software engineering pages october 
jagadeesan 
formal approach reactive systems software telecommunications application esterel 
journal formal methods system design 
jean marc ez alain le fran cois 
validating distributed software modeled uml 
pierre alain muller jean editors proceedings uml international workshop france june pages 
france 
ohta 
new proposal feature interaction detection elimination 
pages 
ios press 
keller 
formal description osi management information structure prerequisite formal specifications tmn interfaces 
pan european telecommunication service infrastructure number lecture notes computer science pages 
springer verlag 
kelly king masson 
service validation testing 

ios press 

tina object definition language tina odl manual 
tina june 
koch 
systeme aus des odp computational viewpoint 
gmd studien nr 
gesellschaft fur mathematik und october 

applying lotos design tina applications 
bowman derrick editors proceedings second ifip international conference formal methods open object distributed systems pages 
chapman hall 
kuhn 
sources failure public switched telephone network 
computer april 
lamport 
tla pictures 
ieee transactions software engineering pages september 
lin 
lin 
building block approach detecting resolving feature interactions 

ios press 
dietrich 
hubaux 
tina service validation project 
ieee icc conference atlanta june 
dietrich 
hubaux 
etique 
applying formal techniques development hybrid services challenges directions 
ieee communications magazine july 
dietrich 
run time monitoring distributed applications 
proceedings middleware lake district england september 

platform 
st malo nd ieee international symposium object oriented real time distributed computing may 
manna pnueli 
faithfulness formal models 
mathematical foundations computer science number lecture notes computer science pages 
springer verlag 

simple language expressing properties telecommunication services features 
technical report pu ptt research april 
mulder 
tina glossary terms version 
tina january 
nakamura 
petri net detection method non deterministic feature interactions experimental evaluation 
dini logrippo editors feature interactions telecommunication networks iv pages 
ios press 
ohta harada 
classification detection resolution service interactions telecommunication services 

ios press 
austin 
overview survey formal methods industry 
technical report national physical laboratory may 
iona technologies plc 
programmer guide september 
real time corba joint revised submission 
available ftp ftp omg org pub docs orbos pdf december 
smith reed 
telecommunications system engineering sdl 
north holland 

engineering telecommunication services sdl 
proceedings conference formal methods open object distributed systems 
ieee computer society 
computer magazine april 
ieee computer society 
communications magazine july 
steffen margaria cla en braun 
service creation environment 
pact nd international conference practical application constraint technology london uk 
logrippo 
experience modelling telecommunications systems odp 

stefani editors formal methods open object distributed systems pages 
chapman hall 
time rover 
www time rover com 
tina 
www com 
wong 
formalizing requirements commercial setting case study 
master thesis university toronto graduate department computer science 
wong chechik 
applying formal methods telecommunications system commercial setting 
th international conference software engineering applications paris france november 
zave 
secrets call forwarding specification case study 
editors formal description techniques viii pages 
chapman hall 
zave 
formal description telecommunication services promela proceedings nineteenth international nato summer school 
