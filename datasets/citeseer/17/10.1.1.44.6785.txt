creating ontological metadata digital library content services peter weinstein william birmingham university michigan digital library artificial intelligence laboratory university michigan beal ave ann arbor mi eecs umich edu formal ontologies represent knowledge digital library content services 
formal ontologies define concepts logic frame inheritance structure 
expressiveness precision structures supports computational reasoning important ways 
focuses creation ontological metadata 
create ontological content metadata generating marc machine readable cataloging data 
marc contains information hard exploit computationally 
particular relationships works implicit shared values natural language notes 
conversion process involves specifying ontological model mapping marc ontology reasoning data create explicit links works 
service metadata supplied providers wish participate fully digital library implemented decentralized multi agent system 
agents advertise describing services terms ontologically defined concepts 
reason descriptions organize subsumption taxonomies 
agents find best available services meet needs describing needs requiring priori knowledge agents 
infrastructure demonstrated usefulness multi agent system organized computational economy 
fundamental issue building libraries organize large amounts information users find need need 
librarians developed sophisticated classification schemes cataloging rules creating metadata 
metadata describes works contained libraries 
metadata enhances works usefulness providing basis search generally identifying intellectual historical contexts 
digital libraries greater demands metadata traditional libraries 
quantity information access provided large variety services help users define satisfy needs 
services routinely provided human assistance 
essential metadata digital libraries amenable computation 
digital libraries capable reasoning contents reformulate queries customize services task user deduce new relations works forth 
short metadata support inference 
metadata formal ontologies support sound computational reasoning 
formal ontologies logic define concepts relation concepts 
describe digital library works instances ontology concepts 
reason relations attributes defined ontology relations works 
define services ontology concepts reason definitions 
example identify service specialization relationship asserted explicitly definition 
focuses creation ontological metadata digital library content services 
formal ontology appropriate technique modeling complex domains 
concept definitions form webs relations limited trees 
concepts descriptive dimensions attributes may partially described level granularity combination dimensions may viewed perspectives accessed different sequences attribute values 
example represent song simultaneously music linguistic expression possibly fiction needing prioritize characteristics respect 
user search audio tool hear group songs songs played certain audio tool 
ontology retrieval supports access perspective level granularity 
comparison declarative formalisms expressiveness ontologies relational databases force commitments particular combinations orderings dimensions 
ontological model content centered hierarchy concepts loosely describes creation works derived works 
conception expression adds description content manifestation adds publishing format materialization adds production format instance address particular copy 
respects model articulates librarians traditional world view borrows heavily proposal international federation library associations 
creation ontological content metadata practical generate marc network development marc standards office leveraging tremendous investment format 
marc records share data example uniform title publisher may infer derived derived common ancestor 
marc includes natural language notes information derivation 
computers inferences shared data process natural language interpret notes preferable users waiting 
generating ontological metadata marc form preprocessing relationships implicit marc converted explicit labeled relations amenable manipulation computers 
currently trying develop specific ontological models digital library services believe premature 
provide strong incentives providers describe services ontologically available 
system university michigan digital library umdl birmingham decentralized agent architecture durfee mullen 
defining characteristic architecture agents form teams agents solve problems 
agents choose team agents time basis agents ontological definitions services 
provides high level overview agents cooperating answer user content query 
user agent asks mediator agent recommend collection agents appropriate query 
mediator agent communicates mediator agents help recommendation 
agent provides specific service 
example agent provide thesaurus know topic hierarchies keep track individual agent locations 
user agent directly contacts recommended collection agents execute query 
form team user agent mediator agents collection agents execute query find collection forming agent team satisfy query difference service metadata users agents degree detail 
user typically aware need thesaurus 
occasion user want thesaurus directly 
agent services may hidden users 
compare approaches creation content metadata service metadata ask create content metadata manner analogous approach service metadata 
build infrastructure encourages information providers supply metadata 
potentially kinds users researchers students contribute metadata knowledge bases 
computational reasoning facilitate edit filter manage apply user contributions 
role professional cataloging community change correspondingly increasingly focused quality control creating metadata 
suspect increasing flood new information eventually force changes direction 
institutional technical obstacles creating metadata way 
consider kind knowledge sharing research 
remainder structured follows 
section defines formal ontology describes representation description logic kinds reasoning available 
section reports creation ontological metadata content 
section presents umdl ontology digital library content 
section describes generation knowledge base metadata sample marc records 
section describes infrastructure incorporates creation ontological service metadata growth system 
section explains runtime service classification process agents advertise find services ontological metadata 
section illustrates service classification context umdl experimental system society agents organized computational economy 
section discusses advantages disadvantages aspects approach compared related 
section concludes 
formal ontologies artificial intelligence ontology set vocabulary definitions expresses community consensus knowledge domain 
knowledge meant stable time reused solve problems 
note concrete utilitarian approach quite different ontology philosophy concerns nature reality apart human endeavor 
formal ontologies define vocabulary logic 
syntax semantics logic depends representation language see genesereth fikes genesereth fikes kif borgida patel schneider borgida patel schneider description logics 
focus description logics roughly equivalent order logic expressiveness limited second order capabilities 
different order logic primarily focus inheritance relations 
ontological concepts typically organized subsumption taxonomy 
concepts defined specializations parents appending additional relations 
semantically instances denote objects concepts denote sets objects relations denote sets tuples objects 
concept subsumes instance logical models map symbols universe objects extensions denoted sets objects concepts 
meaning concept appropriately construed function maps logical models concept extension guarino ontologies understood nets constraints restrict set possible models 
concept definitions may construed explicitly frames 
definitions include name set relations concepts natural language description serves strictly documentation 
slightly different contexts relations may alternatively called roles slots dimensions 
subsumption may called relation 
relation indicates membership instance concept 
objects instances concept inherit relations 
objects instantiate associated concepts linked relations called role fillers just fillers 
restrictions placed filler values numerical restrictions constraints relation fillers 
instantiation concept may partial roles filled waiting fillers 
way understand nature formal ontologies compare formal structures 
consider spectrum structures define vocabulary 
informal spectrum library classification schemes dewey library congress 
structures trees symbols relation symbols called imprecise subsumption instantiation 
moving middle spectrum find informal ontologies wordnet miller 
structures kinds relations links important 
furthermore informal ontologies trees directed graphs concepts multiple parents 
formal spectrum ontologies ontolingua library stanford farquhar fikes 
variety precision relations elaborated point entire meaning central concepts captured relations concepts 
informal ontologies authoritative meaning terms natural language descriptions 
formal ontologies descriptive text documentation 
analogy imagine studying program 
read comments learn program works keep mind documentation may wrong code executes 
ontology static structure behavior 
representation system determines ontology 
description logic represent ontologies specifically loom macgregor description logic system family woods schmolze 
description logic originally developed semantic networks starting classic woods woods drove home need remove ambiguity formal specification semantics concepts links 
description logic systems susceptible high computational costs 
options complex tradeoffs ability reason various ways various times efficiency scalability system 
discuss issue section 
description logics automatic classification algorithmically places new concept definitions proper location ontology 
judgment concept subsumes structure content concept definitions 
example services defined kind recommend 
line service indicates inheritance recommend concept remaining lines restrict values slots 
initial colon identifies loom keyword 
symbols ontologies 
query planning schools subsume info finder role corresponds role definition filler value subsumes corresponding filler value 
automatic classification depends precise meaning relation ontology 
see woods woods thorough discussion automatic classification 
technology confused automatic classification keywords non logical approaches 
intensional check subsumption description logic amenable inference modus ponens deductive process allows entailed facts 
ontological metadata content section describes umdl ontology digital library content process converting sample marc records knowledge base ontological metadata 
ontology set concept definitions product group discussions hand coding stylized english loom 
result converting marc data loom knowledge base set interrelated instances ontology concepts 
umdl content ontology central concepts ontology focusing model bibliographic relations relationships works 
time writing ontology includes concepts including concepts built loom 
central concepts primitive 
words concept definitions relations sufficient justify typing instance member concept explicitly asserted member 
word caution concept definitions come easily 
spent hours considering alternative ways conceptualize familiar concepts song document substantially effort extracting order slippery areas genre upper case ontology concept definitions opposed meaning world 
experience learned important lessons 
need find ways ontological definition easier 
problem discussed weinstein weinstein 
second believe attempt impose single conceptualization digital libraries bound fail 
www umich edu ontology ontology html 
query planning schools recommend recommend audience school comparisons high school info finder recommend recommend audience high school recommend topic science seek classification system everybody system may useful approach ontological modeling may useful 
particular research support semantic heterogeneity see section may increase feasibility tolerating local variation language sacrificing ability compute language 
hierarchy backbone digital library content ontology hierarchy concepts loosely models creation table 
hierarchy revises extends clarifies proposal 
creative process starts idea 
long call conception 
content specified expression 
expression published manifestation 
physical embodiment manifestation materialization digital materialization digitization 
particular copy materialization instance confused description logic instance concept 
believe hierarchy consistent informal definitions yee yee library community 
note defined concept ambiguous natural language word useful conversation fully partially instantiated objects hierarchy 
table hierarchy concept definition example conception concept plan design 
idea story 
expression conception specified content 
manuscript novel 
manifestation expression packaged publishing format 
published edition novel 
materialization digitization manifestation embodied physical format 
novel coded sgml 
instance copy digitization 
particular file disk 
precisely level hierarchy defined attributes associated 
provides overview 
unlabelled links indicate kind relations 
conception identified uniform title creator sequential number numbered musical works 
expression genre 
complex part ontology natural language term refer discuss separately 
manifestation divided recorded books journals live performances ongoing scientific observations 
materialization digital format includes text image video kinds formats 
kind kind conception expression manifestation digitization recorded live publishing format digital format instance address genre mode medium 
uniform title creator materialization 
production format extends extends extends extends attributes associated hierarchy relationship levels hierarchy somewhat trickier immediately apparent 
want lower levels inherit higher 
instance kind materialization manifestation 
instance uniform title retrieved directly navigating way hierarchy 
want sibling instances share data levels hierarchy 
object oriented systems instantiating object allocates separate memory members inherited class 
description logic fortunately cake eat concept hierarchy defined kind extending concept 
inherited value constrained value associated extends relation 
currently loom properly enforce constraints achieve equivalent results limited application procedurally enforcing constraints 
genre especially difficult define area ontology provisional 
genre library congress network development marc standards office general meaning english 
single definition capture meaning required genre refers mode subsidiary concepts 
mode multiple dimensions 
divides fiction non fiction mutually exclusive 
medium sound symbolic visual presentation mutually exclusive 
instance song fiction sound symbolic time 
illustrates structure genre 
concepts top boxes underlined concepts concepts brackets kinds underlined concepts unlabelled links indicate inheritance 
full structure tree web connections 
example concept song defined stylized natural language song 
music lyrics linguistic style tongue 
stating song music indicates kind inheritance relation concepts identify roles 
mode music noise data linguistic static fiction sound symbolic visual medium sequential notation approach structure style english spanish chinese 
musical 
mystery romance science fiction historical 
novel play movie short story poem 
structure painting photograph drawing 
approach romantic 
metadata form key song 
prose verse tongue approach rock jazz classical 
non fiction approach structure theoretical experimental 
report essay transcript 
instrument structure genre addition level hierarchy associated creators constrained certain types 
example expression level editors translators 
relations works families related works simple elegant structure amenable efficient maintenance manipulation computers 
structures trees illustrated 
conceptions multiple expressions expression conception level instance 
full metadata particular copy includes single description logic instance level 
conception expression manifestation digitization instance translate sequel reprint reformat copy derivation relations kind relation works occurs particular level hierarchy 
example conceptions translation expression manifestation level reformatting involves copying instances 
similar constraints apply relations add continue describe works derive 
general call relationships describing creation ontogenic relations 
services operate higher levels hierarchy involve rights relatively profound 
example borrowing book service instance level 
digital library reformat document microsoft word operation digitization level 
customized news service manifestation level 
collaborative editing expression level 
licensing rights fictional characters example conception level 
part relations different ontogenic ones implemented 
illustrates current proposal hypothetical scenario involving textbook teaching 
second edition adds diskette containing sample programs 
contains relations established level hierarchy starting level contained considered independent relative original 
links level required avoid ambiguity contents original subsequently new works created derived contained 
extends part contains contains revised conception intro manifestation diskette expression programs manifestation diskette manifestation st edition expression text expression samples adding part ontological model changes nature debate requires main entry yee 
subjective decision apparently required determine level hierarchy new deserves independent instance shared original 
example programs existed examples original text share expression separate manifestation 
drawn separate expression consistent judgment sample programs created second edition 
ontology refines issue distinguishing levels description 
ontology changes practical context decision extent choice determined attributes associated level 
example successor share genre predecessor share expression 
potential benefits ontology metadata provide important benefits precise queries 
example consider amateur musician needs learn part 
pose query equivalent find score beethoven fifth piano arranged cello recorded performance available 
similar query posed specifying particular 
traditional distinction access descriptive metadata blurred ontologybased data purposes 
attributes designated controlled vocabulary continue particularly useful access 
explicit paths vague precise queries 
vague query identifies values desired attributes 
ontologies attributes defined relations attributes providing numerous intuitively natural sequences prompting users articulate requirements 
frequently query refinement occur starting top hierarchy progressing downwards 
queries refined requesting increasingly specific versions known attributes adding values attributes associated known values 
integrating catalogs 
kind reasoning merge descriptions generating knowledge base applied integrate multiple catalogs see section 
service calculation license needs 
license requirements function kind service provided involved licensing agreement covers 
ontology model relations works provide language expressing license agreements means computing fees associated services runtime 
see section preliminary direction 
knowledge base metadata section describes process converting marc data knowledge base ontological metadata user interface browsing knowledge base 
originally requested marc records university michigan library works beethoven 
idea provide data works related sample variety publishing formats genres 
actual sample contains records total library related beethoven 
generation marc generating knowledge base involves mapping data marc ontology reasoning data identify relations works 
process fully automatic certainly fully automatable 
generate knowledge base steps 
convert binary marc data text tagged ontology concepts 

extract coded attributes values natural language comments tagged text 

convert tagged text loom assertions 
stage value treated distinct object 

reason data establish explicit relations works 
convert marc fields values tagged text set control files describe marc format relation umdl ontology 
primary control file maps selected marc field code ontology concepts 
mappings conditioned marc value permit single field mapped multiple ontological concepts 
second control file establishes priorities situations multiple marc fields map ontological concept 
third control file interface available www umich edu ontology beethoven demo html 
identifies location codes marc fields contingent marc record type bibliographic level 
fourth control file includes information code including length location code value table 
beethoven knowledge base extraction coded attributes values marc notes done human rapid mechanical way achieved computationally lexicon straightforward natural language processing 
example value compiled edited robbins translates re robbins re keystroke saving code role editor 
spent average seconds record transcription records simply easier hand write program 
conversion tagged text loom assertions tell statements trivial postpone reasoning data loom 
marc record assigned item number associated materialization dealing metadata include instance level 
fifth control file provides paths link destination ontology concepts materialization 
step path separate loom instance created marc value linked instance destination concept 
execution tell statements knowledge base contains metadata value assertion separate 
example item number materialization manifestation expression conception 
furthermore single materializations frequently linked multiple instances intermediate concepts music instance value related concept 
stage far interesting 
reason relations implicit marc data explicit 
treatment considered crude pass 
effort invested developing increasingly refined rules glean additional information 
see interesting review relationships works represented past current catalogs 
frequently partial imprecise data suggests relationships confirmed 
cases assert relations considered tentative 
example knowledge base includes works missing uniform titles manifestation title beethoven und beethoven 
consider conceptions works tentatively 
definition certain relations true errors false tentative relations merely false 
instances merged common identity certain 
tentatively relation asserted link 
liberal tentative relations conservative certain relations 
tentative relations incorrect 
result deduction uses tentative relation tentative 
processing includes steps merge multiple instances intermediate concepts unification 
unification algorithm uses cardinality constraints part ontology definitions 
instance asserted type subsumed multiple values permitted instances merged 
identify merge shared conceptions 
conceptions uniform title creator sequential number numbered musical works considered 
uniform title missing manifestation title 
differences punctuation case ignored 
identify merge expressions conception genre associated creator values match manifestation level certain derivation recognized 
identify merge manifestations expression publisher publication date match publishing format values instance subset instance 
merge manifestations materialization level certain derivation recognized 
identify conceptions tentatively rule described ignoring missing creator names permissive matching algorithm comparing titles 
identify expressions tentatively matching genre creators 
identify manifestations tentatively shared expression require expressions tentatively shared conception 
establish relations preceding works marc notes describing derivation relations 
predecessor family generate metadata describes known predecessor including levels hierarchy level derivation information marc note 
nineteen types relations transcribed marc data mapped relations ontology 
values transcribed notes successor compared ordinary values describing candidate predecessor works 
source relations subset attributes compared author editor language title publisher city date publisher item number 
points awarded match value depending source relation 
match candidate predecessor considered certain tentative points accumulated respective thresholds 
establish certain tentative reproduction relations materialization level triggered facsimile production format original date marc publication date code 
generated beethoven knowledge base sun sparcstation 
stages written completed seconds 
stage written lisp loom required hours 
binary marc data required mb disk 
lisp image resulting knowledge base requires mb space efficient format loads execution half minute 
table summarizes transformation knowledge base reasoning proceeds 
initial loading data instance level hierarchy marc record 
merged column shows results steps 
steps affect number instances 
new column shows number predecessors generated represent works outside collection steps 
column includes empty instances lower levels generated complete family new predecessor instances created higher levels 
table number hierarchy instances raw merged new conceptions expressions manifestations materializations results reflect nature marc data sample reasoning process 
single salient feature relative success merging works conception level compared levels 
primarily due titles uniform title creator names 
uniform title designed link bibliographic records 
surprisingly output reflects 
original conceptions included uniform title merged yield conceptions 
marc records tentatively conception 
sample marc records extracted university library random sense include include records uniform title 
believe included records related beethoven obtained comparable rate merging conceptions 
surmise rate smaller records library included picked beethoven domain expected find relations works 
potential merging levels conception depends relative percent total universe contained sample 
example convincing evidence merging expressions find certain manifestation level derivation works example reprinted version shares conception published year 
able merge pairs expressions basis 
course library purchase owns closely related version 
ontological model genre associated expression complex part ontology rules reasoning merging expressions correspondingly complex 
rules applied effort simplified greatest degree rules compared 
able confirm relatively certain equivalences level relatively large number tentative matches consider expressions tentatively expression 
marc contains notes ontogenic relations expression level 
ontogenic relation expression level identifies sharing conception level marc illuminates strongly distinction greatest traditional interest item hand new 
able establish cases expression sample derived way expression sample 
cases original expression sample generated new expressions including known predecessors 
table lists frequency different types ontogenic relations identified 
certain relations considered tentative relations semantics know level certainty relation holds 
single predecessor relations successors 
converse hold frequent 
results fanout exclusively tentative may inability merge new instances generated predecessor sample 
new partial instances generate identifying ontogenic relations may interest users 
generally merged full descriptions original works catalogs integrated knowledge base 
browsing knowledge base developed java interface help library researchers develop feeling structure ontology metadata 
initial window lets researcher select identifying type restriction list genre publishing format attributes sound recordings 
researcher specify keyword included fields including creator title topic editor 
table types ontogenic relations identified beethoven sample level relation certain predecessors certain successors tentative predecessors tentative successors conception sequel expression critiques revised supplements translated manifestation reprinted republished materialization reproduced total selecting second window supports browsing families navigating relations connect works 
metadata associated selected current displayed text area left window 
middle relations link 
picking relation list related works metadata related displayed 
related current process repeats 
browsing navigating relations users various institutional contexts may potentially contribute knowledge base 
suggest possibility demonstration interface provides button lets user confirm tentative relationship displayed works 
consider confirmed intermediate level certainty tentative certain 
ontological metadata services section describes role ontological metadata services decentralized agent digital library architecture 
system requires functional equivalent ontological service metadata meet design goal extensibility 
furthermore agents enhance competitiveness ontological service metadata 
architecture assures development ontological service metadata 
umdl service classifier agent sca maintains ontologies agent services process call runtime service classification 
section describes agents advertise find services sca 
section describes sca roles experimental multi agent system organized computational economy 
simulation developers communicate directly sca web url www umich edu ontology sca html 
illustrates benefits runtime service classification level individual agents manifest level system 
section summarizes benefits 
agent communication requires shared language 
assume agents adhere linguistic constraints levels 
level message structure order bytes describe communicated object require protocol equivalent corba object management group 
level agent dialogue structure conversational interaction kqml required arpa knowledge sharing initiative 
kqml messages include pairs attributes values describe purpose context message 
content field contains substance communication part talks world 
assume syntax content value constrained language kif genesereth fikes translated language sca 
terminology included content value reserved words syntax language terms ontologies 
ontologies define linguistic constraints level symbol semantics 
specific xerox ilu inter language unification version corba kqml sca uses loom 
umdl service ontologies divided nested modules ontology 
general includes services consider part generic digital library 
second module adds concepts specific umdl implementation auctions 
third module describes agent services 
call ontology dynamic agents define new service concepts runtime 
contrast static ontologies fixed changed slowly time human committees 
runtime service classification sca implemented umdl agent class durfee handles communication levels message structure agent dialogue 
message syntax loom 
advertise service agent submits service description sca uses automatic classification locate description agent services ontology 
service description terms nested umdl ontologies 
agent includes preferred label classification request desired name service 
sca responds classification requests ways service description classified new concept preferred label returned recommended service label 
service description logically equivalent service classified label existing service returned 
concept new label service description sca automatically generates new label 
agent provides multiple services classifies separately 
possible different kinds agents provide service sca ensures label 
example description service recommend collection topic science middle school audiences 
line indicates inheritance recommend concept second third lines restrict values slots 
initial colon identifies loom keyword 
symbols ontologies 
service concepts treated defined primitive support recognition descriptions 
example service description classification kl systems deeply rooted bifurcation concepts denote sets objects instances denote individual objects 
example classification operates concepts retrieval instances 
fillers middle school science concepts classification description instances retrieval advertised description 
sca automatically asserts fillers instances necessary 
agents variety strategies learn classified services 
single query suffices series queries systematically explore dynamic ontology 
loom query expression language full order expressiveness 
variables may chained traverse ontological relationships restrict matches services specified role fillers reveal fillers services selected 
query successful sca returns list sets bindings set includes value variable query expression 
example service description query asks service recommend collection service suitable audience kind school 
symbols starting question mark 
variables 
example service description query loom query language extended custom predicate functions accept reject combination bindings considered query 
sca provides wrapper functions invoked entire query 
predicate recommend recommend audience middle school recommend topic science recommend service recommend audience service audience school audience functions execute loom queries wrapper functions typically include loom query 
example shows example specific subsuming wrapper function ranks subsuming services order weighted proximity role fillers ideal 
wrapper search upwards concept taxonomy increasingly general services available 
phrase loom query identifies candidate services 
line characterizes ideal solution 
priorities list weights importance query dimension 
attenuation factors quantify judgment proximity compensating density development static ontology role fillers defined 
wrapper specific subsuming sca automatically construct new concepts existing terms 
define inclusive concept wrapper function returns definition concept subsumes list concept labels 
new definition concept subject language restriction 
loom concept language includes disjunction unrestricted common subsuming concept uninteresting disjunction input concepts 
elements concept definitions fit form specified considered 
inclusive concept defined having 
intersection superconcepts 
roles relations shared 
filler value restrictions intersection role value restriction superconcepts 
direct superconcepts relation value restrictions syntax definitions constructed define inclusive concept wrapper sca service markets society umdl service markets society sms durfee mullen computational economy 
agents buy sell services markets 
markets implemented auctions provide bidding protocol buyers sellers negotiate price 
approach provides efficient resource allocation surprisingly wrapper specific subsuming recommend service recommend audience service audience school audience recommend topic service topic topic science middle school audience biology topic priorities attenuation factors reasonable communication costs wellman 
basic mechanism familiar 
selling agent computational load increases costs produce marginal services 
agent asks higher price receives business effectively sheds load producers 
full discussion rationale implementation computational economy scope durfee 
durfee mullen provides overview 
sms simulation deliver digital library services users 
identify quantity service 
example purchase hour worth query planning bundle queries 
current sms includes single sca kinds agents 
sca 
dozen instances agents may active simultaneously 
time new agent instances active active ones close 
sms agents sca subscribe ontologies 
services sold query planning agents 
agents instantiations task planning agent generalized goal pursuing procedural reasoner vidal durfee 
configured creation provide query planning service specialized hypothetical possible services 
space services cross product values attributes 
possible values arranged small subsumption hierarchies 
attribute audience example audience school professional middle school high school government business kinds professional 
services purchased user interface agents 
agents seek buy services potentially provided 
service may provided active identify best available service search strategies increasing generality specific subsuming increasing specificity general subsumed 
search criteria strategy changed time 
seek buy services periodically rate subject interactive modification 
auction manager agents define markets maintain appropriate population auctions service market 
sms single ama spawns auction service provided 
asks ama auction sell services auction active selling service ama spawns new auction 
ama uses sca classify auction service description checks registry see auction providing service active 
illustrates sca interactions agents 
agents ovals ontologies rectangles arrows connecting agents represent messages paraphrased natural language 
communicate sca agents terminology nested ontologies 
thin line sca jagged show set available terms dynamic ama add concepts agent services ontology 
messages font styles correspond ontology labels plain italics upper case highlight source terminology 
nested ontologies service classifier sca 
look auction hs sci auction hs auction school 
libraries umdl dynamic auction manager ama user interface uia query planner 
best auction buy query planning high 

label auction sell hs sci 

th auction called auction hs sci need auction sell hs sci plan queries high school science 
ca ll hs sci agent interaction sca sms shows agents sca define new terminology existing terms runtime 
auctions sell service don need know service 
ama asks sca service label auction service label know service 
sca classifies auction service characteristics inferred service label 
sca respond uia request auction terms static ontologies label ama define auction service 
concepts sca dynamic ontology hide knowledge just words chunk meaning natural language 
appropriate hiding knowledge reduces system complexity increases reusability maintainability 
sms scenario illustrates capacity system utilize new agents requiring modification existing agents 
example shows display reports status uia requesting query planning appropriate high school biology search strategy identifies general available service subsumes desired service 
prior snapshot shown agent buying agent selling query planning high school science 
sms experimenter spawns new agent service subsumes request specifically existing agents uia switches prompting buy new agent seen 
similarly sms experimenter shuts new agent uia automatically reverts buying high school science query planning best service available meet needs 
buying agent automatically switching satisfactory service sms scenario markets include providers different service descriptions markets sell goods subsume advertised services seller 
scenario user agents learn identify subset providers provide relatively fast results compared providers 
user agents sca define new concept includes advertised services fast providers excludes services slower providers 
request users auction manager creates new specialized market 
sellers provide fast service participate new relatively specialized market 
third party development runtime service classification fosters evolution society meet user needs encouraging third party development new agents 
sca identifies opportunities 
examining gap service requests recommendations entrepreneurs identify niches services desired currently available 
reduces agent entry costs 
existing agents may automatically switch new agent requiring modification notification routine advertising 
benefits derive technology service classification way 
technically key declarative description services organized enable ranking available services target search strategy 
practice agents requesting services state requests terms need terms know currently available 
periodically repeat search agents previous experience 
sms illustrates behavior 
discussion section compare research similar objectives 
scope discussion include efforts create metadata significantly complex powerful potential applications currently available 
organize discussion considering issues related representation modeling degree necessary share syntactic semantic constraints 
representation selecting representation language usually difficult decision 
fundamental problem tradeoff expressiveness tractability 
informally expressiveness degree generality complexity encoded statements language 
tractability degree efficiency possible interpreting reasoning language 
expressiveness tractability facets depending expressing computing respectively 
choice representation highly sensitive definition system objectives 
possible translate different representations appropriate different tasks gruber 
statement relatively expressive language translated relatively simple language loss information hard formulate general rules appropriate ways simplify 
translation add information course 
practical issue determine representation store knowledge expressive important ways anticipated applications feasibly maintained translated languages needed 
ontological models bibliographic relations advantages proposals new catalog structures expressive representations 
idea variations extend marc fields explicit links works 
marc highly redundant especially records 
redundant data reduces efficiency storage updating 
serious threat digital libraries prospect overwhelming users numerous versions similar works 
marc archaic file organization 
possible convert marc idiosyncratic record structure field codes subfield codes value conditioning indicators standard formats 
need impedes utilization advances mainstream database technology 
proposals explore relational databases store new catalogs green 
systems fast reliable massive quantities data 
unfortunately relational technology best suited applications banking large quantities highly standardized data 
complexity bibliographic data normalization green 
normalization process data divided separate table domain entity indexed combination dimensional values provides unique key record 
bibliographic data requires descriptive dimensions partial descriptions multiple levels granularity combination dimensions viewing perspectives access different sequences dimensional values 
relational design forces commitment particular combinations orderings dimensions 
complex domains result proliferation tables destroys efficiency maintainability 
object oriented databases appropriate complex domains 
proposed object oriented catalog model similar 
ontologies object oriented class structure declaratively encoded 
typical object oriented systems class structure encoded procedurally programming language data structure 
information procedurally encoded accessible reasoning 
example standard built way determine type object 
course developers add methods return object type superclasses subclasses 
done way developers heading back road description logic representation systems reason ontologies 
generating ontological content metadata description logic expressive ways ways 
description logic greatest asset ability automatic classification 
automatic classification generate knowledge base metadata important support user queries 
deductive object oriented databases seek combine logic support object oriented structures kifer 
systems automatic classification deducing new individuals relations handle large quantities data efficiently 
hand formal way reason uncertainty useful generating ontological content metadata uncertainty handled description logic 
example ontology contains attributes corresponding marc data 
deduced values 
illustrate biography sound visual medium deduce book 
kind reasoning vigorously pursued default non monotonic logic 
relatively fine grained evaluation degree uncertainty associated proposition afforded probability approaches valuable 
see hunter hunter overview methods reasoning uncertainty 
unfortunately known approach entirely satisfactory 
sort ad hoc compromise adding tentative relations description logic unavoidable 
automatic classification vital runtime service classification 
application reasons description logic concepts content metadata represented instances 
idea split description logic systems parts relatively heavy duty part concepts part managing large number instances 
new idea kl systems hybrid design woods schmolze 
poor performance particular existing description logic systems necessarily mean description logic general handle large knowledge bases 
various proofs showing subsumption algorithms classification npcomplete quite point concept definitions generally grow arbitrarily large biggest problem classification general concepts take time proportionate size concept taxonomy woods 
loom example expressive system huge array capabilities including truth maintenance default reasoning full order query language disjunction negation concept definitions 
loom surprisingly fast situations slow 
high level general finding empirical study description logic performance showed performance quadratic size knowledge base kudenko clear bottlenecks systems come long way time study 
new version loom implemented lisp new classic brachman mcguinness 
possible reimplement description logic customized application needs 
research underway achieved speedup orders magnitude way 
model proposals new catalog structures hierarchies levels see overview 

advantage having fewer levels long loom expressive kl systems support default implications cost sacrificing forms inference relates concept forming operator 
level adds information 
associated attributes remain need attached 
borrowed heavily proposal considered starting point 
model central hierarchy consisting concepts expression manifestation item 
renamed conception attributes levels part mean 
added materialization needed place attach digital formats renamed item instance clarity copy better green green 
big advantage model compared believe derives ontological relational approach 
defines meaning terms pages confusing text 
define level hierarchy precise association attributes ontologically defined 
note hierarchy imposes dimensional ordering avoid 
illustrates alternative structure expression manifestation digitization complementary subconcepts conception instance inherits 
model new expression creates new instance shares old manifestation digitization 
conception instance digitization manifestation expression alternative structure advantage structured conceptualization reduces redundant metadata cases minor changes expression level 
concerned particular versioning problem derives ease modifying electronic documents resulting proliferation similar works 
new version creates redundant metadata depending type modification 
new version requires new digitization little redundancy metadata occurs umdl hierarchy 
minor change content document requires new expression lower levels hierarchy duplicated 
structure new expression node required 
chose hierarchy structured model believe useful supporting user inquiry 
techniques traditionally version control storing changes version replicating information stays applied metadata reducing disadvantage hierarchy 
syntactic semantic flexibility project taken approach similar runtime service classification 
agents infosleuth project mcc bayardo nodine unruh advertise submitting ontology descriptions services 
broker agents reason match requests services descriptions 
infosleuth ontologies highly self descriptive descriptions talk frames 
enables translation alternative syntaxes support different types reasoning 
approach comparison semantically rich 
organize space potential services maintaining taxonomy services ultimate intention supporting communication requiring developers agree term semantics design time 
infosleuth agents communicate ontologies objects manipulate little attempt represent meaning objects relationships 
call language semantically heterogeneous single terms disjoint overlapping sets objects different terms overlapping sets 
infosleuth service classification umdl handle semantic heterogeneity sca assumes agents share ontologies 
infosleuth syntax vary shared symbols assumed share semantics 
system grows decentralized manner semantic heterogeneity inevitable space problems infinite lexicons 
library world semantic heterogeneity manifests incompatible metadata sets 
semantic heterogeneity formidable problem 
restrictions syntax semantics process language development easier create shared understanding ontologies constrained contexts 
precise mapping ontologies requires manual process difficult time consuming 
types concept mismatches easily handled deeply rooted subtle lehmann visser jones 
imprecise mapping potentially amenable automation 
methods necessarily start sort overlap source target ontologies 
overlap form shared typical instances lehmann cohn shared concepts campbell shapiro shared parents terms source target ontologies inherit 
currently adapt approach assuming restricted form semantic heterogeneity call differentiated ontologies weinstein 
concepts differentiated ontologies shared inherit definitional structure concepts shared 
hypothetically society agents starts agents subscribing ontologies 
time new increasingly specialized agents join society agents developers define new ontologies describe adding new relations concepts definitions existing ontologies 
union differentiated ontologies approximately single ontology 
permit monotonic growth union 
expect agents participate communities defined sca associated particular differentiated ontology 
match inter community requests candidate target expressions building evaluating rough mappings 
structures include set correspondences concepts relations source target expressions 
expressions coded description logic represented graphs concepts nodes relations edges borgida patel schneider 
rough mappings nodes pairs matched concepts edges matched relations 
rough mappings identify syntactic similarity structural isomorphism 
pair expressions alternative mappings 
largest densely linked ranked best 
mapping algorithm extends artificial intelligence research analogy see gentner gentner 
organize digital library content services formal ontologies 
umdl content ontology models bibliographic relations works 
families related works tree structure 
common attributes generally associated upper shared levels hierarchy greatly reducing redundant data 
possible automatically create ontological content metadata existing metadata 
generated knowledge base sample marc records 
process identifies relationships implicit data explicit 
obtain ontological service metadata agents seeking advertise 
service classifier agents description logic automatically classify definitions subsumption taxonomies recommend best available services agents requests terms need 
results reported small demonstrations intend large systems 
expect ontological model digital library content useful working domain far complete detail 
procedure converting marc records ontological knowledge base may useful efforts enrich existing metadata 
anticipate mapping data described multiple kinds metadata families differentiated ontologies support loosely integrated query service 
description logic right tool runtime service classification 
applying sca straightforward yields interesting behavior 
example sms agents automatically switch new agents closely fit needs 
agents reason way expressiveness precision ontological metadata 
acknowledgments gene judy instrumental development umdl ontology digital library content 
tracy mullen park jose vidal contributed substantially sms edmund durfee steady guide critic 
anonymous referees accurate critique submission draft 
supported nsf arpa nasa digital library initiative iri 
arpa knowledge sharing initiative 
specification kqml agent communication language arpa knowledge sharing initiative external interfaces working group 
retriever cs umbc edu kqml 
bayardo brice cichocki fowler helal kashyap martin nodine rashid rusinkiewicz shea unruh woelk 
infosleuth agent semantic integration information open dynamic environments 
austin tx mcc 
www mcc com projects infosleuth papers sigmod final ps 
birmingham 

university michigan digital library father library 
digital library proceedings june 
www si umich edu umdl pubs html 
borgida patel schneider 
semantics complete algorithm subsumption classic description language 
journal artificial intelligence research 
brachman mcguinness 

living classic kl language 
principles semantic networks 
sowa 
san mateo california morgan kaufmann 
campbell shapiro 
mediation overview 
ijcai workshop basic ontological issues knowledge sharing montreal 
durfee 

agent architecture university michigan digital library 
special issue iee british computer society journal software engineering developing agent systems 
durfee mullen park vidal weinstein 
dynamics umdl service market society 
matthias klusch gerhard editors cooperative information agents ii lnai pp 

springer 
farquhar fikes rice 
ontolingua server tool collaborative ontology construction 
palo alto california computer science department stanford university 
genesereth fikes 
knowledge interchange format version manual 
palo alto california computer science department stanford university 
gentner 

mechanisms analogical learning 
readings machine learning 
shavlik dietterich morgan kauffman 
green 

design relational database large scale bibliographic retrieval 
information technology libraries 
gruber 

translation approach portable ontology specifications 
knowledge acquisition 
guarino 

semantic matching formal ontological distinctions information organization extraction integration 
information extraction multidisciplinary approach emerging information technology 
ed 
pazienza lecture notes computer science vol 
springer 


object oriented cataloging 
information technology libraries 
kudenko 

empirical analysis terminological representation systems 
artificial intelligence 
hunter 

uncertainty information systems 
london mcgraw hill 
international federation library associations 
study functional requirements bibliographic records 
frankfurt am main germany deutsche 


dood dl need integration 
intelligent access heterogeneous information workshop krdb athens greece 
kifer 

deductive object data languages quest integration 
th intl 
conf 
deductive object oriented databases singapore springer 


conceptual plan description control bibliographic works 
school library service 
new york columbia university 
lehmann 

combining ontologies thesauri standards 
ijcai workshop basic ontological issues knowledge sharing montreal canada 
lehmann cohn 
egg yolk reliability hierarchy semantic data integration sorts prototypes 
third international acm conference information knowledge management cikm new york acm press 
macgregor 

evolving technology knowledge representation systems 
principles semantic networks 
sowa 
san mateo california morgan kauffman 
miller 

wordnet line lexical database 
international journal lexicography 
network development marc standards office 
format bibliographic data including guidelines content designation 
washington usa library congress cataloging distribution service 
nodine unruh 
facilitating open communication agent systems infosleuth infrastructure 
object management group 
corba common object request broker architecture specification release 


history linking devices 
library resources technical services 


bibliographic relationships 
international conference principles development toronto canada 
vidal durfee 
task planning agents umdl 
proceedings fourth international conference information knowledge management cikm workshop intelligent information agents 
ece sc edu papers index html 
visser jones 

analysis ontology mismatches heterogeneity versus interoperability 
aaai spring symposium ontological engineering palo alto california 
weinstein 

agent communication semantically heterogenous societies 
www umich edu papers html 
weinstein 
seed ontologies growing digital libraries distributed intelligent systems 
second acm international conference digital libraries philadelphia pa usa 
wellman 

market oriented programming environment application distributed multicommodity flow problems 
journal artificial intelligence research 
woods 

link foundations semantic networks 
readings knowledge representation 
brachman levesque 
los altos california morgan kauffman 
woods 

understanding subsumption taxonomy framework progress 
principles semantic networks 
sowa 
san mateo california morgan kaufmann publishers 
woods schmolze 
kl family 
semantic networks artificial intelligence 
ed 
lehmann pergamon press 
yee 


part user objects catalog 
cataloging classification quarterly 
