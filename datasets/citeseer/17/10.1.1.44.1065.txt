guillotine subdivisions approximate polygonal subdivisions simple polynomial time approximation scheme geometric tsp mst related problems joseph mitchell siam comput 
society industrial applied mathematics vol 
pp 

show polygonal subdivision plane converted subdivision length times original subdivision small constant guillotine subdivisions simple recursive structure allows search shortest subdivisions polynomial time dynamic programming 
particular consequence main theorem simple polynomial time approximation scheme geometric instances network optimization problems including steiner minimum spanning tree traveling salesperson problem tsp mst problem 
key words 
approximation algorithms polynomial time approximation scheme traveling salesperson problem mst steiner minimal trees guillotine subdivisions computational geometry ams subject classifications 
pii 


obtain simple polynomial time approximation scheme geometric instances network optimization problems including steiner minimum spanning tree traveling salesperson problem tsp mst problem 
method concept guillotine subdivision simple extension approximation method mitchell considered case :10.1.1.44.1065
roughly speaking guillotine subdivision polygonal subdivision property exists line cut intersection subdivision edges consists small number connected components subdivisions side line guillotine 
upper bound number connected components allows apply dynamic programming optimize guillotine subdivisions succinct specification subproblems interact cut 
key method theorem showing polygonal subdivision converted guillotine subdivision adding set edges total length small times original subdivision depending metric 
dynamic programming optimize appropriate class guillotine subdivisions obtain fixed approximation algorithms run polynomial time various network optimization problems 
related 
decades wealth research problems studied graph versions problems geometric versions 
standard textbook algorithms networks discusses see 
survey tsp refer received editors september accepted publication revised form july published electronically march 
research supported part hughes research laboratories nsf ccr ccr 
www siam org journals html department applied mathematics statistics state university new york stony brook ny ams sunysb edu 
simple ptas geometric tsp book edited lawler survey approximation algorithms refer book edited hochbaum 
geometric optimization problems considered known nphard 
polynomial time approximation algorithms known allowing get constant factor optimal 
open polynomial time achieve approximation factor fixed polynomial time approximation scheme ptas known 
particular factor better christofides bound known euclidean tsp 
point minor modification previous result see leads ptas various geometric optimization problems including tsp steiner tree mst :10.1.1.44.1065
exciting development arora announced ptas euclidean tsp problems considered achieving essentially results report decomposition schemes somewhat similar 
arora remarkable results weeks 
arora generalized method higher dimensions obtaining running time log dimensions 
dimensional tsp arora estimates analysis yields time bound roughly adds careful analysis yield roughly give analysis giving explicit exponent time get factor optimal euclidean planar tsp terms time bound 

guillotine subdivisions 
follow notation somewhat generalized :10.1.1.44.1065
consider polygonal subdivision planar straight line graph edges vertices facets 
denote union edge segments denote vertices assume loss generality restricted unit square int 
facet face bounded polygon possibly holes 
length sum lengths edges edges horizontal vertical say rectilinear 
closed axis aligned rectangle window definitions fix attention window line cut respect horizontal vertical int 
intersection int cut int restriction window consists discrete possibly empty set subsegments 
segments may single points crosses edge 
endpoints subsegments called endpoints respect 
points crosses boundary considered endpoints 
number endpoints points denoted 
order 
positive integer define span respect follows 
defined possibly zero length line segment pm joining mth endpoint pm mth endpoints 
see horizontal vertical cut perfect cut respect particular trivially perfect cut 
similarly perfect single point 
perfect 
see example 
joseph mitchell fig 

definition span 
fig 

vertical cuts perfect perfect 
cut perfect perfect 
say guillotine subdivision respect window int exists perfect cut respect guillotine respect windows closed half planes induced 
say guillotine subdivision guillotine respect unit square guillotine subdivision illustrated cut indicate perfect cut 

main theorem 
rectilinear subdivisions proof main theorem directly follows minor change concept darkness require walls block light boundary :10.1.1.44.1065
proof copy proof replacing 
theorem 
rectilinear subdivision edge set length positive integer exists guillotine rectilinear subdivision sg length edge set contains simple ptas geometric tsp cut cut cut cut cut cut cut cut cut cut cut cut cut cut cut cut fig 

example guillotine rectilinear subdivision 
joseph mitchell fig 

subsegment pq dark length charged levels lie levels lie 
proof 
convert guillotine subdivision sg adding new set horizontal vertical edges total length construction recursive stage show exists cut respect current window initially box ord add span appropriately charging length 
add perfect cut respect fact restrict special discrete set horizontal vertical cuts determined coordinates original vertices subdivision midpoints consecutive coordinates note perfect cut respect exists simply proceed recursively side cut 
say point cut dark respect int endpoints strictly side line perpendicular 
say subsegment dark respect points segment dark respect important property dark points 
assume loss generality horizontal 
dark portion general union subsegments endpoints may dark points 
terms length measure dark portion discrete set endpoints relevant 
pq open subsegment dark portion 
charge length pq bottoms subsegments edges lie pq tops subsegments edges lie pq know edges blocking pq top bottom 
charge pq length half charging levels units charge half charging levels units charge 
illustrate dark subsegment pq length charged levels 
think edges walls ective blocking light light go walls stopped hits mth wall line dark illuminated light boundary direction simple ptas geometric tsp call cut favorable total length dark portion great length span 
lemma shows favorable cut exists special discrete set 
favorable cut add span edge set charging length recurse side cut new windows 
portion charged side due cut levels boundary windows side levels boundary windows deeper recursion contain portion 
portion charged side top bottom portion pay total length times charge side 
new edges added spans charged lie window boundaries serve portion cut dark 
note order cut favorable perfect segment fact segments parallel open half planes induced recursion terminate finite number steps 
total length spans favorable cuts total length spans perfect cuts done 
prove key lemma guarantees existence favorable cut 
proof lemma uses particularly simple argument elementary calculus reversing order integration 
appears repeat completeness 
lemma 
subdivision window favorable cut 
proof 
show favorable cut horizontal vertical 
denote length span respect vertical line 
define lies outside projection axis 
dx simply area set points dark respect horizontal cuts 
similarly define length span horizontal line dy 
assume loss generality claim exists horizontal favorable cut claim exists horizontal cut length dark portion large length span 
see note computed switching order integration slicing region horizontally vertically dy length intersection horizontal line length dark portion horizontal line 
get dy dy 
values exists 
horizontal line cut satisfying claim lemma 
get vertical cut satisfying claim 
note rectilinear case piecewise constant discontinuities corresponding vertices select discontinuity midpoint discontinuities 
general polygonal subdivisions 
consider subdivision edges rectilinear 
moment reflection reveals charging scheme key lemma quite general really joseph mitchell edges 
fact proof main theorem goes exactly adding favorable cuts horizontal vertical charging added length original length subdivision 
address issue discretization cuts order specify dynamic program termination recursion converts arbitrary subdivision guillotine subdivision 
approach earlier drafts discretization orientations discretization su ciently fine grid 
opt modify slightly previous definition guillotine subdivision follows 
assume loss generality vertices common coordinate 
ew denote subset consisting union segments having endpoint inside boundary combinatorial type respect window ordered listing sides identities closed line segments ew intersect side considered open line segment identities line segments ew intersect corners say minimal respect exist strictly contained having combinatorial type standard critical placement arguments see degrees freedom minimal window determined contact pairs defined vertex contact side corner contact segment ew 
minimal windows 
window containing vertex denote minimal window contained having combinatorial type 
exist 
say guillotine subdivision respect window int exists perfect cut respect minimal window guillotine respect windows closed half planes induced 
note minimal necessarily windows combinatorial type di erent theorem 
polygonal subdivision edge set length positive integer exists guillotine polygonal subdivision sg length edge set contains proof 
proof exactly follows rectilinear case theorem recursive construction charging scheme lemma applied particular arbitrary window minimal shrinking process slide right side inward event side hits vertex endpoint side strikes segment ew case pinned right side move top side left side bottom side 
case move inwards sides incident corner endpoint struck segment ew keeping corner contact segment event type occurs 
know ew endpoints inside know slide corner sides move inward move outward 
case event type done moving sides pinned proceed move inwards sides processing sides order right top left bottom 
case event type second corner window struck segment ew proceed slide sides inward simultaneously keeping pinned corners sliding respective segments ew may having sides moving inwards possibly degenerate case corners restricted slide specific segments ew segments ew endpoint know eventually event type collision vertex 
happens sides pinned 
simple ptas geometric tsp minimal window show convert guillotine subdivision sg adding new set horizontal vertical bridge segments total length 
restrict attention special subset horizontal vertical cuts cuts classified combinatorial types new windows create 
di erence mention origin term bound 
comes fact side inclined segment may charged twice vertically horizontally 
specifically charge assigned segment times sum lengths projections times length 

applications 
discuss main theorem applied leading polynomial time approximation schemes np hard optimization problems set sites plane 
steiner tree problem determine tree minimum total length spans visits set points problem opposed minimum spanning tree mst problem solvable exactly log time points euclidean plane tree allowed vertices steiner points points steiner mst problem integer determine tree possibly steiner points minimum total length spans points tsp determine tour cycle minimum length visits point set sites 
minimum length euclidean tsp tour necessarily visit site exactly simple polygon closed polygonal walk self intersect 
tsp determine minimum length tour subset points 
mst problem integer determine tree vertices set minimum total length spans points 
steiner tree 
dynamic programming algorithm computes approximation steiner mst steiner tree metric generalizes immediately case guillotine subdivisions :10.1.1.44.1065
factor case get factor exactly algorithm works endpoints side rectangular subproblem side 
choices integer specifies number sites visited subproblem choices rectangle bounding subproblem choices endpoints side rectangle choices cut endpoints cut choices partition get time 
case need choose value partition select cut forced visit sites subproblem factor drops leaving time bound 
euclidean metric essentially algorithms augment set candidate approximate steiner points steiner point optimal tree rounded candidate points increasing size tree 
contrast rectilinear case assume steiner points lie exactly vertices grid induced horizontal vertical lines points new candidates need added joseph mitchell grid points potential subdivision vertices dynamic programming recursion searches shortest possible guillotine subdivision 
choice set works regular square grid points spacing diam nm steiner point optimal tree rounded grid point adding segment length diam nm adds length diam diam optimal tree length optimal tree 
dynamic programming algorithm searches minimum length guillotine subdivision spans points allowing vertices subdivision placed points corollary 
fixed positive integer set points plane time algorithm compute steiner spanning tree steiner mst length factor minimum 

tsp 
tsp apply dynamic programming main theorem gives easy way decompose problem recursively 
corollary 
fixed positive integer algorithm compute approximate tsp euclidean length factor optimal 
metric factor time bound 
proof 
details euclidean metric details metric similar 
minimum length tsp tour denote length 
structure proof typical approximation results show transformed special type subdivision length give dynamic programming algorithm compute exactly shortest subdivision having edge set special type show obtain tour resulting subdivision tour having length subdivision 
transforming know simple polygon vertices proof theorem add segments spans favorable cuts called bridges subdivision order guillotine add span segment corresponding cut double creating second copy lies top copy 
reason doubling apparent step 
furthermore slide doubled bridge parallel direction decreases increase length bridge lies vertical horizontal line point result pinned double bridge pinned line point denote resulting subdivision denote edge set including doubled segments 
length theorem bridges add total length prior doubling 
dynamic programming algorithm 
input subproblem see example 
rectangle corresponding minimal window determined points subset edges defining boundary information 

boundary information specifying crossing segments determined pair points cross boundary simple ptas geometric tsp odd fig 

example subproblem tsp dynamic program window determined vertices segment lower left corner contact 
bridges pinned coordinate left left boundary pinned coordinate 
bridge required odd number segments incident bridge required number 
partition specifies interconnections indicated trees vertex incident edges required vertex incident edge points incident segment crossing boundary required degree 
short dashed segments indicate feasible possible set interconnections 
pinned bridge side parity odd vs number edges incident 

connectivity constraints form partition set crossing segments bridges indicating subsets required connected subproblem objective compute minimum length guillotine subdivision edge set subdivision uses segments joining points doubled vertical horizontal bridge segments pinned boundary information satisfied point degree connectivity constraints satisfied 
note possible inputs subproblems choices choices crossing segments sides 
number possible connectivity constraints boundary information constant fixed 
initial call recursion ask solution case bounding box empty boundary information connectivity constraints simply say points inside connected point having degree 
base case points interior subproblem solved brute force constant size fixed 
joseph mitchell solve subproblem recursively optimizing choices associated cut 
choices horizontal vertical cut 

choices new boundary information cut 
particular select segments determined pair points cross cut information specifying possible bridge segment 
require boundary information new subproblems consistent boundary information problem 

fixed choices connectivity constraints new subproblems determined cut subject requirement constraints consistent constraints choices partitioning subproblem subproblems obtain time complexity 
obtaining tour 
solution dynamic program claim eulerian subgraph edge set including doubled bridges covers eulerian cycle defines tour length tour length constraints imposed subproblems dynamic programming algorithm vertices degree possibly lie bridge segment span perfect cut 
fact bridge segments lengths doubled allows vertices bridges degree keeping appropriate subset selection subsegments second copy bridge consider vertices single copy bridge subsegments second copy bridge link consecutively vertices bridge odd degree 
necessarily number odd degree vertices bridge require bridge segment incident number segments 
deleting portions second copy bridge segments obtain subdivision covering vertices degree 
eulerian cycle edges subdivision tour length 
mst 
suppose integer asked find minimum spanning tree subset points steiner points 
allowed introduce steiner points segments incident bridges bridge doubling trick writing dynamic program tsp 
ensures odd degree vertices optimized subdivision original points allowing replace eulerian paths linking original sites shortcut paths bend sites 
naturally drop requirement dynamic program points degree add parameter specification subproblem 


suspect potential applications improvements results reported 
know characterization general class problems method leads ptas 
concentrated euclidean metrics results generalize metrics points plane 
currently examining possible extensions higher dimensions 
mention results discovered time originally submitted 
arora obtained randomized simple ptas geometric tsp algorithm expected running time nearly linear log 
new results allow dimensional problem solved expected time log 
follow mitchell shown variant guillotine subdivisions termed grid rounded guillotine subdivisions yields deterministic ptas worst case time bound fixed set dimensional problems studied :10.1.1.44.1065
acknowledgments 
esther arkin samir khuller gunter rote referees useful comments suggestions improved presentation 
arora polynomial time approximation schemes euclidean tsp geometric problems proc 
th ann 
ieee sympos 

comput 
sci burlington vt ieee comput 
soc 
press los alamitos ca pp 

arora nearly linear time approximation schemes euclidean tsp geometric problems proc 
th ann 
ieee sympos 

comput 
sci miami beach fl ieee comput 
soc 
press los alamitos ca pp 

blum chalasani vempala constant factor approximation mst problem plane proc 
th ann 
acm sympos 
theory comput las vegas nv acm press new york pp 

cormen leiserson rivest algorithms mit press cambridge ma 
hochbaum editor approximation problems np complete problems pws publications boston ma 
lawler combinatorial optimization networks matroids holt rinehart winston new york 
lawler lenstra rinnooy kan shmoys eds traveling salesman problem wiley new york 
mata mitchell approximation algorithms geometric tour network design problems proc 
th ann 
acm sympos 
comput 
geom vancouver canada acm press new york pp 

mitchell guillotine subdivisions approximate polygonal subdivisions simple new method geometric mst problem proc 
th acm siam sympos 
discrete algorithms siam philadelphia pp 

mitchell approximation algorithms geometric optimization problems proc :10.1.1.44.1065
th canadian conference comput 
geom kingston canada pp 

mitchell blum chalasani vempala constant factor approximation geometric mst problem plane siam comput pp 

papadimitriou steiglitz combinatorial optimization algorithms complexity prentice hall englewood cli nj 
preparata shamos computational geometry springerverlag new york 
