consideration publication math 
struct 
comp 
science control categories duality categorical semantics lambda mu calculus peter sel nger department mathematics university michigan ann arbor mi received november give categorical semantics call name call value versions parigot calculus disjunction types 
introduce class control categories combine cartesian closed structure premonoidal structure sense power robinson 
prove categorical structure theorem categorical semantics equivalent cps semantics style hofmann streicher 
show call name calculus forms internal language control categories call value calculus forms internal language dual control categories 
corollary obtain syntactic duality result exist syntactic translations call name call value mutually inverse preserve operational semantics 
answers question streicher reus 
discussion relative advantages disadvantages parameter passing techniques call name call value old theory programming languages 
modern functional programming languages call value paradigm easy implement semantically intuitive felleisen hieb write revised report syntactic theories sequential control state theoretical reason choosing presence control operators assignments felleisen hieb 
study relationship call name call value paradigms parigot calculus 
calculus extension simply typed lambda calculus certain sequential control operators 
show presence product disjunction types call name call value calculi isomorphic sense exist syntactic translations preserve operational semantics mutually inverse isomorphism types 
translations take form duality turn argument driven computation demand driven computation exchanging input output turning terms inside 
presence disjunction types possible regard term bm function arguments possible result types 
duality call value call name mapped function arguments possible result types 
existence duality context calculus conjectured streicher reus 
peter selinger interesting aspect duality exchanges functional imperative features 
instance purely functional call value term mapped call name term relies exclusively control operators vice versa 
observation suggests practical point view certain algorithms naturally formulated call value paradigm call name 
interesting compare filinski obtains duality result working larger symmetric syntax dual term essentially mirror image filinski 
main contribution basis mentioned duality result sound complete categorical semantics call name call value calculus 
introduce class control categories call name calculus interpreted way simply typed lambda calculus interpreted cartesian closed category 
prove categorical structure theorem shows control category equivalent category continuations sense hofmann streicher 
structure theorem implies soundness completeness categorical interpretation calculus respect natural cps semantics 
true show call name calculus forms internal language class control categories 
repeat process call value calculus 
show call value calculus forms internal language class control categories simply categorical duals control categories 
syntactic duality result corollary syntax free categorical duality 
stressed results particular calculus 
apply equally traditional languages continuation control constructs call cc ml scheme felleisen operator felleisen 
operationally calculi equivalent instance equivalence calculus call byname version felleisen shown de groote 
reasons chosen calculus basis semantics technically convenient separate name spaces sided sequents explicit negation types 
facilitates statement duality 
related draws developments categorical semantics control operators 
starting point hofmann streicher categorical semantics call byname calculus terms categorical continuation models hofmann streicher 
control categories abstraction models 
categories continuations control categories defined categories algebraic structure allow covariant interpretation calculus explicit continuations 
crucial ingredient defining structure control category realization disjunction forms premonoidal structure sense power robinson 
structure theorem relates approach hofmann streicher concrete semantics showing control category equivalent category continuations 
call value case model identical thielecke interpretation omega gamma category thielecke 
control category omega gamma category additional structure 
thielecke semantics include disjunction types cen control categories duality computational phenomena real life programming languages interested modeling 
disjunction types crucial indispensable statement duality 
particular call name semantics strictly different thielecke expressed purely terms omega gamma categories 
presence disjunction types reveals nature thielecke self adjointness property special instance cartesian closed structure 
structure theorem similar shown independently fuhrmann case omega gamma categories 
development fuhrmann general account relationship direct monadic models generalizes aspects arbitrary computational effects place continuations fuhrmann 
different class models call name calculus fibrations defined ong ritter generalized disjunctive case pym ritter ong pym ritter 
focus models different stress nature calculus respect control contexts sense higherorder 
models rich algebraic structure calculus forms internal language suitable sense 
may go back forth ong ritter models control categories identifying object fiber delta object delta control category 
appears instance general construction obtaining fibration premonoidal structure see power robinson 
question raised computational significance disjunction types calculus 
question arises types originally motivated mainly logical categorical concerns computational considerations 
turns disjunction types computational interpretation terms certain manipulations stacks 
best seen machine model 
cps semantics derive krivine style machine done fragment disjunction streicher reus 
machine model disjunctive call name calculus implementation described detail separate selinger 
purposes emphasize logical categorical perspective 
outline sections introduce control categories exhibit basic structure 
sections discuss interpretation call name call value calculi 
section discuss duality 
technical proofs section appendix 

control categories cartesian closed category notation terminal arrow second projections hf gi pairing ffl theta application curry map theta internal language ccc denote morphisms morphism denoted typing judgment peter selinger usual way 
obvious subscripts omitted 
notation ccc gamma gamma 
label evident ccc isomorphisms 

premonoidal categories premonoidal categories introduced power robinson 
summarize definition 
premonoidal category similar monoidal category tensor product assumed functorial argument separately necessarily jointly 
tensor product premonoidal category general lack better term call operation functor 
formal definition follows jaj denotes class objects category regarded discrete subcategory 
definition 
categories 
functor omega bifunctors theta jbj jaj theta pairs objects agree defined objects harm denoting writing objects morphisms 
general sense write composites ffi ffi may coincide 
bifunctor just functor compositions equal 
notation omega justified pushout defines tensor product cat jaj theta jbj theta jbj fflffl jaj theta omega functor regarded functor omega explicit description category omega power robinson 
generally define functors omega omega speak natural transformations functors mean transformations natural component separately 
bifunctors coincides usual definition 
definition 
category category functor omega usual infix notation morphism category central morphism composites ffi ffi agree composites ffi ffi agree 
case notation respectively premonoidal categories defined analogy monoidal categories 
notice structural isomorphisms required central 
definition 
premonoidal category category object central natural isomorphisms control categories duality subject usual coherence conditions gamma gamma delta delta delta delta delta delta delta oeoe 
symmetric premonoidal category addition family central natural isomorphisms satisfying ffi id coherence fflffl fflffl gamma gamma gamma gamma gamma gamma gamma 
operation called symmetric 
central morphisms premonoidal category form monoidal subcategory called center denoted ffl clearly center largest subcategory restricts proper tensor product 
coherence premonoidal categories follows easily mac lane result monoidal categories mac lane kelly relevant coherence diagrams contained center 
premonoidal categories share properties monoidal categories special care necessary manipulating 
instance keep mind innocent looking expressions functorial 
notice morphism induced family arrows general natural say family maps jb natural central natural respect central analogously dinaturality 
choice symbols originally chose upside suggests tensor product disjunctive flavor 
intend imply connection linear logic choice 
laurent regnier turned control categories model proof nets polarized linear logic surprise connective corresponds par linear logic interpretation 
detailed account connection appear 

focus definition 
symmetric premonoidal category 
symmetric monoid object central morphisms 
ra peter selinger satisfying usual equations 
gamma oo gamma zz fflffl symmetric premonoidal category chosen symmetric monoid ha object compatible premonoidal structure sense id 
fflffl ib fflffl diagram obvious associativity isomorphisms omitted 
premonoidal category shown equivalent strict power robinson henceforth loss generality treat associativity identity map 
notice require families maps 
natural fact obvious state naturality call central morphism discardable xi xi omega omega omega omega omega omega copyable fflffl fflffl terminology taken thielecke 
strictly speaking terms discardable copyable cumbersome 
centrality notions behavedness 
definition 
morphism called focal central discardable copyable 

focal morphisms form subcategory called focus denote focus contained center 
closed 
structural maps focal left right weakening maps defined gamma 

ib gamma gamma gamma 
gamma 
gamma gamma gamma 
denote maps focus canonical finite coproduct structure control categories duality lemma 
object initial coproduct injections pairing inl gamma 
inr gamma 
gamma gamma 
gamma gamma 
fact largest subcategory restricts coproduct 

ffl general focus symmetric premonoidal category strictly contained center instance monoidal category tensor coproduct center focus 
case control category defined shortly see center focus coincide 

distributivity definition 
suppose symmetric premonoidal category 
suppose finite products 
say distributive projections theta theta focal objects functor gamma preserves finite products 
note functor gamma preserves finite products iff objects natural maps theta ci gamma gamma gamma gamma gamma gamma gamma gamma gamma 
theta gamma 
isomorphisms 
denote inverse map theta 
theta lemma 
distributive symmetric premonoidal category focus closed finite product structure 
proof 
trivial see focal 
second central hf di fflffl theta theta fflffl theta thetab fflffl hf ei theta theta left square commutes hypothesis right naturality follows definition map top hf gi similarly bottom 
perimeter diagram shows hf gi central 
assume discardable copyable 
commutativity diagrams follows fact focal 
peter selinger hf gi discardable copyable 
thetab 
hf gi theta hf gi hf gi fflffl theta theta thetab fflffl hf gi theta notice gamma defined terms pairing lemma implies gamma focal 

control categories structure considered far add cartesian closedness conditions relate cartesian closed structure premonoidal structure 
definition 
suppose distributive symmetric premonoidal category 
suppose cartesian closed 

canonical morphism obtained currying ffl theta gamma gamma gamma gamma gamma gamma gamma 
theta gamma 
theta ffl gamma gamma gamma 
category called control category 
natural isomorphism satisfying coherence conditions 
diagram commutes gamma 
gamma gamma gamma gamma 
gamma 
fflffl fflffl ccc 
diagrams commute delta theta hid id ba thetaa delta ccc ba xi xi psi psi psi psi psi psi 
automatically follows definition natural requirement natural needed separate axiom 
isomorphism 
called exponential strength 
requirement isomorphism equivalent requirement theta control categories duality exists unique theta ffl theta thetaa oo natural isomorphism hom sets theta giving rise ccc structure 
far structural maps premonoidal structure finite product structure focal 
require application map ffl theta focal focus closed currying 
hand exponential strength 
turns focal show lemma 

example categories continuations example control category consider category continuations style hofmann streicher 
category distributive finite products coproducts distinguished object objects exponential exists 
example may take bicartesian closed category lambek scott general require arbitrary exponentials exist 
say satisfies mono requirement canonical morphism monic case call category response category object object responses 
terminology borrowed continuation semantics 
simplicity loss generality assume exponentials chosen implies response category define category continuations denoted full subcategory consisting objects form crucial observation underlying continuation semantics category cartesian closed moggi lafont reus streicher 
theta thetar full subcategory inherits structure category canonical premonoidal structure objects thetab operation functorial argument thetab second argument thetab notice operation functorial arguments jointly 
maps form focal 
structural maps defined obvious way 
lemma 
category continuations control category 
proof 
axioms easily checked 
instance exponential strength holds thetar thetac peter selinger converse true section prove main theorem control categories control category equivalent category continuations 

structure control category 
coherence lemma 
hold control category fflffl ba fflffl 

sa fflffl fflffl ccc fflffl ccc ccc fflffl ccc fflffl thetaa thetaa thetaa proof 
see appendix 

centrality show central map discardable 
section able show central map copyable center focus coincide control category 
lemma 
control category central morphism discardable 
proof 
central 
id 
curry identity map 
diagrams commutes centrality 
second diagram coherent isomorphisms commutes 
third diagram obtained uncurrying 
discardable 
id fflffl fflffl id id fflffl fflffl fflffl control categories duality 
focal structural maps lemma 
control category morphism form focal proof 
commutativity diagrams fflffl fflffl fflffl follows fflffl fflffl thetab thetaf delta fflffl thetaa delta respectively naturality thetab lemma 
control category natural ccc isomorphisms thetaa focal 
proof 
follows lemma 
lemma 
control category exponential strength 
focal 
proof 
see central consider diagram fflffl fflffl fflffl coherence morphism top equal similarly bottom 
right square commutes naturality strength perimeter 
left square implies central 
showing copyable comes modulo coherence showing thetaa delta fflffl thetaa delta fflffl follows naturality peter selinger lemma 
canonical morphism 
obtained currying ffl theta theta gamma gamma gamma gamma gamma gamma 
theta gamma 
theta ffl gamma gamma gamma 
focal 
natural dinatural central satisfies coherence properties fflffl fflffl fflffl gc 
fflffl id id fflffl proof 
see appendix 

consistency may ask consistent structure assume 
turns control category equivalent boolean algebra 
reader may find instructive compare lemma fact proved lambek scott bicartesian closed category arrow 
lemma 
central morphism 
proof 
claim central consider diagram fflffl fflffl oo fflffl oo id fflffl oo oo id cells commute morphisms top left sides isomorphisms 
follows proving claim 
suppose central object 
central lemma 
claim hom set showing terminal 
corollary 
control category equivalent boolean algebra 
control categories duality proof 
morphisms central 
hom set element lemma 
follows category equivalent poset control category structure boolean algebra structure 

classical features excluded middle double negation known lambda calculi control operators calculus correspond classical logic propositions types correspondence 
fact discovered griffin 
control categories going models calculi surprising control categories models propositional classical logic 
objects correspond propositions arrows correspond proofs 
operation models disjunction 
note axioms control categories intuitionistically valid existence inverse map 
logic classical 
define arrows excluded middle double negation tnd gamma 
gamma gamma gamma 
excluded middle ffl gamma 
double negation gamma 


gamma 

tnd gamma gamma 
double negation elimination course just natural map defined ccc 
lemma 
non trivial control category 
ffi id 
tnd dinatural general central 
natural general central 
focal natural natural central proof 
follows lemma 
easy diagram chase 
dinaturality follows naturality notice lemma tnd central 
map natural ccc 

central map central ffi ffi ffi ffi central lemma 
focal definition focal lemma tnd focal lemma 
naturality central follows dinaturality tnd central central morphisms characterized fact natural central lemma 
morphism central ffi ffi proof 
follows lemma 
suppose ffi ffi peter selinger consider cube fflffl fflffl top bottom faces commute assumption 
left right front faces commute central 
top left arrow split epic lemma back face commutes showing central 

center focus coincide lemma know central map discardable 
show control category center focus coincide lemma 
control category central morphism copyable 
proof 
proof adopted thielecke 
suppose central 
consider cube fflffl fflffl fflffl fflffl 
front face sides commute copyable lemmas 
top bottom faces commute natural central lemma 
top left arrow split epic right inverse 
ffi 
follows back face commutes showing copyable 
control categories duality 
basic adjunctions center control category 
recall center denoted ffl usual notation hom sets 
set morphisms ffl set central morphisms lemma 
ffl naturally central proof 
writing gamma gamma gamma gamma 
gamma 
define oe ffl ffl oe pa gamma gamma gamma 
gamma gamma 
ccc gamma gamma 
tnd gamma gamma 
gamma gamma gamma 
notice oe central lemmas 
clearly natural central naturality oe follows see oe holds consider diagram tnd id fflffl fflffl ccc fflffl ccc diagram commutes left right definition tnd lemma naturality lemma respectively 
composition top oe 
composition bottom lemma standard ccc manipulations 
show oe holds central consider tnd ccc oo ga 
tnd oo ccc oo oo id oo leftmost square commutes dinaturality central leftmost triangle commutes lemma 
parts commute definition tnd ccc calculations 
clockwise top oe counterclockwise bottom lemma 
ffl ffl 
isomorphism natural second isomorphism natural central proof 
define oe ffl oe gamma gamma 
ffl 
ffl gamma gamma 
gamma 
ffl 
gamma gamma 
gamma 
peter selinger notice oe central lemmas 
clearly oe natural natural central need show maps isomorphisms oe 
id oe id 
oe id 
commutativity diagrams follows lemma 
putting lemmas immediately get corollary 
ffl ffl naturally central central 
functors equivalences control categories control categories 
strict functor control categories functor preserves chosen structure preserves chosen binary products exponentials chosen morphisms associated structure 
notice follows lemma functor preserves central maps need special requirement 
practice usually interested functors preserve structure isomorphism 
context control categories sensible require structure preserved central isomorphism expressed definition definition 
weak functor control categories functor central natural isomorphisms theta fa theta fb gamma 
theta fa fb gamma 
gamma 
gamma 
exp fb fa gamma 
control categories duality commuting morphism structure evident ways instance fa theta fb theta theta fflffl fa fa 
fa fa 
fflffl fa oo follows lemma weak functors control categories preserve center 
note particular implies weak functors control categories composed 
need notion equivalence control categories 
appropriate modify standard definition take account concept centrality 
definition 
equivalence control categories pair weak functors control categories central natural isomorphisms ffi id ffi id control categories equivalent sense write say functor centrally essentially objects jp exists jpj central isomorphism fa 
lemma 
assuming axiom choice weak functor control categories part equivalence full faithful centrally essentially objects 
proof 
slight modification usual argument categories structure 

structure theorem control categories fundamental theorem control categories structure theorem theorem structure theorem 
control category equivalent category continuations suppose control category 
ffl op dual center objects morphism central morphism avoid confusion write object considered object similarly write central morphism considered morphism lemma 
category distributive finite products coproducts 
proof 
center ffl closed finite products lemma 
center focus coincide premonoidal structure restricts finite coproduct structure ffl lemma 
finite products coproducts 
distributivity follows define object responses 
lemma 
category exponentials form object canonical morphism monic 
response category 
peter selinger proof 
natural equivalence corollary theta ffl ffl naturally define monic split epic lemma 
proof theorem 
remains shown category continuations equivalent control category 
lemma know contravariant functor ffl full faithful 
op full faithful covariant functor 
objects image op precisely form op restricts equivalence categories show preserves control category structure 
equivalence op clearly preserves finite products exponentials 
calculate preserves premonoidal structure op theta op op op 
check op op op theta theta unwinding definition exponentiation finds holds commutes ffl ffl fflffl ffl ffl fflffl ffl ffl isomorphisms lemma natural commutes 
routine check op preserves structural maps proves theorem 

structure control category section examine structure control categories 
material subsections needed preparation interpretation call value calculus rest section may skipped reading 

weak closed structure control category combining cartesian closed structure lemma get sequence isomorphisms ffl naturally central object functor ffl left adjoint ffl unit control categories duality adjunction gamma 
gamma 
denote image map adjunction maps define closed structure ffl adjunction fflffl unique central morphism making diagram commute 
defines weak closed structure write ffi gamma 
control categories omega gamma categories interpretation call value calculus convenient dualize notion control category 
control category categorical dual control category 
particular finite coproducts initial object exponentials write ba omega unit weak closed structure gammaffi table lists notation going objects morphisms control category objects control control theta omega ba ffi gamma gammaffi morphisms control categories control categories 
delta omega ffl theta ba ba 
ffi gamma app gammaffi omega ffi gamma curry 
gammaffi usual notation coproducts 
thielecke dual map called thunk dual called force 
remaining structural maps keep names duals 
control category omega gamma category sense thielecke defined gammaffi 
notice ba omega gammaffi omega constructs ba gammaffi defined terms third 
conversely show omega gamma category fully faithfully embedded category 
control categories seen natural extension omega gamma categories finite coproducts 
presence finite coproducts important duality result section 
peter selinger table 
signature control categories nullary morphism constructors id theta theta ffl theta 

theta 
theta gamma object constructors theta binary unary morphism constructors ffi hf gi theta theta 
control categories algebras structure control categories cartesian closed categories equational sense lambek scott 
means structure object constructors morphism constructors universally quantified equations hom sets 
categorical structure way enjoys properties usual algebraic constructions constructing free algebra quotient categorical equivalents 
sense speak congruence relation control category take quotient freely adjoin class arrows 
object morphism constructors control categories shown table 
understood morphism constructor stands family constructors indexed objects 
constructors appear definition control categories shown definable terms remaining ones redundant 
structure control categories type indexed equations variables signature 
equations definitions sections repeat 
illustration point requirement certain morphism focal expressed equationally 
instance theta expressed equations ffi thetab ffi thetab ffi ffi theta ffi theta ffi 
center category continuations remarked section category continuations morphism form central 
fuhrmann shown converse true iff satisfies moggi equalizing requirement moggi fuhrmann 
say object jcj satisfies equalizing requirement canonical morphism control categories duality equalizer diagram say satisfies equalizing requirement objects 

equalizing requirement satisfied split monic case instance category non empty sets jrj 
lemma 
category continuations 
object jcj equivalent central morphism form 
object satisfies equalizing requirement 
proof 
denote curry uncurry map notice ffi note necessarily unique assumed definition response category monic 
lemma central ffi ffi category continuations ccc manipulations follows central ra ffif ffi 
follows central morphism form case ra ffi ffi implies ffi satisfies equalizing requirement 

response category satisfies equalizing requirement 
trivial counterexample full sub ccc category sets 
terminal object 
notice poset monic satisfy equalizing requirement 
unique map central form 

explicitly chosen value categories definition control categories center derived notion morphism central satisfies certain equations 
center explicitly part structure 
computationally central morphisms model effect free computations values see interpretation call value calculus section 
authors jeffrey prefer premonoidal categories explicitly chosen value category fixed subcategory center 
context premonoidal categories clear advantage working chosen value categories functors preserve algebraic structure premonoidal categories general preserve centrality making values part structure require functors preserve 
hand functors control categories automatically preserve center need value categories clear context 
possible accommodate point view desired section show leads slightly improved statement structure theorem 
peter selinger definition 
control category 
subcategory called value category jpj ffl closed structural operations control categories shown table ffl currying 
require contains maps maps form chosen value category morphisms called values 
suppose control categories respective chosen value categories say weak functor control categories preserves values restricts functor implies case write 

say equivalence control categories respects values restricts equivalence categories means preserve values component natural isomorphisms ffi id ffi id value 
equivalent sense write 
category continuations subcategory consisting morphisms form value category call canonical value category 
note gave example category continuations canonical value category strictly contained center 
center control category value category shows value categories general unique 
lemma shows certain types values uniquely determined 
lemma 
control category chosen value category 
ffl 
proof 
proof lemma central map form ffi value 
notice implies control category values call value function type gammaffi ab uniquely determined 
values 
gammaffi precisely maps form curry 
interpretation calculus section maps precisely lambda abstractions 
context chosen value categories give improved version structure theorem 
theorem shown control category equivalent category continuations general uniquely determined turns respect chosen value category category unique equivalence 
precise theorem theorem second structure theorem 
control category chosen value category response category 
unique equivalence response categories 
proof 
existence op proves exactly proof theorem place ffl lemma serves ensure properties ffl relevant proof 
equivalence images values precisely values uniqueness observe response category equivalent dual contravariant functor maps clearly functor full objects faithful satisfies mono requirement 
suppose control categories duality table 
typing rules calculus var gamma delta gamma const gamma delta gamma delta pair gamma delta gamma delta gamma hm ni delta gamma delta gamma delta gamma delta gamma delta app gamma delta gamma delta gamma mn delta abs gamma delta gamma delta name gamma delta gamma ff delta ff delta gamma ff delta gamma ff delta weaken gamma delta gamma delta gamma gamma delta delta 
op op equivalence identifies response object equivalent response categories 

calculus 
syntax calculus show interpret parigot calculus parigot control category 
reviewing syntax calculus finite products 
oe range set type constants 
types ranged constructed grammar oe infinite disjoint sets object variables control variables ff fi respectively 
control variables called names 
set typed object constants pair called signature calculus denoted sigma 
raw terms constructed grammar hm ni mn ff ff term form ff called abstraction term form ff called named term 
terms ff object variable respectively control variable ff bound 
usual identify raw terms renaming bound object control variables 
typing calculus defined follows 
object context finite possibly empty sequence gamma xn bn pairs object variable type write gamma gamma gamma contained gamma set 
control context delta ff ff ff am defined analogously 
typing judgment expression form gamma delta quadruple consisting object context term type control context 
logical interpretation sequent symbol stands implication symbol stands disjunction 
valid typing judgments derived peter selinger rules table 
equation expression form gamma delta gamma delta gamma delta valid typing judgments 

informal description semantics calculus motivate constructs calculus give informal discussion intended semantics 
formal semantics means cps translations sections 
abstractions named terms calculus operators influence sequential flow control evaluation term 
informally subterm evaluated things happen return value environment cause control flow jump part program 
term contains jump may return value environment case type empty type values 
calculus prototypical term type term ff return passes value control variable named ff 
think ff named channel value sent channel 
says thrown ff 
channels typed ff type means values type thrown ff 
need binding construct channels 
abstraction ff creates named channel ff begins evaluate process evaluating value gets thrown ff value immediately value expression evaluation continued case 
ff declared type term type 
type 
calculus body abstraction type 
question returns value arise 
serious restriction easily deal terms arbitrary type idiom ff fi ff ff type typing judgment xn bn ff ff am means typed term free typed object variables free typed control variables 
think function arguments possible result channels may return ordinary value type may return exceptional value type channel ff surface certain similarity control constructs calculus exception handling mechanism ml 
approximation may think throwing value ff raising exception ff value similarly may think term ff providing handler exception ff 
analogy superficial important difference ml exception handling calculus statically scoped 
means term ff binds occurrences ff syntactic scope 
occurrences ff substituted instance result reducing redex bound hand ml exceptions dynamically scoped allows function things handle exception arguments throws 
static scoping calculus calculus continuations exceptions abstraction mechanism closely related control operators callcc scheme felleisen control categories duality 
adding classical disjunction calculus calculus regarded originally conceived term calculus classical sequent calculus proofs 
connection logic suggests able extend calculus include disjunction type constructor 
standard way adding disjoint sum types lambda calculus left right injections case construct 
proof theory disjunction classical logic quite different intuitionistic logic pym ritter show add different classical disjunction type calculus 
show classical disjunction types strictly different disjoint sum type call name semantics 
hand shall see call value disjunction types coincide 
essentially adopt pym ritter classical disjunction type slightly different symmetric syntax terms 
formally add type constructor term constructors calculus ff fi ff fi new term constructors generalizations abstraction naming deal control variables 
informally may think value type value type value type depending case term ff fi throw value ff fi 
similarly term ff fi catches value thrown ff fi synthesizes value type typing rules disjunction name gamma delta gamma ff fi delta ff fi delta gamma ff fi delta gamma ff fi delta notice typing rules imply pattern ff fi variables ff fi different 
writing terms disjunctive calculus generous syntax abstractions named terms 
instance ff fi fl abbreviation ff ffi bc ffi fi fl similarly ff fi fl syntactic sugar term fi fl ffi bc ff ffi disjunction classical 
instance ff fi 
fi ff closed term type 
instructive examine behavior term illustration static scoping works 
informally term initially evaluated return closure ff type 
environment 
environment attempt apply closure value type control flow jump back term environment originally called 
point evaluate peter selinger 
call name interpretation calculus calculus originally introduced call name language parigot ong ong steward call value interpretation ong stewart 
consider call name semantics leave call value semantics section 
operational semantics call name calculus different familiar styles 
parigot gave strongly normalizing system reductions original calculus approach generalized extensional disjunctive case pym ritter 
reduction rules control operators intuitive involve complex substitution operations permutations contexts 
purposes convenient consider continuation passing style cps semantics 
semantics plotkin original call name semantics lambda calculus plotkin de groote 
adopt different cps translation hofmann streicher takes advantage richer target language finite sums products 
streicher reus demonstrated cps translation serve basis machine model yielding stack krivine machine call name calculus 
extend cps translation include disjunction types take basis categorical interpretation callby name disjunctive calculus control category 
possible systematically extend krivine machine semantics account disjunction types 
carried selinger 

call name cps translation consider disjunctive calculus signature 
give call name semantics calculus cps translation 
target language translation lambda calculus theta sum products distinguished type responses 
function types restricted case consequently lambda abstractions occur type fij denote usual fij equivalence theta surjective pairing exhaustive sums 
keep notation brief various forms syntactic sugar sums products target calculus 
patterned lambda abstraction hx yi thetab customarily defined abbreviation thetab 
pairing notation shorthand expression case inl mk inr nk 
notice term corresponds hm ni canonical isomorphism theta 
lambda abstraction patterns pairing shorthand inl inr 
initial type equipped type cast operator type am type denote canonical term unit type 
definition call name cps translation 
assume target calculus type constant oe type constant oe type calculus define pair types ka ca target calculus called respectively type continuations control categories duality table 
cps translation call name calculus ka xk ka ck 
hm ni kab ka inl kb inr mn kb ki ki ka mk ff 
ff ff ff ka ff fi 
mh ff fii ff fi ff fii kab computations type oe oe oe type constant 
kab ka kb ka ca theta kb 
kab ka theta kb ca ka object constant calculus assume target calculus constant type ca object variable control variable ff calculus assume distinct variable respectively ff target calculus 
call byname cps translation typed term table 
respects typing sense xn bn ff ff am cb xn cbn ff ka ff kam ca write gamma delta translation typing judgment similarly equations 
particular cps translation fragment products disjunction discovered hofmann streicher 
differs plotkin original call name translation plotkin introducing double negation function types advantage richer target language 
compare translations detail section 
notice translation control operators straightforward simply exchange current continuations 
translation reveals nature control variables calculus essentially variables target language user source language limited access 
take idea allow arbitrary expressions target calculus appear construct source calculus 
similar extension proposed streicher reus 
extension spirit filinski symmetric lambda calculus filinski put terms continuations equal peter selinger footing 
extensions lead incomprehensible programming style add expressive power language consider 
definition 
terms calculus gamma delta gamma delta 
say call name equivalent symbols fij generally theory theta calculus define call name theory generated set equations fe note class call name theories closed arbitrary intersections 
matter fact finite equational axiomatization 
fragment products disjunction follows hofmann streicher result hofmann streicher 
show obtain finite axiomatization theories full calculus consequence structure theorem discussing interpretation call name calculus control category 

interpretation call name calculus control category target calculus theta cps translation interpreted directly response category recall category distributive finite products coproducts distinguished object exponentials form momentarily identify types ka ca interpretation property cps translation typing judgment xn bn ff ff am gives rise morphism cb theta theta cbn theta ka theta theta kam ca ca ka currying amounts morphism cb theta theta cbn ka thetak theta thetak am lies continuation category standard premonoidal structure write cb theta theta cbn ca ca cam eliminated continuation types ka interpretation typing judgment 
interpret call name calculus control category directly explicitly mentioning continuations 
interpretation natural definition categorical call name interpretation 
control category 
interpret calculus signature assume choice object oe type constant oe type constructor interpreted corresponding object constructor control categories oe oe oe type constant theta control categories duality table 
interpretation call name calculus control category gamma delta gamma gamma 
gamma 
delta gamma delta gamma gamma 
gamma 
gamma 
delta gamma delta gamma gamma 
gamma 
delta gamma hm ni delta gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma 
delta theta delta gamma 
thetab delta gamma delta gamma gamma gamma gamma gamma 
thetab delta delta gamma gamma gamma gamma 
delta gamma delta gamma gamma gamma gamma gamma 
thetab delta delta gamma gamma gamma gamma 
delta gamma mn delta gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma 
delta theta delta gamma 
thetaa delta ffl delta gamma gamma gamma 
delta gamma delta gamma gamma gamma gamma gamma 
delta gamma gamma gamma 
delta gamma ff delta gamma gamma gamma gamma gamma 
delta delta gamma gamma gamma gamma 
delta delta gamma 
delta gamma 
delta gamma ff delta gamma gamma gamma gamma gamma 
delta gamma 
delta gamma ff ff delta gamma gamma gamma gamma gamma 
delta delta gamma gamma gamma gamma gamma gamma gamma 
delta delta delta delta gamma gamma gamma gamma gamma 
delta gamma 
delta gamma ff fi delta gamma gamma gamma gamma gamma 
delta gamma 
delta gamma xn bn object context write gamma theta theta denote ith projection map gamma similarly delta ff ff am control context write delta notation delta jth weakening map 
typing judgments interpreted relative choice morphism object constant typing judgment gamma delta interpreted morphism gamma delta gamma delta abbreviated interpretation defined recursion structure shown table 
keep notation reasonable omitted semantic brackets interpretation types hoping confusion arise 
lemma 
category continuations call name categorical interpretation calculus coincides interpretation call name cps translation lemma easily checked induction terms structure theorem immediately gets soundness completeness theories proposition soundness completeness 
theories induced calculus call name categorical interpretation precisely theories induced call byname cps translation 

call name calculus internal language control categories recall section structure control category operations objects morphisms equations hom sets 
image call name interpretation calculus control category structural operations appear table fact definable operations types typing judgments 
peter selinger table 
control category operations typing judgments nullary operations id ffl ff fi fl ff fi fl ff ffi ff fi ff ff fi 
ff ff ff ff ffi ab fl ffi hff ff fl fi fi fl xi gamma 
ffi fl ffi fi fi fl xz binary unary operations ffi hf gi hm ni ab hx yi fi fl fi ff ff fl fixed object variable 
say typing judgment standard form object context declares exactly variable control context empty 
abbreviate standard form typing judgments omit empty object context 
note typing judgment xn bn ff ff am equivalent standard form bn ff ff ff ff xn am sense denote morphism interpretation control category 
table defines syntactic operations standard form typing judgments correspond structural operations control categories 
lemma 
call name interpretation structural operations control categories defined operations typing judgments shown table 
proof 
easy check case case 
instance interpretation interpretation interpretation thetaf gamma gamma gamma 
theta ffl gamma 
ffi definition syntactic control category 
signature sigma call name control categories duality theory construct syntactic control category sigma follows objects sigma types language object constructors corresponding type constructors 
morphisms named valid standard form typing judgments typing judgments name morphism operations control category morphisms defined table 
lemma 
sigma defined control category 
proof 
show sigma satisfies defining equations control category corresponding equations typing judgments hold fact theory completeness categorical interpretation control category call name interpretation gamma iff lemma required equations hold canonical call name interpretation gamma calculus signature sigma sigma defined oe oe 
property interpretation typing judgment call name equivalent standard form 
pair sigma gamma determined isomorphism universal property respecting callby name interpretation gamma control category unique strict functor control categories sigma types gamma delta gamma delta valid typing judgments gamma delta 
construction sigma allows pass theories categories 
opposite possible definition internal language control category 
small control category construct signature sigma call name theory follows sigma objects type constants object constant morphism consider canonical interpretation language interprets type constants object constant callby name theory induced interpretation 
call pair sigma internal call name language lemma 
sigma internal call name language control category sigma proof 
clearly canonical interpretation internal language objects morphisms morphism denotation canonical functor control categories sigma universal property sigma full objects 
faithful definition sigma lemma 

axiomatization call name theories obtained soundness completeness categorical call name interpretation free way theories defined terms cps translation peter selinger table 
axioms call name calculus axioms lambda calculus products fi mx fv fi hm mi axioms disjunction ff fi fi gamma ff gamma fi fn ff thetaa fi fi gamma ff gamma fi fn ff fi fl ab ff fi gamma fl gamma 
fi ff ff ff ff 
ff ff ff fn fi ff fi ff fi ff ff fi fi 
ff fi ff fi ff fi fn fi close categorical semantics 
convenient equational description theories instance basis rewrite semantics 
having shown call name calculus forms internal language control categories characterize call name theories follows proposition 
fix signature sigma 
congruence relation typing judgments call name theory hold 
equation standard form 
sigma constructed lemma defined control category 

canonical interpretation gamma sigma interprets typing judgment standard form 
proof 
theory conditions hold results previous section 
conversely assume conditions hold 
gamma sigma interpretation control category validates exactly equations call name theory 
characterization give sound complete axiom axiomatization call name theories follows 
write fv respectively fn free object control variables term identify terms ff equivalence renaming bound variables necessary avoid captures 
consider kinds substitution 
write usual substitution term object variable write ff ff substitution context variable ff context variable ff ff ff fi fi substitutions performed simultaneously 
consider called mixed substitution term gamma context ff name mixed substitution gamma ff gamma result recursively replacing subterm form ff gamma gamma subterm form ff ff gamma ff fff ff ff ff ff gamma 
control categories duality formally gamma ff gamma defined recursion important clauses ff gamma ff gamma gamma ff gamma ff ff gamma ff gamma ff ff ff gamma ff gamma ff fff ff mixed substitution commutes term forming operations avoiding captures necessary 
axiomatization call name theories shown table 
axioms readable shown typing contexts explicitly assume equation placed typing context left hand side right hand side typed 
congruence relation terms mean set equations reflexive symmetric transitive closed term formation rules rules weakening 
theorem axiomatization call name theories 
set equations disjunctive calculus fixed signature 
call name theory congruence relation terms satisfies equations table 
proof 
soundness easily verified instance cps translation proposition appropriate substitution lemmas 
proof completeness long tedious verification properties proposition 

pym ritter strongly normalizing confluent reduction semantics call name disjunctive calculus similar set axioms slightly different syntax 

comparison plotkin call name translation call name cps translation hofmann streicher 
differs plotkin original call name cps translation simply typed lambda calculus plotkin introducing fewer double negations 
obtain plotkin call name translation change definition ka ka ca cb notice isomorphic ca theta kb double negation definition ka regard way working absence products target language 
definition cps translation changes clauses application lambda abstraction accordingly mn kb ca cb mnk ka ca precisely plotkin call name translation simply typed lambda calculus 
notice induces different semantics hofmann streicher translation instance plotkin translation validate full law hofmann streicher translation 
plotkin translation formulated categorically 
plotkin call name interpretation gamma calculus control category defined just standard peter selinger table 
cps translation call value calculus ka ka 
hm ni kab ni ka ab kb ab mn kb ki ka ci thetak mc ff 
ff ff ff ka ff fi 
ff fi ff fi ff fi kab changes interpretation function type changed interpretation application abstraction changed gamma mn delta gamma gamma gamma gamma gamma gamma gamma gamma gamma 
delta theta delta ba delta theta delta gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma 
delta theta delta gamma 
thetaa delta ffl delta gamma gamma gamma 
delta gamma delta gamma gamma gamma gamma 
delta gamma gamma gamma 
delta ba delta gamma gamma gamma gamma gamma 
delta easily checks categorical definition coincides syntactic 
plotkin call name semantics seen introduce extra thunk functional closures 
calculus plotkin call name semantics form internal language control categories particular interpretation object constructors sufficient span category 

call value interpretation calculus 
call value cps translation target calculus define cps translation call value calculus signature 
definition call value cps translation 
assume target calculus type constant oe type constant oe type calculus define types ka ca target calculus called respectively type values control categories duality continuations computations type oe oe oe type constant ab theta theta kb ab ka ca ka assume object variable control variable ff calculus distinct variable ff target calculus 
assume target calculus constant type object constant call value cps translation typed term table 
respects types sense xn bn ff ff am xn bn ff ka ff kam ca difference call name call value interpretations object variables interpreted values computations 
write gamma delta translation typing judgment similarly equations 
notice call value cps translation clauses control operators identical ones call name modulo identification ff fi hff fii canonical isomorphism theta 
clauses pure lambda calculus part essentially plotkin original ones call value plotkin plotkin target calculus pairs defined cb call name case call value translation coincides plotkin isomorphism types 
usual clauses pairing application fix particular evaluation order case opposite choice equally plausible 
definition 
terms calculus gamma delta gamma delta 
say call value equivalent symbols fij generally theory theta calculus define call value theory generated set equations fe 
notion call value theory corresponds moggi calculus closely plotkin calculus moggi plotkin 
known calculus derives equations calculus instance equation validated calculus cps translation derivable calculus moggi rem 

see axiomatization section 
interpretation call value calculus control category interpret target calculus theta cps translation response category property interpretation typing judgment xn bn peter selinger table 
interpretation call value calculus control category gamma delta gamma gamma 
inl gamma 
delta gamma delta gamma gamma 
gamma 
inl gamma 
delta gamma delta gamma gamma 
inl gamma 
delta gamma hm ni delta gamma delta delta gamma 
gamma delta omega gamma delta omega id gamma gamma gamma gamma gamma gamma 
omega gamma delta id omega gamma gamma gamma gamma gamma gamma 
omega gamma delta gamma gamma gamma gamma gamma 
omega delta id gamma gamma gamma 
delta gamma delta gamma gamma gamma gamma gamma 
omega delta id gamma gamma gamma 
delta gamma mn delta gamma delta delta gamma 
gamma delta omega gamma delta omega id id omega gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma 
gammaffi omega app gamma gamma 
gamma delta gamma delta curry gamma gamma gamma gamma gamma 
gammaffi gamma delta omega gamma 
gamma omega delta gamma gamma gamma gamma 
gamma ff delta gamma gamma gamma gamma gamma 
delta delta gamma gamma gamma gamma 
delta delta gamma 
delta gamma 
delta gamma ff delta gamma gamma gamma gamma gamma 
delta gamma 
delta gamma ff ff delta gamma gamma gamma gamma gamma 
delta delta gamma gamma gamma gamma gamma gamma gamma 
delta delta delta delta gamma gamma gamma gamma gamma gamma 
delta gamma 
delta gamma ff fi delta gamma gamma gamma gamma gamma 
delta gamma 
delta ff ff am morphism theta theta bn theta ka theta theta kam ca currying ca ka gets ka theta ka theta theta kam theta bn morphism premonoidal structure rewrite ka theta ka theta theta kam kb eliminated types ca interpretation 
just call name possible give direct categorical interpretation call value calculus control category 
arrows go wrong way natural state interpretation terms control categories 
typing judgment interpreted morphism control category kb omega omega ka ka kam recall sections weak closed structure control category operation gammaffi maps app gammaffi omega curry omega 
gammaffi 
structure interpret call value function type 
notice satisfies laws typically expect call value function spaces instance gammaffi gammaffi gammaffi gammaffi omega gammaffi gammaffi gammaffi definition categorical interpretation call value 
control category 
interpretation calculus signature proceeds relative choice object oe type constant oe type constructor interpreted corresponding object control categories duality constructor control categories oe oe oe type constant omega gammaffi object context gamma xn bn write gamma omega omega ith weakening map 
control context delta ff ff am write delta jth injection 
typing judgments interpreted relative choice central morphism object constant interpretation typing judgment gamma delta morphism gamma delta gamma delta defined recursion shown table 
clauses table gamma delta refers curried form gamma delta 
notice clauses application pairing premonoidal structure forces choose evaluation order 
clauses evaluated lemma 
category continuations call value categorical interpretation calculus op coincides interpretation call value cps translation easy check lemma induction terms 
structure theorem immediately yields soundness completeness theories proposition soundness completeness 
theories induced calculus call value categorical interpretation precisely theories induced call byvalue cps translation 
currying clauses pairing application abstraction essential looks innocuous 
reader invited check instance gamma hm ni delta equal gamma delta gamma 
gamma omega gamma omega id gamma gamma gamma gamma gamma 
delta omega gamma id omega gamma gamma gamma gamma gamma 
delta omega delta gamma 
omega delta matter natural maps delta omega delta 
omega delta chooses maps 
notice curried form interpretation lemma 
definition 
value call value calculus term grammar hv ff fi ff ff fi fi cases ff fi occurs freely lemma 
value gamma delta gamma delta central 
peter selinger table 
control category operations typing judgments nullary operations id 
ff inl ff fi ff inr ff fi fi fl ff fl hy ff xi 
hh xi xi xi delta hx xi ffi ac bc ffi hff hfi ff fi xi xi gamma 
xii 
binary unary operations ffi ff ff fi ff fl fi fl 
fl ff fl ff omega xi proof 
recall section curry central 
settles case lambda abstraction 
cases equally obvious 

interested equational theories reduction semantics liberal definition value 
notion value corresponds existence predicate calculus moggi includes terms hv normal form 

call value calculus internal language control categories results section analogous call name calculus section 
just able define structural operations control category syntactically operations typing judgments call name interpretation structural operations control category call value interpretation 
operations typing judgments shown table 
lemma 
operations typing judgments table define corresponding structural operations control category call value interpretation natural isomorphism objects 
definition syntactic control category 
signature sigma call value theory construct syntactic control category sigma follows objects sigma control categories duality types language 
object constructors corresponding type constructors ba defined morphisms named valid standard form typing judgments typing judgments name morphism operations control category morphisms defined table 
lemma 
sigma defined control category 
canonical call value interpretation gamma calculus signature sigma sigma defined oe oe 
interpretation typing judgment call byvalue equivalent standard form 
pair sigma gamma determined isomorphism universal property respecting call value interpretation gamma control category unique strict functor control categories sigma gamma delta gamma delta valid typing judgments gamma delta 
definition internal language control category 
small control category construct signature sigma call name theory type constants objects take object constant morphism consider canonical interpretation language interprets type constants object constants curry 
gammaffi 
recall section curry central interpretation defined 
induced call value theory 
pair sigma called internal call value language lemma 
sigma internal call value language control category sigma proof 
morphism denotation canonical interpretation internal language objects morphisms canonical functor control categories sigma exists universal property full objects 
faithful definition sigma lemma 

axiomatization call value theories analogue proposition holds call value theories proposition 
fix signature sigma 
congruence relation typing judgments call value theory hold 
equation standard form 
sigma constructed lemma defined control category 

object constant morphism 
central sigma 
canonical interpretation gamma sigma interprets typing judgment standard form natural isomorphism types 
call name case characterization give complete axiomatization call value theories 
axioms shown table 
omitted peter selinger table 
axioms call value calculus axioms lambda calculus products fi fv fi hv 
id comp fv app mn xy fv pair hm ni hx yi fv axioms disjunction ff fi gamma fi ff gamma fi fn fi ff ff ff ff 
ff ff ff fn fi ff fi ff fi ff ff fi fi 
ff fi ff fi ff fi fn fi 
name ff ff name ff fi ff fi typing contexts 
customary notation denote term letters denote values defined definition 
theorem axiomatization call value theories 
set equations disjunctive calculus fixed signature 
call value theory congruence relation terms satisfying equations table 
proof 
soundness easy 
completeness proved verifying conditions proposition 

axiomatization combines moggi axioms computational lambda calculus ong stewart axioms call value calculus obvious axioms disjunction 
reader easily verify certain axioms included list derivable instance equations assert emptiness type empty gamma 
delta 
gamma ff delta ff fv 
filinski duality calculus shown call name calculus internal language control categories call value calculus internal language control categories 
immediate surprising consequence call name call value calculi syntactically control categories duality table 
syntactic translation call value call name types oe oe type constant la bm lam lbm la bm lam lbm la bm lbm lam 
terms lam lc lam lam lm lhm nim lmm lam lnm lbm mm lam lmm lam lbm mm lbm lmm lam lbm lx mm la bm fi lbm lmm fl lbm lam lnm fl ff mm mm lmm lam lff mm lam ff lam lmm ff fi mm fii ff fi mm ff fi lmm isomorphic 
precisely syntactic translations call value call name vice versa mutually inverse natural isomorphism types equivalence terms 
duality call value call name equational theories discovered filinski symmetric lambda calculus 
filinski calculus treats continuations class objects special syntax stresses symmetry continuations values 
filinski working custom language 
categorical semantics reveals close connection difficult see filinski symmetric lambda calculus forms internal language control categories expressive power equals disjunctive calculus 
categorical semantics provides unified framework dualities explained way independent particular syntax 
computationally duality call name call value understood duality demand driven data driven computation reverses direction data 
proof theoretically extension de morgan duality formulas proofs 
formally translation call name language sigma call value language achieved forming syntactic control category sigma considering internal call value language sigma op similarly gets translation call value callby name 
translations optimal introduce lot unnecessary constants 
possible optimize translations way additional constants intro peter selinger table 
syntactic translation call name call value types oe oe type constant hj ji hj ji 
terms ji hj ji ji ji hj ji ji hj ji ji hjx ji ji ji ji hj ff ji hj ji hj hj ji ji ji ff ji hj ff fi hj ji fii hj ff fi ji ff fi ji duced 
need extend syntax calculus just slightly allow set typed control constants addition usual object constants 
signature extended language triple 
extend definition named terms case control constant 
semantics generalizes effortlessly extension 
translation call value call name calculi exchanges object control constants 
exchanges object control variables reverses typing judgments turning terms inside 
call value function arguments possible return addresses gets translated call name function arguments return addresses 
precisely translations preserves typing sense xn bn ff ff am ff la ff la ffl lb xn lb terms turned inside special variable ffl appears translation represents outside term 
variable ffl plays similar role current continuation cps transform 
translations shown tables 
notice identical translations function types lambda abstraction application 
proposition 
translations preserve cps transforms categorical semantics natural isomorphism types 
follows translations mutually inverse sense ff ff control categories duality natural isomorphisms types 
note translations preserve cps transforms term translation evaluate precisely manner 
translations just preserve equational theories fact operational semantics 
particular appropriate notions observation preserve observational equivalence 

fact tensor product control category premonoidal monoidal reflected known fact call value calculus terms equivalent presence side effects thielecke hand call name terms equivalent 
dual phenomenon terms equivalent call value call byname 
ff fi fi ff appendix proofs section appendix give technical proofs omitted section 
included completeness need consumed reading 
proofs diagram chases easily done hand typeset 
objects wd theta 
theta map wd theta gamma gamma gamma gamma gamma gamma 
theta gamma 
theta wd natural natural discardable 
wd satisfies coherence theta wd fflffl wd theta wd theta theta thetab fflffl 
theta wd theta theta theta wd wd thetad fflffl theta theta wd theta theta follow naturality coherence turns follow immediately respective definitions 
symmetrically define wd theta theta gamma gamma gamma gamma gamma gamma 
theta gamma 
theta wd theta gamma gamma gamma gamma gamma gamma 
theta gamma 
theta peter selinger arrows satisfy similar coherence conditions joint coherence conditions theta wd wd fflffl theta wd fflffl theta wd theta theta wd wd fflffl theta wd fflffl theta wd theta follows naturality coherence proof lemma 
consider theta wd thetaa fflffl theta wd thetaa fflffl theta ffl fflffl theta wd theta ffl left square commutes naturality wd 
right square commutes definition currying top right gets currying left bottom gets ffi 
proof lemma 
consider theta ffl fflffl thetaa fflffl 
theta wd theta 
ffl 
triangle commutes coherence wd square naturality currying clockwise gets currying counterclockwise gets 
ffi control categories duality proof lemma 
consider theta wd fflffl theta thetaa oo thetaa wd wd theta wd fflffl theta thetaa wd theta wd yy thetaa theta ffl theta ffl fflffl theta ffl tt commutes 
currying clockwise gets ffi 
currying counterclockwise gets ffi 
proof lemma 
consider theta ccc fflffl theta fflffl theta fflffl ccc theta ffl clearly commutes 
currying clockwise gets natural ccc isomorphism currying counterclockwise gets proof lemma 
consider thetaa thetaa ffl thetaa fflffl thetaa ffl fflffl thetaa thetaa ffl thetaa fflffl thetaa thetaa thetaa wd fflffl thetaa thetaa ffl thetaa thetaa wd thetaa thetaa thetaa thetaa thetaa wd ffl thetaa thetaa thetaa ccc ffl thetaa thetaa thetaa thetaa ffl commutes currying counterclockwise get thetaa currying clockwise get ffi peter selinger proof lemma 
consider theta wd theta fflffl theta wd theta fflffl theta ffl fflffl theta wd theta ffl left square commutes naturality wd right square commutes definition currying top right gets currying left bottom gets pc ffi proof lemma 
consider theta theta theta wd xi xi phi phi phi phi phi phi phi phi phi phi phi phi phi phi phi phi phi wd theta wd fflffl theta wd fflffl thetaa thetaa zz wd theta wd zz theta thetaa ffl thetaa ffl fflffl theta ffl tth hh upper parts commute naturality coherence wd wd lower left commutes definition lower right definition currying left gets pa ffi currying right gets ffi 
proof lemma 

curry uncurry 
notice theta wd fflffl theta ffl fflffl theta wd thetab theta thetab theta ffl theta wd control categories duality currying definition gamma gamma gamma 
gamma 
show claim suffices show fflffl oo gf gc consider fflffl 
gamma oo 
gamma 
ccc 
fflffl oo ccc oo commutes naturality commutative diagram definition lemma 
top bottom gc 
proof lemma 
consider theta wd id theta fflffl theta id thetaa fflffl theta wd theta ffl square commutes naturality wd triangle commutes cartesian closed structure 
currying left bottom gets ffi id arrow top just currying gets id proof lemma natural dinatural central 
clearly family maps theta theta gamma gamma gamma gamma gamma gamma gamma 
theta gamma 
theta natural central theta ffl gamma gamma gamma 
dinatural natural central follows ffl dinatural natural central natural dinatural central lemma 
ffl theta discardable 
peter selinger proof 
axioms say discardable facts follows thetaa theta thetai hid fflffl theta ffl fflffl theta theta theta clearly counterclockwise arrow lemma 
ss ws maps ss gamma 
gamma gamma 
wsa theta theta wd thetad gamma gamma gamma gamma 
theta theta wd gamma gamma 
theta theta double uncurry ss ss 
theta theta ws ac gamma gamma gamma gamma gamma gamma gamma gamma 
theta theta ffl gamma gamma gamma gamma gamma 
theta ffl gamma gamma gamma 
proof 
consider theta theta thetac thetad wd thetad fflffl theta theta thetac thetad ffl thetad fflffl theta theta ffl thetad theta theta ffl thetad wd fflffl theta thetad wd fflffl theta ffl theta theta ffl gamma theta ffl top left square commutes definition top right square commutes naturality ffl 
bottom left square commutes naturality wd discardable ffl discardable lemma 
bottom right square commutes definition lemma 
diagrams commute theta gamma theta delta wd fflffl theta theta gamma theta wd wd fflffl theta theta delta fflffl theta theta wd fflffl theta theta theta theta gamma oo control categories duality theta theta ws gamma theta wd wd fflffl theta theta wd wd fflffl theta theta wd theta theta gamma gamma theta theta gamma ws theta theta proof 
straightforward diagram chases definitions 
proof lemma central 
consider cube fflffl fflffl fflffl fflffl top bottom faces commute lemma 
left right faces commute naturality back face commutes naturality front commutes shows central 
proof lemma copyable 
consider diagram ca abbreviates peter selinger 
ca ca theta ca ss theta gamma gamma theta delta fflffl theta ca theta gamma gamma theta delta fflffl ca ca theta ca gamma theta delta fflffl ca ca theta ca theta ca ss theta gamma ws fflffl theta ca theta ca theta gamma ws fflffl ca ca theta ca theta ca ffl theta gamma ffl fflffl ca theta ca ca theta ca ffl theta gamma gamma theta ca theta ca theta gamma theta gamma wd wd fflffl theta theta gamma fflffl ffl gamma gamma ffl fflffl theta theta gamma ffl gamma gamma gamma ffl top squares commute trivially 
square commutes naturality ws fact central 
square commutes lemma 
big triangle commutes definition centrality parallelogram commutes naturality clockwise curry seen simple ccc manipulations 
control categories duality counterclockwise arrow continue diagram theta theta ws gamma theta wd wd fflffl theta gamma theta delta wd fflffl theta theta wd wd fflffl theta theta wd fflffl theta gamma theta delta fflffl theta theta gamma fflffl theta theta gamma ws gamma ssf theta theta gamma ws ss theta gamma fflffl theta theta gamma rre gamma ffl gamma gamma gamma ffl fflffl theta theta gamma ffl gamma gamma gamma ffl fflffl theta theta ffl thetaa ffl fflffl gamma rre top cells commute lemma 
rest commutes fact central lemma 
counterclockwise arrow continue diagram theta gamma theta delta ss theta gamma fflffl theta wd ss theta gamma fflffl theta theta ss theta gamma theta gamma theta delta fflffl theta wd fflffl theta theta ffl thetaa ffl thetaa theta gamma theta delta delta thetaa fflffl thetaa theta wd delta theta gamma fflffl thetaa theta theta ffl theta ffl ii ii ii ii theta wd theta gamma theta ffl left squares commute naturality wd bottom triangle commutes definition commutes ccc operations 
currying counterclockwise get gamma 
gamma 
peter selinger diagrams show copyable 
acknowledgments research done spring visiting brics basic research computer science centre danish national research foundation 
hosts brics productive semester 
am indebted john power encouragement early phase 
olivier danvy pointing filinski offering helpful advice 
thielecke explanations nature continuations carsten fuhrmann alan jeffrey paul levy contributed stimulating discussions 
moggi 
declarative continuations monads 
unpublished draft 
de groote 
cps translation calculus 
proceedings th international colloquium trees algebra programming caap springer lncs pages edinburgh 
de groote 
relation calculus syntactic theory sequential control 
springer lncs 
felleisen 
calculi conversion syntactic theory control state imperative higher order programming languages 
phd thesis indiana university 
felleisen hieb 
revised report syntactic theories sequential control state 
theoretical computer science 
filinski 
declarative continuations categorical duality 
master thesis diku computer science department university copenhagen aug 
diku report 
fuhrmann 
direct style continuation passing style models control 
available www dcs ed ac uk home car research htm november 
fuhrmann 
direct models computational lambda calculus 
proceedings mfps xv electronic notes theoretical computer science 
griffin 
formulae types notion control 
popl proceedings th annual acm sigplan sigact symposium principles programming languages 
hofmann streicher 
continuation models universal calculus 
proceedings twelfth annual ieee symposium logic computer science pages 
jeffrey 
premonoidal categories graphical view programs 
preprint dec 
kelly 
mac lane conditions coherence natural algebra 
lafont reus streicher 
continuations semantics expressing implication negation 
technical report university munich 
lambek scott 
higher order categorical logic 
cambridge studies advanced mathematics 
cambridge university press new york 
mac lane 
natural associativity commutativity 
rice university studies 
moggi 
computational lambda calculus monads 
technical report ecs lfcs edinburgh university department computer science 

ong 
semantic view classical proofs type theoretic categorical denotational characterizations 
proceedings eleventh annual ieee symposium logic computer science pages 
control categories duality 
ong stewart 
curry howard foundation functional computation control 
proceedings symposium principles programming languages pages 
parigot 
calculus algorithmic interpretation classical natural deduction 
proceedings international conference logic programming automated reasoning st petersburg springer lncs pages 
plotkin 
call name call value calculus 
theoretical computer science 
power robinson 
premonoidal categories notions computation 
math 
struct 
computer science 
pym ritter 
semantics classical disjunction 
preprint 
selinger 
implementation call name calculus 
preprint 
available electronic library 
streicher reus 
classical logic continuation semantics machines 
journal functional programming nov 
thielecke 
categorical structure continuation passing style 
phd thesis university edinburgh 
