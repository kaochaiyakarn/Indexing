constructive game semantics language linear logic department computer information science university pennsylvania rd street philadelphia pa usa saul cis upenn edu march semantics language order additive multiplicative linear logic language classical order logic sorts disjunction conjunction 
semantics allows capture intuitions associated linear logic constructivism sentences games sentences resources sentences problems truth means existence effective winning resource problem solving strategy 
introduces decidable order logic language gives proof soundness completeness full language respect semantics 
allowing strategies shown lead classical logic 
semantics similar blass game semantics blass game semantics linear logic 
straightforward reduction corresponding notions validity completeness proof adapted logic induced blass semantics show decidability equality major problem left open blass 
reader needs familiar classical necessarily linear logic arithmetic 
author grateful support university pennsylvania national science foundation ccr ccr institute research cognitive science university pennsylvania 
controversial points logical semantics existential quantifier read exists readings usually perceived synonyms difference crucial 
exists sounds metaphysical means deals reality 
leave philosophy right existence classical notion existence simply practical meaning 
consider sentence disease medicine disease 
way finding disease cure know sentence true classical sense reason happier case false 
general truth falsity sentence concern far signify reflected reality 
course relative notion 

god exists really synonym 
interesting specification turing machine 
treatment existential quantifier existence means possible machine captured nonclassical concept truth suggest called effective truth 
gist semantics effective truth sentences considered certain tasks problems solved machine agent effective strategy doing effective truth means existence strategy 
convenient way shaping approach build semantics terms games task problem task problem winning certain game 
naive opponent object classical truth sentence means try chemical sooner reason happy 
give answers naive manner opponent suggests way finding medicine second fact way hardly way poor sick man die reach appropriate medicine 
players games proponent asserting sentence opponent tries refute 
proponent represents supposed follow effective strategies opponent strategy meant represent blind forces nature devil 
universal quantifier mean opponent move existential quantifier mean proponent move 
medical proposition understood game play consists moves move opponent names arbitrary disease second move proponent name medicine play won proponent really cure effective truth proposition really reason leading quiet life effective strategy machine find cure disease sent devil 
connective treated manner existential quantifier 
say understood game play consists moves opponent chooses object leads position proponent chooses left right getting positions play won proponent belongs chosen left belong right chosen 
clear effective truth proposition means decidability predicate general saying sentence effectively true assert certain relation similar decidability sophisticated holds binary relation expressed sentence 
effective truth sentence means effective way choosing object sets belongs set 
examples operator connects atomic formulas games 
general case proponent win game ff ff means chosen components ff continue playing win game ff component abandoned 
natural sort disjunction denoted position ff ff oblige proponent choose ff give 
move components reserving time switch moment ff ff back task playing fact simultaneously components win 
strict definitions main text sections order develop intuition continue discussing naive examples 
am prison 
prison cell doors locked outside left hand door right hand door 
goal escape pass doors 
happen know tonight doors unlocked 
consider proposition left hand door unlocked right hand door unlocked 
order escape able solve game problem role proponent understood necessary able determine exactly door unlocked simply try turn unlocked 
write solve quotation marks game moves assumption doors really unlocked trivially won 
slightly change situation doors locked mined tonight removed mine doors 
need just 
treat negation way rules game ff ff roles proponent opponent interchanged 
example version chess win proponent means win usual chess play moves playing white 
game win proponent means lose moves chess play playing black 
notice classical principle ff ff hold negation interchanging roles twice player comes initial role 
means classical dualities 
particular defined terms xff ff 
game chess mentioned temptation arises discuss example original 
consider game defined 
fact play 
left board proponent plays white right plays black 
proponent task win sense usual chess moves amendment 
switching components play proponent privilege move case chess rules boards oblige move 
soon opponent move proponent wait opponent move 
proponent chess win game opponent world champion kasparov strategy solution kasparov move right chessboard plays white repeat move left chessboard play white copy kasparov reply move back right chessboard example proposition pure game propositional connective operation games 
normal propositions games propositional connectives operations games 

winning strategy game type ff ff means principle ff ff valid sense 
game choose win just little chance defeat kasparov 
sort disjunction corresponds dual conjunction conjunctions ff fi formally defined ff fi ff fi ff fi 
example play kasparov game kasparov game 
win 
move soon chess rules oblige move boards 
terminology linear logic shall call additive disjunction additive conjunction multiplicative disjunction multiplicative conjunction 
terminology linear logic accident 
logic effective truth set effectively true sentences ff ff called effective tautologies turns extension girard linear logic mall fact proper extension mall weakening called bck affine logic behavior additive multiplicative connectives similar behavior linear logic 
linear logic substructural logics called resource logics 
people introduced logics type resource intuition minds intuition formalized strict semantics full language 
name resource logics related syntactic characteristics logics justified semantically 
syntactic characteristics determined forbidden rules contraction weakening 
call formulas sequent resources read sequent gamma collection resources getting gamma try specify getting means contraction rule theta gamma theta gamma says double resources collection theta getting gamma rule says collection theta double 
weakening rule theta gamma theta gamma says reduce resources possess achieve gamma resource theta resource theta account finite number possible plays game effective solution winning strategy modern machine strong follow strategy 
little bit carefully chosen example convince game ff ff effectively solvable 
reduced back theta 
justification forbidding contraction rule resources possess 
justification forbidding weakening rule sounds odd resources possess 
logic effective truth resource conscious natural consequence game semantical approach 
sentences classical logic static values 
sub sentence occuring sentence sequent reasonable senses occurrence quantity occurrences matter rule contraction works 
game semantics sentences treated dynamic different occurrences sentence denote game set potential plays process playing game occurrences realized different plays game 
just say ff ff different ff 
better illustrated appealing chess 
example game proponent winning strategy consisted ensuring occurrences realized play 
trick fails game game nn corresponding occurrences order left right 
kasparov play different openings second third plays white ensure play chessboard coincides play 
kasparov win nn won chessboard play lost winning necessary win chessboard win second third 
resource conscious effects arise consequence approach game semantics apparently chance claim formalization intuitive resource semantics 
speculate little bit 
things call resources everyday life different nature say money electrical energy time space computational operations 
feature common things call resources resource necessary getting achieving accomplishing obtaining converting 
suggests idea way building resource semantics resource characterized set things converted 
proceed consider examples 
style examples standard girard author sort philosophy support 
today situation economic chaos followed collapse ussr currencies circulating ex soviet republic georgia home country russian rr coupons gc 
easily convertible problematic convert dollars 
lucky dollars ll problems converting coupons bank buy dollars offering dollar coupons whichever 
implications true ffl get rr 
ffl get gc 
sentence ffl get rr get gc true 
classical logic certainly everyday language sentence shortened get rr gc understood get rr gc put pocket coupons 
case implication true need antecedent 
just point arrive idea considering sorts conjunction operations resources 
resource ab means option convert whichever 
resource means means resources able spend way 
having implies having resource rr gc resource rr gc 
coupons legal currency georgia people prefer coupons 
government tries strengthen coupons 
forbidden accept state owned stores salesmen obliged accept coupons customer prefers pay rate rr gc 
salesman selling bottle wine get coupons know 
situation describes disjunction operator resources 
sentence ffl salesman bottle wine get rr gc true sentences ffl salesman bottle wine get rr ffl salesman bottle wine get gc get means get wants false 
see point resource fully characterized set things immediately converted set rr resources ffl ffl bottle wine resource evidently stronger second 
different resources nature conversion 
am possessor case chooses rr gc second case possessor richer possessor bottle wine 
resource characterized parameters set objects resource immediately converted labels say label indicates object resource converted chosen possessor resource label indicates choice done somebody 
notice come game understanding resources resources positions game immediately converted means transfer position position legal move label resp 
means proponent resp 
opponent move position usually resource considered just means achieving goal value resource associated potential convertibility goal 
consider goals special sort resources converted 
resource goal goal convertible dead reached dead missed possibility reach goal 
example goal get rid headache resource purpose 
convert dollar aspirin convert effect organism 
relieves headache goal achieved 
am situation dead resources spent goal missed 
associate label goals label dead ends 
reaching goal means winning play hitting dead means losing 
purely game intuition condition losing play label proponent privilege choose move duty dead proponent carry duty possible moves 
intuition condition winning game symmetric 
resources accept 
just ultimately converted goals 
converted means proponent strategy guarantees reaching goal 
natural require strategy effective 
mentioned negation operator resources 
intuition negation resource characterized saying acts equivalent ffl spend ffl get words operator 
exact behavior defined section seen definition general works operator adds resources equal 
terminal resource goal dead treatment yield equivalence confuse 
situation headache headache better simply headache 
mean goal getting rid headache achieved 
better converted aspirin different headache gives chance achieve goal headache 
mentioned logic effective truth proper extension bck hand strictly included classical logic language meant augmented thought synonyms respectively 
nice fact logic effective truth full language turns decidable polynomial space propositional predicate levels contrasts undecidability classical predicate logic 
focal result proof takes rest 
thing worth mentioning 
soon remove requirement effectiveness proponent strategies games allow strategies get classical logic distinction additive multiplicative versions disjunction conjunction simply disappears 
classical logic variant linear logic result special cases general semantical approach 
historical remarks 
apparently lorenzen introduce game semantics late 
suggested meaning proposition specified establishing rules treating debate game proponent asserts proposition opponent denies 
lorenzen approach describes logical validity exclusively terms rules appealing kind truth values atoms semantics somewhat vicious mind looks just pure syntax semantics 
subsequently lot game semantics done lorenz hintikka group number authors 
notion effective truth introduced defined game semantical terms fact similar say kleene recursive realizability specifically concerns treatment additive connectives quantifiers additives 
time predicate recursive realizability predicate effective truth arithmetical sentence allowed contain multiplicative connectives additives complexity sigma comparison recursive realizability effective truth added recursively realizable sentences true classical sense sentences form gamma oe oe delta recursively realizable effective truth strong version classical truth 
elaborated semantics time writing talk logic effective truth logic computer science conference marseille june 
conference met andreas blass learned earlier similar semantics 
described remarkable decidability fragments corresponding logic established 
multiplicative propositional fragment fragment uses connectives 
fragment consisting additive free sequents sequent hoe oe thought formula oe oe 
question unrestricted logic corresponding blass semantics full propositional fragment decidable recursively enumerable arithmetical answered far 
fragments coincide corresponding fragments logic effective truth holds logic 
similarity semantics related essentially identical treatments logical connectives operations games considerable differences blass approaches especially consequences approaches 
games finite play finite length blass games infinite fact plays crucial role partial completeness proofs 
things second order definable theory games bounded depth including completeness proof logic effective truth formalized peano arithmetic 

time blass semantics require proponent strategies effective requirement spirit approach effect main philosophical practical motivation introducing nonclassical semantics 

finiteness plays definitions simpler natural 
play assumed lost player move position play need special parameter indicating plays won player game 

notion effective truth strengthening classical notion truth traditional models traditional languages 
standard model arithmetic unique game semantical model atomic sentence ff terminal position opponent obligation move impossible ff true standard model proponent obligation move 
set effectively true arithmetical sentences proper subset set true classical sense 
blass approach hardly allows speak truth standard model arithmetic order maintain difference classical game semantical truth atoms need interpreted infinite games clear game natural interpretation say abramsky jagadeesan revised blass game semantics modifying game rules investigated multiplicative fragment corresponding logic validate weakening closer original girard linear logic stronger 
fragment shown decidable question decidability logic full propositional fragment remains open 
proof ff ff uses counterexample ff undetermined game game players winning strategy proof fails soon ff interpreted finite game finite games determined strategies allowed 
ff pi arithmetical sentence asserts effectively true ff ff true effectively true 
suppose additive disjunction effectively true little analysis treatment shows ff ff effectively true 
analysis situation reveals cases get effectively true sentence classically false 
basic notions facts games definition net games triple hw ri ffl nonempty countable decidable set elements called positions ffl effective function called labeling function element value called label intuitively means proponent move means opponent move 
ffl decidable binary relation called development relation converse founded infinite chain rw rw positions 
intuitively means transfer position position legal move 
case called development 
usually denotes set developments terminology hw ri net games 

legal sequence mean sequence positions th term sequence exists development th term 
converse foundedness means legal sequence finite 

say rt development reflexive transitive closure holds say rt development legal sequence vn positions vn label rt development special case rt development 

label means proponent move label means opponent move terms player player synonyms proponent opponent respectively 
definition game quadruple hw si hw ri net games element usually denotes net hw ri games denote game hw si 
position position synonyms said starting position 
legal sequence mean legal sequence term convention legal move speak function specifying type done definitions 
type function really matter seen context awkward indicate case range domain function purely reasons correct style 
order avoid possible confusion caused usage notion function fix large universe assume set positions game consider included safety suppose natural numbers things ffl function specified mean partial function type ffl finite function mean function sense defined finite number arguments 
definition hw si game functions 

play proponent strategy opponent strategy sequence positions construct way position suppose positions wn label wn ffl defined wn wn th position ffl wn position notice legal sequence finite 

play play proponent strategy opponent strategy functions observe play legal sequence 

play player strategy see play player strategy gamma player strategy function words play player strategy legal sequence hw wn ffl ffl definition depth game hw si ordinal number ff srw ff depth 
developments depth 
roughly depth game maximal possible length play 
definition suppose game play position label say lost player won gamma player 
simply words won lost specifying player mean won proponent lost proponent 
play won lost 
intuitively play won position position reached opponent move label position lost play dual situation proponent move 
definition game 
ffl solution proponent winning strategy function play proponent strategy won 
ffl dually opponent winning strategy function play opponent strategy lost 
account development relation converse founded fact considered correct alternative definition notion solution form definition suggests relation solution applied formulas interpreted games belongs family relations type realizes lead diverse known concepts realizability see 
fact definition notion solution function solution game hw si iff holds ffl solution game ffl position solution game 
proving definitions solution equivalent easy warming exercise reader 
fact function solution game finite function see convention play proponent strategy opponent strategy won 
proof 
basic definition solution direction trivial 
direction suppose solution function play proponent strategy opponent strategy lost 
function coincides positions participate undefined object 
clearly play proponent strategy opponent strategy hand legal sequence finite function finite 
finite function play proponent strategy opponent strategy lost 
definition ffl game said solvable solution 
ffl game said effectively solvable effective recursive solution 
solution defined function current position see previous moves history play 
situations convenient deal strategy scans initial segment play position 
strategies called 
definition hw si game function 
play proponent history sensitive strategy legal sequence hw wn ffl hw ru ffl definition history sensitive solution game function play proponent history sensitive strategy won 
theorem 
game solution iff history sensitive solution 

game effective solution iff effective history sensitive solution 
proof 
prove clause theorem 
proof clause simpler 
consider game hw si 
suppose effective solution function defined hw wn wn 
evidently effective history sensitive solution 
suppose effective history sensitive solution machine computes ffl sequence mean legal sequence hw wn hw recursive sequences recursively enumerated 
fix recursive list sequences 
partial recursive function value element computed machine ffl checks list sequences till moment sequence ht simulates machine ht input halts gives output gives output claim solution show suppose contradiction lost play hw wn proponent strategy verify induction sequence term trivial hsi sequence 
suppose 
induction hypothesis sequence hu um um gamma obviously hu um sequence 
suppose gamma 
hw wn play proponent strategy gamma 
definition means sequence hv gamma hv hv sequence proved 
sequence ht wn may suppose ht sequence list sequences term wn observe ht sequence initial segment play proponent history sensitive strategy history sensitive solution position ht wn 
definition wn wn contradicts assumption wn position play hw wn proponent strategy position follow wn play 
theorem proved 
lemma suppose hw si game solvable 
solvable 
proof 
fix solution 
define function show history sensitive solution 
theorem mean solution 
vn hs gu play proponent history sensitive strategy looks hs vn 
observe play lost hv vn lost play proponent strategy impossible solution 
follows fact known theorem due zermelo theorem game solution exactly players winning strategy 
proof 
start proving note definitions facts games enjoy perfect duality interchange solution proponent opponent won lost 
fix game hw si 
observe players winning strategies play corresponding strategies simultaneously won lost impossible 
depth see 
may suppose rt development see means depth induction depths going show arbitrary element players winning strategy 
induction consider cases show players winning strategy 
case proponent winning strategy 

appear play converse foundedness clear solution solution 
case opponent winning strategy 
dual previous case define 
case solution 
lemma solution 
case 
dual case 
remains show cases takes place 
suppose case case 
depth depth apply induction hypothesis conclude proponent winning strategy deal case 
suppose case take place solution 
induction hypothesis means deal case 
sentences games terminology notation 
language mean classical order language functional individual symbols supplemented additional binary connectives 
precisely language determined identified countable set predicate letters function assigns predicate letter natural number called arity said ary 
alphabet language consists ffl individual variables metavariables 
ffl propositional connectives negation additive disjunction additive conjunction multiplicative disjunction multiplicative conjunction ffl quantifiers existential quantifier universal quantifier 
ffl technical signs comma left parenthesis right parenthesis 

denotes fixed language 

define set literals union sets positive negative literals defined follows ffl ff positive literal ff xn ary predicate letter xn variables xn just 
ffl ff negative literal ff fi positive literal fi word atom synonym positive literal 

formulas elements smallest class fml expressions saying ff formula ff fml ffl literals formulas ffl ff fi formulas ff fi ff fi ff fi ff fi formulas ffl ff formula variable ff ff formulas omit parentheses formulas lead ambiguity 

formal language prefer restrict scope atoms 
introduce ff complex formulas abbreviation defined follows ffl ff df ff ffl ff fi df ff fi ffl ff fi df ff fi ffl ff fi df ff fi ffl ff fi df ff fi ffl xff df ff ffl xff df ff 

formulas ff ff said opposite 

define free occurrence variable formula usual way occurrence scope occurrence 

standard notational convention formula fi denoted fi xn xn variables occur free fi free variables fi 
fi variables terms see denotes result substituting free occurrences xn respectively fi 

closed formula sentence formula free occurrences variables 

suppose nonempty countable set individuals 
formula parameters pair hff fi ff formula finite function subset set free variables ff deal sentence parameters think sentences parameters formulas free variables substituted elements write ff hff xn fi xn 
words literal atom formulas literals atoms parameters 
literal sentence call 
definition model triple hdm rm ffl dm nonempty countable decidable set called domain individuals ffl effective total function type sentences parameters dm called function ffl rm decidable converse founded binary relation sentences parameters dm called relation 
definition model said elementary relation rm empty 
definition model define nm hwm rm net games induced follows ffl wm set sentences parameters dm ffl 
ff ff ff atom 
ff fi xff 
ff fi xff 
ff gamma ff 
ff fi ff fi 
ff fi ff fi ffl iff holds 
oe atoms 
oe ff fi ff fi 
oe xff ff dm 
oe ff ffr ff ff ff 
oe ff fi ff oe ffr ff ff ff fi fi oe fir fi fi ff fi see sentences interpreted games model sentence ff understood game nm ff 
game referred game corresponding ff simply game ff nm ff 
games type nm ff call linguistic games 
standard model arithmetic defined example elementary model 
versions equivalent expressive power language arithmetic 
choose infinitely predicate letters particular def def def enumeration increasing godel numbers primitive recursive definitions relations 
relations defined def def def respectively 
arity associate arity predicate letter predicate letter interpreted represents relation interpretation set definition standard model arithmetic definition standard model arithmetic denoted elementary model hd ffi set nat natural numbers tuple natural numbers arity predicate letter gamma delta iff convention abuse notation denotes ary primitive recursive relation metalanguage expression arithmetical formula predicate letter represents course practice induces ambiguity infinitely infinitely represent 
suppose relation deal choose fixed representing text stands concrete convention allows standard notations standard primitive recursive relations explaining meanings done example expression thought atomic formula language arithmetic 
allows pretend arithmetical language terms primitive recursive functions consider formulas expressions ff ff formula function 
note case ff contains predicate graph looks say ff 
ff ff exactly logical structure ff simply result replacing ff atom containing free ff occurrence representing relation atom representing relation 
simply denote different atoms different case arities 
sequence arithmetical sentences parameters nat legal sequence positions fact won play explanation notation see definition 
gamma delta gamma delta 
gamma delta 
gamma delta 
gamma delta 
gamma delta 
gamma delta restrict considerations elementary models need relation 
elementary models atoms interpreted specific games games depth trivially solvable need able interpret atoms possible games 
suffice say logic corresponding semantics closed substitution rule 
deal elementary models game ff ff effectively solvable atomic ff may effectively unsolvable ff 
net games completely captured models hardly elementary models logical operators appear operations games 
straightforward ways capturing net hw ri interpret positions atomic sentences defining value function pn equal stipulating relation holds pn pm iff truth effective truth identifying think classical order language 
model classical logic understood pair hd gi nonempty set domain individuals function assigns ary predicate letter language ary relation sentence ff parameters classical value ff denoted cvm ff defined induction complexity ffl atom cvm holds cvm ffl cvm ff gamma cvm ff ffl cvm ff fi cvm ff fi maxf cvm gamma ff delta cvm gamma fi delta ffl cvm ff fi cvm ff fi gamma ff delta cvm gamma fi delta ffl cvm gamma xff delta gamma ff delta dg ffl cvm gamma xff delta gamma ff delta dg 
definition model classical model cl hd gi induced defined follows ffl dm ffl ary predicate letter nm solvable easily seen elementary model cl classical model induced ff parameters dm cvm cl ff ff 
theorem model cl classical model induced oe sentence parameters dm cv cl oe iff game nm oe solvable 
proof 
suppose cvm cl oe show induction complexity oe nm oe solvable 
case oe atom 
cv cl oe means cl holds means nm oe solvable 
case oe ff ff atom 
cvm cl ff induction hypothesis nm ff solvable 
nm ff function sentence fl fl fl may suppose defined sentence value sentence 
easy verify solution nm ff fl fl lost nm ff play proponent strategy fl fl won proponent nm ff play opponent strategy impossible nm ff 
case oe ff ff cl ff cvm cl ff 
may suppose cv cl ff 
induction hypothesis solution nm ff 
oe ff sentence fl oe fl fl 
claim solution nm oe 
suppose lost nm oe play proponent strategy look hoe ff fli possibly empty sequence fl sentences 
observe hff fl lost nm ff play proponent strategy impossible assumption solution nm ff 
case oe ff ff cvm cl ff cvm cl ff induction hypothesis nm ff nm ff solvable 
ff ff developments oe follows lemma nm oe solvable 
case oe ff ff cl ff cv cl ff 
may suppose cv cl ff 
induction hypothesis solution nm ff 
function sentence fi fi fi fi fi fi intuitively play nm ff ff play strategy proponent means plays strategy left component multiplicative disjunction right component 
suppose lost nm oe play hfi fl fi fl fi fl ff ff oe proponent strategy km numbers interval fi gamma fi intuitively fk means position fi fl appeared result moving left component multiplicative disjunction positions appear result opponent move right component interesting 
easy see hff fi fi km lost nm ff play proponent strategy impossible proponent winning strategy nm ff 
nm oe play proponent strategy lost solution nm oe 
case oe ff ff cvm ff cvm ff 
induction hypothesis solutions nm ff nm ff respectively 
function sentence fi fi ffl fi fi fi fi fi ffl fi fi fi fi fi 
intuition proponent follow strategy nm ff ff play means strategy component multiplicative conjunction strategy second component 
suppose lost nm oe play hfi fl fi fl fi fl ff ff oe proponent strategy play lost label position fi fl positions fi fl label 
may suppose fi 
km numbers interval fi gamma fi fk means position fi fl appeared result moving left component multiplicative conjunction 
remains verify easily done hff fi fi km lost nm ff play proponent strategy impossible proponent winning strategy nm ff 
contradiction proves solution nm oe 
case oe xff 
similar case 
case oe xff 
similar case 
just shown cvm cl oe solution nm oe 
symmetric way show cvm cl oe cv cl oe nm oe rules solvability nm oe 
identifying models classical models induced solvability truth appear 
reader easily verify holds fact arithmetical sentence ff true classical sense classical standard model arithmetic ff solvable 
safe natural word true solvable usage established clause definition definition ff sentence model ffl ff said true game nm ff solvable 
ffl ff said effectively true game nm ff effectively solvable 
tautologies effective tautologies having different notions truth define different notions tautology definition ff sentence ffl ff said tautology ff true model ffl ff said effective tautology ff effectively true model theorem establishes usage traditional word tautology safe set tautologies sense coincides set tautologies classical sense 
third clause theorem notion arithmetical instance formula roughly means result substituting predicate letters formula arithmetical formulas arity 
precise definition definition arithmetical translation language function defined necessarily proper subset set predicate letters assigns ary predicate letter arithmetical formula oe xn may contain parameters exactly free variables 
say translation formula oe oe may contain natural numbers parameters defined predicate letters occuring oe letter contain quantifiers binding individual variables occuring oe 
authors tautology refer valid formulas propositional logic xp xp tautology 
translation oe means translation oe 
oe define formula oe induction subformulas oe ffl atomic ff variable parameter fi xn ff fi ffl oe oe oe ffi oe ffi ffi qx oe 
arithmetical instance oe oe translation oe 
cl classical predicate logic language sorts disjunction sorts conjunction understood synonyms 
straightforward induction complexity formula fi show translation fi fi fi exactly free variables 
theorem sentence oe equivalent ffl oe cl ffl ii oe tautology ffl iii arithmetical instance oe true standard model arithmetic 
proof 
ii suppose oe tautology oe true model classical value oe classical model cl induced godel completeness theorem cl oe cl 
ii iii immediately follows lemma proved section 
iii known fact oe cl arithmetical instance oe oe classical value classical standard model arithmetic 
fact easily seen say analysis henkin proof godel completeness theorem cl means oe true sense standard model arithmetic 
theorem analog theorem main result rest devoted proof 
logic mentioned defined shown decidable section 
theorem sentence oe equivalent ffl oe ffl ii oe effective tautology ffl iii arithmetical instance oe effectively true standard model arithmetic 
logic syntactic description decidability section rest stated parameter mean natural number sentence see mean sentence parameters nat set natural numbers 
terminology notation 
speaking subformula literal formula interested concrete occurrence subformula subformula may occurrences 
classical logic care distinction subformulas occurrences 
order stress mean concrete occurrence shall words osubsentence occurrence 
ff formula result substituting ff fi fi ff result fi fi 

surface osubsentence sentence ff osubsentence fl scope 
case say fl surface occurrence ff 
say sentence fl weak surface occurrence ff fl scope may scope 
atoms scope nonatomic sentence surface occurrence ff weak surface occurrence ff 

multiplicative atom multiplicatively atomic sentence sentence forms ff fi ff fi xff xff 
words multiplicatively atomic sentence surface osubsentence 

formula multiplicative combination surface 
formula ff fi ff combination gamma gamma gamma ff fi ff combination gamma gamma gamma fi ff ff combination gamma gamma ff fi ff combination gamma ff fi ff 
shall usually capital latin letters multiplicative combinations 
say gamma gamma gamma fi ff ff means ff fi ff ff fi ff means fi ff ff 
sign expression ff ff shall indicate ff multiplicative atom 
sentence ff ff contains exactly multiplicatively atomic surface ff ff may contain multiplicatively atomic 

sentence oe possibly empty set disjoint pairs ff ff opposite recall surface oe pairs called married couples ff ff said spouses 
pairs disjoint spouse 
spouse said married single 

said clean married couples 
sentence ff time understood corresponding clean denoted letter ff vice versa clean ff identified sentence ff 
order relax terminology notation convenient assume set married couples graphically built say spouses connected curved lines 
freely terms result replacing ff osubsentence fi fl result replacing ff parameter parameter 
true result may remain say married replaced different sentence spouse left unchanged new spouses opposite 
interesting cases replacement safe 
replaced osubsentence contain married 
occurrences parameter replaced parameter clearly case married couples containing remain opposite changed 
definition ff function ffg calling value sentence fi fi 
spouses different opposite 
single 
ff fi xff 
ff fi xff 
ff fi ff fi 
ff fi ff fi definition ff said ff ff said 
course question decidable 
definition fi said marriage extension ff ff fi identical sentences set married couples ff proper subset fi 
definition ff fi 

say fi hyperdevelopment ff iff holds ffl fi result replacing ff surface osubsentence fl ffi fl ffi ffl fi result replacing ff surface osubsentence xfl fl parameter get definition strict hyperdevelopment add clause condition smallest parameter occuring ff 

say fi hyperdevelopment ff iff holds ffl fi result replacing ff surface osubsentence fl ffi fl ffi ffl fi result replacing ff surface osubsentence xfl fl parameter ffl fi marriage extension ff 
get definition strict hyperdevelopment add clause condition occurs ff ff contain parameters 
say fi simply hyperdevelopment resp 
strict hyperdevelopment ff fi hyperdevelopment resp 
strict hyperdevelopment ff 
lemma infinite chain ff ff ff hyperdevelopment ff fixed ff finite upper bound lengths chains 
set strict ff finite 
proof 
fact length chain number occurrences ff number occurrences predicate letters ff occurrences married 
suffices observe transfer ff ff ff hyperdevelopment ff means spending ff occurrences operators occurrence disappears ff pair single married ff 
evident 
definition ff length longest chain ff ff ff hyperdevelopment ff fi hyperdevelopment ff fi ff 
definition define set stipulating ff iff holds 
ff hyperdevelopment belongs 
ff hyperdevelopment belongs definition correct defines ff terms fi fis ff 
notation ff denotes result replacing ff occurrence parameter see 
lemma suppose parameter occuring ff parameter 
ff iff ff proof 
occur ff ff ff congruent sense difference sentences uses second 
reason 
lemma sentence ff parameters ff ff proof 
assume ff ff fl fl fl 
ff fl fl fl 
note ff iff ff 
suppose ff ff ff 
ff married fl ff fl fl 
clearly ff ff consequently ff 
similar way show ff ff 
prove lemma proceed induction ff 
case ff 
hyperdevelopment fi ff 
induction hypothesis fi ff show fi hyperdevelopment ff 
definition fact fi hyperdevelopment ff means subcases takes place subcase fi result replacing ff fl form 
may suppose 
ff fl fl fi fl fl ff fl fl fi fl fl see fi hyperdevelopment ff 
subcase fi result replacing ff fl form parameter may suppose 
ff fl fl fi fl fl denote formula oe 
ff xoe fl fl easy see fi oe fl fl case fi hyperdevelopment ff 
subcase fi marriage extension ff 
obvious fi marriage extension ff fi hyperdevelopment ff 
case ff 
means ff 
consider hyperdevelopment ffi ff 
need show ffi subcase ffi result replacing ff fl form may suppose 
clear fl 
ffi fl fl ffi hyperdevelopment ff 
notice ffi ffi 
ff ffi induction hypothesis ffi subcase ffi result replacing ff fl form parameter may suppose 
view lemma contain may suppose fl 
ffi fl fl notice ffi hyperdevelopment ff ffi ffi 
ff ffi induction hypothesis ffi lemma definition ff ff iff ff strict hyperdevelopment belongs ff strict hyperdevelopment belongs proof 
suppose ff 
ff hyperdevelopment ff strict hyperdevelopment time hyperdevelopment strict hyperdevelopment ff assume ff hyperdevelopment fl ff fl fl time strict hyperdevelopment ff done 
fl result replacing ff osubsentence xffi ffi parameter smallest parameter occuring ff fl result replacing ff osubsentence xffi ffi 
note fl strict hyperdevelopment ff 
show fl notice fl fl fact occur ff occurs osubsentence ffi sentence fl essential fl implies fl 
suppose ff 
ff hyperdevelopment ff strict hyperdevelopment ff assume ff hyperdevelopment fi ff fi fi time strict hyperdevelopment ff fi result replacing ff osubsentence xffi ffi occuring ff 
parameter occuring ff ff contain parameters 
easily seen fi result replacing ff osubsentence xffi ffi means view assumptions fi hyperdevelopment ff 
fi implies fi theorem decidable 
fact decidable polynomial space 
proof 
decidability immediately follows lemmas straightforward analysis appropriate definitions proofs reasonable decision algorithm needs polynomial space 
lemma 
ff fi hyperdevelopment ff fi 
ff fi hyperdevelopment ff fi proof 
consider clause case fi hyperdevelopment ff basis 
cases clauses handled quite similar way 
induction ff 
suppose ff ffi ffi fi ffi 
ff definition fi suppose ff 
little analysis definition ffi 
hyperdevelopment ff belongs observe hyperdevelopment form ffi ffi ffi hyperdevelopment ffi 
induction hypothesis ffi ffi ffi means ffi relaxed linguistic games require domain model countable shall assume domain dm model consider nat true finite model isomorphic model domain nat finite model viewed countably infinite model infinitely copies elements domain 
assumption domain model nat fact lead loss generality 
agreed previous section sentence mean sentence parameters nat section assume model fixed 
suggest reader recall definition terminological convention identify sentence ff game nm ff 
definition define ffi net hwm ffi games wm defined ff fi ffr ffi fi iff fi result replacing ff surface multiplicatively atomic osubsentence ffi label ff sentence ffi ffi rm ffi terminology notation order distinguish versions nm ffi net games induced call regular version relaxed version 
apply adjectives regular relaxed respectively development relations rm ffi games nm ff ffi ff solutions may omit adjectives cases matter version deal version seen context consider variable version 
course regular development ff time relaxed development vice versa generally hold 
fi fi relaxed regular development fi model intuitively difference regular relaxed versions linguistic games relaxed games players may ahead time impatient moves 
main task section establish impatient moves player affect chance player win 
player may benefit impatience adversary 
going back example position proponent move labeled multiplicative conjunct conjunct labeled allowed regular case move 
going position proponent impatient move second conjunct 
release duty move conjunct show properly impatient move changes label replace osubsentence shows proponent benefit postponing regular move hand missed possibility second conjunct strategy described enabled bad chess player defeat world champion game clever proponent go position fi wait opponent move fi move choosing substitution opponent chosen 
definition 
trace sentence ff sentence fi legal ffi sequence fl fl fl ff fl fi fl trace said trivial trace nontrivial 
tracing sentence fi function defined sub set ffi fi surface fi assigns fi trace sentence fi traced sentence fi sentence fi tracing 
trace usually serve piece information history play proponent making successful move 
lemma accordance intuition rigorous proof takes quite space impatient reader prone trust just memorize lemma skip rest section 
definition ff ff ff 
expansion ff traced sentence fi fi form fi fi tracing fi assigns fi possibly trivial trace ff fi expansion said pulling ffl label ff ffl trace tfi ff fi nontrivial second term oe trace sentence ff ff gamma oe ff ff regular development ff 
osubsentence fi said pulling osubsentence expansion 
intuitively expansion ff pair fi fi result series player moves surface components ff record history moves player care move position 
pulling expansion contains hint patient player move ff really legal regular play take closer fi fi pulls ff 
move repetition move player pulling component 
expansion ff traced sentence sentence fi tracing contexts identify just fi 
lemma suppose fi expansion ff fi labeled 
ff labeled 
proof 
ff fi definition expansion 
notice fi labeled ff follows easily definition fi labeled ff 
lemma suppose ff fi labels gamma respectively fi expansion ff 
fi pulling expansion ff 
proof 
consider case case symmetric 
assume conditions lemma 
ff ff ff fi fi fi 
proceed induction complexity multiplicative complexity ff 
note ff multiplicatively atomic relaxed development ff time regular development ff view case sentence ff multiplicatively atomic straightforward 
suppose ff oe oe may suppose oe ff ff oe ff ff fi fi fi fi fi 
restrictions ffi fi ffi fi respectively 
notice expansions oe oe respectively 
ff labeled multiplicative disjuncts labeled 
fi labeled may suppose labeled 
labeled expansion labeled oe induction hypothesis expansion pulling trace fi tfi ff fi trivial second term oe trace sentence ff ff gamma oe ff ff regular development oe definition sentence ff ff gamma oe ff ff oe sentence ff ff gamma oe ff ff regular development ff 
means fi pulling expansion ff 
case ff oe oe handled similar manner 
lemma sentence oe nm oe solvable iff ffi oe nm oe effectively solvable iff ffi oe proof 
prove clause clause easier prove 
assume effective solution ffi oe 
induction length oe play simultaneously define proponent effective history sensitive strategy effective function assigns initial segment nm oe play strategy proponent traced sentence verify step conditions satisfied condition 
expansion condition 
relaxed solution see paragraph preceding 
go 
define oe multiplicatively atomic osubsentence trivial trace 
course conditions satisfied role 
suppose initial segment oe play proponent strategy defined conditions satisfied 
ff ff fi fi relaxed traces tr tr ff ff fi fi respectively 
case labeled 
defined need define arbitrary regular development regular development time relaxed development ff ff gamma oe ff ff oe development labeled ff form ff ff gamma oe oe ff ff oe oe surface multiplicatively atomic oe 
define gh fi fi gamma oe oe fi fi want sentence traced expansion easily seen goal achieved fi trace oe trivial trace 
condition satisfied 
trace labeled ff fi trace trivial ff fi labeled lemma condition easily implies gh relaxed development relaxed solution relaxed solution gh see 
condition satisfied 
case labeled 
need define notation defined 
number defined labeled 
exists label label existence follows fact relaxed solution reason relaxed solution ffi ffi fi fi ffi ffi delta delta delta ffi ffi tr result concatenating tr see paragraph preceding case hffi ffi repeatedly deleting term ffi equal left neighbor sequence 
traced sentence ffi ffi trace tr osubsentence ffi evident just expansion labeled lemma gives pulling expansion ffi leftmost pulling osubsentence expansion oe second term trace tr define ff ff gamma oe ff ff note expansion second term oe trace ff relaxed development ff multiplicatively atomic oe regular development 
means regular development define gh traced sentence 
conditions satisfied evidently effective defined initial segment nm oe play proponent strategy soon sentence labeled value regular development means effective solution nm oe 
assume effective solution nm oe 
induction length relaxed oe play simultaneously define proponent effective history sensitive relaxed strategy effective functions assigns initial segment ffi oe play strategy proponent sentence applied returns tracing sentence traced conditions satisfied condition 
expansion condition 
regular solution go 
define oe tracing assigns trivial trace surface osubsentence oe 
evidently conditions satisfied role 
suppose initial segment relaxed oe play proponent strategy defined conditions satisfied 
fi fi ff ff tr tr traces assigned ff ff tracing case labeled 
defined need define arbitrary relaxed development value leave unchanged gh ff ff gamma oe ff ff oe relaxed development labeled ff define th tracing leaves unchanged trace tr ff assigns trace tr oei oe 
conditions evidently remain satisfied 
case labeled 
need define define sequence sentences sequence follows ffl note condition expansion ffl suppose defined form form expansion 
label 
suppose label 
lemma pulling expansion leftmost pulling osubsentence expansion 
oe oe oe second term trace assigned define gamma oe form gamma oe oe corresponding trace assigned looks hj oe oe oe oe oe oe oe oe oe oe oe gamma oe oe define follows assigns trace assigned oe assigns trace result repeatedly deleting terms equal left neighbors sequence hoe oe hard verify expansion notice regular development recall pulling expansion means number sooner reached 
regular rt development recall regular solution condition regular solution 
noted expansion 
labeled regular solution defined value regular development development relaxed development 
gamma oe oe 
define gamma oe account labeled means trace determined trivial clear defined relaxed development define gh 
define th tracing assigns trace assigns trivial trace oe 
implies condition satisfied condition satisfied follows 
evidently effective defined initial segment ffi play proponent strategy soon sentence labeled value relaxed development means effective history sensitive solution ffi 
theorem ffi effectively solvable 
lemma proved 
proof theorem ii definition resembles definition relaxed games 
correspond opponent moves correspond proponent moves 
essential difference arises comes atoms initial sentence real games play may continue atoms case games hand real games directly corresponding marriage extension moves section going show sentence ff model proponent effective winning strategy ff 
roughly proponent acts follows opponent move ff proponent finds corresponding hyperdevelopment ff ff treats counterpart current position 
determine move proponent finds hyperdevelopment ff ff tries copy real play move corresponding transfer ff ff 
course possible 
move consists going copied 
marriage fl ffi signal proponent try keep counterparts real play fl ffi opposite 
opponent moves counterpart fl proponent tries dual move ffi vice versa 
long proponent succeeds doing label position real game counterpart ensures winning 
precise definition strategy proof correctness technically involved pretty boring reader willing fight pass section 
sentences objects deal assigned godel numbers 
say smallest mean smallest godel number 
terminology notation define operation fi fi fi smallest marriage extension fi fi fi exist fi fi 
define fi fi fi fi 
clearly fi fi fi fi call fi closure fi 
say sentence closed closure 
note fi belongs closure 
proof begins 
assume model oe sentence oe identify sentence fi corresponding relaxed game ffi fi see 
going deal relaxed game word relaxed omitted game trace development strategy induction length oe play simultaneously define proponent effective history sensitive strategy effective functions assigns initial segment oe play strategy proponent assigns tracing see conditions satisfied condition 
condition 
closed 
condition 
ff ff fi fi 
fi ff fi 
fi labeled single ff fi 
fi labeled single assigns ff trace fi ff 
fi fi spouses assigns sentences ff trace ff gammaj ff start defining functions prove fact condition holds fi role fi closure fi condition holds fi 
see consider case fi marriage extension fi contains just additional married couple 
difference fi fi fi fi single fi spouses fi conditions trivially continue satisfied fi condition married couple different fi fi 
need verify condition holds couple fi fi 
fi fi opposite fi label condition fi ff fi condition fi assigns ff trace fi chain fi fi ff assigns ff trace ff means condition satisfied 
proved 
define closure oe 
tracing assigns trivial trace labeled surface oe 
easy see conditions satisfied role 
suppose initial segment oe play proponent strategy functions defined conditions satisfied 
condition ff ff fi fi 
case labeled 
need defined define arbitrary development ff ff gamma oe ff ff oe development labeled ff cases takes place subcase ff 
condition fi 
define gh guarantees conditions remain satisfied 
need define verify condition satisfied 
fi single 
condition assigns ff trace tr fi ff define th tracing assigns trace tr oei oe tracing assigns trace easy see condition satisfied 
ii fi married fi ff ff opposite define th tracing assigns trace hff oei oe undefined ff assigns trace suppose ff ff opposite 
note ff labeled exist nontrivial trace ff ff condition assigns ff trace ff ff define th tracing assigns trace tr oei oe assigns trace undefined ff 
easily seen condition satisfied 
subcase ff fl ffi note condition fi ff may suppose oe fl 
define gh closure fi fi gamma oe fi fi 
th tracing assigns surface ff trace assigns trivial trace surface surface oe 
condition follows lemma condition trivially satisfied condition evident fi fi gamma oe fi fi role holds closure gh subcase ff xfl 
subcase similar previous 
case labeled 
subcase 
strict hyperdevelopment suppose smallest 
closed relation determined 
consider case case similar 
fi fl ffi may suppose fi fi gamma fl fi fi define ff ff gamma fl ff ff define gh closure th tracing assigns surface ff trace surface surface fl assigns trivial trace 
gh closure condition satisfied see 
condition holds trivially condition evident view 
subcase 
suppose married couple fi fi assigns ff nontrivial trace ff ff couples suppose fi fi smallest 
define ff ff gamma 
ff ff note ff labeled 
development development define gh tracing th assigns trace ff remains osubsentence conditions trivially continue hold condition easy verify 
ii married couple described exist undefined undefined sub subcase case labeled ii defined value development conclude solution oe remains show ii takes place 
suppose married couple described exist 
consider arbitrary married couple fi fi condition ff ff ff comes trace ff ff consequently trace trivial means ff ff married couple fi fi ff ff opposite 
married fi fi equals label ff fi label ff label means labeled contradicts conditions subcase 
part ii theorem proved 
analysis proof ii proofs lemmas employed proof convince fact strong version soundness holds theorem effective function model dm rm turing machines returns effective function turing machine solution game nm oe oe wouldn waste reader time details comments proof theorem 
proof theorem ii iii part ii iii theorem immediately follows clause lemma 
start proving need auxiliary lemma lemma suppose fi formula arithmetical translation see fi fi fl 
fi fl parameter proof 
assume fi fi fl 
free fi iff free fl 
free formulas fi fi fl fl done 
suppose free fi fl 
proceed induction complexity fi 
suppose fi atom yn variables explicitly indicated ffi xn 
definition translation fi ffi yn fi ffi yn 
free fl ffi fl ffi 
fi fl 
cases fi complex formula pretty straightforward consider 
suppose fi ffi 
fl ffi ffi ffi induction hypothesis ffi ffi ffi ffi ffi fi ffi fl 
fi fl 
lemma sentence oe arithmetical translation oe model dm nat nm oe solvable oe nm oe effectively solvable oe 
recall standard model arithmetic 
proof 
lemma account ll deal relaxed plays omit word relaxed superscript ffi 
fix recursive list ff ff arithmetical sentences recursive list zero place predicate letters occuring oe 
arithmetical sentence fi ff fi denote arithmetical translation oe 
may suppose predicate letter occurs oe define new arithmetical translation follows ffl predicate letter list ff ffl predicate letter arithmetical sentence fi fl sentence fl note translation oe 
define model atomic sentences fl ffi ffl fl fl ffl flr ffi iff ffi fl rs ffi straightforward induction complexity fl fl fl fl assume solution nm oe 
define proponent history sensitive strategy function assigns initial segment oe play strategy sentence conditions satisfied condition solution nm 
condition condition surface osubsentence define oe 
condition satisfied 
oe contain atoms evidently oe oe condition satisfied 
oe means condition satisfied 
suppose initial segment oe play defined conditions satisfied 
view condition fi fi fi fi case labeled standard model arithmetic 
note condition 
position opponent move need define arbitrary development result replacing labeled osubsentence fi arithmetical development oe 
subcase fi fl ffi fi fl ffi may suppose oe fl define gh result replacing osubsentence fi fl 
course gh note gh development labeled solution solution gh 
conditions satisfied 
fi fl fi remains fl 
changed condition continues hold 
subcase fi xfl 
ffi fl fi xffi oe ffi parameter fl lemma ffi oe equal fl define gh result replacing osubsentence fi fl 
clearly gh condition holds 
argument similar previous subcase convince conditions hold 
subcase fi 
define gh result replacing osubsentence fi oe evidently gh gh development labeled solution solution gh 
conditions satisfied 
oe contain variables implies condition satisfied 
case labeled 
solution development solution 
result replacing labeled osubsentence fi development oe fi define result replacing corresponding osubsentence fi oe course note fi labeled 
easy verify oe development fi fi form ll need lemma 
development define gh 
conditions satisfied role fi oe fi remains 
fi oe oe contain variables 
implies condition holds 
soon labeled defined value development 
conclude solution oe clause lemma proved 
notice primitive recursive relative effective proves clause 
generalized modus ponens effective truth lemma suppose ff fi ff effectively true model sentence fl fl fi effectively true proof 
fix model shall deal relaxed net games induced omit word relaxed 
assume effective solution ff fi effective solution ff 
intuition proponent strategy fl fi going define described follows proponent plays component fi fl fi 
determine moves play proponent plays experimental ff fi play uses strategy assistant role opponent play 
assistant uses strategy component ff repeats opponent moves component fi fl fi play component fi experimental play 
strategy replies moves experimental play show proponent act component fi fl fi play 
strategy allows assistant component ff labeled means strategy solves ff fi expense successful play component fi 
see lemma considered generalized modus ponens take ff fi ff fi fl identifying fi fi 
moves component copied fl fi play proponent guaranteed win 
reader satisfied explanation skip rest section devoted formal implementation intuition 
fi fi fi describe solution fl fi need local terminology notation 
function argument 
sentence said interesting ffi ffi ffi ffi ffi solution solution ffi osubsentence ffi said main osubsentence ff fi interesting sentence ff main osubsentence 
closure interesting sentence labeled ffi ffi ffi number ffi labeled 
notice closure exists correctly defined assumption solves ffi note closure continues interesting 
closure number labeled main osubsentence 
note closure defined continues interesting 
say resp 
closed resp 
closure rh closed closed 
get sentence call rh closure take closure closure closure closure closure reach rh closed sentence 
operations closure preserve property interesting change main osubsentence rh closure interesting sentence ffi ffi ffi remains interesting ffi ffi ffi ffi simultaneously define proponent effective history sensitive strategy effective functions assigns initial segment fl fi play strategy proponent ffi ffi sentence ffi ffi determines traces surface conditions satisfied condition 
interesting 
condition 
rh closed 
condition 
assigns ffi trace ffi ffi description step definition verify conditions satisfied 
define gha fl fi rh closure ff fi 
tha fl fi tracing assigns trivial trace osubsentence fi 
conditions evidently satisfied ha fl fi role 
suppose ffi ffi initial segment fl fi play proponent strategy functions defined ffi ffi conditions satisfied 
case labeled 
define arbitrary development ffi ffi gamma oe ffi ffi oe development labeled ffi define gh define th tracing assigns ffi trace assigns trace tr oei oe tr trace assigned ffi conditions trivially continue satisfied evidently condition remains satisfied 
case labeled 
define sequence sentences sequence follows ffl assumption conditions satisfied roles ffl suppose defined conditions satisfied roles 
label 
suppose label 
note closed main osubsentence labeled 
reason labeled labeled labeled ffi labeled suppose smallest 
means trace hj ffi assigned ffi trivial 
define rh closure gamma define tracing assigns trace hj ffi assigns trace osubsentence ffi hard verify conditions satisfied roles development number sooner reached 
labeled conditions satisfied roles solves condition value defined development assume ae ae closedness implies 
result replacing labeled ae development oe ae define ffi ffi gamma oe ffi ffi define gh rh closure 
define th tracing assigns trivial trace oe assigns trace ffi note ae labeled trace ae ffi determined ffi ae development easy verify 
interesting account gh interesting 
condition satisfied condition trivially satisfied rh closure condition evident 
defined soon labeled relaxed development means history sensitive relaxed solution fl fi fl fi effectively true game semantics arithmetic shall ff fi abbreviate fffi xy ff abbreviate 
meanings abbreviations xx xy clear 
definition 
set delta formulas smallest set arithmetical formulas ffl atomic formulas delta formulas ffl ff fi delta formulas ff ff fi delta formulas ffl ff delta formula term see convention containing xt ff delta formula 

sigma formula pi formula synonyms delta formula say formula ff sigma resp 
pi formula ff fi resp 
ff fi pi gamma resp 
sigma gamma formula fi possibly empty sequence variables 
note definition sigma pi formula time sigma pi formula 
meaning notion sigma resp 
pi delta sentence clear result replacing free variable sigma resp 
pi delta formula natural number see section 
fact require comments fact truth delta sentences decidable 
implies interesting fact fact effective strategy solution true delta sentence 
proof 
consider arbitrary labeled true delta sentence ffi define ffi follows case ffi ff ff ffi true delta sentence disjunct ff disjunct view determined effective way 
ffi ff case ffi xt ff 
effective way ff true delta sentence 
define ffi ff 
defined true labeled delta sentence ffi value ffi development ffi remains true delta sentence 
observation development labeled true delta sentence remains true delta sentence implies solution true delta sentence 
fact effective strategy univ solution true pi sentence 
proof 
consider arbitrary true pi sentence form xm yn ff xm possibly delta formula ff 
moves play opponent moves lead true sigma sentence oe yn ff ff yn am point proponent starts checking possible tuples numbers reaches tuple delta sentence ffi ff am true 
tuple exists oe true checking effective 
tuple proponent consecutive moves consists deleting replacing 
play comes sentence position ffi proponent switch strategy guarantees proponent wins play 
corollary true sigma sentence effectively true 
proof 
suppose oe true sigma sentence 
may suppose oe pi sentence proponent strategy univ 
oe xn xn pi formula tuple numbers true 
proponent starts play making consecutive moves consisting deleting replacing ultimately leads position 
proponent switch strategy univ guarantees win 
definition say arithmetical formula ff xn exactly xn free represents standard model place relation natural numbers natural numbers relation holds ff true standard model 
known fact decidable relation represented sigma formula 
negation decidable relation remains decidable clear sigma replaced pi 
fix coding finite functions type nat nat function defined exactly values arguments code standard code sequence understand partial recursive function turing machine allows speak code function 
machine natural number define place function follows argument nat ffl input machine halts steps outputs natural number ffl undefined note finite function 
note machine numbers iff convention standard godel numbering natural number code 
convenient abuse terminology say coded sentence formula finite function done definition foo function returns code negation coded sentence 
case mean foo returns code sentence 
similarly foo defined predicate body definition says coded sentence suppose foo returns false soon argument code sentence 
fix arithmetical formulas ffl won formula defining place relation coded sentence play proponent strategy coded machine opponent strategy coded finite function won 
place functions coded machine coded finite function 
finite decidable easy see predicate won decidable 
suppose won sigma formula 
ffl won won sigma formula 
ffl solves solves pi formula 
ffl sigma formula 
view evident won represents place predicate coded sentence play proponent strategy coded machine opponent strategy coded finite function won 
view solves represents predicate coded machine solution coded sentence 
clearly represents predicate coded sentence effectively true standard model 
predicate effective truth arithmetical sentence complexity sigma contrasts known classical truth 
definition ff arithmetical formula free ary primitive recursive function 
say proponent strategy stable ff numbers solves sentence ff solves sentence ff recall 
lemma ff arithmetical formula free ary primitive recursive function proponent effective strategy 
stable ff 
precisely proponent effective strategy stable ff yn number solves ff 
proof 
assume 
informal description proponent strategy ff play acts exactly ff play proponent sees acts exactly act ff play strategy chooses disjunct sees additive disjunction chooses parameter sees existential sentence note possible sentences ff ff exactly logical structure differ atoms see second paragraph atomic sentence emerges ff play strategy truth value label corresponding atom corresponding ff play strategy clearly effective solution ff ff 
safe section hyper sentence means terminology notation tree mean set natural numbers elements called nodes binary relation oe ffl oe transitive irreflexive ffl oe oe oe oe ffl node called root oe infinite arbitrarily long oe chains say finite height call length longest longest chain oe oe height tree 
defined oe resp 
oe say ancestor resp 
proper ancestor descendant resp 
proper descendant oe oe oe say parent child say siblings common parent 
proper sibling sibling 
tree sentences tree node associated sentence ba called content identify nodes contents remembered different nodes necessarily different contents 
definition sentence said safe atom weak surface occurrences recall 
safe 
definition sentence ff tree sentences viewed clean see root ff node fi ffl fi exactly child child hyperdevelopment fi ffl fi clean hyperdevelopment fi child fi child fi clean hyperdevelopment fi 
tree said safe node safe 
tree said primitive recursive relations node content parent sibling primitive recursive 
note child hyperdevelopment parent implies finite height 
notion translation defined section language arithmetic taken language including language formulas translated 
define translation definition ff sentence variables alphabetical list variables occuring ff 
define plus translation ff stipulating ary predicate letter ff gamma xm assume ary predicate letter ary predicate letter confusing choose safe ary predicate letter right hand side equation 
lemma sentence ff belong safe primitive recursive ff plus translation ff 
proof 
assume ff simultaneously define tree sentences function assigns node fi fi called image fi conditions satisfied condition 
fi fl fl fi ffi ffi ffl ffi fl ffi ffl ffi fl rt development ffi see note model take rt development matter 
condition 
fi extending usage word image say ffi condition image fl image fl say fl 
say positive negative single married image spouses images 
condition image positive negative alternating quantifiers 
call number age say aged 
call parameter parameter 
put ff root ff image 
clearly conditions satisfied 
suppose fi fl fl node fi ffi ffi image conditions satisfied fi fi define set children fi images children time verify fi satisfies conditions definition children fi images satisfy conditions 
go case suppose fi proof takes rest section 
reading necessary understanding material remaining sections 
subcase fi 
fi hyperdevelopment oe fi hyperdevelopment choose smallest 
oe ffi ffi gamma ffi ffi ffi ffi hyper development sentence ffi easily seen formula oe fl fl gamma ffi fl fl hyperdevelopment fi 
set oe child fi oe image 
note conditions satisfied oe oe fi satisfies conditions definition 
subcase fi 
smallest fi fi 
easy see smallest ffi ffi fl opposite fi clean means account fl rt development ffi quantifier prefix fl form fl 
choose parameter occuring fi stipulate oe fl fl gamma fl fl fl child fi fi image 
clearly conditions continue hold oe fi fi satisfies conditions definition 
case suppose fi 
stipulate clean fi children fi 
fi satisfies conditions 
consider clean hyperdevelopment child oe fi 
oe fl fl gamma fl fl fl fl sentence fl development 
order define image oe oe need consider subcases subcase fl 
clear ffi fl ffi ffi hyperdevelopment ffi define oe ffi ffi gamma ffi ffi ffi subcase fl single age exactly single aged fl oe ffi ffi opposite fl fl parameters 
oe fi means adding set married couples couple ffi ffi 
subcase 
remaining cases define oe fi condition easily seen satisfied oe oe subcases fi condition trivially satisfied subcase satisfied subcases oe hyperdevelopment fi see 
ff root established node fi satisfies conditions ff 
evident tree primitive recursive 
remains show safe 
suppose ff ff ff node ff ff fi descendant ff 
definition easily implies fi form fi fi extend usage words ancestor descendant nodes say ff ancestor fi fi descendant ff similar way extend usage words parent child 
analysis step step construction easily lemma holds lemma node ff child node fi ff fi images ff fi respectively ff fi ff hyperdevelopment fi fl surface node descendants image 
surface osubsentence fl node iff fl ffi literal ffi alternating quantifiers 
node spouses descendants 
follows lemma suppose fi node fl ffi different positive resp 
negative aged fi 
resp 
parameters fl ffi different 
proof 
account verify fl fi positive resp 
negative aged resp 
parameters appeared ancestors subcase hand parameter appeared disappears descendants hand subcase introduces existing parameter conclude resp 
parameters fl ffi different 
lemma suppose fi node fl ffi fi 
fl ffi spouses conditions satisfied fl ffi aged fl parameters ffi proof 
subcase marriages happen 
view conditions subcase immediately imply clauses lemma 
may suppose fl aged earlier ffi precisely fi fi fl fl ffi ffi fi fi ancestor nodes fi fi child fi fl fl ancestors fl fi fi respectively ffi ffi ancestors ffi fi fi respectively fl fl aged ffi age ffi age 
fl fl ffi ffi fl fl fl common image ffi ffi ffi note subcases deal subcase introduces existing parameter 
transfer fi fi determined subcase subcase 
subcase done means fl ffi marry fi fl ffi spouses 
remains show subcase ruled transfer fi fi really determined subcase 
suppose 
analysis conditions subcase shows fl fi parameters ffi image opposite image ffi ii fl ffi married 
case note fl parameters equal images contradiction 
rule case ii notice ffi aged ffi married 
fl married child spouse sentence image parameters ffi contradiction 
fi node fl fl married couple fi 
ll say couple fl spoiled fi holds fl necessarily age parameters different fl age fl gammai age variable fl gammai bound 
lemma fi node ffi child fi fl fl married couple fi 
couple spoiled fi couple children fl fl ffi proof 
reason fl fl spoiled fi clause definition spoiled clearly reason ffi 
reason spoiled fi clause definition spoiled reason remains ffi ffi results fi deleting zm fl gammai replacing variable parameter happen subcase definition 
conditions subcase parameter different existing parameter fi including parameter fl means interesting couple spoiled ffi basis clause definition spoiled 
lemma suppose fi node fl married fi quantifier age suppose fi descendant fi descendant fl fl fi age 
fi fi different images fl spoiled 
proof 
contradiction deny 
fl fl forms zm zm zm respectively 
nodes fi fi fi fi oe fi oe fi fi child fi denote fl fl descendants fl fi fi respectively fl fl zm zm zm fl zm 
note nodes fi fi fi fi image fi fl fl fl fl common image fl note transfer fi fi determined subcase means fi 
smallest fi 
ffi ffi spouses fl fl respectively 
common image ffi clearly sentence equals fl subcase implies fl ffi 
assume fl spoiled 
implies fl spoiled 
remembering fl rt development fl ffi rt development ffi fl little analysis definition spoiled ffi zm zm zm ffi 
means nodes fi fi fi oe fi oe fi fi fi child fi denote ffi ffi descendants ffi fi fi respectively ffi zm ffi 
clearly ffi image ffi ffi transfer fi fi taken place subcase ffi role fl 
impossible know ffi requires ffi 
lemma safe 
proof 
suppose contradiction fi node containing surface occurrences atom 
denote corresponding course fl ffi age aged means spouses 
fi remote ancestor fi ancestors fl ffi spouses 
age spouses fi exactly parent fi implies parents spouses 
may suppose fl ancestor fi age 
fix proper descendants fi oe oe fi fi node fi age ancestor fl fi 
fl spoiled fi ancestors fi fi spoiled easily implies image fi fi different image fi gamma fi gamma fi hfi transitive closure hyperdevelopment relation 
means fi fi original formula ff fi contains married couple ff 
consequently ff greater contradiction recall just ff 
lemma completes proof lemma 
ready finishing stroke 
proof theorem iii part theorem called arithmetical completeness lemma safe primitive recursive sentence ff arithmetical translation ff ff effectively true standard model arithmetic 
proof 
fix safe primitive recursive ff 
simplicity loss generality assume infinite natural number node root 
node parent mean fix set fp png predicate letters ff 
say sentence fi arithmetic appropriate fi contains exactly free variables arity time fi contain variables matter free bound occuring ff 
convenient assume proof predicate letters variables language ff 
need introduce notations functions relations 
ffl abuse notation denote function returns code content node recall expression denote content 
ffl transl place function returns code sentence coded sentence translation defined exactly predicate letters pn assigns coded appropriate formula convention code formula function returns 
ffl parent relation parent 
ffl relation siblings 
ffl contains relation coded sentence surface occurrence coded sentence 
ffl formula fi arithmetic exactly free fi fi denote place primitive recursive function assigns tuple numbers code sentence fi assume term see fi exactly free variables formula fi 
note fi free variables fi simply code fi 
ffl su yn place function returns code sentence result respectively substituting numbers yn variables coded formula 
ffl place function returns ith term coded finite nonempty sequence numbers 
ffl lh function returns length coded finite nonempty sequence numbers 
easily seen functions relations primitive recursive 
recalling definition predicate solves section abbreviating oe oe define spec solves transl bv gamma delta delta solves transl delta explanation function delta encode pairs natural numbers 
fact variable translations 
introducing apparently adequate jargon say spec asserts translation node shortest effective solution siblings 
precisely means translation bv effective solution pair smaller sibling effective solution translation define lh lh parent spec jargon asserts translation ancestor node including shortest effective solution siblings 
code formula contains gamma bv delta gamma su su delta arity assume variables formula occurs ff 
define translation finite function defined just pn contains bv gamma su mn su mn mn delta lemma su mn gamma delta proof 
su mn represents code formula result respectively substituting numbers mn variables coded formula formula gamma delta just formula 
introduce abbreviation transl gamma su mn su mn mm delta lemma sentence fl fl fl 
proof 
view function returns code coded sentence 
special spec gamma su mn su mn mn delta superspecial gamma su mn su mn mn delta unfold abbreviations spec formulas abbreviation special solves gamma delta delta solves delta superspecial lh lh parent gamma delta special gamma delta say node special special true jargon means translation shortest effective solution siblings 
say node superspecial superspecial true ancestors special 
asserts superspecial node surface occurrence 
lemma number special true effectively true 
proof 
suppose special true 
parameter sentence solves gamma delta pv delta ps solves delta true 
conjuncts true 
pairs delta pv delta ps sibling truth second conjunct means sigma sentence solves true effective solution fix finite list effective solutions solves solves ca describe proponent strategy special proponent goes position special position deletes remains substitutes parameter variable 
suffices show proponent strategy solves means solves conjuncts 
conjunct true pi sentence proponent strategy univ see 
second conjunct proponent strategy able solve sentence delta pv delta ps solves ba parameters disjuncts disjunction true proponent go disjunct strategy univ delta pv delta ps siblings 
case proponent go third conjunct strategy 
strategy effective solution special 
lemma node superspecial true effectively true 
proof 
suppose superspecial 
nodes am root am parent code sequence am special special effectively true fix effective solutions gm special special proponent strategy superspecial lh lh parent gamma delta special gamma delta proponent deletes substitutes parameter variable coming position lh lh parent gamma delta special gamma delta proponent winning strategy conjuncts sentence 
conjuncts true delta sentences strategy univ 
fourth conjunct gamma lh special delta solve means solve true sentence lh special done follows conjunct delta sentence true proponent chooses uses strategy univ proponent chooses second conjunct uses strategy view may suppose stable special means solves special 
lemma node special effective function solution sentence special proper sibling proof 
suppose special 
fix solves true sibling gamma delta delta solves ba delta true 
pairs delta delta sigma sentence solves true effective solution fix solutions solves solves ca describe proponent strategy solution sentence special sibling strategy solves special solves ba gamma delta delta solves delta solves sentence solves ba gamma delta delta solves delta proponent act pair sibling delta delta proponent choose right disjunct delete remains substitute respectively 
play comes position delta delta solves proponent able solve conjuncts 
conjuncts true pi sentences proponent univ suppose sibling delta delta means delta delta 
proponent chooses left disjunct uses strategy 
easily seen just described effective solution special sibling say node relative node ancestor descendant don belong branch tree 
branch relatives 
lemma node superspecial effective function solution sentence superspecial relative proof 
root parent superspecial special means effective function solves special proper sibling fix functions gm strategy solve sentence lh lh parent special relative note relative superspecial node superspecial sentence true 
proponent acts case solve sentence disjuncts true proponent chooses disjunct uses strategy univ 
suppose disjuncts false 
proponent goes position gamma lh special delta note case really codes sequence root parent biggest number common ancestor means 
clearly proper siblings 
proponent effectively finds goes sentence lh special conjunct solved univ second conjunct proponent uses strategy view may suppose stable special solves special 
lemma surface superspecial node effectively true 
proof 
suppose superspecial node surface content need consider cases 
simpler 
case negated atom 
true sentence gamma contains bv superspecial delta effective solution fix superspecial 
effective strategy proponent solution proponent goes contains ba superspecial proponent uses univ left conjunct strategy right 
case atom 
sentence gamma contains bv superspecial delta check node surface occurrence relative suppose contradiction branch relative surface occurrence 
evident property literal surface occurrence node surface occurrence descendants node 
ancestor surface occurrence impossible safe surface occurrence 
case ancestor symmetric proved 
proponent acts follows opponent goes position contains bc superspecial case left disjunct true proponent goes disjunct uses univ relative superspecial proponent goes superspecial uses strategy defined 
lemma suppose node superspecial 
child effectively true 
proof 
suppose superspecial 
ba fi fi fl fl fi literal fl 
lemma fi effectively true 
ba effectively true special 
generalized modus ponens lemma lemma times get fl fl effectively true 
note arithmetical label ba equal ba clean 
suppose ba label 
development effectively true result replacing labeled osubsentence fl development fl fl fl gamma fl fl fl effectively true 
generalized modus ponens account sentences effectively true fi fi fl fl gamma fl fl fl effectively true 
notice fi fi fl fl gamma fl fl fl child child translation effectively true 
suppose ba label 
definition child bc hyperdevelopment ba 
bc fi fi fl fl gamma fl fl fl fl fl hyperdevelopment 
notice bc relaxed development ba effectively true labeled bc effectively true 
lemma superspecial nodes 
proof 
previous lemma superspecial node child effective solution may suppose pair sibling effective solution delta delta means superspecial 
superspecial node superspecial child superspecial node infinite chain superspecial nodes node parent node chain impossible tree finite height 
complete proof lemma 
lemma root content initial sentence ff superspecial definition root predecessors siblings means simply ff effectively true 
complete proof theorem iii suppose oe lemma primitive recursive oe lemma translation oe effectively true 
take composition oe effectively true 
strictly bck classical logic author failed find axiomatization task accomplished language restricted done section extended means new multiplicative style operators 
section locate interval belongs hierarchy known sequential calculi 
hyper sentence mean hyper sentence language parameter previous sections mean natural number 
reader noticed semantics syntactic description formulas ff fi fl ff fi fl reasonable senses 
enables relax formation rules allow formulas ff ffn dropping vacuous parentheses ff course 
agree identify ff fi fi ff 
look ff ffn application operator multiset fff ff ng sequence hff ff multiset set may contain finite number copies elements words multiset sequence order quantity elements disregarded 
follows greek capital letters denote multiplicative disjunction ff ffn sentences ff ff 
disjunction just ff disjunction empty theta fi theta empty disjunction understood fi 
lemma phi oe psi phi psi oe 
mean married couples phi oe psi preserved phi psi oe married couples 
proof 
assume phi oe psi proceed induction sum 
case phi psi oe 
little analysis case phi oe psi say 
means hyperdevelopment phi oe phi oe induction hypothesis conclude phi psi oe remains notice hyperdevelopment phi psi oe 
case phi psi oe 
consider arbitrary hyperdevelopment 
want show result phi psi oe replacing surface multiplicatively atomic osubsentence hyperdevelopment occurs phi oe psi say oe oe result replacing oe osubsentence phi oe hyperdevelopment phi oe phi oe induction hypothesis phi psi oe belongs remember language applicable atoms cases just abbreviation 
sequent multiset fff ff ng sentences written form ff ffn 
technical difference common presentation sequential calculi parameters deal sentences free variables 
list axiom sequential rules inference ffl atomic ffl ff result substituting ff free occurrences variable parameter ffl parameter occur theta ff 
theta theta ff theta ff theta theta ff ff theta ff theta ff ff theta ff theta ff theta ff ff theta ff theta xff theta ff theta xff theta ff ff theta ff notice deal multisets multiplicative disjunctions multisets disjuncts exchange rule theta ff ff theta theta ff ff theta premise rule simply thought identical 
logic bck called affine logic axiom rules 
known addition rule cut system really extend 
list gives classical logic cl length bck derivation oe length longest branch bck derivation tree oe 
bck extension multiplicative additive linear logic mall 
rules axiom ff ff ff atomic 
lemma formula oe parameters oe bck proof length oe 
recall oe denotes result replacing oe occurrences parameter parameter 
proof 
induction length bck derivation 
oe axiom form clearly oe 
rules consider straightforward 
suppose theta ff occurrence theta ff bck proof length want show theta xff bck proof length 
parameter occuring theta ff different induction hypothesis theta ff theta ff bck proof length induction hypothesis theta ff 
theta ff bck proof length notice occur theta ff ff result replacing ff variable applying theta ff get theta ff 
theta xff bck proof length 
lemma suppose bck oe oe hyperdevelopment oe 
bck oe proof 
consider case result replacing oe osubsentence fi 
case replaced additive conjunction simpler 
proceed induction length bck proof oe 
case rule oe theta xff bck theta ff occuring theta ff 
view may suppose subcases considered subcase xff different oe 
oe theta xff theta result replacing theta osubsentence fi 
theta ff hyperdevelopment theta ff induction hypothesis bck theta ff 
implies occur theta rule bck theta xff bck oe subcase xff osubsentence oe 
bck theta ff bck theta ff bck oe fact bck ae ae cl ae means proper inclusion 
proof 
inclusion cl evident suppose ff ii ff effectively true model effective truth means existence effective solution existence solution means truth ff true model ii ff cl see inclusion proper check classical tautologies listed ff zero place predicate letter fi place predicate letter belong ffl ff ff ffl ff ff ff ffl fi fi fi fi 
fact bck verified routine checking formulas belongs derivable cut free bck ff ff fi fi ff fi ff fi ff ff fi fi gamma ff fi fi delta gamma ff fi fi delta gamma ff ff fi delta gamma ff ff fi delta remains show bck assume bck oe 
show oe induction complexity oe mean number occurrences logical operators oe 
bck oe means cases takes place case oe axiom theta 
oe marriage extension hyperdevelopment oe spouses 
clearly oe hyperdevelopment oe hyperdevelopment hyperdevelopment oe means oe case bck oe follows bck ff bck fi rule 
complexities ff fi oe enables induction hypothesis conclude ff fi lemma oe case bck oe follows bck ff rules 
complexity ff oe induction hypothesis ff ff hyperdevelopment oe belongs case bck oe follows bck ff rules 
observe oe 
consider arbitrary hyperdevelopment oe oe 
bck oe induction hypothesis complexity oe oe oe hyperdevelopment oe belongs means oe formula taken 
free fragments bck gamma denote fragment language defined ff gamma iff ff ff contain 
define bck gamma bck rule 
theorem sentence oe gamma bck gamma oe oe proof 
part immediately follows fact 
prove part induction complexity oe 
assume oe sentence gamma oe case oe 
account oe clean see implies oe contains surface osubsentence form ff fi xff subcases takes place subcase oe theta xff 
parameter occuring oe 
theta ff hyperdevelopment oe belongs 
complexity theta ff oe induction hypothesis bck theta ff rule bck oe 
subcase oe theta ff fi 
subcase similar previous 
case oe 
oe means hyperdevelopment oe oe subcases takes place subcase oe marriage extension oe 
means oe contains surface oe free oe form theta axiom 
subcase oe theta ff ff oe theta ff 
induction hypothesis bck theta ff rule bck oe 
subcase oe theta xff oe theta ff 
subcase similar previous 
abramsky jagadeesan games full completeness multiplicative linear logic 
journal symbolic logic pp 
blass game semantics linear logic 
annals pure applied logic pp 

game theoretical semantics essays semantics hintikka carlson edited 
dordrecht holland 
girard linear logic 
theoretical computer science pp 

kleene metamathematics 
new york 
lorenz als von 
arch 
math 
logik pp 
lorenzen ein 
methods warsaw pp 
troelstra realizability 
illc series mathematical logic foundations ml 
amsterdam 

