ieee international conference computer vision corfu greece september texture synthesis non parametric sampling alexei efros thomas leung computer science division university california berkeley berkeley ca cs berkeley edu non parametric method texture synthesis proposed 
texture synthesis process grows new image outward initial seed pixel time 
markov random field model assumed conditional distribution pixel neighbors synthesized far estimated querying sample image finding similar neighborhoods 
degree randomness controlled single perceptually intuitive parameter 
method aims preserving local structure possible produces results wide variety synthetic real world textures 

texture synthesis active research topic computer vision way verify texture analysis methods right 
potential applications successful texture synthesis algorithm broad including occlusion fill lossy image video compression foreground removal problem texture synthesis formulated follows define texture visual pattern infinite plane scale stationary distribution 
finite sample texture image goal synthesize samples texture 
additional assumptions problem clearly ill posed texture sample drawn infinite number different textures 
usual assumption sample large captures stationarity texture approximate scale texture elements texels known 
textures traditionally classified regular consisting repeated texels stochastic explicit texels 
real world textures lie extremes captured single model 
chosen statistical non parametric model assumption spatial locality 
result simple texture synthesis algorithm works wide range textures especially suited constrained synthesis problems hole filling 

previous approaches posed texture synthesis statistical setting problem sampling probability distribution 
zhu model texture markov random field gibbs sampling synthesis 
unfortunately gibbs sampling notoriously slow fact possible assess converged 
heeger bergen try coerce random noise image texture sample matching filter response histograms different spatial scales 
technique works highly stochastic textures histograms powerful represent structured texture patterns bricks 
de bonet uses multi resolution filter approach texture patch finer scale conditioned parents coarser scales 
algorithm works input texture sample randomizing way preserve inter scale dependencies 
method successfully synthesize wide range textures randomness parameter exhibit perceptually correct behavior largely stochastic textures 
drawback method way texture images larger input generated 
input texture sample simply replicated fill desired dimensions synthesis process implicitly assuming textures clearly correct 
latest texture synthesis simoncelli portilla second order properties joint wavelet coefficients provides impressive results 
capture stochastic repeated textures quite fails reproduce high frequency information highly structured patterns 

approach article mathematical theory communication claude shannon mentioned interesting way producing english sounding written text grams 
idea model language generalized markov chain set consecutive letters words gram completely determine probability distribution letter word 
large sample language book build probability tables gram 
repeatedly sample markov chain produce english sounding text 
basis early computer program called mark popularized article scientific american famous pearls spent interesting evening grain salt 
relates earlier popat picard trying extend idea dimensions 
main challenges endeavor define unit synthesis letter context gram texture construct probability distribution linearize synthesis process 
algorithm grows texture pixel pixel outwards initial seed 
chose single pixel unit synthesis model capture high frequency information possible 
previously synthesized pixels square window weighted emphasize local structure context 
proceed synthesis need probability tables distribution possible contexts 
text tables usually manageable size texture setting constructing explicitly question 
approximation obtained various clustering techniques choose construct model 
new context sample image queried distribution constructed histogram possible values occurred sample image shown 
non parametric sampling technique simple powerful capturing statistical processes model hasn 

algorithm model texture markov random field mrf 
assume probability distribution brightness values pixel brightness values spatial neighborhood independent rest image 
neighborhood pixel modeled square window pixel 
size window free parameter specifies stochastic user believes texture 
specifically texture presumed mainly regular high spatial frequencies mainly stochastic low spatial frequencies size 
algorithm overview 
sample texture image left new image synthesized pixel time right 
synthesize pixel algorithm finds neighborhoods sample image boxes left similar pixel neighborhood box right randomly chooses neighborhood takes center newly synthesized pixel 
window scale biggest regular feature 

synthesizing pixel image synthesized texture sample image smp real real real infinite texture 
pixel square image patch width centered perc 
denote perceptual distance patches 
assume moment pixels known 
synthesize value construct approximation conditional probability distribution pj sample 
mrf model assume independent 
define set 
real perc 
containing occurrences real conditional pdf estimated histogram center pixel values 
unfortunately smp finite sample real means matches smp heuristic find plausible sample 
implementation variation nearest neighbors technique closest match best argmin 
perc smp image patches perc 
best included threshold 
center pixel values patches give histogram sampled uniformly weighted perc remains find suitable perc choice normalized sum squared differences metric metric gives weight mismatched pixel near center edge somewhat misleading pixels known pdf simply delta function highly stochastic textures single pixel rarely feature 

results sample image left algorithm synthesized new images neighborhood windows width pixels respectively 
notice perceptually intuitively window size corresponds degree randomness resulting textures 
input images synthetic rings brodatz texture brick wall 
window 
preserve local structure texture possible error nearby pixels greater pixels far away 
achieve effect set perc twodimensional gaussian kernel 

synthesizing texture previous section discussed method synthesizing pixel neighborhood pixels known 
unfortunately method synthesizing entire texture hole filling hole just pixel pixel values neighborhood pixels known 
correct solution consider joint probability pixels intractable images realistic size 
shannon inspired heuristic proposed texture grown layers outward seed taken randomly sample image case hole filling synthesis proceeds edges hole 
point synthesized pixel values known synthesized 
pixel synthesis algorithm modified handle unknown neighborhood pixel values 
easily done matching known values normalizing error total number known pixels computing conditional pdf heuristic guarantee pdf stay valid rest filled 
appears approximation practice 
treat initialization step iterative approach gibbs sampling 
trials shown gibbs sampling produced little improvement textures 
lack improvement indicates heuristic provides approximation desired conditional pdf 

results algorithm produces results wide range textures 
parameter set user width context window 
parameter appears intuitively correspond human perception randomness textures 
example image rings synthesized times increasing synthesized image context window big capture structure ring notion curved segments preserved 
image context captures ring knows interring distances producing poisson process pattern 
third image see rings getting away called poisson process repulsion image inter ring structure reach window pattern purely structured 

texture synthesis real world textures original images synthesized 
images brodatz collection bread wood text shannon images 

examples constrained texture synthesis 
synthesis process fills black regions 
shows synthesis examples done real world textures 
examples constrained synthesis shown 
black regions image filled sampling image 
comparison de bonet varying randomness settings shown texture web site 

limitations texture synthesis procedures textures handled 
possible shape texture techniques pre warp image frontal parallel position synthesis post warp 
problem algorithm tendency textures occasionally slip wrong part search space start growing garbage get locked place sample image produce verbatim copies original 
problems occur texture sample contains different types texels texels differently illuminated making hard find close matches neighborhood context window 
problems usually 
failure examples 
growing algorithm slips wrong part search space starts growing garbage gets stuck particular place sample image starts verbatim copying 
eliminated providing bigger sample image 
growing limited backtracking solution 
plan study automatic window size selection including non square windows elongated textures 
currently investigating texels opposed pixels basic unit synthesis similar moving letters words shannon setting 
akin putting jigsaw puzzle piece different shape fit 
currently algorithm quite slow working ways efficient 

applications apart letting gain better understanding texture models texture synthesis tool solving practical problems computer vision graphics image processing 
method particularly versatile place constraints shape synthesis region sampling region making ideal constrained texture synthesis 
method designed preserve local image structure continuing straight lines visual discontinuities original hole outline newly synthesized patch 
example capturing scene camera views result regions occluded cameras 
letting appear black holes reconstruction localized constrained texture synthesis performed fill missing information surrounding region 
example consider problem boundary handling performing convolution image 
methods exist zero fill tiling reflection may 
texture synthesis algorithm applied real image left extrapolating model result larger image right particular image looks quite plausible 
technique convolutions extend filter support image boundaries 
method sample image de bonet method 
texture synthesized sample image method compared decreasing degree randomness 
discontinuities original image 
cases texture synthesis extrapolate image sampling shown 
constrained synthesis process enhanced image segmentation find exact sampling region boundaries 
small patch region stored region boundaries lossy compression technique texture synthesis restore region separately 
ground segmentation possible background texture foreground removal done synthesizing background foreground segment 
algorithm easily applied motion synthesis ocean waves rolling clouds burning fire trivial extension 
acknowledgments alex berg yair weiss helpful discussions comments 
supported nsf graduate fellowship ae berkeley fellowship tl onr muri fdn california micro 
bonet 
multiresolution sampling procedure analysis synthesis texture images 
siggraph pages 
brodatz 
textures 
dover new york 
debevec taylor malik 
modeling rendering architecture photographs hybrid image approach 
siggraph pages august 

programmed prose prosody 
scientific american tk june 

surface orientation curvature differential texture distortion 
iccv pages 
heeger bergen 
pyramid texture analysis synthesis 
siggraph pages 
malik 
computing local surface orientation shape texture curved surfaces 
international journal computer vision 
popat picard 
novel cluster probability model texture synthesis classification compression 
proc 
spie visual comm 
image processing 
portilla simoncelli 
texture representation synthesis correlation complex wavelet coefficient magnitudes 
tr csic madrid april 
shannon 
mathematical theory communication 
bell sys 
tech 
journal 
simoncelli portilla 
texture characterization joint statistics wavelet coefficient magnitudes 
proc 
th int conf 
image processing chicago il 
zhu wu mumford 
filters random fields maximum entropy frame 
international journal computer vision march april 
