event calculus explained murray shanahan department electrical electronic engineering imperial college exhibition road london sw bt england 
email shanahan ic ac uk article presents event calculus logic formalism representing actions effects 
circumscriptive solution frame problem deployed reduces monotonic predicate completion 
number benchmark examples literature formalism shown apply variety domains including featuring actions indirect effects actions non deterministic effects concurrent actions continuous change 
central complex computer programs take decisions agents act form representation effects actions agents 
extent design programs sound engineering principles ad hoc methods vital subject actions effects represented solid theoretical basis 
need logical formalisms representing action may may realised directly computer programs offer theoretical yardstick deployed system representation measured 
article presents formalism event calculus 
prominent probably situation calculus mccarthy hayes variant event calculus thought just point space possible action formalisms community fully understand 
calculus described order predicate calculus capable representing variety phenomena including actions indirect effects actions non deterministic effects compound actions concurrent actions continuous change 
incorporates straightforward solution frame problem robust insofar works presence phenomena 
solution employs non monotonic formalism circumscription cases interest reduce monotonic predicate completions 
article tutorial form presents large number examples illustrating different benchmark scenarios represented event calculus 
proofs propositions asserted proofs similar propositions mainly shanahan 
presentation versions formalism increasing sophistication turn simple event calculus full event calculus extended event calculus 
material drawn directly sources shanahan shanahan shanahan 
event calculus basics event calculus introduced kowalski sergot logic programming formalism representing events effects especially database applications kowalski sergot 
couched logic programming terms simplified version kowalski closer kowalski 
number event calculus dialects kowalski sergot original 
described expressed order predicate calculus circumscription drawn chapter shanahan 
event calculus summarises way event calculus functions 
event calculus logical mechanism infers true happens actions 
happens part narrative events actions part describes effects actions 
example eating happy eat event calculus licenses happy 
logical machinery happens actions true event calculus functions formal details see event calculus supply logical foundation number reasoning tasks 
broadly categorised deductive tasks abductive tasks inductive tasks 
deductive task happens actions true required 
deductive tasks include temporal projection prediction outcome known sequence actions sought 
abductive task actions true supplied happens required 
words sequence actions sought leads outcome 
examples tasks include temporal explanation certain kinds diagnosis planning 
inductive task true happens supplied actions required 
case re seeking set general rules theory effects actions accounts observed data 
inductive tasks include certain kinds learning scientific discovery theory formation 
render informal characterisation depicted mathematically precise 
variety design choices confronts 
course rests assumption happens upset event calculus assumptions default 
meta level decisions 
sort logic going employ 
take modal route build new logic scratch defining special language semantics handling actions 
hand build order predicate calculus introducing suitable predicates functions representing kind action related information re interested possibly presenting set axioms constraining set models want 
event calculus adopts approach 
ontology predicates event calculus choice designing order language representing actions effects underlying ontology say types things quantification permitted 
basic ontology event calculus comprises actions events action event types fluents time points 
fluent value subject change time 
quantity temperature room numerical value subject variation proposition raining truth value changes time time 
ll confine attention propositional fluents 
going hand hand choice ontology choice basic predicates 
section ll restrict simple event calculus fundamental characteristics full version ll study easier understand 
versions calculus include predicates saying happens describing initial situation describing effects actions saying fluents hold times 
table introduces language elements simple event calculus 
formula meaning initiates fluent starts hold action time terminates fluent ceases hold action time initially fluent holds time time point time point happens action occurs time holdsat fluent holds time clipped fluent terminated times table event calculus predicates table shows event calculus fluents reified 
say fluents class objects quantified appear arguments predicates 
formalisms fluents course possible ll see 
commitments lead precise newly introduced predicate symbols 
terms action event interchangeably 
sorted predicate calculus article 
time points assumed interpreted reals corresponding comparative predicates arithmetic functions taken granted 
predicate function symbols start uppercase letter variables start lower case letter 
event calculus axioms initially happens temporal ordering formulae initiates terminates formulae holdsat formulae precise version axioms simple event calculus require suitable collection axioms relating various predicates 
conjunction denoted sc job 
holdsat initially clipped sc holdsat sc happens initiates clipped clipped sc happens terminates axiom sc says fluent holds time held time hasn terminated axiom sc says fluent holds time initiated time hasn terminated note axioms fluent hold time event initiates hold time event terminates 
words intervals fluents hold open left closed right 
superficial look logical machinery assembled convince sufficient intended role 
important issue neglected frame problem 
section ll take look frame problem arises event calculus 
frame problem event calculus logic represent effects actions having explicitly represent non effects 
nutshell frame problem 
brought light mccarthy hayes late sixties mccarthy hayes exercised minds numerous ai researchers years 
see arises context event calculus consider example known yale shooting scenario hanks mcdermott 
serve illustrate style event calculus formulae usually written 
yale shooting scenario version yale shooting domain types action load action action shoot action fluents loaded alive article variables assumed universally quantified maximum possible scope indicated 
dead 
effect load action loaded hold shoot action dead hold alive hold long loaded holds time action effects 
initiates terminates formulae describe effects 
initiates load loaded initiates shoot dead holdsat loaded terminates shoot alive holdsat loaded yale shooting scenario comprises load action followed action followed shoot action 
arbitrarily chosen time point constant symbols represented happens temporal ordering formulae 
initially alive happens load happens happens shoot conjunction conjunction 
intention sc holdsat dead 
unfortunately sequent valid 
neglected describe explicitly non effects actions 
particular haven said action doesn unload gun 
example models sc terminates loaded true holds alive true holdsat dead false 
fact spectrum annoying possibilities rule theory intended follow 
addition describing non effects actions describe non occurrence actions 
trivially include formulae rule possibility say action shoot action identical 
issues easily dealt 
general describing effects actions need include set uniqueness names axioms fluents actions 
case formulae notation taken baker 
una load shoot una loaded alive dead entail load loaded alive 
predicate completion non effects actions non occurrence events explicit supplying completions initiates terminates happens predicates 
formulae replaced 
initiates load loaded shoot dead holdsat loaded terminates shoot dead holdsat loaded retain formulae replaced completion happens predicate 
initially alive happens load shoot conjunction conjunction conjunction 
desired sc holdsat dead 
seeds satisfactory solution frame problem 
generally especially non trivial domains highly desirable logical mechanism automatically constructs completions initiates terminates happens predicates individual clauses 
notationally convenient allows theory constructed modular fashion 
theories elaboration tolerant mccarthy sense new actions new fluents new effects actions new event occurrences easily accommodated extant theory 
usual way address issue adopt form non monotonic formalism default logic reiter circumscription mccarthy formalise common sense law inertia fluent assumed persist reason believe 
doing care taken avoid called hanks mcdermott problem arises formalisation common sense law inertia admits unexpected change hanks mcdermott 
hanks mcdermott problem dominated research reasoning action years need investigate closely 
detailed discussion see shanahan 
context event calculus simple approach suffices construct predicate completions initiates terminates happens avoids hanks mcdermott problem altogether 
circumscriptive solution frame problem simple approach circumscription mccarthy 
idea circumscription minimise extensions certain named predicates 
say circumscription formula yields theory predicates smallest extension allowable circumscription minimising predicate written circ 
equivalent second order formula 
means means means formula obtained replacing occurrences need understand formula 
interested reader detailed discussion circumscription lifschitz extensive history application frame problem shanahan 
definition straightforwardly extended cover minimisation multiple predicates 
actual definition see works just cited 
circumscription minimising tuple predicates written circ 
return event calculus 
conjunction initiates terminates formulae conjunction initially happens temporal ordering formulae conjunction uniqueness names axioms actions fluents re interested circ initiates terminates circ happens sc minimisation initiates terminates corresponds default assumption actions unexpected effects minimisation happens corresponds default assumption unexpected event occurrences 
key solution frame problem splitting theory different parts circumscribed separately 
technique employed crawford etherington doherty kartha lifschitz lin akin sandewall calls filtering sandewall 
cases re interested conjunctions horn clauses theorem lifschitz separate reduce predicate completions 
remain class formulae lifschitz theorem applicable solution effectively monotonic likened frame problem solution proposed reiter haas schubert 
original uncompleted formulae formalise yale shooting scenario context circumscription get desired results 
conjunction conjunction 
circ initiates terminates circ happens sc holdsat dead 
follow circ initiates terminates follows circ happens 
full event calculus event calculus section limited applicability really meant introduce formalism basic concepts 
section presents full version formalism builds simple version section ways 
includes new axioms ec ec mirror sc sc describe fluent hold 
new predicates initially introduced counterparts initially clipped 
incorporates argument version happens 
allows actions duration facilitates representation compound actions 
incorporates new predicate releases disable common sense law inertia 
predicate introduced kartha lifschitz related sandewall idea occlusion sandewall 
ll see full formalism represent domains involving actions indirect effects actions non deterministic effects 
new predicates new axioms table describes predicates full event calculus weren part simple version 
formula meaning releases fluent subject inertia action time initially fluent hold time happens action occurs starts time ends time fluent initiated times table new predicates new set axioms conjunction denoted ec 
holdsat initially clipped ec holdsat ec happens initiates clipped clipped ec happens terminates releases holdsat initially ec holdsat ec happens terminates ec happens initiates releases happens ec argument version happens defined terms argument version follows 
happens def happens note releases false sc sc follow ec ec 
frame problem overcome way simple event calculus 
conjunction initiates terminates releases formulae conjunction initially initially happens temporal ordering formulae conjunction uniqueness names axioms actions fluents re interested circ initiates terminates releases circ happens ec full formalism see full formalism working take look called russian turkey shoot sandewall extension yale shooting problem includes spin action game russian roulette may may result gun unloaded 
addition reason fluents hold need alive fluent dispense fluent dead 
example doesn highlight argument happens predicate primary application representation compound actions 
covered 
effect axioms 
initiates load loaded terminates shoot alive holdsat loaded releases spin loaded formulae describing narrative events 
initially alive happens load happens spin happens shoot una load spin shoot una loaded alive conjunction conjunction conjunction 
circ initiates terminates releases circ happens ec holdsat loaded holdsat alive 
circ initiates terminates releases circ happens ec holdsat alive circ initiates terminates releases circ happens ec holdsat alive spin action released loaded fluent common sense law inertia 
models gun loaded time shoot action 
fact somewhat flawed representation russian turkey shoot scenario loaded fluent released completely wild axioms permit example models oscillates true false times 
better formalisation possible techniques described representing actions non deterministic effects 
state constraints ramification problem frame problem actions indirect effects say actions effects described explicitly associated effect axioms 
possible encode indirect effects direct effects constraints describing indirect effects ensures modular representation dramatically shorten axiomatisation 
way represent actions indirect effects state constraints 
express logical relationships hold fluents times 
ll look aspects ramification problem section ll focus solely state constraints 
event calculus state constraints holdsat formulae universally quantified time argument 
example intended meaning obvious 
holdsat happy holdsat hungry holdsat cold note formula incorporates fluents arguments 
actions may parameterised effect axioms 
terminates feed hungry terminates cold narrative example 
initially hungry fred initially cold fred happens feed fred customary uniqueness names axioms 
una feed una hungry cold incorporation state constraints negligible impact solution frame problem 
state constraints conjoined theory outside scope 
conjunction initiates terminates releases formulae conjunction initially initially happens temporal ordering formulae conjunction state constraints conjunction uniqueness names axioms actions fluents re interested circ initiates terminates releases circ happens ec current example conjunction conjunction conjunction circ initiates terminates releases circ happens ec holdsat happy fred 
state constraints caution 
seen inspection axioms ec ec enforce principle fluent initiated terminated directly effect axiom terminated initiated indirectly state constraint released 
similarly fluent holds time initially formula terminated indirectly state constraint released fluent hold time initially formula initiated indirectly state constraint released 
suppose example introduced upset event effect terminate happy 
addition happens upset fred lead contradiction 
similarly addition initially happy fred lead contradiction 
state constraints useful clear division fluents primitive derived 
effect axioms describe dynamics primitive fluents state constraints describe derived fluents terms primitive ones 
actions non deterministic effects full event calculus represent actions non deterministic effects 
different ways 
ll confine attention method determining fluents 
discussion techniques shanahan 
determining fluent subject common sense law inertia value determines fluent initiated terminated event 
example suppose action toss non deterministically results heads holding heads holding 
tails defined heads don need tails fluent examples 
formalise toss action introduce determining fluent 
initiated terminated event subject common sense law inertia 
effect axioms 
initiates toss heads holdsat terminates toss heads holdsat suppose series toss actions performed 
initially heads happens toss happens toss happens toss just action uniqueness names axiom need fluents 
una heads conjunction conjunction 
models circ initiates terminates releases circ happens ec example holdsat heads holdsat heads holdsat heads example holdsat heads holdsat heads holdsat heads 
models heads fluent retains value toss event expect 
variation example due ray reiter 
suppose throw coin chess board 
action coin isn touching squares comes rest chess board touching just white square touching just black square touching 
example exposes flaws attempts solve frame problem naively minimise change brought action 
formalisms prone reject possibility coin touching black white squares non minimal change 
event calculus formalisation determining fluents works fine 
initiates throw holdsat initiates throw holdsat initially initially happens throw holdsat holdsat una conjunction conjunction 
expect models circ initiates terminates releases circ happens ec example holdsat holdsat holdsat holdsat 
models fluents holds time models fluents retain values forever time 
compound actions final topic section compound actions say actions composed actions 
particularly useful hierarchical planning see shanahan 
take look example compound action definition describing daily journey 
suppose atomic actions effects described formulae 
initiates terminates holdsat initiates holdsat train terminates holdsat train trains hill victoria victoria south kensington 
train victoria train victoria flawed example compound event definition describing compound action terms sequence subactions 
happens happens happens victoria happens happens formula problematic reason 
normally hierarchical planning example expect able effects compound action effects sub actions 
stands formula doesn allow doesn exclude possibility events occur sub events mentioned definition undo effects sub events 
example arrested hill station taken away police victoria action ineffective action won expected outcome 
modified form formula incorporating extra clipped conditions rule intervening events 
happens happens happens victoria happens happens clipped clipped victoria clipped confidently write effect axioms 
initiates terminates holdsat required uniqueness names axiom actions 
una consider narrative actions 
happens happens victoria happens happens conjunction plus 
conjunction 
notice omitted 
circ initiates terminates releases circ happens ec happens circ initiates terminates releases circ happens ec holdsat inclusion yield logical consequences 
illustrated small example worth noting conditional recursive compound action definitions possible 
discussion compound events shanahan includes examples featuring standard program constructs 
ramification problem mentioned state constraints aren way represent actions indirect effects aren right way 
see ll take look called walking turkey shoot baker variation yale shooting problem shoot action directly terminating alive fluent indirectly terminates fluent walking 
effect axioms inherited yale shooting problem 
initiates load loaded terminates shoot alive holdsat loaded narrative events follows 
examples compound actions useful cases event calculus formulae don reduce straightforwardly predicate completion 
examples involving recursion especially tricky 
initially alive initially loaded initially walking happens shoot uniqueness names axioms 
una load shoot una loaded alive walking represent dependency walking alive fluents get required indirect effect shoot action 
obvious incorrect way state constraint 
holdsat alive holdsat walking addition state constraint formalisation yield contradiction violates rule fluent case walking holds directly initially formula terminated indirectly state constraint 
problem arise walking fluent initiated directly action 
effect constraints way represent relationship walking fluent alive fluent walking turkey shoot effect constraint 
effect constraints initiates terminates formulae single universally quantified action variable 
constraint require example 
terminates walking terminates alive notice effect constraints weaker state constraints possibility resurrecting making walk inherent faulty state constraint inherent formula 
conjunction 
conjunction conjunction 
circ initiates terminates releases circ happens ec holdsat walking 
effect constraints represent number standard benchmarks ramification problem 
remain certain examples re unsuited specifically involving instantaneous propagation interacting indirect effects 
fortunately handled causal constraints set section draws techniques shanahan 
causal constraints circuit illustrates instantaneous propagation interacting indirect effects thielscher 
closing switch activates relay turn opening switch preventing light coming 
represent examples introduce new predicates 
formula started means holds event occurs initiates conversely formula stopped means hold event occurs terminates predicates started stopped defined axioms conjoined theories outside scope 
switch relay switch switch light thielscher circuit started cc holdsat happens initiates stopped cc holdsat happens terminates formula initiated means fluent holds start holding 
similarly terminated represents hold cease holding predicates defined follows 
initiated cc started happens terminates terminated cc stopped happens initiates represent dependencies fluents thielscher circuit example introduce events open triggered conditions described formulae 
happens stopped light initiated switch initiated switch happens open started switch initiated relay happens stopped relay initiated switch initiated switch formulae represent causal constraints 
fluent dependent number fluents formulae ensure event giving fluent right value triggered fluents influence attain relevant values 
effects new events example follows 
close event introduced 
initiates light terminates open switch initiates relay initiates close switch circuit initial configuration shown follows 
initially switch initially switch initially switch initially relay initially light event occurs close event time 
happens close uniqueness names axioms required 
una close open una switch switch switch relay light conjunction conjunction conjunction cc cc conjunction 
circ initiates terminates releases circ happens ec holdsat relay holdsat switch holdsat light 
words formalisation thielscher circuit yields logical consequences require 
particular relay activated switch closed causing switch open light come 
extended event calculus section shows full event calculus section extended represent concurrent actions continuous change 
calculus formally examples featuring concurrent action featuring continuous change 
table describes predicates extended event calculus weren part full calculus section 
new predicates introduced 
predicates cancels cancelled gelfond lin shoham cater concurrent actions interfere effects 
cancels predicate minimised circumscription initiates terminates releases 
trajectory predicate proposed shanahan capture continuous change height falling ball level liquid filling vessel example 
formula meaning cancels occurrence cancels effect simultaneous occurrence fluent cancelled event occurs time time cancels effect action fluent trajectory fluent initiated time fluent true time table new predicates new set axioms conjunction denoted xc 
axioms correspond axioms calculus section 
difference incorporation axioms xc xc xc xc cancelled conditions block applicability axiom case simultaneous occurrence events cancel effects 
holdsat initially clipped xc holdsat xc happens initiates cancelled clipped clipped xc happens terminates releases cancelled holdsat initially xc holdsat xc happens terminates cancelled xc happens initiates releases cancelled happens xc axiom xc defines cancelled predicate 
cancelled happens cancels xc axiom xc counterpart axiom xc continuous change 
holdsat xc happens initiates cancelled trajectory clipped argument happens defined terms argument version 
happens def happens addition new predicates introduced extended event calculus employs new infix function symbol express cumulative effects concurrent actions 
term denotes compound action comprising actions 
write happens denote actions occur concurrently say start 
final new axiom require defines symbol 
happens happens happens ca circumscriptive approach frame problem employed extends straightforwardly new calculus 
constrains happens predicate axiom ca included inside circumscription minimises happens 
general conjunction initiates terminates releases trajectory cancels formulae conjunction initially initially happens temporal ordering formulae conjunction state constraints conjunction uniqueness names axioms actions fluents re interested circ initiates terminates releases cancels circ ca happens xc omitted state constraints 
cancels trajectory false axioms ec ec follow axioms xc xc 
accordingly examples article illustrate simple event calculus full event calculus extended event calculus 
sections comprise examples extended event calculus deal concurrent action continuous change 
concurrent actions section formalises soup bowl scenario gelfond 
example features concurrent actions cumulative cancelling effects 
domain comprises actions represent respectively lifting left side soup bowl lifting right side 
fluents involved spilled ontable 
soup bowl full soup 
action initiate spilled action 
carried actions cancel effect spilled fluent 
hand carried action action cumulative effect raise bowl table terminating ontable fluent 
initiates terminates formulae 
initiates spilled initiates spilled terminates ontable required cancels formulae 
cancels spilled cancels spilled initial situation soup bowl table 
time action action occur simultaneously 
initially ontable initially spilled happens happens customary uniqueness names axioms 
una ontable spilled una conjunction conjunction conjunction 
circ initiates terminates releases cancels circ ca happens xc holdsat ontable holdsat spilled 
words formalisation yields desired bowl longer table time spite occurrence action soup spilled 
continuous change section demonstrates extended calculus copes continuous change example involving vessel fills water 
example features triggered events say events occur certain fluents reach certain values 
similar events represent causal constraints section 
case event triggered continuously varying quantity attains particular value specifically water level reaches rim vessel 
domain comprises event initiates flow liquid vessel 
fluent filling holds water flowing vessel fluent level represents holds water level vessel real number 
overflow event occurs water reaches rim vessel level 
overflow event initiates period fluent spilling holds 
action included 
initiates terminates releases formulae domain 
initiates filling terminates filling releases level initiates level holdsat level terminates overflow filling initiates overflow level initiates overflow spilling note releases formula terminates formula level fluent immune common sense law inertia tap turned 
trajectory formula describes continuous variation level fluent filling fluent holds 
level assumed rise unit unit time 
trajectory filling level holdsat level state constraint ensures water unique level 
holdsat level holdsat level formulae ensures overflow event triggered 
happens overflow holdsat level holdsat filling simple narrative 
level initially tap turned time 
initially level initially filling initially spilling happens uniqueness names axioms required 
una overflow una filling level spilling conjunction conjunction conjunction 
circ initiates terminates releases cancels circ ca happens xc holdsat level holdsat filling holdsat spilling 
words formalisation yields expected result water stops flowing vessel time starts spilling rim level subsequently stuck 
trajectory predicate represent large number problems involving continuous change 
general treatment arbitrary sets differential equations deployed see miller shanahan 
concluding remarks extended event calculus section formalism reasoning action incorporates simple solution frame problem capable representing diverse range phenomena 
phenomena include actions indirect effects including interacting indirect effects thielscher circuit example actions non deterministic effects including examples non minimal change reiter chess board example compound actions include standard programming constructs sequence choice recursion concurrent actions including actions cumulative cancelling effects soup bowl example continuous change triggered events filling vessel example 
said far explanation say reasoning effects causes isomorphic planning 
logical aspects topic dealt chapter shanahan shown explanation planning problems handled abduction 
shanahan implementation abductive event calculus planning perform explanation 
implementation forms basis system control robot shanahan sensor data assimilation cast form abductive reasoning event calculus shanahan 
acknowledgments carried part epsrc funded project gr cognitive robotics 
members reasoning action community influenced development event calculus 
baker baker nonmonotonic reasoning framework situation calculus artificial intelligence vol 
pp 

crawford etherington crawford etherington formalizing reasoning change qualitative reasoning approach proceedings aaai pp 

doherty doherty reasoning action change occlusion proceedings ecai pp 

gelfond gelfond lifschitz limitations situation calculus 
essays honor woody bledsoe ed boyer kluwer academic pp 

haas haas case domain specific frame axioms proceedings workshop frame problem pp 

hanks mcdermott hanks mcdermott nonmonotonic logic temporal projection artificial intelligence vol 
pp 

kartha lifschitz kartha lifschitz actions indirect effects preliminary report proceedings knowledge representation conference kr pp 

kartha lifschitz kartha lifschitz simple formalization actions circumscription proceedings ijcai pp 

kowalski kowalski database updates event calculus journal logic programming vol 
pp 

kowalski sergot kowalski sergot logic calculus events new generation computing vol 
pp 

lifschitz lifschitz circumscription handbook logic artificial intelligence logic programming volume nonmonotonic reasoning uncertain reasoning ed 
gabbay hogger robinson oxford university press pp 

lin shoham lin shoham concurrent actions situation calculus proceedings aaai pp 

mccarthy mccarthy circumscription form non monotonic reasoning artificial intelligence vol 
pp 

mccarthy mccarthy mathematical logic artificial intelligence winter pp 

mccarthy hayes mccarthy hayes philosophical problems standpoint artificial intelligence machine intelligence ed 
michie meltzer edinburgh university press pp 

miller shanahan miller shanahan reasoning discontinuities event calculus proceedings knowledge representation conference kr pp 

reiter reiter logic default reasoning artificial intelligence vol 
pp 

reiter reiter frame problem situation calculus simple solution completeness result goal regression artificial intelligence mathematical theory computation papers honor john mccarthy ed 
lifschitz academic press pp 

sandewall sandewall features fluents technical report review version department computer information science university sweden 
sandewall sandewall features fluents representation knowledge dynamical systems volume oxford university press 
schubert schubert monotonic solution frame problem situation calculus knowledge representation defeasible reasoning ed 
kyburg loui carlson kluwer pp 

shanahan shanahan representing continuous change event calculus proceedings ecai pp 

shanahan shanahan robotics common sense situation proceedings ecai pp 

shanahan shanahan solving frame problem mathematical investigation common sense law inertia mit press 
shanahan shanahan event calculus planning revisited proceedings th european conference planning ecp springer lecture notes artificial intelligence pp 

shanahan shanahan reinventing shakey working notes aaai fall symposium cognitive robotics pp 

shanahan shanahan ramification problem event calculus proceedings ijcai appear 
thielscher thielscher ramification causality artificial intelligence vol 
pp 

