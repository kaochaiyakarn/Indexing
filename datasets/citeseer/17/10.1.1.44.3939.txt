boundedness reset nets 
ph 
schnoebelen lab 
sp cnrs umr ens de cachan france dept computer science fei sb tu tech 
univ czech rep email lsv ens cachan fr petr cz 
nets reset transfer arcs seen restricted set operations 
surprisingly problems related boundedness harder reset nets expressive transfer nets 
main result boundedness undecidable nets reset arcs decidable nets places 
infinite state transition systems generic name large collection computational models go finite state systems decidability results exist 
infinite systems short currently active study reasons 
applications models easily abstracted finite state systems hybrid systems 
models go finite state specific way parameterized systems lossy channel systems 
verification methods designed infinite state systems may help understand avoid famous state explosion problem finite state framework 
nets classical infinite state model remains partially analyzable 
properties reachability safety properties termination decidable bisimilarity language equivalence 
concerned modelling concurrency see weak counter machines full fledged test zero transitions test negatively emptiness counter 
reset nets nets extended possibility resetting setting zero content places 
adds expressive power reachability undecidable ak 
transfer nets powerful transfer content place 
dfs investigate decidability issues verification reset transfer nets compared nets decidability reachability lost termination coverability inevitability remain decidable 
partially supported agency czech republic surprising result dfs undecidability boundedness reset nets knowing clearly decidable transfer nets fs 
boundedness fundamental question space termination time 
termination boundedness closely related problems 
boundedness neglected model checking infinite systems approaches refer observable behaviour systems 
studying potentially infinite systems question check really infinite obviously boundedness issues reset transfer nets difficult questions 
dfs uses involved reduction hilbert th problem 
kck gives faulty decidability proof general model 
contribution 
give new simpler proof boundedness undecidable reset nets nets reset arcs prove result tight boundedness decidable reset nets places 
threshold value surprising reset arcs simulate strong counter machines quite faithfully see theorem dfs 
exhibiting exact threshold value main result 
proof possibility producing semilinear witness unboundedness 
close boundary possibility natural proof technically nontrivial 
similar situation appears case dimension semilinear dimension hp 
investigate related problems complete table reset nets transfer nets nets boundedness sigma complete decidable decidable place boundedness sigma complete sigma complete decidable structural boundedness pi complete pi complete decidable ptime termination decidable decidable decidable structural termination pi complete pi complete decidable ptime results techniques applications models related reset net see 
related works 
ak shows reachability undecidable nets extended reset arcs 
shows coverability decidable reset arcs 
may gives undecidability results lossy counter machines applications reset transfer nets 
reset transfer nets subset valk self modifying nets val 
lc cia consider expressivity perspective 
purposes reset transfer nets close models currently study 
undecidability boundedness reset surprise place boundedness place bounded decidable transfer nets boundedness boundedness place boundedness similar problems papers confuse 
lack space proofs sketched omitted 
appear full version available authors 
nets translates undecidability boundedness lossy zero test bm 
parameterized broadcast protocols encoded transfer nets efm uses crucial counter example inspired 
bo introduces reconfigurable nets shows boundedness decidable 
nets fact seen transfer nets 
reset transfer nets net tuple hp fp ft disjoint finite sets places transitions theta theta set arcs denote ffl fp fg ffl fp fg 
assume usual graphical presentation 
marking identified multiset places say denotes number tokens place denote proper multiset inclusion 
marked net net initial marking write iff ffl gamma ffl ffl enabling tokens removed output tokens added 
abstracting transition similarly reset net net special reset arcs 
formally tuple hp fr hp net fr theta set reset arcs 
fig 

unbounded reset net reset arcs change requirements enabling transition 
reset arc sets zero fr 
depict reset arcs crossed edges fig 
fr 
observe gamma 
net unbounded 
fixed exist delta delta delta leads unboundedness 
transfer net net special transfer arcs 
formally tuple hp ft hp net ft theta theta set transfer arcs condition ft 
transfer arcs change requirements enabling transition 
obtained removing enabling tokens transferring tokens ft adding usual output tokens 
omit tedious formal definitions 
boundedness termination problems 
place bounded marked net bound reachable marked net bounded places 
net structurally bounded bounded initial marking note bound may vary 
marked net terminating admits infinite run 
net structurally terminating terminating initial marking 
reset transfer nets enjoy monotonicity property imply transfer nets 
lemma 
marked reset net unbounded iff unbounded nondecreasing run 
unbounded run infinite sequence moves delta delta delta place unbounded run get arbitrarily large values run nondecreasing implies lemma 
marked transfer net unbounded iff exists sequences exists effective procedure searching termination relies dickson lemma infinite sequence elements infinite ascending subsequence 
corollary boundedness transfer nets decidable 
transfer nets simulate reset nets 
add dummy place dum reset arc simulated transfer arc dum 
simulation quite faithful preserve behavioural aspects nets 
boundedness decidability boundedness transfer nets entail decidability boundedness reset nets 
shows lemma hold reset nets 
counting reset arcs 
reset arc say place 
boundedness issues need reset arcs place 
lemma 
reset net places possible construct modified reset arcs initial marking bounded iff corresponding undecidability boundedness reset nets counter machine nonnegative counters sequence labelled instructions instr instr instr instr halt instr gamma types assuming fc believed transfer nets strictly expressive terms generated languages reset nets know formal proof 
example purpose cia fig 
flawed encoded reset net 
goto gamma goto goto shall refer obvious notion unique computation input values counters computation finite halting infinite 
note order instructions matter fix instr initial starting instruction 
say space bounded input values iff sum delta delta delta counters exceeds computation input values 
counter machines simulate turing machines clear problem counter machine bounded input values undecidable 
lemma 
counter machine construct marked reset net nm reset arcs bounded inputs iff nm bounded 
proof 
transform counter machine slightly richer set allowed instructions follows add third capacity counter replace command gamma gamma controlled incrementation gamma goto add instructions gamma goto goto gamma goto goto goto instr changes increases sum counters 
bounded inputs iff bounded inputs unbounded run yields unbounded run empty controlled incrementation restarting computation token 
allow commands introduce nondeterministic choice operator 
replace sub instruction comm comm fc kg comm comm assuming attempt perform gamma fails 
get nondeterministic machine instr increases sum counters instructions decrease change 
verify bounded inputs iff bounded inputs computations bounded 
unbounded run uses instr infinitely instr instr instr instructions initial state reached possibly token unbounded computation performs gives unbounded run remains check easy fact faithfully simulated reset net nm place set consisting control places just token empty counter places just places nm transform contains just reset arcs cf 
lemma 
corollary 
boundedness reset nets reset arcs sigma complete 
corollary place boundedness sigma complete reset transfer nets membership sigma follows fact coverability reachable decidable dfs 
define counter machine totally bounded iff bounded inputs 
lemma 
problem counters machine totally bounded reducible structural boundedness problem reset nets 
lemma 
problem counters machine halt reducible structural boundedness problem transfer nets 
uses reductions similar lemma see full version 
structural boundedness clearly pi transfer nets boundedness decidable pi reset nets boundedness sigma get corollary 
structural boundedness pi complete transfer nets pi complete reset nets 
completes table noting may shows structural termination pi hard 
decidability boundedness nets reset arcs observe boundedness problem standard breadthfirst construction reachability set guaranteed terminate set finite 
unboundedness demonstrated 
start easy subcase 
definition 
marked reset net simple witness tuple reachable reset transition sequence repeating ad infinitum yields run unbounded 
simple witness witnesses unboundedness 
note simple witness surely encountered recognized constructing reachability tree 
unboundedness nets simple witnesses 
characterized lemma 
marked reset net admits simple witness iff run place unbounded reset finitely times place unbounded reset infinitely 
easily proven dickson lemma pigeonhole principle property implies jm gamma reset arc case ordinary arcs 
restrict attention unbounded nets reset arcs simple witnesses unbounded nets reset arcs connected different places unbounded run precisely places unbounded reset infinitely 
recall shows relevant example 
fix marked net denoting places transition set observe set fm finite reachable subscript imposes occurrences reset transitions respective transition sequence 
fix unbounded nondecreasing run restrict attention markings marking unordered tuple ranges places values places 
finite range denoted fcs viewed finite control states set 
denoting elements fp mean 
gamma denoting marking mean value unimportant don care 
decidability proof fact supposed regular structure 
finite amount information called regular witness demonstrates unboundedness exemplified scheme net 
give relevant definitions statements 
definition 
pair hr hr allowed path scheme order mean triple gamma 
note contains reset transitions 
path scheme maximum property 

note implies 
tuple hr sensible iff 
reachable 
considering path schemes implicitly suppose hr sensible 
straightforward way putting gamma handle case gamma 
sensibility guarantees existence path scheme maximum property order 
composition path schemes mean natural notion implicitly assuming obvious consistency assumptions 
define regular path schemes essence regular witnesses technically straightforward show important fact composition regular path schemes regular 
definition 
function gamma 
regular iff rational constants ae ae mod implies ae ae note imposes ae 
refer ae ae second coefficient function gamma 
regular iff functions gamma regular gamma coefficient ae mod ae coefficient call regular regular definition 
path scheme regular regular gamma um vm um regular functions gm mod implies um gm um definition 
regular witness net reachable marking regular path scheme hw order related pair hr hr property 
regular witness surely witnesses unboundedness 
witness convenience accompanied sequence demonstrating reachability naturally string fixed alphabet 
string represents regular witness checked obvious algorithms 
regular witness exists generating checking strings 
remains show regular witness guaranteed exist 
lemma crucial 
lemma 
sensible pair hr hr path scheme order maximum property regular 
proof 
sketch 
key point case reset transition consider 
roughly speaking handles segments neighbouring resets sensible pairs hr just reset hr gammai reset interest 
pair consider regular path scheme order maximum property suppose shortest possible yielding 
finite run corresponding non decreasing increase simple witness exists 
fix sufficiently large constant 
fcs imagine run gamma 
gamma corresponding tour plane current values give coordinates current control state additional bounded information 
note tour long uses cycles necessarily gamma gamma cycle elementary contains shorter cycles length 
clear tour visit initial vertical initial horizontal belt breadth coordinates equal boundedly times bound depending 
tour leaves belts leaving horizontal vertical belt return belt zig zag 
idea pumping deleting elementary cycles helps realize lengths returns bounded 
idea implies zig zag segment supposed best rate elementary cycle possibly bounded prefix suffix 
boundedly possibilities patterns zig zag arrange bounded segments 
pattern pat associated regular path scheme hw pat pat gammai coefficient pat regular function pat determined rates elementary cycles second coefficients reflecting bounded prefixes suffixes rest tour obeying pattern 
large main coefficient decisive quality size pat pattern 
patterns coefficient qualitative order large depends solely mod multiple pat 
general case order allowed boundedly patterns arrange resets regular path schemes order 
idea fact composition regular path schemes regular 
call pair fcs increasing iff delta delta delta xm 
xm 
note nondecreasing fcs resets reset 
principle times succession easily show increasing pair 
gamma appears infinitely lemma guarantees regular path scheme order related hr hr maximum property 
regular ae coefficient ae ae ae gamma second coefficients 
case ae case ae ae gamma contradict choice large 
shown proposition 
unbounded marked reset net reset arcs simple witness regular witness 
investigated boundedness problems reset transfer nets surprising results appeared dfs 
proved boundedness undecidable reset nets reset arcs decidable reset nets places 
quite surprising places recognize recursive language 
proof technique adapted related problems structural boundedness structural termination 
showed structural boundedness pi complete reset nets pi complete transfer nets 
shows paradoxical result powerful transfer nets simpler boundedness problems carries structural boundedness just strange accidental quirk 
results reset transfer nets similar extensions model applications various computational models investigated infinite systems community pointed 
decidability result hints interesting questions stack automata extensions lossy systems parameterized systems 
ak araki kasami 
decision problems related reachability problem petri nets 
theor 
comp 
sci 
arnold 
cones ferm es par intersection 
xv iv 
bm bouajjani mayr 
model checking lossy vector addition systems 
proc 
th ann 
symp 
theoretical aspects computer science stacs trier germany mar vol 
lncs pp 
springer 
bo badouel oliver 
reconfigurable nets class high level petri nets supporting dynamic changes workflow systems 
research report inria january 
cia 
petri nets marking dependent arc cardinality properties analysis 
proc 
th int 
conf 
applications theory petri nets zaragoza spain june vol 
lncs pp 
springer 
dfs finkel ph 
schnoebelen 
reset nets decidability undecidability 
proc 
th int 
coll 
automata languages programming icalp aalborg denmark july vol 
lncs pp 
springer 

de petri avec reset ind 
th ese de en sciences de ecole normale sup erieure de cachan october 
efm esparza finkel mayr 
verification broadcast protocols 
proc 
th ieee symp 
logic computer science lics trento italy july 
fs finkel ph 
schnoebelen 
fundamental structures structured infinite transition systems 
proc 
rd latin american theoretical informatics symposium latin campinas brazil apr vol 
lncs pp 
springer 
hp hopcroft 

reachability problem dimensional vector addition systems 
theor 
comp 
sci 
kck lavagno taubin 
coupling asynchrony interrupts place chart nets 
proc 
th int 
conf 
application theory petri nets toulouse france june vol 
lncs pp 
springer 
lc christensen 
general approach arc extensions coloured petri nets 
proc 
th int 
conf 
applications theory petri nets zaragoza spain june vol 
lncs pp 
springer 
may mayr 
lossy counter machines 
tech 
report tum institut fur informatik tum munich germany october 
val valk 
self modifying nets natural extension petri nets 
proc 
th int 
coll 
automata languages programming icalp udine italy jul vol 
lncs pp 
springer 
