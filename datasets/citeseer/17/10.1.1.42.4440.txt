ecient collaborative key management protocols secure autonomous group communication adrian perrig computer science department carnegie mellon university forbes avenue pittsburgh pa adrian perrig cs cmu edu introduces new family protocols addressing collaborative group key agreement secure group communication autonomous groups 
protocols varying degrees security ef ciency 
rst protocol provides non authenticated key agreement suitable applications low security requirements 
second third protocols add die hellman authenticated key agreement provide collaborative authentication 
particular third protocol uses concept ed public keys achieve higher eciency 
major advantage protocols allow ecient join leave operations preserving perfect forward backward secrecy 
protocols improve previously proposed schemes ways rst autonomous group key agreement central server necessary member special role 
complexity drastically reduced compared best currently techniques number rounds initial key agreement reduced log bandwidth requirements reduced number members 
addition new primitives enforce rights management policies group sender authorization keywords secure group communication protocol collaborative group key agreement key distribution 
explosive growth internet shift traditional communication services internet group publication supported part contract number united states postal service 
contents publication solely responsibility author necessarily re ect ocial views united states postal service 
communication increasingly important 
simultaneously growing demand security 
consequently internet communication need secure intranet communication faces increasing need security reasons companies install high security applications need additional protection rewall usually serious security mechanism intruder bypassed remaining systems simple compromise 
ample evidence easy nd security leaks large corporations 
large companies contractors agreements companies temporary employees cleaning personnel access secure network rewall example install tunneling device 
intranet communication needs additional security 
need ecient secure group communication protocols 
parameters protocols include number members concurrently group frequently members expected join leave group senders group group autonomous administered central server security policy requirements 
protocol establish group key small medium sized autonomous groups may highly dynamic memberships 
examples include telephone video conferences remote consultation diagnosis systems medical applications contract negotiation multi party games collaborative places electronic commerce environments online real time auctions information dissemination stock quotes 
currently proposed protocols dedicated server group controller results simpler protocols cost requiring members trust server 
central server group controller incurs management overhead central point failure 
conversely autonomous group member fails excluded eventually obstructing group communication 
drawback server protocols electing group member group controller creates asymmetry members producing problems group controller fails wants leave evicted group 
server schemes require members trust server 
addition requiring server connected internet may inhibit applications multi party games required management overhead 
major contributions protocols rely central server special member group controller 
communication computation time complexities order magnitude faster state art techniques 
ecient scalable join leave mechanisms 
outline follows section gives background information problem secure group communication reviews previous 
section presents protocols novel security properties 
section discuss implementation issues 
protocol complexity security analysis sections 
conclude ideas 
background general goal secure group communication establish common secret key referred group key group members con communication 
generally secret group key established group key agreement protocol 
joining members leaving members pose problem backward forward secrecy 
protocol provides perfect backward secrecy member joining group time gain information content messages communicated times protocol provides perfect forward secrecy member leaving group time gain information content messages communicated times protocols need provide properties provide secure group communication dynamic groups dynamic implies membership change joins leaves 
necessary condition provide backward secrecy information new member receives unrelated previous group information 
particular new member keys receives obtain information previous keys outsider 
similarly necessary condition protocol provide forward secrecy member leaves obtain key information subsequent group operations 
leaving member information group outsider 
con dentiality needs provide integrity authentication secure 
message integrity guarantees message altered sent outside attacker 
member authentication ensures valid users join group 
existing protocols vulnerable collusion attack 
collusion attack members exchange private key data decrypt group messages expelled 
multi join problem related member collude joining group twice di erent identities 
issue member colluding outside member serious problem long legal member group outsider able send receive group messages friend 
protocols individual group members authenticate group member outsider group normally allowed join group 
problem outsider stay group friend evicted 
terminology partly adapted group key agreement protocol key establishment technique shared secret key derived speci ed parties function information contributed party party resulting value 
successful run protocol members share identical secret key 
desired properties 
key agreement protocol kap contributory party equally contributes key guarantees freshness 
provides implicit key authentication group member assured outsider knows secret group key aided dishonest group member 
contributory key agreement protocol provides key integrity member assured particular secret key function individual contributions members outside information 
particular extraneous contribution group key tolerated assist attacker additional knowledge 
kap provides key con rmation member assured peers possession common group key 
secure group communication protocol provides key independence sequence group keys provides information previous group keys 
property necessary condition forward backward secrecy 
pointed key integrity key authentication independent concepts 
protocol violates key integrity soon outside information uences key necessarily impact security key 
conversely insecure leak secret key violate key authentication providing key integrity 
previous previous secure group key communication protocols mainly focused server systems 
early server schemes uses central server shares secret key member uses unicast encryption communicate new keys securely member individually 
achieve scalability proposes server hierarchy 
wallner propose key tree hierarchy built central server key updates cient broadcasting message size log number members 
approach uses similar key tree hierarchy key tree generated members central server necessary 
wong extends centrally managed key tree hierarchy provide secure multicast service 
chang propose method ecient key update reduces total number keys group key tree schemes log 
unfortunately scheme robust collusion attacks members remain group expelled exchanging keys 
careful inspection protocol reveals keys leaving member subsequent group operation violates forward secrecy 
protocols smaller groups received attention large groups 
groups expected small groups practice ecient protocols small groups important 
small groups remove requirement central server construct collaborate group key authentication protocols 
collaborative group key agreement protocols burmester desmedt describe star tree broadcast cyclic protocols contributory group key agreement 
protocols variations die hellman key exchange 
address problems dynamic groups join leave operations 
addition treebased scheme uses group chair root assuming analogue zipf law holds distribution group size expect see small number large groups large number small groups 
experiment verify previous statement considering telephone calls 
expect see high number calls persons fewer key hierarchy responsible establish common group key 
improve scheme eliminating need trusted group chair adding dynamic membership resolving practical implementation issues 
ateniese address dynamic membership issues 
system variant key agreement 
scheme uses group controller needs protocol rounds establish common key group members 
total bandwidth 
improve bounds dlog number rounds bandwidth requirements 
ecient key agreement protocols autonomous groups section describes novel contributory group key agreement protocols dynamic communication groups 
rst protocol authenticate individual group members subsequent 
protocols binary key tree hierarchy 
assumptions protocols function assumptions 
authenticated members malicious behaved 
members trust mutual authentication 
members trust certi cate authority ca key authentication center kac 
design protocol depends failure model 
described powell basic failure models crash failure fail model arbitrary failure model referred byzantine failure model 
arbitrary failure model describes worst case program behave arbitrary way 
examples group communication systems setting 
protocols assume members fail fail model members fail halting 
reasonable model practical application domains 
contrary arbitrary failure model synchronous reliable communication assumed meaning message received delay 
ip multicast inherently unreliable protocols rely underlying protocol provides reliable multicast 
protocols assume members know structure key tree position member tree details key tree section 
notations notation describe protocols number members group want join initially 
encryption plaintext key decryption ciphertext key hash message sa sign message key 
sends message broadcasts message description protocols notation binary trees 
example key tree 
denote depth key tree 
root level lowest leaves level nodes denoted hl ii stands level node number level level hosts nodes 
case perfectly balanced binary tree 
see tree balanced simplify discussion protocols assume key tree balanced number members section show protocol handle arbitrary number members unbalanced trees 
node hl ii corresponding key hl ii members placed leaf node 
notion subtree binary tree non leaf node right left subtree 
non authenticated group key agreement protocol rst protocol establishes common group key user authentication 
lack authentication useful settings example group members prefer remain anonymous members share commonly trusted third party 
protocol variation non authenticated party key agreement extended group key agreement 
scheme described detail boxes labeled protocol procedure 
shows key tree group members 
protocol group members share root key know keys path leaf node root 
key tree hierarchy similar proposed wallner central server establish key hierarchy initially sends keys unicast individual members 
adopted key tree hierarchy provides perfect forward backward secrecy robust collusion attacks little overhead member needs know log keys 
overview protocol works follows key tree constructed leaves root 
initially member chooses random number key value leaf node collectively form lowest level key tree 
construction initialization members fm participate group depth key tree 
appropriate prime generator selected published 
user selects random number sets keys level hd ii iterate step keys hl vi level constructed run key agreement procedure passing arguments 
members share root key know keys path leaf node root 
protocol non authenticated group key agreement protocol key agreement int int int hl vi stands current round node number current level leftmost leaf node subtree rooted node hl vi 
rightmost leaf vr 
choose random member left subtree vr right subtree vr vr 
left key node hl vi index right index 
shown 

hl mod 
hl mod 
members subtree node hl vi compute new key level hl vi hl hl mod hl hl mod hl 
hl mod procedure establish key hl vi key agreement level keys level keys level keys non authenticated group key tree depth subsequent layer members establish key key agreement procedure member left subtree right subtree 
broadcast part die hellman key agreement allows members subtree compute notation nodes group key tree depth 
shows key indices members associated step key agreement corresponding notation protocol description 
key current level 
root key established group start secure communication encrypting messages root key 
protocol provide authentication anybody join group violates con dentiality 
addition protocol basic key agreement vulnerable man inthe middle attack compromises con dentiality 
solve problems replace unauthenticated die hellman key agreement authenticated versions 
second protocol uses authenticated version die hellman key agreement third protocol uses key agreement 
authenticated group key agreement applications mentioned members need authenticated members secure conference telephone call 
apply authenticated die hellman scheme purpose 
protocol similar protocol group members establish parent key node current key nodes perform mutual authentication exchanging exponents 
authentication digital signatures public key infrastructure pki 
exchanging keys members sign concatenation exponent members position tree timestamp 
details described box protocol procedure case clarity 
implicitly certi ed public keys disadvantage protocol uses certi cates pki 
key agreement cer protocol similar protocol step members perform mutual authentication 
time initialization member registers public key km certi cate agency ca issues certi cate public assumed known members 
appropriate prime generator selected published 
user selects random number sets keys level hd ii iterate step keys hl vi level constructed run key agreement procedure passing arguments 
members share root key keys path leaf node root 
members know member authenticated member 
protocol authenticated group key agreement protocol key agreement int int int hl vi stands current round node number current level leftmost leaf node subtree rooted node hl vi 
rightmost leaf vr 
choose random member left subtree vr right subtree vr vr 
left key node hl vi index right index 

hl mod sm hl mod time stamp 

hl mod sm hl mod time stamp 

member subtrees verify validity digital signature compute new key hl vi hl mod hl mod hl mod hl mod hl 
hl mod case signature invalid notify group dishonest member expelled 
procedure establish key hl vi mutual authentication ti cates need exchanged consumes bandwidth large size certi cates 
furthermore signature pki needs veri ed computationally expensive 
reasons third protocol uses identity key agreement known implicitly certi ed key agreement protocol 
protocol reproduced keep self contained 
original detail steps necessary key agreement 
authentication scheme trusted key authentication center kac similar certi cate authority ca pki 
kac pre authenticates user issues private public information sure identity identi ers globally unique 
authentication scheme split phases initial set phase kac distributes public information second phase member sets public private information kac nally authentication phase members perform mutual authentication 
mutual authentication phase members exchange public information blinded nonce 
members compute common secret key implies pre authenticated kac 
name member reconstruct user certi cate authentication scheme called identity key agreement 
box procedure shows details ed public keys 
authenticated group key agreement scheme protocol similar public key certi cates uses scheme mutual authentication 
additional difference messages exchanged mutual member key agreements allow members subtree generate node key 
members unicast exchange public information establish new node key 
pass new key members residing subtree members encrypt new key root key respective subtree broadcast members subtree 
example perform key agreement root key encrypt new key sending members subtree 
way uses encryption describe protocol case binary key tree balanced 
join leave procedures protocols dynamic communication groups mechanisms allow members joining leaving group necessary compromising forward backward secrecy key independence 
join leave procedures assume general binary tree structure necessarily balanced shown 
discuss case new member joining group 
box labelled procedure contains details join protocol 
key agreement protocol trusted third party kac 
set identities key agreement authentication 
initialization kac chooses publishes prime generator kac selects randomly divisible largest prime factor private key 
published 
pre authentication sends kac identity information ia kac checks uniqueness issues corresponding private key 
ia kac chooses randomly ka gcd ka computes pa ka mod mod 
kac computes 
ia 
pa mod cryptographic hash function 
furthermore ka private kac sent back secret key 
pa ia published 
kac 
pa passed secure channel 
goes procedure receive secret key public information ib key agreement 
ia pa 
ib 
chooses secret ra random picks 
ra mod 
pa mod 
compute common key ka 



walk steps analogous 
knows ib mod ra pa mod ka 
mod ka mod rst part product simple compute known information ka 

mod pa mod ka 

mod computation 

mod follows 

mod 
mod mod raise nal term power multiply get ka 


ra mod ka 



mod see public information ib private ra compute procedure implicitly certi ed public key join procedure needs provide perfect backward secrecy joining member receive old keys key tree 
keys leaf node new member root need changed 
new member joins closest node root 
example shown new member joins node 
member moved level accommodate shown 
keys new member root need newly established case shown fig protocol similar protocol scheme described procedure mutual authentication certi cates pki 
time initialization member registers identity im trusted third party issues corresponding private information public information pm public information known member iterate step keys hl vi level constructed keys total 
run key agreement procedure passing arguments 
members share root key keys path leaf node root 
protocol authenticated group key agreement protocol identity key agreement key agreement int int int hl vi stands current round node number current level leftmost leaf node subtree rooted node hl vi 
rightmost leaf vr 
choose random member left subtree vr right subtree vr vr 
left key node hl vi index right index 

im pm 
im pm pm hl mod 
pm hl mod 
information members compute key current level hl vi protocol 
verify members computed key exchange messages 
ek hl vi ek hl vi authentication fails valid member contact members dishonest outsider 

send new key hl vi encrypted members key node 
ek hl hl vi ek hl hl vi procedure establish key hl vi authenticated key agreement ure keys need newly established 
defer discussion new member nds position tree section 
similarly leave procedure needs provide perfect forward secrecy keys leaving member knows need changed prevents knowing new keys 
box join join key tree join operation joining new member labelled procedure contains details leave protocol 
member node hl ii leaves group node hl ei gets replaced hl moving entire subtree level 
keys deleted node root need updated hl ei 
example shows key tree right leaves node deleted moves level shown 
initialization current group members 
new user inserted node hl ii key tree leaf closest root 
member hl ei gets pushed hl 
keys leaf key root need updated hl ei 
new user selects random number sets key level hl ii iterate step key hl vi constructed procedure run arguments establish key hl vi procedure join procedure initialization leaving member node hl ii key tree 
keys hl ei need updated 
peer subtree moved level 
iterate step key hl vi constructed protocol run arguments establishes key hl vi procedure leave procedure additional security services key tree main role description provide forward backward secrecy 
propose key tree additional innovative security policy features 
new type service domain rights management sender authorization speci members allowed send group messages remaining members allowed receive 
property enforced placing senders left hand side binary key tree verifying sender permissions constructing key tree 
lefthand members know key righthand members know asymmetry sign message sent el gamal signature scheme 
receivers verify sender authorization receipt message 
idea extends produce group signature 
key tree structure allows construction ecient memberships 
placing subtree members need leave certain point time leave step cutting entire subtree key tree 
primitives tree structure express enforce powerful rights management policies 
methods restricted protocols described applicable key tree scheme particular previously proposed server key tree schemes 
implementation details key agreement protocols seen far stated assumptions members know position member position key tree second number members realize rst assumption need algorithm place new members deterministically key tree running key agreement protocol 
achieve property multi phase protocol initial phase members wish join announce second phase members agree group nal phase members build tree inserting members lexicographic order example 
issues easily resolved group controller introduce problems mentioned 
relax second assumption protocols need case seen examples join leave protocols necessary requirement protocols tree binary meaning node children leaf 
description key agreement procedures boxes labeled procedure mentioned members key agreement chosen randomly subtrees rooted node key established 
choose members method 
choosing member random necessary member sends key agreement message random delay member subtree perform key establishment 
member subtree receives key agreement message sent member subtree need perform key agreement current round 
results favorable load balancing properties members having faster computers better network connectivity able react quicker key agreement level 
protocols ideally applicable settings large di erences speed network connectivity members 
similar method allows ecient join mechanism problem joining member nds position key tree 
problem solved multi phase protocol initial join phase new member sends membership request second mating phase group members send er messages ering new member join group node 
key tree needs stay balanced members closest root reply member complete map tree simple operation 
new member get multiple ers allows choose joining position 
multiple members wish join generate key tree gets grafted main key tree 
process extremely ecient allows large number members join concurrently 
implementation issue transition die hellman keys result key agreement symmetric keys 
mismatch number bits length die hellman key mod secret key size required symmetric algorithm hash function deliver symmetric key bits 
cryptographic hash function sha yields bits initialize shorter symmetric key 
specify particular symmetric algorithm algorithm satis es security requirements 
similarly choice signature scheme open 
security analysis key advantage authenticated protocols achieve mutual authentication complete member member authentication involving messages dedicated member checking members 
property members authenticated protocol nishes successfully proven informally appendix 
understand proof intuitively consider boundary cases member corrupt second member corrupt 
rst case corrupt member involved authenticated key agreement member case corrupted member discovered 
second case valid member involved authenticated key agreement detecting corrupt user 
proof shows subtree key tree generated successfully members subtree members corrupt 
case authentication fails certi ed member broadcasts signed report pointing intruder 
subtree containing intruder cut key tree users expelled 
may appear members subtree intruders corrupt member discovered earlier level 
important property protocol member knows keys key tree lie path node root 
property important ensure forward secrecy case members leaving group 
key tree constructed bottom properties key agreement protocols member gets keys path leaf root 
appendix sketch proof authenticated key agreement protocols provide implicit key authentication passive attackers 
frequent active attack context die hellman key agreements man middle attack 
mentioned earlier unauthenticated protocol vulnerable type attack 
due mutual authentication members authenticated protocols problem issue 
due intractability die hellman problem protocols provide key independence 
addition keys joining member receives previously similarly keys leaving member knows changed uence subsequent group operation 
reasons protocols provide perfect forward backward secrecy 
collusion compromise security group 
seen inspecting nal key shown see key agreement protocols contributory provide key integrity 
complexity analysis analyze complexity protocols communication computation overhead 
metrics communication overhead number messages transmitted size 
characterize computation overhead measure number exponentiations inverses multiplications hashes de encryptions signature generations veri cations group key agreement members 
compare protocols state art authenticated group key agreement protocols gdh 
described ateniese 
observe case group key agreement members key tree depth balanced analysis neglect phase new members negotiate positions key tree protocol comparing report time key agreement 
similarly ateniese analysis certi cate distribution overhead taken consideration 
gives advantage sends information necessary construct identity certi cate 
table shows results comparison 
protocols property mutual key agreements total 
min entry assume member involved mutual key agreement level max entry assume member involved key agreements 
rst part table describes communication costs involved 
network bottleneck parameters important 
jkj refer length key 
second part table describes computational overhead 
signature computations far expensive operations followed exponentiations decryptions 
see really far lowest overheads needing compute verify signatures implicitly certi ed public keys 
drawback messages need exchanged times 
clearly protocols described improve order magnitude current state art protocols contributory group key agreement dynamic groups 
drawbacks large number broadcasts 
broadcast messages distribute new keys members subtree 
number broadcasts turns problem possible replace randomized matching participating members key agreement deterministic algorithm 
modi cation allow members exchange key agreement messages unicast followed deterministic distribution new key unicast structure tree 
presents novel key agreement protocols group key communication 
protocols satisfy security properties including perfect forward backward secrecy 
protocols require dlog rounds group key agreement involving members 
bound achieved constructing binary key tree letting individual users establish new keys parallel 
vast improvement gdh sa gdh communication costs rounds dlog broadcasts total msgs total bandwidth jkj jkj jkj msgs sent max msgs sent min msgs max msgs min computation costs exp min max exp total inverse min max inverse total mult div min max mult total hash min max en decryptions min max signature signature gen min max table complexities key agreement protocols linear number rounds previously proposed protocols dynamic groups 
protocols reduce bandwidth consumption 
addition improved today known group key communication protocols removing necessity central server group key controller enhancing applicability new domains 
contribution exploit structure key tree design rights management policies key tree group communication protocols key tree achieve forward backward secrecy 
addition describe implementation issues particular show optimize key agreement protocol achieve load balancing members 
am currently building distribute java library implements protocols described 
libraries simplify implementation applications require ecient secure group communication 
protocols reduce number broadcasts explore reduce need reliable multicast 
particularly dawn song yang hua chu numerous discussions secure multicast 
ideas spawned meetings 
furthermore am grateful doug tygar continued help support 
anonymous reviewers feedback 
giuseppe ateniese michael steiner gene tsudik 
authenticated group key agreement friends 
th acm conference computer communications security pages 
acm november 
mike burmester desmedt 
secure ecient conference key distribution system 
alfredo de santis editor eurocrypt pages 
lncs 
chang robert engel dilip kandlur dimitrios saha 
key management secure internet multicast boolean function minimization techniques 
infocom september 
die hellman 
new directions cryptography 
ieee trans 
inform 
theory november 
floyd jacobson mccanne liu zhang 
reliable multicast framework lightweight sessions application level framing 
proceedings acm sigcomm pages boston ma august 
christoph 
identity protocol 
eurocrypt 

group key management protocol gkmp speci cation architec ture 
technical report rfc rfc ietf july 
david alan sherman 
key establishment large dynamic groups way function trees may 
published www cs umbc edu sherman papers ps 
alfred menezes paul van oorschot scott vanstone 
handbook applied cryptography 
crc press 

iolus framework scalable secure multicasting 
acm sigcomm september 
moser melliar smith agarwal papadopoulos 
totem fault tolerant multicast group communication system 
cacm april 
david powell 
group communication 
cacm april 
michael reiter 
distributing trust rampart toolkit 
cacm april 
bruce schneier 
applied cryptography second edition john wiley sons 
robbert van renesse kenneth birman ma eis 
horus flexible group communication system 
cacm april 
wallner eric harder ryan 
key management multicast issues architectures 
technical report ietf september 
draft wallner key arch txt 
chung kei wong mohamed gouda simon lam 
secure group communications key graphs 
acm sigcomm 
university texas austin 
rex xu andrew myers hui zhang raj yavatkar 
resilient multicast support continuous media applications 
nossdav 
proofs chosen properties theorem weak implicit key authentication passive adversary gain knowledge keys key hierarchy 
proof sketch 
prove property reduction die hellman problem discrete logarithm problem 
show passive adversary nds key key hierarchy solve instance die hellman discrete logarithm problem 
proof works induction depth key tree 
assume attacker receives messages 
base case 
attacker gure keys hd ki lowest level member random number messages sent stage protocol 
induction 
knowing adversary know key level show gure key established level analyze key agreement key hl ki exchange hl hl public 
intractability computing hl hl compromised 
attacker compute new key hl ki hl 
hl due intractability die hellman problem 
similar previous case symmetric encryption new key lower level key compromise security 
adversary compute keys tree 
order show authenticated protocols secure active attacker proof complicated 
rst step build model capabilities adversary su ers concerns completeness 
need show group active attackers able break properties protocol 
dawn song currently process applying model checking techniques strand spaces verify correctness protocol 
contend model passive attacker 
theorem members authenticated protocol nishes successfully members valid intruders 
valid member joining group protocol progresses members certi ed 
proof sketch 
assume protocol nished successfully 
members broadcasted nal message successfully containing membership number encrypted root key 
members submitted validation group valid member member successful 
implies members mutual certi ed 
mutual valid members invalid members 
imply members group valid intruders 
