dimacs technical report february bellman functions trees segmentation generalized smoothing matching multi alignment massive data sets ilya muchnik dimacs rutgers university box piscataway nj usa muchnik dimacs rutgers edu state university ave russia atm tsu ru dimacs partnership rutgers university princeton university bell labs bellcore nec research institute 
dimacs nsf science technology center funded contract stc receives support new jersey commission science technology 
massive data set considered set experimentally acquired values number variables associated respective node undirected adjacency graph fixed structure data set 
class data analysis problems consideration outlined assumption ultimate aim processing represented transformation original data array secondary array structure node variables generally speaking different nature different ranges 
generalized problem set formal problem optimization minimization maximization real valued objective function node variables 
objective function assumed consist additive constituents arguments respectively node edge functions 
carry data dependent information sought values secondary variables ones meant express priori model constraints 
case graph pair wise adjacency data set elements form tree effective global optimization procedure proposed recurrent decomposition initial optimization problem node variables succession partial problems consists optimization function variable bellman functions classical dynamic programming intervening functions called extended bellman functions 
kinds numerical realization basic optimization procedure considered basis parametric representation extended bellman functions respectively discretely defined quadratic node edge functions 
proposed theoretical approach analysis massive data sets illustrated applications problems segmentation smoothing fine texture analysis matching visual images geophysical explorative data problem multi alignment long molecular sequences 
contents optimization approach data analysis particular data analysis problems 
generalized separable objective function supported neighborhood relation set data array elements 
series tree neighborhood relations lattice 
partial objective functions tree separability 
optimization separable functions tree separability structure objective function 
node edge functions 
bellman functions basic optimization procedure 
dynamic programming procedure optimization problems chain adjacency variables 
numerical realization optimization procedures discretely defined quadratic node edge functions 
algorithms data analysis generalized data analysis procedure 
visual data analysis 
analysis geophysical explorative data 
remarks multi sequence alignment proteins 
done questions remain answered despite dramatic variety application problems concerned necessity analyze massive data sets possible set single subclasses problems allow treating unified terms respective standard mathematical optimization problems exist created effective methods solving 
classes data analysis problems addressed 
class consideration embraces visual images particular satellite photographs geophysical explorative data massive sets molecular sequences 
consider data set experimentally acquired function takes values appropriate range index argument runs elements data set 
common mentioned kinds data sets fact elementary information units ordered axes arguments data collection subject analysis array set 
element array naturally associated number neighbors may defined ways depending nature particular data source case neighborhood relation set data elements inherent feature data array 
convenient express neighborhood relation form undirected graph understood set neighboring element pairs ae theta restrict concern data processing problems represented problems transforming original array function defined set array elements take values set specific particular problem 
consider generalized approach class data analysis problems 
approach natural commonly adopted way create algorithms data analysis practically kind optimization suitable objective function defined set meant represent variety feasible results 
class problems consideration result data analysis sought secondary data array occur argument objective function xjy assess discrepancy admissible version result data array range definition objective function completely determined range elementary variables chosen 
result data analysis defined condition arg min xjy aims outline class objective functions consistent essence data processing problems class consideration lend easy solution second study detail mathematical properties objective functions defined class third specificity chosen class creating effective generalized optimization procedure fourth construct data processing algorithms point ways construct particular applications mentioned areas image analysis processing seismic explorative data sets multi alignment molecular sequences 
specificity optimization problems consideration variables constituting vector evaluated associated nodes neighborhood graph set data array elements objective function xjy separable accordance graph sum partial functions variables associated respectively nodes edges graph represents adjacency variables structure objective function 
computational complexity minimization problem substantially depends kind adjacency graph fact objective function separable contribute essentially improvement computational solvability optimization problem comparison arbitrary function variables 
intent create non iterative procedure finding global minimum point separable objective functions supported graph general kind comes fundamental barrier 
particular case graph set variables cycles tree exists highly effective global optimization procedure recurrent decomposition initial problem optimization function jt variables jt number elements set succession jt elementary problems consists optimization function variable 
particular case tree branching nodes chain procedure versions classical dynamic programming procedure 
elementary functions variable minimized step minimization tree supported separable function play role bellman functions classical procedure called extended bellman functions 
just tree separability objective functions systematically exploited 
typical neighborhood relation usual rectangular set data array elements naturally arises data analysis problems form lattice leads lattice variable adjacency graph entirely consisting cycles 
overcome obstacle decompose original lattice neighborhood relation tree ones covers elements data array 
respectively objective function tree supported partial functions evaluate goal variables single row original rectangular lattice neighborhood data array elements 
report consists sections 
section study number particular data analysis problems appeared authors bear essential common traits typical wider circle applications worth generalization 
problems processing visual images seismic explorative data arrays major focus authors theoretical practical activities years problem multi alignment molecular sequences analyzed example potential applications 
section consider theoretical computational questions related problem optimization separable functions tree separability 
section create generalized data analysis procedure consider ways adjusting particular application problems 
optimization approach data analysis particular data analysis problems problems analysis visual images great part appear form evident class data analysis problems kind consideration 
original data set original image numerical function usually darkness takes values appropriate set defined discrete dimensional grid ft image elements usually called pixels 
typical low level image processing problems desired result processing meant function defined pixel grid take values set specific particular problem 
problem segmentation original image homogeneous regions preset number classes fig 
class allocation image pixels naturally expressed variable values finite set class indices mg 
segmentation image set classified regions sought form class allocation map mg secondary finitely valued image 
problem smoothing fig 
resulting function nature original image picture 
assume real valued set secondary picture takes values remains problem matching fig 
consists finding identical points images similar structure 
images conventionally referred left right range definition form entire image pair analyzed instance photos human faces taken scale stereo pair images 
goal pursued analysis pair similar images algorithmically difficult stage matching establishing correspondence images point pairs treated identical 
result operation usually represented form called disparity map point images instance left texture image segmentation homogeneous regions classes 
original satellite photograph smoothed result darkness equalization subtracting smoothed picture original 
pair human portraits disparity map identical points 
taken image determines vector indicating spatial shift match second search image 
convenient allow take values dimensional real space permit inter pixel interpolation discrete image grid 
geophysical explorative data sets seismic sections cubes class respectively dimensional data arrays analyzed course gas oil reserves purpose studying structure underground rock mass dimensional seismic data array called seismic section consists synchronous records reflected seismic signals registered real valued functions time large number seismic sensors placed straight line earth surface 
spite nonvisual origin seismic data practice represent pictorial form frequently displaying signal value point array darkness level respective point image fig 

source initial seismic pulse usually serves series explosions responses averaged special manner 
placed side side form vertical rows twodimensional data array ft despite fact initial argument seismic signals time relevant preprocessing allows identify vertical axis depth respective sensor picture offers vertical section medium 
local peculiarities mode spatial signal oscillations point seismic section important source information judgment hidden structure rock mass aims data analysis local similarities differences texture seismic picture hardly discernible naked eye 
accordance aim resulting secondary data array consist estimates numerical vector parameter local model signal oscillation point seismic section fig 

usually ultimate goal analysis seismic section segmentation finite totality homogeneous regions interpreted jointly geological model rock mass case final result kind mentioned problem segmentation visual images fig 
class allocation map mg 
seismic cube differs seismic section seismic sensors placed nodes rectangular lattice earth surface reflected seismic signals ordered coordinate axes form threedimensional data array fig 

respectively result analysis pursues aims dimensional array elements index time seconds fragment vertical seismic section rock mass map averaged local energy signal oscillations darker greater narrow band horizontal spatial frequency 
local texture parameter seismic image solid body considered indicator respective point underground space 
fragment seismic cube 
sense estimates parameter appropriate local spatial oscillation model reflected seismic signals case dimensions indices class membership estimated segmentation 
problem multi alignment set proteins row original data array sequence amino acids forming particular protein set analyzed 
data set structure dimensional array ft rows rule completely filled right difference length amino acid sequences shown fig 
exist strictly amino acids usually denoted capital latin letters fa elements original array take values alphabet amino acid symbols problem multi alignment supposition particular proteins set homologous origin common diverged natural course evolution different chains amino acid substitutions deletions insertions affecting basic structure 
aim multi alignment find minimal number elementary transformations kinds proteins mutually words aligned brought common length show researcher common analyzed set proteins viewpoint amino acid makeup 
fig 
shows result multi alignment form collection amino acid sequences rearranged common length max mind far separate sequence bottom marked 
mutual warping original sequences represented extended alphabet includes addition basic symbols amino acids extra null symbol meant denote eventual gaps actual amino acids 
problem consists finding arrangement gaps provides similarity sense amino acids getting particular column alignment 
form resulting dimensional array strictly rectangular ft contrast original set proteins ft elements resulting array take values extended amino acid alphabet widely adopted strategies multi alignment notion pattern sequence length alignment 
element pattern sequence corresponds particular column meant original positions amino acids proteins proteins positions alignment proteins original set protein fragments version multi alignment estimated pattern sequence appropriate kind 
component array represents resulting approximation protein set times repeated pattern sequence original positions amino acids protein 
fractional numbers point imaginary gaps amino acids including positions immediately 
express common properties amino acids 
elements pattern sequence take values appropriate set may different set original amino acids sense instance frequency distributions functional descriptions amino acid properties subclasses amino acids 
accordance pattern strategy score mutual similarity amino acids column take account totality individual similarities respective pattern sequence element 
pattern sequence considered integral part alignment columns original amino acid positions proteins 
section study general version pattern 
connection convenient alter little representation alignment result order highlight identity mathematical essence problem data analysis problems considered 
mark pattern statement multi alignment problem aimed finding pattern sequence best approximation proteins simultaneously 
repeated times proteins processing pattern sequence form array const best approximation proteins arrays identical elements columns upper array fig 

natural call array pattern array protein set 
element pattern array coupled particular position original amino acid sequence protein kt 
symbol position alignment actual amino acid takes value equal number respective amino acid original sequence 
position occupied null symbol means alignment suggests insertion gap adjacent amino acids numbers 
case takes fractional value points particular interface amino acids original protein 
gaps succeed row alignment respective fractional value pointing amino acid interface 
accordance rule gaps amino acid protein indicated respectively range variable set clear row alignment decrease 
succession obey quite rigorous restrictions immediately adjacent fractional equal greater predecessor fractional having predecessor greater valid immediately fractional 
totality array constitutes pattern array result multi alignment lower array fig 

convenient consider variables jointly components combined vector variable take values set theta terms complete result alignment represented unified array 
generalized separable objective function supported neighborhood relation set data array elements see depicted particular data analysis problems allow treating transforming original array experimentally acquired values variables resulting array rule structure variables take values appropriate set specific particular application 
principal concept optimization approach data analysis consists constructing algorithm processing optimization conventionally minimization objective function feasible combinations values variables forming resulting array objective function meant serve means coordinating kinds information sought array data dependent information model constraints 
rule essence particular data analysis problem suggests way judge fuzzy form value single hidden variable vicinity respective point original array convenient express judgment form data dependent function xjy defined set take greater value evident contradiction hypothesis just correct local value seeking current fragment data array 
functions called node functions associated node neighborhood graph set data array elements 
practically inevitable interferences various kinds usually prevent totality locally optimal values arg min xt jy final decision sought secondary array 
essence particular application problem suggests rule model knowledge expected combination values hidden variables forming sought resulting array 
knowledge expressed local terms model function fl defined thetax pair neighboring elements data array takes greater value greater discrepancy accordance accepted model respective neighboring hidden values 
functions referred edge functions associated edge neighborhood graph data array decision secondary array sought compromise mutually contradictory requirements minimize node edge functions general case different different nodes respectively edges 
natural take sum xjy jy fl combined criterion decision making arg min xjy see criterion minimized sum items function variables 
arguments criterion data dependent functions jy associated elements data array nodes neighborhood graph node functions functions arguments fl assigned edges graph edge functions 
call objective function kind separable pairs variables occurring summands fl adjacent graph determines structure function adjacency supporting graph 
say objective function kind separable supported function 
number variables equal number jt nodes number elements data array 
manner arguments separable objective function adjacent form graph depends accepted local model hidden field recovered 
cases elements data array associated points actual imaginary space assumed arranged regular intervals respective coordinate axes model assumptions hidden field boil smoothness presuppose relatively small distinctions values hidden variables neighboring points 
particular visual images fig 
geophysical data arrays fig 
relate just kind data 
problems visual data analysis natural neighborhood relation pixels image appropriate adjacency graph separable objective function rectangular lattice fig 

neighborhood relation remains consistent nature plane seismic sections 
class data analysis problems summands objective function double sums nodes lattice xjy jy fl gamma fl gamma edge functions horizontal vertical edges taken different especially necessary seismic sections respective axes different physical meanings may turn reasonable visual images 
seismic cubes differ sections presence additional horizontal coordinate natural form neighborhood relation adjacency graph dimensional rectangular lattice fig 

structure objective function remains just little bulky xjy jy fl gamma fl gamma fl gamma edge function horizontal directions identical physical meaning 
arrays molecular sequences fig 
natural geometric notions insufficient discussion suitable adjacency graph set elements amino acids forming proteins turn array analyzed 
exact adjacency graph defined elements resulting array fig 
take values extended set symbols amino acids including additional gap symbol 
accordance principal idea approach problem multi sequence alignment proteins outlined previous section kinds model constraints imposed sought values combined variables 
amino acid symbols column resulting array assumed take value equivalent restriction gamma adjacent vertical pairs gamma 
second conceived sense horizontal rows amino acids original proteins determines strict constraints manner increasing moving left right horizontal pairs gamma considered adjacent 
adjacency graph problem multi sequence alignment shown fig 
see turns somewhat straightforward rectangular lattice elements secondary array vectors components interact specific manner 
horizontal vertical edges represent respectively interdependence sequential original amino acid positions protein identity identically indexed elements pattern sequences attributed different proteins 
additional edges sketched sticking page express joint dependence pair variables kinds original set proteins 
kn kn kn adjacency graphs separable objective function different data analysis problems dimensional lattice spatial neighborhood image pixels seismic section elements dimensional lattice spatial neighborhood seismic cube elements adjacency groups variables problem multi sequence alignment proteins 
objective function consists edge type elementary functions xjy zjy jy fl gamma gamma data dependent functions jy meant measure discrepancy assumed value pattern variable actual amino acid located assumed position protein yn transmit information original array proteins objective function 
vector variables considered respect inner structure adjacency graph resulting array lattice just picture fig 

respectively objective function structure xjy jy fl gamma gamma jy jy fl gamma fl gamma gamma gamma 
unfortunately search optimization algorithm separable functions general kind inevitably leads computational difficulties 
nature put fundamental barrier hopes construct non iterative procedure provide finding global minimum maximum separable function supported arbitrary adjacency graph computationally dissipative exhaustive search 
optimization problem kind intensively studied bounds statistical approach image processing sought result considered realization known probabilistic sense hidden random field having produced picture outward exhibition 
rule hidden random field assumed possess markov properties assumption leads separability likelihood function posterior distribution density maximum point 
basic principles may regarded underlying known algorithms iterative optimization separable functions 
usually referred icm iterated conditional modes consists improving values goal variables turn starting initial approximation 
improvement objective function decrease 
force separability objective function operation imply computational difficulty 
single variable group may subjected improvement iteration suitable algorithm available 
instance conditionally optimal values particular row image pixel grid easily calculated appropriate version dynamic programming algorithm 
optimization procedures kind converge quickly usually iterations payment fast convergence tendency trapped nearest local optimum result essentially depends initial approximation case slightly improves 
algorithms iterative recalculation groups argument single arguments markedly resistant local extrema 
second principle aimed finding global optimum 
goal achieved drastic iterative nature search required number iterations measured hundreds thousands 
iterative process version method statistical simulations usually referred monte carlo method 
general search global optimum maximum reported combination principal ideas 
idea known name stochastic relaxation 
variety combinations argument values considered random field greater objective function greater logarithmic probability density log assumed realization separability objective function equivalent assumption markov random field markov interaction random variables graph find probable realization field 
approximation previous iteration 
modify realization simulating new random value variables accordance local conditional distribution regarding rest field variable chosen appropriate rule 
clear random sequence random field realizations markov chain 
principal fact related markov chain quite lenient conditions final distribution just sought probable realization random field chances appear random sequence 
method simulating random realizations random fields processes known abbreviation mcmc markov chain monte carlo 
second idea name simulated annealing consists gradual decreasing randomness degree simulating new values random field elements purpose random sequence random field realizations converge non random realization 
idea brought reality procedure named gibbs sampler 
step simulating random sequence random field realizations generate random value element accordance local conditional distribution modified obtained raising conditional density power followed normalization resulting function unity integral parameter named temperature 
obtain uniform distribution new distribution concentrate mode initial uniform distribution modes case 
simulate random realizations random field starting large infinite temperature gradually decrease zero 
rate temperature reduction quite low higher speed convergence markov sequence final distribution 
getting random sequence random field realizations approach realization having maximal value final density sought maximum point objective function 
common practice take local conditional densities markov random field class called gibbs probability distributions density formula contains exponent 
variety known means finding global optimum separable function general kind limited procedures iterative random search 
iterative procedures kind converge especially slowly large number random steps just computational expedient prevents search process sticking local extrema 
low computational speed restricting range applications algorithms 
series tree neighborhood relations lattice 
partial objective functions tree separability shown section computational solvability optimization problem gets essentially improved adjacency graph separable objective function tree 
case exists procedure enables finding global extremum iterations runs set variables 
appears preferable just stage formalization particular problem data analysis set desired result sought maximum minimum point tree supported objective function 
general characteristic feature class data arrays considered desired result processing viewed having priori determined shape space natural imaginary 
just neighborhood graph set secondary data array elements formal carrier assumed structure priori spatial model 
clear exists way replace lattice neighborhood graph fig 
tree loss crucial property graph carry model information position element array relative elements 
inevitable loss due replacement concentrate ingenuity preserving possible principal traits entire global set ties elements bounds subset array conventionally vertical row depending lattice plane dimensional 
cover cases denote row 
paths nodes lattice graph 
just trivial property subject correction original adjacency graph transformed tree 
principal idea approach consists deleting edges possible original graph tree node marked row connected nodes including row exactly path shown fig 
fig 
respectively plane dimensional lattice 
denote partial tree form partial objective function xjy supported contrast full objective function supported full graph xjy jy fl particular visual images seismic sections case plane lattice obtain partial objective functions marked dimensional index full function xjy jy fl gamma fl gamma seismic cubes dimensional case full objective function replaced partial functions marked dimensional index xjy jy fl gamma fl gamma fl gamma optimization procedure considered section easily find optimal combination goal variables nodes respect partial objective function arg min xt xjy fig 
shows result segmentation obtained rule applied respective constituents jy fl fl partial objective function vertical row image shown fig 
see section detail 
wee see array taken ready result data analysis tree provides approximate preservation entire picture ties nodes column segmentation vertical stem pixel adjacency tree adjacency graphs partial objective function tree separability evaluating goal variables single vertical row dimensional threedimensional rectangular array 
versions tree adjacency graph partial objective function problem multi sequence alignment proteins 
segmentation image fig 
result optimization respective partial objective function supported variable adjacency tree stem vertical row horizontal lateral branches fig 
absolutely sound seen prevent constituent combined decision 
second idea approach implies final result data analysis formed ordered assembly single columns stem column respective particular array 
accordance principle resulting dimensional array plane case formed sequence stem columns particular dimensional array dimensional case resulting array taken dimensional combination particular stem columns just rule accordance segmentation fig 
assembled vertical stem rows particular segmentations fig 
results image data analysis fig 

shown previous subsection objective function problem multi sequence alignment proteins considered function vector variables supported adjacency graph having form dimensional lattice just adjacency graph problems image analysis fig 

natural apply graph principle extract series trees common horizontal vertical branches tree fig 
straightforward extension idea originally designed images case molecular sequences leads series adjacency trees supporting partial objective functions separated nodes goal variables xjy zjy jy fl gamma gamma shown fig 
contrast original full objective function adjacency graph fig 
essential distinction problem alignment problems data analysis considered 
cases images seismic data arrays arguments horizontal fl vertical constituents fl objective functions identical physical nature express practically identical smoothness constraints field hidden variables respective space 
matter directions vertical horizontal taken direction stems original adjacency graph replaced series partial trees 
equally turn trees fig 
side quantitative qualitative distinctions model constraints different directions 
arguments edge functions fl bear absolutely different meanings 
edge functions meant impose penalty difference pattern elements gamma columns alignment ensure identity close similarity pattern sequences associated different proteins aimed preventing possible contradictions neighboring gamma rows alignment natural order original amino acids proteins 
fact stems particular adjacency trees formed fig 
vertical edges associated edge functions fl gamma means partial objective functions takes account assumed vertical identity pattern elements respective stem column 
result assumed identity pattern sequences completely observed full final decision assembled columns actual amino acids ordering horizontal direction provided horizontal edge functions gamma different different arrays 
result stem columns arrays having assembled entire array able provide resulting combined rows 
final array may turn alignment additional correction undertaken 
fig 
shows alternative version orientation particular adjacency trees support relative version series partial objective functions xjy zjy jy fl gamma gamma particular adjacency tree provides completely respective stem row 
assumed identity pattern elements may get broken combined vertical columns final array formed rows additional correction alignment required 
specificity replacing full adjacency graph series tree approximations problem multi sequence alignment compared image seismic data analysis reduce 
return mentioned particular applications section consider section theoretical framework optimization separable functions tree separability principal structure effective optimization procedure making just ultimate aim replacement 
optimization separable functions tree separability structure objective function 
node edge functions section don associate variables objective function nodes supporting tree variables certain application problem 
denote symbol denotations 
tree set nodes ftg fig 
fl delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta delta structure arbitrary tree 
supported separable objective function minimized arbitrary collection ranges variables 
functions variable nodes graph called node functions functions variables fl assigned edges respectively called edge functions 
significance nodes assigned root tree done set nodes gets partitioned number subsets consisting nodes certain level denote set nodes lowest level set containing node highest level root tree ae formed node descendants called descendant tree node 
clear leaves particular root set nodes descendant tree node denoted symbol mean set node set descendants denote subset immediate descendants 
ftg leaves root 
analogously symbols mean partial vectors variables respective sets nodes 
associate node partial objective function fl absolutely structure full objective function defined respective partial descendant tree 
easy see fl fl particular nodes lowest level leaves partial objective function gets trivial root partial function full objective function 
bellman functions basic optimization procedure principal idea optimization procedure separable objective functions supported trees classical dynamic programming procedure chains notion bellman function min min xs ffl theorem nodes tree bellman functions satisfy recurrent relation min xs xs fl proof immediately follows definition bellman function min xs ffl vector variables occurs summand ffl ffl operations minimization respect fulfilled independently summation min xs xs ffl min xs xs ffl min turn min bellman functions node variables immediately follows 
fundamental property bellman function established theorem called upward recurrent relation 
bellman functions known immediate descendants node relation defines bellman function node 
inverted form upward recurrent relation arg min xs xs fl referred downward recurrent relation 
optimization procedure assumption exists sufficiently effective way solving partial optimization problems occurring storing compact form bellman functions downward relations 
procedure runs twice nodes graph order membership hierarchy levels upwards downwards 
starts nodes lowest hierarchy level 
nodes upward recurrent relation applied sequentially nodes higher levels bellman functions downward relations stored nodes tree level 
bellman function root obtained step upward pass immediately gives optimal value root variable arg min downward pass procedure descends hierarchy levels optimal values current level determine optimal values variables immediately underlying level accordance downward recurrent rules stored result upward pass determined stored bellman functions degenerate particular case tree tree branching nodes chain 
case described optimization procedure classical dynamic programming procedure considered section 
introduce additional denotation called marginal node functions shows full objective function depends value single variable respective node node variables take conditionally optimal values accordance min xs root marginal node function step upward pass 
theorem gives downward recurrent relation allows derive remaining marginal node functions obvious root 
theorem marginal node function known inner leaf node tree 
immediately descendant nodes marginal node function satisfies relation min ae fl gamma min xs fl oe proof arbitrary leaf node 
nodes partitions set nodes tree non overlapping subsets node set descendants set remaining nodes respectively addition subtree defined previously set ftg define subtree ftg analogy partial objective function set descendant variables define function structure supported set remaining variables fl analogy previously defined lower bellman function define alternative upper bellman function min min respectively node immediate descendants 
obvious fl 
accordance min xs ffl gamma min xs ffl likewise min ffl 
substitution equation immediately gives 
dynamic programming procedure optimization problems chain adjacency variables saw section rectangular lattice fig 
typical kind variable adjacency separable objective functions consistent engineering scientific applications 
specificity seen set lattice general kind adjacency graphs standpoint computational solvability optimization problem managed find heuristic way decompose initial problem entire lattice array goal variables succession partial optimization problems single row variables tree picture ties rest array 
simplest case tree branching nodes turns chain node opposite ends strictly neighbors shown fig 

shall see section partial optimization problems tree separability objective function result heuristic decomposition original problem supported especially simple trees allow decomposition succession simple optimization problems chain adjacency variables time heuristic 
natural number nodes chain accordance adjacency contrast separable objective function general kind lattice separability arguments node edge functions assembled chain occur separable objective function chain separability summands fl gamma obvious assertions proven objective functions tree separability valid chains particular case trees 
retain possible structure basic optimization procedure built previous section assign node root chain considered degenerate tree node leaf 
optimization procedure run twice nodes forward leaf root upward bottom chain simplest kind tree adjacency variables separable objective function 
top previously rearrange nodes fig 
vertically bottom hierarchy levels fig 
back downward root leaf 
procedure starts initial assignment bellman function bellman functions recurrently recalculated storing full accordance min gamma gamma fl gamma gamma gamma backward recurrent relations downward recurrent relations gamma arg min gamma gamma fl gamma gamma gamma stored nodes minimum point bellman function sought optimal value variable xn function respective marginal node function jn xn xn arg min xn xn jn xn jn xn jn xn xn backward pass procedure recurrently finds full accordance optimal values required defines marginal node function remaining variables gamma gamma gamma gamma min gamma gamma fl gamma gamma min gamma gamma gamma gamma fl gamma algorithm finding optimal values xn version classical dynamic programming procedure widely adopted means optimization multi stage processes 
new succession marginal node functions jn xn main result procedure optimal value goal variables minimum point respective marginal function 
just procedure underlie algorithms data analysis considered section 
numerical realization optimization procedures discretely defined quadratic node edge functions numerical realization basic procedure separable function supported tree classical dynamic programming procedure possible case exists finitely parametrized function family concordant node functions edge functions fl sense bellman functions belong family step 
case upward pass procedure consists recurrent re evaluating parameters completely represent bellman functions 
consider kinds parametrization sense extremes range possible ways define node edge functions 
evident case trivial parametrization case discrete range node variables mg 
case bellman functions dimensional vectors downward relations dimensional vectors elementary enumeration gives easy solution partial optimization problems 
extreme case assumption range node variables dimensional real space node edge functions quadratic 
theorem node edge functions quadratic functions structure gamma gamma fl gamma gamma defined respectively minimum values minimum points arbitrary hessian matrices positive definite hessian matrices bellman functions quadratic function gamma gamma parameters theta satisfying upward recurrent relation gamma gamma gamma gamma gamma gamma gamma gamma ae gamma gamma gamma gamma oe proof theorem lean lemma 
lemma quadratic function gamma gamma determined vectors non negative definite matrices theta arbitrary matrices theta matrices positive definite respective matrix full rank rank identity holds gamma gamma arg min gamma min gamma gamma gamma particular square matrices nonsingular min gamma gammad gamma gamma gamma gamma gamma gamma gamma gamma gamma gammad gamma proof representation follows fact function quadratic 
obvious rl gamma account matrices positive definite respective matrix full rank summands positive definite obtain 
identity immediately follows 
second identity substitution gives gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma difference square brackets equals zero force proves 
non negative value follows fact function consideration sum non negative quadratic forms 
particular case square matrices nonsingular possible transform gamma gamma gamma gamma gamma gamma representation accordance gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma easy see gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma likewise gamma gamma gamma gamma gamma gamma turn gamma gamma gamma gamma gamma gamma gamma gamma hi gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma obtain gamma gamma gamma gamma gamma equivalent respect 
proof theorem follows bellman functions leaves particular nodes lowest level quadratic gamma gamma assume accordance fact bellman functions immediate descendants node quadratic force gamma gamma min xs gamma gamma gamma gamma gamma gamma min xs gamma gamma gamma gamma application summand right sum gives gamma gamma gamma gamma gamma gamma gamma follows force gamma gamma gamma gamma gamma gamma fq gamma gamma gamma gamma gamma gamma gamma gamma equivalent 
theorem node edge functions quadratic functions structure satisfy conditions theorem downward recurrent relations linear gamma gamma transition matrices gamma gamma gamma proof arg min xs gamma gamma gamma gamma follows gamma gamma gamma gamma gamma gamma denotation gamma gives 
gamma gamma gamma gamma gamma proves second identity 
upward pass procedure starts initial assignment accordance vectors real numbers matrices recurrently recalculated levels stored 
step gives final result root 
second downward pass set nodes final values variables propagates downwards accordance recurrent rule gamma gamma follows 
remains specify parametric version downward recurrent procedure recalculating marginal node functions theorem 
initial marginal node function root quadratic coincides quadratic bellman function gamma gamma theorem states marginal node functions descendant nodes remain likewise quadratic gives recurrent rule recalculating parameters 
theorem node edge functions quadratic functions structure meet conditions theorem marginal node functions quadratic functions gamma gamma constant minimum value bellman function root parameters theta satisfying downward recurrent relations respectively gamma gamma gamma start root initial values 
proof follows definition marginal node functions minimum value remains equals instance minimum value marginal node function bellman function root marginal node function root evidently quadratic marginal functions proven prove follows marginal function node marginal function immediate descendants remains quadratic 
marginal node function node quadratic consider marginal node function nodes follows min gamma gamma gamma gamma gamma gamma gamma min gamma gamma gamma gamma min gamma gamma gamma gamma gamma gamma gamma min gamma gamma gamma gamma denote gamma gamma gamma gamma obtain expression square brackets quadratic form gamma gamma gamma gamma gamma min gamma gamma gamma gamma gamma gamma gamma argument quadratic form gamma gamma gamma gamma gamma gamma gamma matrix coefficient equals gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma successive changes variables gamma gamma gamma give gamma gamma substitution identity respect fact accordance matrix nonsingular gives min gamma gamma min gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma matrix quadratic form identically transformed respect fact gamma gamma nonsingular matrix gamma gamma gamma 
gamma gamma obtain gamma ae gamma gamma gamma gamma gamma gamma oe gamma gamma gamma gamma gamma io gamma gamma gamma gamma gamma gamma nh gamma gamma gamma gamma gamma gamma gamma respect come identity gamma gamma gamma gamma gamma satisfies 
studied ways numerical realization basic optimization procedure built section separable functions tree separability general kind 
remains apply results obtained particular case considered section 
just general case assumptions node edge functions required arguments objective function take values finite set mg 
case bellman functions marginal node functions completely representable vectors elements backward recurrent relations gamma stored vectors structure 
forward pass procedure required store gamma matrices backward pass recalculating optimal values required vector representations marginal functions 
section discrete version dynamic programming procedure involved algorithms image segmentation multi alignment molecular sequences 
case real valued vector variables quadratic node edge functions structure gamma gamma fl gamma gamma gamma gamma gamma accordance theorems bellman functions backward recurrent relations marginal node functions quadratic 
starting initial assignment forward pass procedure consist recurrent recalculation matrix representations bellman functions gamma gamma gamma gamma gamma gamma gamma ae gamma gamma gamma gamma gamma oe gamma ae gamma gamma gamma gamma gamma gamma gamma gamma oe recalculation storing backward recurrent relations gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma result step immediately gives optimal value variable xn matrix representation marginal function jn xn xn gamma xn qn xn gamma xn xn xn qn qn backward pass procedure recurrently finds final values variables parameters marginal functions gamma gamma accordance gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma just parametric version dynamic programming procedure immediately section algorithms image smoothing matching 
algorithms data analysis generalized data analysis procedure particular data analysis problem class outlined section reduced formal problem minimization separable objective function dimensional dimensional lattice separability 
accordance optimization approach data analysis section means specificity original data array secondary resulting array completely expressed appropriate choice range hidden variable second node edge functions occur objective function summands respectively jy fl fl 
having replaced adjacency graph full objective function series trees fig 
substituted original optimization problem series partial problems meant evaluate row goal variables resulting array hope assembly satisfactory approximation ideal decision 
theoretical framework developed previous section suggests computationally effective procedure optimization separable function tree separability arguments 
appears natural construct algorithm data analysis plain repetition basic optimization procedure applied turn partial objective functions 
straightforward algorithm decision form resulting array necessary evaluate time variables particular array accordance stem row participate final combined result data processing 
notion marginal node functions introduced section gives possibility create procedure having scanned dimensional rectangular array twice find solutions partial optimization problems approximating trees common horizontal branches fig 
escape evaluating redundant variables branches addition stems 
start consider plane rectangular array structure fig 
accordance form column final resulting array find optimal particular array cut respective column put column final array 
avoid necessity evaluating unneeded variables find way calculate stem elements arrays immediately stems 
easy see accordance sought stem columns determined condition arg min min xjy arg min jy jy jy yn fl gamma jy yn min xn jy yn turn xn jy yn jy fl gamma follows omit upper asterisk indices longer required mark single column rest array 
stem columns independently result minimization respective objective function jy 
functions separable adjacency graph having form chain simplest tree branching nodes 
basic optimization procedure follows theoretical framework developed section exact simplest version reported section find optimal values variables forming resulting array runs twice column instance top bottom bottom top 
thing find elements resulting array single variable functions jy yn occur data dependent node functions 
functions conditional minimum value function arguments respective column fixed 
accordance definition introduced section function jy yn marginal functions separable function xn jy yn 
mark adjacency graph chain formed horizontal branch common adjacency trees fig 
partial objective functions xjy 
marginal functions horizontal row jy yn simplest version basic optimization procedure separable functions chain adjacency variables section 
having run twice row independently instance left right right left procedure define single variable functions jy yn required final evaluation goal variables 
ready put generalized data analysis procedure far dimensional arrays 
array 
matter nature elements desired result processing assume range goal variables respective node jy edge functions fl gamma fl gamma occurring separable objective function completely defined 
array processed stages called horizontal processing second vertical 
order conventional extent may inverted come conflict nature original data array conceived result processing 
stage applied original array results intervening array marginal functions jy yn input second stage resulting final array 
horizontal processing consists dynamic programming procedure applied independently horizontal row calculating optimal values backward pass marginal functions jy yn stored position 
course vertical processing dynamic programming procedure runs independently vertical row alterations relative marginal functions jy yn result stage occur jy second backward pass calculate optimal values variables take elements final result 
having calculated marginal functions jy marginal function stem variables respective partial objective function jy min xjy array functions show addition optimal values variables manner affects respective partial criterion individually varied optimal values variables 
cubic data arrays structure shown fig 
algorithm little complicated plane case 
difference horizontal runs called lateral frontal processing 
result stages processing required 
adjacency trees substituting full graph chosen fig 
lateral processing done processing follows frontal vertical processing final stage 
inversions possible general case 
argumentation leads generalized procedure analysis cubic data arrays remains practically set section plane arrays 
pass repeating go directly presentation procedure 
stage lateral processing dynamic programming procedure applied independently lateral horizontal row storing marginal functions backward pass 
result original array transformed intervening array marginal functions jy tunnel union elementary fragments original data cube respective horizontal row 
stage frontal processing procedure running manner independently frontal row respective functions jy transforms array turn second intervening array marginal functions jy time layer union elementary fragments cube level stage vertical processing dynamic programming procedure runs independently vertical row respective elements jy stores backward pass optimal values variables elements resulting array 
create particular algorithm data analysis remains choose node edge functions range goal variables accordance nature respective application basis choice specify appropriate parametric representation bellman functions parametric representation marginal functions forming intervening data arrays processing stages 
just circle questions subject consideration section 
visual data analysis problem segmentation texture image homogeneous regions preset number classes goal variable takes values finite set class indices mg 
simplest statement segmentation problem consider consists requirement partition pixel grid appropriate number sufficiently prolonged regions classes associated known kind texture 
just optimization statements data analysis problems node function xjy meant provide immediate mining data dependent information form measure discrepancy assumed value hidden variable point case texture class current fragment original data array case image 
instance convenient construct function basis treating homogeneous texture realization dimensional linear autoregressive random field gamma oe autoregression mask set admissible shifts current point pixel grid determines form elementary image fragment discrete normal white noise zero mathematical expectation variance taken equal unity oe autoregression parameter vector meant known texture class mg 
accordance model conditional distribution random value image darkness current point respect rest elementary vicinity normal jy oe exp gamma oe gamma gamma posterior distribution finite set hypotheses texture class account prior information just appropriate node function xjy xjy jy jy mg purpose edge functions fl gamma fl gamma prevent detailed segmentation respectively horizontal vertical direction image plane 
hardly reasonable distinguish directions case visual images 
simplest version model edge function meant express discrepancy neighboring values discrete hidden index coincidence function fl ff constant ff taken greater prolonged sought areas homogeneous texture expected 
texture parameters known classes homogeneous regions segmentation image easily obtained dimensional version generalized data analysis procedure described section 
discrete range goal variables bellman function marginal node functions completely represented vectors real numbers numerical realization generalized procedure concerned problem finding appropriate parametric representation 
stage image segmented transformed array marginal functions jy yn represented dimensional real vector values intervening information stored times voluminous original image 
final segmentation obtained second stage discretely valued array 
quite realistic assume tentative parameters texture types chosen advance 
parameters estimated immediately course image analysis 
don study question restrict respective iterative technique described 
just algorithm segmentation texture image fig 
obtained 
problem smoothing appears simplest example data analysis problem quadratic node edge functions evidently suitable bases optimization mathematical statement 
image darkness represented real numbers result smoothing consist real numbers smoothing picture pursue aim substantial revision essence estimating average darkness vicinity pixel 
smoothed picture close original possible simultaneously smooth possible 
version smoothing technique proposed allocate responsibility mutually contradictory requirements respectively node edge functions 
viewpoint intent retain original image node function reach minimum value coincides actual darkness current pixel preferences meant original image node function symmetric relative point 
simplest quadratic function appropriate choice xjy gamma elementary vicinity original image consists case image element problems visual image analysis reason take different edge functions different directions image plane 
just purpose edge function fl provide desired smoothing effect imposing penalty eventual difference neighboring goal variables taken simplest form quadratic function additional coefficient fl ff gamma greater coefficient ff deeper resulting smoothing 
smooth image apply dimensional version generalized procedure node edge functions quadratic representation bellman marginal node functions 
quadratic marginal function jy yn intervening array obtained stage processing represented real numbers minimum point yn second derivative yn dimensional analog hessian matrix 
array stored twice large original image 
second stage array transformed result smoothing 
problem matching example image analysis problem quadratic form node edge functions completely consistent nature designed result processing 
structure node functions required mining data dependent information original image pair inevitably complicated case smoothing 
principal idea outlined section suggests desired result matching image pair represented called disparity map array real valued vector variables having sense local spatial shifts respective elements image best matches search image see particular disparity value assumed point rule exactly element discrete image pixel grid imaginary point dimensional real plane associated search image inter pixel interpolation permitted course matching 
describe way representing elementary units image dependent information sought disparity map form quadratic node functions full accordance xjy gamma gamma respective elementary fragment image pair accordance convention node functions meant carry elementary units information sought disparity map defined pixels left image 
ft rectangular discrete grid formed pixels 
pixel grid right search image taken greater side respective number restricting finite rectangular set discrete tentative disparity values participate forming image dependent node functions gammak gammak ae element left pixel grid 
consider right pixel grid elements reachable admissible discrete tentative shifts appears natural similar search image fragment sufficiently small vicinity point analogous fragment image hypothesis just correct value sought disparity point consider appropriate measure distance image fragments function discrete tentative shift image dependent node function point image node pixel neighborhood graph quadratic approximation distance measure admissible shifts arg min theta gamma gamma gamma find node function pixel image grid calculate theta values distance measure admissible tentative shifts approximate obtained lattice function set discrete points quadratic function range definition dimensional real space 
clear parameters node function realvalued 
vector local estimate disparity value eventual inter pixel interpolation nonnegative definite matrix carries information reliability estimate different directions image plane 
point salient point image similar peculiarity search approximately equal spatial shift positive eigenvalues large value second derivatives node function large directions minimum point means high reliability level local estimate disparity value 
case belongs ridge image analogous ridge expected show occasional point eigenvalues different 
eigenvector small eigenvalue directed ridge respective directional second derivative minimum point node function small means information disparity value direction 
contrary large eigenvalue orthogonal eigenvector second derivative large transversal direction indicate high reliability level local estimate ridge 
informative peculiarities image vicinity point search image noninformative area admissible tentative shifts eigenvalues small 
case small second derivatives node function directions occasional minimum point indicate local estimate deserve reliance 
formally speaking role edge function remains problem smoothing smooth local estimates neighboring goal variables natural symmetry image analysis problems suggests identity vertical horizontal edge functions 
identity degree smoothing components vector disparity question simple 
pictures analyzed images objects similar structure fig 
matching undertaken purpose immediate comparing pixel pixel instance ultimate aim recognition reason set different smoothing degrees horizontal vertical disparity 
case matching stereo pair images object fig 
expected local shifts directions image plane identical 
rule horizontal axis assumed coincide approximately called epipolar line line cameras having taken pictures located 
case total amount information distances cameras plane particular points object surface carried horizontal components disparity vectors vertical components expected equal zero zero uniform uniform value 
sufficient take quadratic edge function defined diagonal hessian matrix theta generally speaking different positive values ff ff main diagonal fl gamma gamma ff ff ff ff case matching usual images ff ff stereo pairs 
disparity map stereo pair satellite photographs 
fact variables smoothed vectors especially presence matrix coefficients node functions effect ordinating image dependent model information complicated plain smoothing 
hardly probable local estimate point eigenvalues large significantly changed course smoothing 
contrary eigenvalues small vague local estimate practically affect result final disparity value point interpolated firm local estimates surrounding points 
sophisticated effect occur ridge edge points pictures eigenvalues matrices substantially different 
final disparity values offer complicated compromise different kinds relative freedom alterations direction specific point prohibited changes orthogonal 
matching images provided dimensional version generalized data analysis procedure 
bellman marginal node functions quadratic functions variables due node edge functions 
quadratic marginal function represented yn hessian matrix yn 
just amount intervening information real numbers stored element stage processing 
see intervening array large original image pair 
second stage processing result sought disparity map 
analysis geophysical explorative data dimensional seismic section fig 
manifests despite non visual origin principal traits texture image 
aim processing visible fine distinctions spatial oscillation mode reflected seismic signals forming section analyzed local texture properties section considered texture image 
mentioned section final result processing represented form dimensional array estimated vector parameters appropriate local oscillation model 
previous subsection considered problem texture image segmentation statistical approach extracting original image dependent information local signal oscillation mode vicinity point 
principal idea approach treating texture image realization random field 
approach remains completely suitable problem seismic section analysis difference segmentation required estimate local model parameters 
basis local spatial model signal oscillations seismic section autoregressive model underlies texture segmentation technique model subjected alterations 
vector autoregression parameters considered variable characterize local properties texture point individually constant previously assumed depend index texture class 
second seismic signals usually registered mean value equals zero presence coefficient autoregression equation needless 
third easy estimate point white noise intensity oe full variance random field words full local intensity seismic signals oscillations denoted parameter proportional oe proportionality coefficient quite complicated function autoregression coefficients instantaneous local parameters autoregression equation form vector gamma white noise just intensity oe required variance resulting random field equal just elementary fragment cut seismic section autoregression mask fragment current point 
assume consists elements ordered appropriate manner consider real valued column vector 
respectively autoregression coefficients ordered way considered column vector forming full intensity signal oscillations full vector texture parameters point 
node function associated point intended appropriate measure mismatch hypothesis hidden value autoregression parameter respective elementary fragment 
start convenient consider different measures kind separately autoregression coefficient vector signal oscillation intensity squared left part autoregression equation function shows extent hypothesis just current autoregression coefficient vector contradicts elementary fragment ajy gamma gamma easy see degenerate matrix hessian matrix degenerate quadratic function ajy vector satisfying condition minimum point 
shortest sense euclidean norm kak vector function represented form ajy gamma gamma theta analogously quadratic function gamma shows extent real number contradictory judging single observation hypothesis coincides current variance random field requirements placed data dependent node function generalized optimization statement data analysis problem met sum ajy 
consider full parameter vector column vector element desired quadratic data dependent node function obtain form xjy gamma gamma theta column vector zero elements 
fact seismic data array visual image reveals fundamental distinction nature vertical axis interpreted time horizontal formed increasing index 
purpose edge functions remains smooth terms ordinate fuzzy local decisions node functions degree smoothing taken different directions 
addition autoregression coefficient vector oscillation intensity occur node functions different manners may turn needed set specific smoothing degree variables 
identical quadratic functions taken different coefficients just appropriate decision fl gamma fi gamma gamma gamma gamma fl gamma fi gamma gamma gamma gamma ff identity matrix theta coefficient ff intended align smoothing degree relative coefficients fi fi determine different smoothing degrees respectively vertical horizontal direction 
stage generalized data analysis procedure original seismic section transformed intervening data array consisting just matching problem considered previous section quadratic marginal functions represented minimum point yn hessian matrix yn theta real numbers 
amount information stored determined number elements autoregression mask accepted local texture model seismic section 
resulting array obtained second stage processing consists dimensional vectors represents local spatial autoregression properties local intensity signal oscillations 
particular autoregression mask completely concentrates image lines horizontal gamma vertical direction gamma vector texture parameters represent spatially smoothed local properties respective dimensional random process formed single horizontal slice seismic section const single seismic signal const 
case dimensional models sufficient masks masks concentrated current point direction respective index increases local autoregression model simple gamma gammai gamma gammai models kind describe texture describing dimensional horizontal vertical cross sections models respective onedimensional random processes 
seismic sections kinds rock mass important study local spectral properties dimensional processes 
known autoregression model random process completely equivalent frequency spectrum terms spectral density variance 
variance dispersion stationary random process discrete argument axis mathematical expectation squared random values assumed mean value process equals zero 
spectral density variance function frequency defined range frequencies higher periods sample case discrete argument 
integral spectral density range definition gives variance random process integral frequency interval min max min max shows partial variance carried harmonic constituents frequency band df min max fmax fmin df spectral density autoregressive random process gammak function vector autoregression parameters autoregression coefficients full variance process function especially simple case second order autoregression gamma gamma gamma gamma gamma cos gamma cos dimensional local texture models just opposite assumption random process analyzed stationary assumed estimated autoregression parameters horizontal vertical process cut seismic section different different points axis process 
series spectra representing gradually changing oscillation mode signal time axis usually referred result time frequency analysis 
case seismic section obtain dimensional array horizontal vertical spectra term time frequency analysis applicable full sense vertical direction just vertical axis seismic section associated time 
course series spectral densities immense representation local oscillation modes nonstationary signal seismic section required rule know partial intensity oscillations sufficiently narrow frequency band min max fmax fmin df just kind processing result representation illustrated example fig 

seismic cube fig 
kind data arrays immediate visual analogy texture images gets lost presence third coordinate 
semantic analogy remains appears natural consider local oscillation mode reflected seismic signals forming dimensional array threedimensional texture respective point 
mathematical model texture form autoregression equation remains quite correct difference argument tree dimensional vector plane mask dimensional analogue 
structure node functions consistent local spatial model signal oscillations completely coincides dimensional seismic sections reinterpret vector coordinates discrete dimensional space 
coefficients quadratic edge functions taken different horizontal vertical directions horizontal symmetry seismic cube reason distinguish horizontal axes fl gamma fi gamma gamma gamma gamma fl gamma fi gamma gamma gamma gamma fl gamma fi gamma gamma gamma gamma structure matrix 
dimensional masks spectral representation respective onedimensional autoregression models remain useful revealing local peculiarities kinds rock mass studying dimensional seismic images 
true horizontal directions case additional averaging may required vertical direction retains sense time important study local spectral properties reflected seismic signals axis 
processing seismic cube performed stages ones case plane sections dimensional version generalized data analysis procedure 
elements second intervening array quadratic marginal functions represented dimensional minimum points hessian matrices theta respectively cube fragments defined 
just plane case elements resulting array sense local parameters spatial texture dimensional time 
remarks multi sequence alignment proteins contrast problems processing visual images geophysical data arrays considered previous sections idea creating algorithms molecular sequences finding minimum point separable objective function brought reality 
section consider details project 
nature set proteins fig 
data array absolutely different images visual seismic ones 
formal point view fact reveals different kinds variables occurring original separable objective function multi alignment problem respectively different kinds neighborhood shown fig 
structure data dependent functions jy jy respectively edge type node type functions case model ones fl gamma fl gamma depends nature pattern variable chosen represent common properties amino acids having fallen column alignment fig 

case data dependent elementary functions completely defined choice set dissimilarity function assumed measure residual discrepancy particular element extended set amino acids approximate representation form pattern element xjy kt theta mark data dependent function depend matter column alignment amino acid kt issued 
restrict consideration case pattern elements belong finite set straightforward kind discrete pattern element meant represent collection amino acids simply 
reasonable way forming discrete set pattern elements interpret fuzzy subclasses amino acids possessing common properties 
case dissimilarity function chosen takes greater value smaller membership degree measured instance fuzzy membership index 
appears reasonable take dissimilarity function form gamma data dependent function formed gamma kt accordance principle accepted section discrete variables take values set value sense ordinal number amino acid element pattern sequence row alignment associated fractional value points interface respective neighboring amino acids variable row alignment takes values specific set possible positions amino acids eventual gaps 
number elements set depends number amino acids respective protein yn equals 
addition denote number pattern elements set combined variables take values set theta numbers elements 
kinds neighborhood respective kinds variables represented objective function elementary edge functions fl gamma corresponding edges adjacency graph conventionally shown fig 
vertical ones gamma corresponding horizontal edges picture 
version multi alignment problem considered purpose horizontal edge functions impose capital penalty inadmissible pairs adjacent values gamma order provide sequence kn row actual amino acid positions respective protein complies ultimate aim forming correct alignment 
sequence row correct immediately adjacent fractional equal greater predecessor fractional having predecessor greater valid immediately fractional 
rigid restrictions provided values horizontal penalty gamma gamma gamma gamma fract 
gamma gamma gamma gamma fract 
fract 
case discrete pattern variables choose simplest vertical edge functions fl gamma gamma ff gamma ff assumed large theoretically ff case gamma penalty dwarfs values functions jy gamma values arguments 
increasing penalty ff final values pattern variables result minimization objective function limit equal columns alignment 
elements pattern sequence depend limit order proteins occur set yn fig 

just reason justifies lattice adjacency variables separable objective function multi alignment problem fig 

formal problem minimization objective function remain absolutely sound mathematical point view take moderate value penalty ff 
true problem protein sequence analysis obtain case differ multi alignment set section protein assigned pattern sequence array sequences depend order proteins original set 
greater penalty ff closer pattern sequences gamma associated neighboring proteins gamma original ordered set ff obtain gamma approach result usual multi alignment 
problem protein sequence analysis considered formally expressed separable objective function essentially wider alignment unordered set proteins includes problem particular case infinitely increasing penalty vertical neighborhood pattern elements ff 
moderate values vertical penalty ff minimization objective function ordered sequence proteins yn kind generalized smoothing role smoothed representation original sequence respective terms played sequence pattern sequences cn associated original proteins fig 

soundness analysis concerned reason ordered chain proteins may align proteins quite distant indices just data analysis problems formulated optimization respective separable objective functions way creating effective algorithms processing protein sequences replacing original graph lattice adjacency variables fig 
series tree ones fig 

principal scheme processing remains depicted section name generalized data analysis procedure 
case discrete set pattern elements combined variables take values finite sets thetak version fig 
fig 
tree decomposition lattice variable adjacency graph chosen specificity numerical realization procedure comparison instance image segmentation section fact number elements range goal variables specific horizontal row alignment depends number amino acids respective protein 
contrast problem image segmentation horizontal fig 
vertical version fig 
far equivalent viewpoint expected result open question preferable 
versions common fact additional correction resulting array inevitably required assembled stem columns stem rows respective partial variable adjacency trees 
mentioned section point versions provides kinds constraints values neighboring goal variables expressed edges forming stems partial trees 
specifically vertical version fig 
identity smoothness constraints pattern variables vertical columns final array gamma observed force fact values variables jointly result minimization respective partial objective function 
values neighboring horizontal rows gamma obtained different objective functions may turn mutually contradictory 
reasonable ways overcoming inconsistency re evaluate independently row respect fixed values pattern variables accordance condition kn arg min kn jc kn jc jy gamma objective function re evaluation separable chain adjacency variables 
find sought corrected sequence row apply row dynamic programming procedure main constituent part generalized data analysis procedure time const analogously horizontal version fig 
minimization partial objective functions results complete correctness adjacent gamma horizontal rows vertically neighboring values pattern variables gamma obtained different objective functions quite assumed vertical identity mutual similarity pattern sequences provided 
way improving defect consists re evaluating pattern variables independently column respect fixed values arg min jy fl gamma case dynamic programming procedure applied column const done questions remain answered considered seemingly absolutely different groups data analysis problems 
turned exists interpretation problems allows formal treatment variations standard optimization problem 
considered structure data array subject analysis collection elementary information units nodes appropriate undirected graph meant express natural neighborhood data array elements represented original data array function defined set nodes takes values appropriate range bounds concern restricted variety practical data analysis problems represented problems transforming original data array function set range values specific particular data analysis problem 
shown ultimate intent data analysis problems consists rule ordinating kinds available information values secondary variables data dependent information usually carried respective fragments original data array hand model imposes priori constraints pairs adjacent hidden values 
accordance principle reformulated generalized data analysis problem set finding global separable objective function xjy jy fl elementary functions jy fl respectively data dependent model received names node edge functions 
concluding section briefly review results obtained bounds reported investigation pose questions naturally arise principal idea approach proposed remain unanswered 
separable function general kind problem global optimization lend effective solution 
reformulated generalized data analysis problem heuristic splitting series partial optimization problems tree separability particular objective functions appropriately chosen nonoverlapping subsets goal variables 
particular objective functions function variables optimal values variables respective subset meant participate forming entire result processing 
relation hypothetical strictly optimal result delivering minimum value original separable objective function combined solution assembled partial decisions subsets variables variable adjacency graph general kind decomposed series tree ones 
considered class data analysis problems allow treating formal problems optimization separable objective function class natural kind variable adjacency graph rectangular lattice 
kinds variable adjacency adequate practical applications 
lattice adjacency graphs proposed heuristic way replacing original objective function series particular ones tree separability variables particular trees horizontal branches differ variables forming stem 
disadvantages tree decomposition variable adjacency lattice particular data analysis problems considered 
ways decomposition proposed lattice adjacency graph problems 
shown optimization separable function xn tree adjacency jt variables easily fulfilled effective computing procedure reducing original problem series partial optimization problems intervening function variable 
case tree variable adjacency chain procedure boils classical dynamic programming procedure intervening functions optimized step bellman functions call extended bellman functions 
particular kinds variable adjacency separable objective function provide substantial computational simplification optimization problem compared general case lesser extent tree 
numerical realization generalized dynamic programming procedure presupposes exists finitely parametrized function family concordant node functions edge functions fl sense extended bellman functions belong family 
addition trivial discrete case arguments objective function take values finite set mg studied example parametric family quadratic functions case range variables dimensional real space node edge functions quadratic 
parametric families extended bellman functions conjugate practically suitable classes node edge functions exist discrete continuous ranges goal variables 
class data analysis problems rectangular lattice adjacency goal variables natural basis treating problems optimization separable objective function proviso contra indications heuristic replacement original lattice series trees common horizontal branches created generalized data analysis procedure performs processing data array twice runs elements spatial dimensionality original lattice 
result runs stored memory form intervening array original data elements replaced parameter values representing bellman functions lattice nodes terms chosen parametric family 
result processing array minimum points bellman functions obtained run 
essence particular data analysis problem affects class node edge functions respectively specificity parametric family containing intervening bellman functions 
considered specific traits particular data analysis problems served report basis generalizations 
regards visual seismic explorative data generalized data analysis procedure depicted report successfully engineering practice new approach problem multi alignment molecular sequences reported project needs improvements experimental testing 
bibliography besag statistical analysis dirty pictures discussion 
journ 
royal statist 
soc pp 

kittler contextual classification multispectral pixel data 
image vision comput 
ripley statistics images pattern recognition discussion 
canad 
statist pp 

geman geman stochastic relaxation gibbs distributions bayesian restoration images 
ieee trans 
pami vol 
november pp 

smith roberts bayesian computation gibbs sampler related markov chain monte carlo methods 
statist 
soc pp 

tierney markov chains exploring posterior distributions 
annals statistics vol 
pp 

pincus closed form solution certain programming problems 
oper 
res pp 

pincus monte carlo method approximate solution certain types constrained optimization problems 
oper 
res 
kirkpatrick gelatt vecchi optimization simulated annealing 
science 
bellman dynamic programming 
princeton university press princeton 
waterman smith beyer biological sequence metrics 
advanced mathematics pp 

taylor identification protein sequence homology consensus template alignment 
journal molecular biology pp 

taylor flexible method align large numbers biological sequences 
journal molecular evolution pp 

roberts consensus functions patterns molecular sequences 
technical report 
dimacs rutgers university august 
gribskov mclachlan eisenberg profile analysis detection distantly related proteins 
proc 
nat 
acad 
sci 
usa pp 

smith smith pattern induced multi sequence alignment pima algorithm employing secondary structure dependent gap penalties comparative protein modeling 
protein engineering pp 

chothia lesk determinants protein fold 
journal molecular biology pp 

kopylov yu 
quasi statistical approach problem stereo image matching 
proceedings spie pp 

muchnik automatic classification local peculiarities data fields hidden markov models 
mathematical problems classification ed 
survey applied industrial mathematics 
moscow publishing house probability theory applications russian 
muchnik kopylov hidden tree model generalized technique class image processing problems 
th international conference pattern recognition 
vienna austria august 
track pp 

kopylov optimization techniques pixel neighborhood graphs image processing 
proceedings international workshop graph representations 
lyon france april appear box jenkins time series analysis 
forecasting control 
holden day 
