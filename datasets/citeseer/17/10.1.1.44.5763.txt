software agents review may trinity college dublin research shaw green leon hurst brenda dr cunningham somers dr richard evans shaw green leon hurst brenda cunningham cs tcd fs re table contents 


agent technology overview 

general agent definition 
intelligent user interfaces 
distributed agent technology 
mobile agents 
summary 

adaptive user interfaces 

build user model 
traditional machine learning techniques 
symbolic classifiers sub symbolic classifiers learning directly environment 
evaluation techniques 
existing intelligent interface agents 
broad agent classifications 
area information filtering agents 
information retrieval agents 
personal digital assistants pdas 


distributed agent technology overview 

dai multi agent systems 
coordination multi agent systems 
organisational coordination 
contracting coordination contract net protocol 
multi agent planning coordination 
social laws coordination 
negotiation techniques 
competitive negotiation game theory 
competitive negotiation electronic commerce 
competitive negotiation telecommunications 
competitive negotiation human inspired approaches 
cooperative negotiation 
communication mas research 


intelligent mobile agents 
working definition 
refined definition 
agent model 
life cycle model 
computational model 
security model 
communication model 
navigation model 
summary 
proposed advantages mobile agent technology 
summary 
mobile agent implementations 

obliq 
java 
aglets 

telescript 
ara 
summary 
applications mobile agents 


rover mobile application toolkit 
ibm agent meeting point mobile communication 
magic cap 


mobile project 
summary 
summary 

summary 



september ireland formed research collaboration computer science department trinity college dublin order explore current research domain intelligent agents apply technology applications communications 
resulting collaboration named intelligent agents group consisting members tcd working liaison group similar size 
intelligent agents hot topics information systems moment 
years seen marked interest agent oriented technology spanning applications diverse information retrieval user interface design network management 
diversity means ia field presents confusing picture 
main goal review report research rapidly evolving area software agents highlight applicability technology sponsor interests 
chapter introduces concept agent reasons increasingly growing interest field briefly outlines key aspects areas chosen research intelligent user interfaces distributed agent technology mobile agent technology 
chapters provide depth overviews areas outlining underlying technologies associated research projects existing applications 
section conclude review summary 
information available www pages www cs tcd brenda html 
agent technology overview word agent currently popular computing press artificial intelligence computer science communities 
chapter provides reader brief overview agent key agent application areas 
section provide general agent definition outline reasons increasing interest agent technology 
sections briefly summarise key aspects associated areas research intelligent agents group 
general agent definition sense familiar concept agent 
consider instance role undertaken travel estate agent 
organisations representative role act behalf case estate agents actual owners property travel agents hotels flight companies 
claim acting behalf entity fundamental property agency 
agents discussed exhibit second fundamental agent characteristic enjoy variable degree autonomy 
example estate agents generally viewing appointments unoccupied properties owners 
third important aspect agent behaviour degree proactivity reactivity behaviour 
instance estate agent simply places sale sign outside property sale waits come shop behaving reactive fashion agent proactively advertises property local press 
noted reactivity proactivity flip sides coin 
agent display high amounts proactivity reactivity different times 
agents exhibit level number attributes key ones learning cooperation mobility 
discussion equally true computational agents general 
term agent context background early ai researchers concentrated trying create artificial entities mimicked human abilities hewitt 
strictest sense term applied wide range entities including software systems synonymous term autonomous robots biological organisms 
essence believe concept agenthood summed definition agent computational entity acts behalf entities autonomous fashion performs actions level proactivity reactiveness exhibits level key attributes learning operation mobility 
software agents simply termed agents software systems loosely conform definition basically described inhabiting computers networks assisting users computer tasks 
closing years th century need software agents urgent today modern world computers ubiquitous cars televisions exploiting capabilities problem need tackle 
technology gap millions untrained users equal number sophisticated microprocessors apparent 
computers currently respond interface designers call direct manipulation 
happens person gives commands keyboard mouse touch screen 
computer merely passive entity waiting execute specific highly detailed instructions provides little help complex tasks carrying actions may consume large proportion user time searching information 
researchers software companies set high hopes called software agents know users interests act autonomously behalf 
exercising complete control people engaged cooperative process human computer agents initiate communications monitor events perform tasks meet users goals 
essence need software agents absence proactivity 
everyday tasks computer world midst information revolution resulting vast amounts dynamic unstructured information increasingly users untrained users require agents assist order understand technically complex world process creating 
number type application domains agent technologies applied investigated include workflow management network management air traffic control business process re engineering data mining information retrieval management electronic commerce education personal digital assistants pdas scheduling diary management notes years time new development affected consumer products contain embedded agent systems 
intelligent agents group focused research areas believe span key agent application domains interest sponsors intelligent user interfaces distributed agent technology mobile agent technology 
areas chosen line main agent attributes stated learning cooperation mobility 
sub sections briefly summarise main aspects areas turn 
intelligent user interfaces considering field detail worth setting scene attempting clarify exactly meant term intelligent interface agent 
point note preexisting body concerning intelligent user interfaces iui 
doesn unreasonable characterise systems user adaptive 
adaptive meant course systems attempt modify behaviour maximise productivity current user interaction system 
obviously adaptation viable information gathered concerning current users behaviour 
interesting questions arise 
aspects user behaviour useful capture 
information behaviour gives actual intentions preferences user 
information captured 
intelligent user interface agents fairly developments agent oriented approach construction systems 
major factors distinguish interface agents iui fact agents proactive enjoy degree autonomy 
properties manifest number different ways instance number systems perform information filtering role filter autonomous fashion presenting user information considers interest 
similarly type system proactive actively searches information judges interest users 
detailed review intelligent user interfaces please read chapter 
distributed agent technology distributed artificial intelligence sub field artificial intelligence concerned society problem solvers agents interacting order solve common problem computers persons sensors aircraft robots society termed multi agent system network problem solvers solve problems individual capabilities 
increasing interest mas research due significant advantages inherent systems including ability solve problems may large centralised single agent provide enhanced speed reliability tolerate uncertain data knowledge 
problem solving performed agents mas termed distributed problem solving involves research areas coordination negotiation communication 
order mas solve common problems coherently agents communicate coordinate absence reactivity 
activities negotiate find conflict 
conflicts result simple limited resource contention complex issue computations agents disagree discrepancies domains expertise 
coordination required determine organisational structure group agents task resource allocation negotiation required detection resolution conflicts 
detailed review distributed agent technology please read chapter 
mobile agents existing literature chess white nwana url believe definitions sufficiently characterise essence mobile agent system 
mobile agent software entity exists software environment 
inherits characteristics agent defined section 
mobile agent contain models agent model life cycle model computational model security model communication model navigation model 
defines mobile agent 
consider software environment mobile agents exist 
call mobile agent environment 
definition mobile agent environment mobile agent environment software system distributed network heterogeneous computers 
primary task provide environment mobile agents execute 
mobile agent environment implements majority models appear mobile agent definition 
may provide support services relate mobile agent environment support services pertaining environments mobile agent environment built services support access mobile agent systems support openness accessing non agent software environments 
definitions state essence mobile agent environment exists 
mobile agent environment built top host system 
mobile agents travel mobile agent environments 
communicate locally remotely 
communication takes place mobile agent host service 
detailed review mobile agent technology please read chapter 
summary purpose chapter introduce notion agent reasons increasing popularity 
outlined key aspects intelligent agents group research areas discussed detail remainder document 

adaptive user interfaces chapter gives overview existing field intelligent interface agents 
chapter begins 
section discusses issues connected building user models 
section critically evaluates existing learning techniques relation construction user models 
follows section presents structured overview existing user interface agents 
section concludes chapter describing possible applications intelligent interface agents 
remainder sets scene rest review attempting clarify exactly meant term intelligent interface agent 
point note pre existing body concerning intelligent user interfaces iui 
doesn unreasonable characterise systems user adaptive 
adaptive meant course systems attempt modify behaviour maximise productivity current users interaction system 
obviously adaptation viable information gathered concerning current users behaviour 
interesting questions arise 
aspects user behaviour useful capture 
information behaviour gives actual intentions preferences user information captured 
intelligent user interface agents fairly developments agent oriented approach construction systems 
major factors distinguish interface agents iui fact agents proactive enjoy degree autonomy 
properties manifest number different ways instance set agents discussed undertakes information filtering role perceived user interests 
role may involve actively seeking information filtering undertaken limited intervention part user 
addition general properties usual interface agent fulfil roles 
assisting user communicating task rest system 
typically involves presenting user easy interface hides actual underlying system may complex 
provide benefits system developers allowing easily increase functionality existing system simply functional component 
learning user profile 
system interacts user interface interface agent provides 
logical component system attempt build profile user 
user behaviour terms interactions interface agent knowledge semantics attached individual interface components 
selecting presentation components system functionality 
consistent user profile available users current interaction user interface 
agent responsible presenting user timely appropriate accessible manner 
somewhat controversial aspect agent issue personification 
persona agent visible presence agent users perspective 
extreme people working highly agents attempt convey range human emotions bates 
extreme number human computer interaction hci workers lead prominently schneiderman somewhat opposed agent interface solutions particularly type claiming remove user control distracting 
course large number people fall extremes prominent exponent agent approach doesn try highly agents maes maes 
course exists myriad different possible technologies architectures implement kind agent interface system described rest document 
build user model principal problems constructing intelligent interface agent gathering accurate information regarding user interests goals general preferences 
sections 
attempt give brief overview existing machine learning techniques useful achieving task 
traditional machine learning techniques symbolic classifiers symbolic classification attempts classify set examples finite number classes 
instance example dataset shown table examples separate class 
typical example symbolic classifier system quinlan quinlan 
system development earlier id attempts build decision tree set training examples element consists number possibly relevant attributes class example classified 
legs backbone hair wings class insect mammal reptile training set type algorithm produces decision tree selecting level tree attribute split remaining set measure information content attribute termed entropy heuristic measure derived shannon information theory 
sub symbolic classifiers sub symbolic approach neural network systems 
systems take patterns input classify finite number categories 
systems split sub categories architecture network method train 
category shares properties symbolic classifier systems described 
termed supervised neural networks typically trained set input patterns desired output category known advance 
measure error actual desired output calculated training algorithm attempts minimise training set repeatedly 
classic example neural network architecture feedforward network trained algorithm back propagation rumelhart second class neural network system requires teacher tell correct classification training examples termed unsupervised neural networks 
examples type network art adaptive resonance theory networks carpenter grossberg 
networks fall general class competitive learning techniques 
typically consisting layers layer accepts input patterns input feeds forward second layer 
node second layer selected maximal activation put forward current hypothesis 
matching phase occurs activated node representing hypothesis matched input quality match assessed certain threshold passed layer reset input activates new node process repeated 
system said develop classifications 
network architecture type self organising feature map ritter learn cluster data unsupervised fashion 
learning directly environment traditional techniques described share common feature possible exception art networks learning done line 
techniques described section founded premise learning done real time situated autonomous agent 
adds additional complexities learning task significantly information needed learn particular concept task available agents perceptual world 
reinforcement learning class unsupervised learning algorithms reinforcement class learning algorithms 
fairly example type approach learning learning algorithm watkins 
learning works calculating estimate state action pairs defined expected discounted sum action state pursuing optimal policy 
values learnt correct course action determined state action highest value 
values estimated basis experience learning algorithm 
algorithm guaranteed converge correct values environment static depends current state action taken markovian worlds 
practice action taken state action selection strategy called boltzmann distribution strategy ensures sufficient exploration whilst favouring actions higher value estimates 
addition limits mentioned mechanism tends prohibitively slow simple real world problems 
number people suggested improvements basic learning algorithm 
learning observation known imitative learning learning technique type learning undertaken animats 
noted theory learn perform task simply applying reinforcement learning sufficient time 
available expert knows complete task sub tasks involved possibly experience speed learning process imitating expert gaining knowledge tackle tasks performing 
noted approach assume active teacher student expected learn task simply watching copying experts display usual behaviour 
interested reader find information class approach mazur instructional learning term encompasses variety techniques 
extreme simple techniques involve explicit communication expert attempting demonstrate student perform particular task explicit communication classed instructional techniques 
whilst extreme quite complex communication languages employed exchange information agents see werner information 
possible techniques interest area possible interest social psychology done attribution theory 
particular kelley causal schema templates people making goal attributions limited information potentially relevant 
area possible relevance learning user preferences area case reasoning cbr 
multi user system period interaction individual user probably fairly short 
potential problem learning techniques tend demand fairly sustained period interaction 
possible way tackling problem considering individual users consider classes user fundamental units 
require initial classification users number stereotypical user groups specialised suit individual user information gleaned limited interaction system 
interestingly user group treated kind virtual user individual users interactions forming parts longer session interaction 
way achieve kind length interaction necessary adapt group stereotypes 
kind scheme appears analogous kind scheme typically employed cbr systems 
systems set generalised cases specialised fit individual problems 
specified cases differ significantly cases case library generalised added library 
evaluation techniques considering learning techniques suitable intelligent interface agent worth considering types information desirable learn 
information include user interests users plans short term intentions domain knowledge knowledge system interfaced user preferences user ability 
types information raises particular problems single learning technique suffice 
possible acquisition user interests instance achieved simplistic manner complex learning problem inferring users goals plans achieve goals 
available techniques felt traditional classifier techniques unsuitable domain basically unsupervised nature 
unsupervised neural networks role classifying users sort stereotypical system employed 
case left problem techniques discussed new untested slow probably unsuitable real time system intelligent user interface 
glance basic concept stereotypical user groups associated techniques case reasoning possible avenue fruitful research discussed detail chapter 
examples existing systems give flavour possible intelligent interface agents 
existing intelligent interface agents broad agent classifications moving consider examples existing field briefly consider general agent classifications apply adaptive interfaces 
firstly considering agent systems worth considering multi agent single agent nature 
agents excel multiple agents tasks capabilities operating distributed applications 
case single agents operating single knowledge source clear cut debatable entity agent 
secondly considering example systems follow important bear mind characteristics selected characterise agent systems autonomy adaptivity operation 
simply autonomous software system claim 
successful agent system ideally show aspects characteristics minimum 
area information filtering agents outlines generalised architecture information filtering agents 
remainder sub section details example systems feel fall category system 
architecture information filtering agents may noted interface agent diagram responsible providing interface system separate content provider 
ideal position unfortunately lot systems class combine system functionality actual interface agent 
preferred model systems interface agent component assistant metaphor 
agent separate system act conduit system user assisting users interaction system 
int agent interface agent user profile user information sources back general interface agent schemata filtering agent probably simplest classes intelligent interface agents imaginable question class system exhibits intelligence 
class system typically consists number large information sources filtered way leave information relevant user 
major approach construction systems exist utilise explicit user models 
systems utilise explicit user models effective technique far automated collaborative filtering acf number systems including mit system recommending musical cd 
collaborative filtering systems known recommender systems users system classifying items interest identifying current user similar past users expressed preferences select items interest current user 
clearly useful situations authors admit larger uniform domains musical taste kind feature system required partition domain applying acf 
approach adopted url system 
broad classes user model categorise types user model currently duration type interaction user explicit user profile series questions designed accurately acquire user interests preferences 
relatively short term interaction system monitors user behaviour shallow model user preferences interaction patterns 
long term interaction system monitors user behaviour deep model captures users interests goals 
third type model probably desirable context distract users main task acquiring information require 
notoriously difficult unreliable derive information manner 
explicit gathering information suffers problems 
intrusive guarantee questions asked answered truthfully questions asked right ones obtaining information desired 
shallow preference models probably type system concerned deeper modelling interests 
fairly large number agents fall class system email news group filtering popular application domains 
interesting example type system jennings higuchi jennings higuchi 
system uses artificial neural network ann classify news group articles interesting irrelevant ones trained users reading rejecting articles suggested system feedback neural network 
systems sort suffer number disadvantages 
systems base understanding content news articles information sources features keywords 
known unreliable capturing true meaning natural language texts 
second features selected effectively represent pieces information filtered guarantee successfully deduce users interests features 
interesting system type mit maes collaborative interface agent system lashkari attempts facilitate learning different user interface agents serving similar users system agent user allowing agents communicate 
systems attempt intelligently filter information include stanford sift system 
yan garcia molina information retrieval agents architecture diagram shown may appear glance similar class system discussed previous section inclusion arrow indicating flow communication interface agent information resources reflects significant step architecture information retrieval agents sophistication 
class system exhibits significant degree proactivity 
extra arrow architecture indicates interface agent requests particular pieces information information sources passively filtering information 
approach lends particularly nicely implemented multi agent system 
approach separate information source modelled agent interface agent broadcast request information 
receipt request information agent reply message containing information access relevance initial request 
interface agent having received separate pieces information responsible aggregating information sensibly presenting information unified easy access fashion 
approach brings number benefits compensate added complexity 
chiefly allows deal distributed sources information effectively example world wide web 
brings benefits terms scalability problems associated incorporating new knowledge source greatly reduced simply need design new agent slot 
systems complexity thin ground 
clearly importance information requested satisfies users query goals 
request sent interface agent information obtained directly interface user model system managed build 
system adopt kind approach project 
involves provision multimedia kiosks sites ireland drawing social welfare employment information number distributed knowledge sources 
systems bargainfinder url potential developed instances class system lack moment attempt user int agent agent user profile user information sources back agent modelling 
sri created tourist application drawing information various sources provide map tourist information service san francisco area 
moran 
number systems attempt provide virtual newspapers draw information number different sources user expressed interests 
type system differs traditional newspapers user system explicitly chooses information personal newspaper 
newspaper sensitive user unique information needs creators system loose editorial control 
typically content information retrieved real time news wires dynamic sources 
allows newspapers remain date typically expense depth analysis relevant issues mentioned earlier 
example type system url presents news number different user selected categories information drawn numerous sources 
netscape provide access number similar services inbox facility yahoo 
similar service provided excite 
provides somewhat different service charged 
users enter keywords tell system news items possibly definitely interested 
system returns news articles drawn variety online news sources mainly newswires 
systems viewed agents simplistic making explicitly entered keywords features 
interesting problems try automatically derive interests users actions try adapt individual news items better suit readers viewpoint 
tasks means trivial current technology 
personal digital assistants pdas class system shown embodies probably dominant type interface agent 
intelligent assistant 
system attempts help users perform routine 
architecture pda agent 
day day tasks 
type system ideally domain knowledge knowledge capabilities system assisting user model users abilities preferences 
agent responsible providing help advice knowledge user current task perceived agent 
instance lester lester design plant system pedagogical system designed allow children learn plant biology designing plants fit particular environments include highly visible agent form alien gives advice students system deems need help 
interface agents attempt automate user repetitive tasks instance etzioni etzioni weld done unix operating system domain 
interface agent user domain model user model closely related internet fisher thomas fischer thomas produced system help user organise bookmarks effectively whilst pandit pandit intel produced agent system provides user links keywords contain email addresses urls geographic place names things 
systems raise interesting issues regarding research intelligent interface systems 
whilst systems clearly useful systems undoubtedly increase user efficiency performing day day agents involved perform relatively simple tasks require little intelligence achieve certainly don require adaptiveness 
realistic call systems intelligent interface agents better just refer interface agents word intelligent creates expectations minds users current systems probably incapable fulfilling 
limited agents reflects wider trend iui community simple ai techniques 
type interface agent relevance traditional telecommunications domain 
pang project attempts provide call screening business card concept processed personal assistant agent maintains user profile 
system assisting network supervision task interface agents assist automating tasks learnt watching shoulder human user 
general role kind interface agent assist user dealing complex possibly distributed systems role intelligent interface agents domain telecommunication service provision taken broadest sense allowing inclusion world wide web 
main application domains stand available literature 
systems exist attempt information filtering retrieval role 
systems appear quite successful particularly ones acf clustering techniques 
ones user models suffer fact doesn exist reliable way extract meaning arbitrary natural language text utilise keyword extraction 
exists role assistant style agent complex systems particularly multi agent systems 
include information provision style system typified project system procedurally oriented pang project 
application degree adaptivity desirable order maximise improvement user productivity assistant able generate 
unfortunately current agent systems little significant user modelling relying part quite simplistic user profiles 
need research user modelling intelligent interface agents 
concentrate initially information provision filtering domain centred case approach mentioned briefly 

distributed agent technology overview distributed artificial intelligence dai concerned problem solving groups agents solve tasks 
chapter explore existing problem solving strategies applications applied 
section explain concepts dai multi agent systems distributed problem solving dps 
sections outline various research topics associated dps multi agent systems coordination negotiation communication respectively 
section conclude chapter 
dai multi agent systems research artificial intelligence aimed developing software simulate called intelligent capabilities human beings reasoning natural language communication learning programs computer role departs mere tool progressively kind assistant humans 
implementation computer networks big step development computer organisations societies collaboration individuals requires communication links established effectively 
distributed artificial intelligence subfield artificial intelligence decade investigating knowledge models communication reasoning techniques computational agents need participate societies composed computers people 
generally dai concerned society problem solvers agents interacting order solve common problem computers persons sensors aircraft robots society termed multi agent system defined loosely coupled network problem solvers solve problems individual capabilities hare jennings 
motivations increasing interest mas research includes ability solve problems large centralised single agent due resource limitations sheer risk having centralised system allow interconnecting interoperation multiple existing legacy systems expert systems decision support systems provide solutions inherently distributed problems air traffic control cammarata provide solutions draw distributed information sources provide solutions expertise distributed health care provisioning enhance speed communication kept minimal reliability capability recover failure individual components graceful degradation performance extensibility capability alter number processors applied problem ability tolerate uncertain data knowledge offer conceptual clarity simplicity design 
researchers usually distinguish types multi agent systems bond gasser rosenschein zlotkin depending degree cooperation exhibited individual agents 
cooperative distributed problem solving cooperative multi agent systems cmas early dai exclusively interacting agents designed single designer 
agents counted act greater system programmed way designer concerned increasing general system performance performance individual agents 
agents considered cooperative 

self interested multi agent systems mid distinct research direction dai began take shape 
certain researchers began ask questions related individually motivated agents designed independent designers 
considering system behaviour count agents cooperating just designed way 
important independent designer benefit derive individual agents 
agents considered self interested competitive non cooperative may exhibit antagonistic behaviour 
cooperative antagonistic spectrum mas surveyed genesereth rosenschein genesereth 
note situation total cooperation known benevolent agent assumption accepted dai researchers true real world agents may conflicting goals 
conflicting goals reflected example set personal meeting scheduling agents agent tries schedule meeting best time particular owner 
problem solving performed agents mas termed distributed problem solving involves research areas coordination negotiation communication 
order mas solve common problems coherently agents communicate coordinate activities negotiate find conflict 
conflicts result simple limited resource contention complex issue computations agents disagree discrepancies domains expertise 
coordination required determine organisational structure group agents task resource allocation negotiation required detection resolution conflicts 
sections describe coordination negotiation communication detail introduce approaches devised achieve see sections respectively 
coordination multi agent systems coordination central mas benefits interaction vanish group agents quickly degenerates collection individuals chaotic behaviour 
coordination studied researchers diverse disciplines social sciences including organisation theory political science social psychology anthropology law sociology 
example organisation theorists investigated coordination systems human beings small groups large formal organisations galbraith thompson 
biological systems appear coordinated individual cells agents act independently seemingly non purposeful fashion 
human brains exhibit coordinated behaviour apparently random behaviours simple neurones 
essentially coordination process agents engage order ensure community individual agents acting coherent harmonious manner 
reasons multiple agents need coordinated prevent chaos 
agent possesses global view entire agency belongs simply feasible community reasonable complexity 
chairman ericsson example possibly aware detailed activities employees 
consequently agents local views goals knowledge may interfere support agents actions 
coordination vital prevent chaos conflicts 
second meet global constraints 
agents performing network management may respond certain failures seconds hours 
coordinating agents behaviours essential meet global constraints 
agents mas possess different capabilities expertise 
agents need coordinated just way different medical specialists including surgeons ambulance personnel nurses need coordinate capabilities treat patient 
agent actions frequently interdependent agent may need wait agent complete task executing 
interdependent activities need coordinated 
subsections outline key approaches solving coordination problem mass organisational coordination easiest way ensuring coherent behaviour resolving conflicts consist providing group agent wider perspective system exploiting organisational hierarchical structure 
simplest coordination technique yields classic master slave client server architecture task resource allocation slave agents master agent 
master controller gather information agents group create plans assign tasks individual agents order ensure global coherence 
systems employ blackboard architecture achieve coordination dfi system sharp multi agent kernel system kearney 
scheme blackboard knowledge sources replaced agents post read general blackboard 
master agent schedules agent reads writes blackboard 
system exploits blackboard architecture lesser corkill coordination occurs peers 
centralised markets magma gini employ global blackboard posting buying selling prices 
approach impractical realistic applications difficult create central controller informed agents intentions beliefs 
durfee point centralised control master slave technique contrary basic assumptions dai 
contracting coordination contract net protocol renowned coordination technique task resource allocation agents determining organisational structure contract net protocol cnp smith davis davis smith 
approach decentralised market structure assumed agents take roles manager contractor 
basic premise form coordination agent solve assigned problem local resources expertise decompose problem subproblems try find willing agents necessary resources expertise solve subproblems 
problem assigning subproblems solved contracting mechanism consisting contract announcement manager agent submission bids contracting agents response announcement evaluation submitted bids contractor leads awarding subproblem contract contractor appropriate bid see 
cnp applications parunak applied manufacturing control 
cnp considered smith davis dai researchers negotiation principle jennings pg 
believe standardised coordination method reasons view smith davis conflict agents start cnp 
possibility bargaining agents 
manager communicate minimal condition bidders second choice constraint relaxation mutual decision eventually decision offer way agreement 
approaches elaborated contract net build effective negotiation including constraint relaxation 
advantages include dynamic task allocation self bidding leads better arguments agents introduced removed dynamically provides natural load balancing busy agents need bid huhns singh 
limitations involve fact detect resolve conflicts discussed agents contract net considered benevolent non antagonistic real world scenarios realistic costs may outweigh advantages real world applications 
manager potential contractors task announcement 
potential contractors listen incoming task announcements task bids manager 
manager listens incoming bids manager potential contractor task award 
manager award contractor contract net protocol multi agent planning coordination traditional ai research led viewing problem coordinating multiple nodes planning problem 
multi agent planning emphasises certain avoidance inconsistent conflicting situations critical applications air traffic control 
forming multi agent plan nodes determine actions interactions leaving chance 
types multi agent planning centralised distributed centralised multi agent planning separate agents form individual plans send plans central coordinator analyses finds potential plan conflicts georgeff 
idea approach central coordinator identify critical regions plans agents synchronise insert plan steps sending waiting synchronisation messages ensure proper synchronisation 
individual partial plans merged multi agent plans conflicting interactions eliminated 
cammarata employ centralised multi agent planning simulated air traffic control domain 
system agents potential conflict scenario conflict decide number act coordinating agent plans agent sent 
coordinating agent attempt modify flight plan order resolve conflict 
disadvantage technique having agents form plans acting coordinating plans opportunities cooperation possible agents built individual plans concurrently reasoning nodes doing 
shares disadvantages inherent master slave approach coordination 
distributed technique multi agent planning central coordinator allows agents model plans corkill georgeff konolige 
agents communicate order build update individual plans models conflicts removed 
example approach lesser corkill functionally accurate cooperative fa protocol lesser corkill 
approach loosely coupled agents form high level possibly incomplete plans results hypotheses exchange 
refine converge global complete plan 
approach lesser corkill distributed vehicle monitoring testbed system testing coordination strategies 
approaches multi agent planning require nodes share process substantial amounts information multi agent planning generally involves computation communication approaches 
social laws coordination researchers attempting coordinate intelligent agents domains air traffic control urban traffic discovered coordination easier routine unfamiliar situations chaib draa 
agents complete knowledge goals actions interactions members possible know exactly agent doing moment intending 
context possible avoid conflicting redundant efforts agents perfectly coordinated effort achieving state prohibitively high 
complete knowledge actual actions reactions feasible routine situations 
example urban traffic context routine situation car front signals turning right traffic lights go green coordinate actions knowing doing social law traffic laws 
real world domains familiar unfamiliar situations 
familiar situation routine 
familiar situation occur traffic lights broken policeman directing traffic 
social law directions coordinate traffic 
unfamiliar situation traffic lights policeman directing traffic 
coordination decreases situation familiar analysis reasoning required laborious result conflicts agents 
chaib draa argues agents social laws processing relies skills results fast effortless coordinated activities agents 
agent performance governed stored patterns predefined procedures map directly observation perception action 
unfamiliar situations adapted familiar situations case reasoning 
agent model consists levels skill routine rules familiar knowledge unfamiliar 
low levels routine familiar situations strengthened enriching agent social regularities coordination rules drive left speak turn cooperative rules recycling cans consuming energy actions agent sense agents perform action social collections roles groups organisations 
negotiation techniques ongoing objective dps research insights humans coordinate activities negotiation 
common idea dai contributions negotiation agents negotiation conflict resolution coordination 
negotiation highly important modelling multiagent systems clear common definition negotiation probably definitions negotiation negotiation researchers 
basic definition bussmann muller negotiation communication process group agents order reach mutually accepted agreement matter 
agreement price military arrangements meeting place time joint action joint objective 
search process may involve exchange information relaxation initial goals mutual concessions lies threats 
basic idea negotiation reaching consensus 
researchers place stronger definition negotiation arguing order negotiate effectively agents reason beliefs desires intentions agents rao georgeff 
lead usage sorts ai mathematical techniques including logic case reasoning belief revisions distributed truth maintenance optimisation game theory 
difficult imagine huge varied literature subject negotiation 
negotiation competitive cooperative cmas depending cooperative behaviour individual agents involved recall section 
competitive negotiation 
situations agents disparate interests attempt group choice defined alternatives rosenschein zlotkin 
interaction computers controlling sharing resources distinct competitive agencies computer france computer germany control part linked telecommunications network may find beneficial necessary come agreements packets routed 
competitive negotiation involves independent machines independent goals interact 
priori cooperative share information willing back greater competitive 

cooperative negotiation cmas 
situations agents global goal single task envisioned system smith davis 
distributed systems centrally designed pursue single global goal 
agents called collaborative carberry 
example domains collaborative principle holds include university course domain advisor student collaborate developing plan achieve student domain goal air traffic control domain air traffic control systems collaborate establish best routes planes land domain multiple collaborate developing best attack defence tactics 
sub sections outline competitive cooperative negotiation strategies applications 
competitive negotiation game theory growing body negotiation game theory luce raiffa 
key researchers area rosenschein zlotkin tools game theory achieve coordination set rational autonomous agents explicit coordination mechanism built agents priori 
words assume benevolent agent assumption 
key concepts game theory approach negotiation utility functions 
utility defined difference worth achieving goal price paid achieving 
space deals deal action agent take attached utility 
strategies negotiation protocols negotiation protocol defines rules govern negotiation including ends agreement deal 
research introduced unified negotiation protocol agents converge joint plans called semi cooperative deals increases expected utilities despite fact chance achieving goals 
actual negotiation proceeds follows 
utility values outcome interaction agent built pay matrix common knowledge typically parties involved negotiation 
negotiation process involves interactive process offers counter offers agent chooses deal maximises expected utility value 
implicit assumption agent negotiation expected utility 
step negotiation agent evaluates offer terms negotiation strategy 
nwana critiques agents presumed fully rational acting utility predefined strategies agents knowledge pay matrix full knowledge agent preferences certainly real world agents partial incomplete knowledge domains 
unrealistic truly non benevolent loosely coupled agencies 
presumes agents negotiating reality quite large number agents typically involved negotiation 
despite zlotkin rosenschein provision mathematical proof ideas theory negotiation suffice real life industrial agent applications 
competitive negotiation electronic commerce rapidly growing segment internet electronic commerce 
sheer convenience preservation time consumers looking suppliers selling products services internet physical electronic goods stocks investments 
suppliers looking buyers increase market share 
vast amount information internet causes great deal problems consumer seller 
speculated intelligent agents facilitate solving problems 
systems kasbah magma involve personal assistants pa representing buyers sellers virtual marketplace performing negotiation 
essential idea systems users tell pas done sell best possible price trust accomplish task freeing time energy interesting pursuits 
addition users hope agents able sell buy goods better higher price able advantage edge processing speed communication bandwidth 
briefly introduce negotiation techniques employed key electronic commerce applications kasbah chavez maes kasbah classified ads service www incorporates interface agents 
kasbah meant represent market place web site kasbah agents acting behalf owners filter ads find users interested 
agents proceed negotiate buy sell items 
negotiation scheme buyers sellers involves price raise decay functions respectively 
sellers pa offer item highest desired price decrease price decay function user specified linear quadratic cubic 
desired date sell item arrives asking price lowest acceptable price 
converse true buyers price raise functions 
users control pa actions check pas talked prices involved fine tune agents accordingly final say agents shake hands agreed deal 
user specifications negotiation carried html 
magma gini magma moves marketplace metaphor open marketplace involving agents buying selling physical goods investments forming competitive cooperative alliances 
agents access global blackboard called offer board contains offers buyers sellers 
negotiation scheme kasbah involves sellers specifying pa highest price item physical investment sell posts data offer board 
buyers indicate pa category item interested number best offers retrieve 
buyer pa displays offers buyer select offer follow 
buyer pa send accept offer relevant seller agent 
area interest electronic commerce domain concept virtual enterprise 
currently time interval product marketed successfully dramatically decreasing enterprises faced hard terms competition 
decreasing innovation cycles changing market situations growing specialisation individual market segments demand new ways economic thinking increasingly forcing enterprises cooperations virtual enterprises direct competitors 
cooperations enable enterprises share skills costs access markets resources time decrease risk investments 
example mas attempts enable individual resources competitive negotiation form virtual enterprises described ave agents virtual enterprises fischer negotiation occurs auctioning mechanism ave individual competitors specific task 
auction product service manager role auctioneer subjects auction individual partial processes forming service bidders enterprises interested contributing partial processes virtual enterprise 
different auction mechanisms proposed theoretically proven equivalent efficiency 
employs vickery mechanism vickery highest bid wins winning bidder pay second highest bid price 
analog english auction bidder beat highest bidder win may willing pay bid 
contrast negotiation protocols considered far mas research selection highest bid partial process multi attribute problem individual bidding enterprises tuple describing example enterprise deviation planned sales actual sales service manager representing bid partial process 
competitive negotiation telecommunications negotiation techniques employed telecommunications domain generally involve simple bidding mechanisms contract net recall 
richer constraint relaxation bargaining power required currently research projects 
network management clark multi agent application agents controlling switch network order provide support customer requests services different requirements network resources 
agent decomposed simpler processes process responsible coordination negotiation 
negotiation agents handle customer requests routing call los angeles london network node failure deciding new manager resources controlled failed agent 
communication coordination occurs central message board implemented language platform april agent process interaction language 
coordination adopts master slave approach 
advertisements services routing posted message board forwards broadcasts relevant parties 
bidders respond directly sender message board selects best offer 
service management telecommunication networks growing number complexity 
customers wish provided customised diverse services variety terminals connected network choice 
despite diversity competitive service delivery platforms forced interconnect 
distributed agent technology provides candidate solution required intelligent service management 
system attempts apply agent technology problem service management telecommunications designed marius 
customers send service requests individual customer agents ca attempts configure service sending request number relevant service agents sa 
service agents negotiate service supplier agents ssa select highest bids provide service content best contracted satisfy ca original service request 
competitive negotiation human inspired approaches appears form human interaction requires degree explicit implicit negotiation 
surprising negotiation researchers draw human negotiation strategies 
system persuader sycara adopts casebased approach negotiation sycara belief human negotiators draw past negotiation experiences guide ones 
system consists agents union mediator task help agents reach acceptable compromise 
persuader input set conflicting goals union dispute context 
final output single plan form agreed compromise indication failure parties dispute reach agreement particular number negotiation cycles 
high level tasks propose initial compromise repair improve rejected compromise persuade parties change evaluations compromise past negotiation experiences 
cooperative negotiation negotiation strategies described applied cmas individual agents cooperative collaborate order achieve common goal best interests system 
cooperative negotiation cyclic model bussmann muller negotiating framework cooperating agents bussmann muller involves cyclic negotiation model general simple 
attempt address limitations negotiation proposals models 
cyclic nature model addresses thorny issue conflict resolution 
general strategy negotiation begins agent making proposal 
agents evaluate check proposals preferences listing preferences violated proposals 
agents update knowledge agents preferences negotiation cycle resumes new proposal proposals light newly gleaned information 
conflicts agents handled concurrent conflict resolution cycle 
collaborative planning air traffic control chu carroll carberry developed cooperative negotiation model air traffic control domain participating agents pilots air traffic control collaborate developing best plan terms interests agents group 
model attempts solve scenario key air traffic control systems country suddenly fail due freak weather conditions 
fortunately computerised air traffic control systems neighbouring countries negotiate track deal affected flights potential disastrous situation passes major incident model involves agent detecting conflicts regarding proposed actions beliefs agents initiates collaborative negotiation resolve conflicts 
negotiation involves agent modifying proposal appropriate justification modification beliefs 
way agents collaborate achieve mutual beliefs resolving conflicts 
sycara persuader system researchers adopt idea evidence improves message belief 
mentalistic notions air traffic control rao georgeff introduce collaborative agents stronger definitions characterise agents terms mentalistic notions belief desire intention 
attitudes typical epistemic logics 
representative bdi architecture prs georgeff lansky illustrated depicting bdi architecture contains key data structures agent beliefs correspond information agent world may incomplete incorrect agent desires intuitively correspond tasks allocated goals agent intentions represent desires committed achieving 
intuition agent general able achieve desires desires consistent 
agents fix subset available desires commit resources achieving 
chosen desires agent committed achieving intentions 
agent typically continue try achieve intention believes intention satisfied believes intention longer achievable 
final data structure bdi agent plan library set plans recipes specify courses actions may followed agent order achieve intentions 
bdi agent architecture interpreter responsible updating beliefs observations world generating new desires tasks basis new beliefs selecting set currently active desires subset act intentions 
interpreter select action perform basis agent current intentions procedural knowledge 
bdi agent framework currently undergoing parallel evaluation trials sydney airport receiving live data radar 
essentially aircraft agent estimates estimated time arrival intentions beliefs current wind velocity desires desired eta accessible world semantics 
agent frameworks mentalistic notions include bratman irma jennings grate grate environments 
exploits cohen levesque classic classic 
communication mas research sections briefly explored key techniques applications achieve coordination multi agent environment 
order achieve coordination agents negotiate interact exchange information need communicate 
importance agents mas understanding communication language emphasised genesereth ketchpel go far suggest entity agent communicates correctly agent communication language acl 
statement arguable fails mention attributes considered germane agenthood importance having acl acknowledged imagine society lingua franca 
acls derive inspiration speech act theory searle developed linguists attempt understand humans language day situations achieve everyday tasks requests orders promises multi agent systems possible solutions communication problem range involving communication involving ad hoc acls involving standard acls communication primitive communication data input sensors world aa agent effector commands beliefs desires plans intentions interpreter cases agent rationally infers agents plans communicating 
term tacit bargaining point works best agents goals conflicting 
study behaviour rosenschein recall section game theoretic approach characterised payoff matrices contain agents payoffs possible outcome interaction 
payoffs common knowledge agents interaction recognised communication agents decide action payoff matrix 
primitive communication restricted finite set fixed signals usually fixed interpretations hoare applied georgeff recall section planning approach coordination 
limited number types signals available approach limit coordination agents 
requests commands complex intentions expressed signals 
ad hoc acls date multi agent system applications employ ad hoc set performatives ad hoc agent communication languages 
strictly speaking explicit acls communicate depositing information shared data structure 
naturally shortcoming ad hoc approaches non trivial impossible interoperation occur agent applications built different developers 
plan passing message passing plan passing approach agent communicates total plan agent communicates total plan back 
whichever plan arrives accepted 
method communication presents severe limitations rosenschein including fact total plan passing computationally expensive 
hewitt hewitt actor languages significant application message passing dai 
actor defined computational agent carries actions response processing communication 
actions may perform send communication actors create actors agha hewitt 
works dai classic message passing protocol precise content contract net recall section 
information exchanges blackboard ai blackboard model shared memory 
repository agents write messages post partial results obtain information 
section indicated applications employ communication scheme achieve coordination 
standard acls case having acl standard compelling essential 
fipa foundation intelligent physical agents standards organisation attempting find standards 
main standards proposed date kqml 
meeting january turin fipa tending issue active discussion 
knowledge query manipulation language evolving standard acl developed part darpa knowledge sharing effort 
kqml language viewed consisting layers content message communication layers content layer specifies actual content message set performatives provided language constitute message layer tell reply ask advertise protocol delivering message subsumes content defines communication layer 
kqml number shortcomings important lack precise semantics 
cohen levesque believe real problem precise semantics agent designers certain interpretation giving performative fact designer intended developed france telecom attempts overcome limitations incorporating logic mental attitudes semantics message level 
furthermore number performatives reduced 
acls problem level semantics communication level agent sends request agent dies agent meant react obviously presents problem real world open heterogeneous multi agent systems 
section provided reader overview key approaches distributed problem solving coordination cooperation negotiation communication multi agent systems 
successful coordination key design objective multi agent system builders 
coordination mechanisms benefits multi agent paradigm disappear 
various approaches discussed relative advantages disadvantages time universally best method 
extremes theoretical methods produce results constrained environments underpinning assumptions suited developing real world systems 
hand formal techniques operate limited domains suffer lack grounding rigorous evaluation 
currently research assumes agents cooperative 
issue trust paramount importance consumers buy untrustworthy agents systems 
self interested agents may programmed different parties clearly goals mind act 
research trust usually uses tools rosenschein game theory url extends game theoretic microeconomic techniques context multiple computational agents 
game theoretic techniques allow build multiagent systems manipulated agents acting 

intelligent mobile agents chapter examine intelligent mobile agent technology 
examining topic provide description basic technology analysis various mobile agent implementations examine applications mobile agent technology applied 
working definition loose definition white 
mobile agent program migrate machine machine heterogeneous network 
program chooses migrate 
suspend execution arbitrary point transport machine resume execution 
picture client communicates remote service network client server paradigm 
second picture client creates mobile agent bidding dispatches remote service interact locally service 
service client server pc network old rpc client server computing paradigm 
service client server pc client agent client agent network new mobile agent computing paradigm 
difference rpc paradigm mobile agent approach 
mobile agent technology originally emerged advances distributed systems research cardelli 
known agents chess chess transportable agents kotz re objects joseph 
idea transporting programs network new 
batch processing considered primitive form mobile agent technology 
believe basic ability program transport new locations sufficient describe mobile agent 
refined definition existing literature chess white nwana url believe definitions sufficiently characterise essence mobile agent system 
mobile agent software entity exists software environment 
inherits characteristics agent defined chapter 
mobile agent contain models agent model life cycle model computational model security model communication model navigation model 
defines mobile agent 
consider software environment mobile agents exist 
call mobile agent environment 
definition mobile agent environment mobile agent environment software system distributed network heterogeneous computers 
primary task provide environment mobile agents execute 
mobile agent environment implements majority models appear mobile agent definition 
may provide support services relate mobile agent environment support services pertaining environments mobile agent environment built services support access mobile agent systems support openness accessing non agent software environments 
host system ma environment host service ma environment ma environment host system host system basic mobile agent architecture definitions state essence mobile agent environment exists 
mobile agent system illustrated 
mobile agent environment built top host system 
smiley faces mobile agents travel mobile agent environments 
communication mobile agents local remote represented bi directional arrows 
communication takes place mobile agent host service 
sections examine importance models mobile agent 
agent model model defines internal structure intelligent agent part mobile agent url nwana 
structure model chapter 
essence defines autonomy learning operative characteristics agent 
additionally specifies reactive proactive nature agents 
life cycle model model defines different execution states mobile agent events cause movement state url 
closely related computational model describes execution occurs 
today prominent life cycle models persistent process model adopted telescript white kotz task model adopted aglets chang lange 
powerful life cycle diagram starts start state proceeds running state persistent process executed hopefully enters death state process terminated 
mobile agent transported node process running state check pointed white agent enters frozen state 
context delivered destination node process resumed re enters running state point left 
kind life cycle powerful flexible life cycle kotz life cycle models built top model 
start death task task task running death start task life cycle aglets 
persistent process life cycle telescript 
cond cond cond cond frozen suspend checkpoint resume task persistent process life cycles 
task model second diagram starts start state 
depending set conditions proceeds network tasks 
task having state 
agent moves new node context currently executing task lost 
moving agent indicate task started re destination node 
flexibility approach reduced lose context information transport mira da silva rodrigues da silva 
computational model computational model defines mobile agent executes running state url ousterhout lindholm 
computation takes place environment facilitated form processor 
processor cpu computer processor java virtual machine lindholm 
part model set primitive instructions specified 
defines computational abilities agent 
include data manipulation instructions thread control instructions 
implementers mobile agent gain access models computational model structure computational model effects models 
general powerful computational model consider effect life cycle security communication navigational aspects mobile agent 
security model mobile agent security split broad areas chess 
involves protection host nodes destructive mobile agents second involves protection mobile agents destructive hosts 
protection hosts malicious agents mobile agent system open system chess chess 
just open system host nodes subject variety attacks old new 
attacks host security fall main categories leakage acquisition data unauthorised party 
tampering alteration data unauthorised party 
resource stealing facilities unauthorised party 
vandalism malicious interference hosts data facilities clear profit perpetrator 
traditional methods attack include eavesdropping masquerading message tampering message replay viruses 
mobile agent employ methods attack turn guarded standard techniques cryptography authentication digital signatures trust hierarchies 
mobile agent unique code executed host 
executing mobile agent automatic access hosts resources 
level access mobile agents mount attacks altering local agents propagating viruses worms trojan horses impersonating users mounting denial service attacks chess valente 
standard approach problem reject unknown code entry host 
viable solution mobile agent environment 
telescript white offers approach problem 
telescript approach white provides mechanisms applied various degrees granularity 
process agent safety security allows safe interaction agents agents host 
achieves authenticated identities protected quotas permits engine mediated protocols agent rendezvous agents host entry 
system safety controls access system supplied resources 
achieved forcing access resources effectively proxy objects 
proxies supported external file file access external handle network access control manager management functions 
network security provides authentication facilities communication privacy system level authorisation 
achieved region policies secure channels export restrictions 
key approach fact telescript interpreted language facilitates detailed control capabilities unknown process agents running top 
java gosling safe tcl borenstein provide similar security features 
fine line secure system unusable 
important chose carefully trade offs flexibility security chess protection agents malicious hosts second area deals issue protecting mobile agents hosts want scan agent information alter agents state code kill agent 
critical problem order agent run expose data code host environment supplies means agent run chess 
mobile agent unprotected host 
current consensus computationally impossible protect mobile agent malicious host janson 
tackling problem computational hard point view current research janson url looking sociological soft means enforcing host behaviour 
protection hosts achieved conventional introduced mechanisms large question remains security mobile agent 
communication model mobile agents little unable communicate entities computing environment 
entities include users agents static mobile host mobile agent environment systems corba omg distributed systems 
communication accessing services outside omg mobile agent operation ordination url url finin wiederhold mobile agents entities facilitate competitive behaviour self interested agents url 
protocol implementation communication model 
exists wide variety protocols range basic email rpc general complex kqml 
protocols vary depending types communicating entities 
humans want communicate agent kqml protocol prefer human speech interaction modern gui system 
range protocols communication probable mobile agents require communication model 
equivalent multilingual abilities humans 
numerous communication protocols comes need translation url protocols 
translation abilities internal mobile agent contracted external translation service 
similar way european union communicate human translators 
navigation model take look navigation mobility aspect mobile agents 
model concerns aspects agent mobility discovery resolution white destination hosts manner mobile agent transported 
part mobile agents receiving greatest amount attention time white chang lange kotz 
researchers area agree required naming conventions entities mobile agent system agents hosts services 
access information regarding remote mobile agent environment 
ability move mobile agent suspended life cycle state ready transportation remote host 
ability transport mobile agent suspended state remote mobile agent environment 
ability receive suspended mobile agent remote host new environment 
optional services aid navigation directory referential services aid mobile agents discovery relevant services agent visit 
current systems include rose corba trader 
new coming systems ldap url fipa url 
network topology information services supply information state network 
information help mobile agent planning decisions quality different parts underlying network 
summary models individually addressed fact highly integrated interdependent 
illustration structure simple mobile agent 
core computational model 
significant impact models 
defines address agents hosts resources important security model 
type life cycle model adopted dependent facilities computational model 
current mobile agent implementations java gosling aglets chang lange system language forced adopt task model 
computational model kotz telescript white support persistent process life cycle model 
computational security life cycle navigation agent communication simple view structure mobile agent 
security life cycle models structurally close core 
security issues aspect mobile agent provided basic level 
telescript primitive security features implemented authenticated identities protected read permits form capability secure channels engine mediated protocols receiving new agents agent meeting 
life cycle model defines valid states agent 
outer layer contains communication navigation agent models 
agent model defines intelligent agent aspects mobile agent learning collaboration functions 
communication model heavily dependent security model agents corrupted agents hosts 
navigation model dependent security model hands host transported node 
transportation process moves agent different life cycle state aglets chang lange 
proposed advantages mobile agent technology section examine various claims related mobile agents advantages pre existing computing paradigms client server computing chess chess kotz 
general discovered client server function uniquely enabled mobile agent technology 
mobile agent function proposed propose alternative existing technology chess 
believe certain cases mobile agents advantages conventional approaches design implementation execution stages 
examine proposed advantages efficiency mobile agents consume fewer network resources move computation data data computation url 
reduction network traffic communication protocols involve interactions especially security measures enabled 
causes lot network traffic 
mobile agents package conversation ship destination host interactions take place locally chess hurst 
asynchronous autonomous interaction tasks encoded mobile agents dispatched 
mobile agent operate asynchronously independent sending program joseph hurst 
example mobile device dispatching autonomous search agent fixed network disconnecting time collect results search 
interaction real time entities real time entities software controlling atm switch safety system nuclear installation require immediate responses changes environment 
controlling entities potentially large network incur significant latencies 
critical situations nuclear system control latencies intolerable 
mobile agents offer alternative 
dispatched central system control real time entities local level process directives central controller krause url 
dynamic adaptation related topic mobile agents ability autonomously react changes environment 
changes communicated mobile agents mobile agent environment krause hurst 
dealing vast volumes data vast volumes data stored remote locations weather information systems processing data performed local data transmitting network url 
robustness fault tolerance ability mobile agents react dynamically adverse situations easier build fault tolerant behaviour especially highly distributed system url hurst 
support heterogeneous environments computers networks mobile agent system built heterogeneous character 
mobile agent systems generally computer network independent support transparent operation chang lange kotz cardelli 
server behaviour intelligent network domain mobile agents proposed way behaviour network entities routers dynamically supplying new behaviour url 
support electronic commerce mobile agents build electronic markets 
mobile agents embody intentions desires resources participants market white url 
convenient development paradigm design construction distributed systems easier mobile agents 
mobile agents inherently distributed nature natural view distributed system cardelli chang lange 
summary alternatives mobile agents queued rpc proxy servers client server computing 
problem alternative techniques suitable certain applications chess 
mobile agent system hand single unified framework wide range distributed applications implemented efficiently easily 
mobile agent implementations section review concerns current state art mobile agent systems 
reviews couple enabling technologies mobile agent system built proceeds review important mobile agent systems today 
mobile agent technology serious development 
months useful mobile agent systems appeared 
today mobile agent systems built top java system gosling tcl tk system ousterhout 
projects attempted build mobile agent systems ground 
telescript white system 
table important mobile agent systems table list important mobile agent systems 
system status organisation java enabling version sun microsystems 
tcl tk enabling version sun microsystems obliq enabling research digital aglets java alpha ibm japan tcl tk alpha dartmouth college telescript custom old costly general magic mole baumann java old university ara url tcl old university kaiserslautern tacoma tcl research cornell university university java tcl tk obliq systems enable building mobile agent frameworks 
review obliq java 
remaining entries mobile agent systems 
review important aglets telescript ara 
obliq obliq cardelli lexically scoped un typed interpreted language supports distributed objectoriented computation 
obliq computation may involve multiple threads control address space multiple address spaces machine heterogeneous machines local network multiple networks internet 
obliq objects state data local site 
obliq computations roam network maintaining network connections 
ability roam satisfies major requirement mobile agent technology 
obliq oldest mobile agent systems 
impractical implementation system 
proved useful prototyping mobility algorithms mobile agents 
similar languages include python url april mccabe clark 
java java environment gosling new approach distributed computing 
interpreted object oriented language library set 
main features simple familiar object oriented language 
architecture neutral portable robust system 
interpreted dynamic program execution 
comprehensive perfect security system 
multithreaded execution synchronisation threads 
sophisticated comprehensive networking capabilities 
support distributed systems remote object invocation rmi object serialisation os facilities 
taken individually characteristics discussed variety software development environments 
completely new manner java run time system combined produce flexible powerful programming system supports distributed computing 
java hand contains mobile agents 
simply enabling technology mobile agents 
role received lot attention resulted significant revisions important rmi os facilities 
aglets system chang lange represents leap forward evolution executable content internet introducing program code transported state information 
aglets java objects move host internet 
executes host suddenly halt execution dispatch remote host resume execution 
moves brings program code data 
conceptually mobile agent supports ideas autonomous execution dynamic routing itinerary 
leverage facilities java system 
aglets comprehensive mobile agent system features 
globally unique naming scheme agents navigation security model 

travel itinerary specifying complex travel patterns multiple destinations automatic failure handling navigation model 

white board mechanism allowing multiple agents collaborate share information asynchronously communication model 

agent message passing scheme supports loosely coupled asynchronous synchronous peer peer communication agents communication model 

network agent class loader allows agent java byte code state information travel network navigation model 

execution context provides agents uniform environment independent actual computer system executing computational model 
unfortunately life cycle model agent quite simple 
state maintained travels host host 
preferable current execution context transported state 
research cambridge university england possible java months 
aglets possibly applicable mobile agent technology moment time 
kotz simple platform independent mobile agent system 
currently lacks degree sophistication aglets system achieved 
built top tcl tk scripting system lacks power flexibility full computer language java 
agent model simply tcl script computational model tcl tk scripting language 
navigation model single command agent jump 
command appear agent cause state execution context frozen transported specified host 
ability transport execution context gives tcl agents sophisticated life cycle model aglets 
mobile agent environment provide navigation support services 
commands agent send agent receive agent meet communication model 
simple system allowing asynchronous stream communication 
pgp encryption safe tcl module basis security model 
security quite basic relatively untested stage little exposure outside dartmouth college 
telescript telescript white object oriented mobile agent language 
claims platform enables creation active distributed network applications 
main achievements date involvement sony magic link project magic cap product research electronic market places 
telescript main concepts agents places go instruction 
agents travel place place go instruction 
interact services located places meet instruction 
telescript new platform independent system consisting language interpreter called telescript engine 
places telescript equivalent concept mobile agent environment static services located host 
computational model telescript language agent model simply telescript object 
telescript agent maintains execution state travel resulting flexible life cycle model 
special instructions implement part models 
navigation model implemented concept places go instruction 
meet connect instructions basis communication model 
security model implemented authority region identity concepts 
access resources granted permits 
telescript technically sophisticated mobile agent system costly 
telescript engine requires significant computer resources run mbytes memory 
financially expensive piece software inhibits acceptance general mobile agent system nearly mobile agent developers 
contrasts strongly java aglets tcl tk combinations free 
noted general magic making changes system 
involved agent society url corba standards submission 
ara ara platform mobile agents heterogeneous networks 
ara perceives mobile agent program ability change host machine execution preserving internal state 
preserving internal state mobile agent heavy emphasis placed security issues 
ara aims provide comprehensive mobile agent functionality time leveraging possible established programming models languages 
order leverage current programming models ara provides core exists unmodified host operating system 
core connected modified interpreter destination language order provide mobile agent facilities programs language 
noted mobility security functions provided orthogonal fashion interfere normal execution programs 
currently interpreters programming languages adapted ara system java tcl 
ara provides mobility program level resulting large course grained mobile agents 
type mobile agent suitable circumstances mobile computing communication 
summary systems represent current state art mobile agent technology 
telescript system greatly advanced design mobile agent technology favour cheaper alternatives aglets 
aglets advantage adopted known java system implementation language 
noted systems cut 
unsolved issues 
security possibly single greatest issue especially protection mobile agents 
current concentrates security host white 
ara investigating mobile agent partial protection authentication certificates 
ara approaching issue computational point view swedish institute computer science janson janson agent society url believe computational protection mobile agent fundamentally impossible 
advocate enforced protection mobile agent 
alternative implementation mobile agent system supports communication mechanism 
java systems aglets standard method invocation mechanism 
telescript meeting channel communication system 
communication agents different agent systems 
ara support form inter agent system communication common ara core 
system supporting access agent corba principle able communicate mobile agent systems supports corba 
life cycle model leading mobile agent system aglets task 
ties users single model reduces flexibility implement system application specific life cycle models 
thesis case point 
technological push mira da silva rodrigues da silva powerful model persistent process model allow greater flexibility creating specialised mobile agents 
transportation mechanism necessary agent mobility place required facilitating resource discovery patterns agent movement 
omg requested submissions mobile agent facility chang hoped leverage plethora existing corba services omg 
apparent mobile agent development infancy 
practical systems emerging research 
aglets practical system available moment change omg mobile agent facility reaches 
applications mobile agents section review shall examine applications mobile agent technology 
study mobile agent technology chosen preference competing technologies 
mobile agent systems sufficiently developed consider tools projects 
majority projects mobile agent technology research phase 
table representative list projects mobile agent technology 
majority projects telecommunications mobile computing communications 
reflects current belief mobile agent technology best applied areas 
table representative sample mobile agent projects industry academia system mobile agent technology organisation custom tu berlin rover custom mit ibm amp custom ibm magic cap telescript general magic corba java gmd fokus tacoma cornell university university mobile project custom java carleton university summarise system sections 
project url attempts bring electronic market places mobile user 
telescript propose mobile agent represent user market place 
distinction types agent 
mobile user agent represents human consumers market place 
secondly ordinary mobile agents services 
rover mobile application toolkit rover toolkit joseph combines re dynamic objects queued remote procedure calls provide unique services roving mobile applications 
relocatable dynamic object mobile agent exchanged clients servers order reduce communication requirements hostile environment 
queued remote procedure calls form communication model permits mobile agents interact agents services locally remotely situated 
ibm agent meeting point mobile communication concerns creation framework mobile agents implement secure remote applications large public networks mobile computing devices laptops pdas 
key idea design agent meeting point amp chess mobile agents interact support services 
believed mobile agents offer advantages system reduction communication traffic low bandwidth wireless links 
ability engage high bandwidth communication servers accessing remote services 
ability interact big systems detailed knowledge capabilities ahead time 
services having agents take residence server provide alternative interfaces server 
magic cap magic cap url near total intelligent personal communications system 
uses mobile agent technology telescript allow different forms communication phone fax email intelligently interact user irrespective geographical location 
gmd fokus technical university berlin recognised possible benefits mobile agent technology may inject telecommunications particularly respect service scalability problem inherent intelligent networks 
realised value intelligent mobile agents provision telecommunication services may questionable application domains traditional rpc mechanisms adequate 
currently developing mobile agent architecture krause considers remote programming remote procedure call potentially complementary mutually exclusive technologies 
belief technology enable telecommunication services provided instantly customised directly locations intelligence needed enable intelligence demand 
url project running years 
provides critical weather information meteorological office norway regarding weather conditions norway significant sea west coast 
increase access meteorological data decided leverage mobile agent technology johansen 
mobile agents created client side www browser sent servers take content retrieve necessary information vast meteorological data stores 
example mobile agent technology process huge amounts data located remote hosts 
mobile project project url concerns advanced network management mobile agent technology 
believe mobile agent technology overcome problems legacy systems explore new intelligent distributed management techniques mobile agents deliver java platform real simulated network management 
mobile agents system called 
believed support capabilities mobile agent enabled network management system service delegation extensible modifiable services fault management diagnosis recovery plug play networks auto provisioning self repairing network interface legacy systems network security 
summary summary evident significant attention paid application mobile agent technology areas telecommunications mobile computing communications 
summary chapter intelligent mobile agents examined requirements mobile agent technology reviewed early mobile agent implementations surveyed selection telecommunication applications 
evident past twelve months research mobile agent technology passing fad 
set accelerate companies invest technology matures 
mobile agent technology embraced developers believe holds promise believe technology key role telecommunication systems 

summary review surveyed diverse literature agent technology specifically research areas intelligent user interfaces distributed agent technology mobile agent technology 
summarise relevant chapters turn chapter presents overview existing approaches creation intelligent interface agents 
examine possible technologies creating key components systems user models possible way forward area 
conclude pointing relevance area telecoms companies role internet service providers 
chapter overview existing key approaches distributed problem solving coordination cooperation negotiation communication multi agent systems diverse applications 
successful coordination key design objective multi agent system builders 
coordination mechanisms benefits multi agent paradigm disappear 
extremes theoretical methods produce results constrained environments underpinning assumptions suited developing real world systems 
hand formal techniques operate limited domains suffer lack grounding rigorous evaluation 
currently research assumes agents cooperative 
issue trust paramount importance consumers buy untrustworthy agents systems 
issue needs tackled effectively area 
chapter intelligent mobile agents examined requirements mobile agent technology reviewed early mobile agent implementations surveyed selection telecommunication applications 
evident past twelve months research mobile agent technology passing fad 
set accelerate companies invest technology matures 
mobile agent technology embraced developers believe holds promise believe technology key role telecommunication systems 
essence message review agents stay diversity wide range applicability broad spectrum companies investing 
move information age information organisation invest agent technology may committing commercial hara 

agha hewitt agha hewitt concurrent programming actors object oriented concurrent programming tokoro eds mit press cambridge ma 
balabanovic 
balabanovic adaptive web page recommendation service 
proceedings autonomous agents marina del rey ca usa bates bates nature characters interactive worlds oz project 
virtual realities industry culture ed 

baumann baumann 
mole java mobile agent system 
proceedings nd ecoop workshop mobile object systems july linz austria 
bond gasser bond gasser readership distributed artificial intelligence morgan kaufmann san mateo ca bratman bratman israel pollack plans resource bounded practical reasoning computational intelligence pages 
bussmann muller bussmann muller negotiation framework operating agents dean ed proc sig centre university keele pages 
distributed intelligent agents solution management complex services intelligent agents telecom applications ecai workshop proceedings 
cammarata cammarata mcarthur strategies cooperation distributed problem solving proceedings international joint conference artificial intelligence pages 
cardelli cardelli language distributed scope 
computing systems 
carpenter grossberg carpenter grossberg adaptive resonance theory art handbook brain theory neural networks 
ed 
arbib 
pub 
mit press 
chaib draa chaib draa connection micro macro aspects agent modelling proceedings international conference autonomous agents 
chang lange chang lange mobile agents new paradigm distributed object computing www 
oopsla workshop 
open agent architecture integrating multimedia services 
proceedings aa marina del rey california 
chavez maes chavez maes kasbah agent marketplace buying selling goods proceedings international conference practical application intelligent agents multiagent technology 
chess chess harrison mobile agents idea 
technical report march ibm watson research center ny 
chess chess grosof harrison levine tsudik agents mobile computing 
technical report october ibm watson research center ny 
chu carroll carberry chu carroll carberry conflict detection resolution collaborative planning intelligent agents ii lecture notes artificial intelligent heidelberg springer verlag 
cohen levesque cohen levesque intention choice commitment artificial intelligence pages 
cohen levesque cohen levesque communicative actions artificial agents proceedings international conference multi agent systems san francisco cambridge aaai press pages 
meyer lesser multistage negotiation distributed planning coins technical report university massachusetts amherst boston 
corkill corkill hierarchical planning distributed environment proceedings sixth ijcai cambridge ma morgan kaufmann san mateo ca pages 
davies 
davies weeks information agents world wide web 
bt technical journal october 
davis smith davis smith negotiation metaphor distributed problem solving artificial intelligence pages 
decker decker distributed problem solving techniques survey ieee trans 
syst 
man pages 
doorenbos doorenbos etzioni weld scaleable comparison shopping agents world wide web technical report uw cse university washington 
durfee durfee lesser corkill coherent cooperation communicating problem solvers ieee transactions computers ii pages 
durfee durfee lesser corkill trends cooperative distributed problem solving ieee knowledge data engineering pages 
interface agent network supervision 
proceedings ecai budapest 
etzioni weld etzioni weld softbot interface internet 
communications acm 
farmer farmer guttman swarup security mobile agents issues requirements 
proceedings th national information systems security conference october baltimore usa 
finin wiederhold finin wiederhold overview kqml 
dept computer science stanford university usa 
fischer fischer muller sheer intelligent agents virtual enterprises proceedings international conference practical application intelligent agents multi agent technology 
foner 
foner multi agent referral matchmaking system 
proceedings autonomous agents marina del rey ca usa 
galbraith galbraith organisation design addison wesley 
garcia molina yan garcia molina yan 
index filtering information filtering vector space model icde 
genesereth ketchpel genesereth ketchpel software agents communications acm pages 
genesereth genesereth ginsberg cooperation communication proc 
annual assoc 
artificial intelligence philadelphia pages 
georgeff lansky georgeff lansky reactive reasoning planning proceedings sixth national conference artificial intelligence aaai pages seattle wa 
georgeff georgeff communication interaction multi agent planning proceedings third national conference artificial intelligence washington morgan kaufmann san mateo california pages 
georgeff georgeff theory action multi agent planning proceedings fourth national conference artificial intelligence austin texas san mateo california pages 
gosling gosling java language environment white 
sun microsystems 
vendors agent technology seminar intelligent agents business applications november london 
hewitt hewitt viewing control structures patterns passing messages artificial intelligence pp 
hurst hurst cunningham somers mobile agents smart messages 
appear proceedings st international workshop mobile agents april berlin germany 
jennings jennings specification implementation belief desire joint intention architecture collaborative problem solving journal intelligent cooperative information systems pages 
johansen johansen van renesse schneider tacoma distributed system 
technical report dept computer science university norway 
joseph joseph tauber gifford frans kaashoek rover toolkit mobile information access 
proceedings th acm symp 
operating systems principles december 
kearney kearney smith emergent behaviour multi agent economics simulation cohn ed proceedings th european conference artificial intelligence london john wiley 
hewitt hewitt scientific community metaphor ieee trans 
syst 
man sms pages 
kotz kotz gray rus transportable agents support worldwide applications 
proceedings th acm sigops european workshop september ireland 
krause krause dpe platform mobile agents electronic service markets 
submission third international symposium autonomous decentralised systems april berlin germany lashkari lashkari metral maes collaborative interface agents proceedings twelfth national conference artificial intelligence vol 
aaai press seattle wa august 
lesser corkill lesser corkill functionally accurate cooperative distributed systems ieee transactions systems man cybernetics pages 
lesser corkill lesser corkill distributed vehicle monitoring testbed tool investigating distributed problem solving networks ai magazine pages 
lester lester fitzgerald stone pedagogical design studio exploiting artifact task models constructivist learning 
proceedings iui orlando florida 
lindholm yellin lindholm yellin java virtual machine specification 
addison wesley 
luce raiffa luce raiffa games decisions john wiley sons 
maes maes 
intelligent software 
proceedings intelligent user interfaces orlando florida 
mazur mazur 
learning behaviour 
ed 
mazur pub prentice hall mccabe clark mccabe clark april agent process interaction language 
november 
janson intentions intelligent screening agent personal communication system intelligent agents telecoms applications ecai workshop proceedings 
moukas 
moukas 
evolving multi agent information filtering solution amalthaea 
proceedings autonomous agents marina del rey ca usa dynamics bargaining games englewood cliffs nj prentice hall 
nwana nwana lee jennings coordination software agent systems bt laboratories internal report 
nwana nwana software agents overview 
knowledge engineering review november 
hare jennings hare jennings 
eds foundations distributed artificial intelligence john wiley sons 

scalable agent information retrieval engine 
proceedings autonomous agents marina del rey ca usa 
omg omg corba specification ptc 
ousterhout ousterhout tcl tk toolkit 
addison wesley 
pandit pandit selection recognition agent instant access relevant information operations 
proceedings intelligent user interfaces orlando florida 
parunak parunak manufacturing experience contract net gasser huhns 
eds distributed artificial intelligence morgan kaufmann quinlan quinlan 
programs machine learning 
california morgan kaufmann 
janson janson personal security assistance secure internet commerce 
new security paradigms acm press sept 
janson janson simulated social control secure internet commerce 
new security paradigms acm press sept 
rao georgeff rao georgeff bdi agents theory practice proceedings international conference multi agent systems icmas san francisco usa june 
ritter ritter self organising feature maps 
brain theory neural networks ed 
arbib 
pub mit press rose rose little black book mail bonding osi directory services 
prentice hall 
rational interactions cooperating intelligent agents ph dissertation computer science department stanford university stanford ca 
rosenschein genesereth rosenschein genesereth deals rational agents proceeding intelligent agents conference artificial intelligence th los angeles pages 
rosenschein zlotkin zlotkin rules encounter designing contentions automated negotiation computers mit press 
rumelhart rumelhart hinton williams learning internal representation error propagation book rumelhart mcclelland parallel distributed processing explorations microstructure cognition volume bradford books pages 
direct manipulation comprehensible predictable controllable user interfaces 
proceedings intelligent user interfaces orlando florida 
searle searle speech acts cambridge ma cambridge university press 
clark clark process oriented programming agent network management intelligent agents telecoms applications ecai workshop proceedings 
smith davis smith davis frameworks cooperation distributed problem solving ieee transactions systems man cybernetics bol 
smc jan 
sycara sycara multi agent compromise negotiation gasser huhns 
eds distributed artificial intelligence morgan kaufmann 
thomas fischer thomas fischer agents web 
proceedings intelligent user interfaces orlando florida thompson thompson frances mitchell 
eds market hierarchies networks coordination social life sage publications 
crabtree winter agents mobility information bt technology journal vol october gini gini virtual marketplace proceedings international conference practical application intelligent agents multi agent technology 

ed system approach small group interaction nd ed 
addison wesley reading ma 
url cselt fipa url chess things go bump night 
www research ibm com massive bump html 
url www cs uit dos url www sce carleton ca shtml url www cs de cs research english projects html url www uni kl de ag ara ara html url www com url www umich edu ldap ldap html url www agent org url www python org url bargain finder web page url bf ac com bf url web web page url www media mit edu projects url web page url www net 
url 
altavista search engine web page www altavista digital com url 
infoseek search engine web page www infoseek com url 
yahoo web directory starting point www yahoo com url dis cs umass edu research negotiation html url cselt fipa torino cfp htm url sen formal specification resolve conflicts contracting agents euler mcs edu sandip dai html url www com products technology brochure html 
prolog tool user modelling university konstanz konstanz germany 
vickery vickery counterspeculation auctions competitive sealed tenders journal finance pages 
watkins watkins learning delayed rewards thesis university england 
knowledge model negotiation shareable perspectives proceedings th international workshop dai texas 
werner operating agents unified theory communication social structure 
distributed artificial intelligence vol 
ed 
gasser huhns pub 
morgan kaufmann white white telescript technology foundation electronic market place 
general magic white 
wittig 
wittig 
editor archon architecture multi agent systems 
ellis horwood publisher 
