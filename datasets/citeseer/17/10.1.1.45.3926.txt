collision detection geometric models survey ming lin stefan gottschalk university north carolina survey state art collision detection general geometric models 
set models include polygonal objects spline algebraic surfaces csg models deformable bodies 
number techniques systems available contact determination 
describe body algorithms reduce number pairwise intersection tests 
goal collision detection known interference detection contact determination automatically report geometric contact occur occurred 
geometric models may polygonal objects splines algebraic surfaces 
problem encountered computer aided design machining cad cam robotics automation manufacturing computer graphics animation computer simulated environments 
collision detection enables design tolerance verification engineering analysis assembly dis assembly motion planning animated articulation walkthrough tasks involve contact analysis spatial reasoning static moving objects 
application areas collision detection considered major computational bottleneck 
collision detection essential component robot motion planning control helps steer robot away surrounding obstacles 
virtual prototyping refine designs productions physical prototypes initial design stage 
collision detection significant aid simulation engineering analysis 
experiments impractical conduct simulated support design tunnels 
example automobile crash test ergonomics analysis done systematically lower collision detection geometric models survey solid geometry implicit surfaces parametric surfaces constructive convex models models polygonal models structured polygon nonconvex 
taxonomy model representations cost controlled varied conditions collision detection algorithms computer simulated environment 
survey state art collision detection geometric models represented collection polygons smooth surfaces 
rest organized manner 
section classification collision detection problem 
briefly survey algorithms available polygonal models section 
describe state art collision detection general geometric models discuss advantages shortcomings method section 
section highlights techniques reducing number pairwise intersection tests computer simulated environment consisting multiple static moving objects 
list number public domain packages collision detection section 
problem domain classification wide range techniques including hierarchical representation geometric reasoning algebraic formulations spatial partitioning analytical methods optimization methods proposed 
algorithm design depends model representation desired query types simulation environment 
model representations types model representations cad cam graphics 
possible taxonomy adopt ease organization shown 
ming lin stefan gottschalk polygonal models polygonal objects commonly models computer graphics modeling 
simple representation 
versatile 
hardware accelerated rendering polygon widely available 
general class polygonal model polygon soup collection polygons geometrically connected topology information available 
polygons form closed manifold model defined inside outside proper solid 
geometric algorithms rely structure 
object defined closed manifold convex additional structure exploited collision detection algorithms 
constructive solid geometry constructive solid geometry csg forms objects primitives blocks spheres cylinders cones tori combining set theoretic operations union intersection set difference rr hof 
strength csg representation enables intuitive design process building shapes means cutting intersection set difference joining union simple shapes form complex ones 
finding collision witness easier cam 
difficulty csg certain operations rounding edge join difficult describe csg operations 
furthermore accurate boundary surface representation useful rendering interference computations hard compute csg representations hof 
implicit surfaces implicit surfaces defined implicit functions 
defined mappings space real numbers 
implicit surfaces loci points 
function defines unambiguously inside model outside 
consequently implicit surfaces generically closed manifolds desirable property 
function polynomial called algebraic includes algebraic surfaces sed higher order functions bw convolution surfaces 
primitives csg systems 
special case algebraic surfaces quadrics second degree polynomials represent slabs cones spheres cylinders unified framework 
widely collision detection geometric models survey number applications number specialized algorithms developed intersection computations quadrics mg sj 
parametric surfaces parametric surfaces mappings subset plane space 
implicit surfaces parametric surfaces generally closed manifolds 
csg implicit surfaces represent complete solid model description surface boundary 
parametric surfaces easier render compared special class called non uniform rational nurbs gained popularity cad lr far 
nurbs nice properties easier operate 
represented patches 
worth noting rational parametric surfaces nurbs patches proper subset algebraic surfaces 
different types queries simplest case want know models touch 
find parts touch find intersection 
want know separation objects disjoint minimum euclidean distance 
penetrate minimum translational distance required separate cc 
know objects placements motions collision 
eta computation borrowing phrase estimated time arrival 
different applications need different queries 
distance information useful computing interaction forces penalty functions robot motion planning lat dynamic simulation lin mc 
intersection computation important physically modeling animation systems know contacts order compute collision response 
eta solution permits control time step simulation lin lm 
simulation environments special characteristics simulation considered designing choosing appropriate algorithm collision detection 
examine common cases 
ming lin stefan gottschalk pair processing vs processing problem involves pair models call pair processing 
different parts call processing classic problem celestial mechanics bodies moving mutual gravitational influence 
motions static vs dynamic queries executed repeatedly models environment objects rotate translate possibly subject non rigid transformations successive time steps 
dynamic environments geometric relationship may differ slightly previous step motion steps relatively small 
algorithms capitalize property said exploit temporal coherence 
order exploit temporal coherence algorithms require bounds lin lm motion objects objects velocities accelerations algorithms ones interval arithmetic need closed form expression motion function time 
algorithms demand information motion need placements objects successive time steps 
problem involves objects motion 
example model entire power plant design engineers may interested performing static interference checks components entire plant tolerance verification access clearance 
rigid bodies vs deformable models component time introduced possibility models deform time 
assuming deformations time steps small algorithms may able exploit temporal coherence case 
collision detection polygonal models earlier collision detection focused algorithms convex polytopes 
number algorithms asymptotic performance proposed computational geometry literature 
hierarchical representations log algorithm dk polytope polytope overlap problem number vertices 
elegant approach robustly implemented collision detection geometric models survey 
theoretical practical approaches linear complexity linear programming problem known meg sei 
minkowski difference convex optimization techniques gjk compute distance convex polytopes finding closest points 
applications involving rigid motion geometric coherence exploited design algorithms convex polyhedra local features bar lc lin 
local properties earlier motion planning algorithms don objects come contact 
algorithms exploit spatial temporal coherence successive queries practice 
number hierarchies collision detection general polygonal models 
typical examples bounding volumes include axis aligned boxes cubes special case spheres chosen fast overlap tests 
structures include cone trees trees octrees sam sphere trees hub qui trees bounds cam binary space partitions bsp nat extensions multi space partitions bv spatial partitionings space time bounds dimensional testing cam hub 
hierarchical methods performing rejection tests objects far apart 
objects close proximity multiple contacts algorithms subdivision techniques check large number bounding volume pairs potential contacts 
cases performance slows considerably 
focused tighter fitting bounding volumes 
gottschalk glm fast algorithm system called rapid interference detection oriented bounding boxes approximate geometry better axis aligned bounding boxes 
barequet bcg oriented bounding boxes computing hierarchical representations surfaces performing collision detection 
klosowski discrete orientation polytopes dops superior approximations bounded geometry 
proposed higher order bounding volume designed match curvature underlying geometry especially suited patches nurbs 
algorithms non polygonal models geometric solid modeling problem computing intersection surfaces represented splines algebraic surfaces received great deal attention pra hof 
surfaces prob ming lin stefan gottschalk lem corresponds computing components intersection curve robustly accurately 
includes curves surface intersections sp hof hof md md km 
algorithms focussed accurate computation intersection set static models 
collision detection dealing restricted version problem 
surfaces want know intersect 
furthermore interested dynamic environments composed moving objects 
general spline surfaces quick solution problem intersect common geometric contact 
simplest solution subdivision checking control polytopes convex bounding boxes collision 
constructive solid geometry models csg objects defined set operations intersection problem conceptually trivial 
test object touching simply take set intersection 
result null set objects disjoint collide requires efficient ways compute intersection yields empty set 
called null object detector nod hof man 
possible solution involves computing boundary representation resulting solid 
efficient accurate robust computation boundary remains hard problem csg models described curved primitives hof 
bounds cameron cam introduced bounds means speeding intersection evaluation 
points space applied expression tree csg object order yield classification point 
classical evaluation intersection operation generates large number sample points classified set points sufficient determine intersection empty 
bounds intended restrict scope spatially sample points sufficient determine emptiness intersection 
practice cameron observed bounds increased speed intersection testing orders magnitude csg system cam 
collision detection geometric models survey interval arithmetic csg combinations implicit functions duff employs interval arithmetic evaluate implicit functions box regions space determine regions lie entirely inside entirely outside potentially laying boundary implicit surfaces 
familiar point classification scheme extended regions obtained adaptive subdivision space 
technique approximate 
may able determine contact status disjoint models touching 
duff applies approach list csg models algorithm 
extends method distance computation eta problem closed form solution motions objects known 
method adaptive subdivision space models embedded precision results limited subdivision 
allowing finite precision method extremely robust concise formulation problem easy implement 
expensive method perform real time collision detection large models current computing hardware 
parametric surfaces techniques finding intersection parametric surfaces subdivision methods lattice methods tracing methods analytic methods 
practitioners combination 
survey techniques pra hof 
subdivision methods parametric surfaces subdivision methods parametric surfaces recursively subdividing domain surface patches tandem examining spatial relationship patch subsections 
depending various criterion subsections subdivided recursively examined recursion branch terminated 
cases intersection curve distance function solution known finite precision finely domain subdivided maps space 
subdivision domain interval arithmetic snyder uses interval arithmetic adaptively subdivide domains surfaces refine approximation intersection curve ming lin stefan gottschalk satisfactory precision 
interval arithmetic obtain conservative bounding boxes space surface subsections 
method determine certainty contact occured report conservative upper lower bounds patches closest approach space 
intersection said occured lower bound distance remains zero 
algorithm handle distance queries refining bounds patch subdivisions directed priority queue 
subdivision domains time varying parametric surfaces time varying surface time dependent mapping parameter patch space theta 
dependence time reflect motion deformations time 
herzen barr adaptively subdivide domain mappings subregions lipschitz conditions bounds various derivatives mappings obtain bounds scope subregion range space 
priority queue direct subdivision locate earliest pair subregions 
containing smallest overlap space 
eta algorithm deformable parametric surfaces robust accurate desired precision 
disadvantages time consuming fundamentally approximate requires motion models expressed closed form functions time motion functions available convenient 
improved interval arithmetic methods deformable surfaces snyder improved herzen introducing conditions prune search space collisions 
added tangency condition states moment contact curved surfaces point common opposing normals surfaces tangent 
stated converging points surfaces moving 
consequently considering pair domain patches potential collision eliminated consideration don overlap spatially don contain opposing normals don contain converging components respective velocity intervals derivatives interval valued functions 
helps speed convergence solution set 
collision detection geometric models survey lattice methods intersection curve surfaces space preimage curve domains patches 
lattice methods attempt locate specific points preimages selecting curves parameter held constant criss cross surface lattice pra 
selecting value patches reduces dimensionality search space free variable patch 
express points surface intersection zeroes function analysis degree polynomial derivatives allow perform root trapping techniques robustly find intersection preimage meets curve 
difficulty method intersection curve small closed loop missed curves occurs surfaces grazing barely 
cases lattice methods subdivision methods find starting points tracing methods 
tracing methods tracing method begins point known intersection curve mc km 
intersection curve traced sufficiently small steps edge patch curve returns close loop 
easy check meetings patch boundary difficult know tracing point returned starting position requires arbitrarily chosen tolerance 
frequently posed initial value differential equations problem solving system algebraic equations mc km 
intersection point surfaces intersection curve mutually orthogonal normals surfaces 
consequently vector field tracing point follow cross product normals 
analytic methods analytic methods usually involve parametric surfaces obtaining implicit representation model sag 
parametric surface mapping space space implicit surface mapping space real numbers 
substituting parametric functions implicit function obtain scalar function ming lin stefan gottschalk locus roots scalar function map curves plane preimages intersection curve kpp mc km sar 
representation algebraic plane curve efficient algorithms proposed number researchers km 
implicit surface pentland williams pw proposed implicit functions represent shape property inside outside functions collision detection 
restriction algorithm drawback terms robustness uses point samples 
lin manocha efficient algorithms curved models composed spline surfaces algebraic surfaces undergoing rigid motion extension earlier algorithm polyhedra hierarchical representation equation solving techniques lm lm lm 
algorithms low degree primitives 
processing environments consisting possibly moving objects performing pairwise interference checks computational bottleneck large 
order eliminate unnecessary pairwise checks speed runtime performance techniques proposed 
algorithms complexity nlog spheres hss rectangular bounding boxes ede corresponds actual number overlaps 
fastest practical algorithms assume knowledge maximum acceleration velocity exploit spatial arrangement reduce number pairwise interference tests assuming knowledge trajectories 
scheduling scheme bounds velocities accelerations estimate lower bounds potential collision times 
scheduling algorithms lin lm maintain queue object pairs collide sorted lower bounds time collision 
lower bounds time collision calculated adaptively updated critical event collision occurs 
technique successfully incorporated impulse dynamics simulator mc reducing frequency collision checks speeding dynamics simulation 
collision detection geometric models survey sorting sweep prune cohen algorithms system collide spatial temporal coherence large environments composed multiple moving objects 
number object pair interactions reduced pairs close proximity sorting axis aligned bounding boxes aabbs surrounding objects 
output sensitive run time linearly dependent number objects environment quadratic dependence 
uses dynamically sized aabbs linear sweep prune geometric coherence quickly reject object pairs collide time step 
interval tree intersection tests interval tree ede static query rectangle intersection problem 
query interval intersection takes logn time number reported intersection number intervals 
reporting intersection rectangles done nlogn total number intersecting rectangles 
uniform spatial subdivision divide space unit cells volumes place object bounding box cell ove 
check collisions examine cell occupied box verify cell shared objects 
difficult set near optimal size cell requires tremendous amount allocated memory 
size cell properly chosen computation expensive 
environment objects uniform size tur ideal algorithm especially suitable parallelization 
overmars shown hash table look entry storage space perform point location queries constant time ove 
public domain software packages public domain systems applicable polygonal models applicable large environments composed multiple moving objects 
nearly impossible compare different algorithms systems fairly performance varies depending simulation ming lin stefan gottschalk environments models varieties contacts query types motion description factors 
list chronological order release briefly describe special characteristics 
collide collision detection system www cs unc edu geom collide html 
collide interactive exact collision detection library environments composed convex polyhedra union convex pieces expected constant time incremental distance computation algorithm lc lin algorithms check collision multiple moving objects 
rapid interference detection system www cs unc edu geom obb html 
rapid robust accurate polygon interference detection library pairs unstructured polygonal models 
applicable polygon models contain adjacency information obey topological constraints 
suitable close proximity configurations highly smooth surfaces 
glm 
collide collision detection system www cs unc edu geom collide 
collide collision detection library large dynamic environments unites processing algorithm pair processing algorithm rapid 
designed operate large numbers static moving polygonal objects allow dynamic addition deletion objects timesteps 
distance computation convex polytopes www comlab ox ac uk users stephen cameron distances html package enhanced dynamic version cam cam distance routine gilbert johnson keerthi gjk allows tracking distance pair convex polyhedra 
requires list edges convex polyhedra best performance 
performance comparable lin canny convex polytope overlap test 
collision detection geometric models survey solid interference detection system www win tue nl cs tt solid solid library interference detection multiple dimensional polygonal objects including polygon undergoing rigid motion 
performance applicability comparable collide 
clip collision detection system www merl com people mirtich html voronoi clip clip algorithm low level collision detection algorithm polyhedral objects improvement closest feature tracking algorithm lc lin 
operates pair convex polyhedra nonconvex hierarchies 
addition distance computation report penetration points estimated penetration distance overlapping models 
despite abundant wealth literature collision detection open research issues 
remains done detecting contacts deformable models accurately efficiently 
dynamic simulation computing collision response requires robust interactive computation closest features contact points general geometric models rapid calculation penetration distance 
problem especially difficult models smooth surfaces concavities 
new challenges applying collision detection algorithms massive models consist millions primitives large fit main memory 
may include developing external memory algorithms dynamic pre fetching techniques parallel computing methods collision detection 
acknowledgment acknowledge partial support provided intel honda reviewers suggestions 
alonso serrano 
solving collision detection problem 
ieee computer graphics applications 
ming lin stefan gottschalk ab bajaj 
computations algebraic curves 
lecture notes computer science volume pages 
springer verlag 
bar baraff 
curved surfaces coherence non penetrating rigid body simulation 
acm computer graphics 
bcg barequet chazelle guibas mitchell tal 
boxtree hierarchical representation surfaces 
proc 
eurographics 
farin jordan piper 
surface surface intersection 
computer aided geometric design 
bajaj hoffmann hopcroft lynch 
tracing surface intersections 
computer aided geometric design 
bv bouma 
collision detection analysis physically simulation 
proceedings eurographics workshop animation simulation pages 
bw jules bloomenthal brian wyvill 
interactive techniques implicit modeling 
rich carlo sequin editors computer graphics symposium interactive graphics volume pages march 
cam stephen cameron 
modelling solids motion 
phd thesis university edinburgh 
cam cameron 
study clash detection problem robotics 
proceedings international conference robotics automation pages 
cam cameron 
collision detection dimensional intersection testing 
proceedings international conference robotics automation pages 
cam cameron 
approximation hierarchies bounds 
proceedings 
symposium solid modeling foundations cad cam applications pages austin tx 
cam cameron 
enhancing gjk computing minimum penetration distance convex polyhedra 
proceedings international conference robotics automation pages 
cam stephen cameron 
comparison fast algorithms computing distance convex polyhedra 
ieee transactions robotics automation december 
collision detection geometric models survey canny 
collision detection moving polyhedra 
ieee trans 
pami 
cc cameron 
determining minimum translational distance convex polyhedra 
proceedings international conference robotics automation pages 
cl canny lin 
opportunistic global path planner 
proceedings international conference robotics automation pages 
cohen lin manocha ponamgi 
collide interactive exact collision detection system large scale environments 
proc 
acm interactive graphics conference pages 
dk dobkin kirkpatrick 
determining separation preprocessed polyhedra unified approach 
proc 
th internat 
colloq 
automata lang 
program volume lecture notes comput 
sci pages 
springer verlag 
don donald 
motion planning degrees freedom 
master thesis mit artificial intelligence lab 
ai tr 
tom duff 
interval arithmetic recursive subdivision implicit functions constructive solid geometry 
acm computer graphics 
ede edelsbrunner 
new approach rectangle intersections part internat 
comput 
math 
far farin 
curves surfaces computer aided geometric design practical guide 
academic press 
neff connor 
automatic parsing degenerate quadric surface intersections 
acm transactions graphics 
gjk gilbert johnson keerthi 
fast procedure computing distance objects dimensional space 
ieee robotics automation vol ra 
glm gottschalk lin manocha 
obb tree hierarchical structure rapid interference detection 
proc 
acm siggraph pages 
herzen barr 
geometric collisions time dependent parametric surfaces 
computer graphics 
ming lin stefan gottschalk hudson lin cohen gottschalk manocha 
accelerated collision detection vrml 
proc 
vrml conference pages 
hughes lin manocha 
efficient accurate interference detection polynomial deformation soft object animation 
proceedings computer animation pages geneva switzerland 
hu ye 
robust interval algorithm surfaces intersections 
computer aided design 
hof hoffmann 
geometric solid modeling 
morgan kaufmann san mateo california 
hof hoffmann 
dimensionality paradigm surface 
computer aided geometric design 

surface intersection algorithm loop detection 
international journal computational geometry applications 
special issue solid modeling 
hss hopcroft schwartz sharir 
efficient detection intersections spheres 
international journal robotics research 
hub hubbard 
interactive collision detection 
proceedings ieee symposium research frontiers virtual reality october 
klosowski held mitchell 
efficient collision detection bounding volume hierarchies dops 
siggraph visual proceedings page 
krishnan manocha 
efficient accurate generation low degree solids exact arithmetic 
acm siggraph symposium solid modeling pages 
km krishnan manocha 
efficient surface intersection algorithm lower dimensional formulation 
acm transactions graphics 
krishnan lin manocha 
spherical shell higher order bounding volume fast proximity queries 
proc 
third international workshop algorithmic foundations robotics 
kpp prakash 
method intersecting algebraic surfaces rational polynomial patches 
computeraided design 
collision detection geometric models survey wolter 
topological differential equation methods surface intersections 
computer aided design 
lat latombe 
robot motion planning 
kluwer academic publishers 
lc lin john canny 
efficient algorithms incremental distance computation 
ieee conference robotics automation pages 
lin lin 
efficient collision detection animation robotics 
phd thesis department electrical engineering computer science university california berkeley december 
lm lin dinesh manocha 
interference detection curved objects computer animation 
models techniques computer animation pages 
springer verlag 
lm lin dinesh manocha 
fast interference detection geometric models 
visual computer 
lm lin dinesh manocha 
efficient contact determination geometric models 
international journal computational geometry applications 
lozano erez wesley 
algorithm planning paths polyhedral obstacles 
comm 
acm 
lr lane 
theoretical development computer generation display piecewise polynomial surfaces 
ieee transactions pattern analysis machine intelligence 
man 
solid modeling 
computer science press rockville maryland 
mc manocha canny 
new approach surface intersection 
international journal computational geometry applications 
special issue solid modeling 
mc mirtich canny 
impulse simulation rigid bodies 
proc 
acm interactive graphics monterey ca 
md manocha demmel 
algorithms intersecting parametric algebraic curves simple intersections 
acm transactions graphics 
ming lin stefan gottschalk md manocha demmel 
algorithms intersecting parametric algebraic curves ii multiple intersections 
computer vision graphics image processing graphical models image processing pages 
meg megiddo 
linear time algorithms linear programming related problems 
siam computing pp 

mg miller goldman 
combining algebraic rigor geometric robustness detection calculation conic sections intersection quadric surfaces 
proceedings acm solid modeling pages 
moo moore 
methods applications interval analysis 
siam studies applied mathematics 
siam 
nat naylor thibault merging bsp trees yield polyhedral modeling results proc 
acm siggraph pp 

ove overmars 
point location fat subdivisions 
inform 
proc 
lett 
pat 
surface surface intersections 
ieee computer graphics applications 
pra pratt 
surface surface intersection problems 
gregory editor mathematics surfaces ii pages oxford 
press 
pw alex pentland john williams 
vibrations modal dynamics graphics animation 
computer graphics siggraph proceedings volume pages july 
qui quinlan 
efficient distance computation non convex objects 
proceedings international conference robotics automation pages 
rr requicha rossignac 
solid modeling 
ieee computer graphics applications pages september 
sag sederberg anderson goldman 
implicit representation parametric curves surfaces 
computer vision graphics image processing 
sam samet 
spatial data structures quadtree octrees hierarchical methods 
addison wesley 
sar 
algebraic methods intersection 
computer vision graphics image processing 
collision detection geometric models survey snyder interval methods multi point collisions time dependent curved surfaces 
proceedings acm siggraph pages 
sed sederberg 
techniques cubic algebraic surfaces 
ieee computer graphics applications pages july 
sei seidel 
linear programming convex hulls easy 
proc 
th ann 
acm conf 
computational geometry pages berkeley california 
sj johnstone 
planar intersection natural quadrics 
proceedings acm solid modeling pages 
snyder 
interval arithmetic computer graphics 
proceedings acm siggraph pages 
sp sederberg parry 
comparison curve intersection algorithms 
computer aided design 
sederberg white 
fat arcs bounding region cubic convergence 
computer aided geometric design 
tur turk 
interactive collision detection molecular graphics 
master thesis computer science department university north carolina chapel hill 
zhou 
computation stationary points distance functions 
engineering computers 
