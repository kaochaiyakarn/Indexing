reuse step product data generation technical documentation bjorn otto von universitat magdeburg institut fur und box magdeburg germany cs uni magdeburg de order enable effective communication people inside outside organization suppliers customers large amount natural language documents necessary 
generation multilingual natural language starting language independent representation content offers advantages instance consistency product documentation different languages adaptability different kinds users purposes 
high effort creating domain model serves basis input generation process reduced formal knowledge available organization reused 
propose reuse product data represented help iso step standard exchange product model data 
order able exploit data semantic respective entities defined strictly step 
argue ontology defined core parts iso propose pdm schema realistic subset high degree usefulness 
inferences product knowledge allow seamless integration natural language generation systems suggest description logic means defining ontology 
corporate memory defined explicit disembodied persistent representation knowledge information organization 
heijst note definition restricts form content 
piece knowledge information contributes performance organization stored corporate memory 
looks different kinds knowledge existing organization great variety appears ranging undocumented knowledge capabilities know employees computer interpretable data different levels formality free text data knowledge bases 
parts knowledge represented explicitly persistent way put corporate memory 
concerning degree formality point view formal information represented useful 
due fact formal knowledge subject processing management information systems 
side formal knowledge readily understood information seeker requires certain familiarity syntax semantics formalization 
seldom case especially communication departments suppliers customers 
natural language documents major means communication external relationships 
text medium understood knowledge special formalism representation 
manufacturing industry product related documents assembly instructions design rationals user documentation created product life cycle 
content textual documents product structure technical properties descriptions assembly processes represented formal way product engineers design process 
technical editors authors documents normally access sources mirrored resulting documents 
time minor product property changes development phase reflected corresponding documents 
time document authors involved 
additional problem arises document available different languages 
case user documentation international companies 
additional human translators may 
problems result prolonged complicated document creation process considerably diminish effectiveness information flow organization 
solution problems offered multilingual natural language generation 
starts language independent representation documents content generates different versions target languages automatically 
changes document content carried place language independent representation reflected automatically corresponding documents 
consistency product multilingual documentation guaranteed time product change availability documentation considerably reduced 
additional advantage resulting documents tailored different kinds users purposes constraints assured 
reasons multilingual natural language generation breakthrough industry effort needed create domain model content representation scratch prohibitive 
product life cycle information concerning product represented formal way engineers 
proprietary solutions companies iso standard step standard exchange product model data representing product data 
easier fact nowadays suppliers cad pdm systems integrated step software 
focus reuse available product data represented step discuss steps required enable automatic generation 
section brief survey iso discuss represent product data point inherent deficiencies step 
section introduces aspects natural language generation relevant context 
section describes step product data employed natural language generation help additional ontologies 
section propose choose core part step implementation approach 
concludes related discussion 
product data represented step product related information key asset manufacturing industry real value lying product corresponding information created product life cycle ranging development maintenance disposal 
call kind information product data analogy information technology call product data technology technical methods dealing product data 
recognized early standardization necessary order allow effective exchange product related information independent particular computer systems software 
development step initiated initial release various parts standard published iso 
aim step unambiguous representation computer interpretable product information life product iso 
help representation exchange product data covering aspects cad cam supported 
strong claim realized splitting standard series structural parts fundamental ones continuously developing new ones special industrial application areas 
addition description product data models architecture iso contains methodological parts 
description methods part describing fundamentals models represented implementation methods part ff implementation specific details physical file exchange data access sharing conformance testing methodology framework part ff 
core part step formed definition product data models 
defined levels abstraction 
generic models called integrated resources ir describe requirements common application areas 
specific product data models called application protocols ap part ff ir adapted meet requirements specific branch industry 
application protocol separated models application activity model aam describes functional view application activities information flow application model arm definition detailed data model determined application experts application interpreted model aim result mapping arm ir guarantees consistency integration different parts step 
formal data models ir ap specified express language graphical representation cf 
iso description methods express language manual 
specification language programming language having object oriented properties resembling logical formalisms originating entity relationship method 
note express describes model classes objects 
information real objects exchanged pdm systems classes instantiated exchanged physical file cf 
iso clear text encoding exchange structure 
gives example definition information element action revised version ir iso fundamentals product description support document iso tc sc wg 
declarative construct entity fundamental data structure express define class objects 
include properties syntactically signalled keywords supertype subtype example different kinds typed attributes attribute description type text entities chosen method refers entity action method local constraint rules syntactically signalled keyword example 
action identification occurrence activity causes observable result 
action identifies activity taken place place expected take place 
action definition specified action method 
express specification entity action name label description text inverse id set attribute definitions name word group words action known 
description word group words characterize action 
chosen method action method specifies procedure selected carry action 
id action identifier specifies identification action 
id need specified 
example entity definition step excerpt express step formally describe structural aspects data objects 
additional information necessary clarify meaning respective constructs 
usually statements natural language 
informal way representing part semantics formal data model causes important problems see met gbm 
constructs low level geometric concepts common background knowledge stable agreed able interpret formal model correctly 
cases meaning clear allow effective sharing integration product data 
example natural language explanation leaves aspects open 
clear observable result especially aspect associated formal express model 
consequence general problem constructs defined ir interpreted differently distinct aps 
despite problem step increasingly industry especially international projects product data exchanged different companies great variety infrastructure concerning product data technology 
give example consortium constructing bae casa decided base product data management step 
progress step due fact today vendors cad pdm software include interfaces compatible iso 
believe investment consider reusing product data represented way purposes generation natural language documents 
natural language generation natural language generation nlg defined subfield artificial intelligence computational linguistics concerned construction computer systems produce understandable texts english human languages underlying non linguistic representation information rd 
surveys state art nlg bat rd 
summarize section aspects nlg consider important context 
ongoing debate architectures appropriate subtasks nlg existing implementations distinguish tasks may sequential independent text planning comprises selection document content form entities domain model planning discourse structure imposes ordering structure selected content 
task sentence planning information grouped sentences 
specific words phrases chosen express domain entities lexicalization referring expressions generated 
surface realization text generated syntactical morphological knowledge 
different tasks reveal types knowledge necessary generation process 
group knowledge sources categories language independent representation domain knowledge content communicated natural language document chosen knowledge base 
discourse related knowledge necessary able generate adequate text current context 
examples kind resource user model representation user knowledge expectations information intention text constraints medium document 
language dependent linguistic resources lexica grammars natural language 
context classify importance resources necessary nlg way 
linguistic resources advantage relatively stable created easily obtained undergo minor changes 
discourse related knowledge belongs responsibility technical editors dependent kind document created 
resource special nlg hardly available 
domain knowledge contains necessary information said 
manufacturing industry constantly developing new products new configurations versions kind knowledge undergo perpetual changes 
domain knowledge necessary input nlg tightly coupled formally represented knowledge design process current state product 
ideal case directly reused generation technical documentation investigated case step 
important aspect examine kind information nlg need domain 
obviously entities objects relations activities mentioned text known possible may different degrees abstraction flexible generation system allow variety 
generally nlg community pieces information necessary represented explicitly inferred domain model 
give examples illustrate kinds inferences domain knowledge effect linguistic realization text ffl part relations helpful choice definite articles 
definite article chosen object motor object part specific car mentioned preceding sentence 
ffl similar objects current area interest may necessary find differentiating properties able clearly distinguish objects reader 
examples distinguishing properties may relative position leftmost different colours size visually detectable features 
ffl knowledge time relations processes events necessary choose tense phrase possibly temporal discourse markers signalling temporal relations clauses 
examples show sufficient choose just number information units stage content selection verbalized 
additional queries domain knowledge necessary subsequent stages nlg process 
section describe proposal done allow queries product data represented step 
ontology product data problems appeared previous sections solved allow reuse product data nlg ffl semantics information units formalized express clear cf 
section 
led ambiguous interpretations different ap create problems trying verbalize product data represented basis 
ffl inferences drawn product data able reveal implicit information necessary queries nlg tasks cf 
section 
investigate aspects turn 
solution defining meaning terms domain allow effective reuse information represented basis terms offered ontologies 
ug ontology explicit account representation part conceptualisation conceptualisation world view respect domain conceived set concepts entities attributes processes definitions inter relationships 
argue express definition fulfils definition ontology formal explicit conceptualisation documented iso documents parts 
explicit specification lacks aspects terms express entities really defined sense necessary possible sufficient conditions entity specified 
addition axiomatisation limited fact constraints attribute values entity axioms embracing 
outcome fact unclear semantics step entities overcome defining ontology terms relationships 
ontolingua gru quasi standard formalizing ontologies 
translated languages implemented knowledge representation language support automated reasoning test model committed ontology consistent axiomatization ontology 
numerous paradigms knowledge representation formalisms offer service believe description logics especially suited 
implemented nlg systems pai paradigm necessary inferences classification ref 
rm core mechanism description logics 
group loom loo lisp expressive fastest implementations description logics 
give simple example definition express redefined loom necessary sufficient conditions advantages 
entity subtype timeinterval optional derivation optional wr exists exists derivation definition time interval bounds express shows example express definition entity time interval bounds 
subclass entity time interval inheriting attributes 
obligatory attribute primary bound optional attributes 
addition keyword constraint stated optional attributes part definition term ontology aspects usually prominent implemented ontologies 

shows proposal definition loom 
glance essential difference structure 
stated time interval bounds time interval subconcept 
relations express attributes obligatory 
range relations cf 
value types described quantification possible values belong respective concept 
restriction number values second third relation value implicit optionality 
constraint clause described adding definition concept 
defconcept timeinterval exactly derivation derivation definition time interval bounds loom essential difference definition express loom defines concept help necessary sufficient conditions 
express describes structure entity stating supertype attributes additional constraints 
consequences representation instance entity created express tested conformity integrity constraint 
instance loom example created instance type time interval automatically classified type time interval bound primary bound added automatically loose property secondary bound derivation added instance 
contrast express loom allows specify definition terms constraints interpretation axioms general sense constraints attribute values entity 
ontology terms formal part step defined help description logics case loom considerably diminish possible ambiguities 
possible ontology explicit assumptions conceptualization visible express structure needed data exchange stated textual description step standard 
addition ontology solve problem lacking semantics step 
parts inferences necessary nlg possible axiomatization ontology transitivity part relation 
axioms ontology complete knowledge base form basis describing additional knowledge special rules may specific surpass extent step models 
exists express corresponds 
change caused moving negation inside parentheses concerning inferential capabilities choice description logics representing product data advantages see hj ffl instances classified automatically depending properties illustrated example additional knowledge instance property leads class membership 
ffl classes organized automatically new class position right place class hierarchy 
ffl possible define instances classes partially open world semantics description logics 
partial descriptions common especially product design supported express 
ffl instances change membership classes existence classes change definition time 
ffl description logics broader possibilities representing checking axioms integrity constraints 
inferences interaction nlg system domain model see examples described section tasks context knowledge engineering systems capture design rationales go recording informal textual descriptions intelligent retrieval previous solutions 
step deriving initial loom representation express definition done automatically 
implemented help nist express toolkit lib partial translator express loom principle transforms entity type definitions concepts attributes relations appropriate domain range 
rules treated include complete function calls transformed automatically 
translation evidently provide necessary conditions concept definition 
sufficient conditions added hand conceptualization implies concept completely defined 
true additional axioms 
inspection existing ontologies great help step 
example measure schema iso dealing physical quantities similarities parts engmath ontology go 
proposal previous section shown express models enhanced ontologies defining meaning terms interrelationships order enlarge range possible applications product data represented step 
important aspects hinder implementation proposal course aspects formalisms combination unique description logics ffl sheer size standard impossible define ontology entire step architecture 
subpart ap core data automotive mechanical design processes embraces printed form pages 
ffl experience shown takes long time participating countries agree aspects international standard 
problems solved general 
propose choose small subset step high usefulness prove advantages additional effort 
opinion pdm schema mu ideal candidate 
developed cooperatively pdes describing core set entities step support product data management 
pdm schema interoperable major aps manufacturing industry allows exchange information stored pdm systems 
examples units functionality include item structure classification item properties mass costs document management effectivity 
gained acceptance industry consortium agreed pdm schema data exchange capabilities 
pdm systems important frequently tools persistent storage product data shared different people different purposes 
participation vendors pdm systems pdes guarantees conformity pdm schema 
product data represented pdm systems pdm schema additional ontologies advantage acquisition maintenance product related domain knowledge integrated product life cycle done product engineers normal tasks 
illustrate vision approach product data represented help step models ontologies description logic part corporate memory usable purposes currently possible 
consistency checks inferences reveal implicit knowledge possible help clear semantics axiomatization 
opinion major advantage approach decisive step practicability nlg reducing implementation costs considerably 
companies profit mentioned benefits cf 
section generating product related natural language documents automatically 
examples documents generated product manuals quote documents assembly instructions different kinds reports circulate inside characteristic properties beneficial nlg multilinguality conformance standards broad range users number prior knowledge requires documents 
representation product data installation linguistic resources generator bat course sufficient nlg 
process content selection supported discourse related knowledge represented default values important text types 
supported help authoring tools technical editors allowing content selection construction discourse representations level reuse schemata filled specialized 
big obstacle nlg industry reduced reuse step product data generation technical documentation 
discussion project know generating natural language step 
focus oriented validation express specifications nlg 
argue step complex standards developed generated natural language text explaining formal model easier validate original step express specification 
ek developing platform consistent creation management product related documentation 
special interest context integration step sgml 
architecture including language technology tools controlled language creation terminology focus nlg 
agree opinion approach bringing product related view cad cam document oriented view big potentials 
nlg ambitious way dealing problem integrating views pursued enormous benefits 
unfortunately possible propose complete ontology pdm schema proof concept documentation moment reduced description current aim express model rationales comments conformity current reworking ir 
hope change near parts step 
possible standard big iso agree ontologies agreement semantics ir avoid problems incompatible aps 
having look extent phenomena appearing content level technical documentation counterpart domain model notice 
natural language documents maintenance manuals actions processes play major role 
standardized parts step centered product process models 
research projects geared integration product process models step envisaged evolution iso 
birgit 
step als basis fur eine und modellierung 
journal may 
bat bateman 
enabling technology multilingual natural language generation development environment 
journal natural language engineering 
bat bateman 
automated discourse generation 
kent editor encyclopedia library information science volume pages 
marcel dekker june 
hercules anders paul 
validation step express specifications automatic natural language generation 
advances natural language processing 
ek kimmo jurgen kunz 
technical documentation creation management step 
graphic communication association editor sgml europe conference pages barcelona spain may 
gbm nicola guarino stefano borgo claudia masolo 
logical modelling product knowledge founded semantics step 
am gb quality marketing services editors proceedings european conference product data technology days pages april 
go gruber olsen 
ontology engineering mathematics 
doyle torasso sandewall editors fourth international conference principles knowledge representation reasoning 
morgan kaufmann 
gru gruber 
ontolingua mechanism support portable ontologies 
technical report ksl stanford university knowledge systems laboratory 
hj maher hakim james garrett jr object centered approach modelling engineering design products combining description logic objectoriented modelling 
artificial intelligence engineering design analysis manufacturing 

knowledge technologies step 
technical report esprit project july 
lib don libes 
nist express toolkit overview 
technical report national institute standards technology 
available www nist gov sc tools nist tar loo loom knowledge representation system 
documentation package usc information sciences institute marina del rey ca 
met felix metzger 
challenge capturing semantics step data models precisely 
michael wolf ulrich reimer editors proceedings international conference practical aspects knowledge management pakm 
mu max 
abbildung der aus der mit dem step pdm schema 
journal may 
pai daniel paiva 
survey applied natural language generation systems 
technical report itri information technology research institute itri university brighton uk 
rd reiter dale 
building applied natural language generation systems 
journal natural language engineering 
rosner grote hartmann 
natural language documents sharable product knowledge knowledge engineering approach 
pareschi editors information technology knowledge management pages 
springer verlag berlin 
rm reiter mellish 
classification generate text 
proc 
th annual meeting association computational linguistics acl 
ug uschold gruninger 
ontologies principles methods applications 
knowledge engineering review 
hovy van noord neumann bateman 
language generation 
cole mariani zaenen zue editors survey state art human language technology chapter pages 
center spoken language understanding oregon graduate institute science technology 
available cse ogi edu html 
van heijst van der 
organizing corporate memories 
proc 
tenth knowledge acquisition knowledge systems workshop kaw 
