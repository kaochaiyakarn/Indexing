ontology engineering modeling concepts relations 
papers presents approach modeling largescale ontologies 
extend established methods modeling concepts relations transportable methods modeling ontological axioms 
gist approach lies way treat majority axioms 
categorized different types specified complex objects refer concepts relations 
considering language system particularities layer representation translated target representation language 
layer approach benefits engineering intended meaning axioms captured categorization axioms 
classified object representations allow versatile access manipulations axioms graphical user interfaces 
ontologies shown usefulness application areas intelligent information integration information brokering knowledge systems name 
role ontologies capture domain knowledge provide commonly agreed understanding domain 
common vocabulary ontology defining meaning terms relations usually organized taxonomy contains modeling primitives concepts relations axioms 
couple representation mechanisms ontology engineering environments developed allow representation engineering ontologies 
fact languages tools matured considerably years 
support modeling concepts relations extensively provided convenient graphical user interfaces said modeling axioms 
axiom specification ontology modeling environments restricted subsumption offers description logics framework mcguinness patel schneider ontology engineer encodes kind order logic language bl zquez axiom modeling neglected 
grosso 
situation detrimental modeling large scale ontologies aggravates engineering maintainance large sets axioms 
drawback similar lines arises fact ontology engineer particular symbol representation axioms early development process 
need arises switch representation language ontology engineering efforts lost forever 
approaches translate representation languages okbc chaudhri ode bl zquez staab maedche aifb uni karlsruhe de institute aifb karlsruhe university germany www aifb uni karlsruhe de wbs tel fax staab maedche ecai :10.1.1.123.3174
th european conference artificial intelligence workshop applications ontologies problem solving methods benjamins gomez perez guarino uschold eds 
steffen staab alexander maedche approaches typically fail produce desired results 
reason language order predicate logic allows syntactic variations denote semantic meaning axiom translation order logic target representation easily fails consistent range syntactic variations provides semantic 
major pitfall semantics ontology definitions void specification axioms 
ontology engineering approach pursue modeling ontologies graphical means exploited modeling concepts relations scale axiom specifications 
core idea categorization object representation axioms organize axioms provide compact intuitively accessible representation 
additionally approach facilitates translations axioms specifications various target languages categorization axioms centered semantic meaning syntactic representation yielding better clue adapt particular representation specific application proprietary inference engine 
approach continues line developed mccarthy roth brachman gruber gruber :10.1.1.85.5082
continue development improve actual engineering practice considerably extend possibilities gruber categorized frame ontology directly categorizations basis graphical engineering editing 
briefly survey existing tools methods modeling ontologies served starting point 
describe core idea approach illustrate complex examples extend scope previous works conceive particularly interesting ontology engineering realize approach 
foundations related approach described agreed methods modeling concepts relations 
common ontology engineering environments know object oriented model may browsed extended corresponding views concepts relations cf benjamins 
upto date survey systems 
typically single multiple taxonomies concepts concepts inherit properties single multiple parents provide graphical methodological backbone approaches 
treatment relations varies extent relations considered order entities 
concepts relations usually come properties names documentation 
concepts linked relations concepts built types simple system defined concepts 
foundation decided offer views concepts relations similar ones available prot grosso 
may conceive minor extensions approach account finer distinctions ones vs description logics approach modeling concepts relations consistent mentioned systems representation languages 
depicts ontology engineering environment ontoedit 
modeling concepts relations quite contrary holds modeling axioms 
majority ontology modeling environments simply ignores axioms delegates modeling separate encoding phase axioms hand coded ascii editor swartout grosso 
readily feasible axioms necessary modeling extremely difficult proliferation axioms 
problem recognized partially addressed viz 
ontolingua fikes farquhar rice sophisticated manner ode bl zquez 
ode aims knowledge level ontology modeling symbol level considers axioms entities need treated graphical views supporting documentation names axioms 
bl zquez 
require formulation axioms particular target languages order predicate logic 
okbc chaudhri ontolingua gruber try translate axiom specifications different representation languages order overcome barrier ontology engineer encounters move representation language 
practice translation axiom specifications fails deliver desired results literal translations usually needed recognition meaning axioms translation 
recognition worst case effects axioms language equivalent effects axioms language 

ontoedit axiom meanings entail proper comparison axiom models task undecidable 
note problem persists ontologies specified description logics 
case axioms brought bear particular modeling strategies exploit description logics subsumption mechanism hahn schulz production rules enforce axioms box 
addition translation problems strategies require considerable modeling discipline ontology engineer 
decided borrow best ode approach treat axioms order entities 
order counter problems language independence structuring axiom specifications modeling strategies conceived approach axiom specifications builds axioms objects view elaborated 
modeling axioms motivation approach specification axioms remain easily representable manipulable ontology engineering environment 
specification needs language independent extent possible attribute axioms properties suited organization 
axioms objects representation axioms varying target languages turns difficult interesting representation languages holds axiom representation organization screen 
reason typically kind non propositional logic involved deals quantifiers quantifier scope 
axioms difficult grasp representation quantifier scope likes usually details particular syntax 
closer look bread butter issues ontology modeling reveals axioms need formulated aim simpler purposes arbitrary logic structures 
axioms applications belong list major axiom categories 
axioms relational algebra reflexivity relations relations symmetry relations asymmetry relations antisymmetry relations transitivity relations inverse relations 
composition relations 
exhaustive partitions 
axioms subrelation relationships 
axioms part reasoning 
nonmonotonicity 
axioms temporal modal contexts experience ontology engineering projects axioms deal structures composed relations 
concepts mammal fish share instances 
modeling concepts relations staab maedche appear realized differently various representation languages 
fact axiom specifications turned vary different inference machines working basically representation language 
approach distinguishes structures repeatedly axiom specifications corresponding description particular language 
describe axioms complex objects refer concepts relations 
translation step realizes axioms second layer particular target representation language 
layer approach directly supports objectives argued section 
layer allows representation particularities categorization get better grasp meaning axiom set axioms 
axioms readily available gui interaction directly supports engineering axioms knowledge level symbol level particular language 
second layer may appear overhead glimpse adds degree flexibility modularity greatly profits ontology engineering task 
flexibility comes particular translation strategy chosen particular types axioms 
different inference mechanisms differ identical representation languages second layer may tuned optimize performance ontology knowledge base services touching layer 
instance transitive inferences may optimized incremental updates application 
addition axioms may formulated considering ubiquitous parameters ones time modal context jam axiom specifications affected time context cf 
subsections nonmonotonicity contexts 
order elucidate approach proceed intriguing examples categorizations axiom specifications listed 
give examples illustrate benefits approach translation prominent ontology modeling mechanisms viz 
frame representation logic kifer lausen wu decker description logics representation loom woods schmolze macgregor 
exploiting expressiveness logic specify translation axioms directly object representation axioms possible describing formally concise executable translation 
syntactically trickier translation steps description logics simply indicate results translation second layer 
reader note consider languages comprise possible ontology specification languages think axiom types mention exhaust relevant types 
believe experiences particular domains push extensions 
main purpose reader principle methodology transportable target languages axiom types need arises 
axioms relational algebra axiom types shown listed easier axioms come harder ones appear list 
axiom specifications referred axioms relational algebra rank simplest ones 
describe axioms local effects implications affect relations 
show simple example order explain basic approach syntax 
principle approach easily transfers axiom types 
consider example symmetry 
common denotation symmetry relation homer simpson related bart simpson order predicate logic boils logic valid axiom specification 
modelers logic take advantage object oriented syntax 
concept definition logic person attribute fact homer person bart appears 
person person 
homer person bart 
rule corresponding 
contrast description logics language loom provides modeling primitive specifying symmetry defrelation characteristics symmetric approach denote symmetry predicate holds particular relations symmetric particular language logic may derive implications symmetry general rule ground meaning predicate symmetric particular target language 
corresponding transformation rule logic states symmetric relations object instances holds related related 
symmetric small example shows advantages 
axiom specification language independent 
second approach denoting symmetry sparser language specific counterparts 
third symmetry constitutes class may easily give gui view lists relations symmetric 
steps summarized table exception pl 
symmetric defrelation characteristics symmetric symmetric table 
symmetry easier understanding reuse table layout subsequent examples 
description logics languages fact provide comprehensive support terminological reasoning come problems fact offers box reasoning horrocks 
modeling concepts relations staab maedche axioms subrelation relationships major requirement ontologies ability structure relations hierarchies 
natural language applications areas medical domains rely specific relations denote background knowledge hotel 
order bridge conceptually high level linguistic expression closely resembles general relation specific relations information relation hierarchy retrievable ontology modeling framework cf 
markert hahn 
object representation corresponding axioms closely resembles description logics counterpart provides structural information relations allows corresponding visualization cf 
relation hierarchy may easily translated general axiom target representation language cf 
table 
defrelation primitive table 
subrelation relationship axioms part reasoning aspects reasoning part relations received special attention ontology engineering community 
issue debated transitivity considered general property 
refer hahn schulz lambrix padgham survey issue 
approach provides modeler flexibility turn transitivity constraints part sub relations prefers cf 
paragraph axioms relational algebra 
second issue debate reasoning 
rector 
distinguish role propagation concept specialization 
properties parts may propagated properties wholes 
assume defined carbody carbody defined car 
color car body color car hold color seats spite fact structural difference examples 
similarly engine car car radio broken car may run 
necessary specify axioms propagate particular roles properties parts wholes 
possible partof relations precisely speaking transitive closure immediate partof 
approach encode transitive closures analogously state particular role may propagated object representation straightforward comparatively easy understand carbody typical application dozens definitions 
easy imagine representation specific counterparts cumbersome understand 
fact predicate logic denotation needs specify axioms role needs propagated viz 
conceptual level instance level cf 
table 
description logics provides direct support corresponding implications may achieved complicated encoding additional concept nodes cf 
hahn schulz user coded functions lambrix padgham 
carbody instance level part concept level part concept triples encode reasoning taxonomic reasoning program code performs propagation 
instance level partof concept level analogous instance level table 
part reasoning role propagation second aspect reasoning reflected rector 
concept specification reasoning 
cut long discussion short mention type axiom specification relies specified table show corresponding logic translation rule table 
concept level partof table 
part reasoning ii concept specification general axioms approach described far suited cover single axiom specification may think 
allow axioms specified particular representation language order predicate logic try translate axioms possibly human help target representation language description logics 
general axiom specifications gain loose compared related approaches ode bl zquez sight 
second sight zone axiom types properties may reasonably represented demonstrated axiom types benefit principal methodology separating engineering target representation 
subsections elaborate 
nonmonotonicity axioms may organized interact nonmonotonic manner 
instance consider rule exception 
hahn schulz showed support provided rector 
grail insufficient 
conceive particular example modeled nonmonotonic inheritance 
chosen simplicity value adequacy 
real world examples may modeling concepts relations staab maedche bird rule true bird penguin rule false penguin translation compilation step may conceptual background knowledge second axiom exception order produce logic program implements intended set axioms 
tree view visualizes background knowledge premise penguin rule leads different really denotes exception bird rule 
intuitive manner grouping penguin rule bird rule just subrelation grouped 
compiled bird rule true bird exception exception rule exception penguin previous examples may claim allow intuitive access relevant axiomatic propositions 
time need break internal syntactic structures axioms order distinguish premises implications may exhibit arbitrary logical structures may easily abstracted object representation axioms types 

example demonstrates simple strategy nonmonotonic reasoning means closed world assumption 
basic principle aims conceptual abstraction advanced modeling strategies omnipotent logical theories leaving door open sophisticated nonmonotonic reasoning 
fact regarding logic inference engine decker strategy efficient inferencing terminates polynomial time founded semantics function symbols 
temporal modal contexts temporal modal contexts indispensable practical applications 
difficult find forest trees comes determining maintaining meaning large set axioms 
similar strategy peterson andersen engel extracted database schemata cyc axioms include temporal parameters included excluded time interval versions easier understand 
ontology engineer models axiom stating programs gnu licence come free indicates axiom belongs group axioms preserve time boundaries check box 
costs program gnu may compiled axiom includes time parameters actual inference purposes 
morgenstern 
note skip loom formulation support general types nonmonotonic axioms specific simple example represented default slot value attached roles concepts bird penguin 
costs program gnu exactly strategy may exploited modeling modal contexts 
type axiom may produced particular translation strategy stating person believes gnu license mode particular time interval believes comes free time 
bel costs bel program gnu naturally example shall indicative range possibilities may denote formal contexts mccarthy 
discussion approach modeling axioms ontologies 
approach geared specifications axioms easily representable manipulable ontology engineering environment ontoedit 
achieve high degree language independence valuable means axiom organizations 
reach objectives methodology classifies axioms axiom types semantic meaning 
type receives object representation abstracts particular syntax far possible keeps concepts relations necessary distinguish particular axiom type type 
layers allow distinction knowledge level implementation opening numerous possibilities optimizing performance scaling large ontologies 
limits object representations reached approach may exploited hard tasks engineering nonmonotonicity axioms temporal modal contexts 
approach extends gruber tried categorize kif expressions denotations frame ontology gruber 
continue development improve actual engineering practice directly categorizations basis graphical engineering editing cf 
go traditional predicate logic 
public release upper cyc ontology lenat contains useful set axiom categorizations 
set categorizations go type categories provided axioms defined simple inheritance relation parametrization required axiom defining part reasoning 
examples illustrated highly relevant practical ontology engineering tasks experienced projects 
fact proposal engineering part reasoning axioms outperforms competitors far conceptual adequacy succinctness formulation concerned far stretch 
approach continues line developed mccarthy roth brachman gruber :10.1.1.85.5082
general pursuit aims level axioms formulation reify relations costs concepts order account time intervals change kb construct distinguish switch different modal contexts 
sake brevity elaborate 
modeling concepts relations staab maedche symbol level 
research focused providing single correct solution problem engineering terminological systems 
restrict approach terminological axioms particular type logic exclusively engineering representation 
pursued flexible extensible environment engineering ontologies axioms particular tailored application 
approach avoids problem recognize appropriate axiom category instantaneously arises general purpose language translated general purpose language 
complex examples interesting support claim 
benjamins 

comparative study ontological engineering tools 
proc 
th int 
workshop knowledge acquisition modeling kaw banff canada october 
bl zquez fern ndez garc mez rez 
building ontologies knowledge level ontology design environment 
proc 
th int 
workshop knowledge acquisition modeling kaw banff canada october 
brachman 
status semantic networks 
associative networks 
chaudhri farquhar fikes karp rice 
okbc programmatic foundation knowledge base interoperability 
proc 
aaai 
decker 
domain specific declarative knowledge representation database languages 
proc 
th knowledge representation meets databases workshop krdb 
fikes farquhar rice 
tools assembling modular ontologies ontolingua 
proc 
aaai 
grosso eriksson fergerson tu musen 
knowledge modeling millennium design evolution prot 
proc 
th international workshop knowledge acquisition modeling kaw banff canada october 
gruber 
translation approach portable ontology specifications 
knowledge acquisition 
hahn schulz 
reasoning taxonomic reasoning medicine 
proc 
aaai 
horrocks 
expressive description logic fact fiction 
proc 
kr 
kifer lausen wu 
logical foundations object oriented frame languages 
journal acm 
lambrix padgham 
conceptual modeling document management environment part reasoning description logics 
data knowledge engineering 
lenat 
large scale investment knowledge infrastructure 
communications acm 
macgregor 
description classifier predicate calculus 
proc 
aaai 
mccarthy roth 
philosophical problems standpoint artificial intelligence 
meltzer michie eds 
machine intelligence 
mccarthy 
notes formalizing context 
proc 
ijcai 
mcguinness patel schneider 
usability issues knowledge representation systems 
proc 
aaai 
morgenstern 
inheritance comes age applying nonmonotonic techniques problems industry 
artificial intelligence 
peterson andersen engel 
knowledge bus generating application focused databases large ontologies 
proc 
th knowledge representation meets databases workshop krdb 
rector bechhofer goble horrocks nowlan solomon 
grail concept modelling language medical terminology 
journal ai medicine 
markert hahn 
lean semantic interpretation 
proc 
ijcai 
swartout patil knight russ 
distributed large scale ontologies 
proc 
th international workshop knowledge acquisition modeling kaw banff canada november 
woods schmolze 
kl family 
computers mathematics applications 
modeling concepts relations staab maedche 
