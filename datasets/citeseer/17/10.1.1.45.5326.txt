improving graph colouring linear programming genetic algorithms anna marino adam bennett glass dept electronics computer science dept mathematical studies university southampton southampton bj uk major problem related combinatorial optimization population algorithms functional degeneracy search problems high degree symmetry 
population may fact multiple permutations solutions bound exploration solution space 
genetic algorithm ga generally cope problem additional mechanisms included 
simple ga linear assignment problem lap graph colouring problem investigated 
lap algorithm embedded crossover operator generates optimal permutation colours cluster nodes 
feature prevents offsprings generated solutions fit parents 
simulation results show successful application hybrid technique class random graphs studied problems combinatorial optimization graph colouring 
real problems modelled graphs having fast robust algorithm generate optimal colouring highly desirable 
unfortunately due np completeness problem general purpose technique known new approaches trade accuracy time complexity plasticity 
evolutionary techniques particular genetic algorithms received attention successfully solve wide range optimization problems local minima 
population approach technique allows large jumps search space 
gas proved successful graph colouring large degree symmetry solution space 
fact symmetry mismatch produce fit offspring combining solutions may similar permutation 
gas considered inappropriate approach problems graph colouring highly degenerate objective function 
order compensate degeneracy advanced search techniques need applied 
introduces new crossover operator embedding linear programming techniques 
addresses symmetry graph colouring selecting permutation colours reduces cost solution 
despite fact number possible permutations factorial number colours optimization performed polynomial time 
graph colouring problem graph connectivity matrix fw ij ij weight nodes weighted graphs ij unweighted ones ij 
vertex colouring graph assignment distinct colours vertices 
colouring said proper adjacent vertices colour 
graph proper vertex colouring said gamma 
ideally find proper colouring number colours 
say clash occurs connected nodes allocated colour 
complexity problem grows exponentially order graph algorithms provide approximate solutions appropriate large instances 
techniques heuristics simulated annealing tabu search probabilistic algorithms 
investigations conducted incorporating specific features problem heuristics 
illustrate algorithm consider set random graphs nodes probability having edge nodes graph 
hybrid algorithm general genetic algorithms may 
standard genetic algorithm selection mutation recombination operators 
particular attention paid selection criteria main goal investigate improvements coming operators 
fact mutation recombination operators developed highly biased improvements colouring aim test operators low selection pressure 
lap algorithm coded crossover operator genetic algorithm 
evolutionary global search added local search mechanism 
earlier studies suggested successful outcome hybridization main feature produce quick reliable improvements regions search space 
genome representation ways coding graph genome genetic algorithm 
major problem comes equivalence classes respect cost solutions 
despite fact unique mapping solutions principle possible help recombination operator applied 
early test simulations suggested naive representation sequential numbering nodes necessary 
gene codes colour assigned correspondent node 
colours assigned consecutive integer numbers order able select 
saying th gene genome value means th node graph assigned colour fitness function approaches graph colouring problem start proper colouring graph try reduce number colours 
investigation algorithm checks graph objective evolutionary process minimize number clashes generated allocation colours 
clashes generated colouring 
mutation operator operator change swap colours solution 
greedy choice colour node applied 
particular node list adjacent nodes colour oe minimizing number clashes respect oe min oe ij ij ij binary variable indicating oe oe choice available oe randomly selected possibilities 
crossover operator partition graph kg set colours 
assume node initially assigned colour oe want reorder colours subgraphs say partition fitness solution split components tot fitness subgraph fitness subgraphs 
crossover operator minimizes leaving unchanged 
ij represents sum clashes partition generated changing colour nodes new allocation colours subgraph minimize sum ij despite number possible permutations jkj problem solved optimality linear assignment problem formulation minimize ij ij subject ij ij ij ij binary variable representing colour changed colour investigation chosen maximal zero clashes cluster nodes means contains maximum number nodes allocated colours clashes 
grown iteratively adding nodes initial random time 
sexual implementation crossover mates subgraph parent permuted version vice versa experimental settings results early tests indicated superiority simple ga elitism 
population initialized random colours node graph size set jobs set machines job cost ij run machine linear assignment problem consists assigning job machine total running cost 
case imply independent set adjacent nodes may considered 
due different guaranteed zero clashes subgraph second parent 
probabilities mutation recombination operators respectively 
individuals uniformly selected breeding observed ranked selection leads premature convergence population 
algorithm stops colouring number generations exceeds 
simulations averaged seeds instances 
graphs generated self software 
random number generator sets edge nodes probability investigation conducted weighted unweighted instances clarity exposition plots refer unweighted graphs 
results compared ones quoted literature problem simple genetic algorithm swap mutation point crossover 
non population heuristics implemented 
iteratively applies greedy selection embedded mutation operator technique introduced crossover 
iterations iterated mutation iterations iterated generations worst average best generations number clashes worst average best average generated clashes colouring iterated mutation top left iterated crossover top right simple ga standard mutation crossover bottom left hybrid ga lap bottom right 
depicted plots iterated mutation heuristic provides quick improvements results far optimal 
average number clashes go colours colours 
hand iterated crossover heuristic slower may converges proper colouring asymptotically 
fact number clashes quite high iterations 
algorithm merges approaches population solutions 
proper colouring average generations algorithm available press flannery teukolsky vetterling numerical recipes cambridge press 
colouring 
bottom right plots average number clashes colouring 
greedy algorithm number colours generates average clashes 
comparison bottom left gives evidence substantial improvement hybrid technique standard ga performance hardly noticeable 
despite fact results shown outperform specialized techniques concatenate heuristic approaches tabu search maximal independent sets formulation technique provides comparatively performance 
best colouring instances reported uses colours tabu search average colours iterated greedy 
suggests idea application evolutionary techniques problems high degree symmetry considerably improved incorporating specific techniques robust quick operational research heuristics 
despite simulations complex graph instances show search process quite slow generations better parameter setting modification core algorithm may help speed search preserving robustness generality 
particular crossover introduced best perform maximum cut graphs 
current investigations graph partitions 
preliminary results bi partition turned powerful 
random partitions approximate maximum cut far promising ones address directly potentiality technique 
garey johnson computers intractability guide theory np completeness 
freedman 
johnson aragon mcgeoch schevon 
optimization simulated annealing experimental evaluation part ii graph coloring number partitioning 
operational research may june 
hertz de werra 
tabu search techniques graph coloring 
computing 
ellis 
las vegas graph coloring algorithm 
computer journal 

extremely greedy coloring algorithms 
harary editors graphs applications pages 
culberson luo 
cliques coloring satisfiability second implementation challenge chapter exploring colorable landscape iterated greedy pages 
american mathematical society 
davis 
handbook genetic algorithms 
ny van nostrand reinhold 

genetic algorithms data structure programs 
springerverlag 
goldberg 
genetic algorithms search optimization machine learning 
addison wesley 

artificial neural networks genetic algorithms chapter genetic algorithms branch bound techniques resolution tsp 
springer verlag 
srinivasan 
heuristics evolutionary approach multiobjective generation scheduling 
iee proceedings part generation transmission distribution november 
glass bennet 
new heuristic weighted graph colouring problem 
technical report faculty mathematical studies southampton university 
preprint 
schrijver 
theory linear integer programming 
john wiley sons 
