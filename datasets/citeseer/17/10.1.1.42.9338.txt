unit de recherche inria sophia antipolis institut national de recherche en informatique en automatique sophia antipolis cedex france el de recherche programme image vision iterative point matching registration free form curves zhengyou zhang mars iterative point matching registration free form curves une ethode bas ee sur la mise en correspondance de points pour des de forme en erale zhengyou zhang inria sophia antipolis route des lucioles bp cedex france mail sophia inria fr geometric matching general difficult unsolved problem computer vision 
fortunately practical applications priori knowledge exists considerably simplifies problem 
visual navigation example motion successive positions usually small approximately known precise registration required environment modeling 
algorithm described report meets need 
objects represented free form curves arbitrary space curves type practice 
curve available form set chained points 
proposed algorithm iteratively matching points curve closest points 
squares technique estimate motion point correspondences reduces average distance curves sets 
synthetic real data test algorithm results show efficient robust yields accurate motion estimate 
algorithm easily extended solve similar problems curve matching surface matching 
keywords free form curve matching registration motion estimation dynamic scene analysis vision esum le de deux ensembles de primitives eom est un probl eme en en eral tr es dur non 
dans applications des priori le probl eme 
dans la navigation base de vision par exemple le entre deux positions est en soit petit soit 
partir de cette estim ee grossi ere notre algorithme permet de le avec une tr es pr un mod ele de environnement 
les objets sont repr es au de 
chaque repr ee par une liste de points chain es est priori ee sur la forme de la donc sur de objet 
algorithme propos est bas sur la mise en correspondance de points une avec les points les plus une 
une technique de carr es est utilis ee pour le partir des de points 
application de ce la distance entre les dans les deux ensembles 
des donn ees de synth ese des donn ees utilis ees pour tester cet algorithme 
les esultats qu il est donne une estimation pr du 
algorithm peut etre des probl emes comme le de ou le de surfaces 
mots cl es de mise en correspondance estimation du analyse de sc vision contents problem statement iterative pseudo point matching algorithm finding closest points pseudo point matching updating matching computing motion summary practical considerations search closest points curve sampling choice parameter uncertainty coarse fine strategy experimental results case study synthetic data real data discussions complexity large motion multiple object motions highlights respect previous list figures algorithm exploits local matching technique converges closest local minimum necessarily optimal histogram distances influence curve sampling motion estimation computing closest point illustration perfect registration show choose front top views data matched points iteration updating front top views matched points iteration updating front top views front top views motion result iteration matched points updating second iteration front view front top views motion result iterations evolution rotation translation errors versus number iterations evolution rotation translation errors versus number iterations standard deviation equal evolution rotation translation errors versus number iterations standard deviation equal front top views noisy curves standard deviation equal registration front top views noisy curves standard deviation equal registration images chair scene taken camera different positions superposition frames registration front top views geometric matching remains bottlenecks computer robot vision progress years particular applications 
main applications object recognition visual navigation 
problem object recognition match observed data model representing different objects interest 
problem visual navigation match data observed dynamic scene different instants order recover object motions interpret scene 
best jain chin dyer excellent surveys pre matching object recognition 
besl surveys current methods geometric matching geometric representations emphasizing 
previous focused polyhedral objects geometric primitives points lines planar patches usually 
course limited compared real world live 
curved objects attracted attention researchers computer vision 
deals objects represented curves particularly free form curves arbitrary space curves type practice 
free form curve represented set chained points 
matching techniques free form curves proposed literature 
category techniques curvature extrema detected matching 
difficult localize precisely curvature extrema especially curves smooth 
small variations curves change number curvature extrema positions curves 
matching curvature extrema highly sensitive noise 
second category curve transformed sequence local rotationally invariant features curvature torsion 
curve matching problem reduced string matching problem 
information methods category tend robust category 
methods subject noise disturbance arclength sampling curves obtain point sets 
arclength sensitive noise 
methods cited exploit global matching criteria sense deal sets free form curves differ large motion transformation 
ability deal large motions usually es applications object recognition 
applications example visual navigation motion curves successive frames general small maximum velocity object limited sample frequency high known reasonable precision mobile vehicle usually equipped instruments odometric inertial systems provide information 
case apply estimate motion frame produce intermediate frame motion intermediate frame second frame considered small 
propose new method registration curves undergoing small motion 
key idea underlying approach 
motion successive frames small curve frame close corresponding curve second frame 
matching points curves frame closest points curves second find motion brings curves frames closer distance curves smaller 
iteratively applying procedure algorithm yields better better motion estimate 
interestingly preparation besl mckay published pami issue february exploited idea 
independent improved treatment 
detailed comparison sect 

problem statement space curve segment vector function scalar 
computer vision applications data space curve available form set chained points stereo algorithm range imaging sensor 
know type curve obtain description fitting say conics point data 
shall directly chained points interested free form space curves regard particular curve primitives 
chained points equivalent piecewise linear approximation curve 
chained points curve approximation error arbitrarily small increasing decreasing distances kx gamma point compute tangent direction matching procedure 
necessary algorithm know precisely tangent directions 
simple estimate gamma gamma kx gamma gamma points gamma kx gamma gamma gamma kx gamma gamma frames scene observed different positions containing set curves 
curves observed second frames respectively 
points curves respectively 
objective find motion frames rotation translation criterion rx gamma minimized denotes distance point curve defined resp 
takes value point resp 
matched point curve second frame resp 
frame takes value 
course minimization eq 
accompanied maximization trivial solution eq 
achieved criteria symmetric sense frames prevails 
computation shall part right hand side eq 
maximization words objective function minimized rx modification affects little bit accuracy final motion estimation 
slows little bit convergence sense number iterations iterative algorithm described section speeds process 
furthermore assume motion frames small approximately known 
case apply approximate estimate motion frames produce intermediate frame motion intermediate frame second frame considered small 
small depends essentially scene interest 
scene dominated repetitive pattern motion bigger half pattern distance 
example situation illustrated fig 
algorithm converge local minimum 
case methods global criteria cited section recover rough estimation motion 
algorithm described obtain precise motion estimate 
fig 

algorithm exploits local matching technique converges closest local minimum necessarily optimal iterative pseudo point matching algorithm describe section iterative algorithm curve registration matching points frame applying previously recovered motion estimate closest points second 
leastsquares estimation reduces average distance curves frames 
point frame closest point necessarily correspond single point space iterations indispensable 
name algorithm 
finding closest points define distance point curve eq 
criterion defined section 
parametric curve min euclidean distance points kx gamma case set chained points 
simply define min see section discussions distance 
closest point second frame point satisfying min ng min ng min worst case cost finding closest point total number points second frame 
total cost performing computation point frame total number points frame 
trees considerably speed process see sect 

pseudo point matching point find closest point spurious points frames due sensor capability points visible frame due sensor object motion probably sense pair constraints imposed remove spurious pairings 
example distance continuity curve similar figural continuity stereo matching useful discard false matches 
constraints incorporated algorithm order maintain algorithm simplest form 
impose simple constraints unary 
maximum tolerance distance 
distance point closest denoted bigger maximum tolerable distance max set eq 
pair reasonable point second frame point constraint easily justified know motion frames small distance points reasonably paired big 
algorithm max set adaptively robust manner iteration analyzing distances statistics 
see sect 

second orientation consistency 
easily shown angle tangent point closest point go rotation angle frames 
impose angle tangents paired points bigger prefixed value theta maximum rotation angle expected frames 
implementation set theta ffi take account noise effect tangent computation 
tangents precisely computed theta set smaller value 
constraint especially useful motion relatively big 
updating matching matches recovered far exploit robust technique discard analyzing statistics distances 
parameter denoted needs set user indicates considers registration frames 
see sect 
choice value max denote maximum tolerable distance iteration point point frame applying previously recovered motion distance closest point gamma max retained closest point distance 
fx fy fd resulting sets original points closest points distances pseudo point matching cardinal sets 
compute mean sample deviation oe distances oe gamma depending value adaptively set maximum tolerable distance max shown registration quite max oe registration max oe registration bad max oe registration really bad max endif median distances 
number approximately equal number larger point newly set max update matching previously recovered removed distance bigger max pairings remained compute motion frames described 
max adaptively set statistics distances algorithm robust relatively big motion gross outliers shown experiment section 
example registration really bad half originally recovered matches retained 
remain false matches retained set squares assume distribution distances approximately gaussian registration 
confirmed experiments 
typical histogram shown fig 

number points distance fig 

histogram distances technique yields reasonable motion estimate sufficient algorithm converge correct solution 
computing motion point set points reasonably paired set closest points denoted respectively fx fy number pairs 
usually greater points minimum computed rigid motion unique necessary devise procedure computing motion minimizing mean squares objective function gamma direct result eq 
definition distance eq 

optimization method steepest descent conjugate gradient complex find squares rotation translation 
fortunately efficient algorithms exist solving particular problem 
dual number quaternion method summarized 
quaternion considered vector pair dual quaternion consists quaternions special multiplication rule defined 
important matrix functions quaternions defined gamma gamma gamma identity matrix skew symmetric matrix defined gammaq gammaq gammaq rigid motion represented dual quaternion satisfying constraints independent parameters motion 
rotation matrix expressed gamma translation vector vector part quaternion scalar part zero 
vector identified quaternion shall represent corresponding quaternion ambiguity context 
easily shown rx objective function eq 
written quadratic function ns const 
gamma gamma yx gammak gammay gamma gammak gamma gamma gamma gamma const 
adjoining constraints eq 
optimal dual quaternion obtained minimizing ns const 
gamma lagrange multipliers 
partial derivatives gives ns multiplying eq 
gives gammaq 
gamma substituting eq 
yields aq gamma gamma quaternion eigenvector matrix corresponding eigenvalue 
substituting result back eq 
gives const 
gamma error minimized select eigenvector corresponding largest eigenvalue 
having computed rotation matrix computed eq 

dual part computed eq 
translation vector solved eq 

efficient algorithms include quaternion method singular value decomposition 
implemented quaternion method dual number quaternion 
yield exactly motion estimate 
advantage dual quaternion method matrices incrementally computed 
exhibit better performance translation singular value decomposition method 
summary summarize iterative pseudo point matching algorithm follows ffl input frames containing curves curves respectively 
curve set chained points ffl output optimal motion frames 
ffl procedure initialization max set implies point frame distance closest point second frame bigger max discarded consideration iteration 
number crucial algorithm replaced larger 
preprocessing compute tangent point frame 
ii compute tangent point second frame 
iii build tree representation second frame see sect 

iteration convergence computed motion finding closest points satisfying distance orientation constraints described sect 

ii update matching statistic analysis distances described sect 

iii compute motion frames updated matches sect 

iv apply motion points tangents frame 
remarks 
construction trees finding closest points described section 
motion computed original points frame points second frame 
final motion algorithm represents transformation original frame second frame 
iteration termination condition defined change motion estimate successive iterations 
change translation iteration defined ffit kt gamma gamma kt measure change rotation rotation axis representation vector denoted krk krk relation quaternion sin cos quaternions difference sense 
define change rotation iteration ffir kr gamma gamma kr terminate iteration ffir ffit 
practical considerations section consider important aspects practice including search closest points curve sampling choice parameter uncertainty 
search closest points observed section search closest point point time total number points second frame 
methods exist speed search process including bucketing techniques trees abbreviation dimensional binary search tree 
chosen trees curves form chained points sparse space 
efficient bucketing techniques buckets contain points 
tree generalization bisection dimension dimensions 
case 
tree constructed follows 
choose plane parallel yz plane passing data point cut space generalized rectangular approximately equal numbers points side cut 
obtain left son right son 
son split plane parallel xz plane approximately equal numbers points side cut obtain left right 
continue splitting choosing plane parallel xy plane letting step direction cutting plane alternate yz xz xy plane 
splitting process generalized rectangular parallelepiped possibly infinite volume 
stops reach rectangular parallelepiped containing point corresponding node leaf tree 
tree constructed log time storage optimal 
investigate tree searching closest points 
fact point frame searching closest point second frame search points distances maximum tolerable distance max point list candidates arranging increasing distance order list possibly empty 
provides user flexibility implement sophisticated method say relaxation step pseudo point matching 
search algorithm recursive procedure 
formally node tree characterized items 
point point space cut 
parameter value indicates cutting plane parallel yz xz xy plane 
algorithm accumulates retrieved points list external procedure initialized empty 
search closest points effected calling search root max procedure ffl input point tree maximum tolerable distance max ffl output list containing points distances max ffl procedure search max leaf return cut space jc gamma max kx gamma max gamma max search max gamma max search max unfortunately worst case search time tree method see pp 
efficient algorithms exist direct access method require storage 
practice observed performance trees 
search time depends heavily max max small search performed fast see experiment section 
update max iteration quite small iterations 
curve sampling described earlier chained points represent free form curve equivalent piecewise linear approximation 
assumed approximation error small 
algorithm developed section simplified real definition distance point curve see eq 

minimum distances point sample point curve 
different sampling curve approximation error negligible affect final estimation motion 
take simple example shown fig 

curve consists line segments fig 

sampling frame consists points indicated crosses fig 

samplings second frame 
sampling consists points indicated dark dots second sampling consists points adding additional ones indicated empty dots sampling shown fig 

motion result frames sampling shown fig 
second sampling fig 

clearly samples better results 
solve problem resulted sampling ideally real distance definition eq 
considering points referred curve points line segments composing curve closest curve points closest sample points 
lose efficiency achieved sample points 
fig 

influence curve sampling motion estimation describe methods overcome problem main taining efficiency algorithm 
consists simply increasing number sample points 
number sample points sampling affect final motion estimation 
causes problems 
increase memory required 
second increase search time increase size tree 
tradeoff 
clear effect sampling final motion estimation approximately half average sample interval case perfect registration shown example fig 
distance point frame match second frame bigger half corresponding interval second frame 
mm implementation tolerable effect sampling neighboring sample points away add points necessary distance neighboring points equal 
process needed curves second frame done preprocessing stage 
second method approximation fig 

computing closest point real definition distance point curve eq 

described sect 
point obtain list points second frame distances max points arranged increasing distance order 
second points list 
match assign virtual point described virtual point closest point line passing see fig 

satisfies relations gamma delta gamma gamma theta gamma delta theta denote inner product cross product vectors 
explicitly gamma delta gamma kx gamma gamma doing ensure neighbors 
methods merit drawback 
expect obtain precise estimation motion second method 
compute virtual point point frame iteration method additional computation performed preprocessing stage 
implemented method obtain estimation required precision 
choice parameter parameter needed supplied user indicates registration frames considered 
words value correspond expected average distance registration 
motion big small 
set max small find matches iteration course improve motion estimate 
solution set max bigger say 
value impact cons phi phi phi phi gamma gamma fig 

illustration perfect registration show choose vergence algorithm 
smaller necessary iterations required algorithm converge matches discarded step matching update 
hand bigger necessary possible algorithm converge correct solution possibly false matches discarded 
prudent better choose small value worked better solution ad hoc choice 
average distance successive points second frame gamma kx gamma gamma consider perfect registration shown fig 

points frame marked cross second dot 
assume cross located middle dots 
case mean distances sets points equal 
expect registration perfect 
implementation set gives satisfactory results 
uncertainty importance explicitly estimating manipulating uncertainty recognized computer vision robotics community 
extremely important data available different uncertainty distribution example stereo uncertainty increases significantly depth 
shown accounting uncertainty motion estimation kalman filter yields better results 
computational tractability reasonable approximation uncertainty point reconstructed stereo usually modeled gaussian characterized position vector theta covariance matrix 
algorithm motion computation described sect 
efficient 
assumes point equal uncertainty 
unfortunately difficult extend fully take uncertainty account 
fully take uncertainty account example kalman filtering techniques widely successfully applied solve quite number vision problems 
saying difficult fully take uncertainty account algorithm described sect 
mean extend partially take uncertainty account 
associate pairing frames weighting factor 
minimizing eq 
compute minimizing function gamma positive weighting factor associated pairing dual quaternion representation objective function written quadratic function const 
gamma gamma const 
observe similarity eq 
eq 

quaternion eigenvector matrix gamma gamma corresponding largest eigenvalue 
quaternion gamma weighting factor related uncertainty rx gamma covariance matrices rx gamma sensing system stereo 
computed takes rotation matrix computed previous iteration approximation 
trace roughly indicates magnitude uncertainty rx gamma choose tr tr tr weighting factor independent rotation 
coarse fine strategy shown section find fast convergence algorithm iterations slows approaches local minimum 
find search time required iterations search space larger described sect 

total search time linear number points frame natural exploit coarse fine strategy 
iterations coarser samples sample points curve 
algorithm converges available points order obtain precise estimation 
experimental results proposed algorithm implemented order maintain modularity code optimized 
motion estimation algorithm described sect 
take account measurement uncertainty experiments described 
experiments parameters mm see sect 
computed described sect 

larger 
program run sun workstation quoted times execution machine 
section divided subsections 
algorithm applied synthetic data 
results show clearly typical behaviour algorithm expected practice 
second describes robustness efficiency algorithm synthetic data different levels noise different samplings 
third describes experimental results real data 
case study experiment parametric curve described sin cos 
curve sampled twice different ways 
sample set contains points 
second set rotated translated gamma gamma get noise free frames 
noise free data experiments described section 
point zero mean gaussian noise standard deviation equal added components 
show fig 
front top views noisy data 
visual convenience points linked 
solid curve frame dashed second frame 
data smoothing performed 
fig 

front top views data step find matches points frame 
max big point match 
find matches total shown fig 
matched points linked 
false matches observed 
update matches technique described sect 
matches survive shown fig 

updating false matches 
matches false matches motion estimation algorithm yields reasonable estimate 
observed fig 
motion estimated applied points frame 
observe improvement registration curves especially top view 
enter second iteration 
find time matches shown fig 

top view shown curves close 
false matches observable 
updating matches remain shown fig 

matches correct 
motion computed matches 
fig 

matched points iteration updating front top views fig 

matched points iteration updating front top views iterate process manner 
motion result iterations shown fig 

registration curves quite 
algorithm yields iterations motion estimate theta gamma theta gamma gamma theta gamma theta theta gamma theta fig 

front top views motion result iteration fig 

matched points updating second iteration front view measure precision motion estimation define rotation error kr gamma rk krk theta respectively real estimated rotation parameters fig 

front top views motion result iterations translation error kt gamma tk ktk theta real translation parameter estimated 
fig 
show evolution rotation translation errors versus number iterations 
fast convergence observed iterations relatively slower 
iterations rotation error translation error 
show table intermediate results different iterations 
results divided parts 
second fourth rows indicate execution time seconds required finding matches updating matching computing motion respectively 
fifth row shows values max different iterations 
row shows comparison numbers matches different iterations updating 
remarks ffl max decreases monotonically number iterations 
registration better better max computed dynamically statistic analysis distances 
ffl time required finding matches decreases monotonically 
monotonic decrease max search tree required search region smaller 
errors iterations error rotation error translation fig 

evolution rotation translation errors versus number iterations ffl time required updating matching negligible 
ffl time required computing motion constant related number matches constant 
furthermore motion algorithm efficient seconds matches 
ffl numbers matches updating vary iterations 
implies gaussian assumption distance distribution reasonable 
total execution time seconds experiment 
synthetic data section describe robustness efficiency algorithm synthetic data section different levels noise different samplings 
results average tries 
table 
detail results different iterations iteration matching time update time motion time max nb 
series experiments carried respect different levels noise 
standard deviation noise added point varies 
similar fig 
show sample fig 
fig 
evolutions rotation translation errors versus number iterations standard deviation equal 
results observe ffl translation error decreases monotonically shape rotation error complex 
ffl noise stronger impact rotation parameters translation parameters 
noise small general smaller error rotation translation 
noise important inverse observed 
think phenomena due fact relation measurements rotation parameters nonlinear measurements translation parameters linear 
visually demonstrate effect noise added ability algorithm show fig 
fig 
sample results 
upper row displays front top views noisy curves registration lower row displays front top views noisy curves registration 
fig 
fig 
added components point curves zero mean gaussian noise standard deviation equal respectively 
curves noisy registration surprisingly 
summarize results table 
rotation translation errors measured percents execution time seconds 
errors iterations error rotation error translation fig 

evolution rotation translation errors versus number iterations standard deviation equal number shown average tries 
iterations applied 
ffl errors rotation translation increase increase noise added data expected 
ffl noise measurements effect rotation translation 
ffl algorithm robust 
yields reasonable motion estimation data significantly corrupted 
ffl execution time increases increase noise added data 
data noisy value max stays big search performed large space 
investigate ability algorithm respect different samplings curves 
data 
zero mean gaussian noise standard deviation equal added components error iterations error rotation error translation fig 

evolution rotation translation errors versus number iterations standard deviation equal table 
summary experimental results synthetic data standard deviation rotation error translation error execution time point curves 
described sect 
effect different samplings curves second frames 
vary sampling curve frame points points 
tries carried sampling 
errors rotation translation percents execution time seconds versus different samplings shown table 
remarks ffl generally speaking samples curve fig 

front top views noisy curves standard deviation equal registration error estimation rotation translation 
exact relation clear 
consider sampling sampling 
points points 
motion error twice large 
ffl execution time decreases monotonically number sample points decreases 
relation linear 
fast decrease observed number sample points high 
foregoing discussions observed coarsely sam fig 

front top views noisy curves standard deviation equal registration points curves frame affect accuracy final motion estimation considerably speeds process 
natural think coarse fine strategy described sect 

finding fast convergence algorithm iterations see fig 
fig 
finding relatively expensive search see table justify strategy 
iterations coarser sample points allows finding estimation close optimal 
table 
results respect different samplings fraction points rotation error translation error execution time sample points refine estimate 
conducted experiments data adding zero mean gaussian noise standard deviation equal 
iterations points points 
followed iterations points 
average results experiments rotation error translation error execution time comparison performed iterations points 
average results tries rotation error translation error execution time little difference final motion estimations observed algorithm twice faster exploiting coarse fine strategy 
real data section provide example real data 
stereo system mounted mobile vehicle take images chair scene scene static robot moves 
show fig 
images taken camera different positions 
displacement positions degrees rotation millimeters translation 
chair meters mobile vehicle 
curve stereo algorithm developed laboratory reconstruct frames corresponding positions 
curves points frame curves points second frame 
show upper row fig 
front view top view superposition frames 
curves frame displayed solid lines second frames dashed lines 
apply algorithm frames 
algorithm converges iterations 
takes total seconds sun workstation half time spent fig 

images chair scene taken camera different positions iteration speed process setting max smaller value 
final motion estimate gamma theta gamma theta gamma theta gamma gamma theta gamma theta gamma theta motion change ffir 
result shown lower row fig 
applied estimated motion frame 
excellent registration observed chair 
registration border wall little bit worse error introduced reconstruction far away cameras 
exploit coarse fine strategy 
coarse matching iterations sampling evenly points curves frame followed fine matching points 
algorithm converges iterations yields exactly motion estimation doing fine matching 
execution time decreases seconds seconds times faster 
sample evenly points curves frame coarse matching iterations fine matching subsequent ones algorithm converges iterations fig 

superposition frames registration front top views iteration final motion estimate gamma theta gamma theta gamma theta gamma gamma theta gamma theta gamma theta estimated directly points 
motion change ffir 
execution time seconds 
discussions complexity described earlier iteration algorithm consists main steps 
find closest points expected cost log number points second frames respectively 
second update matching recovered step cost 
step compute motion cost 
total complexity algorithm log 
simplicity assume compare complexity algorithm matching methods 
typically string matching method registration curves containing points cost log 
number curves frame assume curve contains approximately number points 
possible pairings curves frames total cost typical string matching method log mn log simple computation shows gamma mn log log practice curve contains points 
gamma algorithm lower bound computational cost 
curve frame algorithm complexity typical string matching method 
large motion local property matching criterion algorithm converges closest minimum 
best applied situations motion small approximately known precise estimation motion required 
case large motion algorithm adapted different ways 
way apply global methods cited introductory section obtain estimation refined applying algorithm described 
second way obtain set initial registrations sampling motion space apply algorithm initial registration 
final estimation corresponding global minimum error retained optimal 
method solve object recognition problem 
multiple object motions dynamic environment usually moving object 
important reliable algorithm segmenting scene objects motion information 
little done far direction 
proposed framework deal multiple object motions 
consists levels 
level deals tracking tokens frame frame estimation motions 
processing completely parallel token 
second level groups tokens objects similarity motion parameters 
tokens coming single object motion parameters 
tokens line segments experiments shown framework flexible powerful 
replace line segments curves estimate motion curve general framework applicable 
highlights respect previous noted independent curve matching conducted besl mckay 
idea iteratively matching points set closest points set main difference lies matching criterion 
refer eq 

algorithm take value depending point set reasonable match second set 
determined maximum tolerable distance max turn set dynamic way analyzing statistics distances described sect 

therefor algorithm capable dealing situations besl mckay show sets data differing large motion 
sample motion space obtain set initial registrations described sect 

show particular initial registration leads final result 
ffl gross outliers data 
outliers automatically discarded matching effect final motion estimation 
ffl appearance disappearance curves set appear set 
usually case navigation objects may enter leave field view 
ffl occlusion 
object may occlude objects may occluded 
common object recognition navigation 
algorithm besl mckay takes value 
algorithm deal case set subset second set 
situations described 
differences algorithms include ffl trees algorithm speed computation finding closest points 
ffl dual quaternion method algorithm compute motion possibility partially take account uncertainty data points 
singular value decomposition method algorithm 
described algorithm registration free form curves arbitrary space curves type practice 
assumption motion frames small approximately known realistic assumption practical applications including visual navigation 
number experiments carried results obtained 
algorithm features ffl simple 
reader easily reproduce algorithm 
ffl extensible 
sophisticated strategies figural continuity easily integrated algorithm 
ffl general 
representation general representing arbitrary space curves type practice 
second ideas algorithm applicable matching problems 
algorithm easily adapted solve example curve matching surface matching 
ffl efficient 
expensive computation process finding closest points complexity log 
exploiting fine strategy described sect 
considerably speeds algorithm small change precision final estimation 
ffl robust gross errors deal appearance disappearance occlusion objects described sect 

achieved analyzing dynamically statistics distances described sect 

ffl yields accurate estimation available information algorithm 
ffl require preprocessing point data example smoothing 
data algorithm 
approximation error ffl require derivative estimation sensitive noise contrast feature string matching methods 
algorithm partially take uncertainty measurements account 
fully take account uncertainty replace dual quaternion algorithm methods kalman filtering techniques 
causes significant increase computational cost algorithm 
algorithm converges closest local minimum appropriate solving large motion problems 
possible extensions algorithm deal large motions described sect 
coupling global method sampling motion space 
algorithm parameter parameter needs set user 
indicates registration considered 
impact convergence rate described sect 

implementation automatically computed intervals chained points 
method works experiments carried 
better method probably exists 
intuitively parameter related intervals chained points shape curves 
smaller rough curves smooth ones 
currently investigating issue 
currently extending algorithm solve surface matching problems arising navigation 
mobile vehicle navigates natural certain errors introduced reconstruction points propagated motion estimation environment correlation stereo algorithm range finder provides sequence dense maps 
minor modifications needed order produce algorithm registering successive maps 
acknowledgment author olivier faugeras stimulating discussions steve maybank carefully reading draft version 
besl jain dimensional object recognition acm computing surveys vol 
pp 
march 
chin dyer model recognition robot vision acm computing surveys vol 
pp 
march 
besl geometric modeling computer vision proc 
ieee vol 
pp 
august 
bolles cain recognizing locating partially visible objects local feature focus method int robotics res vol 
pp 

walters selection image primitives general purpose visual processing comput 
vision graphics image process vol 
pp 

milios shape matching curvature processes comput 
vision graphics image process vol 
pp 

pavlidis algorithms shape analysis contours waveforms ieee trans 
pami vol 
pp 

schwartz sharir identification partially obscured objects dimensions matching noisy characteristic curves int robotics res vol 
pp 

wolfson curve matching ieee trans 
pami vol 
pp 

besl mckay method registration shapes ieee trans 
pami vol 
pp 
february 
robert faugeras curve stereo figural continuity curvature proc 
ieee conf 
comput 
vision pattern recog maui hawaii pp 
june 
sampson range sensor phase shift detection computer pp 

rad smith accurate parameter estimation quadratic curves grey level images cvgip image understanding vol 
pp 
september 
taubin estimation planar curves surfaces nonplanar space curves defined implicit equations applications edge range image segmentation ieee trans 
pami vol 
pp 
november 
mayhew psychophysical computational studies theory human stereopsis artif 
intell vol 
pp 

pollard mayhew pmf stereo correspondence algorithm disparity gradient limit perception vol 
pp 

zhang faugeras ayache analysis sequence stereo scenes containing multiple moving objects rigidity constraints proc 
second int conf 
comput 
vision tampa fl pp 
ieee december 
walker shao volz estimating location parameters dual number quaternions cvgip image understanding vol 
pp 
november 
faugeras hebert representation recognition locating shapes range data int robotics res vol 
pp 

arun huang blostein squares fitting point sets ieee trans 
pami vol 
pp 
september 
preparata shamos computational geometry 
new york springer berlin heidelberg 
blostein huang error analysis stereo determination point position ieee trans 
pami vol 
pp 
november 
matthies shafer error modeling stereo navigation ieee ra vol 
pp 
june 
kriegman binford stereo vision navigation buildings mobile robots ieee trans 
ra vol 
pp 
december 
ayache faugeras maintaining representations environment mobile robot ieee trans 
ra vol 
pp 
december 
szeliski bayesian modeling uncertainty low level vision int comput 
vision vol 
pp 

zhang faugeras determining motion line segments comparative study image vision computing vol 
pp 
february 
zhang faugeras dynamic scene analysis stereo approach 
springer berlin heidelberg 
zhang faugeras dimensional motion computation object segmentation long sequence stereo frames int comput 
vision march 

