fohm fundamental open hypertext model investigating interoperability hypertext domains dave millard luc moreau hugh davis multimedia research group department electronics computer science university southampton bj uk phone ecs soton ac uk siegfried reich department information systems university linz linz austria ifs uni linz ac open hypermedia systems community largely concerned interoperability hypertext systems share paradigm 
evolved component framework purpose specific incompatible middleware components designed hypertext domain navigational hypertext spatial hypertext taxonomic hypertext 
investigates common features domains introduces fohm fundamental open hypertext model defines common data model set related operations applicable domains 
layer explores possible semantics linking different hypertext domains shows introduce features benefit domains 
keywords component open hypermedia system cb open hypermedia protocol hypertext domains fundamental open hypermedia model fohm interoperability 
open hypertext systems workshop held hypertext antoine proposed workshop design protocol communication hypertext client programs link servers 
motivation suggestion community wasting time re implementing client programs wrappers existing third party applications 
premise proposal features common hypertext systems produce simple protocol clients interoperability clients concentrate research link services 
goal reasonable davis reported back second workshop draft proposal protocol 
proposal heavily authors experiences designing microcosm unfilled sections authors hoped workshop help fill 
viewed wider community draft proposal seen limitations 
main problems original protocol dealt quite specific model point point navigational hypertext way dealing operation distribution models hypertext taxonomic hypertext spatial hypertext features xanadu 
result community moved straightforward client server approach component approach 
architecture component middleware implemented hypertext domain responsible mapping specific structures required client structures stored purpose back server 
model provides extensible architecture new hypertext domains added defining new interface domain implementing appropriate client middleware component 
fully reported reich subject demonstrations hypertext conferences components systems different research labs seen interoperate 
having designed architecture allows multiple hypertext domains operate alongside single framework community interested possibility interoperability different hypertext domains 
distinct sorts inter domain interoperability imagine 
imagine workspaces traditional navigational hypertext workspace second spatial hypertext 
link node workspace node second workspace semantics link 
obvious outcome link followed spatial workspace spatial browser open user continue browse 
interesting second possibility navigational browser remain open continue attempt interpret spatial workspace navigational workspace 
second interpretation inter domain interoperability engendered research reported 
order hypertext domain able interpret second hypertext domain current architecture middleware component adapted translate structures domains domain solution exhibit quadratic growth number domains intend interoperate 
alternatively attempt define common storage layer sufficiently generic store structures required current domains hopefully domains 
start describing characteristics similarities differences existing hypertext domains navigational spatial taxonomic 
describe fohm fundamental open hypertext model identifies data permitted operations client server style architecture 
formal specification operations data 
demonstrate model sufficient represent structural abstractions operations domains 
conjecture model general support types domains 
formally possible generic case define mapping back storage layer domain discuss ways attempt mapping conclude discussing consequences achieving mappings advantages disadvantages domains introduce 
hypertext domains application hypertext seen navigating information spaces world wide web serving prominent example 
hypertext domains specific needs requirements 
domains include spatial hypertext argumentation support taxonomic hypertext hypermedia art hypermedia literature overview see 
hypertext domains systems supporting rely different conceptual models 
ultimate objective common conceptual models understand information spaces 
different criteria measuring objective may apply metrics borrowed software engineering cohesion coherence cognitive requirements domains differ 
domains 
example users navigating web may arrival new link link endpoint endpoint endpoint endpoint anchor anchor anchor node node node link model server start having spatial overview set pages nodes available graphical map navigating 
equally having read set nodes navigation browser may want taxonomic tool order reason set nodes read 
example determine opinions academic papers represent 
briefly describe domains reflect specific properties 
domains described navigational hypertext spatial hypertext taxonomic hypertext 
navigational domain navigational hypertext concerned partitioning information spaces nodes establishing relationships users navigate 
concept simple powerful usable 
links store connections hot spots documents 
clicking hotspot user navigates link 
probably oldest conceptual model hypertext mentioned pioneers 
modern open hypermedia systems combine features early systems keeping linking information separate documents allowing powerful link structures example bi directional ary links 
model follows closely data model specified open hypermedia systems working group 
firmly definition important objects link structure 
consider links shown 
diagram node objects 
represent systems notion document file 
node may anchors associated 
objects define region inside node hotspot example anchor word twelve word seventeen 
endpoint objects bind anchor particular link 
anchor bound links see anchor endpoint contains information relevant anchor context particular link 
operations applied objects include creation deletion primitives objects system follow link function returns set endpoints single input endpoint parameter underlying link structures 
spatial domain domain hypertext referred information analysis information triage 
emerged activities collecting comprehending interpreting diverse sets information need support activities 
opposed navigational hypertext matters ability create move nodes freely 
key characteristic leave structure implicit informal user 
relationships nodes simply expressed visual characteristics spatial proximity color shape 
results interesting properties 
instance node slightly misaligned nodes express uncertainty node part relationship 
words expresses classification relationships nodes related 
spatial hypertext systems inherently flexible 
examples spatial hypertext systems include 
conceptual model summarizes spatial hypertext 
nodes visual symbols servicing wrappers documents characteristics color location shape 
nodes aggregated visually building collections related objects 
composites visual representations collections visual characteristics aggregated composites relationship may circular 
collections typed may form lists matrixes sets stacks effects visual presentation acts organizational aid adding order internal structure collections node may placed proximity node reflect strength association spatial system relationships explicit system queries information visual information stored economically 
systems spatial parsers convert implicit spatial relationships explicit associations system 
parser recognizes way nodes lain decides appropriate structure store information list set 
operations objects include creation deletion adding removing objects composites zoom function allows user zoom composite subcomponents 
category category category perspective perspective category category category category artifact artifact artifact artifact artifact example taxonomy taxonomic domain taxonomic hypertext applies hypertext concepts nonlinear information access individualized views domain reasoning taxonomies biology linguistics application areas 
kind knowledge task model set theory 
users sort artifacts equivalent nodes categories sets characteristics 
different users may different views artifacts partitioned 
taxonomic reasoning process moving structure crossing boundaries overlapping sets 
gives example taxonomy 
people categorized artifacts 
agree lie category artifacts lie sub category 
disagree remaining artifacts split 
view perspective says artifacts lie category artifact lies category 
second view perspective agrees artifact category thinks artifacts different categorized separately categories respectively 
important rules govern shape taxonomies 

taxonomy splits perspectives artifacts reached branch merely categorization changes 

categories single single taxonomy artifact may categories parent category different taxonomy 
artifacts added categories removed 
categories organized hierarchically categories may added removed 
categories circular semantically meaningless 
addition set operations required reason multiple taxonomies set union intersection 
comparison domains number similarities different hypertext domains domains find notions data node navigational visual spatial artifact taxonomic hypertext association link navigational composite spatial category taxonomic hypertext 
hand features appear single specific hypertext domain navigational domain contains anchors allow links point documents anchored entire documents 
spatial domain introduces typed structures lists sets relationships 
taxonomic domain contains perspective objects allow relationship structures diverge different views 
differences concern restricting possible composite structures various domains 
example circularity allowed navigational hypertext taxonomic spatial 
elaborate comparison hypertext domains different features 
section introduce formal model domains shall explore common ground 
formalization formalization hypertext domain 
numerous formal models hypertexts differ motivation 
dexter model defines common vocabulary meaning order talk hypertext systems 
hypertext machine ham architectural description generalpurpose transaction multi user server hypertext storage system 
furuta stotts trellis model formal specification hypertexts petri nets 
hypertexts formalized graphs automata 
authors studied dynamic properties hypertexts terms reader experience formalizing readers see interact hypertext system 
motivation data structures operations pertaining explicit define model common different hypertext domains investigate interoperability 
data operations formalized adopt approach moreau hall formalization hypertext domain 
define machine characterizing states hypertext clients servers 
define client browser user interface displaying documents server maintains documents hyperbase 
supported operations modeled transitions machine possibly changing internal states client server 
instance distribution explicit consider server system 
machine transition consider navigational domain 
step formalization define state space machine 
state space comprises data model architectural organization 
data model defines different data encountered node anchor endpoint link 
architectural organization composed store containing state client currently displayed document 
multiple windows history lists possible model scope 
second step formalization define operations may performed include creating links data retrieving data store performing query getting endpoints data 
state navigational machine executing operation leads new state note denotes transition operation navigational domain 
hypertext domain may formalized similar manner gives transition relations spatial hypertext 
taxonomic hypertext 
fundamental hypertext layer similarities different domains defined fundamental layer composed data structures general encode data structure hypertext domain 
operations data form fundamental open hypertext model call fohm 
define general operations data structures 
contains data model displays operations data describe 
set identifiers formed union sets identifiers respectively associations data data abbreviated refs 
data typically documents formalized hypertext layer need refer assume existence set data 
set associations defined cartesian product sets respectively binding vectors relation types structural types binding composed ref id vector features meant identifier attaches document 
vector features regarded ordered set properties property identifies value set features direction binding geometric property construction require vector features bindings association dimension feature space vector association 
association ids data ids refs ids ids fd data bindings binding vectors associations name relation types list stack perspective structural types inside data refs fl loc specs dir shape features feature vectors dir dst big direction features shape circle shape features shape features spaces feature space vectors name string object objects store object store fundamental data model feature space vector enumerates name different properties defined binding association allows clients construct bindings understood servers clients 
regard vector features extensible record components identified feature space vector 
extensible record critical technique support hypertext domains allows implement data structures variable number features 
association characterized structural type heap list stack exhibit different behaviors association traversed 
define set object union data associations refs 
store defined permanent memory server maps identifiers objects 
displays operations permitted data instance expects association store successful returns new identifier association updated store containing mapping identifier association 
result retrieving object associated valid identifier performed applying store identifier 
lines adding binding association consists retrieving association storing new association new binding binding vector 
note specification functions executable 
operations specification executable call queries 
specification constrains type results queries produce indicate result obtained want preclude implementation 
instance query returns bindings feature vector data ref refers identifier possible formalize complete machine composed client executing sequence operations server containing store 
transitions defined terms supported operations effect client server defined definitions 
result define transition relation fundamental hypertext machine note translation fundamental hypertext layer claim fundamental layer general encode selected hypertext domains may formalized 
hypertext domain exists translation converts state machine configuration fundamental hypertext machine 
similarly hypertext domain transition machine may translated transition fundamental hypertext machine 
navigational domain translation function noted tn navigational state expression tn denotes corresponding fundamental state 
examples link navigational domain defined association single feature space direction 
endpoint mapped binding feature vector contains single entry value set dir 
ii functions store 
store newid store store 

retrieve store object 
store store 
retrieve size dom 
queries store 
setof retrieve retrieve fundamental functions queries composite spatial domain defined association dimensional vector space shape color location 
direct equivalent binding spatial domain translation creates binding feature vector containing shape color location data composite 
strong relationship transition relations defined hypertext domain translation fundamental layer 
takes form diamond property property state follows 
states navigational domain state fundamental 
translation transition exists transitions result translation fundamental layer 
property summarized commutative diagram tn tn 
similar properties hold spatial taxonomic hypertexts 
intuitively property states fundamental layer expressive encode hypertext domains simulate behavior 
conjecture model general simulate hypertext domains particular extensible records accommodate features investigated domains 
fundamental implementation technique interestingly translation fundamental layer reversible 
call inverse translation tn property holds state navigational hypertext machine similar property holds translations spatial taxonomic 
consequently commutative diagram may rewritten follows 
tn 
diagram proves fundamental layer implement hypertext domain 
state suffices convert fundamental representation perform operation fundamental layer convert state back initial domain 
note recommend hypertext implemented complex double translation result shows 
behaviors domain explained terms fundamental layer 
execution fundamental layer suffices domain specific information converted visible user 
investigating interoperability note symmetric property tn hold inverse translation defined fundamental state inverse translation route interoperability hypertext domains 
inverse translations may extended support data come different domains 
possible define meaning domain specific operations data belong domain 
instance mapping navigational hypertext spatial hypertext defined follows requires extending objects navigational domain 
interoperability domains stated features appear domains 
key creating inverse translation define corresponding features domains 
features arbitrary meaningful bringing domain previously 
section suggest cross domain translations data structures consequences 
navigational anchors anchors allow navigational clients parts documents refer entirety 
particularly useful defining hotspots useful defining destination points particularly large documents temporal media 
notion anchor easily extended domains 
allowing parts larger documents organized spatially taxonomically improving granularity referencing 
link set link stack link structures spatial structures spatial structures different associations contain internal structure 
provides ability produce sequences nodes queues lists stacks maps provide information distance link endpoint matrixes taxonomic hypertext distinguishing feature category allowing perspectives split structure content 
navigation provide structured movement information space 
navigational hypertext involves associations ways traversal arrival effected internal structure 
traversal act link 
moment link effectively set different internal structure behavior traversal vary structure 
arrival act viewing structure example traversal 
internal structure effect way members association viewed 
table shows possible semantics traversal arrival different structures 
structural types add valuable organization disorganized 
example take look 
left hand link represented set means unordered endpoint respectively appears 
right hand link represented stack similar set contains internal structure endpoint top stack endpoint bottom 
link semantics dictate users arrive set see endpoints contained users arrive left hand link see endpoints arrive stack see top endpoint stack case right hand link means see endpoint traversing link user uses endpoint member link starting point 
traversing set user arrives endpoints starting 
user started endpoint left hand structure traversal endpoints user reaches arrival object user sees set starting endpoint members stack endpoints side top stack queue endpoint queue start queue list endpoints side members matrix nearest endpoints members table semantics traversal arrival perspective node node arriving link arriving link perspective nodes link arrive endpoints user traverses stack arrive endpoints side starting point 
started endpoint right hand link arrive endpoints taxonomic perspectives taxonomic perspectives allow different views organizations set nodes branch hierarchy 
perspective abstraction ways similar context navigational hypertext systems 
definition context scope overview see generally understood data nodes links arranged number different contexts arrangement seen user depend way model known user example seen skill level 
modeling perspectives associations interesting property allowing users move different views just link 
provides convenient way choosing view 
example arriving link takes directly particular view arriving link takes perspective system user decide view provide 
properties required context hypertext systems 
fohm currently model context observations indicate need extension demonstrate way features domain add improve features 
summary inter domain interoperability relatively new concern hypermedia community 
solution involving definition fohm common model capable representing structures implementing operations domains 
extensible records conjecture fohm general support hypertext domains 
somewhat contrast dynamic arrangement middleware components known structure servers responsible dealing differing semantics various domains stored storage layer 
advantage system able cope wide range different domains adapt new ones 
known structure servers built top storage layer interface general system performance suffer result 
fohm avoids problems restricts common domains able know certain fundamental properties structure type 
additional advantage frontend entities serving domain navigational hypertext certain extent able reason domains spatial hypertext 
particular fohm captures hypertext structure various domains middleware components optional necessity clients inherit responsibility fulfilling structural requirements 
example link created navigational client need interpreted set spatial browser 
fohm interpretation needed concept association structure lists sets captured model 
words navigational spatial browsers know sets navigational client added 
non critical information captured model dealt middleware 
presentation information color particularly example 
case responsibility client server sensible defaults fill information requires stipulated model 
infor mation dependent particular client server example client displays greyscale place model 
shown exercise defining common model selected hypertext domains potentially results type cross fertilization domains may benefit 
instance structure types required spatial hypertext may applied navigation taxonomic hypertext 
equally perspectives known taxonomic hypertext contribute domains 
particularly interesting note functionality added reflect features previously worked hypermedia systems 
example perspectives reflect need context viewed navigational browser lists appear similar notion tour trail 
believe fact fohm reflects requirements encouraging intend extend formal definition include inverse mappings described 
addition comprehensive set structural types needs decided semantics link traversal arrival structures defined 
practical proof concept navigational spatial browser implemented fohm layer access common set structures fohm server 
envisaged taxonomic browser written intention exploring quality validity macro structures taxonomic hierarchy map inverse map process 
potential fohm included component approach needs evaluated 
example build basis structural computing environment 
fohm model forms layer general serve multiple domains specific allow particular features domains expressed fully 
importantly identifying commonalities domains minimizes performance cost normally associated generic approach 

anderson taylor white head critique open hypermedia protocol 
journal digital information jodi 
special issue open hypermedia systems 

bush may think 
atlantic monthly 

campbell goodman ham general purpose hypertext machine 
communications acm july 

davis lewis draft proposal standard open hypermedia protocol 
proceedings nd workshop open hypermedia systems acm hypertext washington march 
available report 
ics tr dept information computer science university california irvine demeyer eds pp 


dervin context name methodological tools taming beast 
information seeking context taylor graham london pp 


engelbart augmenting human intellect conceptual framework 
tech 
rep afosr contract af stanford research institute technical report palo alto ca oct 

furuta stotts programmable browsing semantics trellis 
proceedings hypertext nov pp 


halasz schwartz dexter hypertext model 
communications acm 

lowe hall hypermedia web 
engineering approach 
john wiley sons chichester 

marshall shipman spatial hypertext designing change 
communications acm 

marshall shipman spatial hypertext practice information triage 
proceedings acm conference hypertext april southampton uk pp 


moreau hall expressiveness links hypertext systems 
computer journal 

nelson getting system 
information retrieval critical review schechter ed 
thompson books washington pp 


nelson literary machines 
published author 
mindful press 

environment support structural computing 
phd thesis department computer science texas university college station tx 

lassen pedersen reinert component open hypermedia approach integrating structure services 
new review hypermedia multimedia 
accepted publication 

leggett vision open hypermedia systems 
journal digital information jodi 
special issue open hypermedia systems 

leggett schneider thought 
proceedings acm conference hypertext april southampton uk pp 


schneider leggett designing digital libraries hyper literate age 
journal universal computer 

park structural properties hypertext 
proceedings acm conference hypertext june pittsburgh pa pp 


reich davis anderson mil lard haake addressing interoperability open hypermedia design open hypermedia protocol 
new review hypermedia multimedia 
accepted publication 

reinert lassen pedersen collaborative open spatial structure service component incremental spatial parsing 
proceedings acm conference hypertext february darmstadt germany feb pp 


stotts furuta hypertext databases documents 
electronic publishing origination dissemination design june 

th haake hypermedia cognition designing comprehension 
communications acm aug 

tompa data model hypertext database systems 
acm transactions information systems jan 

trigg straw model link traversal open hypermedia systems 
proceedings th workshop open hypermedia systems acm hypertext conference pittsburgh pa june 
available report 
cs dept computer science aalborg university denmark pp 


van dyke parunak don link set hypermedia taxonomic reasoning 
proceedings acm conference hypertext dec san antonio tx pp 


van dyke parunak hypercubes grow trees observations land 
proceedings acm conference hypertext nov seattle wa pp 


evolving hypermedia middleware services lessons observations 
proceedings acm symposium applied computing sac san antonio tx feb pp 


eds 
proceedings echt workshop open hypermedia systems 
technical report dept computer science aalborg university 
