prudent engineering practice cryptographic protocols mart abadi roger needham november mart abadi systems research center digital equipment lytton avenue palo alto ca usa 
roger needham university cambridge computer laboratory pembroke street cambridge cb qg uk 
preliminary version appeared proceedings ieee computer society symposium research security privacy 
equipment may copied reproduced part commercial purpose 
permission copy part payment fee granted nonprofit educational research purposes provided partial copies include notice copying permission systems research center digital equipment palo alto california acknowledgment authors individual contributors applicable portions copyright notice 
copying reproducing republishing purpose shall require license payment fee systems research center 
rights reserved 
authors principles designing cryptographic protocols 
principles necessary sufficient correctness 
helpful adherence prevented number published errors 
principles informal guidelines complement formal methods assume 
order demonstrate actual applicability guidelines discuss instructive examples literature 
index terms cryptography authentication cryptographic protocols authentication protocols security 
contents basics explicit communication 
appropriate action 
secrecy 
examples principles 
notation naming encryption uses encryption 
signing encrypted data 
timeliness timestamps sequence numbers nonces 
fresh vs generation 
recognizing messages encodings trust acknowledgments cryptographic protocols distributed systems authentication related purposes prone design errors kind 
time various formalisms proposed investigating analyzing protocols see contain 
bibliography includes protocols formalisms 
useful formalisms suggest design rules directly beneficial preventing trouble 
principles design cryptographic protocols 
principles necessary correctness sufficient 
helpful adherence simplified protocols prevented number published confusions mistakes 
arrived principles noticing common features protocols difficult analyze 
features avoided necessary resort formal tools easier reason 
principles informal guidelines useful independently logic 
illustrate principles examples 
order demonstrate actual applicability guidelines draw examples literature 
errors analyze documented previously particular 
examples new protocols denning sacco netscape lu allen black woo lam 
believe instructive 
generally pick examples authentication literature principles applicable example electronic cash protocols 
focus traditional cryptography protocols sort commonly implemented des rsa algorithms 
particular consider subtleties interactive schemes signatures 
discuss choice cryptographic mechanisms adequate protection properties correct implementation cryptographic primitives appropriate subjects discussed 
concentrate simple principles largest potential applicability payoff 
admittedly literature full ingenious protocols attacks 
attempt formulate laws underly ingenuity necessary 
hope simple principles examples contribute engineering robust cryptographic protocols 
basics protocol purposes set rules conventions defining exchange messages set partners 
partners users processes machines generically refer principals 
cryptographic protocols consider part messages encrypted 
interpret term encryption fairly broadly applying example signature operations 
purposes encryption decryption defined key dependent transformations message may inverted definite key keys encryption decryption different depending cryptographic algorithm 
find basic overarching principles design secure cryptographic protocols 
principle concerned content message circumstances acted 
message say means interpretation depend content 

conditions message acted clearly set reviewing design may see acceptable 
explain principles 
lead specific recommendations discuss subsequent sections 
explicit communication full basic principle principle message say means interpretation message depend content 
possible write straightforward english sentence describing content suitable formalism available 
example authentication server send message meaning may expressed receiving bit pattern sends session key intended conversation 
elements meaning explicitly represented message recipient recover meaning context 
particular left inferred context may possible message place 
principle completely original 
recommend logical notation generating describing protocols essentially proposing method follow principle 
establishing correspondence logical protocol concrete implementation simple matter parsing example section 
precise comparison informal ideas difficult find affinity boyd mao proposal protocols robust sense authentication message protocol depends information contained message possession recipient 
operational variant theme appears woo lam say protocol full information protocol initiator responder include outgoing encrypted messages information gathered 
appropriate action message acted suffice message understood variety conditions hold 
conditions consist may regarded informally statements trust anthropomorphic notion care 
statements trust wrong may considered inappropriate 
example believes choosing session keys done suitably trusted server participants session wish protocol wide frog protocol 
general principle conditions message acted clearly set reviewing design may see acceptable 
secrecy secrecy certain pieces information essential functioning cryptographic protocols 
obviously protocol cryptographic keys communicating sensitive data 
important know long piece information needs remain secret protect accordingly 
principles points explicitly 
principles warn mistakes imply loss secrecy integrity authenticity 
examples clarify principles relate need secrecy 
may say secrecy guidelines cryptographic protocols outside scope 
examples principles discuss concrete examples errors avoided basic principles 
introduce principles corollaries basic ones 
particular recommend ffl clear encryption meaning encryption 
ffl clear timeliness messages proved meaning temporal information messages 
hopefully basic principles encourage certain design cryptographic protocols easier follow principles 
notation adopt notation common literature 
notation quite uniform examples compromises uniformity faithfulness original notation 
symbols represent arbitrary principals represents server timestamp nonce quantity generated purpose key gamma inverse 
symmetric cryptosystems des gamma equal 
asymmetric cryptosystems rsa assume simplicity inversion operation involution gamma gamma equals tend gamma secret part public part key pair gamma 
write fxgk represent encrypted knows fxgk inverse obtain secret may refer fxgk signed message encryption operation signature 
example message ft ab describes fourth message protocol message sends timestamp incremented key ab example subscript hint generated subscript ab ab hint ab intended communication similarly may write public key 
typical notation message needs interpreted care 
messages constituting cryptographic protocol sent benign environment frequently unnecessary error corruption loss delay 
accordingly may read message protocol designer intended originated fourth message protocol received 
environment guarantee messages numerical order principals indicated received numerical order principals indicated received solely principals indicated 
assurance needed matters provided part function protocol 
naming immediate instance principle prescribes explicit names principals principle identity principal essential meaning message prudent mention principal name explicitly message 
names relevant message deduced data encryption keys applied 
information deduced omission blunder serious consequences 
principle obvious simple commonly ignored 
give examples fairly different natures 
example denning sacco propose protocol key exchange asymmetric cryptosystem 
messages protocol obtains certificates ca cb connect public keys respectively 
exact form ca cb important purposes 
interesting part protocol message 
sends key ab subsequent encrypted communication timestamp protocol message message ca cb message ca cb ffk ab gamma third message encrypted secrecy authenticity 
sends message important principal obtain ab provides guarantee 
furthermore intent receives message know sent signature gamma 
know message intended 
unfortunately provides final guarantee dramatic consequences 
principal opens communication pretend third party duration validity timestamp 
simplicity omit exchanges yield public certificates ca cb cc 
opens communication message ca cb ffk ab gamma removes outer encryption re encrypts sends message ca cc ffk ab gamma kc believe message particular send sensitive information ab may see 
intended meaning message roughly time says ab key communication 
adequate format message contain elements expressly implication 
obvious message ca cb ffa ab gamma name deducible gamma important format return point section 
example pp 
woo lam authentication protocol symmetric key cryptography 
wants check presence runs message message message fn kas message fa fn kas bs message fn bs nonce server bs keys share basically claims identity message provides nonce challenge message returns challenge encrypted message passes message verification bound name bs message decrypts key re encrypts message 
replies fn bs convinced responded challenge protocol flawed 
connection messages sufficient 
particular connects query reply 
protocol vulnerable attack follows 
suppose willing talk roughly time may line 
impersonate message message message message message fn message fn message fa fn bs message fc fn bs message fn bs message fn bs result decrypting fn messages tells want establish connection 
messages replies challenges receives normally captures destined address 
messages replies challenges 
behalf send 
behalf responds challenge intended messages consults responses 
messages replies replies matches contains challenge intended basis replies believe 
existence attack demonstrates messages protocol sufficiently explicit identity principals question 
contacted woo lam came 
reasoning example may remove flaw changing message protocol message fa bs change discussed example 
example dramatic example provided basic internet protocol lu pp 

protocol complicated detailed description 
intent allow principals obtain session key mediation local servers gateways 
hand fundamental flaw protocol simple 
immediately sees receives message contains name 
obviously opens door confusions different connections 
allows easy attacks defeat protocol 
contacted authors published correction names appear messages explicitly 
example ssl protocol netscape allows web server client exchange session keys 
early version ssl protocol includes messages message fk ab message fn ab message fca fn gamma ab message client sends session key ab server public key 
produces challenge signs returns certificate ca 
messages ones relevant client authentication omit messages 
version ssl protocol fact provide client authentication intended 
leave construction attack exercise reader 
flaw repaired making third message explicit message fca fa ab gamma ab current version ssl protocol corrects flaws 
encryption group principles examples concern encryption 
generally related principle concern encryption means mean 
uses encryption examples illustrate encryption variety purposes context 
ffl encryption preservation confidentiality 
cases assumed intended recipients know key needed recover message 
principal knows gamma sees fxgk may deduce intended principal knows gamma may deduce intended additional information 
ffl encryption guarantee authenticity 
cases assumed proper sender knows key encrypt message 
encryption clearly contributes meaning message 
extreme situation principal shows key known encrypting null message timestamp 
ffl encryption guarantees confidentiality authenticity serves binding parts message receiving fx receiving fxgk fy encryption bind parts message signature sufficient 
meaning attached binding protocol dependent subtle 
ffl encryption serve producing random numbers 
vast theory explains relation way functions random number generators 
level abstraction consider typically assumes random numbers available examining constructed see example 
considerable confusion uses meanings encryption 
cryptography asymmetric may obvious intended cryptography symmetric generally 
principle clear encryption done 
encryption wholly cheap asking precisely done lead redundancy 
encryption synonymous security improper lead errors 
example kerberos protocol original protocol timestamps nonces order remove flaws demonstrated denning sacco order reduce total number messages required 
needham schroeder protocol kerberos protocol relies symmetric key cryptography 
slightly simplified version protocol goes message message ft ab ft ab bs kas message ft ab bs fa ab message ft ab timestamps lifetime 
initially server shares keys bs principals execution share ab protocol serves illustrate different uses encryption describe protocol step step ffl encryption essential message 
encryption attacker flood requests keys falsifying instances message 
common designers focus sort vulnerability 
ffl message requires encryption ab remain confidential sign message proof authenticity 
ffl may question double encryption message 
probably double encryption simply inherited needham schroeder protocol see example 
needham schroeder protocol double encryption add points view confidentiality authenticity entirely free cost 
provide guarantee receives part message knows extracted message looked message 
heintze tygar discuss similar encryption variant otway rees protocol 
interpretation encryption sound slightly unusual probably protocol designers mind 
double encryption eliminated versions kerberos 
ffl second part message encryption entirely different purpose encrypts ab order prove knowledge ab near time general may hours newer different encryption redundant double encryption message gives adequate proof knowledge ab case second part message omitted altogether message 
ffl encryption message serves analogous purpose 
examples illustrate interaction encryption nonces 
short encryption binding nonce provides association message implicit name 
principle missing name explicit 
encryption nonces simpler economical 
signing encrypted data signature name suggests indicate principal encrypted message 
frequently taken guaranteeing signing principal knew message content 
hard fortunately unnecessary precise knowing informal notion sufficient stating principle principle principal signs material encrypted inferred principal knows content message 
hand proper infer principal signs message encrypts privacy knows content message 
failure follow principle lead errors example 
example ccitt standard contains set protocols messages 
protocols intended signed secure communication principals assuming knows public key 
ccitt proposal problems 
discuss problem described appears message protocol message ft fy gamma timestamps nonce user data 
protocol uses hashing reduce amount encryption 
show affect argument 
protocol intended ensure integrity assuring recipient origin guarantee privacy transferred signed message evidence suggest sender aware data sent private part message 
corresponds scenario third party intercepts message removes existing signature adding blindly copying encrypted section signed message 
problem avoided means simplest sign secret data encrypted privacy 
particular case principle concerns hash functions example common hash functions order save encryption asymmetric key systems see example 
particular send signed confidential message follows message fxgk fh gamma way hash function 
sends message discovers knows signed hash example request operation may infer supports think way hashing encryption principle applies 
instance means certain knew example secret password certain knew secret may received friend 
general recommend careful examination protocols require principal sign material encrypted principal decrypt 
hand signing encrypting bill health see example 
timeliness important part meaning message temporal information 
common precondition acting message reason believe message fresh replay old 
freshness inferred component message 
bound rest message attached message replayed 
important understand properly freshness component works assumed 
group principles examples concern time 
address assumed proofs timeliness prove 
timestamps sequence numbers nonces guarding replay messages earlier run protocol common nonces part challenge response exchange 
message sent leads reply produced knowledge message 
objective guarantee second message sent bind 
confusion nonces guaranteed new random unpredictable 
propose principle clear properties assuming nonces 
may ensuring temporal succession may ensuring association association best established means 
example otway rees describe protocol 
allows parties establish shared key ab help server share keys bs respectively nonces message fn message fn fn bgk bs message fn ab kas fn ab bs message fn ab kas protocol analyzed 
relative bold idealization protocol assigning meanings messages 
consequence suggested passing encryption message unnecessary 
mao boyd explained detail encryption essential bound names encryption messages serve secure messages 
encryption secrecy binding nonces exploited proofs timeliness substitutes names 
encryption avoided names included reply message message message fn ab kas fn ab bs message fn ab kas protocol efficient conceptually simpler modification 
example example describes protocol due woo lam 
looking back encryption protocol notice purpose encryption message bind parts message 
looking back nonces notice provides proof freshness association name intended 
argue example message mention name explicitly sake security 
change binding message unnecessary 
needs viewed proof freshness 
protocol simply message message message fn kas message fn kas message fa bs essential nonces unpredictable 
fact value counter proper nonce 
predictable nonces caution principle predictable quantity value counter serve guaranteeing newness challenge response exchange 
predictable quantity effective protected intruder simulate challenge replay response 
example protocols rely synchronized clocks accompanied protocols access time servers 
protocols rely synchronized clocks rely random nonces predictable nonces 
random nonces may message message ft kas current time random nonce challenge 
exchange accepts current time response arrived reasonably soon challenge 
reiter exploits random nonces roughly manner 
protocol predictable 
attacker set clock back early request current time value nonce saves response forwards response uses value challenge 
predictable protected message fn kas message ft fn kas kas attack longer possible 
note important remain secret assumed predictable 
encryption message serves construct quantity fn kas predict quantity predict 
similar exchange arises context kerberos 
neuman stubblebine suggest kerberos obtain time time server 
quantity nonce roughly predictable incorrect timestamp encrypted expect difficulties 
freshness proved timestamps 
timestamps appealing easier random numbers 
correct 
number aspects prudent practice timestamps misunderstood 
timestamps kind nonce 
case ultimate user timestamp part response originator challenge timestamp part 
style depend clock synchronization need care timestamp may large extent predictable 
style depend clock synchronization 
recipient message looks timestamp accepts message timestamp reasonable interval recipient local time 
case principle timestamps freshness guarantees absolute time difference local clocks various machines allowable age message deemed valid 
furthermore time maintenance mechanism part trusted computing base 
example timestamps received abundant attention authentication literature 
gong particular described problems arising incorrect timestamps 
keep example brief summarizing gong example kerberos system 
kerberos principal slow clock exposed sorts difficulties principal may mistake expired certificates current ones 
interesting fast clock opportunity attackers 
principal signs request time timestamp attacker replay request near time effect request time may benefit example workstation time bellovin merritt discussed problems timestamps kerberos 
fresh vs generation roughly bit pattern fresh message contains 
clearly suffice bit pattern participate message may participate old ones 
observation important keys principle key may example encrypt nonce quite old possibly compromised 
key look better 
example needham schroeder protocol kerberos protocol similar structure goal needham schroeder protocol reads message message fn ab fk ab bs kas message fk ab bs message fn ab message fn ab kerberos contact provides session key ab certificate encrypted key bs conveying session key decrypts certificate carries nonce handshake assured currently certificate replay 
explained section message contains order distinguish message message 
messages needham schroeder protocol intended convince active 
fact intended convince ab fresh pointed denning sacco compromise session key allow intruder deceive 
importance freshness ab recognized solution may timestamps suggested denning sacco 
solution described sends nonce includes certificate 
example allen black protocols delegation distributed systems 
take example delegation kerberos environment 
protocol client shares key bt authentication server generated timestamp wants key bs communicate server authentication server gives bs fk bs bt constructs ft bs sends message ft bs fk bs bt authors reason having obtained bs able verify replied fresh message session key fresh 
obtains proof bs fresh 
deduce bs may old compromised key 
recognizing messages encodings important principals recognize messages associate correctly current step protocol executing 
possible forms confusion happen current message message similar purpose previous run protocol second current message message belonging protocol protocol 
syverson constructed examples protocols confusions arise 
believe confusions important principles correctly followed 
message says means reason concerned context 
message meaningful meaningless know belongs particular protocol instance 
mapping message appropriate protocol instance convenient contributes compact encoding message 
example message wide frog protocol means form signer key says time ab key talk see example 
principal receives message certain message protocol message encoded compactly ft ab kas arrive recommendation principle encoding meaning message possible tell encoding 
common case encoding protocol dependent possible deduce message belongs protocol fact particular run protocol know number protocol 
mapping message appropriate protocol instance trivial message obeys principles 
message contains sufficient timeliness guarantees sufficient names current instance confused old instance instance principals 
confused concurrent instance principals 
give example principle relevant important principles apply 
example signature confidentiality mediated encryption particular form confusion associated direction message intended pass 
needham schroeder protocol participant sends challenge receives response see example message fn ab message fn ab purpose incrementing distinguish challenge response 
increment attacker send message back mistake reply 
purpose incrementing nonce misunderstood 
example operation appears kerberos unnecessary 
messages clearer rewritten message fn message ab message fn message ab fact way making messages different 
instance suggestion syverson mentioned 
guided principle messages say mean ought rewrite messages message fb says ab key talk receiving ab ab message fa says ab key talk receiving ab course shorter encodings meanings constructed 
risk confusion messages self contained 
important know part particular instance needham schroeder exchange 
trust timestamps explicit time question trust 
principal rely principal putting correct timestamp message 
answer usually acceptable trusts relation timestamps 
idea trust pervasive little elusive 
careful classification types trust taken klein doctoral thesis 
questions practice philosophy trust relations example transitive appropriate pursue 
may simply say trusts regard function loss security follow behaving specified way usually difficult impossible verify behavior 
measure trust involved principal acts content message 
essential trust properly understood 
principle protocol designer know trust relations protocol depends dependence necessary 
reasons particular trust relations acceptable explicit founded judgment policy logic 
example complete loss security follow kerberos server issuing wrong timestamps 
server source time trusted concerned 
may pointed case clients extent monitor behavior trusted server correct time public global 
client reads gps time reason suspicion kerberos time varies time significantly 
example wide frog protocol uses symmetric key cryptography authentication server 
transfers key messages message ft ab kas message ft ab bs sends session key ab including timestamp checks forwards message timestamp checks accepts session key ab communication trusted choose session key 
kind trust thought unacceptable quality requirements placed key generation secrecy non repetition unpredictability doubtless 
example principals associate public keys principals consulting public key certificates 
certificates issued certification authorities cas 
cas trusted certify key proper steps taken identify principal owns 
global source authority surprising area questions transitivity trust come 
may happen way find public key accepting certificate ca ca public key sign certificate ca public key sign certificate public key example 
case knows trusts ca heard certification authorities distrusts 
example usually taken granted principals authentication dialogue honestly working common establishing secure communication channel subsequent 
case may seen communication potential enemies security forces terrorists 
possible sorts bad behavior disclosure keys forgery messages 
assumption particular case explicit 
example access control list acl statement trust principal appears acl operation trusted says operation performed request 
complex matter determine statement trust acl represents appropriate 
question appropriate little sense particularly context completely discretionary access control policies 
understanding acl consequences essential security 
practice common complicated inferences trust necessary 
exception chains trust example simpler practice theory usually difficult isolate trust relations relied particular circumstance 
valuable explicitly may lead useful debate appropriateness trust relations 
principles examples described useful 
bear certain subjective character 
believe respond immediate general need discipline basic mistakes appear print times 
suggestions embodied development methods formalisms 
helpful tried emphasize informal understanding issues essential security 
hope guidelines help improve practice designing cryptographic protocols 
acknowledgments benefited discussions mike burrows butler lampson 
particular discovered examples collaboration mike burrows 
bob morris pointed importance clarifying meaning notation mark lomas helped 
raphael yahalom michael reiter anonymous referees useful comments earlier versions 
authors papers drew examples helpful 
cynthia hibbard suggested improvements exposition 
abadi burrows lampson plotkin 
calculus access control distributed systems 
acm transactions programming languages systems vol 
september pp 

bellovin merritt 
limitations kerberos authentication system 
computer communication review vol 
october pp 

boyd mao 
limitation ban logic 
advances cryptology eurocrypt springer verlag pp 

burrows abadi needham 
logic authentication 
proceedings royal society london vol 
pp 

preliminary version appeared digital equipment systems research center report february 
ccitt 
ccitt blue book recommendation iso directory authentication framework 
geneva march 
denning sacco 
timestamps key distribution protocols 
cacm vol 
august pp 

feige fiat shamir 
zero knowledge proofs identity 
proceedings nineteenth annual acm symposium theory computing pp 

gong 
security risk depending synchronized clocks 
operating systems review vol 
january pp 

heintze tygar 
timed models protocol security 
cmu technical report cmu cs january 
elgamal 
ssl protocol 
internet draft netscape communications version june 
currently available home netscape com std ssl html 

ssl protocol 
rfc netscape communications version october 
lampson abadi burrows wobber 
authentication distributed systems theory practice 
acm transactions computer systems vol 
november pp 


authentication distributed systems bibliography 
operating systems review vol 
october pp 

lu 
secure communication internet environments hierarchical key management scheme endto encryption 
ieee transactions communications vol 
october pp 

lu 
enhanced protocols hierarchical encryption key management secure communication internet environments 
ieee transactions communications vol 
april pp 

mao boyd 
formal analysis security protocols 
proceedings computer security foundations workshop vii pp 

neuman 
design practical electronic currency internet 
proceedings acm conference computer communications security pp 

miller neuman schiller saltzer 
kerberos authentication authorization system 
project athena technical plan section mit july 
moore 
protocol failures cryptosystems 
proceedings ieee vol 
may pp 

national bureau standards 
data encryption standard 
fips pub 
january 
needham 
cryptography secure channels 
distributed systems nd ed mullender editor acm press pp 

needham schroeder 
encryption authentication large networks computers 
cacm vol 
december pp 

needham schroeder 
authentication revisited 
operating systems review vol 
january 
neuman stubblebine 
note timestamps nonces 
operating systems review vol 
april pp 

otway rees 
efficient timely mutual authentication 
operating systems review vol 
january pp 

reiter 
security architecture fault tolerant systems 
ph thesis cornell university 
available technical report department computer science cornell university july 
rivest 
md message digest algorithm 
advances cryptology crypto springer verlag pp 

rivest shamir adleman 
method obtaining digital signatures public key cryptosystems 
communications acm vol 
february pp 


roles cryptographic protocols 
proceedings ieee symposium security privacy pp 

syverson 
key distribution protocols repeated authentication 
operating systems review vol 
october pp 

allen black 
analysis proxy problem distributed systems 
proceedings ieee symposium security privacy pp 

kent 
security mechanisms high level network protocols 
computing surveys vol 
pp 

wobber abadi burrows lampson 
authentication taos operating system 
acm transactions computer systems vol 
february pp 

woo lam 
authentication distributed systems 
computer vol 
january pp 

woo lam 
lesson authentication protocol design 
operating systems review vol 
july pp 
yahalom klein beth 
trust relations secure systems distributed authentication perspective 
proceedings ieee symposium security privacy pp 


