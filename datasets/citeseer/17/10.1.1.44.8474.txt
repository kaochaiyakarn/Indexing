formal interoperability jos meseguer computer science laboratory sri international menlo park ca usa meseguer csl sri com formal methods software specification verification monolithic sense approach formal system specification language formalize desired system properties 
reason formal approaches useful appropriate level abstraction formal systems tools autistic lack theoretical basis related formalisms supporting tools 
consequence extremely difficult integrate rigorous way different formal descriptions reason descriptions 
situation unsatisfactory presents biggest obstacles formal methods software engineering complexity large software systems fact life single perspective single formalization level abstraction suffices represent system reason behavior 
practice find constant need moving back forth different formalizations capturing different aspects system 
example pointed walter bellman simulation area need felt strongly different types mathematical models corresponding constraints simulation satisfy 
similarly large software system typically different requirements functional correctness proper real time behavior concurrency security fault tolerance correspond different views system typically expressed different formal systems 
requirements affect extremely difficult reason mutual interaction tools exist support reasoning 
need mathematical foundations meta formal methods tools achieve formal interoperability capacity move mathematically rigorous way different formalizations system rigorously integrated way different tools supporting formalizations 
basic need appears level relating integrating different mathematical formalisms foundations required metamathematical nature 
provide rigorous foundational answers questions ffl logical formalism 
ffl different formalisms related 
answers questions provide rigorous basis build powerful widely applicable meta tools support formal interoperation different formalisms associated tools 
meta tools kind may include ffl meta logical frameworks different logics specification languages defined executed 
ffl meta logical translators rigorous translations pair logical formalisms defined automated 
extremely useful vastly increase applicability tools example theorem prover logic prove theorems different logic 
supported office naval research contracts nsf ccr 
ffl meta logical module calculus tools specifications arbitrary logic logics support powerful parameterization module composition operations combine specifications highly modular reusable way 
briefly sketch meta logical foundations promising conceptual basis achieve goal formal interoperability 
briefly discuss ffl theory general logics associated notion map logics 
ffl notion meta logical framework rewriting logic purpose 
ffl idea meta logical module calculus combine specifications different formalisms 
ffl concept reflection general logics rewriting logic powerful technique achieve formal interoperability :10.1.1.51.9254
mathematical level category theory provides methods articulate concepts 
fact entirely natural formal interoperability essentially mappings different logical systems 
sketch ways category theory useful foundation 
general logics theory general logics proposed provides axiomatic notions formalizing different aspects logic combinations fuller notions logic 
theory sense modular permits focusing different aspects logic provability relation models proofs combining aspects depending particular applications 
different aspects axiomatized means basic concepts ffl entailment system consequence relation logic ffl institution notion due goguen burstall covers model theoretic aspects logic focusing notion validity ffl logic obtained combining entailment system institution ffl proof calculus enriches entailment system actual proof theory ffl logical system logic choice proof theory key notion mapping translating logic gamma 
preserves logical properties relevant provability formulas satisfaction formula model 
mappings allow relate rigorous way different logics combine different formalisms explore new logics computational purposes 
summarize basic conceptual standpoint theory general logics stating logical formalism specification language prototyping language best purposes 
exists space possibilities universe logics careful choice formalisms best suit purposes exercised 
crucial practice correct flexible methods changing point view move model formalism 
maps logics possible 
definition automation maps kind supported tools meta logical translator supplied formal definition map logics implement map 
meta tool useful enable formal interoperation tools different formal systems 
example automatically translate specifications logic corresponding specifications theorem prover exists 
map required properties conservative theorem prover mechanically prove theorems source specification 
meta logical frameworks rewriting logic meta logical framework universal logic wide variety logics faithfully represented means conservative maps logics gamma 
number logics proposed literature meta logical frameworks kind 
proposals offer variant higher order type theory framework logic see 
simpler alternative proposed mart oliet meseguer rewriting logic flexible natural meta logical framework 
rewriting logic axioms rewrite rules form applied modulo structural axioms specified syntax 
rewrite rules logical computational reading 
logically rewriting step logical entailment formal system 
computationally rewriting step parallel local transition concurrent system 
rewriting logic meta logical framework represent logics semantic framework defining prototyping computational systems languages 
experience far indicates logics including example ffl order logic ffl intuitionistic logic ffl linear logic ffl equational logic ffl horn logic equality ffl logic having sequent calculus presentation represented simple natural way rewriting logic implementation rewriting logic prototyped executed corresponding representations 
conjecture effectively logic logic practical computational interest represented prototype rewriting logic way 
due great flexibility representing computational systems including concurrent ones rewriting logic flexible semantic framework different languages systems example ffl ccs calculus lotos ffl dataflow graph rewriting neural networks ffl petri nets ffl actors ffl unity language ffl functional languages ffl object oriented languages ffl conventional languages precise semantics prototyped executed 
rewriting logic meta logical semantic framework applications described supported tools rewriting logic interpreter way possible combine different logics combining rewriting logic representations interoperate logics combination 
similarly possible combine interoperate executable specifications different languages systems 
working rewriting logic interpreter maude language rewriting logic language implementation efforts cafe elan systems actively pursued japan france 
furthermore choosing adequate subset logic simple maude sublanguage adequate program transformations move specifications subset possible efficiently compile subset rewriting logic wide variety parallel architectures 
meta logical module calculus important fruit theories general logics institutions logic provide general notion theory formally specify aspect component software system logic interpretation view theory 
maps logics possible relate theories specifications different logics 
specification large systems done highly modular parameterized way 
theory composition operations defined logic independent manner possible develop powerful module calculus combining specifications way 
ideas goguen burstall institutions done area extremely encouraging experience exists regard specification languages clear obj act maude 
remains done order ffl extend module calculus powerful new operations ffl support theory composition operations different logics ffl generalize module calculus specifications entire software modules style similar support composition semantic interoperation software modules 
useful tool meta logical module calculus system instantiated compose specifications logical formalism formalisms extension tool entire software modules 
way specification languages programming languages systematically endowed powerful module compositionality operations dramatic increase reusability modules reliability semantic compositions 
furthermore module calculus reduced fixed repertoire module operations example colimits theories 
reflective techniques bring data type modules object level logic module operations extensible user definable opening unlimited range possibilities module composition transformation 
reflection reflection system ability represent control metalevel 
way powerful techniques extend adapt modify system available 
researchers recognized great importance usefulness reflection programming languages theorem proving concurrent distributed computation areas compilation programming environments operating systems fault tolerance databases see snapshots research reflection 
particular reflective methods enormously useful achieve formal interoperability 
spite important topic semantic foundations reflection understood 
case reflection logical languages manuel clavel proposed general axiomatic notion reflective logic 
axioms theory general logics formulated logic independent way reflective logic explicit parameter depend particular details logic 
key concept axiomatization reflective logics notion universal theory theory simulate deductions theories class theories interest 
particular theories class simulate metalevel object level process iterated ad infinitum giving rise reflective tower 
encouraging experience extensions kind lil exists 
inst ent log gamma gamma gamma gamma gamma psi gamma gamma gamma gamma gamma psi gamma gamma gamma gamma gamma psi inst ent log ent log categories logical structures relationships 
examples reflective logics including lambda calculus turing machines discussed 
manuel clavel shown specific universal theory rewriting logic reflective 
exploited maude language implementation efficiently supports reflective rewriting logic computation 
currently exploiting reflection wide range applications maude 
applications directly relevant formal interoperability 
include ffl logical framework applications reflective logical framework rewriting logic define execute maps logics framework 
ffl modularity applications reflection theories corresponding modules data type inside logic open extensible module algebra defined 
ffl internal strategies reflection execution strategies expressed inside rewriting logic formally defined executed rewrite rules operate metalevel entities 
ffl formal environments reflection easy specify build formal environments providing theorem proving formal analysis support logically specification programming language 
categories theory general logics extends theory institutions related notions proposed literature including see discussion area 
approaches institutions category theory foundation essential way 
specifying logic component institution proof calculus amounts specifying number categories functors natural transformation 
example syntax category signatures sentences functor signatures sets models signature form category process associating signature category models contravariant functor signatures category categories 
categories intense model theory logic category structure theory interpreted structure preserving functor free category generated theory 
case categorical logics lawvere functorial semantics algebraic theories paradigmatic example 
logic appropriate component define category theories logic specifications declarative programs provide appropriate notion module 
theories typically described pairs consisting signature set sentences theory axioms theorems depending particular formulation 
fundamental contributions theory institutions show important theory composition operations including parameterized constructions precise categorical semantics colimit constructions category theories 
mentioned section semantics exploited provide module operations number specification languages clear tradition including 
important purposes formal interoperability maps different logic allow translate logic 
maps preserving appropriate logical structure logic logic component form categories natural way 
example theory general logics entailment systems entailment preserving maps form category ent similar categories inst log institutions logics proof calculi logical systems maps preserving corresponding logical structure 
categories related functors forget extra logical structure shown 
functors inst log ent log inst right adjoints inst left adjoint 
furthermore cerioli shown functors fibrations 
automatically gives method borrowing missing logical structure logic map endow logic missing structure 
example consider case source formalism entailment system wish borrow proof calculus structure map phi gamma 
ent endow proof calculus structure phi 
fact ent fibration done means map phi lifts richer context proof calculi original map phi universal way ent phi phi 
ent phi phi phi ent borrowing construction useful logical interoperability technique 
particular logical framework universal property lifted map permits economical way defining representation maps framework map underlying entailment systems specified 
concluding remarks foundations academic exercise describing past practice past 
great practical importance imagining helping find new powerful general techniques tools specify reason develop evolve reuse software systems 
argued lack meta formal methods tools support interoperation formal methods formal systems greatest obstacles blocking practical applicability formal techniques software engineering 
ideas software foundations promising reach goal formal remains ahead 
having stimulated original goguen burstall institutions related literature ideas developed joint narciso mart oliet cerioli manuel clavel carolyn talcott 

related having direct bearing formal interoperability 
william aitken robert constable judith underwood 
metalogical frameworks ii reflected decision procedures 
technical report computer sci 
dept cornell university lecture max planck institut fur informatik saarbrucken germany july 
astesiano cerioli 
relationships logical frameworks 
bidoit choppy editors trends data type specification volume lncs pages 
springer verlag 
borovansk kirchner kirchner 
moreau vittek 
elan logical framework computational systems 
meseguer editor proc 
intl 
workshop rewriting logic applications volume electronic notes theoretical computer science 
elsevier 
www elsevier nl mcs tcs pc volume htm 
boyer strother moore 
proving correct efficiently new proof procedures 
robert boyer moore editors correctness problem computer science pages 
academic press 
rod burstall joseph goguen 
semantics clear specification language 
bjorner editor proceedings copenhagen winter school software specification pages 
springer lncs 
cerioli jos meseguer 
may borrow logic 
transporting logical structure maps 
theoretical computer science 
manuel clavel steven eker patrick lincoln jos meseguer 
principles maude 
meseguer editor proc 
intl 
workshop rewriting logic applications volume electronic notes theoretical computer science 
elsevier 
www elsevier nl mcs tcs pc volume htm 
manuel clavel jos meseguer 
axiomatizing reflective logics languages 
gregor kiczales editor proceedings reflection san francisco california april pages 
xerox parc 
manuel clavel jos meseguer 
reflection strategies rewriting logic 
meseguer editor proc 
intl 
workshop rewriting logic applications volume electronic notes theoretical computer science 
elsevier 
www elsevier nl mcs tcs pc volume htm 
manuel clavel jos meseguer 
internal strategies reflective logic 
gramlich kirchner editors proceedings cade workshop strategies automated deduction australia july pages 
ehrig orejas 
new concepts amalgamation extension general theory specifications 
bidoit choppy editors trends data type specification volume lncs pages 
springer verlag 
hartmut ehrig bernd mahr 
fundamentals algebraic specification 
springer verlag 
fiadeiro maibaum 
generalising interpretations theories context institutions 
burn gay ryan editors theory formal methods pages 
springer verlag 
fiadeiro sernadas 
structuring theories consequence 
sannella tarlecki editors trends data type specification pages 
springer lncs 
futatsugi sawada 
cafe extensible specification environment 
proc 
international case symposium china november 
fausto giunchiglia paolo traverso alessandro cimatti paolo 
system multi level reasoning 
imsa pages 
information technology promotion agency japan 
goguen 
reusing interconnecting software components 
computer february 
joseph goguen rod burstall 
institutions model theory specification programming 
journal acm 
joseph goguen jos meseguer 
equality types generic modules logic programming 
douglas degroot gary lindstrom editors logic programming functions relations equations pages 
prentice hall 
joseph goguen timothy winkler jos meseguer futatsugi jean pierre jouannaud 
introducing obj 
technical report sri csl sri international computer science laboratory 
appear goguen editor applications algebraic specification obj cambridge university press 
harper sannella tarlecki 
structure theory presentations logic representations 
annals pure applied logic 
john harrison 
metatheory reflection theorem proving survey critique 
university cambridge computer laboratory 
patricia hill john lloyd 
godel programming language 
mit press 
douglas howe 
reflecting semantics reflected proof 
peter aczel harold simmons stanley wainer editors proof theory pages 
cambridge university press 
gregor kiczales editor 
proceedings reflection san francisco california april 
xerox parc 
gregor kiczales jim des rivieres daniel bobrow 
art metaobject protocol 
mit press 
landauer bellman 
integrated simulation environments 
darpa variable resolution modeling conference may herndon virginia 
william lawvere 
functorial semantics algebraic theories 
proceedings national academy sciences 
summary ph thesis columbia university 
patrick lincoln narciso mart oliet jos meseguer 
specification transformation programming concurrent systems rewriting logic 
blelloch chandy jagannathan editors specification parallel algorithms pages 
dimacs series vol 
american mathematical society 
patrick lincoln narciso mart oliet jos meseguer 
compiling rewriting simd mimd simd machines 
proceedings parle th international conference parallel architectures languages europe pages 
springer lncs 
saunders maclane 
categories working mathematician 
springer verlag 
narciso mart oliet jos meseguer 
rewriting logic logical semantic framework 
technical report sri csl sri international computer science laboratory august 
appear gabbay ed handbook philosophical logic kluwer academic publishers 
narciso mart oliet jos meseguer 
general logics logical frameworks 
gabbay editor logical system pages 
oxford university press 
narciso mart oliet jos meseguer 
rewriting logic logical semantic framework 
meseguer editor proc 
intl 
workshop rewriting logic applications volume electronic notes theoretical computer science 
elsevier 
www elsevier nl mcs tcs pc volume htm 
satoshi matsuoka watanabe akinori yonezawa 
object oriented concurrent reflective architectures 
tokoro nierstrasz wegner editors object concurrent computing pages 
springer lncs 
se matthews 
reflection logical systems 
imsa pages 
information technology promotion agency japan 
brian 
galleries institutions 
technical report daimi pb computer science dept aarhus university 
fran cois nicola demers jacques malenfant 
reflection logic functional object oriented programming short comparative study 
ijcai workshop reflection metalevel architectures applications ai pages august 
jos meseguer 
general logics 

ebbinghaus editor logic colloquium pages 
northholland 
jos meseguer 
conditional rewriting logic unified model concurrency 
theoretical computer science 
jos meseguer 
logical theory concurrent objects realization maude language 
gul agha peter wegner akinori yonezawa editors research directions concurrent object oriented programming pages 
mit press 
jos meseguer narciso mart oliet 
data types logical frameworks 
astesiano reggio tarlecki editors trends data type specification santa margherita italy may june pages 
springer lncs 
jos meseguer carolyn talcott 
reasoning theories rewriting logic 
manuscript stanford university june 
okamura ishikawa mario tokoro 
distributed programming system multimodel reflection framework 
imsa pages 
information technology promotion agency japan 
poign 
foundations rich institutions institutions poor foundations 
ehrig editors categorical methods computer science aspects topology volume lncs pages 
springer verlag 
luis rodriguez jr study viability production quality metaobject protocol statically parallelizing compiler 
imsa pages 
information technology promotion agency japan 
scollo 
compactness lowenheim skolem properties pre institution categories 
technical report liens laboratoire informatique de ecole normale sup erieure paris march 
sannella tarlecki 
formal development programs algebraic specifications implementations revisited 
acta informatica 
shankar 
metamathematics machines godel proof 
cambridge university press 
brian smith akinori yonezawa editors 
proc 
imsa international workshop reflection meta level architecture tokyo november 
research institute software engineering 
brian smith 
reflection semantics lisp 
proc 
popl pages 
acm 
steele jr sussman 
art interpreter modularity complex 
technical report aim mit ai lab may 
william tracz 
formal specification parameterized programs 
manuscript version 
valentin turchin 
concept supercompiler 
acm transactions programming languages systems 
walter bellman 
issues model integration 
eastern simulation conference 
wand friedman 
mystery tower revealed 
lisp symbolic computation 
richard weyhrauch 
prolegomena theory mechanized formal reasoning 
artificial intelligence 
