transforming abductive logic programs disjunctive programs inoue department information computer sciences university technology cho japan inoue tut ac jp sakama research institute kyoto kyoto japan sakama jp new fixpoint semantics abductive logic programs provided generalized stable models abductive program characterized fixpoint disjunctive program obtained suitable program transformation 
transformation negative hypotheses negation failure positive hypotheses abducibles dealt uniformly 
characterization allows parallel bottomup model generation procedure computing abductive explanations arbitrary range restricted function free general extended disjunctive programs integrity constraints 
abduction inference explanation recognized important form reasoning logic programming various ai problems 
ek km gel ino abduction expressed extension logic programming 
eshghi kowalski ek give abductive interpretation negation failure cla class general logic programs show correspondence stable models gl general logic program extensions associated abductive framework :10.1.1.24.6050
approach extended km dun 
kakas mancarella km propose framework abductive logic programming defined triple general logic program set abducible predicates set integrity constraints 
generalized stable model defined stable model satisfies set ground atoms predicates 
hand gelfond gel proposes abductive framework extended disjunctive programs gl allow disjunctions proceedings th international conference logic programming iclp mit press pp 

heads classical negation negation failure 
inoue ino proposes general framework hypothetical reasoning called knowledge system allowing extended logic program candidate hypotheses shows knowledge system transformed semantically equivalent abductive logic programming framework 
compute stable models general logic program answer sets gl extended disjunctive program inoue shown constructive definition stable models answer sets provided bottomup procedure model generation techniques mb fh 
inoue sakama proved procedure formal fixpoint semantics general extended disjunctive logic programs 
basic idea technique transform program semantically equivalent positive disjunctive program containing negation failure 
generalize inoue program transformation technique non abductive programs deal abductive frameworks 
transform abductive logic programming framework positive disjunctive program containing negation failure show generalized stable models abductive framework characterized fixpoint closure transformed program 
organized follows 
section defines framework abductive logic programming 
section successively fixpoint theories positive disjunctive programs general logic programs abductive logic programming 
section extend results extended disjunctive programs abducibles 
section presents model generation procedure computing generalized stable models 
comparisons fixpoint theory previous discussed section 
model theory abductive logic programs definitions abduction pga ek km bry gel ino cdt ino 
semantics abduction generalized stable models defined kakas mancarella km 
stated section abductive framework triple general logic program set abducible predicates set integrity constraints 
compared abduction order logic pga ino kakas mancarella define program order formulas general logic program negation failure 
definition covers general class programs console object level abduction cdt defined hierarchical logic programs 
different definitions gelfond gel inoue ino general km sense allow extended classes programs 
revisit extension section 
define abductive general logic program pair way slightly different kakas mancarella framework 
separating integrity constraints program include program distinguish clauses 
main reason treatment check consistency extra mechanism integrity checking closure computation defined subsequent sections 
purpose give syntax stable model semantics general logic programs 
definition general logic program finite set clauses form 
bm bm 

bm bm 
atoms 
left hand right hand side called head body clause 
clause form called integrity constraint 
integrity constraint called negative clause general logic program containing called horn program 
horn program containing negative clauses called definite program 
definition allow program integrity constraints clauses empty heads explicitly defined gl :10.1.1.24.6050
km defines integrity constraints order formulas separated programs integrity constraint form order formula characterized clause head translated clauses transformation lt 
instance integrity constraint oe expressed semantics general logic program clause containing variables stands possibly infinite set ground instances obtained instantiating variable elements herbrand universe program possible way 
interpretation program defined subset herbrand base hb program 
interpretation satisfies ground horn clause 
bm fb 
bm implies especially satisfies ground negative clause 
bm fb 
bm horn program smallest interpretation satisfying ground clause called model definition general logic program interpretation 
reduct defined follows clause 
bm resp 

bm ground clause 

resp 

fbm 

stable model gl model say general logic program consistent stable model called inconsistent :10.1.1.24.6050
define abductive general logic programs semantics 
definition abductive general logic program pair general logic program set predicate symbols called abducible predicates 
set ground atoms hb having abducible predicates called abducibles 
horn program called abductive horn program 
definition abductive general logic program subset interpretation generalized stable model stable model general logic program satisfies generalized stable model minimal generalized stable model satisfies ae generalized stable model definition reduces stable model 
definition condition necessary abducible appearing head ground clause may true abducibles true see example 
way generalized stable model uniquely associated generating abducibles similar extension proposed preist eshghi pe 
definition abductive general logic program atom 
set explanation respect generalized stable model satisfies explanation minimal ae explanation example consider abductive horn program leg broken leg broken leg broken tibia 
leg observation 
leg minimal explanation tibia broken leg non minimal explanation tibia explanation broken tibia causes broken leg generalized stable model satisfying definition minimal explanations purely model theoretic 
case unique minimal explanation reflects fact evidence broken leg broken tibia 
rest assume observation ground atom 
condition restrictive reasons 
abducible explanations trivially contain second contains tuple free variables introduce new proposition add clause program treated observation 
third ask system atoms 
om observed atoms om 
observed definition extension kakas mancarella km allow general logic program integrity constraints km requires abducible predicates appear heads clauses 
abducible identify atom clause introducing clause 
om om 
computing explanations lemma abductive general logic program subset atom 
minimal explanation respect iff minimal generalized stable model og proof observe addition imposes integrity constraint derived 
minimal explanation respect ae explanation respect generalized stable model true satisfies ae generalized stable model og satisfies ae minimal generalized stable model og example consider abductive general logic program fa bg 
unique generalized stable model fr bg 
regard observation fbg unique explanation note add fa bg block derive integrity constraint satisfied 
abduction nonmonotonic relative addition abducibles 
fixpoint theory abductive logic programs section presents fixpoint semantics abductive general logic programs 
introduce fixpoint semantics positive disjunctive programs ii fixpoint semantics general logic programs transformation positive disjunctive programs 
iii fixpoint semantics abductive horn programs program transformation extended iv fixpoint semantics abductive general logic programs combining transformations ii iii 
fixpoint semantics positive disjunctive programs positive disjunctive program finite set clauses form 

bm atoms 
interpretation satisfies ground clause form fb 
bm implies semantics positive disjunctive program minimal models min defined minimal interpretation satisfying ground clauses characterize nondeterministic behavior disjunctive program inoue sakama introduced ordering closure operator lattice sets herbrand interpretations hb follows 
definition sets interpretations 
iff ae partial order element hb complete lattice ordering top element bottom element hb definition positive disjunctive program set interpretations 
mapping hb hb defined mapping hb hb defined follows fb 
bm ground negative clause 
bm ground clause 

fb 
fh 
fh especially 
definition says interpretation satisfy ground negative clause contains interpretation obtained adding single disjunct ground clause satisfied definition ordinal powers defined follows 
successor ordinal limit ordinal 
example get ffr pg fr ffr pgg 
mapping monotonic powers definition increasing 
theorem fixpoint 
call disjunctive fixpoint 
element model 
mm set minimal models mm min min ae 
positive disjunctive program inconsistent iff 
definite program contains unique element model theorem characterizes minimal model semantics min positive disjunctive program 
hand test consistency positive disjunctive program 
furthermore says definite program fixpoint construction reduces van emden kowalski fixpoint semantics 
fixpoint semantics general logic programs characterize stable models general logic program inoue proposed program transformation transforms general logic program semantically equivalent free disjunctive program 
definition general logic program hb herbrand base 
program obtained follows 

clause 
bm bm 

kb 
kb 
bm especially integrity constraint 
kb 
bm 
atom hb clause kb kb resp 
kb new atom denotes believed resp 

transformation rewritten kb shifted head clause 
head true kb body true condition 
kb added constraint ii says atom true time 
interpretation defined subset new herbrand base hb hb fkb kb 
atom hb called objective hb set objective atoms interpretation denoted obj 
shown stable models program produced constructively transformed program 
characterize result disjunctive fixpoint transformed program 
purpose slightly modify mapping definition allow disjunction conjunctions atoms head clause 
conjunction atoms 
denote set conjuncts conj fh 
program interpretation 
mapping hb hb defined fb 
bm ground negative clause 
bm conj set ground clauses 

fb 
conj 
mapping disjunctive fixpoint defined way section properties hold 
definition interpretation canonical ground atom ka implies set interpretations write obj obj canonical theorem due presents fixpoint characterization stable model semantics general logic programs 
theorem general logic program transformed form st set stable models st obj 
especially inconsistent iff obj 
example follows kq kq kp kp kr kr kb fp fp kq kp kp kr rg kp second element canonical 
obj ffq fq rg unique stable model fixpoint semantics abductive horn programs basic idea transformation previous subsection hypothesize epistemic statement atom evaluate negation failure formula assume hold fixpoint 
correctness negative hypothesis kb checked integrity constraint kb fixpoint construction positive hypothesis kb integrity checking carried canonical constraint assumed literals derived fixpoint 
move abduction 
abducible treated epistemic hypothesis previous transformation 
assume abducible true false fixpoint 
difference positive hypothesis ka abducible need canonical constraint 
transformation abductive horn program 
definition abductive horn program 
program obtained follows 

horn clause bma non abducibles abducibles ka 
ka ka 
ka 
bm especially negative clause ka ka 
bm 
abducible contains clauses ka ka see clause transformed abductive horn program clause transformed general logic program dual sense abduced atom dealt positive hypothesis ka negation failure formula dealt negative hypothesis kb 
additional clause abducible clause derives interpretation contains ka interpretation satisfy canonical condition defined definition 
horn clause replace transformed clause clause 
ka 
ka 
bm omit clause abducible denote program obtained alternative transformation 
change affect result fixpoint far objective atoms concerned identify way abduced atom added interpretation imposing condition derived 
lemma abductive horn program 
obj generalized stable model 
generalized stable model generalized stable model obj 
explanation atom explanation obj 
proof obj definite program obtained removing negative clause 
theorem contains unique element ground clause form bma abducibles fb 
bm fa 
hg corresponding clause form fb 
bm fa 
hg ka obj 
model consistent horn program stable model definition generalized stable model 
atom ne ground clause 

abducibles fb 
fa 
ne fa 
clause corresponding clause 
ka 
ka 
fb 
ff ordinal ff exists ff fh 
fh 
stable model satisfies negative clause pruned away 
exists obj generalized stable model follows immediately obj 
explanation generalized stable model satisfying generalized stable model obj 
explanation fixpoint semantics abductive general logic programs show transformation abductive general logic programs combining transformations shown sections 
failure formula non abducible translated way definition split kb kb 
hand negation failure formula mentions abducible split ka abducible deal axiom ka 
definition abductive general logic program 
program obtained follows 

clause 
bm 
bm 

non abducibles abducibles kb ka ka kb 
bm especially integrity constraint transformed ka ka 
kb bm 
atom hb clause kh notice transformed program definition reduces program section empty reduces program section horn program 
lemma abductive general logic program subset generalized stable model iff generalized stable model proof generalized stable model stable model stable model generalized stable model 
lemma abductive general logic program 
obj generalized stable model 
generalized stable model generalized stable model obj 
explanation atom explanation obj 
proof canonical obj 
ground clause form fb 
bm fa 

kb ka 
ka ii ka iii kb iv consider abductive horn program 
ground clause form iii kb kb 
iv 
ground clause form holds fb 
bm fh 
ii ka hand iii kb ne canonical iv corresponding clause exists exists satisfying obj generalized stable model lemma generalized stable model lemma 
part proved similar way lemma 
theorem characterizes generalized stable model semantics abductive general logic program minimal explanations observation terms disjunctive fixpoints transformed programs 
set interpretations write min ae theorem abductive general logic program 
min gst set minimal generalized stable models min gst min obj 
subset atom 
minimal explanation respect iff min obj 
proof lemma follows immediately min gst obj min gst min obj holds 
hand lemma obj generalized stable model min obj min gst min gst ae discussion min obj contradiction 
lemma minimal explanation generalized stable model obj satisfies lemma min gst min gst min obj 
example cont 
example abductive general logic program fa bg transformed contains kq kb kq ka kp kh hb 
fr kq ka unique canonical set min gst ffr 
abductive extended disjunctive programs gelfond gel inoue ino proposed general frameworks abduction km allowing classical negation disjunctions program 
consider fixpoint theory extended classes abductive programs 
extended disjunctive program disjunctive program contains classical negation negation failure program gl defined finite set clauses form lm 
positive negative literal 
semantics extended disjunctive programs notion answer sets 
denote set ground literals program hb 
extended disjunctive program reduct defined follows clause 

lm ground clause form flm 

consistent answer set minimal set satisfying conditions clause 

lm fl 
lm ii integrity constraint 
lm fl 
lm iii contain atom answer set semantics extended disjunctive programs direct extension minimal model semantics positive disjunctive programs stable model semantics general logic programs results sections naturally extended 
extra condition consider constraint atom negation consistent answer set 
extended disjunctive program transformed program defined follows clause form contains klm 
kl 
klm 
kl klm 
kl 
lm literal clause kl atom hb clause function obj extended collection sets literals obvious way 
theorem extended disjunctive program set consistent answer sets obj min 
define abduction extended disjunctive programs 
definition abductive extended disjunctive program pair extended disjunctive program set positive negative predicate symbols abducibles set ground literals predicates 
subset set literals se belief set consistent answer set extended disjunctive program satisfies se minimal belief set minimal explanation defined way definitions 
transformation abductive extended disjunctive program defined way definition clause form 

bm 
bm 

literals non abducible literals abducible literals contains clause pre 
pre ka 
ka 
kb 

bm pre 

kb ka 
ka literal clause kl atom hb clause theorem characterizes belief sets abductive extended disjunctive program minimal explanations observation 
theorem abductive extended disjunctive program 
min bs set minimal belief sets min bs min obj min 
minimal explanation literal respect iff se min obj min 
proof proof similar way proof theorem existence disjunctions taken min 
theorem theorem proving result corresponding lemma 
bottom evaluation abductive programs section investigate procedural aspect fixpoint theory abductive programs context particular inference system called model generation theorem prover fh 
parallel refined version mb bottomup forward reasoning system uses hyperresolution case splitting non unit 
positive disjunctive program consisting clauses form 



bm atoms variables assumed universally quantified front clause 
interpretation applies operations expands rejects 
non negative clause form substitution oe 
bm oe 
oe 
expanded ways adding oe 
oe 

negative clause 
bm substitution oe 
bm oe discarded 
obtaining substitution oe sufficient consider matching full unification clause range restricted mb variable clause occurrence body 
case set atoms constructed contains ground atoms 
program input assumed finite function free set range restricted clauses 
connection closure computation fixpoint semantics mapping section obvious regarded extension relation hyperresolution van emden kowalski fixpoint semantics definite programs section 
fact split interpretation constructed hyperresolution applied way case definite programs 
abductive horn general extended disjunctive programs program translations especially suitable parallelism negation failure formula abducible guesses believe 
inoue shown model generation abductive horn programs translation section successfully extracts great amount parallelism solving logic circuit design problem 
comparison approaches console cdt characterize abduction deduction called object level abduction clark completion semantics program cla follows abductive logic program comp completion non abducible predicates observation formula satisfying conditions 
comp fog 
satisfying condition subsumes minimal set explanation object level abduction coincides meta level characterization abduction terms sldnf proof procedure hierarchical logic programs cdt 
note restriction hierarchical programs necessary assuring completeness sldnf resolution characterizing abduction terms completion see kon 
example consider program containing cyclic clauses abducible atom 
comp observation fag comp fog hand qa ka obtained transformation section fq pg 
denecker de schreye dd proposed model generation procedure console object level abduction 
contrast compute models part completed program range restricted general original definite clauses 
extend model generation method incorporating term rewriting techniques original change 
furthermore application procedure limited definite programs 
bry bry firstly considered abduction model generation abduction defined terms meta theory 
eshghi kowalski ek give abductive interpretation negation failure general logic programs 
negation failure formula formula associated new predicate symbol appearing program 
program transformed definite program set abducible predicates 
atom true stable model iff set abducibles ii satisfies integrity constraints abducible predicate disjunctive constraints checked computing models general 
difficult design elegant topdown proof procedure sound respect stable model semantics 
fact eshghi kowalski ek show abductive proof procedure general logic programs incorporating consistency tests general logic programs containing predicates defined positive negative cycles 
sld resolution soundness respect stable model semantics guaranteed general 
abductive general logic program kakas mancarella km transform negation failure formulas show top abductive procedure transformed program obtained transformation ek 
transformation inherits difficulty computation eshghi kowalski abductive interpretation negation failure procedure suffers soundness problem respect generalized stable model semantics 
alternatively ino si show abductive general logic program transformed single general logic program 
atom introduce negative literal pair clauses correspondence generalized stable models stable models transformed program 
transformation satoh iwayama si propose bottom tms style procedure computing stable models general logic program similar sz procedure performs exhaustive search backtracking 
point procedure compute stable models 
comparing procedure procedure advantages procedures sz si 
deal disjunctive programs tms 
second gives high inference rates range restricted clauses avoiding computation relative useless ground instances tms generally deals propositional case 
third performs backtrack free search easily parallelized 
simulation abducibles theoretically correct technique drawback may generate ja interpretations abductive horn program explosive number practical applications 
program transformation methods proposed avoid problem aspects 
epistemic hypothesis positive hypothesis abducibles negative hypothesis negation failure case splitting delayed long possible interpretation expanded ground clause body transformed clause true 
second ground instance hypothesis introduced ground substitution clause variables body clause satisfied 
hypotheses introduced necessary number generated interpretations reduced possible 
example top abductive procedure ek gives proof stable model satisfies eshghi kowalski abductive proof procedure sound respect preferred extension semantics dung dun 
fixpoint semantics positive disjunctive programs studied researchers 
minker rajasekar consider mapping set positive disjunctions called state 
fernandez minker fm fixpoint semantics stratified disjunctive programs fixpoint operator sets minimal interpretations 
decker dec develops fixpoint semantics positive disjunctive programs different manipulation standard herbrand interpretations 
flms fernandez develop method computing stable models similar different program transformation 
transformation head associated prerequisite condition 
kb explicit way case transformation 
furthermore effectively negative clauses prune away improper extensions transformation negative clauses 
extend flms transformation deal abductive general logic programs translation appears suitable handling abducibles 
prerequisite condition definition contains abduced atoms easily identify abducibles atoms obtained model negative clauses test consistency abducibles interpretation 
uniform framework fixpoint characterization abductive horn general extended disjunctive programs 
fixpoint operator complete lattice consisting sets herbrand interpretations generalized stable model semantics abductive general logic program characterized fixpoint suitably transformed disjunctive program 
proposed transformations negative hypotheses negation failure positive hypotheses abducibles dealt uniformly 
result directly applied belief set semantics abductive extended disjunctive programs 
compared approaches fixpoint theory provides constructive way give explanations observations 
showed bottom model generation procedure computing generalized stable models belief sets computational advantage viewpoint parallelism 
algorithm compute belief sets arbitrary forms abductive programs procedural semantics provides general abductive procedure class function free range restricted programs 
acknowledgment hasegawa ohta makoto nakashima useful discussion help 
bry bry 
intensional updates abduction deduction 
proc 
th int 
conf 
logic programming pages 
cla clark 
negation failure 
gallaire minker editors logic data bases pages plenum 
cdt console torasso 
relationship abduction deduction 
logic computation 
dec decker 
foundations order databases 
research report siemens munich 
dd denecker de schreye 
duality abduction model generation 
proc 
int 
conf 
fifth generation computer systems pages 
dun dung 
negations hypotheses abductive foundation logic programming 
proc 
th int 
conf 
logic programming pages 
ek eshghi kowalski 
abduction compared negation failure 
proc 
th int 
conf 
logic programming pages 
fm fernandez minker 
computing perfect models disjunctive stratified databases 
proc 
ilps workshop disjunctive logic programs 
flms fernandez lobo minker subrahmanian 
disjunctive lp integrity constraints stable model semantics 
proc 
ilps workshop deductive databases 
fh fujita hasegawa 
model generation theorem prover kl ramified stack algorithm 
proc 
th int 
conf 
logic programming pages 
gel gelfond 
epistemic approach formalization commonsense reasoning 
research report computer science department university texas el paso el paso 
gl gelfond lifschitz :10.1.1.24.6050
stable model semantics logic programming 
proc 
th int 
conf 
symp 
logic programming pages 
gl gelfond lifschitz 
classical negation logic programs disjunctive databases 
new generation computing 
ino inoue 
extended logic programs default assumptions 
proc 
th int 
conf 
logic programming pages 
ino inoue 
linear resolution consequence finding 
artificial intelligence 
inoue hasegawa 
embedding negation failure model generation theorem prover 
proc 
th int 
conf 
automated deduction lecture notes artificial intelligence pages springer verlag 
inoue ohta hasegawa nakashima 
bottom abduction model generation 
proc 
th int 
joint conf 
artificial intelligence appear 
inoue sakama 
uniform approach fixpoint characterization disjunctive general logic programs 
technical report tr icot tokyo october 
km kakas mancarella 
generalized stable models semantics abduction 
proc 
th european conf 
artificial intelligence pages 
km kakas mancarella 
knowledge assimilation abduction 
proc 
workshop truth maintenance systems lecture notes artificial intelligence pages springer verlag 
kon konolige 
abduction versus closure causal theories 
artificial intelligence 
lt lloyd topor 
making prolog expressive 
logic programming 
mb bry 
theorem prover implemented prolog 
proc 
th int 
conf 
automated deduction lecture notes computer science pages springer verlag 
min minker 
indefinite data bases closed world assumption 
proc 
th int 
conf 
automated deduction lecture notes computer science pages springer verlag 
minker rajasekar 
fixpoint semantics disjunctive logic programs 
logic programming 
pga poole goebel aleliunas 
theorist logical reasoning system defaults diagnosis 
cercone mccalla editors knowledge frontier essays representation knowledge pages springer verlag 
pe preist eshghi 
consistency abductive diagnoses generalized stable models 
proc 
int 
conf 
fifth generation computer systems pages 
sz zaniolo 
stable models non determinism logic programs negation 
proc 
th acm sigact sigmod sigart symp 
principles database systems pages 
si satoh iwayama 
computing abduction tms 
proc 
th int 
conf 
logic programming pages 
van emden kowalski 
semantics predicate logic programming language 
acm 

