integration text editing version control patrik persson dept computer science lund university box lund sweden mail patrik persson dna lth se 
coop orm environment client server environment collaborative development software development 
environment built framework different kinds editors plugged 
important special case coop orm text editor 
editor access version information presents user directly editing 
editor hierarchical user interface display version information regarding single characters document 
describe editor detects merge conflicts fine grained model 
text editor coop orm environment 
coop orm originating mj project system supporting collaborative development fine grained version control 
emphasis software development applied kinds writing authors writing 
divide collaborative editing needs organization styles asynchronous editing document version edited single user time 
example emacs 
synchronous editing multiple users edit document simultaneously changes user instantly visible users 
example shredit 
text editors today typically support editing styles believe styles useful different times development 
consequently text editor support styles preferably smooth transition 
coop orm environment framework version control text editor application framework 
coop orm environment number properties applying text editor define basic approach supporting collaborative documents represented hierarchically general close mental view documents 
object oriented program consists classes turn consist methods 
consists heading set sections turn consist paragraphs subsections 
term refer subtree structure 
user data text text editor folder possibly containing 
environment maintains version graph describes dependencies versions document 
viewed version displayed comparison compare version 
compare version simply displaying changes viewed version versions may set quite arbitrarily long viewed version developed compare version 
versions visible users user watch time awareness 
note facility similar synchronous editing case described earlier 
thing checking checking document traditional version control systems 
user may create new version time merge new version version 
consequently version document locked user users may asynchronously 
system client server architecture versions documents stored server data stored locally 
allows users different locations document 
place emphasis client text editor resides 
handling version control editing independent applications instance rcs emacs editors interact directly version control system 
editor detailed information regarding document history directly user editing 
coop orm environment integrates editing version control kinds data 
apart text editor described environment handle instance editors complex data structures syntax trees 
text editing case described related rest coop orm environment 
section describe integration version control editing followed brief overview user interface section 
approach merging versions described section 
section give overview text editor design text editor compiler version control file system fig 

version control traditional environment 
tools file system little knowledge 
section briefly describe status implementation 
section summarizes 
integrated version control traditional version control tools rcs typically provide facilities checking checking files central repository 
development tools text editors compilers generally know version history files read manipulate displayed 
direct effect usually quite awkward developer see instance differences version hand preceding 
differences usually displayed terms lines added deleted output unix diff command 
usually differences requested user special tool 
contrast fundamental approach coop orm integrate version control core environment 
editor tools interact directly file system version control system coop orm 
outlines relations editor version control system file system 
structure allows editor text editor case access versions document 
important property approach editor interact versions document just version currently checked user 
coop orm text editor version information available presents user 
details presentation section 
coop orm file system client server version control text editor fig 

version control coop orm environment 
version control system interacts file system editors interact version control system 
version control divided client server 
fine grained incremental version control traditional version control systems users edit document entirety outside version control system 
document checked system determines differences previous version stores difference 
difference expressed terms added deleted changed lines 
coop orm text editor version history character maintained editing 
character added deleted version information document updated instantly 
put differently version information updated incrementally editing 
note version information fine grained information describes history individual characters entire lines 
attractive property incremental approach user changes instantly visible deltas users 
presentation user interface presenting hierarchical documents coop orm supports hierarchical documents described section 
reflected graphical user interface document window contains subwindows turn may contain subwindows recursive manner 
coop orm subwindows may different kinds editors text editor instances 
folders hold explicit information apart name 
folders may contain additional folders editors 
special windows displaying various information version graph 
hierarchical coop orm document may abstractly described tree internal nodes folders leaf nodes editors empty folders 
shows coop orm client java source code sample program 
folder called package holds folders classes account bank 
folders turn contain text editors methods constructors instance variables 
method deposit bank open methods withdraw closed 
difference data stored server consecutive versions 
visualizing version history editing editors detailed information regarding history edited document 
text editor uses information presents parts user editing 
recall coop orm environment displays comparison versions viewed version compare version 
displayed information describes viewed version basic markings shown display changes compare version text added compare version underlined 
text deleted compare version shown struck 
fig 

coop orm client 
instances text editor visible 
color pen metaphor editing viewed version changes editing special cases markings 
pen metaphor changes edit displayed special pen color 
means word added edit displayed added text underlined text marking drawn pen color 
deleting text editing gives results 
deleted text originates older version viewed struck pen color 
text deleted version added simply discarded removed version control system 
words deleting text interpreted undoing adding text 
change propagation notion added deleted characters scales entire editors folders coop orm environment 
new editor folder created marked added current version 
editors folders assume third state addition added deleted text added deleted editor editor considered changed version 
similarly component editor folder folder added deleted changed folder considered changed 
implies simple change text editor addition word propagates upwards text editor surrounding folder 
call change propagation 
merging important aspect coop orm approach user create new version variant merged version 
environment performs merging entire hierarchical documents composed 
merging instances add delete change tags versions merged document 
conflict handling traditional version control systems typically avoid conflicting changes file different users allowing file checked user time 
approach effect serializes development acceptable 
fig 

example deleted added text 
version control systems support copy merge approach versioned files may copied checked local workspace modified parallel original files 
files local workspace put back copied possibly merged original files 
systems report conflict users put back different versions file lines changed versions 
user put back version succeeds second user informed conflict prompted resolve 
merge conflicts general difficult handle require developers decide individual changes combined 
intention coop orm minimize number conflicts occur easy resolve possible 
conflicts occur users part document 
coop orm user select suitable viewed version monitor user 
feature intended reduce number conflicts users find working part document 
consequently possible avoid conflicts detecting occur 
simplify conflict resolution coop orm suggests default merge position merged documents differ 
default merge simple rule changes branches included merged version 
example sentence added branches corresponding position branch untouched default merge include added sentence 
additions deletions originating merge branches displayed pen metaphor way similar editing changes colors 
normal editing single pen color 
merge colors introduced display changes introduced branches 
fine grained model suggest default merge conflict 
suppose version document contains word sic 
different users create new versions version user re spells word believe replaces word think 
coop orm fine grained version control identify combination addition letter done version addition string think second version deletion strings bel eve done second version deletion second versions 
result string probably users intended refer 
define combinations add delete change information conflicts requiring user intervention combinations non conflicting 
cho term branches refer versions merged 
fig 

merge example 
box string indicates conflict 
sen define merge conflict case changes branches appear position text 
model covers conflict just described 
user performs merge operation conflicts marked text examined 
user accept default merge changes branches 
example just alternatives refer strings believe think respectively 
text edited directly merge 
note choices entire default merge selected folder applies folder 
note text editor conflict model covers syntactic conflicts semantic ones 
text editor interpret users text way 
design coop orm environment supports version control considerably complex data structures text 
text editor special case generic editor concept coop orm 
coop orm implemented object oriented framework simula 
relation coop orm framework individual editors installed subclassing configurator class instances created user creates new 
configurator class declares number callback functions subclass responsible implementing 
callbacks called framework situations user selects new compare viewed version user requests merge user interface related events key presses menu selections mouse actions configurator class provides number functions called editor various situations 
examples functions mark added deleted changed load versioned data server store versioned data server editor subclass configurator responsible calling functions appropriate 
example key press may result marking editor changed selecting new viewed version may require data loaded server 
editor uses version descriptors tag data version information 
version descriptor encapsulates entire history versioned piece data created deleted 
coop orm text editor indi vidual character may perceived having version descriptor 
optimizations combine adjacent characters history single versioned text block 
configurator superclass holds global version graph responsible managing system versions relations 
version graph answer straightforward questions regarding version descriptors example data associated descriptor version 
editor design overview details design coop orm text editor probably little interest readers 
give overview major design components text editor point view 
class diagram uml notation 
text editor window user interaction 
text represented list text blocks representing set consecutive characters version history 
blocks split new character different history inserted 
similarly deletion results adjacent blocks history joined 
indicated previous section text block equipped version descriptor encapsulate history 
views traditional version control systems regard versioned document set text files tagged version number 
coop orm versioned document regarded set characters character individual history 
coordinates document row column indices unambiguous general coordinates refer different positions different versions coop orm framework text editor application fig 

overview simplified coop orm text editor design uml notation 
framework left brevity 
descriptor view graph ment 
sense coop orm text document dimensional row column indices identify position version information required 
allow text editor manipulate document uniform manner internally maintains set views filters 
view seen subset text blocks selected simple rule 
instance view defines blocks visible user window 
kind view user selects older compare version 
action results loading delta re create version newer version server 
case view created blocks visible version 
coordinates delta relative coordinate system 
view insert loaded data document 
insertion deletion operations traversals moving cursor applied view 
view automatically ignores text blocks view 
advantage views access document resemble ordinary non versioned text documents 
suitable view selected document may manipulated dimensional text document 
functionality restrict set text blocks view rule embedded view 
implementation status coop orm framework implemented simula supports editors kinds data 
notably text editor implemented merge conflict handling complete 
way integrate editing version control 
integrating editor version control system making editor aware version information selected pieces version information user directly editor 
user easily see changed arbitrary preceding version 
hierarchical structure coop orm documents allows version information automatically displayed entire 
allows structured presentation potential merge conflicts 
presentation version information central approach 
making appropriate information available developer text editor appears reduce number merge conflicts simplify collaborative 
users able easily keep track 
fine grained version model individual character perceived having version history 
means independent changes single line necessarily result conflict 
define conflict occur independent changes position document 
coop orm framework supports versioning complex data structures 
step develop editor syntax trees asts goal integrate version control entire mj orm system 
text editor implemented example albeit important editor coop orm environment 
editor shows experiences far usefulness integrated approach 
acknowledgments want ulf boris magnusson developed coop orm framework provided significant input coop orm text editor 
want rel klas nilsson helpful comments earlier versions 
anonymous reviewers provided helpful comments 

identifying conflicts structural merge 
proceedings nordic workshop programming environment research lund sweden june 

integrated version control coop orm version server 
proceedings nordic workshop programming environment research aalborg denmark may 

coop orm framework 
draft lund university 

olson shredit shared electronic workspace 
cognitive science machine intelligence laboratory tech 
report university michigan ann arbor 

knudsen madsen magnusson editors 
object oriented environments mj approach 
prentice hall 

min magnusson model semi synchronous collaborative editing 
proceedings third european conference computer supported cooperative milano italy september 

user guides sun microsystems 

tichy rcs system revision control 
software practice experience july 
