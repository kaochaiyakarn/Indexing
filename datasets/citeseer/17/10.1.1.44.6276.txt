decentralized trust management matt blaze joan feigenbaum jack lacy research murray hill nj jf research att com identify trust management problem distinct important component security network services 
aspects trust management problem include formulating security policies security credentials determining particular sets credentials satisfy relevant policies deferring trust third parties 
existing systems support security networked applications including pgp address narrow subsets trust management problem manner appropriate application 
presents comprehensive approach trust management simple language specifying trusted actions trust relationships 
describes prototype implementation new trust management system called policymaker facilitate development security features wide range network services 

importance cryptographic techniques wide range network services universally recognized 
service uses cryptography accommodate appropriate notions users security policies security credentials trust relationships 
example electronic banking system enable bank state bank officers needed approve loans policy enable bank employee prove counted credential enable bank specify may issue credentials trust relationship 
thesis coherent intellectual framework needed study security policies security credentials trust relationships 
refer col fl 
originally published proc 
ieee conference security privacy oakland ca may 
components network services trust management problem 
certain aspects trust management dealt satisfactorily existing services specialized ways appropriate services pgp secure email system allows users create security credentials binding ids public keys trust management problem previously identified general problem studied right 
goal identify problem take step comprehensive approach solving independent particular application service 
address trust management se opposed security needs particular service developed general framework applied service cryptography needed 
facilitate approach building new type tool best described trust management system 
system called policymaker suitable tool development services main goal privacy authenticity secure communication system services features merely enablers enhancements electronic shopping system 
approach trust management general principles 
ffl unified mechanism policies credentials trust relationships expressed programs parts programs safe programming language 
existing systems forced treat concepts separately 
providing common language policies credentials relationships possible network applications handle security comprehensive consistent largely transparent manner 
ffl flexibility system expressively rich support complex trust relationships occur large scale network ap plications currently developed 
time simple standard policies credentials relationships expressed succinctly 
particular pgp certificates need trivial modifications usable framework 
ffl locality party network decide circumstance accept credentials second party alternatively third party rely appropriate certificate 
supporting local control trust relationships avoid need assumption globally known monolithic hierarchy certifying authorities 
hierarchies scale single communities interest trust defined unconditionally top 
ffl separation mechanism policy mechanism verifying credentials depend credentials semantics applications 
allows different applications widely varying policy requirements share single certificate verification infrastructure 

review existing approaches existing services cryptographic techniques trust management system identify trust management problem right 
usually implicit notions trust management handled applications 
public key certificates trusted third party signs specially formed message certifying identity associated public key 
certified identity acted left application 
best known certificate systems pgp 
pgp system user generates pair associated unique id usually id form name 
keys stored key records 
public resp 
secret key record contains id public resp 
secret key timestamp key pair created 
public keys stored public key rings secret keys secret key rings 
user store manage pair key rings 
user copy user public key record copy confident reason tampered generated sign copy pass user acts signed key record called key certificate word certify synonym sign 
user tell pgp system individuals trusts certify public key records secret key 
user may specify degree trust individual may designated unknown untrusted marginally trusted completely trusted 
user stores trust information key rings tunes pgp assigns validity score certificate key ring uses key certificate score high 
example skeptical user may require fully trusted signatures public key record judge key contains valid skeptical user may require fully trusted signature marginally trusted ones 
important note implicit pgp assumption notion security policy needs supported verification id sender message 
keys rings degrees trust allow user design policy limited form 
narrow notion policy appropriate pgp designed specifically provide secure email individuals insufficient broader range secure network services designed implemented 
note signature public key record interpreted mean trusts personal integrity right interpretation believes binding identity key record correct 
furthermore note trust transitive facts fully trusts fully trusts automatically imply degree trust pgp grown popularity decentralized web trust emerged 
individual responsible acquiring public key certificates needs assigning degrees trust gets 
similarly individual create key pair disseminate public key 
grass roots approach rejects official certifying authorities sign public keys individuals certifying authorities act trust servers users keys 
authentication framework attempts solve part trust management prob pgp user guide distinct names signed unsigned key records refers certificates 
chosen term record refer unsigned unit key information may term certificate commonly literature 
lem pgp mechanism attempts solve need find suitably trustworthy copy public key wants communicate 
pgp certificates signed records associate users ids cryptographic keys certificates contain information pgp certificates names signature schemes create time interval valid see details basic purpose simply binding users keys 
differs sharply pgp level centralization information 
may sign public key records act pgp framework postulates obtain certificates official certifying authority ca 
user creates pair rest required information certified cas registers resulting certificates official directory service 
wants communicate securely obtains certificate directory servers 
certified ca directory server just send certificate verify validity public key common ca 
directly certified common ca directory service create certification path list form ca cert ca cert cert cert certificate ca signed ca cert certificate order path obtain public key know public key ca authority path 
framework rests assumption cas organized global certifying authority tree users community interest keys signed cas common ancestor global tree 

policymaker approach despite differences way various certificate systems structure trust relationships assume similar shall see cumbersome trust architecture applications 
particular identity certificates create artifical layer indirection information certified answers question holder public key question secure application answer proposed versions include provisions policy attribute 
responsibility interpreting policy remains outside scope mechanism 
trust public key purpose 
consider steps application go process request signed message holder traditional pgp certificate 
steps performed operating system hidden lower layer taos operating system performed 
obtain certificates verify signatures certificates application request determine public key original signer 

verify certificates 

attempt find trust path trusted certifier certificate public key question 

extract names certificates 

lookup names database maps names actions trusted perform 

determine requested action legal names extracted certificates certification authorities permitted authorize actions local policy 

proceed appears valid 
observe final steps completely outside scope certification framework reimplemented application despite central problem certificates supposed solve 
problem reliably mapping names actions trusted perform represent security risk problem mapping public keys names certificates help application map names actions 
general system integrate specification policy binding public keys actions trusted perform 
prefer system steps reduced 
obtain certificates verify signatures certificates application request determine public key original signers 

verify certificates 

submit request certificates description local policy local trust management engine 

proceed approved 
policymaker departs sharply certificate security systems centered binding identities keys allows requesters secure services prove directly hold credentials authorize services 
policymaker binds public keys predicates describe actions trusted sign names current systems 
policymaker language example straightforward authorize cryptographic key sign purchase orders transaction authorized key 
considerations personal identity organizational level incidentally relevant question application trying answer accept purchase order omitted 
ability express security credentials policies requiring application manage mapping personal identity authority especially convenient systems include anonymity security requirement 
example electronic voting system require requester establish registered voter allowed learn requester personal identity 
expressiveness generality policymaker language powerful come price insecurity credentials untrusted parties safe interpreter 
simple policies credentials stated simply existing pgp certificates merely bind keys ids policymaker trivial modifications 
trust relationships general flexible policymaker existing systems 
completely pgp style web trust monolithic style certifying authority trees suffices applications require cryptographic keys 
pgp system official mechanism creating acquiring distributing certificates simply acquire ad hoc means devise store key ring certificates needed 
recipient signed message valid copy public key required verify signature signature goes recipient find certificate 
furthermore systematic mechanism allows sender message know signature acceptable recipient 
informal mechanism may suffice personal communication insufficiently reliable commerce 
hand single global certifying authority tree proposed authentication framework matter reliable insufficient commerce forces competing entities enter unreasonable trust relationships albeit possibly indirectly policymaker system provides simple language express conditions individual authority trusted conditions trust may deferred 
user may trust certificates signed ca ca small transactions may insist certificates reliable ca large transactions 
user may trust certificates signed directly ca signed authorities ca trusts user may trust certificates signed ca ca trusts ca similarly may insist customers ca certificates may insist ca certificates 
assumption global tree cas common ancestor 
addition providing richer language expressing trust relationships policies credentials policymaker greatly enhances potential scope form security services implementing trust management distinct software system 
frees designers services need handle security completely applications pgp completely operating system taos 
allows implementations standard security policies credentials developed application reused 

policymaker trust management system 
architectural framework interface policymaker reflects goal separating generic mechanism provided policymaker application specific policy defined application 
policymaker service appears applications database query engine 
policymaker accepts input set local policy statements collection credentials string describing proposed trusted action 
policymaker evaluates proposed actions interpreting policy statements credentials 
depending credentials form query return simple answer additional restrictions proposed action acceptable 
policymaker built applications linked library run separate daemon service 
simple application certificates certificate revocation obtained managed application email system sender message include appropriate certificates message receiving application pass directly policymaker query 
complex applications manage certificates external module behavior specifying certificate distribution revocation authorities specified terms policymaker certificates 
focus structure language policymaker interpreter 
security policies credentials defined terms predicates called filters associated public keys 
filters accept reject action descriptions holders corresponding secret keys trusted 
security policies credentials consist binding filter public keys 
filters written variety interpreted languages discussed detail 
public key cryptosystem signature verification credentials handled external agents including example pgp 
trust may deferred 
security information completely defined available locally frequently necessary rely trusted third parties provide additional security information 
local policy may defer third parties trusted issue credentials may filters limit extent third parties trusted 
third parties may defer trust relevant security information may filters 
local policies may set bounds number times trust may deferred 
credentials may contain filters limit actions holder trusted perform 
trust monotonic policy statement credential increase capabilities granted 
action considered acceptable local policy chain defined section policy key requesting action filters chain satisfied 
model supports precise complex trust relationships shall see 
policymaker tied particular notion security policy particular authentication signature scheme 
form action descriptions called action strings determined known policymaker system 
application generate interpret strings filters accept reject 
similarly policymaker verify signatures action strings associated allowing applications employ virtually authentication scheme 
application calls policymaker composed action string determined authentication identifier pgp public keys requested action originated 
policymaker determines action string permitted local security policy credentials 

policymaker language basic function policymaker system process queries 
query request determine particular public key sequence public keys permitted perform particular action local policy 
queries form key key requests action strings application specific messages describe trusted action requested sequence public key 
semantics action strings determined applications generate interpret part known policymaker 
action strings interpreted calling applications confer diverse capabilities signing electronic mail messages claim particular individual entering contracts behalf organization logging computer system watching pay view movie 
policymaker processes queries trust information contained assertions 
assertions confer authority keys 
discussed previous section assertion binds predicate called filter sequence public keys called authority structure 
simplest filters interpreted programs accept reject action strings 
complex filters discussed generate annotations action strings 
assertions form source asserts ilter source indicates source assertion local policy case policy assertions public key third party case signed assertions 
specifies public key keys assertion applies 
simplest case authority structure just single public key complex authority structures possible keys done discussed 
way authority structures serve purpose trust management system similar served access structures secret sharing scheme 
filter predicate action strings satisfy assertion hold 
words assertion states assertion source trusts public keys authority structure associated action strings satisfy filter 
filters apply source recursively applied discuss query semantics detail section 
types policymaker assertions certificates policies 
certificate called signed assertion signed message binds particular authority structure filter 
policy binds particular authority structure filter 
policies signed originate locally unconditionally accepted locally 
semantically syntactically really just special case certificates 
system set local policies forms trust root machine defines context queries evaluated 
authority structures specified filters accept reject list public keys associated action string 
simplest authority structure matches exactly key possible construct filters implement complex requirements threshold schemes 
precise syntax appendix 

query semantics query request information trust placed particular sequence public key 
policymaker system policy assertion process queries 
typically fixed policy assertions collection signed assertions pertaining query hand 
recall queries contain keys action string assertions contain source authority structure filter 
semantic point view simplest case query key set assertions policies certificates authority structures just single keys 
case may interpret assertions directed graph vertices labeled keys policy sources arcs labeled filters arc labeled assertion source label authority structure label filter process query policymaker system find chain delta delta delta local policy source query contains multiple keys kn assertions contain complex authority structures include nodes labeled keys policy sources complex authority structures chain delta delta delta labeled authority structure accepts input kn 
filters certificate policy assertions may take forms 
simplest form program simply accepts rejects action strings 
query satisfied digraph assertions contains chain filters accept action string 
second filter form accepts rejects action strings may append annotations acceptable action string indicate restrictions information original query 
assertions allow querying application generate description trust capabilities key needing probe policymaker specific queries 
example electronic mail system certificate organizational certifying authority generate organization line added action strings 
assertions contain filter programs predicate behaves exactly filters described annotator 
queries involving assertions contain annotators evaluated phases 
annotators behave just predicates able emit annotation appended action string 
pass action string passed annotator chain policy query possibly acquiring annotations 
annotators satisfied run second pass fully annotated action string predicates chain 
predicates accept reject add annotations 
ensures annotations previous phase acceptable certificates chain 
predicates satisfied annotated action string returned application 

signature schemes filter languages policymaker verify signatures signed assertions queries process original signed messages 
signatures verified external program function pgp pem 
external program guarantees signature valid identified public key 
public key passed policymaker interpreter identifies program key pgp 
interpreting signatures insisting particular signature scheme format policymaker easy implement certification authority exploits existing infrastructure 
example possible chains trust consist mixture certificates interpreted program converts policymaker certificates cer consisting simple text messages signed program pgp 
similarly policymaker filters interpreted programs run safe resource limited wrapper 
implementation currently supports filter languages regular expression system similar unix internally developed safe version awk call awkward macro language preprocesses safe awk 
safe languages java safe tcl easily added desired 
general language safely interpreted filter language 
distinguishing feature system filters allowed full complexity expressiveness general programs 
designing implementing safe filter language simpler task designing general purpose language remote agents java filters generally need issue dangerous system calls 
need open files interact network example 
policymaker wraps filter language interpreter resource limited shell prevents infinite loops filters consuming entire host cpu 
filters assumed simple resource allocation modest 
input filters consists current action string environment containing information current context date time application name 
filter environment enforce contextual constraints expiration times 
filter access information rest chain evaluated possible design certificates limit degree authority deferred 
interpreter filter language external policymaker name language assertions known needs assertion 
new languages added easily needed provided recipients certificates new language configured interpret 
policymaker ignores certificates written unknown unsupported filter languages 

application examples responsibility defining interpreting action strings rests entirely application important consideration integrating policymaker applications identifying appropriate trust language captures required security semantics 
application action string language chosen easily generated acted application recognizers easily programmed policies certificates 
general possible person understands application examine action string understand examine assertions understand kinds actions satisfy 
sections follow give informal examples trust languages assertions show policymaker integrated various applications 

email system propose electronic mail system internet security policy requires establish identities parties messages 
natural somewhat simplistic language describing trust properties messages system derives mail delivery headers route message sender recipient 
example headers containing lines alice organization bob labs indicate message originated individual named alice affiliated bob labs 
security policy system aims ensure headers displayed user message correct certificates locally chosen trusted authorities 
easy imagine language action strings system sender name organization sender organization language easy construct policy binds alice pgp public key ability sign messages claim originate alice policy asserts pgp xf aabb cdd predicate regexp alice organization bob labs policy simple recognized simple pattern matching regular expression filter 
expression simply checks expected fields contain expected information 
added annotator filter contains simple awk program fills missing fields example 
note policy authority certify identity deferred third party trust alice key embedded directly policy 
cases prefer level indirection 
example trust public key belonging bob president bob labs tell public keys belong employees 
local policy associate public key predicate checks organization field says bob labs 
bob sign predicates behalf employees check names field 
signed predicates roughly analogous certificates system bob trusted certificate authority respect employees 
simple set policy trust bob key pgp role policy asserts pgp predicate regexp organization bob labs policy allows trust certificates bob just messages signed pgp key pgp asserts pgp xf aabb cdd predicate regexp alice certificate deferring policy meaning non deferring policy 
query pgp xf aabb cdd requests alice organization bob labs succeed pgp xf aabb cdd requests alice organization matt labs pgp xf aabb cdd requests john organization bob labs fail 
preceding discussion shows policymaker support authenticity email messages 
note support privacy messages 
querying policymaker daemon sender obtain appropriate key encrypt message information recipient security policy needed prepare outgoing message 

certificate revocation server policymaker implement certificate distribution revocation services certificate revocation lists built system 
policymaker specify services arbitrary certificate revocation distribution freshness constraints built policy 
possible example certificate issuer specify authority structures include public key certified public key certificate revocation service 
revocation service issues frequently broadcast certificates contain predicates satisfied non revoked keys 
constraints required freshness revocation certificates specified may application criteria high valued transactions require issued assurance certificates revoked 
detailed example omitted brevity 

pgp certificates policymaker assertions possible exploit existing certification infrastructure policy specification mechanisms policymaker 
example majority certificates system pgp format simple write application specific program converts certificates policymaker assertions 
predicate assertion include routines check application action string language correct identity 

simple workflow system policy regarding signatures contracts checks bids purchase orders require people sign 
signers identifiable legitimate signers various applications corresponding qualifiers dollar amount liability control 
typical protocol 
cases recover key covered threshold scheme signatures needed 
example policy purchase order department process purchase orders amounts equal submitted orders signatures directors 
purchase order application requires amount organization signers names verify order appropriately constructed 
top level policy states security certificate authority key allowed create certificates name 
interest examples follow labels security ca place actual public keys 
policy asserts predicate regexp organization bob labs security ca creates certificate states group legitimate corporate directors sign purchase orders exceeding 
asserts awkward program requiring keys directly certified predicate awkward program checks amount signs keys directors jack joan matt alice certifying names asserts predicate regexp signer name jack asserts predicate regexp signer name joan asserts predicate regexp signer name matt asserts predicate regexp signer name alice purchase order application receives po form 
po amount signed jack joan matt checks digital signatures generates appropriate action string queries policymaker requests po amount organization bob labs signer name jack signer name joan signer name matt 
current status directions implemented prototype policymaker interpreter includes built regular expression awkward interpreter 
external programs recognize dsa pgp signed policymaker assertions convert pgp certificate formats policymaker assertions simple internet email application 
performance reasonable chains nodes long evaluated time required verify signatures certificates 
policymaker approach number advantages compared traditional ad hoc trust management approaches forced systems pgp 
certificates policies predicates written general programming language trust language application domain simple complex required changing trust management system interface 
second trust descriptions form naturally occurs application changed altering trust management system 
email system consist messages header lines 
system signing approving contracts consist strings indicating amounts types expenditures 
third applications policymaker implement trust management may secure risks arising level indirection mapping identities authority eliminated 
responsibility separated natural way 
applications responsible describing trusted actions appropriate actions correct descriptions 
certificates policies responsible describing trusted perform actions descriptions 
trust management system policymaker responsible ensuring described actions conform policies certificates need understand 
course policymaker solve entire trust management problem guarantee systems secure 
applications define action description languages accurately reflect security semantics application 
predicates policy certificate assertions carefully written reflect intentions policy 
restrictions predicates possible construct policies unfortunate unexpected consequences 
policymaker trust management functions encapsulated components certificates policies application action string management functions probably easier verify debug security properties systems traditional approaches trust management spread entire system 
near term plan policymaker important components 
front plan develop formal model trust management investigate power limitations policymaker approach mathematically rigorous manner 
simultaneously plan experiment prototype implementation policymaker system diverse applications contexts 
believe policymaker framework certificate distribution certification server provide appropriate certificates provided policy assertions 
formal experimental results guide development versions system 
policymaker introduces general trust management layer appears right level abstraction 
important benefit exposing trust management interface requires designers implementers secure services systems consider trust management explicitly 
encourages sophisticated notions security appropriate context enforces necessary coordination design policy credentials trust relationships 

grateful brian kernighan implementing awkward mike reiter ron rivest helpful comments earlier drafts 
aho kernighan weinberger awk programming language addison wesley reading 
gosling java language environment white sun microsystems mountain view 
information technology open systems interconnection directory authentication framework recommendation iso iec 
international telegraph telephone committee ccitt 
directory authentication framework recommendation update 
john ousterhout tcl tk toolkit addison wesley reading 
wobber abadi burrows lampson authentication taos operating system acm transactions computer systems february 
zimmermann pgp user guide mit press cambridge 
appendix policymaker syntax basic grammar accepted policymaker interpreter follows 
terminals uppercase 
assertion source asserts semicolon source asserts semicolon query requests string condition semicolon source policy system colon string equals equals comma annotator predicate commentary application language colon string language awkward regexp comma condition 

