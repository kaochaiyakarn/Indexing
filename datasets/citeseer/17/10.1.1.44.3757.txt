overview genetic algorithms part fundamentals david beasley department computing mathematics university cardiff cardiff cf yn uk david bull department electrical electronic engineering university bristol bristol bs tr uk ralph martin department computing mathematics university cardiff cardiff cf yn uk university computing 
fl inter university committee computing 
rights reserved 
part article may reproduced commercial purposes 
genetic algorithms gas adaptive methods may solve search optimisation problems 
genetic processes biological organisms 
generations natural populations evolve principles natural selection survival fittest clearly stated charles darwin origin species 
mimicking process genetic algorithms able evolve solutions real world problems suitably encoded 
example gas design bridge structures maximum strength weight ratio determine wasteful layout cutting shapes cloth 
online process control chemical plant load balancing multi processor computer system 
basic principles gas laid holland hol described texts dav dav gre gre gol mic 
gas simulate processes natural populations essential evolution 
exactly biological processes essential evolution processes little role play matter research foundations clear 
nature individuals population compete resources food water shelter 
members species compete attract mate 
individuals successful surviving attracting mates relatively larger numbers offspring 
poorly performing individuals produce offspring 
means genes highly adapted fit individuals spread increasing number individuals successive generation 
combination characteristics different ancestors produce offspring fitness greater parent 
way species evolve suited environment 
gas direct analogy natural behaviour 
population individuals representing possible solution problem 
individual assigned fitness score solution problem example fitness score strength weight ratio bridge design 
nature equivalent assessing effective organism competing resources 
highly fit individuals opportunities reproduce cross breeding email david beasley cm cf ac uk email dave bull bristol ac uk email ralph martin cm cf ac uk individuals population 
produces new individuals offspring share features taken parent 
fit members population get selected reproduction die 
new population possible solutions produced selecting best individuals current generation mating produce new set individuals 
new generation contains higher proportion characteristics possessed members previous generation 
way generations characteristics spread population mixed exchanged characteristics go 
favouring mating fit individuals promising areas search space explored 
ga designed population converge optimal solution problem 
gas algorithms analogy nature 
neural networks behaviour neurons brain 
variety classification tasks pattern recognition machine learning image processing expert systems 
area application partly overlaps gas 
gas design neural networks current research area hs 
simulated annealing search technique physical biological processes described section 
power gas comes fact technique robust deal successfully wide range problem areas including difficult methods solve 
gas guaranteed find global optimum solution problem generally finding acceptably solutions problems acceptably quickly 
specialised techniques exist solving particular problems perform gas speed accuracy final result 
main ground gas difficult areas techniques exist 
existing techniques improvements ga section outline basic principles gas section compare gas search techniques 
sections describe theoretical practical aspects gas section lists applications gas applied 
part article appear issue journal 
go detail discuss problems ga designers address faced difficult problems 
show basic ga improved problem specific knowledge 
basic principles standard ga represented shown 
ga run suitable coding representation problem devised 
require fitness function assigns merit coded solution 
run parents selected reproduction recombined generate offspring 
aspects described 
coding assumed potential solution problem may represented set parameters example dimensions beams bridge design 
parameters known genes joined form string values referred chromosome 
holland hol showed believe ideal binary alphabet string 
possibilities discussed part article 
example problem maximise function variables represent variable bit binary number suitably scaled 
chromosome contain genes consist binary digits 
genetics terms set parameters represented particular chromosome referred genotype 
genotype contains information required construct organism referred phenotype 
terms gas 
example bridge design task set parameters specifying particular design genotype finished construction phenotype 
fitness individual depends performance phenotype 
inferred genotype computed chromosome fitness function 
genetic algorithm generate initial population compute fitness individual finished produce new generation reproductive cycle select individuals old generation mating favour fitter ones recombine individuals give offspring compute fitness offspring insert offspring new generation population converged finished true traditional genetic algorithm fitness function fitness function devised problem solved 
particular chromosome fitness function returns single numerical fitness merit supposed proportional utility ability individual chromosome represents 
problems particularly function optimisation obvious fitness function measure just value function 
case example combinatorial optimisation 
realistic bridge design task performance measures may want optimise strength weight ratio span width maximum load cost construction time combination 
reproduction reproductive phase ga individuals selected population recombined producing offspring comprise generation 
parents selected randomly population scheme favours fit individuals 
individuals probably selected times generation poor ones may 
having selected parents chromosomes recombined typically mechanisms crossover mutation 
basic forms operators follows crossover takes individuals cuts chromosome strings randomly chosen position produce head segments tail segments 
tail segments swapped produce new full length chromosomes see 
offspring inherit genes parent 
known single point crossover 
crossover usually applied pairs individuals selected mating 
random choice likelihood crossover applied typically 
crossover applied offspring produced simply duplicating parents 
gives individual chance passing genes disruption crossover 
mutation applied child individually crossover 
randomly alters gene small probability typically 
shows fifth gene chromosome mutated 
traditional view crossover important techniques rapidly exploring search space 
mutation provides small amount random search helps ensure point search offspring crossover point parents crossover point single point crossover offspring mutated offspring mutation point single mutation space zero probability examined 
alternative point view explored part article 
example individuals reproducing give offspring shown 
fitness function exponential function variable maximum 
coded bit binary number 
table shows parents offspring produce crossed second bit clarity mutation applied 
illustrates possible crossover recombine parts chromosomes individuals give rise offspring higher fitness 
course crossover produce offspring low fitness get selected reproduction generation 
convergence ga correctly implemented population evolve successive generations fitness best average individual generation increases global optimum 
convergence progression increasing uniformity 
gene said converged population share value dej 
population said converged genes converged 
shows fitness varies typical ga population converges average fitness approach best individual 
comparison techniques number general purpose techniques proposed connection search optimisation problems 
ga assume problem defined fitness function maximised 
techniques deal minimisation tasks avoid confusion assume loss generality maximisation aim 
great optimisation techniques applicable limited domains example dynamic programming bel 
method solving multi step control problems applicable fitness function sum fitness functions stage problem interaction stages 
general techniques described 
individual fitness chromosome parent parent offspring offspring table details individuals fitness function parents offspring illustration crossover best average fitness generations typical ga run random search brute force approach difficult functions random enumerated search 
points search space selected randomly systematic way fitness evaluated 
strategy rarely 
gradient methods number different methods optimising behaved continuous functions developed bun rely information gradient function guide direction search 
derivative function computed discontinuous example methods fail 
methods generally referred hillclimbing perform functions peak unimodal functions 
functions peaks multimodal functions suffer problem peak climbed may highest peak 
having reached top local maximum progress 
dimensional example shown 
starts randomly chosen starting point uphill moves peak located 
higher peaks 
fitness hillclimbing problem iterated search random search gradient search may combined give iterated hillclimbing search 
peak located started randomly chosen starting point 
technique advantage simplicity perform function local maxima 
random trial carried isolation picture shape domain obtained 
random search progresses continues allocate trials evenly search space 
means evaluate just points regions low fitness regions high fitness 
ga comparison starts initial random population allocates increasing trials regions search space high fitness 
disadvantage maximum small region surrounded sides regions low fitness 
kind function difficult optimise method simplicity iterated search usually wins day ack 
simulated annealing technique invented kirkpatrick overview rut 
essentially modified version hill climbing 
starting random point search space random move 
move takes higher point accepted 
takes lower point accepted probability time 
function begins close gradually reduces zero analogy cooling solid 
initially moves accepted temperature reduces probability accepting negative move lowered 
negative moves essential local maxima escaped obviously negative moves simply lead away maximum 
random search simulated annealing deals candidate solution time build picture search space 
information saved previous moves guide selection new moves 
technique topic active research fast re annealing parallel annealing successfully applications example vlsi circuit layout rut 
gas research gas far concentrated finding empirical rules getting perform 
accepted general theory explains exactly gas properties 
hypotheses put forward partially explain success gas 
help implement ga applications 
schemata schema theorem holland schema theorem hol explanation gas 
schema pattern gene values may represented binary coding string characters alphabet particular chromosome said contain particular schema matches schemata symbol matching 
example chromosome contains schemata 
order schema number non symbols contains respectively example 
defining length schema distance outermost non symbols respectively example 
schema theorem explains power ga terms schemata processed 
individuals population opportunities reproduce referred reproductive trials produce offspring 
number opportunities individual receives proportion fitness better individuals contribute genes generation 
assumed individual high fitness due fact contains schemata 
passing schemata generation increase likelihood finding better solutions 
holland showed optimum way explore search space allocate reproductive trials individuals proportion fitness relative rest population 
way schemata receive exponentially increasing number trials successive generations 
called schema theorem 
showed individual contains great different schemata number schemata effectively processed generation order population size 
property known implicit parallelism explanations performance gas 
building block hypothesis goldberg gol power ga lies able find building blocks 
schemata short defining length consisting bits tend lead improved performance incorporated individual 
successful coding scheme encourages formation building blocks ensuring 
related genes close chromosome 
little interaction genes 
interaction referred epistasis genes means contribution gene fitness depends value genes chromosome 
example echo location bats able generate ultrasonic hearing system detecting echoes 
possession characteristic little 
genes hearing increase fitness bat genes squeak production 
fact interaction genes multimodal fitness functions 
significant multimodal functions sort real interest ga research unimodal functions solved easily simpler methods 
rules observed ga effective predicted schema theorem 
unfortunately conditions easy meet 
genes may related ways allow closely related ones placed close dimensional string example related hierarchically 
cases exact nature relationship genes may known programmer simple relationships may impossible arrange coding reflect 
condition precondition 
contribution fitness gene independent genes possible solve problem hillclimbing gene turn 
clearly possible general 
ensure gene interacts small number genes placed chromosome conditions met 
lot interaction genes condition met 
clearly try design coding schemes conform goldberg recommendations ensure ga possible 
interesting questions arise 
possible general find coding schemes fit recommendations building block hypothesis 


possible find ideal coding schemes ga modified improve performance circumstances 

questions important research topics 
exploration exploitation efficient optimisation algorithm techniques find global maximum exploration investigate new unknown areas search space exploitation knowledge points previously visited help find better points 
requirements contradictory search algorithm find tradeoff 
purely random search exploration exploitation purely hillclimbing method exploitation little exploration 
combinations strategies quite effective difficult know best balance lies exploitation perform giving exploring 
holland hol showed ga combines exploration exploitation time optimal way armed bandit analogy described gol 
may theoretically true ga inevitably problems practice 
arise holland certain simplifying assumptions including 
population size infinite 
fitness function accurately reflects utility solution 
genes chromosome interact significantly 
assumption satisfied practice 
performance ga subject stochastic errors 
problem nature genetic drift boo gs 
absence selection pressure constant fitness function members population converge point solution space 
happens simply accumulation stochastic errors 
chance gene predominant population just predominant generation predominant 
increase predominance sustained successive generations population finite gene spread members population 
gene converged way fixed crossover introduce new gene values 
produces ratchet effect generations go gene eventually fixed 
rate genetic drift provides lower bound rate ga converge correct solution 
ga exploit gradient information fitness function fitness function provide slope sufficiently large counteract genetic drift 
rate genetic drift reduced increasing mutation rate 
mutation rate high search effectively random gradient information fitness function exploited 
assumptions satisfied behaved laboratory test functions harder satisfy real world problems 
problems fitness function discussed 
problems gene interaction epistasis mentioned described part 
practical aspects gas designing ga application need consider far just theoretical aspects described previous section 
application need fitness function mentioned earlier problem specific deal 
steps traditional ga implemented number different algorithms 
example initial population may generated randomly heuristic method gre sg 
section describe different techniques selecting individuals mated 
understand motivation techniques describe problems trying overcome 
problems related fitness function shall look closely 
fitness function coding scheme fitness function crucial aspect ga research concentrated optimising parts ga improvements applied variety problems 
frequently small improvements performance 
grefenstette gre sought ideal set parameters terms crossover mutation probabilities population size ga concluded basic mechanism ga robust fairly wide margins parameter settings critical 
critical performance ga fitness function coding scheme 
ideally want fitness function smooth regular chromosomes reasonable fitness close parameter space chromosomes slightly better fitness 
problems interest unfortunately possible construct ideal fitness functions simply hillclimbing algorithms 
gas search technique perform find ways constructing fitness functions local maxima isolated global maximum 
general rule constructing fitness function reflect value chromosome real way 
stated problems construction fitness function may obvious task 
example problem design fire hose nozzle maximum flow fitness function simply amount fluid flows nozzle unit time 
computing may trivial know needs computed knowledge compute physics textbooks 
unfortunately real value chromosome useful quantity guiding genetic search 
combinatorial optimisation problems constraints points search space represent invalid chromosomes zero real value 
example problem construction school timetables 
number classes number lessons finite number rooms lecturers available 
allocations classes lecturers rooms violate constraints room occupied classes class lecturer places class lessons supposed receive 
ga effective case invent fitness function fitness invalid chromosome viewed terms leading valid chromosomes 
course catch situation 
know valid chromosomes ensure nearby points fitness values far away points poor fitness values 
don know valid chromosomes done 
cramer cra suggested natural goal problem better results obtained invent meaningful sub goals reward 
timetable problem example give reward classes lessons allocated valid way 
approach taken situation penalty function represents poor chromosome construct fitness constant gamma penalty gol 
richardson give guidelines constructing penalty functions 
say represent amount constraints violated better simply number constraints violated 
penalty functions say constructed expected completion cost invalid chromosome cost turn valid 
dejong spears ds describe method suitable optimising boolean logic expressions 
scope area 
approximate function evaluation technique fitness function excessively slow complex evaluate 
faster function devised approximately gives value true fitness function ga may find better chromosome amount cpu time true fitness function 
example simplified function times faster times function evaluations performed time 
approximate evaluation points search space generally better exact evaluation just 
ga robust able converge face noise represented approximation 
technique medical image registration system described goldberg gol 
attempting align images optimum results obtained th pixels tested 
approximate fitness techniques cases fitness function stochastic 
example problem evolve set rules playing game fitness may assessed play opponent 
game different possible determine approximation fitness rule set chi 
goldberg gol describes techniques approximate function evaluation example incremental computation parents fitness 
fitness range problems start run values gene different members population randomly distributed 
consequently wide spread individual fitnesses 
run progresses particular values gene predominate 
population converges range fitnesses population reduces 
variation fitness range run leads problems premature convergence slow finishing premature convergence classical problem gas genes comparatively highly fit optimal individuals may rapidly come dominate population causing converge local maximum 
population converged ability ga continue search better solutions effectively eliminated crossover identical chromosomes produces little new 
mutation remains explore entirely new ground simply performs slow random search gol 
schema theorem says allocate reproductive trials opportunities individuals proportion relative fitness 
premature convergence occurs population infinite 
order gas effectively finite populations modify way select individuals reproduction 
ways doing described section 
basic idea control number reproductive opportunities individual gets large small 
effect compress range fitnesses prevent super fit individuals suddenly 
slow finishing converse problem premature convergence 
generations population largely converged may precisely located global maximum 
average fitness high may little difference best average individuals 
consequently insufficient gradient fitness function push ga maximum 
techniques combat premature convergence combat slow finishing 
expanding effective range fitnesses population 
premature convergence fitness scaling prone due just super poor individual 
techniques described 
parent selection techniques parent selection task allocating reproductive opportunities individual 
principle individuals population copied mating pool highly fit individuals receive copy unfit individuals receive copies 
strict generational replacement scheme see section size mating pool equal size population 
pairs individuals taken mating pool random mated 
repeated mating pool exhausted 
behaviour ga depends individuals chosen go mating pool 
ways doing divided types methods 
firstly take fitness score individual map new scale remapped value number copies go mating pool number reproductive trials 
method devised achieves similar effect going intermediate step computing modified fitness 
shall call methods explicit fitness remapping implicit fitness remapping explicit fitness remapping keep mating pool size original population average number reproductive trials allocated individual 
individual fitness remapped dividing average fitness population effect achieved 
remapping scheme allocates reproductive trials proportion raw fitness holland theory 
discuss remapping schemes practical matter cleared 
remapped fitness individual general integer 
integral number copies individual placed mating pool convert number integer way introduce bias 
great deal gone finding best way doing gol 
widely method known stochastic remainder sampling replacement better method stochastic universal sampling devised baker bak elegantly simple theoretically perfect 
important confuse sampling method parent selection method 
different parent selection methods may advantages different applications 
sampling method baker selection methods applications 
mentioned section want allocate trials individuals direct proportion raw fitness 
alternative methods remapping raw fitness prevent premature convergence suggested 
described bak 
major ones described 
fitness scaling commonly employed method 
maximum number reproductive trials allocated individual set certain value typically 
achieved subtracting suitable value raw fitness score dividing average adjusted fitness values 
subtracting fixed amount increases ratio maximum fitness average fitness 
care taken prevent negative fitness values generated 
adjusted fitness raw fitness number fitness raw adjusted fitness histograms shows histogram raw fitness values average fitness maximum fitness 
gives maximum average ratio scaling fit individual expected receive reproductive trials 
apply fitness scaling fitness shifting accurate term subtract theta average gamma maximum fitnesses 
gives histogram adjusted fitnesses average maximum maximum average ratio 
fitness scaling tends compress range fitnesses start run slowing convergence increasing amount exploration 
presence just super fit individual fitness times greater example lead 
fitness scale compressed ratio maximum average rest population fitnesses clustered closely 
prevented premature convergence done expense effectively flattening fitness function 
mentioned fitness function flat genetic drift problem may lead just slower performance drift away maximum 
fitness windowing grefenstette genesis ga package gre 
fitness scaling amount subtracted chosen differently 
minimum fitness generation recorded amount subtracted minimum fitness observed previous generations typically 
scheme selection pressure ratio maximum average trials allocated varies run problem problem 
presence super unfit individual cause super fit individuals may cause premature convergence influence degree scaling applied 
problem fitness scaling fitness windowing degree compression dictated single extreme individual fittest worst 
performance suffer extreme individual exceptionally extreme 
fitness ranking commonly employed method overcomes reliance extreme individual 
individuals sorted order raw fitness reproductive fitness values assigned rank 
may done linearly bak exponentially dav 
gives similar result fitness scaling ratio maximum average fitness normalised particular value 
ensures remapped fitnesses intermediate individuals regularly spread 
effect extreme individuals negligible irrespective greater fitness rest population 
number reproductive trials allocated say fifth best individual raw fitness values 
effect ceases problem 
experiments shown ranking superior fitness scaling bak whi 
methods hybrid methods including dynamic population size described bak perform 
implicit fitness remapping implicit fitness remapping methods fill mating pool passing intermediate stage remapping fitness 
tournament selection bri gd technique 
variants 
simplest binary tournament selection pairs individuals picked random population 
whichever higher fitness copied mating pool replaced original population 
repeated mating pool full 
larger tournaments may best randomly chosen individuals copied mating pool 
larger tournaments effect increasing selection pressure average individuals win tournament average individuals 
generalisation probabilistic binary tournament selection 
better individual wins tournament probability 
lower values effect decreasing selection pressure average individuals comparatively win tournament average individuals 
adjusting tournament size win probability selection pressure arbitrarily large small 
goldberg deb gd compare different schemes proportionate selection fitness ranking tournament selection steady state selection see section 
conclude suitable adjustment parameters schemes apart proportionate selection give similar performances absolute best method 
generation gaps steady state replacement generation gap defined proportion individuals population replaced generation 
generation gap population replaced generation 
value supported investigations grefenstette gre 
trend favoured steady state replacement whi whi sys dav dav 
operates extreme generation typically individuals replaced 
may better model happens nature 
short lived species including insects parents lay eggs die offspring hatch 
longer lived species including mammals offspring parents alive concurrently 
allows parents teach offspring gives rise competition 
steady state case consider select individuals parents select unlucky individuals population killed way offspring 
schemes possible including 
selection parents fitness selection replacements random 
selection parents random selection replacements inverse fitness 
selection parents replacements fitness inverse fitness example whitley genitor algorithm whi selects parents ranked fitness score offspring replace worst members population 
essential difference conventional generational replacement ga steady state ga population statistics average fitness recomputed mating steady state ga need computationally expensive done incrementally new offspring immediately available reproduction 
ga opportunity exploit promising individual soon created 
goldberg deb investigations gd advantages claimed steady state selection related high initial growth rate 
effects obtained claim exponential fitness ranking large size tournament selection 
evidence steady state replacement fundamentally better generational 
applications example ga applications mentioned 
illustrate flexibility gas list 
applications practice remain research topics 
numerical function optimisation 
traditional ga research concentrated area 
gas shown able outperform conventional optimisation techniques difficult discontinuous multimodal noisy functions dej 
image processing 
medical rays satellite images need align images area taken different times 
comparing random sample points images ga efficiently find set equations transform image fit gol 
unusual image processing task producing pictures criminal suspects cj 
ga replaces role traditional photo fit system uses similar coding scheme 
ga generates number random faces witness selects similar suspect face 
breed faces generation 
witness acts fitness function ga able control convergence correct image 
combinatorial optimisation tasks require solutions problems involving arrangements discrete objects 
quite function optimisation different coding recombination fitness function techniques required 
probably widely studied combinatorial task travelling salesperson problem gol gs 
task find shortest route visiting specified group cities 
near optimal tours cities determined 
bin packing task determining fit number objects limited space applications industry widely studied dav jul 
particular example layout vlsi integrated circuits 
closely related job shop scheduling time tabling task allocate efficiently set resources machines people rooms facilities carry set tasks manufacture number batches machine components dav sys 
obvious constraints example machine doing different things time 
optimum allocation earliest completion time minimum amount idle time resource 
design tasks mix combinatorial function optimisation 
mentioned design applications bridge structure fire hose nozzle neural network structure 
gas try things human designer thought afraid experiment preconceived ideas 
design gas traditional optimisation expert systems yield range designs human engineer assess 
machine learning 
applications gas learning systems usual paradigm classifier system 
ga tries evolve learn set rules deal particular situation 
applied game playing axe maze solving political economic modelling fmk 
major machine learning techniques field control dej hun kg 
large complex system chemical plant may control parameters adjusted keep system running optimal way 
generally classifier system approach rules developed controlling system 
fitness set rules may assessed judging performance real system computer model 
fogarty fog method develop rules controlling optimum gas air mixture 
goldberg modelled gas pipeline system determine set rules controlling compressor stations detecting leaks gol 
davis coombs similar approach design communication network links dc 
summary gas broad deep subject area knowledge empirical 
article described fundamental aspects gas theoretical practical aspects underlie compare techniques 
article aroused interest may wish find 
access usenet news system comp ai genetic newsgroup supports discussion ga topics 
moderated bulletin ga digest distributed email navy artificial intelligence centre 
subscription free 
join send request ga list request aic nrl navy mil support ftp site containing back issues ga digest information publications conferences ga source code freely copied 
service connect ftp ftp aic nrl navy mil anonymous user name email address password 
change directory pub 
readme file gives date information contents archive 
administrators request facility am pm est pm pm gmt monday friday 
part article appear issue journal go detail 
ack ackley 
empirical study bit vector function optimization 
davis editor genetic algorithms simulated annealing chapter pages 
pitman 
axe axelrod 
evolution strategies iterated prisoner dilemma 
davis editor genetic algorithms simulated annealing chapter pages 
pitman 
bak baker 
adaptive selection methods genetic algorithms 
grefenstette editor proceedings international conference genetic algorithms pages 
lawrence erlbaum associates 
bak baker 
reducing bias inefficiency selection algorithm 
grefenstette editor proceedings second international conference genetic algorithms pages 
lawrence erlbaum associates 
bel bellman 
dynamic programming 
princeton university press 
boo booker 
improving search genetic algorithms 
davis editor genetic algorithms simulated annealing chapter pages 
pitman 
bri 
genetic algorithms function optimization 
phd thesis university alberta 
bagchi kawamura 
exploring problem specific recombination operators job shop scheduling 
belew booker editors proceedings fourth international conference genetic algorithms pages 
morgan kaufmann 
bun 
basic optimisation methods 
edward arnold 
chi 
chi 
genetic search proportion estimates 
schaffer editor proceedings third international conference genetic algorithms pages 
morgan kaufmann 
cj caldwell johnston 
tracking criminal suspect face space genetic algorithm 
belew booker editors proceedings fourth international conference genetic algorithms pages 
morgan kaufmann 
cra cramer 
representation adaptive generation simple sequential programs 
grefenstette editor proceedings international conference genetic algorithms pages 
lawrence erlbaum associates 
dav davis 
applying adaptive algorithms epistatic domains 
th int 
joint conf 
ai pages 
dav davis 
job shop scheduling genetic algorithms 
grefenstette editor proceedings international conference genetic algorithms pages 
lawrence erlbaum associates 
dav davis 
genetic algorithms simulated annealing 
pitman 
dav davis 
adapting operator probabilities genetic algorithms 
schaffer editor proceedings third international conference genetic algorithms pages 
morgan kaufmann 
dav davis 
handbook genetic algorithms 
van nostrand reinhold 
dc davis coombs 
genetic algorithms communication link speed design theoretical considerations 
grefenstette editor proceedings second international conference genetic algorithms pages 
lawrence erlbaum associates 
dej dejong 
analysis behaviour class genetic adaptive systems 
phd thesis university michigan 
dej dejong 
adaptive system design genetic approach 
iee trans smc 
ds dejong spears 
genetic algorithms solve np complete problems 
schaffer editor proceedings third international conference genetic algorithms pages 
morgan kaufmann 
fmk forrest mayer kress 
genetic algorithms nonlinear dynamical systems models international security 
davis editor handbook genetic algorithms chapter pages 
van nostrand reinhold 
fog fogarty 
rule optimization combustion multiple burner boiler plants 
engineering applications artificial intelligence 
fourman 
compaction symbolic layout genetic algorithms 
grefenstette editor proceedings international conference genetic algorithms pages 
lawrence erlbaum associates 
gd goldberg deb 
comparative analysis selection schemes genetic algorithms 
rawlins editor foundations genetic algorithms pages 
morgan kaufmann 
gol goldberg 
alleles loci tsp 
grefenstette editor proceedings international conference genetic algorithms pages 
lawrence erlbaum associates 
gol goldberg 
genetic algorithms search optimization machine learning 
addison wesley 
gol goldberg 
sizing populations serial parallel genetic algorithms 
schaffer editor proceedings third international conference genetic algorithms pages 
morgan kaufmann 
gre grefenstette 
genesis system genetic search procedures 
proceedings conference intelligent systems machines pages 
gre grefenstette 
optimization control parameters genetic algorithms 
ieee trans smc 
gre grefenstette 
incorporating problem specific knowledge genetic algorithms 
davis editor genetic algorithms simulated annealing chapter pages 
pitman 
gre grefenstette 
genetic algorithms applications 
kent williams editors encyclopaedia computer science technology pages 
marcel dekker 
gs goldberg 
finite markov chain analysis genetic algorithms 
grefenstette editor proceedings second international conference genetic algorithms pages 
lawrence erlbaum associates 
gs gorges schleuter 
parallel genetic optimization strategy 
schaffer editor proceedings third international conference genetic algorithms pages 
morgan kaufmann 
hol holland 
adaptation natural artificial systems 
mit press 
hs harp samad 
genetic synthesis neural network architecture 
davis editor handbook genetic algorithms chapter pages 
van nostrand reinhold 
hun hunt 
lqg controller synthesis genetic algorithm 
proc 
ieee conf 
decision control pages 
jul 
multi chromosome genetic algorithm pack truck 
technical report rmit cs tr royal melbourne institute technology august 
kg krishnakumar goldberg 
genetic algorithms control system optimization 
aiaa guidance navigation control conf pages 
liepins palmer morrow 
greedy genetics 
grefenstette editor proceedings second international conference genetic algorithms pages 
lawrence erlbaum associates 
mic michalewicz 
genetic algorithms data structures evolution programs 
springer verlag 
richardson palmer liepins 
guidelines genetic algorithms penalty functions 
schaffer editor proceedings third international conference genetic algorithms pages 
morgan kaufmann 
rut 
simulated annealing algorithms overview 
ieee circuits devices magazine pages january 
sg schultz grefenstette 
improving tactical plans genetic algorithms 
proc 
ieee conf 
tools ai pages 
ieee society press 
sys syswerda 
uniform crossover genetic algorithms 
schaffer editor proceedings third international conference genetic algorithms pages 
morgan kaufmann 
sys syswerda 
schedule optimization genetic algorithms 
davis editor handbook genetic algorithms chapter pages 
van nostrand reinhold 
whi whitley 
reproductive evaluation improve genetic search heuristic discovery 
grefenstette editor proceedings second international conference genetic algorithms pages 
lawrence erlbaum associates 
whi whitley 
genitor algorithm selection pressure rank allocation reproductive trials best 
schaffer editor proceedings third international conference genetic algorithms pages 
morgan kaufmann 
whitley starkweather 
scheduling problems travelling salesmen genetic edge recombination operator 
schaffer editor proceedings third international conference genetic algorithms pages 
morgan kaufmann 
