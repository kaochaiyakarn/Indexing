selectivity estimation spatial databases swarup acharya viswanath poosala sridhar ramaswamy information sciences research center bell laboratories lucent technologies mountain avenue murray hill nj usa research bell labs com com selectivity estimation queries important problem relational database systems 
examine selectivity estimation context geographic information systems manage spatial data points lines poly lines polygons 
particular focus point range queries dimensional rectangular data 
propose techniques spatial indices histograms binary space partitionings novel notion spatial skew 
techniques carefully partition input rectangles subsets approximate partition accurately 
detailed experimental study comparing proposed techniques best known sampling parametric techniques 
evaluate synthetic real life tiger datasets 
experiments identify bsp partitioning call min skew consistently provides accurate selectivity estimates spatial queries 
partitioning constructed efficiently occupies little space provides accurate selectivity estimates broad range spatial queries 
geographic information systems giss generated enormous interest commercial research database communities decade 
giss typically store manage spatial data points lines poly lines polygons surfaces referred spatial databases 
commercial database systems manage spatial data available 
include arc info arc int mapinfo map informix 
leading database vendors done author bell labs 
current affiliation road suite palo alto ca 
appears proceedings acm sigmod conference philadelphia june 
offer kind support spatial data process providing support 
giss focus research efficient manipulation access sam sam research prototypes dew 
relational database systems modules spatial database system require accurate estimates query result sizes 
estimates variety ways 
example query optimizers query result size estimates determine efficient way execute queries sac 
estimates database systems give users feedback running times queries queries executed 
impractical run entire query compute result sizes commercial systems form statistics approximate underlying data estimate result sizes statistics 
variety techniques proposed literature compute estimates query result sizes relational databases 
common ones histograms koo poo samples lns parametric techniques model data standard mathematical distribution cr bf 
various techniques histograms particular proved popular database systems computed efficiently little space order bytes relation require input distribution known advance 
partitioning input small number subsets called buckets approximations bucket model distribution tuples 
query result estimates obtained processing query buckets approximations 
problem selectivity estimation spatial data different relational selectivity construct distributions approximated histograms small amount space 
estimation problems studied extensively database literature 
previous works focused approximating distributions single numerical attributes 
ones studying multidimensional data pi mps concentrated approximating frequencies points space 
techniques aimed data highly skewed frequencies 
perform frequency domain relatively uniform value domain placement points space skewed 
spatial selectivity estimation differs important aspects traditional selectivity estimation individual spatial entities may differ shape size ii distribution frequencies input domain vary dramatically spatial data values spread non uniformly space 
corresponds fact spatial entities cover point 
problem approximating spatial data requires techniques accurately approximating value domain distribution 
context uni dimensional point data known difficult problems selectivity estimation gg poo 
best knowledge faloutsos bf addressed problem spatial selectivity estimation concentrate point data issue ii 
motivated reasoning study problem selectivity estimation point range selection predicates spatial data 
particular concentrate dimensional rectangular data 
important problem customary spatial database systems approximate spatial objects minimum bounding rectangles mbrs perform query processing mbrs possible 
spatial objects need large representations cumbersome inefficient manipulate directly 
concentrate primarily rectangular data techniques applicable point linear data 
contributions follows ffl novel grouping techniques approximating spatial data 
addition analogues techniques relational databases propose new techniques spatial indexes selectivity estimation 
propose novel techniques notions spatial density spatial skew 
features data capture underlying input data distribution concise manner allows devise accurate techniques selectivity estimation 
ffl provide detailed experimental study comparing various techniques synthetic reallife datasets 
results show density technique call min skew outperforms techniques entire data query spectra 
technique computationally efficient low memory requirements large dataset sizes 
studies show straightforward application techniques dimensional world sampling effective spatial domain 
ffl identify seemingly counter intuitive fact spatial selectivity estimation data fine level detail result poor performance answering large queries 
observation develop technique called progressive spatial refinement improve min skew 
rest organized follows 
section contains formal problem description 
section offers high level discussion possible solutions problem presents basic techniques spatial selectivity estimation 
section presents sophisticated techniques spatial selectivity estimation 
section presents results extensive series experiments real life synthetic data 
identify min skew clear winner suggest improvements 
section 
problem formulation section formally define specific class selectivity estimation problems addressed develop notation describing spatial data 
consider relation containing attribute domain set dimensional rectangles 
distribution set rectangles fr 
components rectangle specify lower left upper right corners respectively 
assumed come integer real domain 
denote area minimum bounding rectangle mbr input rectangles area 
avg avg denote average width height rectangles contained respectively 
denote sum areas rectangles ta 
range query predicate specified rectangle qx qy qx qy 
note definition specify point queries setting qx qx qy qy result size jqj number rectangles input non empty intersection query rectangle 
selectivity query fraction jqj computing exact selectivity query requires scan input dataset index find number input rectangles intersect query 
clearly options expensive useful contexts including query optimization may require disk accesses involve significant amount processing 
forced summarize approximate input data represented compactly 
approximations estimate selectivities 
define problem selectivity estimation rectangular data estimating jqj arbitrary range query input distribution problem focus 
techniques approximating spatial data section examine various techniques approximating spatial data 
main focus broad class non parametric techniques approximate data small amount space typically tabular form 
simple technique analogous traditional uniform distribution assumption relational databases sac 
uniformity assumption spatial data simplest technique approximating spatial data assume input rectangles identical width height distributed uniformly input space 
formulas estimating result sizes point range queries assumption 
point queries point queries return number rectangles overlap particular point 
applies uniformity assumption calculating average number rectangles hit point query input mbr 
average point queries mbr 
easily shown average obtained ratio total area input rectangles area input mbr ta area 
range queries range queries natural uniformity assumption rectangles identical width height uniformly distributed input mbr 
number rectangles query qx qy qx qy intersects calculated follows define qx min qx gammaw avg 
extends left side query average width subject constraint left side cross left input boundary 
define qx qy qy similarly 
extended area query area qx gamma qx theta qy gamma qy 
number rectangles intersecting estimated area 
note simply area query extending inaccurate assumes rectangles centers lie query area intersect query 
account input rectangles centers outside query area intersect query 
course real life data considerable skew placement input rectangles input space 
skew size input rectangles application uniformity assumption result highly inaccurate selectivity estimates 
high level placement skew size skew problems mitigated grouping input rectangles smaller subsets buckets applying uniformity assumption subset individually 
result grouping skew subset small clear making uniformity assumption subsets incurs substantially error making uniformity assumption entire input 
focus developing accurate grouping techniques spatial data 
approximating spatial data grouping issues addressed developing grouping technique approximating spatial data criteria grouping rectangles buckets technique resulting set buckets estimate result sizes 
solved observing buckets identified problem selectivity estimation reduces solving selectivity estimation individual buckets buckets disjoint 
apply uniformity assumption corresponding formulae developed section individually bucket 
primary issue developing grouping technique criterion grouping rectangles buckets 
identified classes fundamentally different groupings applied approximate spatial data 
ffl equi partitionings partitionings goal partition input space resulting buckets identical measure equal areas equal number rectangles 
ffl index partitionings partitionings produced spatial index structure tree 
ffl skew aware partitionings partitionings sophisticated binary space partitionings notion spatial skew defined placement skew tends dominate size skew real life datasets 
terms grouping partitioning interchangeably 
dimension dimension dataset section group rectangles buckets negative effects making uniformity assumption minimized 
equi partitioning techniques identify advantages drawbacks 
fundamentally different skew aware approach 
equi partitioning spatial data partitionings goal partition input space property identical resulting partitions 
studied criteria equi partitionings equi area equi count analogous equi height histograms relational data approximations koo psc 
equi area groupings goal equi area grouping create buckets mbrs area 
approach clearly minimizes maximum area buckets 
large buckets potentially incur higher errors true equi area groupings seen attempt minimize worst case errors 
construct partitioning starting single bucket consisting mbr input rectangles 
mbr bucket split longer dimension equal halves 
rectangles grouped halves centers lie 
mbrs calculated new buckets longest dimension choices available chosen corresponding bucket split 
process repeated desired number buckets obtained 
recalculation mbrs ensures buckets produced try approximate input data distribution simply sub divide mbr input regions equal size 
useful lot empty space mbr input 
equi count groupings equi count grouping goal create buckets containing number rectangles 
buckets large number rectangles potentially incur large errors true equi count groupings seen attempt bound worst case errors 
algorithm obtaining grouping similar algorithm equi area difference dimension highest projected rectangle count chosen splitting 
projected rectangle count dimension bucket number distinct centers rectangles bucket projected dimension partitionings illustrated example 
example consider dataset depicted 
dataset call set described detail section part experiments 
note set contains rectangles corners center 
figures depict equi area equi count groupings dataset grouping buckets 
expected equi area nearly identical buckets distributed uniformly equi count contains buckets denser areas 
tree index grouping tree gut srf bkss popular index structure spatial data 
building index structure tree insert algorithm tries minimize area margin overlap summed bounding boxes internal nodes 
stands reason partitions produced trees summarize input data mbrs internal nodes effectively giving way construct spatial partitioning idea indexes obtain summary information dataset examined researchers 
see ant 
tree bkss known efficient members tree family data structures 
partitioning resulting tree dataset 
note partitioning drastically different equi partitioning techniques 
disadvantages equi partitioning index grouping schemes equi partitioning index schemes suffer fundamental disadvantages 
disadvantages broadly classified affect accuracy computation cost 
accuracy key drawback equi partitioning schemes produce buckets significant placement size skew 
equi area name derived famous structure india called pillars corners 
dimension equi area partitioning dimension equi count partitioning dimension tree partitioning grouping consider skew distribution input rectangles producing buckets 
equi count grouping attack skew producing buckets regions lot rectangles 
region relatively uniform beneficial wastes buckets 
tree insertion algorithms essentially local decisions creating new nodes result final buckets produced fairly skewed 
proposals minimize number disk reads performed tree data distribution account expected produce partitions conducive selectivity estimation ts 
computation disadvantage grouping schemes computationally expensive 
equi partitionings require input data kept memory 
modified memory passes input data 
tree technique require index data fit memory equivalent passes input data 
naive algorithm constructing tree repeated insertion take log insert items sophisticated bulk loading algorithm take log 
disk block size 
motivated deficiencies techniques developed new class techniques directly address skew computational efficiency 
describe techniques section 
advanced spatial grouping techniques technique addressing skew problem focus reducing placement size skew bucket 
uniformity assumption bucket uniform intra bucket distribution accurate estimation 
formalize notion follows 
define spatial density point space number rectangles containing point 
note uniform distribution assumption essentially replaces spatial densities bucket single number equal average 
clear accurate approximation groups rectangles points bucket similar spatial densities 
similar notion optimality histogram literature define metric capture notion grouping error 
definition consider grouping buckets fi 
number points spatial skew bucket statistical variance spatial densities points grouped bucket 
spatial skew entire grouping weighted sum spatial skews buckets fi theta clear partitioning small spatial skew highly accurate approximating data 
unfortunately building optimal partitionings minimize spatial skew amount space difficult problem provably nphard simple instances mps kms 
technique reducing complexity constructing partitionings restrict binary space partitionings bsp 
partitioning region said bsp find vertical horizontal line divides input region sub regions partitionings sub regions 
best known algorithms constructing dynamic programming complexity mps require input memory 
clearly infeasible large gis data 
problem finding tractable propose heuristics 
compact approximation input data place original order build grouping memory 
variance set numbers fn equal gamma average dimension dimension spatial density spatial densities 
greedy approach reduce complexity computation making locally optimal decisions achieving linear time complexity partitioning 
rest sub section focus problem reducing effective input size 
section develop novel algorithm constructing points 
approach reduce input size divide input mbr evenly uniform grid rectangular regions 
grid region associated spatial density number input rectangles intersect 
grid regions spatial densities inputs bsp construction algorithm 
grid size chosen grid regions spatial densities easily fit memory 
note spatial densities obtained easily single sweep input data 
illustrate concepts example 
example consider approximation dataset theta grid 
depicts spatial densities regions dimension 
choosing correct granularity grid rectangular regions presents tradeoff 
hand fine grid captures details underlying distribution lets approximate 
hand fine grid implies higher processing memory cost 
examine issue empirically section show certain situations fine grid detrimental construction partition 
min skew partitioning propose novel technique constructing skew resistant binary space partitionings 
technique uses uniform grid regions spatial densities input 
algorithm partitions grid buckets trying minimize spatial skew definition grouping 
call resulting partitioning min skew partitioning 
construction algorithm min skew partitioning repeatedly partitions set regions spatial skew minimized step 
partitions existing region result bsp partitioning 
pseudo code algorithm algorithm min skew compute aggregate density input rectangle distribution uniform grid rectangles spatial density 
start single bucket consisting regions 
buckets needed current bucket compute spatial skew bucket definition split point dimensions produce maximum reduction spatial skew 
pick bucket split lead greatest reduction spatial skew 
split bucket assign regions old buckets new buckets 
endwhile assign rectangle input bucket mbr contains center rectangle 
implementation reduce computational complexity step greedy approach basing splitting decisions marginal frequency distributions dimension full dimensional input distribution 
illustrates preprocessing spatial inputs highlights iteration algorithm 
bucket partitioning data set 
min skew partitioning desirable features 
construction algorithm tries minimize spatial skew albeit local uni dimensional manner partitioning tends significantly skew algorithms 
construction algorithm require entire data distribution fit main memory significant advantage 
addresses issues skew computation time disadvantages grouping techniques considered section 
experimental results section study performance various techniques estimating spatial selectivity 
results rectangle region marginal density spatial density region variance dim variance dim dimension bucket boundary min skew illustration dimension dimension min skew partitioning dataset section extensive experimental study real life synthetic spatial data 
section organized follows 
describe datasets query model 
followed performance evaluation various techniques 
explore champion technique min skew greater detail study tradeoffs 
comparing various techniques metrics ffl average relative error ratio error estimate actual size query result averaged set queries 
estimated answer actual answer query average relative error query set jr gamma 
ffl preprocessing time time taken construction algorithm technique preprocess data build appropriate data structures generate buckets process spatial queries 
datasets studied performance various techniques real life synthetic datasets described 
real life datasets real life data datasets widely spatial database research tiger tig sequoia dataset 
due space constraints results nj road dataset tiger gives road data state new jersey line segments 
experiments computed bounding boxes line segments set spatial inputs 
results data sets available full apr 
metric undefined queries query set produce output 
case encounter datasets 
synthetic datasets systematically generated synthetic datasets varying size sparsity placement skew size skew 
sparsity controlled adjusting dataset size relative total input area 
size skew modeled generating widths heights zipf distribution zip 
placement skew modeled dimensional zipf distributions 
results set set introduced section 
contains rectangles identical height width units distributed theta space 
seen rectangles concentrated corners creating areas varying levels spatial densities 
query sets query sets consist large number rectangles lying mbr input 
centers rectangles chosen randomly set centers input rectangles 
average width height query rectangle referred parameter experiments varied width height input bounding box varies query area input mbr size 
desired average area query rectangles generated achieved setting height width rectangles uniformly distributed range theta theta 
techniques studied addition studying new techniques propose equi count equi area tree min skew included sampling parametric technique due faloutsos bf experiments 
apply sampling follows 
collect sample input rectangles 
query compute selectivity query sample 
scale result appropriately obtain estimate query selectivity 
size sample input size number sample rectangles satisfy predicate estimated result size theta technique referred sample graphs 
fractal parametric technique bf proposed point data 
shows spatial data described fractals having fractal dimension 
context selectivity point sets described power law correlation fractal dimension exponent 
comparison extended technique rectangle data centroids rectangles representatives 
addition techniques uniform assumption section entire input single bucket approximation call uniform technique 
space allocation key parameter influences cost performance non parametric techniques number buckets samples allowed approximation 
typically query processors allocate bytes statistics attribute translates having buckets 
study consider allocating buckets 
space overhead bucket techniques equi count equi area tree min skew times number buckets words bounding box bucket average density bucket number average width average height rectangles bucket 
sample technique requires half needs store bounding box sample rectangle 
consequently terms space overhead rectangles sample technique correspond buckets bucket techniques 
experiments liberally give sample twice fair amount 
words sample compared techniques twice space techniques times rectangles buckets 
complication tree build partitions difficulty controlling number buckets produced 
addressed problem tweaking branching factor produce close number desired ensuring exceeded allocated quota order fair techniques 
experimental results section compare performance various techniques spatial selectivity estimation 
study performance various techniques respect query size number buckets 
experiment vary parameters entire set values keep remaining parameters fixed default values 
experiments number regions construction algorithm set 
experiment impact query size experiment studies performance various techniques different query sizes axis 
shows relative error function query size buckets approximate nj road dataset 
results datasets qualitatively similar 
chop axis graphs keep scale 
error sample technique 
general observation graph relative error decreases increasing query size 
error estimation arises buckets partly contained query 
bucket stores exact number rectangles belonging buckets fall entirely query rectangle contribute error 
buckets fully covered bigger queries relatively fewer buckets contribute error 
techniques show better accuracy move right graph 
fractal technique bf close effective technique datasets studied 
average relative error nj road dataset consistently close query sizes 
said defense technique developed point data examined rectangle data 
rest experiments show performance fractal technique perform competitively 
numbers uniform poor 
nj road dataset uniform errors range 
high range errors observed data sets 
shows real life spatial data inherently skewed captured trivial single bucket approximation 
rest experiments show performance uniform technique 
graph shows sampling performs quite poorly 
result borne cases studied 
implicit assumption rectangle chosen sample representative spatial distribution size rectangles neighborhood local uniformity assumption 
obviously case spatial data 
numbers show approximating spatial data distributions requires average relative error query size sample equi area equi count tree min skew performance vs query size buckets sophisticated partitioning techniques account implicit features data 
equi area equi count tree techniques similar error values equi count doing slightly better 
clear min skew technique winner huge margin 
improves average relative error closest competitors cases 
recall min skew technique aims create buckets variance density bucket 
words explicitly accounts spatial skew data 
consequently error bucket partially covered query significantly lower min skew technique compared techniques take skew account 
experiment impact bucket size experiment study impact number buckets performance various techniques 
plots average relative error number buckets allowed nj road dataset 
left right graphs plot values different query sizes 
expected allowing space approximation helps reduce errors 
min skew technique gives errors entire range studied 
performance especially noteworthy relatively buckets 
having buckets poses greatest difficulty approximation technique 
performing scenario particularly standpoint query optimization query processors typically allow small number buckets space constraints 
techniques buckets able approximate input greater detail 
lowers effect skew performance turn diminishes performance differences various techniques 
performance equi area equi count similar equi count having slightly better performance cases 
tree consistently worse entire space studied 
numbers rtree slightly pessimistic 
pointed earlier difficult control number buckets produced tree technique generates fewer buckets allocated quota 
sample ineffective space available 
experimental results conclude min skew technique choice approximate spatial distributions ideal technique spatial selectivity estimation 
highlighted sec fast computationally efficient techniques low memory requirements 
explore min skew technique greater detail look various factors affect performance 
experiment min skew sensitivity regions experiment study influence number regions uniform grid approximate underlying input space performance technique 
pointed section inherent cost versus accuracy trade choosing correct granularity grid 
graphs analyze tradeoff quantitatively 
plots average relative error versus number input regions min skew technique 
graph nj road dataset number buckets set 
graphs show lines corresponding query sizes 
move right axis number regions increase size region drops correspondingly 
implies underlying input distribution captured accurately 
graphs show increasing number regions decreases errors point flatten 
flattening due nature reallife data 
non uniform variations density 
causes big improvement performance left side graph 
data extremely skewed sub dividing space finely capture additional features data 
graphs show increasing number regions capture original input necessary performance creating regions necessarily help 
increases run time overhead 
clearly correlation input data distribution query size number regions estimation error finding correct number buckets sample equi area equi count tree min skew average relative error number buckets sample equi area equi count tree min skew small query large query performance vs number buckets number regions query size average relative error number regions query size nj road dataset synthetic dataset error vs regions min skew performance buckets number regions provides error interesting problem exploration part 
studying problem space synthetic dataset produces counter intuitive result 
shows problem space synthetic dataset 
increasing number regions performance small queries improves expected 
set graphs error min skew large queries get worse regions 
large number regions approximate synthetic dataset considerable number regions span skewed corner areas 
regions highly varying spatial densities 
forces min skew construction algorithm allocate buckets relatively compact areas order reduce skew 
turn implies buckets large interior areas skewed 
net result grouping perform poorly large queries frequently span relatively uniform interior areas 
allocating buckets small corners improving performance small queries improve performance large queries areas included wholly large query 
having regions adverse effect min skew large queries 
section provide solution called progressive refinement address problem 
progressive refinement min skew clear discussion previous section large number regions mainly benefit small queries 
smaller number regions helps large queries 
handle cases correctly best worlds propose progressive refinement regions min skew 
implement progressive refinement starting construction algorithm small number coarse regions 
equal intervals buckets refine regions splitting region identical regions 
newly created regions replace original regions 
properties buckets needed construction algorithm skew marginal frequencies recalculated new regions 
rest min skew algorithm continues 
number refinements important parameter examine empirically section 
example suppose want perform refinements final grid size regions 
number buckets required 
refine regions factor time start min skew grid consisting regions run till produces buckets 
point refine number regions produce buckets bringing total number upto 
refine regions producing regions produce buckets bringing total number buckets needed 
dataset progressive refinement qualitative effect 
initially data observed coarsely buckets allocated cover relatively skewed middle areas 
takes care large queries 
large number regions produced highlights high skew corners 
causes allocate remainder buckets areas 
takes care small queries 
effect progressive refinement allocates buckets uniformly entire space selectively drills allocates buckets high skew regions require 
experiment min skew impact progressive refinement section quantitatively study accuracy improvement produced progressive refinement 
plots error data point regions 
number refinements shown axis numbers large query 
horizontal line shows minimum value error achieved large queries 
high level clear refinements help considerably 
cause error drop 
cause error drop absolute minimal level achievable picking correct region size come close 
note error starts increasing refinements 
having refinements leave buckets approximating skewed regions causing error 
query data distribution interesting open question determine optimal number refinements regions 
detailed sensitivity study progressive refinements scope part 
experiments best number refinement varies number refinements impact progressive refinement time taken seconds partitioning input size input size technique fi fi fi fi min skew equi area equi count tree uniform table time computing various partitionings depending query size input data 
experiment construction times experiment look construction time taken different techniques 
table shows times different input sizes bucket counts fi 
times measured sparc ultra machine mb memory 
seen number buckets minor effect construction time 
techniques uniform take significantly time increasing data size 
mentioned earlier benefits min skew 
recall equi area equi count tree require entire dataset fit memory min skew technique 
selectivity estimation critical component query processing databases 
despite increasing popularity spatial databases little providing accurate efficient techniques spatial selectivity estimation 
spatial data differs significantly relational data relational techniques simply perform domain 
proposed new techniques spatial selectivity estimation 
techniques spatial indices binary space partitionings novel notion spatial skew 
extensive experimental analysis new techniques adaptations previously known techniques able show sampling parametric techniques relational dimensional world spatial data 
bsp partitioning call min skew outperforms techniques broad range query workloads datasets 
min skew partitioning constructed efficiently added advantage having low memory requirements construction 
summary results show spatial selectivity estimation solved accurately efficiently large spatial databases 
acknowledgments authors steve blott help code computing fractal dimensions 
obtained mathematica program computing fractal dimensions christos faloutsos web site 
help gratefully acknowledged 
ant 
random sampling pseudo ranked trees 
proceedings th conference large databases morgan kaufman pubs 
los altos ca vancouver august 
paul aoki 
generalizing search generalized search trees 
technical report csd university california berkeley june 
apr swarup acharya viswanath poosala sridhar ramaswamy 
selectivity estimation spatial databases 
technical report bell labs 
full version appearing sigmod 
arc arc info 
understanding gis arc info method 
arc info 
rev workstations 
bf faloutsos 
estimating selectivity spatial queries correlation fractal dimension 
proceedings st international conference large data bases zurich 
bkss beckmann 
kriegel schneider seeger 
tree efficient robust access method points rectangles 
proc 
sigmod intl 
conf 
management data 
cr chen roussopoulos 
adaptive selectivity estimation query feedback 
proc 
acm sigmod conf pages may 
dew david dewitt 
client server paradise 
vldb computer sciences department west dayton street madison wi 
university 
gg erol daniele 
size projection relations satisfying functional dependency 
proc 
th int 
conf 
large databases sept 
grumbach scholl 
spatial constraint database 
dbpl 
gut guttman 
trees dynamic index structure spatial searching 
proc 
acm sigmod conf 
management data pages 
haas naughton seshadri stokes 
sampling estimation number distinct values attribute 
proc 
st int 
conf 
large databases pages 
int www com iss products 
htm 
kms khanna muthukrishnan skiena 
efficient array partitioning 
proc intl colloq languages automata programming icalp 
koo 
optimization queries relational databases 
phd thesis case western university sept 
lns lipton naughton schneider 
practical selectivity estimation adaptive sampling 
proc 
acm sigmod conf pages may 
map mapinfo mapinfo story www mapinfo com mapinfo html 
mps muthukrishnan viswanath poosala torsten suel 
rectangular partitionings dimensions algorithms complexity applications 
th international conference database theory january 
pi viswanath poosala yannis ioannidis 
selectivity estimation attribute value independence assumption 
proc 
rd int 
conf 
large databases august 
viswanath poosala yannis ioannidis peter haas eugene shekita 
improved histograms selectivity estimation range predicates 
proc 
acm sigmod conf pages june 
poo viswanath poosala 
histogram estimation techniques databases 
phd thesis univ 
psc gregory piatetsky shapiro charles connell 
accurate estimation number tuples satisfying condition 
proc 
acm sigmod conf pages 
sac selinger astrahan chamberlin lorie price 
access path selection relational database management system 
proceedings acm sigmod international conference management data pages boston massachusetts june 
sam samet 
applications spatial data structures computer graphics image processing gis 
addison wesley ma 
sam samet 
design analyses spatial data structures 
addison wesley ma 
michael stonebraker jim jeff meredith 
sequoia storage benchmark 
sigmod record acm special interest group management data june 
srf sellis roussopoulos faloutsos 
tree dynamic index multi dimensional objects 
proc 
ieee international conf 
large databases 
tig tiger line files tm technical documentation 
technical report bureau census 
ts yannis theodoridis sellis 
model prediction tree performance 
proceedings fifteenth acm sigact sigmod sigart symposium principles database systems june montreal canada 

montage extensible architecture 
proc 
sigmod intl 
conf 
management data 
zip zipf 
human behaviour principle effort 
addison wesley reading ma 
