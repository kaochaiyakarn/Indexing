knowledge representation trains conversation system david traum schubert massimo poesio nathaniel martin marc light chung hee hwang peter heeman george ferguson james allen describe goals architecture functioning trains system emphasis representational issues involved putting complex language processing reasoning agent 
system intended experimental prototype intelligent proficient planning advisor dynamic domain cargo trains factories 
team effort strategy outset designers various language processing discourse processing plan reasoning execution monitoring modules choose representations best suited tasks constraint strive principled general approaches 
disparities modules bridged careful design interfaces regular depth discussion issues encountered participants 
goal generality principled representation multiple representations ended deal common instance explicit event variables ability refer complex objects plans unifications quite possible 
explain goals particulars krs evaluate extent served purposes point tensions representations needed resolved 
expressive representations minimized tensions easier extract needs elaborate representation retaining semantic nuances lost information 
key words knowledge representation natural language understanding dialogue systems trains long term research project aimed developing intelligent proficient planning assistant 
task domain initial phases project involved factories cargo trains achieve delivery goals delivery quantity orange juice particular cities orange juice factories orange warehouses cities railroad network 
built prototype system years project 
year effort trains centered particular problem solving dialogues obtained slightly editing transcripts selected corpus human human spoken dialogues involving trains world problems 
overview trains project appears allen 
focus interactions language understanding components reasoning components trains allows trains modules incremental cooperative planning process 
nature interactions depends crucially nature knowledge representations interacting modules 
devoted explaining rationales various representations way inter module communication trains bridges gaps representations advantages remaining tensions associated architecture 
heterogeneous architecture trains consequence project goals research philosophy 
primary goal remains gain deeper understanding relationship nl universit de gen eve rte de switzerland 
email david traum unige ch telephone number fax computer science department university rochester rochester ny usa 
centre cognitive science university edinburgh buccleuch place edinburgh eh lw scotland 
universitat tubingen sfs 
tubingen germany 
dialogue problem solving informs constrains 
ask dialogue shaped need solve realistic problems involving significant amounts world knowledge 
conversely cooperative problem solving shaped availability necessity linguistic interaction 
addition trains project intended serve certain research management objectives 
provides setting researchers different facets nlp problem solving confront interface issues common integrated comprehensive view problem solving dialogues opposed working independently just selected problems theoretical interest 
committed practical goal building series working integrated prototype systems way keeping theoretical efforts focused earth bound 
systems ends intended steps proficient intelligent planning assistant dynamic task domains 
indicated opening remarks methodology undertake series joint efforts centered specific increasingly complex realistic dialogues 
drawing dialogues corpus natural spoken dialogues people ensure theories apply actual discourse systems show increasingly life behavior 
satisfied ad hoc theories techniques happen trains domain 
interested principled general solutions apply entirely different potentially richer task domains 
emphasis generality important individual researchers bring bear representational theories techniques promising subproblem 
system differs soar project lehman similar aims build integrated multi functional language agent 
soar project uses common knowledge representation inference mechanism 
decided seek integration careful consideration interface control issues insisting uniform representation outset efforts individual modules kept honest need interact modules straightforward way 
rest organized follows 
section overview trains domain modules trains system 
section describes knowledge requirements various aspects system 
overview kr languages system section followed trace system working small dialogue fragment section 
continue discussion different languages related obstacles unification ontologies inherent different kr systems conclude evaluation state system directions 
trains system section briefly describe domain architecture trains system order provide concrete foundation specific discussion knowledge representation reasoning issues rest 
details system rationales choosing domain allen 
trains domain trains system helps user construct monitor plans railroad freight system 
user responsible assigning cargo trains scheduling cargo various simple manufacturing tasks revising original plans unexpected situations arise plan execution 
system user directly executes actions trains domain 
actions performed simulated railroad engineers factory station supervisors 
dialogue encouraged giving user system different responsibilities knowledge 
user goals need achieved direct access agents world complete knowledge actions performed 
system acts user assistant 
knows actions possible provides communication link world 
interacts user aspects task natural language interface 
information initially share map current trains scenario shown 
world consists cities contains rail station contains engines rail cars indicated 
cities contain warehouses containing goods bananas avon oranges corning factories orange juice factory converts oranges orange juice 
boxcar banana warehouse boxcar boxcar engine engine engine boxcar oj factory orange warehouse bath corning avon car trains world map research strongly motivated studying actual human performance situations 
collected hours human human dialogue trains domain gross heeman allen data gain insight people collaborate form plans language construct discuss joint plans 
type analysis crucial identifying problems arise dialogue helps avoid working issues interesting occur practice 
shows target dialogue trains implementation 
dialogue concerns trains world situation goal stated utterance shipping boxcar oranges bath 
dialogue simplified version human human dialogues corpus 
simplifications include deletions disfluencies elimination difficult interactions elimination difficult repair turns merging separate prosodic phrases full sentential utterances merges third sixth prosodic phrases third turn original spoken dialogue complete sentential utterance 
labeling scheme maintains correspondence turn utterance 
numbering original despite simplifications 
dialogue chosen point common ground integrating testing different components system places processing burden language understanding knowledge representation plan recognition components requiring simplistic nl generation achieve desired system responses 
trains implementation engage dialogue user typing keyboard 
system interprets evaluates user utterances produces appropriate responses maintaining dialogue context building representation shared plan sent trains world simulator executed 
section shows annotated trace representations produced system processed turns dialogue 
person fills role system 
gross 
better ship boxcar oranges bath am 
okay 
need get boxcar corning oranges 
oranges corning 
right 
right 
need engine move boxcar 
right 
right 
engine avon 
right 
right 
move engine avon engine pick boxcar 
okay 
move corning 
load oranges boxcar 
move bath 
okay 
sound 
problem 

dialogue processed trains 
trains system architecture shows modules trains implementation main flow communication modules 
shown representation languages modules 
languages discussed section 
indicates language interpretation modules tightly integrated task modules domain planning plan execution 
granularity interleaving implementation sentential utterance level 
utterance user system processed modules dialogue manager calls domain reasoner disambiguate hypotheses meaning update representation current plan 
information planner basis forming nl responses acceptances rejections repairs plan suggestions 
complete plan built believed shared conversants sent executor monitor executed simulated world 
parsing logical form computation module interpretation process parser takes utterance input produces syntactic analysis underspecified logical form ulf allowing referential ambiguities 
gpsg style grammar gazdar extensive feature system including subcategorization features feature principles governing feature percolation 
rule grammar consists syntactic rule coupled corresponding semantic rule 
allows build interpretation compositionally sense montague semantics montague 
parser chart parser uses probabilities gathered trains corpus choose arc expand 
lexicon consisting syntactic features semantic expressions stems constructed hand 
addition alvey lexicon stems morphological analyzer kimmo segmenter combined unification chart parser ritchie integrated trains sentence level parser 
alvey lexicon contain fine grained semantic information needed trains system useful syntactic features mapped straightforwardly trains syntactic features 
interpreter speech act nl generator user nl output plan reasoner plan graphs dialogue manager ebtl scoping disambiguation crt trains system parser episodic logic plan executor monitor nl input trains world agents trains system architecture scoping task scoping module sad fix value contextdependent aspects utterance content referential expressions 
input sad underspecified representation produced parser 
output set alternative hypotheses resolve ambiguities suggested context 
sad arrives hypothesis applying discourse interpretation rules varying strength operate directly underspecified interpretation 
decision integrate scope interpretation aspects pragmatic interpretation reflects thesis put forth poesio scoping preferences human subjects result interaction discourse interpretation processes 
speech act analysis speech act interpreter responsible determining speaker means utterance 
instance speaker utters oranges corning utterance conversation saying inform hearer fact check hearer agrees question hearer case suggestion oranges current plan 
alternatives mutually exclusive 
speech act interpreter builds list hypotheses speech act interpretations utterance 
working fully scoped forms speech act analyzer takes ulf input 
speech act analysis scoping completed result scoping incorporated speech act hypotheses passed dialogue manager verification 
dialogue management dialogue manager responsible maintaining flow conversation making sure conversational goals met 
system main goal construct agree plan user execute 
dialogue manager keep track user current understanding state dialogue verify hypotheses intentions motivate utterances user adopt intentions form speech acts respond send intended speech acts nl generator produce system utterances send commands domain plan reasoner domain plan executor appropriate 
dialogue manager described detail traum allen traum 
domain plan reasoning plan reasoner provides planning plan recognition services performs reasoning state world 
system explicitly represent plan consideration user utterances concern contributions current plan 
framework representations plans contain explicit statements goals plan importantly assumptions underlying plan 
assumptions plan recognition fill details left unspecified user necessary connect current utterance plan planning example persistence assumptions 
assumptions drive dialogue investigated explicit representation plans arguments assumptions ferguson 
trains plan reasoner supports interleaved planning recognition necessary processing dialogue exports variety functions modules system particular dialogue manager 
dialogue manager uses results plan reasoning disambiguate speech act interpretations update beliefs generate new conversational elements ambiguity detected plan reasoner cause clarification started 
nl generation nl generator takes speech act representations produced dialogue manager converts natural language text uttered output user fed back language analysis modules described section 
nl generation research focus project simple template matcher produce utterances speech act forms regard complex generation issues sequencing information presentation detailed knowledge syntax correspondence syntax semantic representation rhetorical style choice appropriate referring expression 
plan execution plan executor implements domain plans sending requests individual agents engineers factory warehouse simulated world 
selects set requests reasoning possible consequences actions agents perform satisfying requests 
plan executor monitors progress plan communicating agents perform tasks gathering information better choices executing subsequent plans 
bases decisions constraints probabilities inferred observations probabilities asserted programmer facts inferred knowledge base 
principles executor operation described detail martin 
plan executor perform additional services modules 
aid planning process making choices set alternatives choosing set alternative paths take destinations monitor report current state world 
trains world simulation trains world detailed simulation action executions agents world objects 
plan execution monitoring far system concerned real world 
intentions system direct bearing behavior world 
actions take place regardless system goals 
world implements dynamic physical model accessible system 
way system effect change world sending directives agents world engineers factory managers receive messages may lost execute requested actions 
actions may may consequences anticipated 
knowledge requirements problem solving dialogues engage trains task participate dialogue shown system reason number different types knowledge 
separate research traditions involving different subtasks led different ontologies representations 
obvious split language interpretation tasks representation language rich represent nuances natural language domain plan reasoning tasks representation closer ontology action domain desired 
separate research traditions areas 
language processing side split semantically oriented representations focus truth functional nature sentence model pragmatically oriented representations focus utterance context affects conversing agents 
task side tension representations convenient finding efficient plans talking agent executing world 
rest section describe divergent representational requirements addressed scope system designed perform trains task 
section show issues addressed actual kr languages exemplified trace section 
section return conflicting assumptions different research traditions show connections differences languages difficult start single representation language 
knowledge language dialogues natural language system limited narrow task domain form content utterances tend equally limited 
setting possible achieve understanding ad hoc rules shortcut serious syntactic semantic analysis going directly domain specific clue words patterns domain specific meanings intentions 
trains task domain quite narrow shortcut methods certainly employed achieve short term performance goals interested integrating methods general ones 
stated outset goal trains handle language way defensible conversational domain far richer varied trains domain 
words approach principle extensible full understanding full available syntactic semantic world knowledge interpret respond inputs 
fact took working hypothesis techniques representations previously developed understanding narratives including children stories carry trains domain 
requirement respect syntax chosen syntactic framework domain independent potentially comprehensive form facilitates syntax semantics mapping 
important requirement design feature system helpful systematically minimizing syntactic ambiguity instance filtering syntactically inappropriate pp attachments attachment corning need need get boxcar oranges corning 
semantic interpretation decidedly challenging aspect building nl module terms representational interface issues raised 
achieve generality extensibility naturally looked formal linguistic semantics theoretical foundations 
montague semantics situation semantics discourse representation theory provided important building blocks 
linguistic semantic theory exception ones generally employs formalism limited expressiveness neglecting semantic phenomena encountered mundane dialogues 
theory tends provide fragmentary details mapping surface form formal meaning representation hard tell theory extended realistic grammar broad syntactic semantic coverage reasonably simple transduction surface form meaning representation approach problems context 
contrast computational goals require able derive semantic representations user reasonably say single comprehensive framework 
expressiveness ease transduction crucial 
issues related devise representation closely matches expressiveness ordinary language terms available vocabulary concepts permissible ways combining complex types relatively simple derive representations utterances 
considerations restated terms general requirements semantic representation language meet designing target el representation described section expressive adequacy language powerful allow represent common constructs semantic nuances naturally occurring sentences 
things includes tense operators past aspect perfect progressive various kinds adverbials including manner adverbials engine purpose clauses pick boxcar predicate modifiers finished looks difficult kinds actions events kind action get boxcar referred need get boxcar see turn kinds natural objects need oranges modals need better intensional verbs including creation verbs oj 
requirement initial stages interpretation allow underspecified representations logical forms remain scopes certain operators quantifiers tense operators referents referring expressions pronouns 
derivational adequacy language support simple systematic derivation meaning representations english surface structures 
semantic adequacy meaning language precisely defined denotational semantics 
requirement met linguistic semantic formalisms starting point easily lost sight extensions deal semantic complexities real discourse 
semantic adequacy crucial ensuring representational coherence sense symbols meaning representations capable consistently carrying meaning intend carry supporting desired inferences 
conversation structure order carry coherent conversation addition representation semantics sentences system able represent context conversation context dynamically updated conversation 
context consists just content expressed utterances structured information interaction 
relevant structure maintained understand participate conversation includes discourse segments attentional focusing structure grosz sidner useful variety purposes linguistic interpretation generation including ability determine possible referents referring expression intentional relations utterances 
discourse segmentation structure particularly notions focus accessibility guide certain utterances interpreted 
utterances seen acceptance confirmation unanswered question exists discourse segment open 
certain utterances way anyway go back talk signal shift segments phenomena clarifications signal changes structure information content 
intentional structure related structure described grosz sidner speakers engaging particular subdialogues subdialogues relate purposes conversation 
task oriented conversations nature task strong bearing intentional structure dialogue task 
grounding participants track state mutual understanding communicated 
involves performance recognition acknowledgments repairs necessary clark 
turn notion turn important deciding wait agent speak formulate utterance 
shape type utterance kind interrupting form 
turn influenced initiative control walker whittaker related intentional structure 
trains domain initiative shared different participants holding different points conversation 
initial phase user initiative task conveyed 
main part conversation construction plan initiative lie party generally remains user 
final phase verifying successful completion problem initiative belongs system 
rhetorical local structuring utterances standard types 
examples include pairs questions answers suggestions acceptances summaries lists 
kind structure variously called rhetorical mann thompson exchange sinclair adjacency pair schegloff sacks dialogue games mann 
type structure somewhat similar intentional level identical rhetorical patterns may variety purposes expectations obligations respond appropriately particular dialogue game remains regardless underlying intentions 
precise nature type structure relations types fairly controversial seen contributions rambow 
situations non linguistic information relevant conversation structured coherent bundles situations 
situations relevant trains task include discourse situation speaker hearer utterances actions aspects mental states described section 
map situation user knows initial conditions world trains map shown 
plan situations updates map situation representing case particular plans performed 
mental state order participate fully conversation system needs represent certain aspects partner mental state 
particular system represent aspects mental state 
beliefs addition representing beliefs state world system represent beliefs user beliefs order interpret user utterances 
represent mutual beliefs track grounding process 
goals system needs keep track goals hopes achieve achieve participating conversation 
lead adoption specific intentions performance actions 
plans system represent different views plans including plans developed planning proposals user mutually agreed shared plans 
distinctions important system respond appropriately order achieve final goal executable shared plan proposing addition plan accepting rejecting prior suggestion 
intentions intentions system help guide behavior system generally constraining planning fit context prior intention 
bratman describes detail ways intentions help guide constrain agents deliberation 
obligations obligations actions agent perform external norms 
different kind goals intentions behaved agent choose meet obligations fact generally social cost meeting obligations may encourage purely strategic agent endeavor meet 
conversational setting accepted offer promise incur obligation 
request command party bring obligation perform address requested action 
discourse obligations discussed traum allen 
attitudes represented implicitly control structure dialogue system declarative representation help diagnosing repairing problems come interaction allowing flexible initiative strategy placing importance obligations goals different times conversation 
goals obligations necessary represent meaning utterances 
domain knowledge trains domain requires relatively modest quantity knowledge terms basic object 
interactions properties events get quite complex 
properties actions events dealt simple domain 
actions events take time 
time rich structure including intermediate states decomposable sub actions activity stretch time appropriately described single event 

relationship actions events effects complex 
example effects true event remain true time event 
effects hold event progress 

external changes world occur matter actions agent plans interact planned actions 
possible external events important factor reasoning effects action 
certain goals accomplished depending external events 

actions events interact complex ways overlap occur simultaneously 
cases interfere certain effects arise actions performed isolation 
cases effects additive 
cases effect performing actions completely different effects isolation 

knowledge world necessarily incomplete unpredictable detail reasoning actions events done basis certain assumptions 
plan foolproof important formalism necessary assumptions explicit considered evaluating plans 
similar considerations led representation interval temporal logic technical details allen ferguson planning knowledge addition traditional requirements problem solving system ability represent problem solution operators lead embedding plan reasoner mixed initiative dialogue system adds additional requirements representational challenges 
requirement input plan reasoner language 
needs expressed highly expressive language multiple levels representation 
include domain level trains commodities cities time plan level plans actions events enablement generation problem solving level strategies focus attention choice points 
candidates discussion system trains 
cases objects involved may partially indefinitely described part job plan reasoner may determine fully objects involved move boxcar 
requirement planning plan recognition plan reasoning interleaved dialogue 
plan recognition typically done understand meaning said planning done refine proposal possibly generate new suggestions plan evaluation sense continuous process 
different forms plan reasoning performed different ways 
plan recognition typically satisficing process primarily interested ensuring coherence dialogue 
long user statements shouldn expend resources trying optimize results 
planning hand optimizing process performed system opportunity think improve complete plan 
case intelligent planning assistant course results expected accurate helpful 
interleaved nature leads third requirement possible perform plan reasoning arbitrary knowledge contexts 
note dialogue manager maintains belief contexts representing different views conversation 
plan reasoner called reason system related context system thinking user related context system simulating thought processes user 
contents contexts depend said plan reasoner able start partial plan context reason 
fourth plan reasoner return useful information results plan reasoning operations need expressed declaratively generate utterances update beliefs 
communicated user parts information returned plan reasoner may part final plan immediately 
plan reasoning operation fails reason essential useful information describing failure returned order system inform user address problem problem solving level 
reasoning performed plan reasoner defeasible 
means making assumptions explicit able assert retract importantly realizing system shouldn perform complete reasoning 
assumption system interactive indicate better ask user question proceed 
plan execution knowledge acting world slightly different set requirements reasoning talking action 
addition reasoning level change plan executor reason level perceptions manipulations perform achieve desired action tell performed 
eyes ears arms trains system agents simulated world 
performing actions plan moving boxcar executor reason terms messages sent engineer 
determine action succeeded executor solicit reports current state world engineer agents 
addition executor reason information individual agents agents know immediate surroundings 
requests action information formulated terms agents understand condition action pairs conditions consisting agent local state 
reports executor receives back likewise describe aspects reporting agent local state 
executor relate low level observations back anticipated events important plan 
trains kr formalisms starting project obvious existing kr formalism inference system appropriate represent reason efficiently different kinds necessary information described previous section 
established traditions tools designed reason sub issues decided starting points adding adapting necessary 
addition adopting different formalisms easier develop general purpose components isolation 
felt best postpone unification attempts gained better understanding problems face 
episodic logic representation parser represent meaning utterances called episodic logic el 
el intensional situational logic developed semantic knowledge representation general nlu hwang schubert hwang schubert 
distinctive feature el natural language expressiveness aimed meeting stated requirements expressive derivational semantic adequacy 
allows generalized quantifiers lambda abstraction predicate sentence modifiers predicate sentence nominalization intensional predicates corresponding wanting needing believing tense aspect surface speech act operators explicit situational variables operators specify true situation 
result correspondence surface form logical form lf kept extremely simple 
general single morpheme content words interpreted atomic predicates operators predicates 
phrase structure rules trains grammar paired simple compositional semantic rule parser computes initial underspecified el representation utterance builds parse tree utterance 
initial representation underspecified may contain operators quantifiers tense operators indexical expressions tense operators pronouns ambiguous predicates 
example grammar rule rule name syntactic rule bar bar loc bar acc object semantic rule syntactic rule constituent bar left hand side remaining constituents right hand side gpsg rule 
rule admits formation locative prepositional phrase locative preposition accusative noun phrase corning corning 
rule name concisely echoes rule 
loc feature transmitted preposition prepositional phrase head feature principle gpsg gazdar 
gpsg grammar uses hierarchies atomic features 
instance loc belongs set features floc time subj subdivide prepositional predicate feature loc turn subdivided 
lower level features unify hierarchy ancestors 
feature systems conjunction feature percolation principles allow quite compact representations auxiliary verb structure noun adverbial modification subcategorization semantic rule example indicates interpretation prepositional phrase obtained applying interpretation constituent dyadic predicate interpretation second constituent individual denoted np np referential 
keyword denotes predicate application 
additional examples seen section annotations parser output 
formulas el may written lisp prefix form complete sentential formulas usually written infix form subject preceding predicate english 
infix form distinguished square brackets train tr avon write pres tr loc avon 
version infix notation 
seen section 
pres operator heading formula indexical replaced process predications involving explicit episodic variables 
el extensive predicate sentence modifiers operators map predicates predicates sentence meanings sentence meanings 
example predicate oj true quantities orange juice 
predicate operator takes predicate produces predicate oj true agent orange juice 
different syntactic constructs simple interpretations viewed predicate modifiers including attributive adjectives certain classes adverbs certain kinds intensional verbs 
simple examples sentence modifiers modal ones 
important predicate sentence modifiers corresponding pp adverbials 
instance phrase go represented adv loc go 
adv operator transforms monadic predicate viz loc predicate modifier operating go 
similarly sentence train tr left pm represented form adv time pm tr leave adv operator converts monadic predicate case time pm sentence modifier 
tense operators pres past adverbial predicate sentence operators replaced process predications explicitly involving episodic variables 
el operators predicate sentence nominalization reification 
main predicate nominalization operator constructs kind type object predicate 
noun phrase orange juice example refers orange juice general specific quantity orange juice sentence orange juice 
oj predicate true quantities orange juice oj kind thing substance orange juice 
kind terms extensively events sentence want load oranges desired performance action kind load oranges specific existing act loading oranges 
sentence nominalization operators crucial el representation attitudes 
instance express user told system engine tr avon form nominalized sentence proposition pres tr loc avon object tell predication subject user 
forms quantifiers lambda abstracts el illustrated interpretation phrase engine avon utterance sample dialogue engine loc avon expression principle directly interpreted generalized quantifier el viewed quantifier raised sentence scope 
alternative ways raising quantifiers certain operators account scope ambiguities 
case consider little utterance embedding quantifier move engine avon possible scoping corresponding el formula engine loc avon pres adv loc move 
note general form scoped quantification qff oe quantifier ff variable oe open sentence restricting domain variable sentence comprising scope quantifier 
el representation sentences describing events processes situations contains explicit episodic variables 
situations situation semantics barwise perry episodes partial states affairs world encompassing properties participants period time location 
episodes subsume events davidson representations event particular kind episode 
content episodes described special operators 
operator indicates arbitrary formula characterizes episode 
simple example formula tr move avon true episode characterized engine tr moving avon 
event logic written move tr avon event argument predicate 
el represent complex events possible event arguments predicates 
example negative situation train tr failing arrive time characterized follows ignoring details arriving time tr arrive time 
representation approximate characterization saying event tr arriving time approximation inadequate capturing causal relations 
example may true event instance tr arriving time caused tr instance event tr curved section track quickly 
analysis negative situations causal relation seen entail incorrectly failure tr arrive time caused 
quantified example episode consisting train going city characterized follows train city adv loc move 
easily encoded single event event logic 
second episodic operator provided el asserts proposition true episode 
weakening operator requiring proposition characterize episode aspect 
sense analogous relation situation infon situation semantics 
operator important el axioms inference causal relations relations episodes hwang schubert 
semantically adequate knowledge representation syntactic machinery naturally requires rich ontology accommodate intensional predicate sentence modifiers kinds properties propositional entities formed nominalizations operators episodes times locations referred episode descriptions 
el allows numbers collections sequences 
entities domain regarded possible individuals includes possible episodes situations possible facts correspond consistent propositions modeled interpreting atomic symbols situation dependent way 
example place predicate leave interpreted partial function 

domain possible individuals set possible episodes situations subset seen applying successive individual arguments obtain sentence intension partial function possible situations truth values 
fact functions partial allows fine grained semantic distinctions propositions logically equivalent classical sense 
making situational argument predicate intensions argument kripke montague style semantics able simplify lexical phrasal semantic rules avoiding montague ubiquitous intension extension operators 
interpretation operator framework corresponds closely truth situation oe way saying semantic value oe situation denoted truth 
conditions truth oe stringent requiring oe episode just having oe episode part aspect 
formal distinction relies persistence sentential truth set semilattices situations having maximal possible situation possible world top 
el originally designed story understanding comprehensiveness nl syntax semantics entirely plausible candidate dialogue interpretation 
fact encountered fundamental difficulties 
real challenges lay expanding small fragments built deal narrative sentences cover selected trains dialogues principled way 
needed develop system features organized feature hierarchies ways assigning default lexical features fairly broad coverage syntactic rules including types questions imperatives coordination 
insertion subcategorization patterns carefully thought solutions numerous specific semantic problems 
example question arose treat modals shall better see utterance dialogue sentence predicate modifiers level semantics 
chose able account opaque readings sentences pick oranges somebody better shipment arrives 
simplest utterances right okay proved surprisingly subtle controversial 
problem utterances implicit arguments salient propositions proposal denied approved 
question implicit arguments explicit immediate lf send unanalyzed atoms discourse modules 
case right exactly speed curve tr tr cause arrive time tr entails arrive time tr tr cause 
entailment obtained existential generalization says eventuality tr arrive time caused 
accept eventuality tr arrive time characterization negative eventuality eventuality tr failing arrive time led unwarranted eventuality tr failing arrive time caused okay opted explicit arguments occur subjects right viewed members productive group aps predicate phrases consider true wrong fine problem done handled way 
course cases identifying implicit referents left discourse processing 
similarly subtle cue word establishing relevance connection prior case simply translate initial coordinator sentence modifier significance matter discourse module consider 
elaboration original narrative understanding framework particularly worth mentioning addition acts surface speech acts interpretations utterances 
lf surface declarative contains top level construct ignoring explicitly added utterance episode speaker tell hearer questions ask act imperatives instruct act similar act information important subsequent reasoning discourse structure contrast case narratives 
technically acts introduced lf terminal symbols utterances punctuation turn ultimately prosodic markers 
additional problematic issues concerning logical form including semantics problem plan purpose clauses proper nouns numbers measures problems trivial important point el framework provided sufficient flexibility allow consider various plausible options implement workable solutions 
remarks plans see section main shortcoming el representation conversations focuses primarily utterance content context 
hwang schubert context structures called tense trees algorithm tense proposed 
algorithm presupposes tense operators quantifiers correctly scoped referent determination done independently scoping tense 
trains system needed integrated account processes 
crt conversation representation theory crt poesio account contextual interpretation ambiguity resolution conversations builds theory lexical semantics developed episodic logic 
formalism crt extends language el underspecified expressions expressions indicate aspects sentence meaning disambiguated proper semantics poesio alshawi crouch reyle poesio 
theory includes account disambiguation defeasible reasoning underspecified interpretations discourse situation 
main assumptions motivating crt interpretation sentence obtained means inferences crucially involve underspecified representations 
underspecified representations produced parser see previous section el implicit interpretation terms disambiguation seen class objects language crt disambiguation formulated process inference representations 
second important assumption borrowed discourse ai tradition grosz sidner process disambiguation crucially involves information pragmatic nature hierarchical relations speech acts 
model context adopted crt inspired ways dynamic theories context discourse representation theory drt kamp kamp reyle dynamic predicate logic model effect utterances discourse situation effect sentences propositional content text 
example disambiguation consider sentence find engine 
disambiguation initiated context updated underspecified interpretation utterance 
interpreting sentence particular context involves recognizing speech act performed speaker intended referent engine scope modal operator negation operator 
effect updating existing context utterance sentence represented crt expression 
ce ce tell np vp vp vp np find engine ce ce expression paraphrased speech act ce occurred telling situation characterized underspecified expression nested box 
follows term conversational event refer speech acts 
things explained expression 
context modeled discourse representation structure drs pair consisting set discourse markers ce set conditions wffs 
nested top drs provides representation common ground called root drs 
discourse representation theory root drs provides representation described situation situation discourse crt root drs representation discourse situation situation participants conversation find 
description described situation embedded description discourse situation 
secondly representation underspecified ways 
el interpretation complete utterances initially recorded model context occurrence act tell actual intentions speaker recovered see sections 
expressions crt language encode alternative scope readings syntactic trees leaves el expressions 
representation derives lf el explicit representation simply operators left syntactic position 
expressions aspect utterance interpretation resolved context 
third aspect interpretation resolved context value anaphoric expressions called parameters written variables dot aspects utterance meaning related anchored previously introduced element context discourse marker 
parameters described situation referent definite description conversational thread bit needs explanation 
speech act assumed part conversational thread particular type situation 
conversational events thread assumed discourse topic situation 
conversational threads crt capture grosz sidner notion discourse segment discourse topics formalization notion focus space 
grosz sidner theory focus space extending focus space stack framework situation extending situation way introduce additional stack mechanism processes focus space construction focus space shift modeled reasoning processes discussed poesio 
rest syntax language crt borrowed el lambda expressions modifiers kind forming operators tools discussed previous section 
remaining syntactic difference el expressions form phi phi assert phi holds difference just matter syntactic sugar discussed 
need give direct interpretation underspecified expressions semantics crt generalization semantics el 
el expressions denote functions situations objects domain example denotation sentence function situations truth values expressions crt language denote sets functions example denotation sentence set functions situations truth values 
resulting logic weaker el 
reason disambiguation done defeasible reasoning 
type sentential expressions interpreted sets functions situations truth values situation types 
semantics semantically annotated syntactic trees capture underspecification instance phi phi theorem 
defined bottom cv function cooper value assigns value set sequences expressions hfi element sequence provides phrasal lf appropriate type variable generalized quantifier np predicate vp wff remaining elements quantifiers operators storage 
example cv find engine set sequences fhx engine find hx find hi engine iig 
denotation tree 
set functions extracted cv 
elements required singleton sequence elements storage 
detail importance talking anaphoric accessibility discourse markers expressions crt assigned value respect situation variable assignment function cases situations variable assignments 
conditions assert situation type specified drs addition shift parameters evaluation value discourse markers occurring provided variable assignment associated value semantic value respect original variable assignment original cases 
way discourse markers introduced statement situation accessible interpreting anaphoric expression part second statement situation 
disambiguation rules formulated inference rules result underspecified interpretation 
reasoning framework inference formulated resembles prioritized default logic brewka rules disambiguation reiter default inference rules different priorities result disambiguation zero extensions default theory consisting context augmented initial interpretation utterance set default inference rules 
space prevents discussion rules system simple example disambiguation rule look formulate hypothetical rule assigning wide scope operators subject position 
rule normal default rule reiter 
notice result disambiguation partially disambiguated crt expression universal quantifier scope operator occurs vp 
grammatical function principle np vp 
np vp np vp disambiguation process subject condition discourse interpretation roughly speaking states extension contain underspecified expressions 
result interpretation expression semantics episodic logic possible translate expressions formalisms trains 
example expression final result disambiguation sentence find engine ce engine avon ce tell find ce ce ct moment possibility translation merely conjecture experience building interface ebtl formal result proved 
notice described situation conversational event identified previously introduced situation scope operators resolved conversational thread ce belongs identified 
results speech act interpretation expressed new speech act ce generated ce sense goldman goldman occurrence ce nature involves occurrence speech act ce 
scope module trains sad partial implementation conversation representation theory 
system consists implementation prioritized default reasoner declarative rules encode theories disambiguation scope definite description interpretation pronoun interpretation modals tense 
input system underspecified representation produced parser output set hypotheses possible interpretations 
implementation tested dialogue entirely different shorter dialogue trains system 
ebtl ebtl event temporal logic speech act interpreter dialogue manager plan reasoner communication language modules 
typed logic interval temporal logic allen designed facilitate reasoning actions events temporally complex worlds 
ebtl restricted language el crt events simple states represented directly general episodes situations 
starting trains project rhet knowledge representation system allen miller starting point representing plan domain knowledge having developed parallel previous discourse allen temporal reasoning plan recognition efforts miller rochester 
rhet provides theorem proving forward backward chaining inference type hierarchies typed unification equality inequality reasoning temporal reasoning frame event representations explicit hierarchical context mechanism representing belief contexts hypothetical reasoning modalities 
quickly apparent additional features needed trains system reasoning functions 
ebtl provides additional constructs proved essential representing meanings natural language input relations facts plans straight forward lisp interface 
include explicit quantifiers discourse markers lambda expressions quoted propositions 
underlying inference performed rhet augmented special reasoners lisp new constructs 
terms ebtl allowed rhet 
constants written atoms square brackets 
eng term 
distinct names necessarily identify distinct objects language supports equality reasoning 
terms defined type usually defined specifically possible 
eng instance declared type engine 
variables indicated form varname typename 
instance action variable ranges objects type action 
propositions ebtl represented lists 
instance eq 
equality predicate proposition eq 
engine eng assert eng engine causing move event 
ebtl reified event representation event instances denoted explicit terms language 
shows part event hierarchy trains domain 
hierarchy predominantly deals events caused actions capture different actions available trains domain planner 
events directly executed classified non action events 
events necessary provide clean interface natural language system people talk terms events caused actions executed 
example system plans execute arrive event 
plans move action aspect described arrive event 
specific features events identified role functions defined event classes 
example actions agent roles general time role events 
subactions move trains domain engine role conversation level representation ebtl includes features reasoning conversational interpretation 
include subclass action type speech acts operators representing combinations primitive speech acts event non action action arrive leave load unload couple move run factory bring load commodity unload commodity unload oranges load oranges move commodity move car move engine move oranges move oj oj event hierarchy trains domain events conjunction exclusive non exclusive disjunction sequencing relationships conversational events preceding discourse segment conversation act types described traum including predicates argumentation relations speech acts grounding acts 
core speech act types trains system shown meanings inform speaker provides new information order establish shared belief proposition asserted 
speaker asks question creating obligation hearer respond 
check speaker attempting verify certain proposition true 
suggest speaker proposes new item action proposition part plan 
request speaker aims get hearer perform action 
trains domain treated suggest addition obligation hearer respond 
accept speaker agrees prior proposal hearer 
reject speaker rejects prior proposal hearer 
supp inf speaker provides additional information known augments helps hearer interpret accompanying speech act 
supp sug speaker supplementary suggestion content presupposed part plan accompanying suggestion request 
types discourse structure mental state needed dialogue manager discourse segments turn grounding structures mentioned section represented ebtl rhet belief contexts lisp data structures containing ebtl formulae 
ebtl predicates proved functional calls inspect data structures 
conversation level representation traum 
ebtl contains terms explicitly denote plans predicates describe content plans 
examples goal proposition plan proposition goal indicated plan uses object proposition plan object plan 
event event plan event part plan 
predicates dialogue manager treat plans way objects particular properties 
different combinations properties may different mental modalities provide specific motivation system perform plan related utterances suggestions acceptances 
predicates represent contents plan related speech acts calls domain plan reasoner incorporate items partial plan 
plans graphs addition describing properties plans ebtl plan predicates trains domain plan reasoner maintains additional representation plans connected directed acyclic graphs event fact nodes labeled events propositions respectively 
plan graphs formal semantics terms arguments represent argument certain course action certain conditions achieve certain goals 
plans objects ontology plan description predicates defined impose constraints plan argument 
structural predicates enables premise goal defined terms structure plan graph 
evaluation predicates 
include absolute predicates plausible impossible relative predicates allow plans compared example resource usage time constraints 
details available ferguson 
order reasoning necessary executing monitoring plans statistical reasoning effects actions developed language called 
ebtl implemented extension rhet 
allows representation statistics number observations event instances particular event type provides techniques computing confidence intervals statistics 
allows specify utility apply decision theory utilities confidence intervals 
represents individual event instances move boxcar reifies sets event instances specified lambda abstractions event types boxcar moved 
term boxcar moved represents set event instances boxcar moved move boxcar represents particular instance particular boxcar moved 
includes statistical predicates defined event types 
predicates occurrences probability 
occurrence takes temporal interval integer set event types indicates integer number event instances intersection event types occured temporal interval 
probability takes confidence level event types probability measure temporal interval indicates probability measure conditional probability temporal interval occurrence event occurrence second event 
occurrence requested boxcar move boxcar moved probability requested boxcar move boxcar moved probability measure point number interval points numbers 
addition probabilities asserted inferred occurrence predicate 
probabilities asserted entered system runs probabilities inferred calculated system observations 
point probability indicates programmer asserted number probability system insufficient evidence doubt assertion 
interval probability indicates programmer asserted interval probability system sufficient evidence conclude asserted probability incorrect 
infers probability particular event say boxcar moved trial event type say move considering event type represents intersection instances event type requested boxcar move boxcar moved success event type trial event type move 
calculates confidence binomial random variable bickel event instance intersection event type success event instance trial event type trial 
asserted probability fall entirely confidence interval rejects asserted probability concludes probability confidence interval computed number occurrence event types seen 
probability asserted observations uses probability interval 
treatment probability kyburg evidential probability kyburg 
represents utility event types decisions expected utility 
predicate utility takes event type integer temporal interval shown indicates integer utility event type temporal interval 
utility expresses desirability event probability expresses likelihood event 
types information necessary choice events 
difference reflected meaning temporal interval associated utility probability 
temporal interval associated probability represents time evidence probability gathered temporal interval associated utility represents time event desirable 
example shipping oranges may desirable wait train scheduled arrive undesirable wait train left 
desirability changed evidence effectiveness act shipping oranges train 
past proved impossible load oranges train station long may desirable wait train scheduled arrive 
utility boxcar moved calculates expected utility multiplying probability utility resulting probability interval interval expected utility 
interval expected utility calculated may clear choice alternatives 
choice things may reduce confidence level calculation resulting narrower interval may avoid making choice hoping information choice clearer may gather information needed probability 
reduces confidence zero calculates point probability maximum likelihood estimate bickel 
avoids choice subsequent events may rule actions making choice clearer 
evidence narrows interval collecting evidence may possible choice 
ebtl allow reasoning events event types different purposes languages 
planning events terms represent occurrences may added subtracted plan necessary 
plan executed event represents modified described 
unspecified properties planned event important plan executed 
example axle boxcar broken ignored planning broken axles rare state axle crucial event occurs 
state affairs discovered event move boxcar event occurred effects move boxcar hold plans goals hold 
deal problems executor views ebtl event move boxcar event type includes event instances properties specified move boxcar 
executor reasons event instance occur random member event type corresponding move boxcar 
reifying event types allows executor statistical probability choose random member action event type occur event type corresponding move boxcar 
addition allows executor reason event type corresponding move boxcar occurred instance event type occurred support plan 
occurred satisfied conditions specified move boxcar invalid assume boxcar moved fact boxcar move 
executor may may know boxcar move position keep track plan determine boxcar fail move 
dialogue processing example true sense operation representation systems previous section achieved examining substantial section dialogue room complete look formalisms substantial amount dialogue 
illustrate implemented kr systems means single example exchange conversation sentences repeated convenience 
details rest dialogue represented poesio crt traum ebtl ferguson plan graphs 
engine avon 
right 
right 
parser produces underspecified representation shown 
thought parse tree leaves replaced semantics lexical items 
non leaf nodes annotated rule name corresponding semantic rule 
initial numerals indicate second 
explained section rule names sn reflect left hand side right hand side categories occurring syntactic part rules 
semantic rules specify formation el expressions lisp expressions form key 
item key 
indicates type semantic object represented expression 
particular key indicates functional application argument rest key indicates predicate application argument rest key indicates formula infix form subject argument followed predicate followed additional arguments key indicates lambda expression key indicates operator tense operator key indicates quantifier 
scoped quantifiers directly keys indicates existential quantification 
utt tell decl utt imp coord sn exists pres engine engine loc avon avon period nil top level node utt utterance node lf el just constituent punctuated declarative sentence tell 
semantic rule tell applies decl operator el formula sentence 
previously explained decl operator signals particular illocutionary act telling 
sentence formed rule constituent conjunctive coordinator second constituent sentence 
el semantic rule specifies formation infix formula relates implicitly referenced utterance utt imp content current sentence meaning coordinator relation 
sentence labeled sn consisting existential subject verb phrase meaning bar 
verb phrase consists verb noun phrase subject verb complement position locative propositional phrase 
el formula sentence just verb phrase ignored 
verb phrase case interpreted sentence predicate embedded subject engine el semantic rule specifies existential quantification embedded subject applies predicate formed interpretation copula essence supplies tense operator locative avon 
interpretation crt directly apply el semantic rules converts parser output crt expression represents surface conversational event act resulting production utterance 
expression added drs representing current discourse situation 
syntax crt superset el conversion straightforward see section discussion 
scoping sad module uses information contained resulting drs inferences resolve contextually dependent expressions 
results hypotheses nature conversational events implicit surface conversational event account discourse context 
part hypothesis obtained processing shown 
sit descr par coa conv thread drs ce ce ev descr ce drs nil hum init ce ce par coa conv thread ce ce par coa conv thread ce ce ev descr ce drs nil hum tell sys sit descr par sit drs ev descr drs nil loc avon ce engine par res sit sit plan par res sit sit maps par coa conv thread coa ce agent ce theme avon expression states roughly par coa conv thread situation particularly conversational thread see section augmented conversational events ce ce 
ce corresponds utterance ce utterance engine avon 
lisp syntax implementation crt shown example 
drs discourse markers conditions phi phi represented syntax expression form drs phi phi 
expression phi asserting phi holds situation represented lisp list sit descr phi expression ev descr phi states phi complete characterization corresponds expression phi el 
example expression ev descr ce drs nil hum init asserts occurrence event ce completely characterized situation type drs nil hum init event agent hum performing action type init 
facts listed par coa conv thread temporal ones utterances occurred respective time points situation structure utterances part par coa conv thread 
importantly event description utterance events 
event description ce utterance merely notes agent hum produced utterance attempting assign detailed logical form 
event description ce says event agent hum telling agent sys situation contextually determined par sit satisfies certain description 
description asserts eventuality entity located avon asserts temporal situation structure facts engine 
aspects interpretation initially underspecified resolved 
traces left initial underspecified interpretation parameters terms represented anaphoric holes interpretation seen section 
lisp expressions form par type 
type 
type parameter represent parameters syntax section 
example expression par coa conv thread indicates parameter type conversational thread expression par sit indicates parameter type situation 
parameters anchored specific value example second line description par coa conv thread equates discourse segment previously established conversational thread coa indeterminacy resolved 
sad hypothesis underspecified representation fed speech act interpreter produces set core speech act alternatives shown list argumentation acts shown 
seq surf interp ce st accept surf interp ce ex st inform st check st st suggest pa prev ce ce pa na ce ce na pa na general interpretations utterance manner provide interpretation utterance specified alternative list core speech act interpretations 
list relates conversational event interpretations predicate surf interp 
sequenced conversational events utterance engine avon seq operator allow sequential contextual speech act pruning update 
manner alternatives combine specified operators ex 
interpretation ce suggestion st suggest inform st inform check st check question st 
ce interpreted possibly acceptance st accept 
core speech act conjectured note argumentation act produced ce says relation previous act act ce 
speech act definitions st accept st inform st suggest expressed ebtl shown respectively 
definition st accept requires accept speech act agent hum speaker sys hearer content content accepted speech act produced sys addressed hum remains far 
st inform definition specifies content act engine avon 
speaker hearer time roles identical omitted 
definition similarly abbreviated 
definitions st check st identical st inform 
role st accept speaker hum role st accept hearer sys role st accept time time ce content st accept lambda sa role sa speaker sys role sa hearer hum occurs sa sa role st inform time time ce content st inform lf exists engine nil engine avon focus st inform content st suggest plan dm current plan plan lf exists var engine nil uses var engine var engine avon plan speech act pruning st accept ruled suggestion system 
argumentation act interpretation remains 
st inform move car mv comm corning bath corning mv car corning oranges corning mv comm corning bath oranges plan graph utterance ruled system find engine avon shared belief context engine 
leads decision st check informational act performed 
evaluating st suggest leads plan reasoner call 
dialogue manager determined plan current plan context focused node plan graph shown preceding planner call indicated argumentation act background information engine useful avon 
planner returns ebtl formulae indicates engine fills engine role focused action 
incorporate object plan type role filler context event old move car 
focus bg avon plan fact eq engine move car plan plan supports eq engine move car move car plan plan premise eq engine move car plan eq engine move car forms mean respectively equality fact opposed event plan supports move car event identifying necessary role premise need achieved planning equality 
successful incorporation lets dialogue manager decide st suggest valid interpretation 
addition dialogue manager determines utterance initiated new discourse unit need acknowledged traum user kept turn 
final set conversation acts determined performed performing utterance shown core speech act interpretations args argumentation act gas refers grounding acts refers turn acts 
st check st suggest args ce ce gas init hum du st check st suggest nil keep turn hum user kept turn system waits utterance 
parser output sentence shown 
analysis views utterance right elliptic sentence consisting just predicate followed question mark acquiring interrogative force 
top level ques operator decl case assertions supplies type act ask act 
tense operator taken implicit type abbreviated sentence seen semantic rule constituent 
rule introduces implicit pronoun imp meaning question regarded equivalent right 
utt 
ques 
user signal desire keep turn ways 
typing explicit signal kt 
input stream typing utterance system finished processing previous 
pres imp right right correct question mark nil converted crt form shown 
sit descr par coa conv thread drs ce ce ce par coa conv thread ev descr ce drs nil hum ask sys sit descr par sit drs ev descr drs nil par imp imp right correct ce par res sit sit plan par sit coa par coa conv thread coa core speech act possibility utterance check act content shown 
act checks content previous act correct 
speech act evaluation dialogue manager decides refers st check utterance 
grounding level utterance seen repair replacing previous speech act 
addition utterance seen releasing turn allowing system chance respond 
content st check ce inf sa prev act ce ce inf sa right correct ce inf sa dialogue manager checks representation conversational state algorithms described traum allen traum system decides acknowledge utterances user act obligation answer check query 
result checking see agrees mentioned fact engine avon generating affirmative reply 
dialogue manager sends templates shown generator produces response labeled 
ack st check st suggest reason grounding inform focus right right correct st check reason obligation check right correct st check system response interpreted system update context check sure intended interpretation interpretation 
parser produces form utterance 
course similar form produced previous elliptic question 
semantic difference induced difference punctuation declarative force utterance encoded decl operator 
utt decl pres imp right right correct period nil sad module produces crt form 
sit descr par coa conv thread drs ce ce ce par coa conv thread previous utterance received check interpretation significant effect example inform possibility chosen utterance change interpretation check 
ev descr ce drs nil sys tell hum sit descr par sit drs ev descr drs nil par imp imp right correct ce par res sit sit plan par sit coa par coa conv thread coa speech act interpreter discovers speech act possibilities utterance shown contents shown 
interpretations validated dialogue manager result transfers plan results proposed shared plan belief context 
utterance seen acknowledging previous utterances user releasing turn 
surf interp ce st inform st accept content st accept lambda sa role sa speaker hum role sa hearer sys occurs sa sa content st inform inf sa dm prev act ce inf sa right correct ce inf sa relations kr languages choosing single representation formalism involved risk number mutually incompatible representations 
fact happen 
strong connections formalisms number ontological assumptions shared translations straightforward matter 
number factors keeping formalisms relatively close 
agreement adopt logic formalisms 
secondly progressed clear tight interaction modules needed 
section describe connection points ontological differences different research traditions non trivial combine reasoning single representation language 
translating languages conversion el annotated parse tree produced parser initial underspecified crt expression straightforward 
example parser produces np engine syntactically annotated subtree shown element semantic object produced 
np det exists engine engine resulting crt expression shown identical lexical items eliminated nodes det exists semantic operation eliminated specification phrasal categories part semantics crt expression 
np det engine det semantic translation engine predicate associated noun engine lexicon discourse marker see section 
aspect translation involves actual modification anaphoric items involved el equivalent parameters 
translation el crt ebtl takes form approximation complex episode situation constructs el crt approximated weaker ebtl terms events actions 
ebtl contain general situations episodes class objects episodes correspond directly events time intervals translated 
time information lost domain related episodes arise dialogues correspond simple event occurrences 
general situations characterized complex structure events facts approximated belief contexts rhet 
strictly part ebtl reasoning hierarchically related belief contexts contain sets ebtl formulae important part reasoning performed dialogue manager 
example discourse segments represented crt plural situations called conversational threads represented part belief contexts containing ebtl facts events 
addition domain predicates ebtl trains domain general event descriptions specialized precise meaning trains domain 
el action pick utterance general applicability range situations disambiguated couple action ebtl 
translating plan graph represented ebtl information executor uses represented approximation 
translation removes dependencies events expressed plan 
finds actions plan action plan considers individually 
uses fact enables action condition trigger action 
addition executor treats ebtl events plan graphs event types 
event types constructed ebtl description ebtl event description lambda abstraction reified event type 
doing executor statistical knowledge choose actions messages agents simulated world best achieve planned event 
loss information action process important allows executor assume independence events plan simplifying computation probability 
relations events certainly important reasoning success plan communicating aspects user essential determining events occur 
hand information lost decreases accuracy conditional probabilities computed 
problem ameliorated somewhat executor report failures back rest system 
problem particular event plan occurs executor communicate back domain plan reasoner full plan argument assist replanning 
interface issues number knowledge representation issues came course building system functioning module representation language 
briefly discuss 
discourse markers system handling extended dialogue opposed isolated sentences maintain notion discourse context 
sad module maintains knowledge temporal relations events structure referentially accessible entities dialogue manager plan reasoner maintain information mental states plans 
sharing information distinct representations context essential 
example sad module decides mentioned entity described plan reasoner decided played particular role plan crucial modules realize connection 
problem addressed introducing common discourse markers serving unique names entire system entities introduced dialogue typically indefinite nps implicitly dialogue segments case various situations plans 
discourse markers integral part crt ebtl play crucial role interface knowledge representation languages modules 
importance best seen looking interface parser sad speech act interpreter 
discourse markers introduced logical form produced parser corresponding existentially quantified quantified terms 
modified parser output input sad module speech act interpreter 
speech act interpreter builds skeleton speech act terms discourse markers parse tree 
content turns crt output sad module 
merging process converts crt definitions discourse markers ebtl puts markers ebtl definitions appropriate spots speech act output 
addition discourse markers allow objects sentences crt ebtl knowledge bases 
definite description resolving definite descriptions problem natural language interpretation 
clearly necessary represent definite description directly underspecified logical form different possibilities referent considered chosen various semantic contextual inferential processes done sad module trains 
obvious kind definite quantifier construct useful modules reason discourse pragmatics plan execution 
explicit definite descriptions coming utterances boxcar principle eliminated referent resolved sad module definite description operator ebtl representing aspects contextual pragmatics hypotheses built speech act interpreter 
include ffl suggestions explicit goals taken implicitly suggestions respect plan contextually relevant 
speech act interpreter builds hypotheses reasoning context uses construct signal dialogue manager plan referred body suggestion current plan current discourse segment 
plan dm current plan plan ffl argumentation acts component speech acts part current utterance augmented definite information allow dialogue manager select appropriate acts 
instance done case argumentation act coming cue word represented previous section 
dialogue manager decide appropriate previous acts connected argumentation act 
process similar definite resolution performed plan executor trying monitor execution plan produced plan reasoner 
plan reasoner reifies events plans purpose reasoning enabling conditions effects plan executor trying cause event plan move boxcar views event event type qualifications 
monitoring plan executor receives agents world huge list reports things happened particular stretch time needs decide things mean intended move boxcar occurred 
events type occurred differ irrelevant details difficult determine move boxcar case multiple referents fitting definite description 
definite description operator involved process similar definite resolution presuppositions identifiability uniqueness context guide selection appropriate object 
related problem interpret existential see instance utterance oranges corning 
originally el interpretation treated lowered subject oranges having denotation ordinary bare plural subject kind plur orange 
fact resultant lf provided existential entailment indirectly sentences pencils top drawer pencils top drawer differ meaning persuaded treat lowered subjects predicates introduce explicit existential quantifiers domains predicates 
need sad module try identify oranges merely adds discourse marker object recognized 
pragmatic level utterance context problem solving dialogue interpreted things suggestion oranges plan 
seen point view dialogue manager definite resolved querying database see oranges case 
suggestion incorporated plan equated discourse marker recognized 
indirect action trains dialogues contain locutions move engine conversants refer agents domain actions mentioned trains domain user system effect changes world directly 
locutions part general phenomenon indirect agency agent system perform action having agent train engineer simulated world 
brings point translation system user mentioned explicitly dialogue actual agents world take place 
focus domain independent language translation clear translation occur initial logical form imagine conversations occurring slightly altered domain system user direct control domain actions moving trains represented gui showing map 
conversation level necessary represent original agents dialogue manager track obligations perform particular actions 
domain planner need represent system user hindered leaving agent roles assuming actions performed world 
plan executor resolve issue recognizing actions specified plans correspond requests simulated agents 
examine event specified plan reason agents domain involved 
example event involves moving railroad car executor knows agents really car move train engineers 
knows communicates engineers engines looks engine mentioned event 
fact problem general just case sloppy metaphoric locution 
kind indirect agency expressed directly utterance trains dialogue ll pick 
reason bring event incorporated el ebtl 
fact verb ship sentence properly translated bringing move commodity event 
raises related issue sentences temporal qualification ship action 
question arises refers ship action underlying move commodity action 
general locution ambiguous preference ship package pm ups closes examining trains corpus temporal qualifications ship refered embedded move commodity event 
conflicting ontologies need interaction information sharing modules trains system trains implementation sad module needs know results speech act interpretation affect discourse segmentation availability anaphoric means clear modules system able access unified database information 
order happen adopt single representation formalism necessary modules adopt ontological perspective means clear possible desirable 
mention couple issues natural view important phenomenon different modules concentrating different aspects planning dialogue task 
common ground resolution assumption felicitous requires mutual knowledge clark marshall uttered shared situation immediately part common ground available 
assumption carried crt speaker refer object mentioned immediately preceding utterance 
shown clark wilkes gibbs clark schaefer traum assumption immediate addition common ground idealization utterances party recognized acknowledged part assumed common ground 
important system engaging extended dialogues just iterative question answering exchanges awareness grounding process acknowledgments repairs recognized produced appropriate 
grounding tracked dialogue manager current state accessible ebtl predicates recognition production utterances 
different interpretations common ground importance concept various tasks definite resolution hand producing interpreting acknowledgments repairs parallel representations discourse context 
sad module represents discourse segments crt situations dialogue manager represents ebtl rhet belief context mechanism 
plans 
plans obviously important entities represented system designed engage planning dialogues 
useful perspective plan varies module module resulting different ontologies plans different representation languages 
distinction goes far familiar distinction plans recipes plans mental state bratman 
different views plans rationales summarized 
parser semantic interpreter natural language perspective semantic category plans category assigned locutions directly specify 
clearest examples locutions current plan fill beer plan engine go pick boxcar plan going bath picking won plan ll bring boxcar oranges take factory produce oj 
arguably infinitive sentence fill beer clause second engine go boxcar gerund third going bath clause fourth ll bring produce oj nominals syntactically occupy noun phrase positions semantically denote individuals sort 
argued nominalized infinitives nominalized clauses gerunds denote kinds types actions kinds types situations events clauses denote propositions see hwang 
difference viewing plans situation types viewing propositions minor episodic logic proposition determines situation type type situation proposition holds conversely situation type determines proposition proposition true precisely situations type 
natural assumption linguistically specified plans types situations equivalently propositions 
sad important aspect plans just visual situation map trains domain conversational threads part discourse situation serve resource situation referring expressions 
objects orange juice created qualifications boxcar corning boxcar performance planned actions plans 
order treat coreference uniformly expressions descriptions actual events expressions descriptions planned events happens expressions occurs description situation occurs description planned situation sad module treats plan situation just case containing potential objects events way map result occurrence events plan 
ways talking plan ability perform temporal doing plan noon morning doing twice row indicate plan situation type situation situation view practical considerations 
people plan tentatively commit go planned steps simply descriptions events 
dialogue manager dialogue management perspective salient aspect plans constructed content negotiated dialogue process 
important dialogue management purposes focus details correctness plans conversants different views plan composition plan change time conversation progresses addition details modification existing components spite differences sense conversants talking plan 
reasons dialogue manager views plans objects physical objects may different properties different times different agents 
plans treated individuals logic properties expressed plan predicates described section 
plan represented ebtl term collection predicates term different sets different belief contexts 
plan reasoner embedding plan reasoner mixed initiative planning setting participant may contribute parts recognize agree contributions implications plans viewed 
plan reasoner reason intended relations mentioned actions states plan relations hold evaluating plans producing augmentations proposed user processes plan able represent incorrect plans fact reasons plans incorrect 
plans need specified far necessary convince user system feasibility 
requirements natural view plan argument goal achieved certain actions assumptions 
system user incrementally refine plans just arguments refined response criticisms perceived deficiencies 
argument structure plan represented dag described section 
executor plan executor task sending messages agents world requires focus different aspect plans 
point view plan partial specification behavior 
language modules plan reasoning module executor treat plan single situation 
extract plan points ongoing behavior world modified meet plan specifications 
plan occur executor decompose plan set events occurrence affect 
reason events happen 
usually events occur executor sends requests agents act cause events directly 
note expected effects monitor occurrence events 
currently executor report failure plans back rest system reason record events monitoring part plan monitoring gathers information reason subsequent events type 
executor report failure plan record plan gave rise events events monitoring 
stands plan set temporally ordered desirable events translated sequence requests appropriate agent act way specified event occur simulated world completely incompatible unification single representation language performed carefully way module perform functions great facility current system 
divergent perspectives straightforward insure consistency separate languages single 
assessing kr system concerning syntax previously noted gpsg grammar parsing lf computation module 
course phrase structure grammars thought fall slightly short expressive power needed general syntactic characterization human languages 
appears serious impediment building broad coverage grammars english simplicity chart parsing phrase structure grammars large scale systems 
serious problems syntax parsing deliberately set aside trains fragmentation sentence structure turn false starts disfluencies role prosody generally problems raised interactive spoken language deal inevitable word recognition errors 
implemented nl systems formal meaning representation great majority rely description logics frame representations 
large representations capture subset expressive power standard fol terms inference capabilities aimed primarily subsumption checking brachman levesque nebel smolka schmolze israel hayes 
kr formalisms especially el crt representations language seen considerably expressive fol 
ask retrospect purposes project equally served weaker representation 
think language module general time making harder implement extend 
devil lies details briefly consider utterance dialogue 
way provide approximate representation standard fol quantifying possible worlds leave great deal 
particular shown example appears establish relevance connection connection previous proposal fol allow talk sort sentential propositional connection 
need patently intensional 
ignoring claim essence utterance posits move event instrument engine theme boxcar 
readily admits fol representation 
neglect weak cue word probably harmless cases strategy generalize 
instance initial call question previous suggestion get rid cars 
need car ship orange juice 
neglect cue words bound impair discourse understanding probably treating separate phenomenon separate representation losing simplicity generality 
similarly neglect intensional verbs need come back 
replace simple may misunderstand goal statement prediction leave place treat non intensional incorrectly conclude particular engine needed move boxcar may ask 
trains dialogues full locutions simple fol representations 
examples mentioned section drawn various transcripts consider reliable information subject predication proposition objective deliver boxcar bananas corning objective equated action type problem number looks difficult looks difficult equivalent difficult creating new predicates looks difficult inflate lexicon kb best way accomplish task 
referent best way action type plan little abilities subject action type little predicate modifier reducible conjunct current plan fill beer np subject infinitive complement refer thing plan 
truly want understand locutions reliance expressively weak representation difficult find sort approximate lf addition fill gaps left approximations various ad hoc ways 
lose doubly simplicity generality 
contrary widespread myth rich syntax obstacle effective inference 
instance limited set el inference capabilities trains el separately implemented epilog system schaeffer 
epilog powerful knowledge management inference system allowing data driven inference goal driven inference featuring integration dozen specialist modules accelerating temporal taxonomic set theoretic numeric special types inference 
general building complex system containing multiple knowledge representations better err side overly rich representations side 
reason information shipped module far easier discard superfluous information missing information omitted lack sufficient expressive power 
strongly confirmed experience rapid evolution module caused frequent changes information needs lexically oriented dorr jackendoff lexical conceptual structures gaining currency 
inference lcs tends restricted subsumption implemented translating description logic classic 
information extracted supplier modules 
unusual expressiveness representations particularly points nearer input adaptive changes relatively easy 
current directions theories individual modules continuing research projects efforts progress discussion follow knowledge representation issues described 
described briefly 
unified conversational context representation experience designing individual modules interfaces position meet head ontological differences different research traditions discourse context representation 
poesio traum steps alters crt allow representation aspects conversational context represented ebtl trains system 
robust spoken multi modal interaction trains system allen ferguson effort trains project writing represents somewhat separate effort develop relatively simple extremely robust multi modal system experiences trains 
system understands spoken typed input various mouse operations selecting map menu 
generates responses spoken language graphical displays 
task trains currently simple route planning scenario designed encourage interaction human system demonstrating effectiveness dialogue interaction 
goal allow untrained user sit solve randomly generated problem 
puts emphasis robustness deal phenomena incomplete ungrammatical utterances speech recognition errors multi modal input output 
concentrated clearly delineating modules system independent knowledge sources reasoning agents display engines allowing plug sophisticated components easily 
currently scaling deliberately naive route planning domain reasoner interesting challenging transportation planning scenario 
knowledge acquisition simulation built general purpose simulator transportation domains trains martin mitchell 
simulator provides graphical interface allows quickly set scenarios trains world 
animates simulation help debug plans system generates 
currently exploring techniques incorporating simulation source knowledge system help user develop effective plans 
evaluating effects plan may general due possible contingencies inadequate prior information simulation reveal problems expectations success particular options 
expect eventually build hybrid trains system containing modules similar earlier prototypes incorporating speech processing modules trains heuristic mechanisms mapping fragmentary parses plausible speech act hypotheses 
expect mechanism automatically detecting correcting speech repairs lines heeman allen 
acknowledgments trains project funded part onr arpa air force rome laboratory research contract nsf iri 
participants trains project efforts directly involved knowledge representation reasoning components trains system especially brad miller provided continuing support rhet ebtl reasoning kato implemented probabilistic parser trains graham katz pointed problems temporal constraints ship described section 
allen 

general theory action time 
artificial intelligence 
allen ferguson 

actions events interval temporal logic 
journal logic computation 
allen ferguson miller 

spoken dialogue interactive planning 
proc 
arpa spoken language technology workshop 
available www www cs rochester edu research trains trains 
allen guez jackson kyburg traum 

discourse system project 
technical report department computer science university rochester 
allen miller 

rhet system sequence self guided tutorials 
technical report department computer science university rochester 
allen schubert ferguson heeman hwang kato light martin miller poesio traum 

trains project case study building conversational planning agent 
journal experimental theoretical artificial intelligence 
alshawi crouch 

monotonic semantic interpretation 
proceedings th annual meeting association computational linguistics pages university delaware 
barwise perry 

situations attitudes 
mit press cambridge ma 
bickel 

mathematical statistics basic ideas selected topics 
holden day oakland ca 
brachman levesque 

tractability subsumption frame description languages 
proceedings fourth national conference american association artificial intelligence aaai pages 
bratman 

intention plans practical reason 
harvard university press 
brewka 

nonmonotonic reasoning logical foundations commonsense 
cambridge university press cambridge 


formal semantics grammar predication 
linguistic inquiry 
clark 

arenas language 
university chicago press 
clark marshall 

definite mutual knowledge 
joshi webber sag editors elements discourse understanding 
cambridge university press 
appears chapter clark 
clark schaefer 

contributing discourse 
cognitive science 
appears chapter clark 
clark wilkes gibbs 

referring collaborative process 
cognition 
appears chapter clark 
davidson 

logical form action sentences 
rescher editor logic decision action 
university pittsburgh press pittsburgh pa dorr 

interlingual machine translation parameterized approach 
artificial intelligence 
ferguson 

knowledge representation reasoning mixed initiative planning 
phd thesis university rochester 
available tr department computer science university rochester 
ferguson allen miller 
forthcoming 
trains mixed initiative planning assistant 
proceedings third international conference ai planning systems aips edinburgh scotland 
gazdar klein sag 

generalized phrase structure grammar 
blackwell oxford 
goldman 

theory human action 
prentice hall 

dynamic predicate logic 
linguistics philosophy 
gross allen traum 

trains dialogues 
trains technical note department computer science university rochester 
grosz sidner 

attention intention structure discourse 
computational linguistics 
hayes 

logic frames 
editor frame conceptions text understanding 
de gruyter 
heeman allen 

detecting correcting speech repairs 
proceedings th annual meeting association computational linguistics pages las cruces new mexico 
heeman allen 

trains dialogues 
trains technical note department computer science university rochester 
hwang 

logical approach narrative understanding 
phd thesis university alberta department computing science edmonton alberta canada 
hwang schubert 

episodic logic comprehensive natural representation language understanding 
minds machines 
hwang schubert 

episodic logic situational logic natural language processing 
situation theory applications pages csli stanford ca 
kamp 

theory truth semantic representation 
janssen editors formal methods study language 
mathematical centre amsterdam 
kamp reyle 

discourse logic 
reidel dordrecht 


temporal reasoning system 
technical report department computer science university rochester 
kyburg jr 

evidential probabilities 
proceedings international joint conference artificial intelligence ijcai pages 
lehman lewis newell 

natural language comprehension soar spring 
technical report cmu cs school computer science carnegie mellon university 
mann 

dialogue games conventions human interaction 
argumentation 
mann thompson 

rhetorical structure theory theory text organization 
technical report isi rs usc information sciences institute 
martin 

statistical inference plan uncertainty 
phd thesis department computer science university rochester 
martin mitchell 

trains world simulator user manual 
trains technical note department computer science university rochester 
miller 

rhet plan recognition system 
technical report department computer science university rochester 
montague 

proper treatment quantification english 
hintikka editor approaches natural language pages 
reidel dordrecht 
nebel smolka 

attributive description formalisms rest world 
herzog editors text understanding 
springer verlag 
poesio 

relational semantics scope ambiguity 
barwise plotkin editors situation semantics applications vol chapter pages 
csli stanford ca 
poesio 

situation theoretic formalization definite description interpretation plan elaboration dialogues 
aczel israel peters editors situations theory applications vol chapter pages 
csli stanford 
poesio 

discourse interpretation scope operators 
phd thesis university rochester 
available tr department computer science university rochester 
poesio 

semantic ambiguity perceived ambiguity 
van peters editors semantic ambiguity underspecification 
csli stanford ca 
poesio traum 

multi purpose model conversational context 
ijcai workshop context natural language processing 
rambow editor 
proceedings acl sig workshop intentionality structure discourse relations 
association computational linguistics 
reiter 

logic default reasoning 
artifical intelligence 
reyle 

dealing ambiguities underspecification construction representation deduction 
journal semantics 
ritchie russell black pulman 

computational morphology practical mechanisms english lexicon 
mit press 
schaeffer hwang de haan schubert 

epilog computational system episodic logic user guide 
technical report department computational science university alberta edmonton alberta 
schegloff sacks 

opening 

schmolze israel 

kl semantics classification 
research knowledge representation natural language understanding pages 
bolt beranek newman bbn technical report 
sinclair 

analysis discourse english teachers pupils 
oxford university press 
traum 

computational theory grounding natural language conversation 
phd thesis department computer science university rochester 
available tr department computer science university rochester 
traum allen 

discourse obligations dialogue processing 
proceedings th annual meeting association computational linguistics pages 
traum 

conversation acts task oriented spoken dialogue 
computational intelligence 
special issue non literal language 
walker whittaker 

mixed initiative dialogue investigation discourse segmentation 
proceedings acl pages 

