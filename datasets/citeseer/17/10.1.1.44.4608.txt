specifying real time systems causality setting joost pieter katoen 
rom diego ed brinksma faculty computing science university twente box ae enschede netherlands cnuce istituto del cnr santa maria pisa italy 
event structures prominent model concurrency 
real time event structures associate set time instants events modelling absolute time constraints causal dependencies modelling relative delays causally dependent events 
introduce novel temporal model show provide denotational semantics real time variant process algebra akin lotos 
formalism includes timed action prefix constrains occurrence time actions timeout watchdog timed interrupt operator 
event operational semantics formalism shown consistent denotational semantics 
example infinite buffer time constraints message latency rates accepting producing data 
timed extensions interleaving models concurrency investigated thoroughly decade 
different ways time incorporated labelled transition systems prominent interleaving model issue quite understood cf 
recipes proposals :10.1.1.43.9418
interleaving models appropriate description system observational behaviour 
suffices consider system black box account system composed subsystems 
applies instance field conformance testing usually deliberately knowledge available internal structure system 
final realization phase part specification needs implemented single processor interleaving models suffice 
partially funded progetto dell algebra di lotos su di la specifica quantitative di sistemi progetto la specifica di di sistemi eu part esprit bra project building correct reactive systems react 
correspondence 
katoen mail katoen cs utwente nl fax 
interleaving models appropriate design stages distribution aspects system play prominent role 
global state assumption interleaving models hampers faithfully model system consists operating subsystems different locations having local state 
design stage system considered white box internal system structure prevails 
particular specification serves prescription system implementation observational behaviour system interleaving models unattractive misleading independence actions reflected properly 
important design technique known action refinement action implemented concrete behaviour appears models appropriate see 
incorporation quantitative information models event structures pomsets mazurkiewicz traces received scant attention literature 
models attractive design stages observational behaviour longer prevalent intensional system characteristics dominate argue models particular deal issues time probability 
design stages utmost importance actions scheduled time probability certain alternative executions high level abstraction faithfully modelled means nondeterminism appear 
proposes real time extension variant event structures probabilities dealt 
real time model vehicle provide denotational semantics temporal process algebra kernel akin lotos 
formalism includes timed action prefix operator constraints occurrence time actions timeout watchdog timed interrupt operator 
inclusion time partial order models new extensions known pomsets configurations fand org automata sets posets event structures 
timed extension causal trees resembles model 
unaware proposal incorporates time timeouts watchdogs partial order setting 
ingredients considered essential specify real time systems 
extended bundle event structures adaptation winskel event structures fit specific requirements multi party synchronization disruption 
believe interleaving models legitimate complementary system design process consider event operational semantics real time process algebra hand omitting event identifiers results interleaving semantics 
semantics proven coincide strong timed event bisimulation equivalent coherent way 
facilitates comparison timed partial order model wealth existing timed interleaving models 
space reasons proofs omitted 
language process algebraic language pa fact lotos somewhat concise syntax generated grammar jj 

assume set observable actions act additional invisible action act 
special action ffi user definable indicates successful termination behaviour ffi act 
denotes inaction represents successful termination behaviour 
denotes action prefix act choice denoted sequential composition 
jj denotes parallel composition actions ffi act synchronization actions 
jjj abbreviates jj parallel composition synchronization 
denotes relabelling ffi ffi act ffi 
denotes hiding 

denotes disruption may point execution disrupted terminated 
denotes process instantiation behaviour considered context set process definitions form possibly contains occurrences precedences composition operators decreasing binding order jj 
trailing usually omitted 
standard interleaving semantics pa table ffi denotes ffi ffi gamma 
gamma 
gamma 
gamma 
gamma 
gamma 
gamma 
ffi 
gamma 

ffi gamma 

gamma 
gamma 
ffi 
gamma 

ffi gamma 

ffi gamma 
gamma 

gamma 
gamma 
ffi jj gamma 
jj gamma 
ffi jj gamma 
jj gamma 
gamma 
ffi jj gamma 
jj gamma 
gamma 
gamma 
gamma 
gamma 
gamma gamma gamma gamma 
gamma 
gamma 
table 
structured operational semantics pa real time variant pa par generated grammar jj 

time ir time domain range time range time 
denotes timed action prefix allowed forced occur write denotes timeout time initially behaves perform action enabling behaviour control passed time nondeterministic choice appears 
called weak timeout 
watchdog operator initially behaves time control passed provided successfully terminated 
note control passed perform action internal control passed time regardless activities time exception termination 
synchronization principle action occur participants ready engage 
instance jj action enabled time denotes notice synchronizations may impossible due incompatible timing constraints participating behaviours 
instance action occur 
extended bundle event structures extended bundle event structures simply event structures consist events labelled actions event modelling occurrence action relations causality conflict events 
system runs modelled partial orders events satisfying certain constraints posed causality conflict relations events 
conflict asymmetric binary relation denoted events intended meaning occurs disables occurrence ii occur single system run causally precedes causality represented relation set events pairwise conflict event interpretation happens system run exactly event happened caused 
enables uniquely define causal ordering events system run 
conflict causal relation events independent 
enabled independent events occur order parallel 
term asymmetric mean suggest 
allowed equivalent usual symmetric conflict event structures 
terminology asymmetric adopted poign 
definition 
extended bundle event structure quadruple set events theta irreflexive asymmetric conflict relation 
theta bundle relation gamma 
action labelling function set action labels 
constraint specifies bundle 
events mutual conflict 
event structures graphically represented way 
events denoted dots near dot action label 
indicated dotted arrow bundle indicated drawing arrow event connecting arrows small lines 
denote event labelled denotes class event structures ranges 
sequel adopt notations 
sequences oe xn oe denote set elements oe oe xn oe denote prefix oe gamma th element oe gamma 
oe sequence events define cfl oe oe sat oe 
oe cfl oe set events disabled event oe 
sat oe set events causal predecessor oe bundles pointing 
events sat oe bundles satisfied 
en oe sat oe cfl oe oe 
event traces consist distinct events oe conflict free cfl oe obvious reasons 
addition event event trace preceded sequence causal predecessor bundle pointing sat oe 
definition 
event trace oe sequence events en oe denote set event traces example 
bundles 


symmetric conflict 


event traces fig 

example event structures 
event structures provide semantics pa compositional way 
finite behaviours defined appendix expressions corresponding follows jj jjj jj 
jjj 
real time event structures time added bundle event structures ways 
specify relative delay causally dependent events time associated bundles order facilitate specification timing constraints events bundle pointing initial events time associated events 
sufficient time labels initial events synchronization events necessary allow equipping events time labels including non initial ones 
assume mappings associate set time instants bundles events respectively 
bundle denoted 
interpretation event happened certain time enabled time units interpretation event happen system usually assumed time 
order specify timeout mechanisms urgent events 
urgent events different events sense forced occur enabled 
definition 
real time event structure gamma quadruple ui event structure gamma 
time event delay function 
gamma 
time bundle delay function gamma 
bool urgency predicate 



time 
equals 
note constraint requires urgent event contained event disables enabling disabled case identical 
constraint enforces soon enabled enabled provided disabled way permanently disabled enabling disabled 
result global impact urgent events limited see 
order decide occur enabled suffices consider local urgent second constraint ensures urgent events enabled single time instant 
motivation constraint urgent events sole alternatively explicitly model start system fictitious event say 
time associated event considered time associated bundle pointing fictitious event consider event definitions complex 
treated differently normal events proof obligations severe prove bundles 
satisfy 
purpose modelling timeouts timeout typically appear single time instant 
denote class real time event structures 
bundle event delays depicted near bundle event respectively 
urgent events denoted open dots events closed dots 
zero delays omitted 
events bundle pointing take interpretation 
consider 

happens time time enabled 
intersection sets time instants empty means event hand occur time permanently disabled 
notion timed event trace defined generalization notion event trace 
timed event denotes happened time sequences timed events oe oe denote sequence events oe oe time oe denote set time instants en oe happen event timed event trace oe occurred time event occur absolute delay respected ii time relative immediate causal predecessors respected iii event occurs 
ii iii take care fact events occur causes entail causal ordering implies temporal ordering 
time oe 
oe oe notion timed event trace defined follows 
min denote minimum set min 
definition 
timed event trace gamma ui sequence oe timed events time satisfying time oe en oe min time oe gamma denote set timed event traces gamma constraints self explanatory 
third constraint takes care fact urgent events may prevent events disable disabled occur certain time 
event occur time provided enabled urgent event disables disabled occurs occur example 
depicts real time event structure event delays zero :10.1.1.43.9418
sequences timed events conditions timed event traces max min :10.1.1.43.9418
fig 

real time event structures 
obtain max timed event traces respect causality necessarily time 
independent events occur trace order regardless timing 
example timed event traces 
possible choices correspond possible interleavings causally independent events 
causal ordering events implies temporal ordering causal ordering contradict temporal order 
result implies ill timed event trace oe exists corresponding time consistent event trace oe obtained oe swapping repeatedly ill timed pairs timed events yielding oe oe theorem 
oe oe gamma oe oe gamma 
note reverse implication hold instance causally depends order events trace reversed contradict causal ordering 
extensive discussion ill timed traces refer 
event structure semantics section presents causality semantics par real time event structures 
define mapping er par gamma 
convenience denotational semantics untimed case defined appendix definition 
phi par gamma 
pa defined follows phi phi phi phi phi op phi op phi op jj 
phi op op phi op phi phi phi phi phi 
phi phi untimed behaviour corresponding obtained omitting time annotations converting respectively 
purpose internal event introduced timeout operator explained 
rest section er gamma 

functions init exit denote set initial termination events respectively defined event structures appendix real time event structures way 
eu denote infinite universe events 
definition 
er par gamma 
defined follows er phi er phi ffi time ffi false gi er ui eu 

theta theta time false semantics self explanatory 
er bundle introduced new event labelled events gamma delay events relative bundle 
associated time delay time 
untimed case suffices introduce bundles initial events gamma cf 
appendix bundles events gamma introduced timed case sole purpose making delays relative shows er er 
fig 

example semantics timed action prefix 
definition 
er par gamma 
defined 

follows er op phi op op 
er op phi op op er 
exit gamma 


exit gamma theta exit gamma theta ffi exit gamma theta theta time exit gamma op equal choice disrupt er untimed event structure corresponding expression pa phi op timings events bundles gamma gamma unaffected 
similarly er defined relabelling hiding 
events er 
bundles introduced successful termination events gamma events gamma reason introducing bundles events gamma event delays gamma relative termination gamma similar timed action prefix 
consider parallel composition 
recall appendix events pairs events gamma gamma component equal delay event maximum delays components different time associated bundle equal maximum times associated bundles get projecting th components events bundle projection yields bundle gamma theta projection defined pr pr pr dom pr definition 
er par gamma 
defined jj follows er jj phi jj ui time pr pr time false example 
consider timed behaviours jj jj shows er jj constructed er er 
fig 

example semantics parallel composition 
er new internal urgent event introduced models expiration timer 
timer expires performs initial action event put mutual conflict initial events gamma events gamma occur timeout modelled way action prefix bundle 
introduced gamma delay bundles determined action prefix case 
event delay occur time units enabling er 
er equals er urgent 
definition 
er par gamma 
defined follows er ui eu init gamma theta theta init gamma 


theta theta time true example 
jjj jj illustrates er constructed er er 
fig 

example semantics similar approach taken watchdog operator 
possibility model urgent events 
consider er 
real time event structure 
restrict event delays gamma ensuring events occur time latest ii postpone events gamma time events occur 
definition 
er par gamma 
defined follows er phi shows gamma gamma constructed gamma gamma fig :10.1.1.43.9418:10.1.1.43.9418

example semantics watchdog operator 
theorem 
par er recursion section extend par recursion 
extend syntax construct denotes process instantiation 
assume behaviour considered context set process definitions form behaviour possibly containing occurrences er defined way standard fixed point theory 
complete partial order defined real time event structures empty event structure er element 
definition function fb defined substitutes real time event structure occurrence interpreting operators operators real time event structures 
fb shown continuous means er defined upper bound chain fb fb fb 
just define appropriate ordering corresponding main results 
ingredients straightforward define continuous function fb details 
definition 
gamma 

gamma gamma iff 
theta 



denotes restriction 
straightforward verify partial order element 
conflicts require new conflicts appear gamma events gamma similarly second constraint forbids bundles gamma pointing events gamma exists projected bundle gamma note constraint allows bundles grow way old bundle contained new 
constraint requires bundles keep delay 
chain gamma gamma denoted gamma characterized follows 
set events conflicts labeling function event delays simply take union events conflicts labellings event delays event structures chain 
bundles may grow approach apply set bundles 
suppose gamma bundle 
definition series bundles 

satisfying contains bundle 
gamma gamma definition 
gamma 


proposition 
gamma upper bound chain gamma gamma 
proposition 
gamma gamma chain gamma gamma 
definition 
process definition er 
example 
example recursive process definition par consider approximation real time event structure semantics definition empty structure 
second approximation fb 
depicted 
repeated substitution obtain real time event structure depicted 
fig 

example semantics recursive process definition par example time constrained fifo buffer show par real time event structures specify real time systems treating time constrained fifo buffer 
example taken difference consider buffer infinite length 
simple way specify fifo buffer data type queue fifo queue hxi rd fifo wr fifo hxi set data values buffered wr denotes writing insertion buffer rd denotes reading removal buffer 
generalized version choice operator hxi denotes singleton queue containing denotes concatenation queues 
denotes executed condition holds 
fifo buffer model communication network timing constraints message latency range time units ii message input rate set message time unit iii message output rate message time units 
time constraints maintained processes td wr rd jjj td wr wr wr wr wr wr rd rd rd rd rd rd required buffer obtained putting processes parallel fifo fifo jj rd jj wr jj td jj shorthand jj act full synchronization 
specification strongly resembles timed csp specification 
problem specification prescribes mutual exclusion reading writing moment may choose read provided buffer empty write 
intuitively reading writing certain extent independent 
queue contains elements possible read parallel writing new elements 
mutual exclusion constraint especially unnatural reading writing take place different locations quite common case communication network 
propose different way modelling time constrained fifo buffer exploit event structures partial order model cell wp wr wn jjj rp rd rn chain cell jj wn rn chain wp wn rp rn wn rn buf chain wp rp real time event structures corresponding cell buf processes depicted respectively 
unlabelled grey dots represent internal events 
wp wr wn rp rd rn wr rd wr rd wr rd 
fig 

real time event structure time constrained fifo buffer 
process cell describes buffer cell allowing writing reading data value 
actions wp rp ensure cell waits writing resp 
reading wn rn indicate finish writing reading chain start cell 
chain puts unbounded number cells parallel appropriate renaming function 
process buf hides write previous read previous actions front cell 
note rd wr events specification principle 
natural force events happen soon enabled 
done explicit urgent operator treatment operator setting falls scope 
event operational semantics various timed process algebras known interleaving semantics 
order compare approach existing approaches investigate compatibility proposal standard interleaving semantics lotos event operational semantics par basic idea define transition system sense keep track times occurrence actions actions usual structured operational semantics 
results timed event transition system 
approach adopted applied 
occurrence action prefix subscripted arbitrary unique event occurrence identifier denoted greek letter 
occurrence identifiers play role event names 
parallel composition new event names created 
event name event name possible new names events jj unsynchronized events synchronized events 
operational semantics defines set transition relations gamma gamma gamma gamma 
gamma gamma gamma gamma 
denotes behaviour perform event labelled action act ffi time time subsequently evolve transition relation gamma 
smallest relation closed inference rules listed table 
subsidiary notion ut denote set time instants initially perform urgent event 
pa denote par including auxiliary operators see 
definition 
ut pa gamma 
time defined ut ut ut op ut ut op jj ut ut ut 
ut ut op ut op ut ut ut ut ut ut ut syntactical constructs ut 
mt abbreviate min ut min empty set equals 
order ut defined require process instantiations occur weakly guarded way guarded finite number substitutions bodies process names 
perform transition rule construct 
perform successful termination action ffi time 
perform event time evolves 
considered behaviour shifted time units advance 
perform event say time perform time note auxiliary construct counterpart language level 
rules parallel composition synchronization takes place hiding relabelling straightforward extensions untimed rules 
synchronization take place participants perform equally labelled event label synchronization set equals ffi time rules 
straightforward extension rules untimed case case performs successful termination action ffi time 
evolves represents time units passed start execution 
similar timed action prefix case 
rules somewhat adapted initial urgent events decide choice 
event occur time resolve choice favour general performs event time perform provided perform urgent event time earlier mt 
symmetry similar condition obtained performing event 
similar conditions appear 
rules justified follows 
performs event time evolves 
evolving 
ffi gamma gamma gamma gamma 
gamma gamma gamma gamma gamma 
gamma gamma gamma gamma gamma 
gamma gamma gamma gamma gamma gamma gamma 
gamma gamma gamma gamma gamma 
mt gamma gamma gamma gamma gamma 
gamma gamma gamma gamma gamma 
mt gamma gamma gamma gamma gamma 
gamma gamma gamma gamma gamma 
ffi 
gamma gamma gamma gamma gamma 

ffi gamma gamma gamma gamma 

gamma gamma gamma gamma 
gamma gamma gamma gamma gamma 
ffi mt 
gamma gamma gamma gamma gamma 

ffi gamma gamma gamma gamma 
mt 
ffi gamma gamma gamma gamma 
gamma gamma gamma gamma gamma 
mt 
gamma gamma gamma gamma gamma 
gamma gamma gamma gamma gamma 
gamma gamma gamma gamma gamma 
gamma gamma gamma gamma gamma 
ffi jj gamma gamma gamma gamma gamma gamma gamma 
jj gamma gamma gamma gamma gamma 
ffi jj gamma gamma gamma gamma gamma gamma gamma 
jj gamma gamma gamma gamma gamma 
gamma gamma gamma gamma gamma 
ffi jj gamma gamma gamma gamma gamma gamma gamma 
jj gamma gamma gamma gamma gamma 
gamma gamma gamma gamma gamma 
gamma gamma gamma gamma gamma 
gamma gamma gamma gamma 
gamma gamma gamma gamma gamma 
gamma gamma gamma gamma gamma gamma gamma 
gamma gamma gamma gamma gamma 
gamma gamma gamma gamma gamma 
mt gamma gamma gamma gamma gamma 
gamma gamma gamma gamma gamma 
ffi gamma gamma gamma gamma gamma 
ffi gamma gamma gamma gamma gamma 
ffi gamma gamma gamma gamma gamma 
gamma gamma gamma gamma gamma 
mt gamma gamma gamma gamma gamma gamma gamma 
gamma gamma gamma gamma gamma 
oe oe gamma gamma gamma gamma gamma 
oe gamma gamma gamma gamma gamma 
oe oe gamma gamma gamma gamma gamma 
oe table 
event operational semantics par behaves unable perform events ensures disrupt 
performing event time say performed event time inference rules disrupt straightforward extensions rules untimed case similar conditions 
inference rule perform event time note auxiliary operator specified user 
performs event time evolves case possibility happens dropped performed action time time timeout event happen resulting behaviour shifted time units advance 
done mt 
condition ensures performed perform urgent event prevents happening time happened time 
performs event successful termination event time evolves evolving possibility disruption time remains 
terminates successfully time disruption impossible 

performs event time evolves perform provided perform urgent event evolves shifted time units time 
assumed process instantiation uniquely identified occurrences action prefix different occurrences process instantiation produce different event transitions 
addition event transitions repeated 
oe event transition time action occurs labelled label different 
complications resolved event renaming operator prefixes events behaviour certain occurrence identifier 
oe behaviour event identifiers prefixed oe 
ue denotes set urgent events 
function easily defined induction structure omitted 
proposition 
pa mt ue gamma gamma gamma gamma gamma gamma 
consistency denotational operational semantics par theorem 
par oe oe gamma 
related concerns real time extension variant event structures model concurrent systems 
original incentives study expressiveness event structures effectively support specification distributed systems facilitate formal representation performance reliability aspects 
secondary aim formally relate real time extension event structures interleaving models concurrency partial order interleaving models coherently system design process compared perspicuous way 
achieve proposed real time variant extended bundle event structures model providing denotational semantics realtime process algebraic formalism includes timeout watchdog operator constructed corresponding event operational semantics 
shows event structures suitable modelling real time systems 
semantics characterized absence mechanism explicitly forces passage time time treated parameter 
event operational semantics conservative extension standard interleaving operational semantics lotos 
interaction take place participants engage time instant 
interaction appear common time instant exist 
model explicit notion passage time impossible interaction result behaviours block passage time called entire system causally independent parts simply local impossibility execute event hand 
model timed actions allows generation ill timed traces 
proposed timed process algebra theoretical csp parallel operator includes ill timed traces 
proposals subprocesses independent local clock local clocks synchronized interaction ill appears 
believe operational semantics simpler avoiding local clocks 
ill phenomenon explicitly avoided real time acp tic precedence timed events trace reflect order time 
opinion ill timed traces obscure ill timed trace exists corresponding time consistent trace timed events 
think avoidance leads complicated operational semantics 

authors pedro argenio rensink suggestions 
denotational semantics pa appendix provide full definition causality semantics pa initial events successful termination events event structure defined follows init 
exit ffi defined recursively definition 
suppose infinite universe eu events 
rest section 

suitable event renaming applied extended 

semantics self explanatory 
bundle introduced new event labelled initial events causally precedes events 
equal extended mutual conflicts initial events resulting structure happen 
identical events labelled label labelled turning events internal ones 
defined similarly events ffi denotes usual function composition 

equal bundles introduced successful termination events initial events 
create bundles mutual conflicts introduced successful termination events corresponds fact initial events occur successfully terminated 
successful termination events internal events 

equal extended additional asymmetric conflicts 
event may disabled initial event models disrupted initial event happens 
addition occurrence successful termination event initial event happen anymore 
consider parallel composition 
events jj constructed way event need synchronize paired auxiliary symbol event labelled action ffi paired events process equally labelled 
events pairs events component equal events put conflict components conflict different events common component different events appear events process synchronize event process 
bundle introduced take projection th component events bundle obtain bundle 
act ffi set synchronization events set non synchronizing events 
definition 
pa gamma 
defined follows ffi ffi ffi ffi eu eu 

theta init 

init theta init init theta init 

ffi 
exit 


exit theta init exit theta ffi exit theta 


theta init init theta exit jj theta theta theta 


slightly different version denoted 
difference action prefix introduces bundles initial events gamma events gamma similarly sequential composition introduces bundles successful termination events gamma events gamma additional bundles pose problems proposition 
pa 

aceto murphy 
ill timed caused 
best editor concur lncs pages 
springer verlag 

aceto murphy 
timing causality process algebra 
acta informatica 
appear 

alur dill 
theory timed automata 
theoretical computer science 

baeten bergstra 
real time process algebra 
formal aspects computing 

brinksma 
iso specification language lotos 
computer networks isdn systems 

boudol castellani 
flow models distributed computations equivalent semantics ccs 
information computation 

brinksma 
katoen 
performance analysis true concurrency semantics 
rus rattray editors theories experiences real time system development volume amast series computing chapter pages 
world scientific 

crew meseguer pratt 
temporal structures 
mathematical structures computer science 

de bakker 
de roever rozenberg editors 
linear time branching time partial order logics models concurrency lncs 
springerverlag 


constraint oriented real time process calculus 
diaz editors forte fifth international conference formal description techniques volume ifip transactions pages 
north holland 

gorrieri 
theory processes durational actions 
theoretical computer science 


dynamic approach timed behaviour 
jonsson parrow editors concur concurrency theory lncs pages 
springer verlag 

janssen wu 
layering real time distributed processes 
langmaack 
de roever formal techniques real time fault tolerant systems lncs pages 
springer verlag 


katoen 
quantitative qualitative extensions event structures 
phd thesis university twente 


katoen 
modelling systems probabilistic process algebra event structures approach 
amer uyar editors formal description techniques vi volume ifip transactions pages 
north holland 


katoen brinksma 
consistent causality interleaved view timed process algebra including timeouts 
cornell proceedings rd amast workshop real time system development 


transformations semantics lotos 
phd thesis university twente 


algebra timed behaviours 
theoretical computer science 

mazurkiewicz 
basic notions trace theory 
de bakker pages 

murphy 
time duration concurrency 
fundamenta informaticae 

nicollin sifakis 
overview synthesis timed process algebras 
de bakker huizing 
de roever rozenberg editors real time theory practice lncs pages 
springer verlag 

poign 
nature events perspective concurrency 
theoretical computer science 

plotkin 
structural approach operational semantics 
technical report daimi fn computer science department aarhus university 

pratt 
modeling concurrency partial orders 
international journal parallel programming 

de 
tic timed calculus 
formal aspects computing 

rensink 
methodological aspects action refinement 

olderog editor programming concepts methods calculi volume ifip transactions pages 
north holland 

schmidt 
denotational semantics methodology language development 
allyn bacon 

vissers 
open distributed systems retrospective prospective view 
logrippo ural editors protocol specification testing verification pages 
north holland 

winskel 
event structures 
de bakker pages 


time constrained buffer specifications csp timed csp 
acm transactions programming languages systems 
article processed macro package llncs style 
