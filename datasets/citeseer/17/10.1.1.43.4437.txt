video textures arno sch dl richard szeliski david salesin irfan essa georgia institute technology microsoft research university washington introduces new type medium called video texture qualities photograph video 
video texture provides continuous infinitely varying stream images 
individual frames video texture may repeated time time video sequence repeated exactly 
video textures place digital photos static image dynamic qualities explicit action 
techniques analyzing video clip extract structure synthesizing new similar looking video arbitrary length 
combine video textures view morphing techniques obtain video textures 
introduce animation synthesis video textures guided user high level interactive controls 
applications video textures extensions include display dynamic scenes web pages creation dynamic special effects games interactive control video animation 
cr categories subject descriptors information interfaces multimedia information systems video computer graphics picture image generation display algorithms image processing computer vision applications keywords animation image rendering morphing multimedia natural phenomena texture synthesis video rendering video animation video view morphing 
picture worth words 
phenomena natural man adequately captured single static photo 
waterfall flame flag flapping breeze phenomena inherently dynamic quality single image simply portray 
obvious alternative static photography video 
video drawbacks 
want store video computer storage device forced video clip finite duration 
video middle 
video specific embodiment specific period time 
captures time varying behavior phenomenon hand video lacks timeless quality photograph 
propose new type medium ways intermediate photograph video 
new medium call video texture provides continuous infinitely varying stream video images 
term video texture strong analogy image textures usually repeat visual patterns similar quasi periodic ways 
video texture synthesized finite set images randomly rearranging possibly blending original frames source video 
video textures occupy interesting niche static dynamic realm 
photo displayed computer screen video texture image dynamic qualities 
example web page advertising scenic destination video texture beach palm trees blowing wind static photograph 
actor provide dynamic head shot continuous movement home page video textures find application dynamic foreground elements scenes composited live synthetic elements example computer games 
basic concept video texture extended different ways increase applicability 
backward compatibility existing video players web browsers finite duration video loops created play continuously visible discontinuities 
original video split independently moving regions region analyzed rendered independently 
computer vision techniques separate objects background represent video rendered arbitrary image locations 
multiple video video texture regions combined complex scene 
video textures combined stereo matching view morphing techniques produce dimensional video textures rendered continually varying viewpoints 
interesting ability put video textures interactive control drive high level real time 
instance interactively specifying preferred segment source video speed slow position interactive slider 
alternatively existing video clip shortened lengthened removing adding video texture middle 
call forms high level control video animation 
creating video textures applying ways requires solving number problems 
difficulty locating potential transition points video sequences places video looped back minimally obtrusive way second challenge finding sequence transitions respects global structure video 
transition may minimal artifacts lead portion video graceful exit poor transition take 
third challenge smoothing visual discontinuities transitions solve problem morphing techniques 
fourth problem automatically factoring video frames different regions analyzed synthesized independently 
furthermore various extensions described involve new additional challenges creating fixed length cycles separating video texture elements backgrounds video applying view morphing video imagery generalizing transition metrics incorporate real time user input 
cases solutions problems retrospect quite simple 
feel primary contribution may lie technical solutions individual problems se paradigm reusing video frames create video textures video video animation 
related increasingly computer graphics turning image modeling rendering techniques images captured scene object integral part rendering process obviating need geometry altogether 
debevec points trend parallels occurred music synthesis decade ago sample synthesis replaced algorithmic approaches frequency modulation 
date image rendering techniques applied scenes architecture cache accelerate renderings produced conventional graphics hardware :10.1.1.139.3990
generalizes image rendering temporal domain 
thought kind video rendering similar idea video games video loops created simulate natural phenomena fire water 
little previous automatically generating motion reusing captured video 
probably closely related video rewrite video sequences person mouth extracted training sequence person speaking reordered order match phoneme sequence new audio track 
related view interpolation techniques applied multiple video streams virtualized reality immersive video projects :10.1.1.21.648
pollard introduced term video sprite applying techniques alpha region video image 
finkelstein alpha video elements earlier multiresolution video called video clip art video textures thought temporal extension image texture synthesis 
multiscale sampling techniques texture synthesis fact directly extended bar joseph space time domain 
bar joseph focuses texture type motions limited semantic content fire water close ups modeled hierarchy filter responses texture synthesis 
approach deal kinds phenomena deals structured motions repetitive human actions 
context analysis resembles earlier finding cycles repetitive motions rectifying cycles truly periodic sequences 
similarity motion movement technique patterns image appear move continuously changing positions 
system overview small amount training video input video clip generate infinite amount similar looking video 
general approach follow find places original video transition place video clip introducing noticeable discontinuities 
system organized major components 
component system analyzes input video find transition points stores small data table random play input video clip analysis video structure generate loops frame frame video rendering video loop video player video system overview diagram 
input video clip fed analysis component finds transition points video looped back 
transitions video structure fed synthesis components random play sequences transitions stochastically generate loops finds set transitions create single video loop length 
rendering component takes generated sequence frames original video clip produces infinite video texture sequence video loop played indefinitely standard video player loop mode 
part video texture representation 
analysis component may optionally trim away parts input video needed segment original video independently moving pieces order easily analyze find repetition individual regions 
second component system synthesizes new video analyzed video clip deciding order play shuffle original video frames pieces thereof 
developed different approaches perform sequencing 
approach random play uses monte carlo stochastic technique decide frame played frame table frame frame similarities computed analysis algorithm 
second approach selects small number transitions take way video guaranteed loop specified number frames 
resulting video loop played conventional video player loop mode 
set frames played selected rendering component puts frames frame pieces way visually pleasing 
process may simple just displaying outputting original video frames may involve cross fading morphing transitions blending independently moving regions 
remainder describes detail representation capture structure video textures section process extracting representation source video section synthesizing video texture section 
rendering algorithms composite video smooth visual discontinuities described section 
discussion basic results section followed description extensions section 
include extraction rendering video changing viewpoints image rendering techniques creation animation 
video clips associated results viewed cd rom dvd video conference proceedings 
conclude discussion potential video textures ideas research 
representation video textures essentially markov processes state corresponding single video frame probabilities corresponding likelihood transitions frame 
practice alternate equivalent representations useful storing video textures 
matrix probabilities element pij matrix describes probability transitioning frame frame set explicit links frame associated probability 
representation advantageous matrix dense indices need stored explicitly 
cases set allowable transitions relatively sparse second representation preferred 
cases better results achieved splitting original video regions computing video texture region separately 
discussed detail section segment video different video sprite elements affiliated alpha channel compute video texture sprite separately 
case additional information stored links describe relative position sprite changed link crossed 
analysis extracting video texture step creating video texture input video sequence compute measure similarity pairs frames input sequence 
current implementation distance simple works practice 
computing distances equalize brightness image sequence background portions change order remove visual discontinuities appear jumping different parts input video 
camera small amount jitter handheld shot high wind conditions run video stabilization software sequence 
frame frame distances computed store matrix dij ii ij denotes distance pair images ii ij 
new video synthesis basic idea create transitions frame frame anytime successor similar di small 
simple way map distances probabilities exponential function pij exp di 
probabilities row normalized pij 
run time frame display frame selected distribution pij 
parameter controls mapping distance relative probability transition 
smaller values emphasize just best transitions larger values allow greater variety cost poorer transitions 
typically set small multiple average non zero dij values likelihood making transition frame fairly low 
preserving dynamics course video textures need preserve just similarity frames dynamics motion need preserved 
consider example swinging pendulum 
frame finding transitions pendulum sequence 
frame top row matches frames bottom row closely 
possibilities frame comes sequence correct dynamics 
possibilities disambiguated considering sequence frames surrounding 
frames match 
left right swing corresponding frame right left swing looks similar indicated blue arrow 
transitioning frame right swing frame looks similar right left swing create abrupt unacceptable change pendulum motion 
possible way overcome problem match velocities optical flow computed frame addition matching visual similarity frames 
flow computations quite brittle arbitrary absence texture opted simpler alternative 
solve problem preserving dynamics requiring frame classified similar frame frames temporally adjacent frames weighted window similar 
words match subsequences individual frames 
subsequence match achieved filtering difference matrix diagonal kernel weights wm ij wk di 
practice corresponding tap filter binomial weights 
making filter length allows decision transition frame frame determined similarity similarity removing asymmetry decision 
filtering computing probabilities filtered difference matrix undesired transitions longer high probability 
shows behavior dimensional images dij pij tables pendulum sequence 
images bear resemblance earlier papers analysis periodic motion 
new probabilities ij computed dynamics preserving distances ij way pij computed dij equation 
original unfiltered tables periodic nature pendulum readily visible tendency match forward backward swings 
filtering swings direction matched 
bright knots pendulum pauses ends swing self similarity 
accompanying video clips show false jumps eliminated 
dij pij ij unfiltered filtered distance matrix transition probabilities clock pendulum sequence 
filtering moderate effect distance table effect pronounced passed exponential function 
filtered images slightly smaller filter kernel fit completely matrix frames near thrown away 
frame clock sequence dead 
hand moves field view 
instantaneous transition costs video texture get stuck frame 
ij avoiding dead ends anticipating decision rule described far looks local cost transition 
tries match appearance dynamics frames gives consideration transition example lead portion video graceful exit dead effect 
better results achieved planning ahead trying predict anticipated increased cost choosing transition transitions move necessitate 
precisely ij anticipated cost transition frame frame cost reflects expected average cost transitions 
define ij summing anticipated costs ij ij jk 
constant control tradeoff multiple low cost transitions versus single poorer 
higher favors multiple transitions lower favors single poorer 
constant control relative weight transitions metric 
convergence choose practice 


probabil ij ij probability matrices clock sequence dead 
original probability matrix causes player run get stuck 
new matrix costs causes system jump early getting stuck dead 
ities jk defined ij exp 
pair equations solved simple iterative algorithm alternating evaluation 
unfortunately algorithm slow converge 
faster variant equation derived making fol lowing observation 
jk equation tend best transition 
replace equation ij ij min jk 
equation known reinforcement learning community learning 
corresponds finding best possible continuation path graph associated costs edges proven converge 
increase computational efficiency algorithm selective rows ij updated step 
heuristically speaking lowest cost path involves transition frame near sequence cost transition propagated forward 
initialize ij ij define mj min jk 
iterating row alternately compute ij ij mj update corresponding mj entries equation 
repeat sweeps back front matrix entries stabilize 
shows probability tables applying cost computation 
original probability matrix causes player run get stuck 
new matrix costs causes system jump early getting stuck dead 
pruning transitions techniques produce perfectly video textures desirable prune set allowable transitions save storage space improve quality resulting video suppressing non optimal transitions 
examined pruning paradigms 
select local maxima transition matrix source destination frame 

set probabilities threshold zero 
strategy finds just sweet spots matrix possible transitions frames neighborhood frames similar transitions neighborhood frames best transition needs kept 
combined second strategy applied 
strategies generally applied cost computation done 
case video loops described section slightly different pruning strategy 
video loops find sequences frames played continuously low average cost defined sum transition costs ij divided total length sequence 
straightforward show average cost sequence transitions just weighted average average costs transitions 
video loops pruning transitions local minima distance matrix compute average cost transition keep best typically 
synthesis sequencing video texture analysis stage identified transitions video texture need decide order play video frames 
synthesis stage developed different algorithms random play video loops 
random play simple describe 
video texture begun point non zero probability transition 
displaying frame frame selected pij 
note usually pi largest probability ii necessarily true anticipated cost ij system avoids dead ends 
simple monte carlo approach creates video textures repeat exactly useful situations video texture created fly source material 
conventional digital video player show video textures necessary create video loops fact repeat fixed period 
case video texture played standard loop mode player 
generating loops highest possible quality difficult problem devote rest section 
video loops consider loop single transition source frame destination frame call primitive loop 
order single transition create non trivial cycle range loop 
cost loop filtered distance frames ij 
primitive loops combined create additional cyclic sequences called compound loops 
add primitive compound loop ranges overlap 
way play loop second played 
resulting compound loop range union ranges original loops length cost sum original lengths costs 
compound loops may contain repeated instances primitive loop represented multiset ordering loops important 
forward transitions added cycle 
algorithm efficiently checks multiset forward backward jumps dynamic programming algorithm described finds length cd cd ab ab 
dynamic programming table finding optimal loops 
entry lists best compound loop length includes primitive loop listed top column 
total costs shown parentheses 
lowest cost compound loop length forward jumps currently suitable extension 
algorithm creating compound loops minimal average cost considers backward transitions transitions 
remainder section algorithms need generate optimal loops video loops minimal cost sequence length 
algorithm selects set transitions construct video loop 
second algorithm orders transitions legal fashion order played additional transitions 
selecting set transitions straightforward way find best compound loop length enumerate multisets transitions total length select legal ones compound loops ranges form continuous set keep best 
unfortunately process exponential number transitions considered 
dynamic programming algorithm 
algorithm constructs table rows maximum loop length considered columns number transitions primitive loops considered see 
algorithm builds list best compound loop length contains instance primitive loop listed top column 
cell table lists transitions compound loop compound loop total cost 
algorithm works walking table updating cells row time 
cell examines compound loops shorter length column tries combine compound loops columns primitive loops ranges overlap column considered 
assures created compound loops ranges constituent compound loops overlap 
example entry row column obtained combining entry row column entry row column possible primitive loops ranges overlap lengths sum 
combination lowest total cost new entry 
ln cells examined algorithm combine compound loops column entries columns 
total computational complexity algorithm space complexity ln 
note full descriptions compound loops need stored computation phase backpointers originating cells constituent compound loops needed 
scheduling primitive loops finding list primitive loops lowest cost compound loop transitions scheduled order form valid compound loop 
done follows scheduling abcd example 
schedule transition starts sequence transition taken 
example 

removal transition may break remaining primitive loops sets continuous ranges 
example removal breaks remaining loops continuous range sets 
frame contained set schedule transition set source frame occurs example transition meets criteria 

repeat previous step removing transitions primitive loops left range 
example removed repeated step 

schedule primitive loop disjoint ranges algorithm step 
example primitive loop left 

continue step primitive loops removed 
example loops scheduled order computational complexity algorithm quadratic number transitions compound loop 
scheduling algorithm run deterministic fashion legal transition encountered stochastic fashion randomly selecting legally available transitions 
variant utilizes transitions precisely frequency compound loop alternative monte carlo sequencing algorithm earlier 
rendering favor transitions introduce small discontinuities motion cases unnoticeable transitions available sequence 
section describes techniques discontinuities video texture blending independently analyzed regions 
simply jumping frame transition images sequence transition blended standard cross fading frames sequence near source transition linearly faded frames sequence near destination faded 
fade positioned halfway complete transition scheduled 
cross fading transitions avoids abrupt image changes temporarily blurs image misalignment frames 
transition sharp blurry back noticeable 
situations problem addressed frequent transitions frames cross faded maintaining constant level blur 
implementation cross fading algorithm supports multiway cross fades subsequences blended time 
algorithm computes weighted average frames participating multi way fade ii blending weights derived shifted weighting kernels associated participating frame normalized 
approach reducing transitions morph sequences common features sets frames aligned 
method de ghosting algorithm described shum szeliski related automatic morphing techniques 
perform de ghosting compute optical flow frame ii participating multi way morph frame ir frame displayed absence morphing cross fading 
pixel ir find consensus position pixel weighted average corresponding positions frames ii including ir 
regular inverse warping algorithm resample images pixels consensus positions 
blend images 
video texture consists independently analyzed regions rendering algorithm blends regions smoothly 
approach commonly image mosaics contribution region analysis regions typically overlapping tapers gradually edge 
basic results accompanying video clips available cd rom dvd video conference proceedings demonstrate different video textures produced methods described far 
summarize basic results section develop extensions basic algorithms show additional results 
candle flame 
second video candle flame turned different video textures random play texture different video loops containing different primitive loops 
video loops repeats frames 
repeat frames set primitive loops scheduled different order 
right position frame currently displayed original video clip denoted red bar 
red curves show possible transitions frame original video clip random play texture 
clock 
example shows necessity preservation dynamics cost computation 
input video sequence shows clock swinging pendulum 
considering dynamics forward swinging pendulum match equally backward swinging frame causing unnatural jumps motion 
adding temporal filtering solves problem 
input video hand moves frame 
cost computation video texture reach dead transition earlier video visual jump 
cost computation solves problem increasing probability transition hand comes frame 
flag second video flying flag lowest average cost loop contained video 
video textures created fading cross fading morphing 
cross fading improves quality transition cost small amount blurring 
morphing works better removing jump introducing blur alignment stripe geometrically correct alignment 
wrong alignment causes fold magically disappear transition invisible unsuspecting observer 

second video single transition 
transition hardly visible frames hides entirely 
configuration flames replicates approximately transition hidden high temporal flicker 
portrait 
second video woman posing portrait turned random play video texture transitions 
frames transitions quite similar morphing performs subtle alignment details eye positions hides transitions entirely 
video textures useful replacing static portraits appear web pages 
waterfall 
example waterfall works 
original minute video sequence repeats great deal continuity frames making difficult find unnoticeable transitions 
best result obtained selecting second source clip cross fading frequent transitions averaging performed multiple subsequences resulting video texture original video clip resulting imagery fairly convincing waterfall 
blowing grass 
example video texture 
waterfall sequence original second video blowing grass repeats 
waterfall sequence blurring frames produce acceptable results 
automatic morphing fails find accurate correspondences video frames 
best transitions second clip source creates occasional objectionable blurring video texture played 
extensions section extensions basic idea video textures sound synthesis audio track video texture dimensional video textures view interpolation techniques applied simulate motion motion factorization video frames factored separate parts analyzed synthesized independently video animation video texture modified interactive control 
sound synthesis adding sound video textures relatively straightforward 
simply take sound samples associated frame play back video frames selected rendered mask popping effects multi way cross fading algorithm described section 
resulting sound tracks videos tried waterfall sound natural 
dimensional video textures video textures combined traditional image rendering algorithms view interpolation obtain dimensional video textures 
similar characters demonstrated video view interpolation systems synthetic video textures captured video clips 
portrait created dimensional video texture videos smiling woman taken simultaneously different viewing angles degrees apart 
center camera extract synthesize video texture camera estimate depth map shown 
alternative image modeling technique 
masked background background subtraction clear shot background taken filming began 
generate new frame video animation mapped portion video texture surface rendered novel viewpoint combined flat image background warped correct location algorithm described 
motion factorization certain kinds complex scenes divide original video independently moving parts analyze separately 
kind motion factorization decreases number frame samples necessary synthesize interesting video texture 
interdependencies different parts synthesized frames added supplemental constraints 
simplest form motion factorization divide frame independent regions motion manually automatically 
swings 
example video children swings manually divided halves swing 
parts analyzed synthesized independently recombined final video texture 
video texture significantly superior best video texture generated entire video frame 
balloons 
example developed automatic segmentation algorithm separates original video stream regions move independently 
compute variance pixel time threshold image obtain connected regions motion connected component labeling followed morphological dilation obtain region labels shown color regions 
independent regions analyzed synthesized separately recombined 
motion factorization extended extract independent video video sequence 
instance background subtraction blue screen matting identify connected portions video image change time extract portions foreground elements alpha 
create video sprite factor positional information placing element centroid origin frame 
call registering element 
store velocity sprite frame defined difference unregistered elements centroid positions 
analysis phase distance frames computed linear combination registered elements colors alphas moving directions speeds 
synthesis phase performed utilizing optimal transitions computed analysis adding back stored velocities transitions 
fish 
background subtraction create video sprite fish starting minutes video fish tank 
unfortunately fish uncooperative test subjects frequently visit walls fish tank hard extract scene reflections glass 
source material pieces video fish swimming freely 
requires generalizing cost computation handle possibility multiple dead ends straightforward 
technique fish swims freely dimensional space 
ideally constrain motion example boundaries fish tank 
section describes approaches problem 
video animation visual smoothness criterion generating video add user controlled terms error function order influence selection frames 
simplest form user control interactively select set frames sequence synthesis 
case perform analysis phase optionally pruning list transitions 
synthesis stage recompute probabilities transitions modified form equation takes account distance destination transition set user specified frames pij exp distance trades weight user control smoothness transitions 
runner 
took minutes video runner treadmill starting slow jog gradually speeding fast run 
user moves slider selecting certain region video black region slider synthesis attempts select frames remain region time fairly smooth transitions jump forward backward time 
user control speed runner moving slider back forth runner natural looking transitions different gaits 
expect possible extend type parametric motion control types movements allowing greater control post processing phase video production 
watering 
example took second clip watering pouring water 
central portion video shows water pouring continuous stream video texture 
shorten extend pouring sequence technique runner advancing slider automatically faster slower speed 
mechanism achieve time compression dilation video sequence 
mouse controlled fish 
directly specifying preferred range frames select frames criteria 
example order interactively guide path fish earlier mouse give preference frames fish video sprite certain desired velocity vector 
particular current position fish desired position fish say mouse location vi velocity frame distance function ij ii ij vi vj vj user specified weights ii ij modified image distance metric takes account difference image alpha channels velocity error function 
current implementation proportional angle runner example equation order achieve interactive performance added extra error term ij directly adding term ij re running precomputed cost computation 
turns technique directed movement system trouble finding sequences fly avoid bad transitions 
right larger scale anticipated cost computation required 
compute cost ij ij techniques described section 
unfortunately precomputation possible values practice perform precomputation set different directions discretize user input directions fly choosing precomputed probability table accordingly 
fish tank 
final example show complete fish tank populated artificial fish 
tank includes sets bubbles independently plants small number independently moving fish 
fish scripted follow path siggraph logo techniques described mouse controlled fish 
discussion science fiction short story light days bob shaw describes material called slow glass traps photons coming emits year 
slow glass exposed scenic locations woodland lake placed people walls gives dimensional illusion having scenic view 
video textures partially inspired story share characteristic slow glass differ important ways 
slow glass attempt capture inherent dynamic characteristics scene 
video camera array capture time varying light field approach capturing data play back year prohibitively expensive 
video textures attempt capture inherent characteristics dynamic scene event necessarily capturing stochastically varying detail inherent particular segment time 
video textures potential give artist creative control appearance dynamic events depicting 
capturing wide variety similar looking video periodic quasi periodic user select portions blend smoothly different parameter settings 
video texture analysis synthesis software takes care making transitions smooth creating segments desired duration 
video textures 
motions smooth repetitive quasi repetitive kids swing candle flame balloons runner smiling woman illusion works quite 
complex stochastic phenomena little discernible structure water pouring works 
run trouble phenomena complex highly structured grass blowing wind far failed creating convincing video texture waves beach 
highly structured phenomena full body human motion fail start higher level motion structure analysis 
suggests number important areas better distance metrics 
create video textures need distance metric reliably quantifies perceived discontinuity frame transition 
examples simple distance images 
finding better features distance functions crucial improving quality video textures increasing applicability 
initial promising results applying wavelet distance metric sequences 
improved metric fish example modeling linear combination features learning coefficients hand labeled training transitions 
better blending 
suppress residual visual discontinuities currently blending morphing 
explore techniques allow blending morphing separately different frequency bands space time multiresolution techniques 
maintaining variety 
significant problem generating long infinite sequences video set frames algorithm find optimal paths play series frames 
requires addition controls randomness define parameter penalizes lack variety generated sequences 
parameter enforce frames input sequence played probabilistically vary generated order frames 
better tools creative control 
important area research addition creative control video textures 
alternative interactively controlling parameters video animation specify control points keyframes conventional keyframe animation 
need develop optimization techniques generate smoothly playing video textures obey user supplied constraints 
better video animation control enable generate complex scenes crowds animation controller enhanced include behavioral aspects flocking 
areas remain explored believe video textures provide interesting new medium potential applications ranging simple video portraits realistic video synthesis 
video textures just example general class techniques call video rendering 
re real world video footage manner analogous image rendering achieve degree naturalness hard match traditional computer graphics techniques 
hope spur research field video textures video rendering general ultimately essential part repertoire computer graphics techniques 
bar joseph 
statistical learning multi dimensional textures 
master thesis hebrew university jerusalem june 
beymer 
feature correspondence interleaving shape texture computations 
ieee computer society conference computer vision pattern recognition cvpr pages san francisco california june 
bregler slaney 
video rewrite driving visual speech audio 
computer graphics sig graph pages august 
burt adelson 
multiresolution spline applications image mosaics 
acm transactions graphics october 
chen 
quicktime vr image approach virtual environment navigation 
computer graphics sig graph pages august 
de bonet 
multiresolution sampling procedure analysis synthesis texture images 
computer graphics sig graph pages august 
debevec editors 
image modeling rendering lighting siggraph course august 
debevec taylor malik 
modeling rendering architecture photographs hybrid geometry image approach 
computer graphics siggraph pages august 
efros leung 
texture synthesis nonparametric sampling 
seventh international conference computer vision iccv pages kerkyra greece september 
finkelstein jacobs salesin 
multiresolution video 
proceedings siggraph pages august 
isbn 
held new orleans louisiana 
freeman adelson heeger 
motion movement 
computer graphics proceedings sig graph july 
heeger bergen 
pyramid texture analysis synthesis 
proceedings siggraph pages august 
workshop image modeling rendering stanford university march 
graphics stanford edu workshops ibr 
jacobs finkelstein salesin 
fast multiresolution image querying 
proceedings siggraph pages august 
kaelbling littman moore 
reinforcement learning survey 
journal artificial intelligence research 
kanade narayanan 
virtualized reality constructing virtual worlds real scenes 
ieee multimedia magazine jan march 
levoy hanrahan 
light field rendering 
computer graphics proceedings annual conference series pages proc 
siggraph new orleans august 
acm siggraph 
mcmillan bishop 
plenoptic modeling image rendering system 
computer graphics sig graph pages august 
reality modeling visualization multiple video sequences 
ieee computer graphics applications november 
niyogi adelson 
analyzing recognizing walking figures 
ieee computer society conference computer vision pattern recognition cvpr pages seattle washington june 
lischinski salesin szeliski 
synthesizing realistic facial expressions photographs 
computer graphics siggraph proceedings pages orlando july 
acm siggraph 
polana nelson 
detection recognition periodic nonrigid motion 
international journal computer vision 
pollard view synthesis edge matching transfer 
british conference bmvc southampton england september 
seitz dyer 
view morphing 
computer graphics proceedings annual conference series pages proc 
siggraph new orleans august 
acm siggraph 
seitz dyer 
view invariant analysis cyclic motion 
international journal computer vision december 
shade gortler 
szeliski 
layered depth images 
computer graphics siggraph proceedings pages orlando july 
acm siggraph 
shade lischinski salesin derose snyder 
hierarchical images caching accelerated walkthroughs complex environments 
computer graphics sig graph proceedings pages proc 
siggraph new orleans august 
acm siggraph 
shaw 
light days 
days eyes 
ace books newyork 
published analog various sci fi 

shum szeliski 
construction panoramic mosaics global local alignment 
international journal computer vision february 
smith blinn 
blue screen matting 
computer graphics proceedings annual conference series pages proc 
siggraph new orleans august acm siggraph 
szeliski 
shum 
creating full view panoramic image mosaics texture mapped models 
computer graphics siggraph proceedings pages los angeles august 
acm siggraph 
kajiya 
commodity realtime graphics pc 
computer graphics proceedings annual conference series pages proc 
siggraph new orleans august 
acm siggraph 
