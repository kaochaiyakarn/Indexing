model reduction techniques computing approximately optimal solutions markov decision processes thomas dean robert givan sonia leach department computer science brown university sml cs brown edu www cs brown edu people method solving implicit factored markov decision processes mdps large state spaces 
introduce property state space partitions call ffl homogeneity 
intuitively ffl homogeneous partition groups states behave approximately subset policies 
borrowing model minimization computer aided software verification algorithm takes factored representation mdp ffl computes factored ffl homogeneous partition state space 
partition defines family related mdps mdp state space equal blocks partition transition probabilities approximately original mdp state source block 
formally study families mdps introduce new notion bounded parameter mdp family traditional mdps defined specifying upper lower bounds transition probabilities rewards 
describe algorithms operate find policies approximately optimal respect original mdp 
combination method reducing large implicit mdp possibly smaller ffl homogeneous partition methods selecting actions constitute new approach analyzing large implicit mdp 
advantages new approach provides insight existing algorithms solving implicit mdps provides useful connections automata theory model minimization suggests methods involve varying ffl trade time space specifically terms size corresponding state space solution quality 
markov decision processes mdp provide formal basis representing planning problems involving uncertainty boutilier exist algorithms solving mdps polynomial size state space puterman interested mdps states specified implicitly set state variables 
mdps explicit state spaces exponential number state variables typically amenable direct solution traditional methods due size explicit state space 
possible represent mdps space polylog size state space factoring state transition distribution reward function sets smaller functions 
unfortunately efficiency representation need translate efficient means computing solutions 
cases dependency information implicit factored representation speed computation optimal policy boutilier dearden boutilier lin dean resulting computational savings explained terms finding homogeneous partition state space partition states block transition probability blocks 
partition induces smaller explicit mdp states blocks partition smaller mdp reduced model equivalent original mdp defined sense 
possible take mdp factored form find smallest reduced model number partition splitting operations polynomial size resulting model splitting operations general propositional logic operations np hard heuristically effective 
states reduced process correspond groups states original process behave policies 
original reduced processes equivalent sense yield solutions optimal policies state values 
basic idea computing equivalent reduced pro cesses origins automata theory hartmanis stearns stochastic processes kemeny snell surfaced model checking computer aided verification burch lee yannakakis building lee yannakakis shown dean givan existing algorithms asymptotically equivalent constructing minimal reduced mdp solving mdp traditional methods operate flat representations 
minimal model may exponentially larger original compact mdp 
response problem introduces concept ffl homogeneous partition state space 
relaxation concept homogeneous partition allows states block transition different probabilities blocks long different probabilities ffl 
ffl generally ffl homogeneous partitions smaller smaller smallest homogeneous partition 
discuss approximate model reduction algorithm finding ffl homogeneous partition factored mdp generally smaller larger smallest homogeneous partition 
ffl homogeneous partition induces family explicit mdps state space equal blocks partition transition probabilities block nearly identical underlying states 
formalize analyze families introduce new concept bounded parameter mdp mdp transition rewards point values closed intervals 
givan describe algorithms operate produce bounds value functions compute approximately optimal policies summarize methods 
resulting bounds policies apply original implicit mdp 
bounded parameter mdps generalize traditional exact mdps related constructs aggregation methods solving mdps schweitzer schweitzer bertsekas casta non introduced represent approximate aggregations interesting right discussed detail givan model reduction algorithms bounded parameter mdp solution methods combined find approximately optimal solutions large factored mdps varying ffl trade time space solution quality 
remainder organized follows 
section give overview algorithms representations discuss fit 
section reviews traditional factored mdps describes generalization bounded parameter mdps 
section describes algorithm ffl reducing mdp possibly smaller explicit mdp ffl 
section summarizes methods policy selection addresses applicability selected policies mdp ffl reduces analyzed 
remaining sections summarize preliminary experimental results discuss related 
overview survey relate basic mathematical objects operations defined 
start markov decision process mdp compute optimal near optimal policy 
depicts mdp directed graph corresponding state transition diagram optimal policy traditional value iteration 
assume state space state transition graph quite large 
assume states encoded terms state variables represent aspects state assignment values state variables constitutes complete description state 
assume factored representation form bayesian network depicted state variables fa dg 
speak operations involving practice operations performed symbolically factored representation manipulate sets states represented formulas involving state variables 
depict unique smallest homogeneous partition state space blocks represented respectively implicitly explicitly 
process finding partition called exact model minimization 
factored model minimization involves manipulating boolean formulas np hard heuristic manipulation may rarely achieve worst case 
smallest homogeneous partition may exponentially large seek reduction cost approximately optimal solutions finding smaller ffl homogeneous partition depicted blocks represented respectively implicitly explicitly 
ffl homogeneous partition create bounded parameter mdp shown notated treat partition blocks aggregate states summarize know transitions blocks terms closed real intervals describe variation block transition probabilities blocks action pair blocks record upper lower bounds probability starting state block block 
naturally represents family mdps pes opt pes opt factorization value iteration interval value iteration symbolic symbolic reduction reduction interval summarization reduction reduction basic objects operations described depicts state transition diagram mdp single action shown depicts bayesian network example symbolic representation compactly encoding depict smallest homogeneous partition respectively implicit symbolic explicit forms similarly depict ffl homogeneous partition implicit explicit forms represents bounded parameter mdp summarizing variations ffl homogeneous partition depict particular exact mdps family mdps defined analysis algorithms extract particular mdps intuitive characterizations 
pessimistic model pes mdp yields lowest optimal value state 
theorem pes defined state lower bound optimal policy mdp original state corresponding block 
similarly optimistic model opt best value function gives policy summary give lower upper bounds optimal value function really interested guaranteed achieve lower bound 
armed high level overview serve road map descend details 
markov decision processes exact markov decision processes exact markov decision process tuple set states set actions reward function maps state real value assigns probability state transition action ff pq ff pr qjx ff random variables denoting respectively state action time policy mapping states actions value function policy maps states expected discounted cumulative reward start state act policy fl pq fl discount rate fl 
puterman bounded parameter mdps bounded parameter mdp tuple mdps analogous mdp yield closed real intervals real values 
action ff states ff closed real intervals form real numbers 
convenience define note original generally family 
algorithms compute policies value bounds soundly applied original techniques results easily generalize general reward functions 
adopt general formulation simplify presentation 
real valued functions give lower upper bounds intervals likewise ensure admits formed transition functions require action ff state ff ff 
defines set exact mdps fm mg iff satisfy bounds provided respectively 
write bounding optimal policy specific value state mean providing upper lower bound corresponding state value entire family mdps fm thorough treatment please see givan factored representations remainder bayesian networks pearl encode implicit factored representations methods apply factored representations probabilistic strips operators kushmerick fx xm set state variables 
assume variables boolean refer fluents 
represent state time vector hx denotes value ith state variable time state transition probabilities represented bayes networks 
stage temporal bayesian network tbn directed acyclic graph consisting sets variables fx fx directed arcs indicating dependence allowed variables set variables second set variables second set 
dean kanazawa state transition probabilities factored pr jx pr parents denotes parents tbn conditional probability distributions pr represented conditional probability table decision tree choose boutilier enhance tbn representation include actions reward functions resulting graph called influence diagram howard matheson illustrates factored representation state variables fp sg describes transition probabilities rewards particular action 
factored form transition probabilities simplify remainder assume reward bounds tight generalization nontrivial bounds rewards straightforward 
pr pr pr factored representation state variables reward function ffl homogeneous partitions mdp described smallest exact homogeneous partition ffl smaller partition ffl 
pr jx pr jp delta pr delta pr js case hp model reduction methods section describe family algorithms take input mdp real value ffl compute bounded parameter mdp closed real interval extent equal ffl 
states correspond blocks partition state space states block behave approximately respect blocks 
upper lower bounds correspond bounds transition probabilities blocks states grouped 
define property sought desired state space partition 
fb partition definition partition fb bn state space mdp property ffl approximate stochastic bisimulation homogeneity respect ffl ffl ff jr gamma ffl fi fi fi pr ff gamma qr ff fi fi fi ffl conciseness say ffl homogeneous 
shows ffl homogeneous partitions mdp described 
explain construct ffl homogeneous partition 
describe relationship ffl homogeneous partition particular simple partition immediate reward 
definition partition refinement partition block subset block case say coarser clustering definition immediate reward partition partition states block reward 
definition partition ffl uniform respect function states block jf gamma ffl 
ffl homogeneous partition refinement ffl uniform clustering respect reward immediate reward partition 
algorithm starts constructing ffl uniform reward clustering immediate reward partition 
refine initial partition splitting blocks repeatedly achieve ffl homogeneity 
decide blocks candidates splitting local property blocks ffl homogenous partition definition say block partition ffl stable respect block iff actions ff states fi fi fi fi fi pr ff gamma qr ff fi fi fi fi fi ffl say ffl stable ffl stable respect block action definitions immediately imply partition ffl homogenous iff block partition ffl stable 
model ffl reduction algorithm simply checks block ffl stability splitting unstable blocks quiescence unstable blocks left split 
specifically block unstable respect block replace partition set sub blocks case ffl ffl approximate stochastic bisimulation homogeneity closely related substitution property finite automata developed hartmanis stearns notion markov chains kemeny snell 
may clusterings currently choose coarsest arbitrarily 
term splitting refers process block partition divided sub blocks obtain refinement original partition 
may choice discussed 
clustering sub blocks behave approximately 
ffl smallest clusterings 
maximal sub block ffl stable respect note times blocks partition represented factored form dnf formulas state variables 
block splitting operation manipulates factored representations explicit states 
method extension markov decision processes deterministic model reduction algorithm lee yannakakis ffl description fully defines block splitting operation exists unique set maximal stable sub blocks 
furthermore case algorithm finds unique smallest homogeneous partition independent order unstable blocks split 
call partition minimal model term refer mdp derived partition treating blocks states 
ffl may choose possible ways splitting shown example 
depicts block blocks states transition states action ff 
partition sub blocks fc states sub block transition probabilities respect ff building approximate model replace blocks blocks possible construct examples appropriate choice splits blocks induced require clustering selected refinement ffl uniform clustering coarse possible 
clustering decisions arbitrarily algorithm guarantee finding smallest ffl homogenous partition ffl partition ffl smaller small result additionally sensitive order unstable blocks split splitting ffl unstable block may ffl stable 
partition ffl ffl theorem partition larger unique smallest homogenous partition 
theorem ffl partition model ffl reduction clustering technique coarser larger minimal model 
theorem ffl ffl smallest ffl homogenous partition larger smallest ffl homogenous partition 
model ffl reduction algorithm augmented impractical search clustering decisions find smallest partitions 
theorem bound mdp smallest ffl homogenous partition polynomial size problem determining exists ffl homogenous partition size bound np complete 
theorems imply ffl help methods may sensitive just ffl choose necessarily heuristic 
currently implementation uses greedy clustering algorithm hope incorporate sophisticated techniques learning pattern recognition literature find smaller clustering locally split operation guarantee smaller final partition 
ffl homogenous partition mdp induces corresponding mp straightforward manner 
states mp just blocks actions reward transition functions defined give intervals bounding possible reward block transition probabilities block blocks action ff min max fb ff min ff max ff methods section give intervals bounding optimal value state mp select policy guarantees achieving lower bound value state 
theorem implies value bounds apply states achieved exceeded corresponding policy note function blocks extended function states state return value assigned block falls 
manner interpret value bounds policies mp bounds policies theorem mdp ffl homogenous partition states sound optimal policy specific value bounds mp apply extending policy value functions state space 
interval value iteration developed variant value iteration algorithm computing optimal policy exact mdps bellman operates bounded parameter mdps 
represents family mdps fm implying degree uncertainty mdp family actions taken 
specific value policy start state window possible values policy different mdps family 
similarly state window possible optimal values mdps family fm algorithm compute bounds policy specific value functions bounds optimal value function 
shown extract bounds specific optimal policy guaranteed achieve lower bound value actual mdp family fm defined 
call policy pes pessimistic optimal policy 
call algorithm interval value iteration iv optimal values iv policy specific values algorithm fact knew rank ordering states values easily able select mdp family fm minimized maximized values compute values mdp 
don know rank ordering states values algorithm uses ordering current estimates values select minimizing maximizing mdp family performs iteration standard value iteration mdp get new value estimates 
new estimates select new minimizing maximizing mdp iteration forth 
bounded parameter mdps interesting objects explore greater length givan prove results iv theorem specific policy iv converges state lower upper bounds value state mdps fm theorem iv converges state lower upper bounds optimal value state mdps fm theorem policy pes extracted assuming states actual values iv converged lower bounds policy specific lower bound iv equal non policy specific iv converged lower bound 
policy higher policy specific lower bound 
related discussion combines number techniques address problem solving factored mdps large states spaces 
definition ffl homogeneity model reduction algorithms finding ffl homogeneous partitions new draw techniques automata theory symbolic model checking 
burch standard symbolic model checking computer aided design 
reduction algorithm analysis motivated lee yannakakis bouajjani notion bounded parameter mdp new related aggregation techniques speed convergence iterative algorithms solving exact mdps 
bertsekas casta non notion aggregated markov chains consider grouping states approximately residuals difference estimated value function iteration value iteration 
methods manipulating factored representations mdps largely borrowed boutilier provides iterative algorithm finding optimal solutions factored mdps 
dean givan describe model minimization algorithm solving factored mdps asymptotically equivalent algorithm boutilier boutilier dearden extend boutilier compute approximate solutions factored mdps associating upper lower bounds symbolically represented blocks states 
states aggregated approximately value behave approximately behavior set policies turns states nearly value nearly dynamics 
significant differences approximation techniques boutilier dearden 
partition state space perform interval value iteration resulting bounded parameter mdp boutilier dearden repeatedly partition state space 
second fixed ffl computing partition boutilier dearden bertsekas casta non repartition state space necessary iteration basis current residuals effectively different ffl different times different portions state space 
despite differences conjecture algorithms perform asymptotically 
practically speaking expect cases repeatedly adaptively computing partitions may provide better performance cases performing partition may result computational advantage 
written prototype implementation model reduction algorithms described evaluation algorithms ivi referred 
able demonstrate substantial reductions model size increasing reductions increasing ffl 
mdps reducing toy problems expressly algorithm look empirical results questionable value 
research necessary techniques adequate handle real world large scale planning problem order give convincing empirical data 
believe formalizing notions approximately similar behavior approximately equivalent models families closely related mdps mathematical entities corresponding ffl homogeneous partitions ffl reductions mdps provide valuable insight factored mdps prospects solving efficiently 
bellman bellman richard 
dynamic programming 
princeton university press 
bertsekas casta non bertsekas casta non 
adaptive aggregation infinite horizon dynamic programming 
ieee transactions automatic control 
bouajjani bouajjani fernandez halbwachs raymond 
minimal state graph generation 
science computer programming 
boutilier dearden boutilier craig dearden richard 
abstractions decision theoretic planning time constraints 
proceedings aaai 
aaai 

boutilier boutilier craig dean thomas hanks steve 
planning uncertainty structural assumptions computational leverage 
proceedings third european workshop planning 
boutilier boutilier craig dearden richard goldszmidt moises 
exploiting structure policy construction 
proceedings ijcai 


burch burch jerry clarke edmund long david mcmillan kenneth dill david 
symbolic model checking sequential circuit verification 
ieee transactions computer aided design 
dean givan dean thomas givan robert 
model minimization markov decision processes 
proceedings aaai 
aaai 
dean kanazawa dean thomas kanazawa 
model reasoning persistence causation 
computational intelligence 
dean dean thomas kaelbling leslie kirman jak nicholson ann 
planning time constraints stochastic domains 
artificial intelligence 
givan givan robert leach sonia dean thomas 
bounded parameter markov decision processes 
technical report cs brown university providence rhode island 
hartmanis stearns hartmanis stearns 
algebraic structure theory sequential machines 
prenticehall englewood cliffs howard matheson howard ronald matheson james 
influence diagrams 
howard ronald matheson james editors principles applications decision analysis 
strategic decisions group menlo park ca 
howard howard ronald 
dynamic programming markov processes 
mit press cambridge massachusetts 
kemeny snell kemeny snell 
finite markov chains 
van nostrand new york 
kushmerick kushmerick nicholas hanks steve weld daniel 
algorithm probabilistic planning 
artificial intelligence 
lee yannakakis lee david yannakakis 
online minimization transition systems 
proceedings th annual acm symposium theory computing 
lin dean lin hong dean thomas 
generating optimal policies highlevel plans conditional branches loops 
proceedings third european workshop planning 

pearl pearl judea 
probabilistic reasoning intelligent systems networks plausible inference 
morgan kaufmann san francisco california 
puterman puterman martin 
markov decision processes 
john wiley sons new york 
schweitzer schweitzer paul puterman martin kyle 
iterative aggregation disaggregation procedures discounted semi markov reward processes 
operations research 
schweitzer schweitzer paul 
aggregation methods large markov chains 
editors computer performance reliability 
elsevier amsterdam holland 

