behavior classification adversarial environments patrick riley manuela veloso veloso cs cmu edu computer science department carnegie mellon university pittsburgh pa currently visiting professor massachusetts institute technology boston ma 
order robotic systems successful domains agents possibly interfering accomplishing goals agents able adapt opponents behavior 
quickly agents respond new situation better perform 
approach doing adaptation relies classification current adversary predefined adversary classes 
feature extraction windowing technique useful overly complicated features 
order take account spatial locality topological differences previously developed similarity metric 
feature extraction classification steps fully implemented domain simulated robotic soccer experimental results 
keywords group behaviors adversary classification adaptation order robotic systems successful complex domains able adapt environment especially current behavior agents 
adaptation occur levels strategy individual reactive behaviors team strategy 
highly complex domains clear optimal policy agents adapt quickly effectively perform better 
consider complex domains enormous possibly continuous state action spaces 
consider dynamic environments limited time reason agent choose action 
interested domains noisy perceptions actions 
reinforcement learning common technique having agent automatically discover optimal policy 
discussed reinforcement learning results poor performance types domains interested 
reinforcement learning generally require trying possible strategy agent times 
able adapt faster 
systems carmel markovitch succesfully adapt building models opponents case finite automata compute best strategy opponent :10.1.1.50.1722:10.1.1.50.1722
environment consider riley veloso simple person repeated matrix game 
clear sort technique scale sort complex environments mentioned propose techniques needed environments 
approach sen allows agents learn cooperate agents willing cooperate simultaneously avoid exploitation hostile agents 
environment clear action take agent hostile 
complex domains may possible strategies deal opposing agents 
system propose quite different 
hypothesis underlying research effective adaptation done analogy previous opponents 
noting similarities style behavior agent team employ effective strategy behavior 
partially inspired human behavior 
human beings quite sort adaptation interested 
sports players carefully watch opponents play change strategy opponents actions 
better understand ability able map autonomous agents 
long term goal research aspects 
abstracting useful features raw sensor data world state available agents 
approach feature extraction complex domains introduced section 
constructing adversary classes information features 
adversary classes embody strategic information type adversary behaves 
closely related ramoni done unsupervised bayesian clustering world dynamics 
technique clusters formed describe general features going world 
example describe cluster cases blue team won despite large mass deficit 
research creating adversary classes done averaging observations priori distinctions see section 

matching observed current adversary adversary classes 
gives classification current adversary predefined classes 
step addressed section 
affecting effective change behavior classification 
mapping adversary classes strategies agents may 
final change behavior goal classification process 
aspects may analyzed absence change strategy step addressed 
research focuses abstracting features classifying adversary numbers 
behavior classification test domain software test domain research simulated robotic soccer specifically soccer server system robot world cup initiative international ai robotics research initiative 
soccer server system server client system simulates soccer discrete fashion 
clients communicate standard network protocol defined actions 
server keeps track current state world executes actions clients request periodically sends agent noisy incomplete information world 
agents receive noisy information direction distance objects field ball players goals information provided objects field vision agent 
soccer server system allows agent connect coach client global view world action send short messages players ball play 
ideal sort classification described 
coach classify global information communicate information active players 
classification provides limited effective language strategy communication 
previously worked classification coach agent fusing partial information agents order classify adversary 
agents opportunity act times second 
action opportunities known cycle 
visual information sent times second 
standard minute game gives action opportunities receipts visual information 
impractical attempt classify adversary time new visual information arrives 
intuitively features capture adversary performance time dependent 
need consider multiple cycles classifying adversary 
learning just raw world data infeasible 
estimate size state space soccer server 
unreasonable expect performance learning classification methods series inputs size providing abstractions 
need extract relevant features enormous state space 
algorithms described implemented successful simulated robotic soccer team cmunited champion robocup 
decision tree learning done 
assume values discretized decimal place 
players properties position position facing angle neck angle velocity velocity 
ball properties position position velocity velocity riley veloso time get new world state time time epoch length return fig 

pseudo code observation feature extraction trying learn complex domains features usually abstracted raw data 
impractical revealing expect learning algorithm effectively decode sensor information model doing known 
extracting relevant features sensor data learning feasible 
step feature extraction taken somewhat lightly 
working complex domain trying learn high level strategy feature extraction critical complicated 
windowing reduce complexity features remove time sequencing feature data 
removing time sequencing data effective complex domains text classification bag words approach music analysis generation 
refer features type observations 
observation occurs fixed length time known window length 
formally observation tuple hd fi 
data results observation 
internal state updating function thetai thetai represents state world 
internal state capture time dependent features see 
discrete cycle function called update pseudo code indicating observation fig 

definition observation slightly strict 
updating function indicator event 
event occurs fact occurred recorded data structure time occurrence recorded 
example say events type looking 
occurs time time resulting data structure identical data structure produced occurred time time 
note observation keeps internal state allows detect features involve sequences events 
example observation event consists event type followed immediately event type passing shooting simulated robotic soccer behavior classification require sort description 
internal state may record time information data structure may 
time window data structure returned internal state discarded 
observations data structures observations built data structure called 
division field small geographic regions 
designed record occurrence certain events specific geographic areas 
observation recorded adding count geographic areas 
counts geographic areas represent times specified type event pass shot occurred region 
experiments performed dimensions theta longer dimension longer dimension field 
detailed observations observations classification experiments 
ffl ball position cycle ball position stored ffl opponent position cycle opponent position stored opponent number ffl opponent passing observation records opponent passes 
bins pass goes marked 
ffl opponent dribbling observation records opponent 
bins opponent goes dribbling marked 
ffl opponent shooting observation records shots taken opponents 
example demonstrate structure observations examine ball position observation closely 
data structure just described section 
internal state updating function takes current adds count whichever geographic region ball currently returns updated result ball position observation pictured fig 

field divided rectangular regions 
ball moves left right cycles part agent adds counts geographic regions resulting counts shown part 
variety numerical values provided observations described order allow reproduce results 
software developed research available www cs cmu edu adv class html riley veloso fig 

example ball position observation construction classification goal observations classify current adversary 
predefined set adversary types cn determine class current adversary fits 
conceptual level adversary classes represent strategic qualities adversary improve agent team performance 
classes provide compact way agents describe adversary 
framework adversary class set target configurations observations 
example adversary class may consist partly target configuration opponent dribbling indicates opponent sides 
experimental setup issue creating effective strategy change addressed research 
important verify useful information obtained sort windowing approach feature extraction 
discussed section coach agent global view actions limited communication 
version software strategic change classification 
consequently coach entirely passive 
allows coach look logfile previously played game exactly game currently progress 
logfiles games robocup robocup data sets 
algorithms data structures developed analyzing robocup logfiles completed analysis robocup logfiles done 
generating adversary classes data sets adversary class created team 
class created observing team data set 
underlying assumption strategy team vary significantly course competition 
known exceptions behavior classification especially robocup teams significant changes competition 
instances observation averaged 
averaged averaging counts geographic region 
creating adversary classes goal correctly identify teams playing observations 
robocup teams making accuracy random guessing 
robocup teams making accuracy random guessing 
window length varied cycles cycles 
cycles regular length minute game gives windows game 
difference amounts data extremes seen results section 
order compare observations current adversary adversary classes notion similarity different values observation 
observations built data structure need similarity metric 
previously developed metric take account spatial locality differences observations 
classification approach classification simple nearest neighbor approach 
performed quite poorly doing better random 
problem perceived nearest neighbor approach small amount information available making classification decision 
generating similarity distance instances observations adversary class single real number type observation types case :10.1.1.50.1722
led changes decision trees deal large amount data target configurations specific adversary class 
consequently target configurations generated specific team classification occur similarities target configurations 
similarities fed decision tree learning features split 
distinguishing class best feature distinguish may similarity target configuration class similarity target configuration affect adversary type consider classes rectangular regions plane necessarily axis parallel centers axis 
just measuring similarity centers regions specifically team linkoping university nice strategy editor design select strategies game 
teams significant revisions software competition seeing opponents played riley veloso window length robocup robocup data window length robocup robocup normalized amount data fig 

classification accuracy note accuracy random guessing allows split plane lines parallel axis 
centers allow split plane directions 
decision trees allow capture disjunctive concepts 
example team may modes behavior defensive offensive goal kicks 
comparing single target configuration allow effectively capture different modes 
having greater variety configurations allows express adversary type may different distinct modes behavior 
interested varying window length affects classification accuracy 
short window presumably allow agent time capture occurrence important events 
long window negatively affects goal quick adaptation adversary causing unnecessary smoothing features 
results experiments data generate target configurations 
time window observed similarities target configurations recorded 
data training decision tree reserved testing 
accuracy rates reported testing data 
order better ascertain accuracy decision trees generated window length different randomly selected training test data sets 
results shown fig 

results somewhat surprising smallest windows highest accuracy rates 
expected small window allow important features captured 
notice window length decreases amount data available decision tree training increases increasing data available training greatly increases accuracy decision tree training 
trained decision trees window lengths reduced data testing sets 
data sets window behavior classification lengths reduced size data set window length 
data sets reduced uniformly sense data needed reduced factor consecutive windows kept 
results trials shown fig 

error curve bit expected smaller epochs performing slightly worse 
accuracies may successful points note ffl classes distinguished accuracy guessing 
accuracy order magnitude better guessing 
ffl data sets real data sets 
logfiles robocup competitions result people working produce interesting teams reflect great variety techniques strategies 
ffl class named team data sets 
teams play similarly requiring classification methods distinguish 
refined method creating adversary classes higher classification accuracy 
difference accuracy trends epoch length points interesting tradeoff windowing approach 
smaller windows training data get probably improving accuracy 
small window means necessarily time consuming events rarely observed occur perfectly inside window 
small window give higher random fluctuation behaviors 
main contributions research ffl windowing approach extracting useful features complex domains 
ffl successful classification method decision tree learning 
ffl demonstration approach classification effective particular complex dynamic domain 
indicated research addresses part problem adversary adaptation 
example research adversary class generated named team agents 
creation adversary classes playing style solely priori team distinctions suggesting clustering approach 
understanding map adversary classes strategy changes requires greater understanding different strategies agent team may employ 
hidden markov models updating function observations promising creating complex reliable observations 
hidden markov models successfully recognizing simple behaviors robotic soccer 
riley veloso decision trees produce classifications gave fairly results having classification method indicates adversary matches classes helpful 
statistically machine learning algorithms produce kind information 
way truly novel adversaries recognized adversaries features adversary classes 
described general method adapting adversaries complex domains 
explored pieces approach decision trees final classification step 
experimental results system domain simulated robotic soccer 
hope approach adversary adaptation developed tested improved 

carmel markovitch 
opponent modeling multi agent systems 
weiss sen editors adaptation learning multi agent systems lecture notes artificial intelligence pages 
ijcai workshop springer 

han veloso 
automated robot behavior recognition applied robotic soccer 
proceedings ijcai workshop team behaviors plan recognition 


learning multi robot systems 
weiss sen editors adaptation learning multi agent systems lecture notes artificial intelligence pages 
ijcai workshop springer 

noda matsubara frank 
soccer server tool research multiagent systems 
applied artificial intelligence 
date description ci etl go jp noda soccer server index html 

quinlan 
programs machine learning 
morgan kaufmann san mateo ca 

ramoni sebastiani cohen warwick davis 
bayesian clustering dynamics 
technical report kmi tr knowledge media institute open university united mk aa february 

riley 
classifying adversarial behaviors dynamic inaccessible multiagent environment 
technical report cmu cs carnegie mellon university 

sen 
reciprocity adapt 
weiss sen editors adaptation learning multi agent systems lecture notes artificial intelligence pages 
ijcai workshop springer 

stone veloso riley 
cmunited champion simulator team 
asada kitano editors robocup robot soccer world cup ii 
springer verlag berlin 

thom 
learning models interactive melodic improvisation 
international conference computer music china october 
