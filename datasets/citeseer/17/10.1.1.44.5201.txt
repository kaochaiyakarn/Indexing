stochastic calculus general distributions priami dipartimento di informatica universit di pisa corso italia pisa italy mail priami di unipi study extend stochastic calculus allowing general probabilistic distributions occur prefixes 
show additional information needed labels transitions states systems derive enabling relation transitions 
enabling compute residual life times parallel activities immediately selected enabled 
policy residual life times computed enabling memory introduced stochastic petri nets implemented mechanism start 
researchers advocate need integrating behavioural performance analysis early stages design complex systems 
problem challenge computer science 
widespread dissemination distributed systems paradigm mobile computing integration essential 
fact design error affects performance constraints may cause re design system 
performance evaluation delayed actual implementation available unacceptably high extra costs show 
reason calls integration concerns level maturity behavioural analysis 
formal models available established theories petri nets event structures process algebras 
mobile agents treated formally calculi calculus plain chocs 
hand performance analysis essentially experience analysts 
model system apply stochastic theory derive performance measures 
major drawback exists way formally prove equivalence model system analyzed 
framework specification system implemented directly model performance evaluation guarantees correspondence system performance model construction 
literature attempts extend models concurrency quantitative information temporal probabilistic extensions promising approach stochastic extensions 
results appeared field petri nets stochastic extensions 
years stochastic extensions process algebras considered overcome lack simple compositionality methods petri nets 
calculus stochastically extended cope performance reliability analysis mobile processes yielding stochastic calculus short 
priami stochastic extensions process algebra field assume transitions exponential distributions 
consequence transition systems directly mapped continuous time markov chains 
performance evaluation carried standard numerical techniques representation system formal verification behavioural properties 
unfortunately phenomena arise practice naturally described distributions 
consider instance routing message network 
transfer message adjacent nodes exposes exponential delay routing may 
furthermore industrial environment calls general distributions especially areas workflow models robot systems atm networks 
extend stochastic calculus cope general distributions 
start proved operational semantics calculus transitions labelled encodings deduction trees 
rich labels allow easily derive enabling relation transitions computation sequence transitions simply looking transitions 
relation complement concurrency relation computation 
truly concurrent information compute firing distributions concurrent transitions 
roughly speaking distribution transition influenced transitions fired states enabled 
note influencing transitions turns concurrent considered 
policy called enabling memory discipline 
adding structure states transition systems 
due enriched labels proved transition systems need modification states remain correspondence states original calculus 
extension downward compatible sense ignoring probabilistic distributions recovers classical early interleaving semantics calculus 
briefly recall similar 
stochastic extension bundle event structures phase type distributions 
authors process algebra semantics defined terms stochastic event structures 
stochastic extension lotos distributions limited exponential ones restriction knowing top level synchronizations imposed 
deal general distributions 
approaches able naturally cope mobility calculus 
organized follows 
section recall basic concepts notation stochastic calculus general distributions considered 
section shows derive enabling relation transitions process simply looking labels 
section information provided enabling relation release memoryless property treat general 
section give concluding remarks 
generalized stochastic calculus section recall stochastic calculus releasing hypothesis exponential distributions 
definition countable infinite set names metavariables 
assume set agent identifiers ranged stochastic calculus general distributions set pdf continuous probabilistic distributions ranged 
processes denoted built names syntax jp jp probabilistic distribution firing prefix isolation 
may input xy output subject object silent moves 
order precedence operators listed left right 
trailing omitted 
prefix activity process perform 
activity wait delay deltat taken distribution actual completion 
input prefix binds name prefixed process intuitively name received link named output prefix xy bind name sent silent prefix denotes action invisible external observer system 
operator acts static binder name process prefixes 
unique name different external names 
matching operator process activated process qjr execute asynchronously activities perform invisible transitions components communicate ccs style 
distribution communication reflects slower participant product distribution function partners 
process may behave action completed determines component selected discarded 
difference operator classical process algebras selection mechanism probabilistic choice nondeterministic 
definition constants denotes sequence 
agent identifier unique defining equation form distinct fn fy see definition free names fn 
component activities denoted called action silent moves input xy free output bound output 
note distinct metavariable prefixes 
recall notion free names fn bound names bn names fn bn label 
kind fn bn silent xy input free output fx yg bound output fxg fyg functions fn bn extended obvious way processes 
assume structural congruence processes defined congruence satisfying clauses ff equivalent differ choice bound names fn fn fn 
priami note associative commutative avoid systems 
commutativity associativity easily recovered carry behavioural analysis dropping tags jj labels yielding classical interleaving semantics 
call variant gamma 
transition differs replaced structurally congruent processes ff converted name bound includes scope 
consider instance transition xa gamma 

variants xb gamma 

dynamic behaviour processes determined race condition 
activities enabled attempt proceed fastest succeeds 
fastest activity different successive attempts durations expressed random variables 
continuity probabilistic distributions ensures probability activities simultaneously zero 
defining operational semantics generalized discuss assign distributions synchronizations 
distributions partners continuous random variables distribution respectively 
distribution synchronization distribution impose reflect speed slower partner 
usual assume parallel processes independently decide actions fire 
distribution lie interval delta choice differs pepa line approaches 
instance consider process stage erlang distributions parameters respectively 
recall stage erlang distribution function gamma te gammat gamma gammat corresponding density probability function te gammat distribution synchronization delta gamma te gammat gamma gammat gamma te gamma gamma gamma gamma gammat gamma gamma gamma operational semantics early operational semantics generalized defined sos style labels transitions proof terms contain encodings portions deduction trees 
definition fjj jj set theta proof terms metavariable elements jj iff xy vice versa 
function defined jj function defined jj intuitive meaning tag jj jj corresponding transition fired sequential component left right parallel composition 
similarly tag stochastic calculus general distributions says nondeterministic choice resolved favour left right alternative 
note tags jj labels allow distinguish transitions exiting processes 
early finite branching semantics calculus need notion routed substitution 
intuitively substitutes free occurrences name sequential component term identified argument 
argument encoding syntactic address sub term 
precisely proof term 
recall substitution function oe identity 
oe xoe names write fy xg oe 
oe denotes agent obtained simultaneously substituting zoe free occurrence change bound names avoid captures 
definition ffl empty string processes 
routed substitution yg inductively defined follows 
ffl yg yg ffl jq fw yg jq fw yg yg jq jj yg jj tags jj proof part actions identify position sequential component fired transition 
fact sub processes composed parallel composition operators acts independently 
reason ignore sequential operator definition 
fp gamma 
ng set transitions exiting note characterized syntactically inducing structure collecting prefix enabled 
similar definition 
proved transition system set 
continuous random variable distribution abuse notation write mean gamma 

report finite branching early transition system tab 
gamma 
auxiliary relation defined tab 

auxiliary relation essentially proved transition system calculus prefixes replaced pairs standard actions probabilistic distributions 
note rules communications update distributions discussion previous subsection 
furthermore com close symmetric rules obvious 
recall transition rule axiom stands variants 
note calculus different outputs free bound output 
output process algebra 
bound output originated rule open sending name channel object name public vanishing restriction 
wants communicate private name sub term rule close 
restores static binder dropped premise open 
restricts pdf exponential distributions tab 
coincide premise rules 
consequence side conditions reduce line 
priami act gamma 
ide pf xg gamma 
gamma 
par gamma 
jq jj gamma 
jq bn fn sum gamma 
gamma 
par gamma 
qjp jj gamma 
qjp bn fn sum gamma 
gamma 
res gamma 
gamma 
open xy gamma 
gamma 
com xy fp gamma 
fq gamma 
jq xy jj fp deltaf gamma 
jq fy zg close fp gamma 
fq gamma 
jq xy jj fp deltaf gamma 
jq fy zg fn table auxiliary transition relation generalized 
routed substitutions allow delay instantiation names actual relation gamma 
collected context input occurred identify names called active modify behaviour process 
name active denotes strong early bisimulation 
restrict attention finite state systems syntactically characterized avoiding presence recursive definitions scope parallel compositions decidable 
furthermore early bisimilarity preserved input action instantiates placeholder active names plus new name construction preserves qualitative properties systems 
denote predicate active new function returns name assuming names totally ordered 
effective definition new see 
rules tab 
update distributions transitions correspondence branching points 
note rule br assume random variable distribution 
proposition shows compute 
define proved computations require fresh 
intuitively fresh computation names exported bound output imported input preceding transitions 
constructive operational definition fresh computations see 
stochastic calculus general distributions fbr gamma 
xw gamma 
fw yg ae new fbr gamma 
gamma 
fw yg ae new fbr gamma 
gamma 
input bound output table early proved transition system generalized 
definition gamma 
transition 
source transition target 
proved computation sequence transitions gamma 
gamma 
starting target transition coincides source 
range proved computations 
notions source target extended obvious way computations 
computation gamma 
gamma 
fresh xa fn case say name introduced consider fresh computations omit adjective fresh 
probabilities show compute useful probabilities distributions transitions 
start probability occur transition 
proposition probability gamma 
delta gamma dt proof 
race condition probability gamma 
occur 
compute probability consider conditional probability distribution independence variables gamma priami probability gamma 
continuous version theorem total probability delta gamma dt consider instance process gamma te gamma gamma gamma stage erlang distribution parameter gamma gamma exponential distribution rate 
probability density function te gamma probability transition occur te gamma gamma dt te gamma dt gamma gamma gamma probability density function gamma probability transition gamma te gamma gamma dt te gamma dt gamma dt gamma gamma compute distribution continuous random variable describes length time interval associated transition gamma 
proposition distribution random variables describing time interval associated gamma 
delta gamma dx delta gamma dx proof 
definition distribution function continuous analog bayes rule delta dx delta dx write independence variables obtain gamma thesis follows 
consider previous example 
distribution transition te gamma dt te gamma dt gamma gamma stochastic calculus general distributions distribution transition te gamma gamma dt te gamma gamma dt gamma gamma gamma te gamma gamma gamma introduce notion apparent rate action process 
rate captured external observer system register actions occurrence frequency 
proposition apparent rate action delta gamma dx proof 
apparent rate statement written proposition delta gamma dx consider process previous examples stage distribution parameters 
recall stage distribution function gamma gamma gamma gamma gamma corresponding probability density function gamma gamma gamma gamma gamma gamma gammat gamma gamma gammat proposition apparent rate te gamma gamma gamma gammat gamma dt gamma gamma gammat gamma gamma gamma dt gamma gamma gamma dt gamma gamma gamma dt gamma gamma gamma gamma gamma gamma priami coincides probability transition label gamma gamma gamma gammat te gamma gamma dt gamma gamma gamma dt gamma gamma gamma apparent rates allow compute conditional probabilities 
proposition probability gamma 
action occurred delta gamma dx proof 
conditional probability statement written definition conditional probability associated transition proposition denominator proposition delta gamma dx consider process 
probability leftmost occur transition fired gamma gamma gamma dt probability transition gamma gamma gamma dt stochastic calculus general distributions enabling derive relation enabling transitions computation simply looking labels 
relation transitions section deal general distributions computations transitions associated random variables independent 
define notion dependency transitions occur computation 
straightforward recover enabling relation 
consider kinds dependencies induced structure processes called structural originated names bound called name 
structural dependencies similar causality defined ccs communication occurs sender transmits causes residual receiver vice versa 
long communication synchronous residuals sender receiver enabled synchronization completed 
name dependencies established action uses name bound process input bound output 
assume proof terms tags jj define function theta theta discards replace occurrence 
definition enabling transitions computation steps 
concerns structural dependencies 
case transitions fired asynchronously says transition labelled depends previous transition labelled prefix tuning needed cover communications precise 
underlying idea transitions derived initial set rules nested prefix chain connected communications similar way 
definition gamma 
gamma 
gamma 
proved computation 
direct structural dependency str iff prefix prefix prefix prefix structural dependencies obtained reflexive transitive closure str str str items def 
say transition enables communication enables components 
consider process xz zz computation jj gamma 
jj gamma 
jj bi gamma 
jj jj gamma 
jj jj zz gamma 
jj gamma 
priami distributions actions omitted labels transitions sake readability 
jj proof part prefix proof part jj jj bound output depends communication def 
inherits causes sender transition 
bound output depends second transition proof part prefix 
second step defines name dependencies 
simplified noting bound outputs generate dependencies 
name dependency input binds name usage induces structural dependency 
process scope binding occurrence guarded prefixes occurs structurally dependent input 
binding rules show input jr influence combine structural name dependencies may safely ignore input bindings definition 
definition gamma 
gamma 
gamma 
proved computation 
name enabler unique oe nam az 
note computations fresh 
need implement cross inheritance name dependencies communication 
component communication form name localised residual communicating processes close rule 
example name dependencies derived consider computation 
output link depends bound output extruded def 

dependencies transition union structural dependencies name dependency set containing name structural dependencies 
third step 
dependencies transition captured enabling relation str oe nam enabling memory discipline memoryless property exponential distribution released need keep track past history system determine firing distribution transitions 
adopt enabling memory discipline defined stochastic petri nets adopted stochastic process algebra 
firing distribution transition accounts performed corresponding activity enabled 
consider instance process computation jj fa gamma 
jj gamma 
stochastic calculus general distributions transition jj gamma 
possible jj jj selection labelled prevent occur stochastic variable associated transition independent associated second 
fact time interval transition computation overlap continue enabling memory discipline variable account time elapsed firing plus extra time completion enabling memory discipline implemented called age variables associated transitions 
modifies syntax language keep track number time intervals transition enabled concurrent selected firing 
show need modify syntax states transition system consider general probability distributions 
discuss properties enabling relation 
consider proved computation gamma 
gamma 
gamma 
gamma 
gamma 
assume wants determine firing distribution mutual exclusive conflicting transitions originated choice operator processes wants communicate partner restricted link 
case situations introduce branching points structure transition systems 
pair transitions computation enabling concurrency relation 
enabling concurrency complementary relations computations 
need find maximum transitions preceding denote activities concurrent corresponding 
note transition gamma 
time periods transitions occurred influence firing distribution precisely distribution random variable associated gamma gamma assuming 
note number transitions concurrent occurred coincides start transition 
extension possible count number states machine pass having transition enabled 
general mechanism derive kind non interleaving relation enabling causality concurrency locality priority 
discussion shows modify states transition system recover information needed handle general distributions 
fact need look standard labels transitions derive start transition equivalently build partial ordering states oneto correspondence states classical calculus semantics downward compatible sense recover classical interleaving semantics calculus replace labels 
consequence reuse interleaving theory behavioural analysis modification 
described semantic models causal local interleaving suitable behavioural analysis retrieved proved transition system calculus priami simple relabelling functions 
apply idea yield transition system suitable performance analysis relabelling proved computations 
furthermore apply relabelling function transition relabelling transitions needed correctly compute distribution gamma relabel inductively transition proved computation replacing distribution transition computed 
definition gamma 
gamma 
gamma 
proved computation 
corresponding stochastic computation gamma 
gamma 
gamma 
obtained applying function ffi gamma ffi ffi gamma gamma 
gamma 
fp gamma gamma maximum index example application relabelling function consider process cy gamma te gamma gamma gamma stage erlang distribution parameter gamma gamma exponential distribution parameter 
consider proved computation jj gamma 
jj cy jj gamma 
te gamma gamma gamma gamma dt te gamma gamma gamma gamma dt gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma dt gamma gamma gamma dt gamma gamma gamma gamma gamma gamma gamma recall distribution synchronization product distributions partners 
corresponding stochastic computation jj gamma 
jj cy jj gamma 
continuous random variables distributions respectively 
relabelling functions automated behavioural relabelling implemented case ccs propose proved transition system kernel realization integrated programming environment distributed systems behavioural performance analysis strongly integrated 
note calculation distributions tedious error prone performed symbolic manipulation tools 
stochastic calculus general distributions extension stochastic calculus cope general distributions 
rich labelling proved semantics allowed derive enabling relation transitions computation altering structure transition system 
semantic models interleaving causality locality enabling priority 
retrieved proved transition system performance information available proposal kernel implement integrated programming environment distributed systems 
evidence shown smooth scalability theory stochastic process algebras powerful expressive formalisms calculus 
labels transitions may long wired dealt automatically 
prototype behavioural analysis systems proved semantics implemented 
distributions difficult calculate 
symbolic manipulators mathematica adopted 
study needed devise subset probabilistic distributions allows easy manipulation data 
far comparison similar approaches concerned mention deal mobility indirectly ty multi way synchronization 
claim formalism suitable describe mobile agent paradigms help dealing distributed systems widespread dissemination applications mobility java interfaces www mobile communications 
application telecommunication area mobile paradigms 
ajmone marsan balbo conte 
effect execution policies semantics analysis stochastic petri nets 
ieee transactions software engineering 
ajmone marsan balbo conte 
class generalized stochastic petri nets performance analysis systems 
acm transactions computer systems 
ajmone marsan 
lotos extension performance analysis distributed systems 
ieee acm transactions networking 
bernardo gorrieri 
integrating performance functional analysis concurrent systems empa 
technical report ublcs university bologna laboratory computer science 
bianchi degano priami 
efficient verifier truly concurrent properties 
editor proceedings pact lncs pages 
springer verlag 
degano priami 
mobile processes distributed environment 
proceedings icalp lncs pages 
springer verlag 
boreale sangiorgi 
fully semantics causality calculus 
proceedings stacs lncs 
springer verlag 
priami boudol castellani 
non interleaving semantics ccs proved transitions 
fundamenta informaticae xi 
brinksma 
katoen 
stochastic causality process algebra 
computer journal 
buchholz 
markovian process algebra 
technical report informatik iv university dortmund 
cleaveland 
position statement concurrency working group 
proceedings acm workshop strategic directions computing research 
acm press 
cleaveland 
operational framework value passing processes 
proceedings popl pages 
dam 
decidability process equivalences calculus 
proceedings amast lncs pages 
springer verlag 
ph 
darondeau degano 
causal trees 
proceedings icalp lncs pages 
springer verlag 
degano priami 
proved trees 
proceedings icalp lncs pages 
springer verlag 
degano priami 
causality mobile processes 
proceedings icalp lncs pages 
springer verlag 
trivedi geist nicola 
extended stochastic petri nets applications analysis 
proceedings performance paris 
herzog 
language timed processes performance evaluation 
technical report vii university 
herzog 
application protocol performance analysis 
formale fur verteilte systeme fokus series publishers 
hansson jonsson 
calculus communicating systems time probability 
proceedings ieee rtss orlando florida 
harrison stochastic process algebra discrete event simulation 
quantitative methods parallel systems pages 
herzog 
concept graph process algebras generally distributed activity times hierarchical modelling 
proceedings 

compositional approach performance modelling 
phd thesis university edinburgh department computer science 

katoen 
quantitative qualitative extensions event structures 
phd thesis center telematics information technology university twente 
available ctit 
larsen skou 
compositional verification probabilistic processes 
proceedings concur volume lncs 
springer verlag 
meyer sanders 
stochastic activity networks structure behaviour applications 
proceedings int 
workshop timed petri nets torino 
ieee cs press 
milner parrow walker 
calculus mobile processes ii 
information computation 
milner parrow walker 
modal logics mobile processes 
theoretical computer science 
molloy 
performance analysis stochastic petri nets 
ieee transactions computers 
stochastic calculus general distributions montanari pistore 
checking bisimilarity finitary calculus 
lee smolka editors proceedings concur lncs pages 
springer verlag 
nicollin sifakis 
overview synthesis timed process algebras 
real time theory practice lncs pages 
springer verlag 
priami 
stochastic calculus 
computer journal 
priami 
enhanced operational semantics concurrency 
phd thesis dipartimento di informatica universit di pisa march 
available tech 
rep td 
priami 
integrating behavioural performance analysis topology information 
proceedings th international conference system sciences volume pages maui hawaii 
ieee 

numerical petri nets general graphical model concurrent processing systems 
australian telecommunications research 
thomsen 
plain chocs second generation calculus higher order processes 
acta informatica 
van glabbeek smolka steffen 
reactive generative stratified models probabilistic processes 
information computation 
