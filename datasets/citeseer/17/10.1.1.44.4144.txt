real time robot motion planning computer graphics hardware mark reichert bruce donald donald greenberg real time robot motion planner fast resolution 
technique guaranteed find path exists resolution paths returned safe 
planner handle polyhedral geometry robot obstacles including disjoint highly concave unions polyhedra 
planner uses standard graphics hardware configuration space obstacles series bitmap slices uses dynamic programming create navigation function discrete vector valued function calculate paths rasterized space 
motion paths planner produces minimal respect manhattan distance metric includes rotation translation 
examples shown illustrating competence planner generating planar rotational translational plans complex dimensional robots 
dynamic motion sequences including complicated non obvious backtracking solutions executed real time 
motion planning regarded core algorithmic problem computational robotics years researchers worked finding better algorithmic solutions yap despite fact key elements planning robot motion substantially overlap computer graphics interests problem computer graphics topic 
classical formulation find path piano mover problem stated follows arbitrary rigid polyhedral object polyhedral environment find continuous path initial configuration desired goal configuration 
graduate student program computer graphics cornell university ithaca assistant professor director computer science robotics laboratory department computer science upson hall cornell university ithaca director program computer graphics jacob gould professor computer graphics cornell university ithaca view motion planning process algorithmic endeavor analogous hidden surface removal computer graphics 
precise combinatorial solutions exist rasterized approximating techniques buffer algorithms faster effective 
second approximation algorithms provided massively parallel specialized hardware support 
concentrating efficient combinatorially exact algorithms user effectively served choosing representations geometric constraints selecting local isotropic geometric algorithms easily parallelizable providing appropriate hardware support algorithms run fast 
algorithm basedon configuration space representations due lozano perez local isotropic search algorithm don don obtain fast motion planning algorithm runs standard graphics hardware 
parts local algorithm similar dt 
paths produced minimal length respect distance metric imposed rasterization treats translational rotational movements equally 
addition simple algorithm complete resolution rasterization inherently local suffer local minima 
fast motion planning algorithms particular potential field methods get stuck local minima effectively plan paths complex concave disconnected robots 
algorithms run robot small convex relative environment space solutions dense planner may effective complicated cases 
computer graphics applications visual impact robot motion important 
motions time dependent complex real time graphical playback desirable assess motion sequence including complicated back tracking paths may necessary obtain solution 
section brief overview historical approaches robotics community 
section describes algorithm detail 
section presents results implementation specific cases 
section presents topics research 
background piano mover problem approached ways 
brief overview major robotics community configuration space potential field methods discuss advantages limitations method 
configuration space methods planar object 
consider object moving plane 
object configuration uniquely described position orientation 
configuration space object set possible configurations real plane unit circle 
configuration space object moving plane theta 
robotics terminology configuration space abbreviated space 
anchor point link arm 
example configuration space consider robot link arm plane point 
angle base arm angle free arm completely determine configuration robot 
configuration space theta particular configuration point theta problem moving complex robot physical environment transformed problem moving point space environment 
obstacle constraints real space encoded enlarged obstacles configuration space 
point robot outside enlarged space obstacles robot outside obstacles physical workspace 
lozano perez generates space obstacles minkowski sum robot environment 
minkowski sum points set offset points set figures 
sets represented polygons minkowski sum thought convolution set sum obstacle polygons negated robot polygons 
convolution computed convex hull algorithm 
algorithm suboptimal plane case generating polygons convex lozano perez gives method computing minkowski sum linear time 
important ideas space slices space slice projections described detail introduced 
thorough refer reader previous papers 
researchers techniques space 
example lozano perez representation obstacles derived don bitmap space 
search algorithm local isotropic trivially parallelizable hardware support available 
rasterized plan link arm dt 
described motion planning problem differential geometry framework metric topology imposed configuration space geodesics corresponding optimal paths 
discretized space cost wave propagation gradient find optimal paths 
second parts algorithm similar 
address problem generating space obstacles step algorithm 
emphasize hardware context algorithm 
donald described motion planning algorithm approximation algorithm 
guaranteed find path exists resolution paths returns safe 
see don formal definition provably approximation algorithms 
constraint equations represent space obstacles imposed grid space local experts guide search space 
algorithm advantage complete resolution software implementation ran slowly sequential machine show variant part algorithm runs fast modern graphics hardware 
potential field methods potential field khatib le klm 
obstacles represented zero level surfaces scalar valued analytic functions 
potential field local obstacle strength diminishes square distance obstacle generated 
arbitrary cutoff value assigned corresponds distance influence obstacle longer important 
potential field mathematically described form ae ff particle moving accordance newton laws potential field hit obstacle 
khatib observed sum gradients gradient sum adding potential fields obstacles results single function influence particle hit obstacle real object point mass khatib identified number distinguished points object 
potentials distinguished points linearly combined note general calculating convex hull requires time log 
donald cadr mit architecture lisp machine robot negated robot minkowski sum robot obstacles 
resultant polygons minkowski sum 
produce composite potential position orientation rigid body 
potential field generated obstacles 
higher density indicates higher potential 
bitmap potential field generated goal 
higher density indicates higher potential 
potential field techniques successful real time obstacle avoidance changing environments motion planning limitations 
major problem spurious local minima especially concave robots 
escape local minima resort randomization techniques techniques described 
latombe extended idea bitmaps represent obstacles 
generated separate potential field point robot starting goal position bl potential field function euclidean distance goal function path length goal traveling obstacles crow flies 
techniques similar khatib combine point potentials single potential field complex body 
potential field point robot local minima combined potential field complex robot may local minima due competition distinguished points 
escape minima described possible techniques 
techniques search paths space potential field guide search 
technique fill local minima resulted planner complete resolution 
algorithm similar planner fills space complete resolution 
suggested local minima filling methods effective low degrees freedom due memory requirements 
plan higher degrees freedom randomization get local minima 
planner capable planning robots great number degrees freedom demonstrated multiple bars linked chains probabilistically complete 
algorithm overview motion planner algorithmically basedon grid search method donald don configuration space approach lozano perez 
consists separate modules 
memory requirements planner similar latombe local minima filling technique 
aware personal communication tomas lozano perez complete resolution planner uses techniques similar ones developed connection machine appears promising higher dof cases 
ffl module allocates voxel array representation space rapidly computes space obstacles array standard graphics rasterization hardware 
ffl second module calculates space navigation function dynamic programming technique expanding wavefront solutions 
navigation function essentially discrete vector valued function robot current voxel location space returns direction robot move decrease distance goal 
ffl third module determines shortest path voxel start position goal viable solution 
navigation function gives direction move cell module calculate path quickly determine constant time path exists 
ffl fourth module produces real time kinematic simulation robot motion 
modules described detail 
definitions definitions due useful prior algorithmic explanations 
space obstacle forbidden region space thetas slice restricted angular interval theta 
slice projection projection plane theta 
generation configuration space representation calculate configuration space obstacle polygons minkowski sum obstacles rotated negated robot described lozano perez 
graphics polygon fill hardware fill configuration space obstacle polygons 
robot motion restricted degrees freedom translation plane discrete representation space single bitmap rasterized space obstacles 
rotation allowed configuration space represented set bitmaps bitmap slice projection representing configuration space angular interval 
generating representation space exactly orientation trivial generation conservative discrete representation space angular interval difficult 
goal ensure bitmap slice representing space angular interval cell labeled free space obstacle penetrating orientation 
produce discrete representation space angular interval generate discrete representations space equally spaced orientations interval 
angular increment gamma bitmap slice representation angular interval union sub intervals 
pseudo code implementation method 
note bitmap slices conservative 
part obstacle penetrates cell cell labeled obstacle 
discards potential paths enforces complete resolution property planner 
adjacent cells labeled free obstacles path free obstacle way cells labeled obstacle contradict assumption cells free 
movement allowed free cells path returned valid collision free 
generate space theta theta slices foreach robot polygon list theta theta rotate foreach environment generate minkowski sum fill minkowski polygon obstacle color 
read filled frame buffer move bitmap voxel array 
clear frame buffer 
return bitmap voxel array pseudo code generation discretized space calculation navigation function dynamic programming technique expand wavefront solutions goal queue keep track current wavefront dt element queue holds position rasterized environment current length path goal position 
element dequeued location environment filled current length free space neighbors filled put queue incremented distance 
algorithm essentially isomorphic strategy donald algorithm don don operated follows search node space grid dequeued space grid neighbors generated 
reachable unexplored free space neighbors put queue 
new neighbor contains backpointer direction back pointer back direction corresponds precisely navigation function 
note strategy simply breadth search bfs start goal 
regard dynamic programming bfs dual algorithms bfs goal yields dynamic programming algorithm 
fill navigation function goal location enqueue goal location distance queue empty dequeue element label location distance enqueue neighbors obstacles filled distance distance pseudo code navigation function fill initial element placed queue goal node path length zero 
algorithm takes node queue fills location rasterized environment zero queues neighboring nodes path length 
wavefront continues brush fire spreading space obstacles way similar flood fill seed fill algorithms computer paint programs pav 
cell reached goal set just figures 
goal calculation navigation function 
goal path start position path generation 
note degree freedom case translations plus rotation fill expands upward wraps theta direction expanding directions 
running time proportional number free cells environment 
complicated scenes consist obstacles fewer free cells 
paradoxically complicated scenes quicker fill 
path generation navigation function generated breadth search rasterized configuration space yields shortest path goal reachable position configuration space shortest path defined passing minimal number voxels 
see dt metrics 
get closer goal start position robot moves lowest numbered neighboring cell 
corresponds exactly breadth search tree goal 
call process surfing robot simply sliding hills potential function 
multiple cells lowest number picked correspond path number moves needed reach goal 
choice rotation move theta direction translation move direction algorithm selects translation option minimize rotation figures 
construction cell reached goal neighbor lower number cell queued label 
local minima navigation function 
robot just follow bread search tree goal worry getting stuck 
search tree fast running linear time respect path length 
path generation technique corresponds precisely gradient dt 
display routines program implemented uses standard graphics hardware acceleration generate dynamic real time playback robot motion allowing viewer position interactively modified 
sequential pre processing steps required rasterization space computation navigation function 
discretized configuration space recomputed observed dt 
generate path start location cell corresponding start location null reached fill label blank return reach goal goal add path pick lowest numbered neighbor return pseudo code path generation surfing change obstacle definitions robot geometry 
navigation function recomputed change goal position 
path generation fast computed fly dynamic sequences robot motion displayed 
hardware algorithm slowest possible serial machines fast parallel specialized hardware 
modules benefit specialized hardware 
implementation generation space obstacles fourth kinematic simulation specialized graphics hardware 
second module flood fill uses local operation ideal distributed computation bl 
third module gradient bread search tree essentially fast serial operation 
examples algorithm tested obstacle environments robots obstacles varying shape convexity 
experimental timings examples table 
note preprocessing steps configuration space navigation function complete path generation algorithm runs instantaneously real time motion display possible 
problem size space fill surf display moving planar robot backtracking planar robot stuck planar robot piano room piano room table table experimental timings 
times seconds 
processing display performed hewlett packard turbo graphics display 
times marked figures performed need repeated 
complex theta example illustrates motion complex concave planar robot 
note triangular peg obstacles upper left hand corner 
search algorithm rely heuristic distance goal backtracking paths easily 
example robot able turn backtracks way right side region devoid pegs preventing turning left side 
search backwards goal navigation function reached start point path exists start goal exist resolution 
array known path start configuration goal 
robot head stuck peg wall algorithm returns result path exists 
theta motion robots dimensional robots pieces quite distinct vertically 
piano example small legs large main body 
creating classes environmental objects class objects obstruct legs obstruct body algorithm planar problems extended object space partitioning representation 
piano body piano legs obstacles legs 
obstacle body legs 
piano environment partitioning 
rasterization performed exception body convolved body obstacles legs leg obstacles 
union leg body space obstacles create bitmap 
leg obstacle convolved body generating space obstacles piano body move legs maneuver 
discussion robot motion planner fast fast motion planners entirely complete provably approximation algorithms 
algorithm part donald original algorithm don initially considered slow ineffective real time motion planning modified run current graphics hardware quite fast 
planner handle polyhedral geometry robot obstacles including disjoint highly concave unions polyhedra 
planner general guaranteed find path exists resolution 
constant time detects path exists start location goal points goal compare dt 
method memory intensive problems resolutions lower especially rotational dimension 
storage reduced eliminating navigation function value storing direction point requiring bits cell dof case 
method resolution dependent 
higher resolution closer robot squeeze obstacles 
lower resolution lower memory requirements 
believe demonstrated provably approximation algorithms kinematic motion planning run fast algorithms local isotropic take advantage special purpose computer graphics hardware tasks rasterization poly fill flood fill gradient 
conjecture fastest solutions involve algorithms similar characterized 
configuration space representations 

local geometric isotropic parallelizable search algorithms don 

appropriate hardware support geometric computation 
robotics animation addition kinematic planning simulation desires plan robot motions full dynamics 
dx dx developed provably approximation algorithms generate motions avoid obstacles obey dynamic bounds generalized forces velocities respect full lagrangian rigid body dynamics equations motion provably close optimal time 
algorithms grid currently run slowly traditional architectures 
hope techniques similar propose algorithms run quickly modified exploit appropriate hardware support 
hope illustrates substantial overlap research areas graphics robotics communities fosters collaborative efforts create innovative solutions 
goal fig start fig start fig start key robot positions 
moving planar robot 
leg backtracking 
leg backtracking 
backtracking planar robot 
trapped planar robot 
key start goal locations subsequent figures 
robot follows gradient potential function goal breadth search tree 
robot moves start right room pegs left reorient 
robot room reorient right side blocked small pegs left 
robot squeeze small pegs obtain goal position orientation 
shows entire motion 
algorithm exactly simply breadth search tree 
solution exists 
planner detects constant time 
moving piano 
moving piano alternate start 
piano room 
piano room alternate start 
moving piano 
authors gratefully acknowledge national science foundation research entitled interactive input display techniques dcr visualization scientific computing acs help support program computer graphics 
support bruce donald robotics research provided part national science foundation 
iri presidential young investigator award part mathematical sciences institute 
supported national science foundation graduate fellowship 
interactive graphics computing environment substantially generous equipment donations hewlett packard digital equipment 
robotics cs bruce teaching assistants pat xavier russell brown introducing field robotics assigning homework lead directly 
len piano model emil photographic tim connor keeping computers alive fran ellen keeping alive jim breathing life video system dave baraff time show 
roy hall proof reading drafts 
special wendy michele iris patience written 
bl latombe 
robot motion planning distributed representation approach report 
stan cs stanford university department computer science may 
canny donald reif xavier 
complexity planning th symposium foundations computer science white plains ny 
don donald motion planning degrees freedom report 
mit ai tr mit artificial intelligence laboratory 
don donald search algorithm motion planning degrees freedom artificial intelligence pages 
dt 
optimal path planning cost wave propagation metric configuration space proceedingsof spie international society optical engineering november pages 
dx donald xavier 
provably approximation algorithm optimal time trajectory planning ieee int 
conf 
robotics automation scottsdale az 
dx donald xavier 
provably approximation algorithms optimal cartesian robots open chain manipulators proceedings acm symposium computational geometry berkeley ca 
klm khatib le 
dynamic control manipulators operating complex environment proceedings third international symposium september pages 
koditschek exact robot navigation means potential functions topological considerations ieee international conference robotics automation march 
koditschek planning control potential functions lozano perez khatib editors robotics review mit press pages 
lozano perez spatial planning configuration space approach memo massachusetts institute technology artificial intelligence laboratory december 
lozano perez spatial planning configuration space approach ieee transactions computers pages 
lozano perez simple motion planning algorithm general robot manipulator ieee journal robotics automation ra pages 
lozano perez wesley 
algorithm planning free paths polyhedral obstacles communications acm pages 
pav pavlidis contour filling raster graphics proceedings siggraph dallas texas august pages 
collision detection avoidance computer controlled manipulators phd dissertation department electrical engineering california institute technology pasadena california 
yap yap algorithmic motion planning schwartz yap editors advances robotics lawrence erlbaum associates 
