automatic furniture population large architectural models kari anne hier submitted department electrical engineering computer science partial fulfillment requirements degrees bachelor science electrical engineering computer science master engineering electrical engineering computer science massachusetts institute technology january kari anne hier 
rights reserved 
author mit permission reproduce distribute publicly electronic copies thesis right 
author 
department electrical engineering computer science january certified 
seth teller associate professor thesis supervisor accepted 
arthur smith chairman department committee graduate theses automatic furniture population large architectural models kari anne hier submitted department electrical engineering computer science january partial fulfillment requirements degrees bachelor science electrical engineering computer science master engineering electrical engineering computer science goal project automate process generating large furnished models building interiors 
furnit system designed automatically place furniture floor plan 
deals solely spatial placement furniture ignoring concerns colors fabrics lighting 
furnit represents rooms furniture groups individual pieces furniture nested hierarchy spaces assigned functions 
space piece furniture defined bounding box 
level spatial hierarchy represented template specifies configuration sub spaces enclosed space 
set default templates provided common room furniture types 
furnit selects template adapts room recursively resolving spatial conflicts room template sub spaces valid furniture configuration reached 
result guaranteed geometrically valid functional 
furnit developed part city walk project 
works concert city walk tools generate textured building interiors 
thesis supervisor seth teller title associate professor acknowledgments professor seth teller supporting project 
members city walk group mit uc berkeley especially laura downs 
system built top sylif library greatly benefited insights 
go jane gould people ministry mit 
tried keep sane mit experience acknowledging futility orts 
brian deal cats laundry late minute cancellations man 
special go parents oskar 
emotional support deep wallets mit education short lived 
dedicate memory cousin 
come carrying heavy burdens give rest 
mt contents background 
goal 
related 
organization thesis 
overview design design requirements 
geometrical validity 
functional validity 
room layout 
reasoning hierarchical spaces 
configuration templates 
furnit system definition templates 
initializing templates 
fitting templates rooms 
doors windows 
resolving conflicts 
moving child templates 
re sizing child templates 
recursion 
base cases 
implementation furnit control flow 
furnit debugging interface 
sylif symbolic layout interchange format 
overview sylif data structures 
sylif furnit interaction 
sylif template classes 
floorsketch 
extensions 
results furnit 
creating rooms 
adding portals 
furnishing floor plan 
manually adjusting furniture configuration 
default templates 
living room 
dining room 
master bedroom bedroom 
ce student ce 
variations furniture configurations 
discussion 

tables default room template types 
default furniture group template types 
default furniture template types 
default furniture icons 
setting running furnit setting furnit 
running furnit 
furnit source files 
list figures hierarchy patterns 
adapted alexander 
diagram ce template 
possible mutations room template 
scaling room template 
adding clear space room template 
resolving root template moving children 
re sizing child template 
control flow furnit 
sylif class inheritance hierarchy 
adapted downs 
member variables sylif template classes 
floorsketch view second floor building ne 
interactions city walk applications 
default living room template 
default dining room template 
default master bedroom template 
default bedroom template 
default faculty ce template 
default student ce template 
sample configuration 
second sample configuration 
third sample configuration 
fourth sample configuration 
fifth sample configuration 
list tables table default room template types 
table default furniture group template types 
table default furniture template types 
table furniture icon colors 
chapter background furnit system automatically places furniture floor plan 
created part city walk project joint research project mit uc berkeley 
goal city walk integrate projects universities order create comprehensive system generating interactively walking extended interior exterior models urban scenes 
mit city scanning project ort create cad models existing urban scenes images annotated camera position direction 
headed prof seth teller mit graphics group 
goal project create fully automated system acquires necessary images processes produce valid models include geometric texture information buildings scene 
currently project creating model mit campus eventual goal develop system handle modeling thousands buildings 
uc berkeley fire walk project headed carlo sequin 
period years group developed suite tools exploring virtual environments existing planned buildings 
walkthru system allows multiple users walk large furnished building model real time 
building model static 
furniture placed moved interactively walkedit system physics fire simulators interact building model developed 
goal city walk coordinate orts projects compile suite tools enable user create models large urban scenes interact moving seamlessly indoor outdoor environments 
order achieve data generated city walk system automatically incorporated walkthru model integrated data building interiors 
furthermore generation furnished building interiors floor plans automated handle scenes containing large numbers buildings 
algorithms large changes object viewing scale multiple levels detail developed 
goal furnit designed help automate process generating large furnished models building interiors 
provided floor plan room labels wall window door information wish create model populated furniture functional configuration 
chosen conservative approach guaranteeing furniture configuration geometrically valid ideal 
furnit guaranteed find optimal furniture configuration 
guarantee solution geometrical inconsistencies furniture furniture penetrating walls floor ceiling furniture floating air 
furnit system fully automated provided floor plan set furniture templates 
automation necessary primary system scenes large populate furniture hand 
goal system better job average human user decent job time 
created large models time required place furniture hand prohibitive 
note furnit intended system furniture placement 
attempt determine colors fabrics lighting aspects furnishing building deals solely spatial aspect selecting placing furniture set rooms 
furnit designed concert floorsketch system see section page program interactively drawing floor plans automatically 
floorsketch limited rectangular rooms furnit adopted restriction 
ensures applications compatible 
furthermore greatly reduces complexity furnit ensuring reason rectangular spaces 
related previous related topic carried areas artificial intelligence architecture 
projects larger scope attempts encoding basic architectural principles narrower focus generating new designs imitate style architect 
book pattern language alexander patterns towns neighborhoods houses rooms 
patterns attempt encode architectural configurations universal space 
pattern images text 
examples room patterns window place workspace enclosure cooking layout 
authors try formulate phenomenology architecture approach rigorous patterns intended basis computational system 
strength lies authors orts specify hierarchy patterns 
pattern list parent patterns child patterns 
parent patterns represent spaces enclosing space represented pattern child patterns represent spaces enclosed 
result hierarchy spaces recursively specifying components space 
graph page illustrates 
pattern workspace enclosure child patterns half private ce home workshop 
children include half open wall open shelves sitting circle 
organization thesis thesis describes design implementation furnit system 
chapter gives overview design criteria furniture placement system 
contains high level discussion furnit model 
chapter presents detailed description furnit data structures supplemented concrete examples 
chapter details implementation system interacts city walk applications 
wide range results discussion system areas improvements 
flexible office space half private office home workshop small meeting room workspace enclosure half open wall open shelves sitting circle different chairs hierarchy patterns 
adapted alexander 
chapter overview design design requirements di erent methods automatically determine reasonable furniture configuration floor plan 
order choose best method helpful consider design requirements system 
geometrical validity stated goal furnit system guarantee geometrically valid output 
pieces furniture contained room penetrate walls floor ceiling 
pieces furniture piece furniture float space 
reasonable require piece furniture wholly contained single room 
possible piece furniture rooms simultaneously wall placed doorway opening common greatly increases complexity representation 
functional validity order furnit useful program place furniture configuration functional 
furniture placed room appropriate room type 
furthermore piece furniture placed placing pieces furniture necessary 
dining room table eating usually done sitting 
dining room table placed accompanying chairs 
geometrical constraints stated checked straightforward manner computationally intensive 
functional constraints hand ambiguous 
clear rules indicate furniture placed room 
choices clearly incorrect place bath ce choices ambiguous cases ce contain sofa appropriate 
likewise interdependency di erent pieces furniture clear 
living room sofa ee table configuration inevitable 
furniture placement system take conservative approach allowing configurations guaranteed valid 
trying define configurations illegal define criteria guarantee legal configurations accept configurations satisfy 
approach eliminate acceptable configurations guarantee produce functionally valid results 
room layout furnit places functional furniture groups 
su cient merely ensure appropriate groups furniture placed room 
room layout considered order create usable configurations 
far ambiguous requirements includes functional aspects 
considerations symmetry room composition highly subjective resolved di erently di erent schools design 
goal statement specified furnit place furniture reasonable configuration 
limitation frees having take account number concerns able consider wide range solutions 
completely ignore room layout 
balance furniture open space maintained open paths user move furniture groups 
reasoning hierarchical spaces problem statement limits system resolving spatial aspect task selecting placing furniture set rooms 
system design requirements emphasize spatial nature task 
rooms represented spaces assigned function set characteristics 
individual pieces groups furniture likewise considered spaces assigned functions 
dining room space dedicated meals 
consequence encloses spaces dining room set storage spaces china 
similarly file cabinet lies space designated storage chair space reserved sitting 
geometric shape furniture complex shape piece approximated tightly fitting rectangular bounding box furniture geometry 
bounding box approximation decision limit system rectangular rooms ensures need reason rectangular spaces 
insight gained design requirements furniture organized functional groups 
di erent types furniture fulfill function meal 
pieces form interdependent group functional configuration include members group 
note configuration furniture group need determined group placed 
decides place reading space living room decides place chair side table individual pieces furniture group 
insight gained design requirements open space necessary room function 
desk needs accompanied chair needs placed su cient room push chair back desk 
general need mechanism ensures individual pieces furniture surrounded su cient open space 
observations support approach similar alexander 
choose express room nested hierarchy spaces characteristics 
space include sub spaces child spaces governed rules arranged 
recursively resolving spaces starting room root space create reasonable furniture configuration room 
configuration templates observations define framework furniture population 
key resolving spatial problems depends ability encode rules arranging subspaces space 
need hierarchy spaces similar hierarchy patterns alexander 
addition hierarchy need comprehensive set rules place child spaces parent space 
rules complex ambiguous shown discussion design requirements 
faced di culties chosen case approach 
assume set reasonable configurations child spaces available 
furnit created hand user expressed form templates give location orientation child space 
furniture templates represented rectangular solids 
possible allow templates contain templates furniture ciently encoding spatial hierarchy see page 
furthermore provide library mutations 
operations performed templates changing location orientation child spaces template adding removing elements template 
mutation introduce geometrical functional inconsistencies 
purpose mutations resolve spatial conflicts adapt template room shape way di erent furniture configurations obtained single template 
requiring hand templates direct contradiction goal create automated system 
note template created room type 
template yields range furniture configurations 
furthermore final system provided user set default templates making possible furnish range common room types having create new templates 
outline simple algorithm furnishing room 
pick configuration template 
adapt template room fitting space tightly inside room resolving resulting inconsistencies mutating template geometrically functionally valid 
top level template resolved recursively solve child templates reach bounding boxes individual pieces furniture 
chapter discusses process detail 
chapter furnit system previous chapter gave high level outline design furnit 
chapter presents detailed description system specifying di erent data structures giving detailed algorithm 
concrete examples 
definition templates template specifies configuration subspaces space 
defined size position orientation parent space 
template type workspace seating ce signifies function parent space 
previously discussed limited furnit reasoning rectangular rooms chosen represent pieces furniture tight fitting axial bounding boxes 
space represented furnit system shape rectangular solid size specified width depth height 
position template expressed coordinate template corner parent space 
note position template constrained requirement template completely enclosed parent 
room types majority furniture placed floor 
furthermore furniture hung wall shelf commonly oriented lower edge parallel floor plane 
system chosen limit orientation templates random rotation xy plane 
limitation greatly reduces complexity spatial reasoning leaving system general express commonly furniture configurations 
purpose template encode spatial configuration child templates 
template contains list child templates locations orientations specified parent template coordinate system 
configuration encodes spatial relationship child templates 
additional information regarding function necessary 
child templates space equally important 
bedroom bed absolutely necessary room function 
useful common removed necessary 
reflect allowing child template flagged vital non vital 
specifies child importance configuration parent template 
room piece furniture range functional sizes 
bedrooms commonly vary size vary length feet 
encode giving template minimum maximum size limiting size specified range 
help determine unresolvable templates minimum computation see section page 
furthermore minimum size ensure su cient open space piece group furniture 
minimum maximum size specify relationships respective sizes template children 
page gives example template specifies simple layout ce 
note child template workspace child templates desk chair 
defined scope workspace template contain information regarding room layout 
chair templates lead conflicts defined di erent scopes 
initializing templates step populating room initialize set root templates describes possible layouts room 
section describes process creating set root templates mutating template adding constraints due room doors windows 
root templates contain geometrical inconsistencies 
resolving inconsistencies discussed section 
office chair desk chair workspace office position rotation size minsize maxsize vital children workspace chair workspace position rotation size minsize maxsize vital children desk chair chair position unset rotation size minsize maxsize non vital children desk position rotation size minsize maxsize non vital children chair position rotation size minsize maxsize non vital children diagram ce template 
rotation deg scale translation rotation deg scale flip axis scale translation rotation deg flip axis scale translation rotation deg scale translation rotation deg scale flip axis scale translation rotation deg flip axis scale storage storage storage storage storage storage storage storage possible mutations room template 
fitting templates rooms previously discussed templates rooms represented furnit shaped rectangular solids 
easy fit template room 
dimensions template simply scaled width depth height room respectively 
di erent ways template oriented relation room maintaining floor plane see page 
furnit initializes root templates room possible orientation 
templates mutations original template obtained rotation translation flip scale operators 
scale scales width depth height template give dimensions 
root template created simply scaling width depth height template corresponding dimensions room page 
template scaled children maintain original sizes 
see page 
position child templates modified conserve configuration children sizes remain constant 
intuitive result 
size piece furniture scaled proportional room placed 
places additional pieces furniture larger room number larger pieces 
possible template scaled smaller children 
happen minimum size parent template set minimum size set smaller child 
case outcomes possible 
child template vital parent template dropped computation 
child flagged non vital dropped parent template maintained child 
child templates large scaling template lead children 
techniques resolving conflicts discussed section 
rotation angle simply rotates template angle degrees origin 
translation moves template origin coordinate parent coordinate system 
new root templates created operators 
original template rotated degrees origin translated template scaled appropriately order create new root templates reading reading conversation conversation entertainment entertainment scaling room template 

flip axis reflects child groups line center room axis 
additional root templates created flip operator 
original template scaled children flipped axis page 
furthermore original template rotated degrees scaled children flipped axis 
doors windows requirement functional furniture configuration doors windows blocked furniture 
furnit achieves placing empty child templates appropriate height directly front doors windows see page 
templates non movable non scalable 
purpose mark space front doors windows clear space inaccessible child templates 
root templates computed child templates marking clear space added root template 
easy location size door window window door regular child template clear space child template storage storage seating adding clear space room template 
specified input floor plan 
note clear space template window occupies space directly front window space 
possible place furniture window doors 
adding clear space child templates lead conflicts existing child templates 
interpenetration child templates result scaling template smaller size 
cases root templates created room contain conflicting child templates 
section discusses spatial conflicts resolved 
resolving conflicts result initialization process templates fitted room fewer failed see section page 
root templates contain conflicting children system picks resolved templates random tries recursively resolve conflicts children see section page 
system picks random template tries resolve conflicts children moving re sizing dropping child templates 
note child templates child templates completely enclosed parent template 
true valid original template template operations create root templates preserve invariant 
guaranteed piece furniture penetrate walls ceiling floor room 
conflicts child templates possibly leading pieces furniture need resolved 
step resolving conflicts remove child templates parent sort groups clear space vital non vital 
clear space children added directly back parent template 
templates non operations help resolve conflicts applied 
interpenetration clear space templates problem merely place holders marking open space 
perfectly reasonable space unoccupied reason 
step add vital child templates 
child added system checks conflicts arisen due new template 
system tries resolve moving re sizing child templates 
resolution root template fails removed computation 
vital child templates added parent order base area child occupying largest area 
harder place large template small 
placing larger group room open space task easier maximizes chance success 
approach minimizes computation time templates eventually fail 
non vital child templates added 
vital child templates placed order base area conflict resolution heuristics 
failure place non vital child lead failure root template 
system simply places non vital children moves recursively resolve child template see section page 
moving child templates furnit tries resolve conflicts due newly placed child template standard set heuristics 
conflict system computes axis aligned bounding volume template intersection 
tries resolve conflict moving newly placed child template conflict volume creating new conflicts 
system try move template minimum dimension conflict volume 
unable resolve conflict move system tries move conflicting template dimension 
necessary try move new conflicting templates conflict volume dimensions order magnitude 
note conflict volume axis aligned moves axis aligned 
directions template move restricted location room 
template placed floor move vertically 
similarly child placed wall move wall child placed corner parent restricted placed corners 
mentioned child templates contained parent template movements restricted parent space 
system tries move child direction conflicts location move fail child remain place 
child involved multiple conflicts move resolve conflict increase volume conflicts 
system unable resolve conflict moving template move template order minimize volume conflict 
template placed wall system slide template wall outside conflict volume unable move farther 
current template placed corner system try place template corners room 
template placed corner causes conflicts 
corner system place template corner smallest conflict volume 
child interior room restricted floor plane surrounding child templates room walls 
move far conflict volume possible attempting move volume minimum dimension attempting move necessary 
note system tries resolve conflicts rotating child templates 
want set operators su ciently flexible resolve conflicts want conserve initial configuration child templates 
wide range mutations allowed guarantee final furniture configuration functional 
furnit resolves dilemma allowing limited range translations 
page gives example root template resolved moving child templates 
vital non vital chair non vital original root template children removed sorted clear space added back largest vital child added largest non vital child added conflict volume computed move conflict volume minimum direction resolves conflict non vital child added corner conflict volume computed try nd corner conflict volume computed try rd corner conflict volume computed try th corner conflict volume computed place corner smallest conflict volume move conflict volume minimum direction resolves conflict vital vital vital vital vital vital vital vital vital non vital non vital non vital non vital non vital non vital non vital non vital chair non vital chair non vital chair non vital chair non vital chair non vital chair non vital resolving root template moving children 
bookshelf bookshelf limited move wall 
unable move due multiple conflicts 
conflicts resolved re sizing template 
bookshelf bookshelf reading reading reading conversation conversation conversation re sizing child template 
re sizing child templates system unsuccessful resolving conflict moving child templates try re size newly placed template 
computes maximum space available child current location 
computed form axis aligned rectangular bounding volume similar conflict volume 
system fit template volume scaling translating appropriately 
note orientation template remains restrictions translations move remain floor wall corner 
space small requires child scaled minimum size child template dropped 
dropping template possible outcomes 
dropped child vital root template fails 
non vital system simply moves child template 
gives example resizing template unable move due multiple conflicts 
recursion root template resolved system recursively resolves child templates 
chosen depth approach descendants current child resolved system tries resolve child 
base cases empty templates 
represents clear space single pieces furniture 
point descendant root template fails resolve root template fails 
di erent root template chosen random system tries resolve 
system unable resolve root templates room remains empty 
method resolving children resolving root templates child templates contain clear space due doors windows 
possible user define child template contains clear space necessary defining desired furniture configuration 
room template orientation child templates fixed 
reading template containing chair side table placed corner room want child retain original orientation facing corner 
mutations described earlier inappropriate child templates 
accommodate allowing templates flagged fixed 
fixed bit set system attempt compute orientations template simply scale template fit parent 
subtle di erence root child template 
root template corners meeting point walls 
necessarily true child templates 
heuristic trying place corner child corners appropriate 
system allows corner children child templates move edge forming corner 
base cases furnit recursively resolves geometrical inconsistencies room 
base case empty template 
leaf templates mark clear space single piece furniture 
root template completely resolved system places furniture leaf templates represent clear space 
furniture type placed template determined template type chair placed seating template 
procedures placing furniture default template types provided 
user defines new template type provide procedure placing furniture template type 
default template types satisfied furniture type storage template example filled 
case template furniture placement procedure determine type furniture place template 
cases decision template size 
note leaf templates size piece furniture represent size space needed piece furniture 
seating template contains su cient space chair user legs front chair 
table page lists default leaf template types 
specifies templates include additional space 
gives common examples furniture types system places default template 
chapter implementation furnit implemented part fire walk system 
template data structures implemented set classes sylif symbolic layout interchange format framework representing building information developed laura downs 
furnit user interface extension existing floorsketch interface written rick tcl tk 
furnit control procedures conflict resolution procedures implemented stand library author 
chapter discuss implementation component furnit system describe detail furnit interacts components fire walk system 
furnit control flow furnit control conflict resolution procedures implemented library 
entry point furnit top level control procedure 
takes input sylif data base extracts list rooms contained floor plan 
iterates list choosing template room room label 
rooms unknown labels ignored left empty 
furnit fits chosen template room previously discussed 
note resulting list contains resulting root templates random order 
done avoid choosing template cases root templates contains conflicts 
furnit iterates list root templates checking templates conflicts 
program tries recursively resolve children conflict resolution heuristics previously discussed 
conflict free template program iterates list room templates time trying resolve conflicts root template 
successful program attempts recursively resolve template children 
program unable resolve root templates room left empty furnit moves room list 
solution furniture placed corresponding room 
piece furniture placed leaf template represent clear space 
leaf template type procedure places piece furniture corresponding template 
procedure determines type size location rotation furniture object leaf template 
furnit debugging interface furnit extensive debugging interface 
di cult test new templates conflict resolution procedures able view step conflict resolution process 
graphical interface desirable di cult visualize spaces relate merely textual output 
debugging mode furnit displays current template configuration step conflict resolution process 
figures created interface augmented arrows 
icons representing template dropped floorsketch window see section page 
time furnit checks modifies template modified flag template set true 
modified flag template set template displayed unit recursing displaying children 
done user view template hierarchy level program currently working 
furnit iterated rooms floor plan room list augmented sylif data base returned 
sylif symbolic layout interchange format sylif ascii file format set data structures developed encode specifications proposed building symbolic layouts floor plans satisfy specifications 
originally developed allow clients formally input sylif floor plan initialize list root templates randomized order iterate check root template resolved recursively resolve child templates place furniture current room iterate resolve root template recursively resolve child templates fail fail resolved resolved resolved resolved fail iterate rooms return done fail control flow furnit 
specify design requirements allow architects evaluate potential designs respect requirements 
furnit takes input floor plan form sylif data base 
outputs data base augmented sylif furniture objects 
furthermore template data structures furnit implemented sylif classes 
section presents brief overview sylif framework discusses implementation template data structures 
overview sylif data structures sylif data structures implemented library stl standard template library 
library includes parser generated bison flex parser generations tools 
parser reads sylif file creating top level data base contains information file 
furthermore data structures equipped output function 
output function data structure writes information contained structure file 
sylif file language designed comprehensible humans 
syntax complex discussed user referred downs complete description 
sylif data base consists main data structures 
data structure defines units standards building 
defines generic building components default doors windows referenced building description 
note default components replaced custom data structures points program 
contains information pertinent building project building name location building site elevation building sea level outlines desired contents building 
lists room types appear building specifies total area dedicated room type indicates rooms type specifies rooms di erent types placed relation 
data structures express relationships reader referred downs comprehensive discussion 
su cient note mechanisms available specify desired building contents user free subset 
final component sylif data base 
contains symbolic representation building floor plan 
room size location label window door locations specified 
note room geometry sylif dimensional 
means dimensions completely described information regarding dimension object elevation 
sylif furnit interaction sylif data structures serve common format pass building information city walk applications 
number applications enhanced read write sylif files 
enhancement easy due sylif parser output functions 
input furnit sylif data base describing building 
furnit concerned component data base 
try evaluate building design interacts data base room level iterating room data base populating furniture 
reasonable heuristic furnishing room influenced building layout 
furnit outputs complete sylif database containing sylif furniture objects 
defined size bounding box translation rotation type 
structural components data base modified furnit 
di erence input output data base added furniture objects 
sylif template classes furnit templates implemented sylif data structures reasons 
wanted take advantage existing sylif infrastructure sylif parser 
secondly wanted take opportunity sylif common format indoor data shared city walk applications 
wanted enrich sylif data base format compact representation rooms furnished 
default furniture templates created sylif data base initialized 
addition default templates user create custom templates specify room room type furnished 
default custom templates passed applications part building data base time populate building furniture 
page shows complete class inheritance hierarchy sylif 
complete discussion hierarchy description classes implement templates classes relate sylif framework 
note sylif implemented laura downs classes implementing templates written author 
necessary author significantly extend existing furniture classes extend sylif framework include new data types 
sylif objects derived class 
class supports basic functionality creating initializing copying objects reading writing sylif files 
objects string identifier label descended class 
class derived class 
string identifiers allow template types referenced objects sylif file 
mechanism specify template populate room room type 
template types organized supports location id insertion deletion template types 
associated object 
info object holds wide range information specific entity 
class separated class allow information associated object type 
order associate additional information object type user define subclass class 
data type extended modifying inheritance hierarchy sylif libraries 
class derived class template type template info object 
info object contains information common base entity id label comment value link edge portal template bubble layout region room floor vertical geometry contour polygon info database furniture template classes sylif class inheritance hierarchy 
adapted downs 
int type vec minsize vec maxsize vec size default default 
templates table bound bound float rotation bool vital bool fixed bool modified children list default template types table user defined template types default types maximum minimum size template type default size template type overridden size set pointer table template types translation size rotation degrees template vital parent configuration 
template fixed 
list child templates note class inherits member variables parent class inherits info object 
template modified conflict resolution procedure 
member variables sylif template classes 
templates type see preceding page 
class derived class 
organizes template types global hash table 
allows fast location id insertion deletion template types 
avoids redundancy making impossible define template type identifier 
important feature users allowed define new template types 
single instance template type 
contains type size location rotation list children 
contains booleans vital fixed modified 
modified set conflict resolution procedures resolve template 
debugging display purposes see section page 
class provides access functions member variables 
note access function template size 
template scaled size scale function order ensure children template remain enclosed parent 
furthermore class provides functions adding removing accessing children template 
function accessing template parent provided 
furnit algorithm resolves space top resolving template attempting resolve children 
necessary backtrack computation parent access function necessary 
addition mentioned access functions class provides wide range functions reasoning spaces 
list procedures provided 
bool contains returns true current template contains false 
bool intersects returns true current template intersects false 
bool resolved returns true children intersect false 
bound returns axis aligned bounding volume template intersection 
bound returns axis aligned bounding volume union templates 
bound returns axis aligned bounding volume template 
bound returns axis aligned bounding volume template scaled minimum size 
bound returns axis aligned bounding volume template scaled maximum size 
polygon returns footprint template base 
floorsketch floorsketch tool quickly drawing floor layout doors windows see page 
floorsketch displays floor layout allows user interact dimensions layout elements click drag interface 
internal data representation floorsketch dimensional user define parameters ceiling height door height sill height windows floor set ground level 
floorsketch implemented set tcl tk data structures set callbacks possible applications interact data structures 
translators floorsketch data structures sylif exist floorsketch capable reading writing sylif files 
mentioned previously floorsketch interacts furnit passing sylif data base representing current floor layout 
furnit returns data base augmented furniture objects able place furniture icons directly floorsketch provided callbacks 
floorsketch equipped error checking methods ensure floor layout drawn user geometrically valid 
ensures rooms adjacent floorsketch view second floor building ne 
doors windows valid positions floorsketch error checker furnit 
sylif guarantee floor layout represented object geometrically valid 
inaccurate layouts deliberately allowed making sylif suitable early intermediate designs building 
furnit hand assumes input geometrically valid 
floorsketch error checking procedures necessary ensure geometrical consistency floor plan attempting populate furniture 
ensures geometrically valid sylif data bases exported floorsketch passed furnit 
floorsketch capable exporting contents wk file format walkthru viewer 
floorsketch layout translated sylif sylif ascii file format represent geometry 
note conversion involves extrusion dimensions dimensions 
floorsketch provides su cient information possible 
data translated wk file format suitable viewed walkthru viewer 
extensions extensions floorsketch interface order extend provide furnit user interface 
button furniture population added floorsketch window 
button simply translates floor layout currently displayed floorsketch window sylif calls furnit program data base 
furniture placed furnit displayed rectangular icons appropriate size location floorsketch floor layout 
user move rotate icons hand wishes modify configuration generated furnit 
pull menu placing additional pieces furniture floor layout hand added 
furnit requires room type label informs furnit room function 
order provide added pull menu floorsketch allows user specify label room 
rooms default label unlabeled created 
floorsketch labels propagated sylif read furnit 
rooms labeled default label unknown labels ignored left 
sylif file translate sylif tcl tk floorsketch translate tcl tk sylif furnit user walkthru walkedit user user store translate wk interactions city walk applications 
chapter results chapter presents instructions furnit results achieved furnit system 
default room templates depicted described 
variety results achieved furnit demonstrated populating simple floor plan times templates time resulting di erent furniture configuration 
furnit set detailed instructions floorsketch furnit 
applications enable user create floor plan room labels door window information guaranteed geometrically valid populated furniture reasonable configuration 
creating rooms user creates room floorsketch pressing create room button floorsketch main window 
new room default size default label unlabeled 
room resized clicking dragging corners 
room moved clicking inside room dragging room desired location 
note room edges corners snap making easy tightly pack rooms floor plan 
user access room parameters double clicking inside room bringing room menu window 
window contains button destroying room fields allowing user type exact values room position size 
furthermore room window contains pull menu allows user specify label room list available labels 
note user selects label needs press change label button order change take ect 
adding portals floorsketch wall opening called portal 
available wall opening portal types doors windows wall sized openings entire wall removed 
portal type default size 
windows default height floor level 
portal color coded type 
doors pink windows yellow wall sized openings purple 
portals created double clicking wall room specifying new portal location 
default portal type door 
portals moved clicking portal dragging wall 
possible move portal wall created 
portal resized clicking corner dragging portal desired width 
double clicking portal brings portal menu window 
destroy portal change type door window wall sized opening 
elevation height portal opening set 
furnishing floor plan user created floor plan labeled rooms portals floor plan automatically furnished 
note user attempts furnish floor plan verify geometrically valid pressing verify floor plan button main floorsketch window 
ensure rooms overlap portals valid larger wall placed portal faces joint opens perpendicular wall 
floorsketch report errors user remedy attempting populate floor plan furniture 
furnish floor plan user simply presses populate floor plan button main floorsketch window 
user prompted furnit asking wants view step furnishing process 
choosing option cause furnit display current template configuration step mutation conflict resolution procedures 
step program prompts user asking wants continue view step wants move view finished furniture configuration 
furnit places icons representing pieces furniture floor plan displayed floorsketch main window 
icons size position furniture represent color coded function 
seating chairs pink tables brown shelves storage grey beds kitchen bathroom white 
icons representing clear space blue icons representing groups furniture green 
blue green icons displayed allow user follow program reasoning high level templates 
see table page complete list icons colors 
manually adjusting furniture configuration floor plan furnished user manually adjust position rotation piece furniture add new pieces furniture floor plan 
piece furniture moved clicking icon left mouse button dragging new location 
icon rotated origin clicking middle mouse button moving mouse 
new furniture placed pull menu default furniture types main floorsketch window 
furniture type selected user clicks place button clicks location floor plan icon placed 
note furniture icons placed inside rooms 
default templates default room templates provided furnit living room dining room master bedroom bedroom ce student ce 
addition default templates furniture groups individual pieces furniture provided see second third tables appendix complete listing 
building blocks creating custom templates 
range templates provided furnit reflects system originally designed furnish models private homes 
extended templates appropriate faculty student ces making suitable wider range building types 
conversation reading shelves default living room template 
significant amount time put ensuring templates individual pieces groups furniture contained su cient open space function parent template 
example template contains su cient room open 
template dining room set contains su cient space chairs pushed back table 
piecewise functionality ensured child templates left combine reasonable configuration 
furnit default templates model configurations common furniture configurations homes ces 
default templates represent commonly room types 
user provided interface creating additional custom templates needed 
living room default living room template see contains conversation group sofa table chair reading group table chair shelves 
conversation group vital 
note shelves visible furniture groups living room allows shelves serve entertainment unit containing tv set 
meal table default dining room template 
dining room default dining room template see contains dining room set side board 
dining room set vital 
note dining room set template contains su cient space chairs pushed back table 
master bedroom bedroom default templates master bedrooms bedrooms provided see 
master bedroom contains seating bedroom contains 
templates contain bed sets consisting bed accompanying tables 
bed set vital child room template 
ce student ce default ce template see modeled mit faculty ces 
workspace desk chair extra table space shelves provided 
workspace template vital scaled maximum size 
default student ce template see modeled graduate student ces mit laboratory computer science 
template contains workspace students 
vital third desk chair dropped room small accommodate students 
workspace templates storage seating default master bedroom template 
seating default bedroom template 
workspace table shelves default faculty ce template 
scaled minimum size 
note shelf student ce hanging wall 
fits workspace students conflict workspace template appear 
variations furniture configurations previously discussed furnit computes root templates room random order 
means random mutation original template chosen cases initial conflicts detected 
furthermore conflicts di er mutations mutation di erent conflicts templates due doors windows 
leads di erent conflict resolution procedures applied di erent mutations template 
result range furniture configurations created single template 
floor plan rooms chance rooms furniture configuration consecutive runs furnit small 
simple floor plan incorporating default template types depicted pages 
example floor plan populated times time di erent result 
rooms furniture configuration 
example dining room configuration cases 
due dining room small compared applied template 
scaling template leads workspace workspace workspace shelves default student ce template 
root template failing result room furniture configuration cases 
sample configuration 
second sample configuration 
third sample configuration 
fourth sample configuration 
fifth sample configuration 
chapter discussion structure algorithms furnit system described possible discuss shortcomings successes furnit system 
furnit provides powerful framework furnishing rooms 
basic framework place improvements system 
currently furnit default templates 
cover wide range room types richer set default templates developed 
interface creating custom templates improved 
furnit template classes provide interface creating new templates 
requires user write code links furnit libraries 
cumbersome labor intensive 
graphical user interface specifying new templates ideal reasoning spaces inherently visual 
solution enhance floorsketch interface allow user draw new templates icons representing pieces furniture defined templates 
new templates added procedurally template type table maintained furnit libraries 
furnit originally developed order furnish models private homes 
spite addition templates appropriate di erent types ces range provided default templates reflects initial focus private homes 
developing new default templates room types public buildings su cient furnit ideal furnishing models types buildings 
building codes occupational safety regulations fire regulations di er greatly private public buildings 
want create truly functional furniture configurations public buildings need create new set heuristics ensure egress handicap access maintained public spaces 
automatic furniture population clearly necessary creating models large indoor architectural environments time take furnish environments hand prohibitive 
furnit provides powerful framework furnishing models large buildings 
set templates created process fully automatic 
set templates automatically furnish large numbers buildings user input 
furnit template model flexible easily model wide range room types 
principle system reason arbitrarily deep hierarchy templates allowing furnit reason complex furniture configurations 
major strength furnit system allows user compactly encode rules room type furnished 
specification inherently flexible accommodating di erent room sizes door window configurations resulting range final configurations 
building containing large number rooms type require range templates room type 
single template provide range configurations necessary avoid monotony 
appendix tables default room template types default room types size inches furniture groups room initial size living room conversation reading entertainment dining room meal master bedroom storage storage seating bedroom storage seating breakfast room meal ce workspace table shelves student ce workspace shelves table table default room template types 
default furniture group template types default furniture group types min max size inches furniture group conversation love seat table chair sofa table chairs reading chair side table chair side table entertainment tv stand wall section meal table chairs table chairs desk chair desk chair full size bed king size bed table table default furniture group template types 
default furniture template types default furniture types min max size inches furniture template func 
space storage small seating chair chair table table counter counter counter cabinets row cabinets row cabinets stove stove stove toilet toilet size fits shower shower shower table table default furniture template types 
default furniture icons default furnit icons furniture represented color seating chair sofa pink table space table desk brown shelves shelves beds beds white storage gray kitchen bathroom supplies stove toilet shower white open space debugging blue unresolved template debugging green table table furniture icon colors 
appendix setting running furnit furnit part fire walk framework 
order run furnit user compile entire fire walk source tree 
instructions setting running fire walk 
locations furnit source files fire walk source tree brief description function furnit source file 
setting furnit fire walk source tree checked code repository mit graphics group server cvs code versioning tool 
descriptions check code set necessary environment variables compile source tree 
set environment variable projects 
set base environment variable desired root directory source tree 
name fire walk root directory walkthru 
base set tree walkthru 
run cvs checkout walkthru directory want store code 
copy entire tree source files directory 
go directory base bin set file permissions scripts directory world readable executable 
run script 
set necessary environment variables 
go base src run pmake 
compile fire walk libraries 
go base util run 
create fire walk executable store base system os bin 
user plans run fire walk regular basis set base source base bin file 
running furnit run furnit run select run floorplan subprograms menu 
bring main floorsketch window 
furnit source files control functions conflict resolution procedures furnit implemented base src library 
includes header files 
included source files library 
includes header files libraries necessary library 
included inference cpp contains setup procedures control procedures 
resolve cpp contains conflict resolution procedures 
furniture cpp contains procedures placing pieces furniture leaf templates 
useful cpp implements macros utilities functions 
template classes implemented part library 
template cpp implements template classes 
furniture cpp implements furniture classes 
util util cpp contains keywords furniture templates sylif parser 
floorsketch interface including furnit extensions implemented file base util tcl 
floorsketch callbacks extrusion procedures translators implemented base src library 
note callbacks interact floorsketch data structures registered file base src cpp 
bibliography alexander 
timeless way building 
oxford university press new york ny 
alexander sara ishikawa murray silverstein 
pattern language 
oxford university press new york ny 
richard 
walkthru editor realistic ective interaction virtual building environments 
master thesis university california berkeley 
richard carlo sequin 
interactive simulation fire virtual building environments 
proceedings siggraph los angeles ca august 
city boston fire department boston massachusetts 
fire prevention code august 
alain 
interior architecture decoration 
william morrow new york ny 
design basics ne 
home plans 
catalogue 
laura downs 
interchange format symbolic building design 
master thesis university california berkeley 
home plan design service ne 
gold seal home plans 
catalogue 

design conversations computer evaluating experiential qualities physical form 
editor futures pages boston 
john levine tony mason doug brown 
lex yacc 
reilly 
leslie 
home decorating guide time 
william morrow new york ny 
julius martin 
human dimension interior design source book design standards 
billboard publications new york ny 
anoop parikh 
making small spaces 
international publications new york ny 
paul je 
tcl tk nutshell 
reilly 
bjarne stroustrup 
programming language 
addison wesley third edition 
seth teller 
urban model acquisition geo located images 
proceedings pacific graphics singapore october 
seth teller tom funkhouser carlo sequin 
ucb system interactive visualization large architectural models 
presence 
department housing urban development boston massachusetts 
hud handbook minimum property standards housing july 
william francis secretary commonwealth boston massachusetts 
commonwealth massachusetts state building code cmr november 
mary ann young david 
idiot guide decorating home 
alpha books new york ny 

