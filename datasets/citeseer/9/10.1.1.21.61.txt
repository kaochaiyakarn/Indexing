authors propose markup web services daml family semantic web markup languages 
markup enables wide variety agent technologies automated web service discovery execution composition interoperation 
authors technology automated web service composition 
semantic web services sheila mcilraith tran cao son zeng stanford university web solely repository text images evolving provider services information providing services flight information providers temperature sensors cameras world altering services flight booking programs sensor controllers variety commerce business business applications 
web accessible programs databases sensors variety physical devices realize services 
decade computers ubiquitous devices sort computer inside 
vint cerf fathers internet views population internet smart devices harbinger new revolution internet technology 
today web designed primarily human interpretation 
seeing increased automation web service interoperation primarily commerce applications 
generally interoperation realized apis incorporate hand coded information extraction code locate extract content html syntax web page presentation layout 
unfortunately web page changes presentation layout api modified prevent failure 
fundamental having computer programs agents implement reliable large scale interoperation web services need services computer interpretable create semantic web services properties capabilities interfaces effects encoded unambiguous machine understandable form 
realization semantic web underway development new ai inspired content markup languages oil daml oil www daml org daml oil daml members darpa agent markup language daml family languages 
languages defined semantics enable markup manipulation complex taxonomic logical relations entities web 
fun component semantic web markup web services computer interpretable apparent agent ready 
article addresses precisely component 
approach web service markup provides agent independent declarative api capturing data metadata associated service specifications properties capabilities interface execution prerequisites consequences 
markup exploits ontologies facilitate sharing reuse composition mapping succinct local web service markup 
vision partially realized web service markup dialect newly proposed daml family semantic web markup languages 
called semantic markup web services creates distributed knowledge base 
provides means agents populate local kbs reason web services perform automatic web service discovery execution composition interoperation 
illustrate claim agent technology reusable generic procedures customizing user constraints exploits web service markup 
agent technology realized order language situation calculus extended version agent programming language congolog deductive machinery 
illustrates basic components semantic web services framework 
composed semantic markup web services user constraints web agent generic procedures 
addition markup framework includes variety agent tech ieee ieee intelligent systems specialized services agent broker send requests service appropriate web services dispatch service responses back agent 
automating web services realize vision semantic web services creating semantic markup web services machine understandable apparent 
developing agent technology exploits semantic markup support automated web service composition interoperability 
driving development markup agent technology automation tasks semantic markup web services enable particular service discovery execution composition interoperation 
automatic web service discovery involves automatically locating web services provide particular service adhere requested properties 
user say example find service sells airline tickets san francisco toronto accepts payment diner club credit card currently human perform task search engine find service reading web page associated service executing service see adheres requested properties 
semantic markup services specify information necessary web service discovery computer interpretable semantic markup service web sites service registry ontology enhanced search engine automatically locate appropriate services 
automatic web service execution involves computer program agent automatically executing identified web service 
user request buy airline ticket www com ual flight san francisco toronto march execute particular service today web buying airline ticket user generally go web site offering service fill form click button execute service 
alternately user send request directly service url appropriate parameters encoded 
case requires human understand information required execute service interpret information service returns 
semantic markup web services provides declarative computer interpretable api executing services 
markup tells agent input necessary information returned semantic markup personal constraints preferences web procedures ontologies execute potentially interact service automatically 
automatic web service composition interoperation involves automatic selection composition interoperation appropriate web services perform task high level description task objective 
user say travel arrangements ijcai conference trip currently task requires composition web services interoperate user select web services manually specify composition ensure software interoperation custom created provide input choice points example selecting flight options 
semantic markup web services information necessary select compose respond services encoded service web sites 
write software manipulate markup specification task objectives achieve task automatically 
service composition interoperation leverage automatic discovery execution 
tasks entirely realizable today web primarily lack content markup suitable markup language 
academic research web service discovery growing agent matchmaking research system proposes representation annotating agent capabilities located brokered 
industrial agent broker knowledge base email 
semantic markup enabled agent technology 
framework semantic web services 
web service ontologies semantic markup web service sites efforts focused primarily improving web service discovery aspects service execution initiatives universal description discovery integration uddi standard service registry web service description language wsdl released september framework independent web service description language ebxml initiative united nations oasis organization advancement structured information standards standardize framework trading partner interchange 
business infrastructure companies announce platforms support level web service automation 
examples products include hewlett packard speak description registration dynamic discovery platform services microsoft net biztalk tools oracle dynamic services framework ibm application framework business sun open network environment 
solutions anticipating wishing accelerate markup services discovery building ontologies tools organize customize web service discovery platform delivering infrastructure coordinates web services public private trading exchanges 
distinguishes arena semantic markup web services expressive semantic web markup language defined semantics 
semantic march april computer org intelligent markup provides semantic layer comfortably sit top efforts wsdl enabling richer level description sophisticated interactions reasoning agent application level 
demonstrate claim agent technology performs automatic web service composition area industry tackling great measure 
semantic web service markup automation tasks described driving development semantic web services markup daml family markup languages 
marking web services yahoo driving direction information service united airlines flight booking service user group constraints preferences user say bob schedule prefers driving flying driving time destination hours stock quotes exclusively trade web service forth agent procedures partial compositions existing web services designed perform particular task marked sharing reuse groups users 
examples include bob business travel booking procedure friend stock assessment procedure 
daml markup provides declarative representation web service user constraint knowledge 
see case daml sidebar learn chose daml family markup languages 
key feature markup exploitation ontologies daml oil roots description logics frame systems support 
ontologies encode classes subclasses concepts relations pertaining services user constraints 
example service buy subclasses service inheriting parameters customer origin destination forth 
domainindependent web service ontologies augmented domain specific ontologies inherit concepts domain independent ontologies additionally encode concepts specific individual web service user 
ontologies enables sharing common concepts specialization concepts vocabulary reuse multiple applications mapping concepts different ontologies composition new concepts multiple ontologies 
ontologies support development succinct user specific markup enabling individual service user inherit semantic markup ontologies requiring minimal markup web site 
importantly ontologies give semantics markup constraining grounding interpretation 
web services users need exploit web service ontologies foresee domains communities want agree standard definition terminology encode ontology 
daml markup web services collectively markup web services provides declarative advertisements service properties capabilities automatic service discovery declarative apis individual services necessary automatic service execution declarative specifications prerequisites consequences individual service necessary automatic service composition interoperation 
semantic markup multiple web services collectively forms distributed kb web services 
semantic markup populate detailed registries properties capabilities web services knowledge indexing retrieval web services agent brokers humans alike 
semantic markup populate individual agent kbs enable automated reasoning web services 
web service markup comprises number different ontologies provide backbone web service descriptions 
define domain independent class services service divide subclasses 
context web primitive service individual web executable computer program sensor device call web service 
ongoing interaction user primitive service 
user agent calls service service returns response 
example primitive service web accessible program returns postal code valid address 
contrast complex service composed multiple primitive services requiring interaction conversation user services user decisions 
example interacting www amazon com buy book 
domain specific web service ontologies subclasses general classes 
enable individual service inherit shared concepts vocabulary particular domain 
ontology specified web site markup simply refined augmented provide markup 
example define ontology containing class buy subclass subclasses forth 
buy subclasses buy 
service 
associated service set parameters 
example class buy parameter customer 
inherit customer parameter parameters origin destination 
constructed domain specific ontologies describe parameter values 
example restricted values origin destination instances class airport 
inherits parameters restricting property airlines includes ual 
value restrictions provide important way describing web service properties supports better brokering services simple type checking declarative apis 
addition restrictions agent technology create customized user interfaces 
markup web service discovery 
automate web service discovery associate properties services relevant automated service classification selection 
case include service independent property types name service url unique service identifier intended forth 
include property types valid methods payment travel bonus plans accepted forth 
markup certain properties specified collectively provides declarative advertisement service properties capabilities computer interpretable automatic service discovery 
markup web service execution 
automate web service execution markup computer org intelligent ieee intelligent systems case daml years markup languages developed view creating languages adequate realizing semantic web 
construction languages evolving layered approach language development 
xml language separate markup web content web presentation facilitating representation task domain specific data web 
unfortunately xml lacks semantics 
computer programs guaranteed determine intended interpretation xml tags 
example computer program able identify salary data refers information wage data due date specified web service vendor site different due date purchaser site 
world wide web consortium developed resource description framework rdf standard metadata 
goal add formal semantics web defined top xml provide data model syntax convention representing semantics data standardized interoperable manner 
provides means describing relationships resources basically uri terms named properties values 
rdf working group developed rdf schema object oriented type system effectively thought minimal language 
rdf rdfs provide building blocks defining semantic web markup language lack expressive power 
example define properties properties necessary sufficient conditions class membership equivalence disjointness classes 
furthermore constraints expressible domain range constraints properties 
importantly semantics remains underspecified 
efforts build rdf rdfs ai inspired knowledge representation languages shoe daml ont oil daml oil 
daml oil second daml family markup languages replacing daml ont expressive ontology description language markup 
building top rdf rdfs roots ai description logics daml oil overcomes expressiveness inadequacies rdfs important defined model theoretic semantics axiomatic specification determines language intended interpretations 
daml oil unambiguously computer interpretable making amenable enable computer agent automatically construct execute web service request interpret potentially respond service response 
markup execution requires dataflow model function metaphor process conversation model realize markup 
primitive service conceived function input values potentially multiple alternative output values 
example user orders book response differ depending book stock stock print 
complex services conceived composition functions services output require exchange information agent individual service 
example complex service books flight user involve finding flights meet user request suspending user selects flight 
complex services composed primitive complex services typical programming languages business process modeling language constructs sequence iteration forth 
markup provides declarative apis individual web services necessary automatic web service execution 
additionally provides process dataflow model complex services 
agent interoperability automated reasoning techniques exploit agent technology 
months daml extended addition daml logical language defined semantics ability express propositional horn clauses 
horn clauses enable compact representation constraints rules reasoning 
consider flight information service encodes flight shows movie 
way create markup flight indicating 
compact representation write constraint flight hours movie deductive reasoning infer flight show movie 
representation compact informative easier modify explicit enumeration individual flights movies 
similarly clauses represent markup constraints business rules user preferences compact form 
daml oil daml provide markup language semantic web reasonable expressive power defined semantics 
expressive power necessary layered approach language development lets expressive logical language extend daml act alternate extension daml oil 
daml developed current web service markup combination daml oil subset order logic 
markup evolve daml family languages evolves 

fensel semantic web languages ieee intelligent systems vol 
nov dec 

lassila swick resource description framework rdf model syntax specification recommendation world wide web consortium feb www org tr rec rdf syntax current apr 

luke heflin shoe 
proposed specification www cs umd edu projects plus shoe spec html current mar 

hendler mcguinness darpa agent markup language ieee intelligent systems vol 
nov dec pp 


van harmelen horrocks faqs oil ontology inference layer ieee intelligent systems vol 
nov dec pp 

agent respond automatically complex service execution automatically interoperate service require information encoded automatic composition interoperation 
markup web service composition 
function metaphor automatic web service execution provides information data flow provide information web service 
automate service composition services agents interoperate encode service affects world 
example user visits www amazon com march april computer org intelligent successfully executes service knows purchased book credit card receive book address provided 
consequences web service execution part markup part specification provided automatic execution 
automate web service composition interoperation select individual service meet objective encode prerequisites consequences web service execution computer 
daml markup web services automatic composition interoperability built ai action metaphor 
conceive web service action 
primitive actions turn conceived world altering actions change state world user credit card booking user ticket forth information gathering actions change agent state knowledge executing action agent knows piece information combination 
advantage exploiting action metaphor describe web services lets bring bear vast ai research reasoning action support automated reasoning tasks web service composition 
developing markup choose remain agnostic respect action representation formalism 
ai community widespread disagreement best action representation formalism 
consequence different agents different internal representations reasoning planning sequences actions 
planning community addressed lack consensus developing specification language describing planning domains plan domain description language pddl 
adopt language specifying web services terms pddl inspired parameters preconditions effects 
input output necessary automatic web service execution play role purposes web service composition interoperation 
assume planning community users compile general representation action formalism best suits reasoning needs 
translators exist pddl variety different ai action formalisms 
complex actions complex services compositions individual services dependencies compositions predicated state data case execution motivated markup 
complex actions composed primitive actions complex actions typical programming languages modeling language constructs sequence parallel forth 
daml markup user constraints preferences vision agents exploit users constraints preferences help customize users requests automatic web service discovery execution composition interoperation 
examples user constraints preferences include user bob schedule travel bonus point plans prefers drive driving time destination vision agents exploit users constraints preferences help customize users requests automatic web service discovery execution composition interoperation 
hours likes get stock quotes trade web service requires domestic business travel particular set carriers forth 
actual markup user constraints relatively straightforward daml 
express constraints horn clauses see sidebar ontologies users classify inherit share constraints 
inheriting terminology web service ontologies ensures example bob constraint enforced determining value service uses notion 
challenging markup agent technology appropriately exploit 
daml enabled agent technology semantic markup web services enables wide variety agent technologies 
agent technology developing exploits daml markup web services perform automated web service composition 
consider example task earlier travel arrangements ijcai conference trip perform task services available web find ijcai conference web page determine conference location dates 
location choose appropriate mode transportation 
traveling air check flight schedules web services book flights 
entire procedure lengthy somewhat tedious perform average person easily describe travel arrangements 
easy get arrangements 
task difficult basic steps need decisions customize generic procedure enforce traveler constraints 
constraints numerous consequently difficult person keep mind satisfy 
fortunately enforcing complex constraints computer 
objective develop agent technology perform types tasks automatically exploiting daml markup web services user constraints preferences 
argue activities users wish perform semantic web context workplace home viewed customizations reusable high level generic procedures 
vision construct reusable high level generic procedures represent distinguished services daml subset markup designed complex services 
hope archive sharable generic procedures ontologies multiple users access 
generic procedures customized respect users constraints deductive machinery 
generic procedures customizing user constraints built research model programming research agent programming language golog variants congolog 
goal provide daml enabled agent programming capability supports writing generic procedures web service tasks 
model programs comprise model case agent kb program generic procedure wish execute 
argue situation calculus logical language reasoning action change computer org intelligent ieee intelligent systems aj 
congolog provide compelling language realizing agent technology 
user requests generic procedure generic travel arrangements procedure agent populates local kb subset daml web service markup relevant procedure 
adds user constraints kb 
exploiting action metaphor web services agent kb provides logical encoding preconditions effects web service actions language situation calculus 
model programs generic procedures written congolog prior knowledge specific services agent exactly available services 
capture achieve exactly 
procedural programming language constructs forth composed concepts defined daml service constraints ontologies describe procedure 
agent model program executable deductively instantiate context agent kb includes properties agent user properties specific services state world 
perform instantiation deductive machinery 
instantiated program simply sequence primitive actions individual web services congolog interprets sends agent broker request service 
great advantage generic procedures generic procedure called different parameters user constraints generate different sequences actions 
congolog congolog high level logic programming language developed university toronto 
primary robot program 
aj aj 

tree situations 

aj 
ming support high level robot task planning 
congolog built top situation calculus 
situation calculus world conceived tree situations starting initial situation evolving new situation performance action example web services origin dest date 
situation history actions performed 
state world expressed terms relations functions called fluents true false particular value situation example origin dest date 
illustrates tree situations induced situation calculus theory actions ignore time 
tree computed reflects search space situation calculus kb induces 
performed deductive plan synthesis plan sequences web service actions search space developed generic procedures congolog 
congolog provides set extralogical procedural programming constructs assembling primitive complex situation calculus actions complex actions 
complex actions called pseudo fluents pseudo actions respectively fluent action language situation calculus situation arguments suppressed 
shows subset constructs congolog language 
user employ constructs write generic procedures complex actions congolog 
instruction set complex actions simply general web services example complex actions 
gives examples congolog statements 
instantiate congolog program primitive action test truth 
sequence nondeterministic choice actions nondeterministic choice arguments nondeterministic iteration endif loop endwhile procedure proc endproc 
subset constructs congolog language 
examples congolog statements 
context kb abbreviation defined 
says holds terminating situation execution complex action starting situation agent kb generic procedure instantiate respect kb current situation entailing binding situation variable situations simply history actions binding defines sequence actions leads successful termination generic procedure kb important observe congolog programs generic procedures programs conventional sense 
complex structure programs including loops statements forth differ necessarily deterministic 
necessarily dictating unique sequence actions congolog programs serve add temporal constraints situation tree kb depicts 
eliminate certain branches situation tree designated reducing size search space situations instantiate generic procedure 
march april computer org intelligent hotel dest endwhile dest cust dest endif proc travel cust origin dest purpose register cust origin dest cust dest cust inform cust endproc travel bob chen san francisco monterey daml 
contacting web service broker request driving time san francisco monterey result contacting web service broker request car info san francisco result hertz shuttle car counter economy car automati ace airport shuttle provided economy car aut national shuttle car counter economy car auto fox airport shuttle provided mini car airport shuttle provided mini car au intl airport shuttle provided economy ca holiday airport shuttle provided economy car able rent airport shuttle provided compact select hertz san francisco airport location shuttle car counter economy ar automatic air conditioning unlimited mileage contact web service broker request hotel info monterey result monterey ca rooms floors monterey ca rooms floors lexington monterey ca rooms inns monterey ca rooms best western intl monterey ca rooms monterey ca rooms floors monterey ca rooms floors best western intl monterey ca rooms flo 
agent interacting web services oaa 
desirable predicate desirable introduced congolog incorporate user constraints reduces tree situations desirable user 
generic procedures customizing user constraints simply serve constrain possible evolution actions depending specified play different roles 
extreme generic procedure simply constrains search space required planning 
extreme generic procedure dictate unique sequence actions way traditional program 
leverage nondeterminism describe generic procedures leeway relevant broad range users time customizable reflect desires individual users contrast traditional procedural program explicitly modified incorporate unanticipated constraints 
implementation implement agent technology started implementation online congolog interpreter quintus prolog 
augmented extended interpreter variety ways discussed 
issues dealt balancing offline search instantiation generic procedure online execution information gathering web services help constrain search space possible solutions 
added new constructs congolog language enable flexible encoding generic procedures incorporated users customizing constraints congolog adding desirable predicate mentioned earlier 
xterm modified interpreter communicate open agent architecture agent brokering system 
oaa sends requests appropriate web services dispatches responses agents 
semantic web reality web services communicate daml 
currently translate markup daml oil subset order logic back forth html set java programs 
information extraction program world wide web wrapper factory db cis 
upenn edu extract information web services currently produce html 
information gathering services performed way 
obvious practical financial reasons world altering aspects services executed 
example illustrate execution agent technology generic procedure making travel arrangements 
say bob wants travel san francisco monterey knowledge systems lab business darpa funded daml research project 
constraints personal inherited ksl belongs 
wishes drive fly driving time hours member ksl inherited constraint american carrier business travel 
reality demo doesn provide see 
user request agent user interface automatically created daml oil agent procedures ontology agent emails user travel itinerary done 
pur poses illustration provides window happening scenes 
trace run augmented extended congolog interpreter operating quintus prolog 
agent kb represented prolog encoding situation calculus translation semantic web service markup relevant generic travel procedure called bob user constraint markup 
defined generic procedure travel illustrated 
arrow points call congolog procedure travel user origin dest purpose parameters instantiated noted 
arrow shows interpreter contacting oaa sends request yahoo maps execute san monterey service yahoo maps provides 
yahoo maps indicates driving time san francisco monterey hours 
bob constraint wishes drive driving distance hours booking flight desirable 
consequently depicted arrow agent elects search available car rental point origin san francisco 
number available cars returned bob constraints affect car selection car selected arrow 
arrow depicts call oaa hotel destination point 
agent technology goes complete bob travel arrangements creating expense claim form bob filling information available web services 
expense claim illustrates agent ability read write semantic web markup 
agent sends email message bob notifying agenda 
demonstrate merits approach contrast execution generic travel procedure different user called different user constraints 
different user constraints produce different search space yielding different sequence web services 
related agent technology broadly relates plethora agent systems 
agent technologies deserve mention golog family agent technologies referenced earlier researchers sri web agent technology softbot developed university washington 
notion action schemas describe actions internet agent achieve computer org intelligent ieee intelligent systems goal 
note ibrow system intelligent brokering service knowledge component reuse web 
similar ibrow agent brokering system ontologies support interaction web 
focusing developing exploiting semantic web markup provide kb agents 
agent technology performs automated service composition markup 
problem ibrow community address 
daml family semantic web markup languages enable web service providers develop semantically grounded rich representations web services variety different agent architectures technologies exploit variety different ends 
markup agent technology article possible realizations 
building markup provide core set web service markup language constructs language re calling daml 
re working collaboration sri carnegie mellon university bolt newman nokia ll eventually publish language www daml org 
agent technology automating web service composition interoperation fast evolving 
ll updates www ksl stanford 
edu projects daml webservices 
acknowledgments richard fikes deborah mcguinness useful discussions related ron jessica jenkins help service ontology construction reviewers adam cheyer karl pfleger helpful comments draft article 
cognitive robotics group university toronto providing initial congolog interpreter extended augmented sri open agent architecture software 
gratefully acknowledge financial support defense advanced research projects agency daml program 

hendler agents semantic web ieee intelligent systems vol 
mar apr pp 


berners lee fischetti weaving web original design ultimate destiny world wide web inventor harper san francisco 

van harmelen horrocks faqs oil ontology inference layer ieee intelligent systems vol 
nov dec pp 


hendler mcguinness darpa agent markup language ieee intelligent systems vol 
nov dec pp 


de giacomo lesperance levesque congolog concurrent programming language situation calculus artificial intelligence vols 
aug pp 


sycara dynamic service matchmaking agents open information environments acm sigmod record vol 
mar pp 


ghallab pddl planning domain definition language version tech 
report cvc tr dcs tr yale center computational vision control yale univ new haven conn 

mcilraith modeling programming devices web agents published proc 
nasa goddard workshop formal sheila mcilraith research scientist stanford university knowledge systems laboratory project lead ksl daml web services project 
research interests include knowledge representation reasoning techniques web modeling diagnosing controlling static dynamical systems model programming devices agents 
received phd computer science university toronto 
contact sam ksl stanford edu 
tran cao son assistant professor department computer science new mexico state university 
research interests include knowledge representation autonomous agents reasoning actions changes answer set programming applications planning diagnosis model reasoning logic programming 
contact cs nmsu edu 
zeng graduate student department computer science stanford university 
research assistant knowledge systems laboratory 
research interests include semantic web knowledge representation commonsense reasoning multiple agents systems 
contact ksl stanford edu 
approaches agent systems lecture notes computer science springer verlag new york 

mcilraith son adapting golog programming semantic web published proc 
th symp 
logical formalizations commonsense reasoning common sense 

martin cheyer moran open agent architecture framework building distributed software systems applied artificial intelligence vol 
nos 
jan mar pp 


waldinger deductive composition web software agents published proc 
nasa goddard workshop formal approaches agent systems lecture notes computer science springer verlag new york 

etzioni weld softbot interface internet comm 
acm july vol 
pp 


benjamins ibrow intelligent brokering service knowledge component reuse world wide web proc 
th banff knowledge acquisition knowledge system workshop kaw banff canada cpsc 
ucalgary ca kaw kaw kaw proc 
html current mar 
march april computer org intelligent 
