faculty mathematical sciences university twente university technical social sciences memorandum tabu search algorithms job shop problems single transport robot april universit ck fachbereich mathematik informatik ck germany box ae enschede netherlands phone fax email memo math utwente nl issn tabu search algorithms job shop problems single transport robot johann university twente faculty mathematical sciences box ae enschede netherlands math utwente nl universit ck fachbereich mathematik informatik ck germany mathematik uni de march consider generalized job shop problem jobs additionally transported machines single transport robot 
transportation times jobs empty moving times robot taken account 
objective determine schedule minimal makespan 
local search algorithms problem appropriate neighborhood structures defined problem specific properties 
stage procedure compared stage approach combination 
computational results test data arising job shop benchmark instances enlarged transportation empty moving times 
keywords scheduling job shop problem robot transportation tabu search subject classification supported deutsche forschungsgemeinschaft project consider generalized job shop scheduling problem jobs additionally transported machines single transport robot 
job shop problem transportation times single robot generalization classical job shop problem may formulated follows machines jobs 
job consists chain operations processed order 
operation dedicated machine associated operation processed preemption duration 
machine process operation time 
additionally transportation times considered 
occur job changes machine depend jobs machines transport takes place 
assume transport operations done single transport robot handle job time 
furthermore assume unlimited buffer space machines 
objective determine feasible schedule minimizes makespan completion time operation processed 
robot transportation times important may consider robot additional machine process transport operations 
case problem equivalent classical job shop problem machines 
robot process operations machines second operation job called bottleneck machine 
practice addition transportation times empty moving times arise robot moves empty machines carrying job 
empty moving times may regarded sequence dependent setup times robot empty moving times imply robot treated way machines 
consequently job shop problem transportation times single robot consists scheduling set classical machines special machine additionally sequence dependent setup times taken account 
propose different approaches integrate transportation stage procedures schedule machines 
stage procedure try deal problem distinguish robot machines 
possibility apply level approach level machine orders job shop machines fixed second level corresponding robot order constructed 
approaches combination tabu search methods calculate heuristic solutions considered problem 
scheduling machines classical job shop studied long period summaries see bla jain meeran scheduling problems transportation aspects received attention literature years survey cf :10.1.1.54.9979

differences various models deal interaction transportation routing classical job scheduling decisions 
shop problems transportation times unlimited buffer space single robot literature available 
proved minimizing makespan machine flow shop constant transportation times single robot np hard 
additional complexity results problems 
king proposed branch bound algorithm flow shop environment single robot 
derived approximation algorithms flexible flow shop environment stages transportation times 
ulusoy proposed heuristic simultaneously scheduling machines vehicles flexible manufacturing system job shop structure 
remainder organized follows 
section give formal definition considered scheduling problem state additional assumptions 
section extend known disjunctive graph model situation transport robot derive problem specific properties basis local search procedures 
stage approach proposed section stage procedure combination section 
computational results section 
problem formulation section formal definition considered problem state additional assumptions 
machines mm jobs jn 
job jj consists nj operations oij nj processed order operation oij processed preemption dedicated machine ij mm pij time units 
machine process operation time 
additionally transportation times considered 
occur job changes machine job jj processed machine mk transportation time arises 
transportation times may job dependent job independent 
assume done single transport robot handle job time 
transportation times supposed satisfy triangle inequality jobs jj machines mk ml mh 
inequality hold indices save time transport mk ml transporting job jj mk mh 
practice situation occur assumption real restriction 
addition transportation times consider empty moving times kl 
transportation times arise job transported machine empty moving times kl arise robot moves empty machine mk ml carrying job 
times assume kk kh hl kl kl min 
assumption means empty moving times considered robot waits machine transport 
second condition triangle inequality third states moving empty machines take longer moving job machines 
practical situations assumptions satisfied cases 
classical shop problems assume sufficient buffer space exists machines 
means machine mk unlimited output buffer jobs processed mk waiting robot may stored 
jobs automatically transferred buffer times transfer considered 
additionally machine ml unlimited input buffer jobs transported await processing ml may stored 
data pij kl assumed non negative integers 
objective determine feasible schedule minimizes makespan cmax max cj cj denotes completion time operation job jj 
disjunctive graph model section known disjunctive graph model classical job shop problem developed roy extended job shop problem transportation times single robot 
classical disjunctive graph model deals conflicts regarding job shop machines incorporate scheduling robot model 
done introducing transport operations additional vertices disjunctive graph requiring operations processed robot 
furthermore empty moving times modeled sequence dependent setup times 
job jj introduce nj called transport operations tij nj precedences oij tij oi processing time tij equal transportation time job jj machine ij tij ij mk ml 
robot may considered additional machine process transport operations 
construct feasible schedule determine feasible starting times operations oij machines mm transport operations tij robot 
disjunctive graph model schedules represented orders operations processed machine order transport operations robot 
gkl set transport operations transport routing tij gkl ij mk ml 
disjunctive graph dm dr 
set vertices oij nj tij nj represents operations transport operations jobs dummy nodes 
source sink define start operations 
operations oij weighted processing times pij transport operations tij transportation times tij weights dummy nodes 
set directed arcs represents precedence constraints called set conjunctions 
arcs oij tij oi jobs nj weighted 
additionally arcs source operations operations sink 
set undirected edges dm consists pairs operations processed machine linked directed path conjunctions 
pairs called machine disjunctions 
edge oij dm ij uv mk represents possible orders operations oij may processed mk weighted 
set undirected edges dr consists pairs transport operations linked directed path conjunctions called robot disjunctions 
edge tij tuv dr represents possible orders transport operations tij tuv may processed robot weighted pair kl gh empty moving times tij ghk tuv 
solve scheduling problem turn undirected arcs dm dr directed ones 
concerning edge dr weighted pair transportation times point directed arc gets corresponding unique weight 
orient edge tij tuv tij ghk tuv direction tij tuv kl orient direction gets weight gh 
disjunctions directed called fixed 
call set sm fixed machine disjunctions machine selection robot disjunctions sr robot selection union sm sr selection 
selection called complete disjunctions dm dr fixed resulting graph sm sr acyclic 
complete selection may construct corresponding feasible schedule defining starting times operations follows 
node length longest path length path defined sum weights nodes arcs path node excluded 
consider schedule operation started time 
obviously schedule feasible 
furthermore selection operation started time operation shifted left changing orders defined hand feasible schedule defines order operations processed machine order robot 
orders induce complete selection corresponding schedule worse objective function regular 
set schedules represented complete selections optimal solution exists 
completion time cmax ofthe schedule corresponding selection length longest path acyclic graph 
path called critical path 
empty moving times occur transport operations processed consecutively robot transitive arcs corresponding fixed robot disjunctions taken account longest path calculations 
due assumptions transport empty moving times show paths consisting transitive arcs longer paths consisting non transitive arcs transitive arcs change longest path lengths 
transport operations corresponding robot disjunctions directed assuming operation belongs job situation gk lh due assumptions empty moving times gh gh gk kl lh gk min lh gk lh transitive arc longer path consisting arcs 
transitivity property holds paths consisting transport operations shows transitive arcs removed disjunctive graph 
job shop problem single robot may considered special case job shop problem sequence dependent setup times 
generalization problem general shop problem sequence dependent setup times considered brucker thiele sters 
extension general shop problem set operations partitioned disjoint groups gq 
machine operation group gg processed immediately operation group gf occurs operations 
situation times occur successive transport operations tij robot corresponding empty moving times 
setup times arise ordinary operations oij 
instance job shop problem machines robot transformed machine instance job shop problem setup times transport operations partitioned groups gkl machine routings 
disjunctive graph job shop single robot jobs complete selection example consider instance job shop problem single robot machines jobs ordinary operations transport operations 
corresponding schedule corresponding disjunctive graph 
transport operations belong job linked robot disjunction weighted corresponding empty moving times 
example disjunction transport operations weighted pair disjunction weighted 
complete selection shown machine disjunctions oriented andthe robot sequence 
corresponding schedule 
derive problem specific properties useful define appropriate neighborhoods local search algorithms 
represent feasible solutions complete selections sm sr disjunctive graph machine robot disjunctions fixed resulting graph acyclic 
consider situation complete selection makespan cmax isgiven want improve solution 
order define appropriate neighborhood structures called block approach 
approach proposed single machine problem rj lmax grabowski 
successfully adapted scheduling problems job shop flow shop problem cf 
brucker nowicki smutnicki brucker thiele 
definition blocks stated certain changes selection may chance improve current makespan cmax search process solutions considered candidates neighbored solutions 
critical path 
sequence uk successive nodes called machine block operations sequence processed consecutively machine enlarging subsequence operation leads subsequence fulfill property robot block sequence consists transport operations processed consecutively robot idle times empty moving times idle times conjunction exists consecutive operations enlarging subsequence operation violate previous properties 
example critical path machine block onm robot block 
critical path machine blocks onm onm robot block 
theorem basis defining suitable neighborhoods set selections 
easily proved combining corresponding proofs classical job shop problem cf 
brucker situation robot cf 

note condition robot triangle inequality empty moving times necessary 
theorem complete selection makespan cmax critical path 
complete selection cmax cmax exists operation machine block processed operation transport operations robot block processed opposite order 
stage approach section stage tabu search approach job shop problem single transport robot 
search space tabu search algorithm set complete selections iteration neighbored solution generated moving operation machine moving transport operation robot position 
define suitable neighborhoods describe elements tabu search approach 
definition suitable neighborhood theorem necessary conditions improving solution 
conditions stated theorem indicate orders operations blocks critical path changed 
neighborhood may defined job shop problem interchanging neighbored operations critical path cf 
van laarhoven 
neighborhood considers interchange neighbored operations inner part machine blocks due theorem moves result improving solutions 
nice theoretical property weakly connected arbitrary selection possible reach globally optimal selection sequence steps 
prove derive property neighbored operations blocks critical path 
lemma neighbored operations ordinary transport block critical path belonging complete selection arc path exists proof assume uk length exists 
case belong machine block 
vertices weighted processing times greater zero get pi pu pi contradicts fact arc critical path 
case belong robot block 
case transport operations processed consecutively robot 
feasible selection path contains transport operations 
consequence vertices uk belong operations processed machine say ml transport operation transport machine ml transport operation transport away machine ml 
implies length path consisting arc pi ll pi due ll 
pi pu contradicts fact arc critical path 
lemma prove theorem neighborhood weakly connected 
proof arbitrary non optimal complete selection optimal selection 
due theorem know operations block machine block robot block critical path corresponding disjunction fixed opposite direction compared consequently neighbored operations block property exist 
lemma exchange leads feasible selection step achieve solution disjunction fixed way iteratively applying step leads globally optimal solution sequence steps neighborhood 
theorem gives nice theoretical result neighborhood computational tests shown hand neighborhood give possibilities change solution reach different regions search space fast 
hand mentioned contains superfluous interchanges neighbored operations inner part machine blocks lead improvement current solution due theorem 
classical job shop problem shifts successful achieve diversification search process develop neighborhood shift operators 
selection sm sr critical path neighborhood contains feasible selections constructed follows operation different machine block moved operations operation different machine block moved operations operation position robot block moved operation position operation position robot block moved operation position 
denotes number operations moving operation position means moving 
example block allow moves 
brucker thiele moves defined concept called extra blocks proved neighborhood covers conditions theorem appropriate way 
preliminary computational tests shown navigation behavior new neighborhood better 
furthermore enlarging neighborhood additional operators neighborhood weakly connected improve quality results increased computational times 
neighborhood tabu search approach define information stored tabu list 
goal tabu list avoid coming back solution visited previous iterations 
iteration leave complete selection moving ordinary transport operation position store machine robot predecessor successor makespan cmax 
defined tabu cmax equals makespan element tabu list triple operations stored element tabu list scheduled way indicated entry tabu list 
static tabu list length tabu list hold constant search process 
objective values taken account attributes solutions additional aspiration criteria 
computational tests neighborhood indicated time consuming determine best non tabu neighbor iteration 
caused fact size neighborhood solution large evaluation neighbor needs recalculation makespan longest path calculation 
order reduce large computational effort iteration tabu search procedure lower bound calculations 
precisely neighbor current solution determine easily calculable lower bound makespan lower bound value best neighbor far evaluate makespan neighbor exactly 
incorporating bounds leads significant reduction computational times 
tabu search process stopped certain number non improving iterations 
start tabu search procedure solution constructed priority rule heuristic brucker thiele robot considered additional machine empty moving times regarded setup times 
additional details tabu search implementation connection presentation computational results section 
stage approach section local search algorithm theorem tries deal different situations machines robot individually 
algorithm organized stages 
outer stage operation machine moved position inner stage robot optimized new machine selection 
order obtain robot solution tabu search procedure subroutine 
stage approach previous section iteration neighbored solution constructed changing machine selection sm robot selection sr 
robot corresponds bottleneck machine old robot selection sr may bad solution new machine selection sr infeasible contains cycle 
overcome disadvantage alternative approach proceed stages define neighborhood changing machine selection robot selection adapted makespan new solution determined 
means second stage situation robot considered machine orders fixed 
interested robot order respecting precedences induced fixed machine orders having minimal makespan robot orders compatible machine selection 
resulting robot problem may described follows robot perform durations equal corresponding transportation times 
due orders operations belonging job precedence constraints form chains induced transport operations belonging job 
job processed machine consecutive time lags equal corresponding processing time associated precedences 
way precedences associated transport operations belonging different jobs induced fixed orders machines 
precedences empty moving times robot considered 
robot finished transportation job may move empty machine takes job 
corresponding empty moving times may regarded sequence dependent setup times 
furthermore job machine orders operations jobs result earliest possible starting times release dates transport operations respected feasible schedules robot 
completion time transport operation schedule robot makespan robot coincide makespan complete job shop schedule transport operation job job scheduled machine 
transport operation processing time pj called tail qj corresponds minimal time period completion time operation complete job shop schedule finished 
known notation single machine problem robot denoted prec lij rj sij max cj qj lij indicates arbitrary non negative finish start time lags lij sij stands sequence dependent setup times rj release dates heads cj qj denotes job sum completion time tail 
problem generalizes traveling salesman problem time windows strongly np hard 
take example section machine selection get situation robot 
chain precedences jobs get conjunction weighted time lag induced machine orientation 
transport operations linked conjunction disjunction weighted corresponding pair empty moving times exists clarity disjunction shown 
robot problem fixed machine selection effective tabu search procedure robot problem 
theorem neighborhood robot selection consists selections order critical operations robot block changed 
specifically neighborhood defined types operators adjacent transport operations block interchanged block operation shifted right internal block operation shifted block 
neighbored selection differs slightly current selection starting times transport operations appear shifted operation recalculated determine makespan neighbored solution 
due time lags calculation time consuming efficient evaluate neighbors exactly 
correct objective values calculated neighbors approximate values details see 
hierarchical decomposition considered problem neighborhood may defined hierarchical way machine selection changed robot selection adapted 
selection sm sr neighborhood contains feasible selections constructed follows operation different machine block moved operations operation different machine block moved operations obtained sr calculating heuristic solution robot problem associated new machine selection instances large transportation times may happen machine blocks exist considered solution neighborhood empty 
improve solution theorem robot block destroyed 
outer stage hierarchical approach want change machine selection robot selection allow additional moves level machine orders 
purpose move critical operations belonging machine blocks single operations chosen critical path 
theorem interchanging single critical operation belonging machine block machine predecessor successor reduce objective value combination change robot selection improving solution may obtained time lags robot problem cancelled moving critical operations machines 
enlarge feasible selections whereins single critical operation interchanged machine predecessor successor solution associated new machine selection resulting neighborhood tabu search algorithm described detail 
tabu search procedure section store attributes characterize visited solutions search process static tabu list 
complete selection machine selection results sm moving operation store objective value cmax triple consisting old machine predecessor successor sm 
defined tabu cmax equals objective value element tabu list associated triple element tabu list reconstructed note contrary stage approach machine operations stored tabu list robot sequence implicitly taken account cmax value 
search process stopped certain number non improving iterations 
search process versions tabu search algorithm robot problem 
evaluate neighbored solutions fast version 
choose best neighbored solution tabu try improve corresponding robot selection iterations second tabu search version 
order obtain starting solutions stage tabu search procedure modified versions priority heuristic brucker thiele 
stage version described previous section stage version calculate machine selection sm determine corresponding robot selection sr robot tabu search algorithm 
describe combinations stage stage approach 
combine approaches order intensify diversify search process 
version alternately apply algorithms allowing algorithm constant number non improving iterations 
algorithm starts stage approach stops non improving iterations 
allow non improving iterations stage approach factor constant 
algorithm continues changing approaches improvement best known solution occurs methods 
second version change order methods stage approach 
strategy organizing number iterations 
third version constant factor keep variable search process 
run non improving iterations stage non improving iterations stage approach calculate new value iter iter iter iter absolute number iterations stage stage approach run constant 
idea modified value algorithm tries regulate ratio number iterations procedures 
example iter big improving solutions run stage approach iter small improving solutions run stage approach intensify stage part search 
run approach specify initial value value may obtained testing algorithm different values 
computational results section computational results described tabu search algorithms 
implemented procedures tested sun ultra station mhz operating system solaris mb general storage 
test instances job shop problem transportation times available literature modified benchmark problems classical job shop problem denotes number machines number jobs 
known instances andp thompson 
instances number operations job equal number machines nj job processed machine exactly 
processing times operations instance interval interval 
various test instances obtained adding transportation empty moving times different characteristics 
transportation times distinguished cases job machine dependent times randomly generated interval adjusted way triangle inequality holds job independent transportation times analogously case job independent transportation times different values proportional distance corresponding machines assumed ordered single line constant transportation times analogously distinguished cases empty moving times randomly generated values kl values kl depending machine distances constant times kl way obtained instances transport operations arising job shop instances andp respectively 
processing times instance large interval time horizon modified instances large cmax 
generated instances processing times scaled factor replaced processing times pij pij 
computational tests large test set tried identifying interesting instances easy solve priority rules produce solution values small deviations lower bound values 
report results instances instances transport operations instances transport operations 
order estimate quality procedures compared results stage procedure stage procedure combination 
furthermore calculated lower bounds lb instances techniques constraint propagation linear programming cf 

unfortunately instances linear programming bounds calculated instances compare results relatively weak lower bounds lb obtained simple constraint propagation techniques 
preliminary computational tests showed quality different procedures varying starting solutions tabu list lengths stopping criteria differs instance instance 
final computational tests decided run procedures times different parameters 
stage stage procedures executed times combination times additionally varying different values number non improving iterations 
additionally run time limit minutes imposed 
concerning combination stage procedure third version variable factor outperformed versions constant factors 
preliminary tests took initial value 
instance approaches determined best value ub best average value ub av obtained test series specified number runs respectively 
heuristic solution values ub determined relative deviation lb ub lb lower bound value lb 
lb report average maximal relative deviations lb av lb max average maximal computational times minutes seconds instances respectively 
stage stage ub best ub av time lb av lb max lb av lb max lb av combination lb max stage stage table results instances ub best ub av time lb av lb max lb av lb max lb av combination lb max table results instances table shows small instances stage approach outperforms 
solutions obtained small computational times 
hand table gives impression approaches differ lot concerning quality give results 
take account deviations table weak lower bound lb 
instances better bound lb average deviation lb lb lb lb 
may expect larger instances average optimal value deviates lot lb may argue achieved quality stage approach outperforms approaches 
results tables obtained time limit minutes 
additional tests shown stage approach results improve lot larger computational times allowed 
hand stage method effort evaluating neighbored solutions high amount time solutions visited stage procedure 
allow computational times hour quality combined approach improves lot 
deviations best results ub best reduce lb av lb max longer computational times combined approach outperforms stage approach 
furthermore closer look individual results different instances shows approaches behave quite differently different instances 
table contains information sum transportation times transport operations ub best objective value obtained version priority heuristic ub best objective value obtained minutes stage approach ub best objective value obtained minutes stage approach short best objective value obtained minutes combined approach long best objective value obtained hour combined approach lb lower bound obtained constraint propagation linear programming lb weak lower bound obtained constraint propagation 
indicates best solution minutes indicates long run combined approach gave better solution best solution minutes approaches 
instance ub ub ub ub comb short long lb lb kl kl kl kl kl kl kl kl kl kl table individual results instances differences results different approaches quite large tendency real best method practice decide approaches choose different approaches calculate solutions 
test results combination stage approach short computational time combined method longer computational time best 
summarizing state approaches able produce solutions high quality tested instances 
deviations best solution values obtained version tests lb av lb max instances lb av lb max instances 
concluding remarks developed different tabu search approaches generalization job shop problem additionally transportation aspects taken account 
approaches differ way transportation treated 
stage approach complete problem transformed job shop problem sequence dependent setup times transportation leads additional machine 
tabu search method treats machines inclusive transportation machine way 
stage approach distinguishes transportation robot processing machines 
outer stage sequences machines fixed schedule second stage transport schedule calculated 
stages tabu search determine solutions 
computational results show approaches able produce solutions reasonable time 
short computational times available stage approach outperforms stage approach 
longer computational times combination methods successful 
furthermore tests shown success methods may differ instance instance practice methods may worthwhile 
research interesting develop acceleration techniques stage approach methods able produce stronger lower bounds large instances 
ulusoy time window approach simultaneous scheduling machines material handling system fms operations research 
bla pesch job shop scheduling problem conventional new solution techniques european journal operational research 
brucker branch bound algorithm job shop problem discrete applied mathematics 
brucker thiele branch bound method general shop problem sequence dependent setup times spektrum 
van de cyclic scheduling robotic annals operations research 
grabowski nowicki block approach single machine scheduling release dates due dates european journal operational research 
flow shop problems transportation times single robot appear discrete applied mathematics 
tabu search algorithm scheduling single robot job shop environment appear discrete applied mathematics 
jain meeran deterministic job shop scheduling past european journal operational research 
king hodgson robot task scheduling flexible manufacturing cell iie transactions 
automated machine scheduling problem infinite buffer journal oper 
res 
soc 
japan 
shop scheduling problems transportation ph thesis fachbereich mathematik informatik universit ck 
sters tabu general shop probleme mit diplomarbeit fachbereich mathematik informatik universit ck 
laarhoven van aarts lenstra job shop scheduling simulated annealing operations research 
transportation planning deterministic flow shop environment operations research 
muth thompson industrial scheduling englewood cliffs prentice hall 
nowicki smutnicki fast tabu search algorithm job shop problem management science 
roy les avec note ds bis sema paris 

