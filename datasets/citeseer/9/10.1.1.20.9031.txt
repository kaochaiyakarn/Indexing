ence 
utilizing host formalisms extend rdf semantics wolfram reinhold gmbh 
germany de information systems software techniques university essen universit essen germany reinhold uni essen de 
rdf may considered application xml intended exchange semantics web applications 
current form objective may hard reach 
semantical gems hidden rdf rdfs specification precisely captured example axiomatic formalizations currently available rdf concepts constraints limited rdf offers data model specify processing rdf encoded data 
rdfs describes basic ontological concepts constraints specify processing rdfs encoded ontological information 
expressiveness constraints limited clear means providing semantics new concepts constraints specified 
presents possible approach overcome weaknesses 
definition interpretation semantics processing rdf encoded information delegated host formalism order logic 
elaborated example specifies extended set algebraic range constraint applies extended vocabulary security management task 
definition semantics explicit rdf schemata 
new constraints concepts added concepts constraints underlying axiomatic interpretation rdf 
prolog implementation approach rdf schema explorer available line 
tool allows process validate query extend fol interpretation extended rdf schemata 
keywords semantic web rdf semantic extensibility host formalism prolog draws earlier german wirtschaftsinformatik confer exchanging semantics web semantic annotation data increasingly important increasingly complex interactions involving multitude actors call shared common understanding exchanged information 
semantic annotation may enable intelligent search keyword matching query answering information retrieval knowledge base definition data format exchanges semantic web activity world wide web consortium emphasizes importance semantics development web 
resource description framework rdf may develop foundations semantic web enabling semantic interoperability 
rdf intends provide standard describing semantics information metadata descriptions compare 
semantic web scale independent heterogenous actors users agent tools able exchange process meta data common semantic interpretation 
may question rdf provides means achieve 
want emphasize issues aspects rdf schema specification expressed informally concepts constraints rdf schema specification provide sufficient expressiveness lack clear extension mechanism 
issue addressed chose order logic fol express main concepts constraints defined rdf specifications 
main benefit fol studied expression mechanism commonly agreed interpretation 
utilized rdf schema explorer prolog tool developed integrates jan wielemaker rdf parser axioms 
web version rdf schema explorer accessible online 
allows query validate rdf descriptions statement level respect facts rules capture semantic concepts constraints rdf 
second issue discussed context modeling ontologies rdf see 
staab state rdf lack capabilities describing semantics concepts relations provided inheritance mechanisms weak language knowledge systems 
propose approach extends semantics vocabularies expressed rdf axioms considered objects describable rdf 
discussed seen combination cited provide means explicitly specify axiomatic semantic properties rdf compare 
capability implemented available rdf schema explorer 
furthermore definition extended vocabularies axioms capture core rdf concepts constraints 
axioms available explicitly 
tight integration rdfs concepts constraints extended seman fensel provides instructive overview rationales ontology driven semantics different networking contexts 
unfortunately issue list current rdf working group provide formal axiomatic semantics rdfs effort documents possible standardized attempt capture meaning rdf schema implemented rdf schema explorer knowledge approach staab agree rationales making axioms available objects describable rdf 
recommend complementary source chosen arguments extending rdfs explicitly available axioms non formal semantics formal semantics rdf tool security able process rdf schema security semantics expressed prose semantics expressed host formalism rdf property rdf id path rdfs comment rdf parsetype literal semantic property express path relations 
rdfs comment rdf property risks rdf tool able process rdf schema rdf tool agents able process rdf schema agents rdf property rdf id path rdfs rdf parsetype literal path statement path 
path statement path path 
rdfs rdf property rdf schema security generic rdf tools rdf schema leads able learn process rdf schema agents defining sophisticated semantics host formalism 
left part semantics informally described rdfs comments 
may lead development plethora rdf tools 
contrasted approach axiomatic meaning explicitly available making generally accessible precise interoperable interpretation limits chosen host formalism far extends rdfs 
tics availability prolog implementation considered main difference staab demonstrate integration means application especially emphasizes extended range constraint access control context 
remainder structured follows 
section extension mechanisms 
describe rdf schema explorer operates basic predicates provided query rdf description 
subsection extension mechanism formally define sophisticated semantics rdf schemata explained 
example taken access control context subsection demonstrate extension mechanism related rdf syntax 
include brief discussion core concepts rdfs range constraint 
section concluded brief discussion approach 
specifying extensible semantics rdf rdf schema explorer allows query rdf models statement level respect facts rules capture semantic concepts constraints rdfs 
purpose number pre defined predicates available 
allows validate models rdfs rule set 
addition possible define semantics newly introduced predicates rdf query check validate extended models 
predicate purpose statement contains basic facts knowledge base 
res gives resources 
lit gives literals 
reifies reifies necessarily triple 
reifies fact triple knowledge base 
subclassof transitive predicate captures relation expressed rdfs subclassof property 
instanceof transitive predicate captures relation expressed rdf type rdfs subclassof properties 
subclass cycle violation true knowledge base allows 
subpropertyof transitive predicate captures relation expressed subpropertyof predicate 
subproperty cycle violation true knowledge base allows infer subpropertyof 
domain constrained property statement specifies domain constraint property domain instance classes domain domain violation true statement knowledge base domain constrained domain range range restriction range cardinality violation different range restrictions range range constrained 
range instance class es range constrained 
range violation range constrained statement knowledge base range violation convenience predicate collects violations 
show type violation violating triple exception cardinality violating predicate ranges constrained 
case ranges shown different instances violation 
table collection predicates axiomatize rdf schema constraints 
tool works follows 
rdf file fed swi prolog rdf parser file parsed relation created contains triples 
slightly modified parser tries normalize uris matter resource subject predicate object position parser tries transform resource name 
querying easier 
furthermore form normalization necessary able discover yyy xxx yyy better represent resource 
query simple triple database 
tool offers query field allowing ask prolog engine things statement rdf type credits go jan wielemaker 
minor modifications related namespaces 
note assume se triple encodes instance binary relation 
discussed triple plus reification simple negated truth predicate may easily imply intentions render mapping binary relations faulty triple plus reification representing plus triple false may express known true 
setof statement 
certainly useful know little bit prolog necessary tool offers choice predefined queries preselection list 
completely satisfying 
concepts constructs rdfs fact rule base outlined logical interpretation rdf provided 
effect knowledge level predicates briefly explained table check query model respect rdf schema constraints 
addition defined number additional convenience predicates 
chosen pre selection menu query form 
example show statements value variables cab substituted list triples containing substituted value corresponding position generated 
easy play effects rdf schema concepts constraints soon discover semantics implied rdfs pretty general say weak 
allow introduce semantics top basic facts rules possible specify precisely modeler intends predicates 
done ways 
prolog rules may directly keyed query field example assert trans rel statement path 
assert trans rel statement path trans rel 
defines rel represent transitive 
allow inquire resource transitively related 
rdf level mechanism provide define semantics predicates rdf documents 
mechanism discussed detail subsections 
extension mechanism mechanism described allows provide semantics properties rdf schema declarations 
special predicate rdfs available extend basic rule set additional semantics newly defined properties possible define basic rule set way 
interpretation schemata rely suitably chosen host formalism 
current implementation prolog flavor order logic selected 
example defining transitive property path fed directly rdf schema explorer 
xml version rdf xmlns www org rdf syntax ns xmlns rdf www org rdf syntax ns note exiting resource related path property re quired 
xmlns rdfs tr cr rdf schema rdf property rdf id path rdfs rdf parsetype literal path statement path 
path statement path path 
rdfs rdf property rdf note statement meaningful predicates defined basic rule set accessible 
current version rdf schema explorer prolog code may provided read swi prolog sequence implied xml serialization 
versions languages implementations description logics may allowed 
advocacy set constraint rdfs applicability expressiveness range constraint limited 
see brief review version intended semantics range constraint current version rdfs 
range constraint captured range statement rdfs range 
range range 
range range instanceof 
range violation statement range range 
rdfs restrictions apply 

range constraint allowed 

distinguished sets entities resources literals exist 

semantics subclassing captured rule instanceof statement rdf type 
instanceof statement rdf type subclassof 
open world assumption deduced range constraint knowing range property constrained set resources unfortunately standard sld resolution prolog sequence matter 
matches naturally xml quite naturally rdf sequence information notable exception seq type containers 
parse xml serialization compute triples scramble triple sequence subsequently start assert property definitions lead behaviour intended conform notion rdf set oriented 
infer types range constraints 
rationales possible interpretations range constraint discussed rdf ig rdf logic constraint axiom interpretation 
roughly says property may applied instances classes range states resource value range constrained property type range formally interpretation formulated instanceof statement range difference constraint interpretation ask logical consequence known statements facts rules axioms axiom interpretation treated rules axioms allows infer type information knowing resource element set resources allow conclude attaching value violate range constraint 
reasonable known disjoint 
information available literals resources expressible rdf relation arbitrary subsets resources 
assuming world closed complete argue subclasses class disjoint entity known instance classes 
problems remain schemata guide design evolution models 
instances known schema design time introducing information may render earlier decisions inconsistent adding type information resource may show classes fact distinct overlapping considering world complete dangerous respect inter temporal validity 
addition richer set constraints including set union set difference set disjunction allow specify constraints reasonable range property restricted 
see consider classes property reasonable mean range constraints range exp may constrain element exp defined exp exp exp exp exp xor exp suggested extension rdfs allow multiple range constraints interpret constraints binding allowed range disjunction classes 
restrict interpretation multiple range constraints limited case cases suggest solution conforms rdf offers flexible general way specify range constraints 
required interpretation encoded schema level making possible specify enforce different types range constraints different application domains 
range constraint allowed 
sufficient classes class expressions constructed classes class expressions 
case range constraint point exactly class construction class directly expresses constraint 
exp term represents constructed class right hand side gives construction expression 
example applying range constraints constructed class validation possible 
adopt practice examples sec 
sec 
types assigned resources rdf type rdfs subclassof properties range constraint state 
property sense value instance class 
allowing validation 
conforms interpretation 
please note types resources possible check range constraint properties applied resources correct type rdf type rdfs subclassof subproperties properties available devices provide typing information 
solution introduce specific range constraints range constraint types cases 
problematic scale mixed range dependencies 
classes 
rdf type rdfs class rdf type rdfs class rdf type rdfs range rdf type violate intended range constraint chosen value assumed object modeled literal solution formulated formed rdf easily 
interpret application level check class construction semantics required 
really nice range constraints important leave semantics proprietary vocabularies interpretations matter taste 
respect intended interoperability rdf schemata making semantics constructs expressible rdf offer interoperable solution 
fact denotes multi ary relation classes 
transformed generally sequence ary atomic set algebraic operations expressed nested tuples example expresses 
intersection difference rdf expressible reification suitable interpretation reified statements rdf type rdf statement rdf subject rdf predicate intersection rdf object rdf type rdf statement rdf subject rdf predicate difference rdf object suitably interpreted allows express set algebraic range constraint range sharing security schemata example demonstrate set constructs defined rdf conform manner applying introduced extensions mechanism domain role access control 
semantics build basic rdf rules 
example task decide access certain documents granted certain users 
decision depends membership users certain groups depicts specific situation 
rdf source example easily accessible part rdf schema explorer line demonstration 
conceptually membership groups role assignment represented set algebraic class expression mechanism example 
internal users user external users user bad guys access shall granted users white section venn diagrams bad guys user get access 
new predicates introduced union difference intersection predicates construct classes classes help binary relations reification completely valid rdf constructs 
utilized construct classes set algebraic expressions constructed classes 
extension introduced semantic primitive ease demonstration assume property namespace 
possible mix meta schema schema instance expressions example adopted convention namespace introduced namespace abbreviation omitted parsing process 
possible namespace document able normalize resource names easily useable querying model 
subclass rdfs class introduced 
rules described define semantics newly introduced predicates 
additionally semantics type range property monotonically extended able cope constructed classes 
xml version rdf xmlns www org rdf syntax ns xmlns rdf www org rdf syntax ns xmlns rdfs tr cr rdf schema xmlns meta schema definitions rdfs class rdf id rdfs subclassof rdf resource tr cr rdf schema class rdfs class description www org rdf syntax ns type rdfs rdf parsetype literal constructed class instanceof 
rdfs description introduced allows formulate unbounded class expressions 
expressions depend unknown universal set 
set difference contains implicit bounded constraints sufficient purposes 
reader may adopt practice self developed extension schemata easy feed schemata instances document rdf schema explorer 
property rdf id union rdfs rdf parsetype literal union 
union 
rdfs property property rdf id difference rdfs rdf parsetype literal difference 
rdfs property property rdf id intersection rdfs rdf parsetype literal intersection 
rdfs property description cr rdf schema range rdfs rdf parsetype literal constructed class reifies 
instanceof 
range range 
rdfs description schema definitions follow expressing users external users bad guys plain classes users trusted users constructed classes users internal users external users trusted users users bad guys 
rdfs class rdf id internal users rdfs class rdf id external users rdfs class rdf id bad guys rdf id users subject rdf resource internal users predicate rdf resource union object rdf resource external users type rdf resource rdf syntax ns statement rdf id trusted users subject rdf resource users predicate rdf resource difference object rdf resource bad guys type rdf resource rdf syntax ns statement access granted closed security policy accesses allowed explicitly 
expressed attaching property resources constrained users 
property rdf id rdfs range rdf resource trusted users property instance definitions entail range constraint violation 
description rdf id user type rdf resource internal users description description rdf id user type rdf resource bad guys description description rdf id user type resource external users description objects restrict access rdfs class rdf id important documents important documents rdf id weak secret rdf resource user rdf resource user important documents rdf user known bad guy accordingly granted access 
fact range constraint violated 
see consider extended rule set set algebraic range constraint rdfs rule set range statement rdfs range 
range range 
range range instanceof 
extension range range 
detecting violation rdfs rule set range violation statement range range 
rdf descriptions allow derive user member constructed users range 
hope simple example may demonstrate mechanism prolog engine pretty powerful instrument define extend semantics validate documents rdfs user provided constraints query model knowledge level 
may help leave simplistic triple structure capture meaning extended vocabularies precisely 
allows develop domain specific vocabularies build formalized rdf rdfs constraints 
vocabularies re schema definitions domains 
rdf schema explorer support dynamic loading incremental interpretation schema definitions 
discussion approach outlined allows define rdf meta schemata precisely capture semantic intentions interpreted suitable host formalism 
approach represents intended semantics rdf schemata explicitly making possible treat definition class resources rdf approach paradigm independent allows select different host formalisms specific purposes specific prolog instantiation approach expressive allows utilize available expressiveness prolog 
furthermore production quality implementations prolog widely available 
may asked pure prolog kr language kif chosen implementation language semantic web 
think constraining people certain implementation language may idea 
pros cons certain implementation language 
propose give implementer possibility suitable implementation language application domain 
pure rdf rdfs remains exchange mechanism rudimentary knowledge implementer choice integrate basic knowledge example axiomatization rdfs elaborate semantics defined top suitable host formalism consequence part knowledge may interpretable different host formalisms 
summarize detailed example demonstrates involved techniques access control context 
prolog rdf schema explorer developed allows validate query extended models 
tool workable version example accessible line 
able interpret extended rdf schemata tool suitable support prototyping domain specific schemata semantics defined properties changed fly consequences inspected utilizing convenience predicates show classes 
expect interoperable definition meta schemata develop necessity formulation complex semantic constraints various emerging application domains cooperative security management automated business contract negotiation involving number autonomous partners exhibiting need semantic interoperability identified key requirement success underlying collaborations 
alexander borgida 
description logics data management 
knowledge data engineering 
citeseer nj nec com borgida description html 
dan brickley guha 
resource description framework rdf schema specification 
candidate recommendation march 
www org tr cr rdf schema 
allows apply rdf concepts describe relate semantic definitions 
example new properties expressing containment semantic dependencies abstraction defined may ease maintain re meta schemata 
making semantics underlying meta concepts explicit bound specific world view paradigm example ontology agent modeling renders approach different languages oil daml offer set non manipulable primitives semantics expressed rdf languages 
necessarily restricts applicability languages domains applications exhibit natural close fit concepts languages offer 
jeen broekstra michel klein dieter fensel stefan decker ian horrocks 
oil case study extending rdf schema 
technical report ontoknowledge org 
www ontoknowledge org oil pdf 
wolfram reinhold 
logical interpretation rdf 
link ping electronic articles computer information science issn december 
www ep liu se ea cis 
wolfram reinhold 
rdf revisited reification nesting containers lists dialect pure xml 
proceedings semantic web working symposium swws stanford august 
fensel horrocks van harmelen decker erdmann klein 
oil nutshell 
technical report ontoknowledge org 
www cs vu nl dieter oil oil nutshell pdf 
dieter fensel 
ontologies silver bullet knowledge management electronic commerce 
springer heidelberg 
ian horrocks frank van harmelen tim berners lee dan brickley dan connolly mike dean stefan decker dieter fensel pat hayes jeff heflin jim hendler ora lassila deb mcguinness peter patel schneider lynn andrea stein 
daml oil language 
www daml org daml html december 
ora lassila ralph swick 
resource description framework rdf model syntax specification 
recommendation february 
www org tr rec rdf syntax 
web rdf schema explorer 
wi inf uni essen de rdfs html 
swi prolog 
www swi psy uva nl projects swi prolog 
