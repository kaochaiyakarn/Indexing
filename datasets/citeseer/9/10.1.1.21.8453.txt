equivalence transformations statecharts heinz frank johann eder universitat klagenfurt institut fur informatik systeme mail ifi uni ac statecharts popular representation technique conceptual models dynamics universe discourse 
designers supported dynamic models working static models 
meta model formalization semantics statechart language 
important results definition equivalence statecharts sound complete axiomatization equivalence 
define set basic schema transformations change semantics model 
transformations successively transform statecharts achieve design goals prepare implementation 

conceptual modeling universe discourse dimensions structure objects relationships represented static model object model behavior objects documented dynamic model 
techniques structural modeling long tradition quite elaborated conceptual modeling techniques dynamics supported 
open issues example formalization semantics dynamic models generalization inheritance dynamic models transformations dynamic models 
aim reported contribute better understanding dynamic models support modeling process 
statecharts introduced harel popular method designing behaviour objects :10.1.1.20.5519
concept various design methodologies omt ood uml 
statecharts variants statecharts proposed 
von der provides detailed analysis statecharts variants 
designing static models designers analysts start initial model successively transform model achieve design goals meet quality criteria 
model form suited mapping logical model serves specification implementation 
process supported understood representation language provision schema transformations maintain semantics model 
opinion similar process available development dynamic models 
assumptions scope assume static part model developed 
representation dynamic aspects focus modeling dynamics single type class static model 
represent dynamic models statecharts 
consider statecharts serve purposes 
representation technique capture dynamics objects universe discourse 
second statecharts support communication users analysts designers implementors 
statecharts partial specifications implementation information system 
focus formal aspects statecharts semantics partial specification methods pragmatics style great importance communication purposes 
major contributions ffl formalization statecharts conceptual modeling ffl definition semantics statecharts partial method specification ffl definition equivalence statecharts sound complete axiomatization ffl complete set basic schema transformations deriving equivalent statecharts organized follows 
section introduce statechart language meta model statecharts 
major concepts statecharts demonstrated example domain library 
section discuss equivalence statecharts equivalence method specifications 
section set basic equivalence transformations statecharts 
section draw discuss applications 
space limitations force omit proofs 
interested readers referred proofs theorems provided 

statechart language structural part types simple data model 
type labeled set type attributes 
type book title string pages integer type book name type 
title pages attributes type 
attributes typed basic types string labels user defined types 
representation behaviour type statechart language :10.1.1.20.5519
statechart type primarily consists states events transitions 
major elements statecharts shown 
lending reserved false state transition state source state target state guard event book loan book stock 
basic elements statecharts state condition situation life time object satisfies condition 
object satisfying condition state said state 
call condition range state 
transition kind relationship states triggered event 
transition indicates object state called source state enter second state called target state event occurs specified condition called guard transition holds 
transition object target state transition 
library choose domain library example 
suppose static model contains type book attributes title isbn signatures behaviour books shown 
major steps necessary administration books placed library book registration book preparation 
book registration responsible recording new books 
purpose book catalogue known 
step signature book 
book preparation describes book subject keywords 
finishing administration books placed library borrowed 
books new book book lost book stock book stock book borrowed book text book collection book registered book signed book administration book registration book preparation book catalogue new catalogue register place lose return reserved false borrow return reserved true lose reserve reserved false keywords book prepared 
behaviour book necessary lecture special place called text book collection 
allowed borrow books text book collection 
book placed text book collection borrowed reserved 
reserved books may borrowed placed text book collection immediately returned borrower 
books stock books borrowed text book collection returned library reserved 
consider books get lost 
sections example meta model shown discuss formalization statechart language detailed 

states static model spans object space defined set possible extensions static model 
state statechart type subset possible object instances subspace object space type 
intensionally state defined predicate objects type 
extensionally state considered set possible objects fulfill predicate 
statecharts readable avoid explosion nodes arcs state hierarchies introduced 
definition distinguish states states basic states 
states substates related exclusive object type substate state time 
states orthogonal components related 
object state substates event name range source states target states structured state condition state range transition prec triggers state state basic state substates statechart name name attributes label guard postcondition sync 
meta model statecharts state 
basic states states bottom state hierarchy substates 
states highest level statechart states parent state called root states 
ql specification language conditions range states pre postconditions guards transitions 
language allows definition logical conditions objects satisfy 
range state solvent type bank ql assets 
object type state value attribute assets greater zero 
notation range denoting range state range basic states designer range structured states states computed 
definition range state defined ffl condition basic state 
ffl disjunction ranges substates state 
ffl conjunction ranges substates state 
example fig 
conditions basic states library example shown table 
range state book stock defined disjunction substates book borrowed book text book collection 
range state book administration conjunction substates book registration book states 
ranges states allow definition relationship states 
relationships definition correctness states definition formal way 
definition predicate returning true object satisfies range state book stock position library book borrowed position borrowed reserved true reserved false book text book collection position text book collection reserved false book lost position lost table 
conditions basic states set possible instances type states statechart type called equivalent orthogonal states equivalent ranges substates substates disjoint states orthogonal ranges equivalent substate overlaps substate vice versa 
definition states statechart correct 
root states disjoint 
substates state disjoint 
substates state orthogonal 
example fig 
substates state book stock disjoint ranges object satisfy conditions time compare table 
substates state book administration states equivalent ranges 
furthermore possible object satisfy ranges states book registered book signed time 
consequence definition substates state states substates orthogonal definition 
basic states direct substates state 

events transitions event incident directed object aim change state object 
event set explicitly triggers transition changes state object 
dynamic modeling events transitions represent partial specifications methods object type 
event set object transfered new state 
model defines conditions preconditions object fulfill order able react event conditions postconditions object satisfies state change 
sync defines transition synchronizing 
synchronizing transitions lead state lose position lost borrow position borrowed reserved false position text book collection reserved false lose position lost reserve position borrowed reserved true table 
postconditions transitions aggregation instance transition triggered event catalogue 
synchronizing transition may source target state 
cause state change object source state transition means satisfying range source state object satisfy condition guard transition 
precondition transition defined conjunction range source states guard transition 
rec precondition transition application transition object satisfies range target state postcondition 
postcondition transition imply range target state 
example fig 
precondition transition defined conjunction range state book borrowed guard reserved true resulting position borrowed reserved true 
postconditions designer shown table definition transitions correct source target states conditions 
non synchronizing transitions triggered transforming events exactly source target state 

synchronizing transitions source target states 
source states part state aggregation 
target states part state aggregation 

transitions triggered object producing events source states 

transitions triggered object destroying events target states postcondition true 

postcondition transitions imply range target states 

correct statecharts statecharts range defined definition range statechart disjunction ranges root states statechart 
ranges states correctness transitions states define correct statechart 
considerations assume correct statecharts 
definition statechart called correct states correct definition transitions correct definition 

equivalence dynamic models support designers statecharts similar way static models 
particular goal support transformation statecharts changing semantics 
purpose need clear definition statecharts equivalent 
definition consideration statecharts equivalent provide partial specification development methods 
equivalence correct statecharts bases equivalent model ranges equivalent events 
define equivalence model theoretic way sound complete axiomatization prove schema transformations preserve semantics schema 
specification event set condition pairs form re ost re ost pair re ost indicates object satisfies condition re say re true object satisfies condition re application event corresponding transition triggered event satisfies condition ost take pre postconditions transitions triggered event order calculate specification event definition specification event defined spec rec specification event computed collecting pre postconditions corresponding transitions event listed triggers 
specification event named spec 
example fig 
specification event lose defined lose spec prec postcondition prec postcondition semantics statechart defined range statechart set event specifications 
definition semantics statechart defined range spec 
example fig 
semantics statechart defined range new new spec lose lose spec 
range new prec postcondition lose prec postcondition prec 

definition predicate ost event object defined ost fp re re ost spec re false fp ost fp ost ost ost ost predicate ost defined disjunction postconditions conditional pairs re ost spec object satisfies precondition re 
ost false object doesn satisfy preconditions event specification event specifications equivalent ost applied specifications objects returns equivalent conditions 
words events equivalent possible object satisfies condition events occurred 
definition event specifications events equivalent spec spec ost ost different events equivalent specifications take name events account define equivalence events 
definition events equivalent name equivalent event specifications 
theorem states equivalence events defined equivalence relation 
theorem equivalence events reflexive symmetrical transitive equivalence relation 
define equivalence statecharts range statecharts equivalence events show defined equivalence relation 
definition correct statecharts equivalent ranges equivalent events exists equivalent event events equivalent event theorem equivalence correct statecharts reflexive symmetrical transitive equivalence relation 
examine statecharts equivalent definition quite cumbersome 
set transformation event specifications easier apply 
interested changes event specifications possible leaving equivalence class 
define relation xi say derive event specifications 
means left part relation xi changed right part vice versa 
definition event specifications 
additionally re re re re re ost ost ost ost ost pre postconditions ql terms 
re ost re ost xi re re ost re ost re ost xi re ost ost false ost xi re false xi re ost xi re ost re re ost ost xi xi xi definitions may summarize event specifications equivalent postconditions disjunction preconditions event specifications equivalent preconditions disjunction postconditions 
definitions allow remove event specifications pre postconditions result false 
definition states pairs event specifications relation xi equivalent pre postconditions equivalent terms equivalent ql terms 
definition transitivity relation xi determined 
example fig 
consider specification event lose transitions shown page 
postconditions transitions equivalent compare table may combine specification disjunction preconditions prec postcondition prec postcondition xi prec prec postcondition theorem event specifications 
xi xi 
xi define statechart derived statechart xi event specifications derived vice versa 
definition statecharts 
xi ranges equivalent events event xi events event xi operations defined relation xi developed order express relation xi sound complete axiomatization equivalence relation event specification 
expressed theorems proofs refer 
theorem event specifications 
xi follows theorem event specifications 
follows xi immediate consequence theorems relation xi sound complete axiomatization equivalence statecharts 
theorem correct statecharts 
xi 
able check statecharts equivalent checking event specifications statechart derived event specifications statechart 
furthermore definitions theorems section provide formal basis discussing equivalence transformations statecharts 

schema transformations schema transformations operations statechart resulting different statechart schema transformation deals certain aspect statechart combines states shifts transitions state set basic schema transformations change semantics statechart definition equivalence 
due transitivity equivalence dynamic models complex transformations established basic set transformations 
approach transformations treated meta methods meta model meta methods states 
due space limitations able discuss detail omit formal proofs 
interested readers refered 

shifting transitions state generalization shifts transition source state parent state parent state state source state transition replaced parent state parent state state wider range substate guard transition replaced precondition transition guarantee transition applied objects comply original precondition 
example suppose shift transition state book borrowed changes source state transition book stock 
guard transition changed book borrowed range reserved true 
result transformation shown shifts transition target state parent state parent state state 
target states transition replaced superstate pre postconditions transitions remain unchanged 
example book text book collection changes target state transition state book stock 
book stock book borrowed book text book collection return book borrowed range reserved true return book borrowed range reserved true book stock book stock book borrowed book text book collection return book borrowed range reserved true book 
shifting transition shifts transition having state source state substates substate transition copied source states adopted 
original transition deleted 
new transitions may preconditions resulting false 
definition transitions deleted 
schema transformation clean purpose 
example consider example previous part shifted transition state book borrowed 
shift transition back original source state transformation book stock 
substate transitions copied source states changed 
result shown shown 
analyze preconditions new transitions 
prec results conjunction range source states guard book borrowed range book borrowed range reserved true obviously equivalent precondition transition example 
precondition results book text book collection range book borrowed range reserved true 
correct statechart ranges substates state disjoint compare definition precondition results false 
transition deleted compare definition 
shifts transition having state target state substates substate transition copied target states adopted 
postconditions copied transition replaced conjunction original postcondition range new target state 
postcondition transition results false deleted compare definition 
original transition deleted 
shifting transitions state aggregation shifts transition having source state parent state parent state state 
shifts transition having target state parent state parent state 
transformations simple source target state transition replaced parent state definition correct statechart definition substates state states equivalent ranges 
due definition ranges state substates equivalent 
shifting synchronizing transition state state may appear times source target states transition 
redundant stored source target states removed 
example shift transition book registered book subject catalogue state transformations book registration book preparation 
state book administration appears twice source states 
remove change transition 
shifts transition having parent state source state parent state state 
shifts transition having parent state target state parent state state 
transformations simply replace parent state source target states transition 
transforms transition synchronizing adds source states transition 
parent state state source state transition 
transforms transition synchronizing adds target states transition 
parent state state target state transition 
example shifted transition state book administration described 
shift transition back original source states 
book registration adds book registration new source state transforms synchronizing transition 
book preparation state book administration source states replaced state book preparation 
may shift substates transformation 

combining splitting transitions combines transitions triggered event transition preconditions equivalent source target states 
combines transitions triggered event transition postconditions equivalent source target states 
splits transition transitions parameters preconditions disjunction equivalent precondition 
splits transition transitions parameters postconditions disjunction equivalent postcondition transformations defined relation xi compare definition 

combining splitting states combine combines basic states resulting new basic state states root states belong parent state 
condition disjunction ranges transition having source target state replaced state source states transition guard replaced precondition transition 
combination states results new state wider range want transitions applied object satisfying original precondition transitions 
example combine states book borrowed book text book collection state book loan transformation combine book borrowed book text book collection book loan 
result transformation shown 
split splits basic state basic states parameters conditions 
disjoint disjunction equivalent range part state aggregation violate orthogonality constraint 
transformation rejected 
condition equals root state source target state transitions 
root state transition having source state duplicated 
source states original transition replaced book stock return book borrowed range reserved true reserve book borrowed range reserved false book loan 
splitting state duplicated replaced target state transition duplicated target states adopted 
furthermore postcondition original transition replaced conjunction postcondition range new target state analogous duplicated transition 
restriction state part state source target state transition extensive 
suppose combined states shown example 
new state source target state transitions able split state original states 
may combination schema transformations shift transitions substates parent state split state 

generating decomposing state generalizations produces state generalization states new state states root states substates state 
transformation introduces new state substates transitions remain unchanged schema transformation 
decomposes state generalization state state substate state 
source target state transitions 
example example decompose state generalization state book stock 
state source target state transitions shift transitions state 
may decompose state generalization simply removing state transformation book stock 
second step may generalize root states book borrowed book text book collection book borrowed book text book collection 

generating decomposing state aggregations builds state aggregation state basic state state states gn substates created 
state exactly basic substate condition substate equals range definition range state compare definition ranges equivalent 
transitions having source target state replaced deleted 
decomposes state aggregation state resulting basic state substates exactly basic substate 
states state aggregation state source target state transitions 
condition equals range transitions having source target state replaced substates state aggregation deleted 
example consider state book administration decomposed 
states state aggregation source target states transitions shift state 
transition place shifted state described section 
state aggregation replaced equivalent basic state schema transformation book administration 
second step reintroduce state aggregation 
book administration resulting new state aggregation consisting state states substates 
state basic substate call 
basic states split states 
instance split states transformation split book catalogue range book registered 
range book catalogue book registered 
analogous may split transitions shifted state original states 

deleting combining transitions deletes transitions pre postconditions result false compare definition 
combines transitions triggered event having equal source states target states equivalent postconditions preconditions disjunction pre postconditions compare definition 
schema transformations define combined schema transformation clean deletes combines transitions statechart schema transformation applied 

properties schema transformations main property schema transformation equivalence transformation proofs refer results theorem theorem correct statechart transformed applying basic schema transformations statechart schema transformation exists inverse schema transformation may combination transformations 
instance shifting transitions state produces new transitions 
inverse shifted back state combined transition 
prove set schema transformations complete 
means statecharts equivalent sequence basic schema transformations transform schema 
consequence property schema transformations introduced suffice derive equivalent schema 
property expressed theorem theorem correct statecharts equivalent exists sequence schema transformations transform vice versa 

formalization model representing dynamic behavior objects 
metamodel define semantics statecharts partial specification methods 
allows definition equivalence statecharts 
main contribution development complete set basic schema transformation maintain semantics 
set transformations suffices derive equivalent dynamic model 
applications methodology 
serves sound basis design tools 
enables analysts designers start initial model improve quality model step step 
provide automatic support achieve certain presentation characteristics model 
model transformed inspect different points view 
particular model suitable conceptual comprehension transformed model better suited implementation similar transformation static conceptual models logical models 
main application motivation development model support automatic integration partial models 
extension view integration approach conceptual modeling incorporate dynamic models 
batini ceri navathe 
conceptual database design entity relationship approach 
benjamin cummings publishing 
booch 
object oriented design applications 
benjamin cummings 
coleman arnold hayes 
object oriented development fusion method 
prentice hall object oriented series 
prentice hall 

inheritance state models 
report object analysis design road mar 

object oriented database schema analysis inheritance processing graph theoretic approach 
data knowledge engineering 
frank eder 
meta model dynamic models 
technical report institut fur informatik universit klagenfurt mar 
www ifi uni ac show abst fred 
frank eder 
integration statecharts 
halper editor third ifcis international conference cooperative information systems coopis pages 
ieee computer society aug 
frank eder 
automatic integration statecharts 
bouzeghoub editors conceptual modeling er pages 
springer verlag nov 
lncs 
harel 
statecharts visual formalism complex systems 
science computer programming 
harel 
visual formalisms 
communications acm may 
harel naamad 
statemate semantics statecharts 
acm transactions software engineering methodology oct 
kappel 
inheritance object behaviour consistent extension object life cycles 
eder editors proceedings second international east west database workshop pages 
springer sept 
lam 
semantic verification objectoriented database schemas 
proceedings int 
workshop new generation information technology systems pages june 

environment specification rapid prototyping object oriented database applications 
edbt summer school objectoriented database applications sept 
rational software unified modeling language uml version 
www rational com uml sept 
rumbaugh blaha premerlani eddy lorensen 
object oriented modeling design 
prentice hall international 

behaviour consistent refinement object life cycles 
embley goldstein editors conceptual modeling er proceedings th international conference conceptual modeling lecture notes computer science pages 
springer nov 
von der 
comparison statecharts variants 
de roever editors formal techniques real time fault tolerant systems volume lecture notes computer science pages new york 
springer verlag 
