building virtual worlds big bang model neville churcher alan creek software visualisation group department computer science university canterbury private bag christchurch new zealand 
neville canterbury ac nz visualisations implemented virtual worlds allow users comprehend large graphs effectively 
layout algorithms important element 
angle developed platform experimenting force directed layout algorithms 
big bang modification proposed means obtaining efficiently layouts wide range graphs 
results compared conventional approach 
graphs fundamental tool conveying information structures empirical data 
basis diagramming techniques uml 
size complexity graphs increase people find harder comprehend 
large graphs arise frequently visualisation software structure software reuse web site activity challenge find ways presenting effectively 
physical layout aids comprehension invariably involves conflicting criteria require widely applicable robust techniques 
live world strong empirical evidence presentation techniques enables people comprehend graphs times larger presentation available 
experimenting non immersive virtual reality vr way provide users natural experience graph visualisation tasks 
vr techniques means choice viewpoint projection little direct relevance user control number edge crossings dramatically reduced 
virtual reality modelling language vrml layouts 
appealing features vrml include simple text format amenable generation processing software tools 
shows vrml browser implemented netscape plug 
browsers available platforms 
range controls provided allow navigation manipulation world 
primarily interested achieving optimal drawings known graphs 
wish confident achieve drawing graph arising context user driven just time visualisation research 
report applications force directed layout techniques generation virtual worlds suitable visualisation projects 
modification introducing phase application angle developed experiment algorithm modifications discussed 
remainder structured follows 
brief overview force directed methods section followed observations controlling algorithms 
angle described section big bang model inspired experience introduced section 
results section plans appear section 
exploring virtual world containing random graph nodes edges force directed layout basic idea regard undirected graph system interacting nodes exert pairwise repulsive forces fr ij countered attractive forces pairs nodes connected edges 
layout determined computing equilibrium positions nodes 
force node fi ij ij functional form attractive repulsive forces chosen relationship familiar physical systems 
common choice attractive forces hooke law natural spring length permitting analogy nodes balls connected springs 
similarly repulsive force inverse square force charged particles nodes spread ij restrained attractive edge forces 
substituting functional forms equation simplifying notation constants assuming unit charges including directions forces magnitudes obtain fi rij rj ri rj ri rj ri rj ri variations explored 
additional forces uniform field forces edges may added order impose natural direction resulting layout 
subsets may identified additional forces may applied certain nodes example 
logarithmic forces may weaken attractive forces strengthen repulsive forces modify balance :10.1.1.13.8444
force directed layout approach pioneered eades applied contexts 
details may books graph drawing example graph drawing conference series 
termination quality assessment force directed methods typically implemented simple iterative algorithm 
iteration forces displacement node computed 
nodes updated iteration proceeds 
process stops terminating condition satisfied 
may simple limit number iterations sophisticated 
variations algorithms terminators summarised 
important able layout process layout achieved processing expensive large graphs 
wish avoid displaying violent thrashing irritating interactive viewers 
experimented major categories termination conditions step terminators information current iteration small sliding window including previous iterations determine continue processing 
global properties tolerances may involved 
examples include maximum node displacement mean node displacement changed iterations 
state terminators properties entire graph 
examples include total energy lower ofl 
hybrid terminators combine step state elements 
state contribution hybrid terminator evaluated iterations greater cost 
examples include centre mass moved total energy increased iterations mean displacement 
terminators inevitably perform blind desirable coarse quality measure effectively eyeball resulting layouts 
help gain understanding pathological cases layouts involving planar nodes 
qualitative assessment layout quality centre mass alignment results running algorithm times differing initial node placement set nearly identical layouts 
strictly expect symmetry variations locally optimal layouts represented 
comparing result sets particular graphs may hope determine appropriate parameters termination conditions 
similarly useful able compare visually effect various terminators 
simple qualitative way overlay layouts provide user ability perform relative rotations align 
individual nodes may distinguished colour provide 
extremely easy vrml 
pin corresponding nodes multiple layouts force remain colocated difficult select advance suitable nodes purpose 
shows superior approach visual comparison 
algorithm run twice identical conditions apart initial random node placement 
resulting layouts aligned centres mass individual node coincide relative rotations common centre mass shows layouts hypercube reasonable alignment layouts web trail user controlled alignment begins 
approach successful providing qualitative assessment layout quality achieved algorithm terminator choices useful detecting 
angle angle java application developed provide platform experiments 
requirements included ability repeat layout experiments order gather statistical data quality evaluation select layout algorithm force set choose appropriate terminator control appearance resulting world observe replay algorithm steps add new algorithms terminators minimal effort 
architecture angle shown 
graph title tetrahedron title nodes node name na name coord coord node node name nb name node node name nc name node node name nd name node nodes edges edge na nb edge edge na nc edge edge na nd edge edge nb nc edge edge nb nd edge edge nc nd edge edges graph description tetrahedron graph graphs described xml representation including nodes edges details text descriptions 
shows description tetrahedron 
initial position node na specified explicitly coord element useful feature need compare behaviour different algorithms identical initial configurations force planar layout 
output vrml world containing layout resulting choices 
appearance nodes edges including properties shapes colours nodes cross section thickness edges determined proto nodes vrml template selected 
available algorithms terminators simply concrete implementations corresponding classes 
approach allows ready extensibility menus gui constructed dynamically available concrete classes 
shows angle action graph forming rectangular grid strip 
interface consists main windows containing projection current layout xy plane containing control panel 
algorithm terminator specifies parameters required corresponding slider controls automatically constructed angle control panel 
control panel visible shows controls force set force constants natural spring length user act selecting terminator 
result addition controls specific selected terminator 
controls zooming layout window setting upper limit iteration number replaying layout algorithm terminator graph description xml template wrl layout engine angle architecture angle application interface layout wrl statistics gui process 
selecting individual nodes layout window causes details precise locations displayed 
iteration slider replay run algorithm forwards backwards 
provides valuable information trends convergence larger scale behaviour individual algorithms 
example fruchterman reingold force set leads oscillatory behaviour set may exhibit slow expansion stages :10.1.1.13.8444
big bang model initial experiments led insight way algorithms performed different kinds graph 
graphs progress layout algorithm may characterised initial primary phase major features final layout established followed secondary phase relatively minor corrections 
primary phase relative magnitudes attractive repulsive forces broadly comparable graph settles layout recognisable final layout 
secondary phase nodes wiggle little longer linear structures straighten gradually surfaces flatten free child nodes form radial structures 
ideally termination criteria focus ensuring primary phase completed little possible secondary phase carried 
job ideally layout algorithm ensure transition phases abrupt possible 
max node displacement tall cylinder hypercube web trail treemap tree tetrahedron iteration max ni single runs iterations shows typical data individual experiments angle 
tetrahedron data truncated maximum displacement value drops steeply iterations 
force methods typically perform small highly connected structures 
data illustrates clearly sharp distinction phases 
iterations progress slow 
hypercube web trail show initial steep drop iterations rate decrease declines 
performance vertical axis logarithmic 
tall cylinder treemap tree clearly worst performing 
initial drop relatively shallow progress slow gradual straightening occurs 
secondary phase problematic graphs local structure pattern squares cross section cylinder basic node structure tree established see figures changes global nature dominated repulsion groups nodes 
weak inverse square repulsive forces relatively short range hooke law attractive forces unbounded range 
method attack introduce longer range repulsive forces weaken th attractive forces 
experience suggests tampering natural forces lead undesirable behaviour oscillation requiring turn artificial remedies cooling 
experience guided ability replay layouts progress led alternative approach 
secondary phase characterised problem cases slowly converging weak distant nodes better avoid situation arising 
tinker functional form forces prefer concentrate separating phases clearly increasing chances secondary phase dominated attractive repulsive forces 
crude analogy suggest boil vigorously layout algorithm cool gently 
way achieve modify functional form forces equation depend current iteration number parameters 
example choice ij rij rij rj ri causes repulsive forces constant magnitude iterations follow conventional inverse square behaviour 
varying form forces introduce initial big bang phase boost effect repulsive forces 
iterations subsequent phases initially dominated long range attractive forces 
stretching physical analogy limit argue phase corresponds initial big bang geometry space time forming strange forces today play 
big bang graph min max min max tetrahedron cube hypercube dodecahedron tree grid cyl 
tall cyl 
web trail inheritance table comparison runs bb terminator max ni results tables show results mean standard deviation minimum maximum number iterations obtained independent runs method parameters fixed apart initial random node placement cubic volume 
algorithm uses natural forces inverse square repulsion hooke law attraction 
big bang bb version repulsive forces equation hooke law attraction 
cooling applied case 
terminator max ni set spatial units nominally mm table table 
upper limit iterations imposed cases 
big bang graph min max min max tetrahedron cube hypercube dodecahedron tree grid cyl 
tall cyl 
web trail inheritance table comparison runs bb terminator max ni layouts corresponding individual runs summarised table shown 
trends evident 
algorithm iterations required relative improvement bb approach greater 
bb results appear worse resulting layouts visibly superior 
bb approach appears deliver consistently substantial improvements basic method 
calibrate regular polyhedra right layout clear 
performance encouraging graphs arising experimental web trail 
general find force methods bb performs significantly better closed graphs hinge points 
graphs rectangular grid example cylinders formed joining edges particularly challenging force methods discussed section 
ideal application bb approach 
data table suggests outperforms bb grid tall cylinder 
seen figures resulting layouts bb superior 
met termination conditions simply confirms slow progress case 
smaller case bb method performs algorithm terminated iterations 
tree structures included tree artificial treemap tree example inheritance arising research project software reuse 
figures show treemap tree layouts produced runs summarised table 
bb method leads spines tree structures 
effect repulsive forces clusters child nodes heightened bb phase 
contrast method generates layouts straighten gradually 
radial features straight spines discussed section evident 
effect big bang approach allow fundamental spatial relationships nodes influence strongly initial stages layout increasing likelihood configuration roughly right secondary phase begins 
phase characterised snap final size minor rearrangement nodes relative 
process clearly visible layout replayed angle 
angle application provides platform experimenting layout algorithms particularly valuable layout algorithms generation layouts virtual worlds 
dodecahedron dodecahedron bb bb grid grid bb cylinder cylinder bb tall cylinder tall cylinder bb treemap tree treemap tree bb snapshots virtual worlds corresponding data table big bang approach proposed reliable efficient way get acceptable layouts wide range graphs 
macro level perform static animated comparisons layouts produced bb techniques observe dependence comparison number iterations 
micro level observe properties convergence effect terminators 
results encouraging 
intend incorporate bb techniques current visualisation projects 
visualisation layout algorithms topic considerable interest 
investigating opportunities extending application methods diagramming techniques uml 

improved spring graph embedding algorithm layoutshow java environment graph drawing 
msc thesis york university ontario canada 

layoutshow signed applet application graph drawing experimentation 
jan editor graph drawing proc th international symposium gd volume lecture notes computer science pages sti castle czech republic september 
springer verlag 
carey bell 
annotated vrml manual 
addison wesley 
churcher irwin 
virtual worlds software visualisation 
quigley editor software visualisation workshop pages university technology sydney australia december 
giuseppe di battista peter eades roberto tamassia ioannis tollis 
graph drawing algorithms visualization graphs 
prentice hall 
peter eades 
heuristic graph drawing 
congressus numerantium 
peter eades mao lin huang wang 
online animated graph drawing modified spring algorithm 
technical report department computer science software engineering university newcastle callaghan australia 
fruchterman reingold 
graph drawing force directed placement 
software practice experience 
hartley churcher 
virtual worlds web site visualisation 
proc th asia pacific software engineering conference pages singapore december 
ieee press 
brian johnson ben shneiderman 
tree maps space filling approach visualization hierarchical information structures 
nielson rosenblum editors proc 
pages los alamitos ca october 
ieee computer society press 
kaufmann wagner editors 
drawing graphs methods models volume lecture notes computer science 
springer verlag 
ware franck 
evaluating stereo motion cues visualizing information nets dimensions 
acm transaction graphics 

