efficient security large dynamic multicast groups marcel waldvogel dan sun bernhard plattner sun microsystems internet commerce security palo alto usa acm org published proceedings seventh workshop enabling technologies wet ice ieee computer society press 
computer engineering networks laboratory tik eth rich switzerland sun tik ee ethz ch proposals multicast security published far complex require trust network components inefficient 
propose series novel approaches achieving scalable security ip multicast providing privacy authentication group wide basis 
employed efficiently secure multi party applications members highly dynamic groups arbitrary size may participate 
supporting dynamic groups implies newly joining members able understand past group communications leaving members may follow communications 
key changes required group members leave join occurs poses problem groups large 
algorithms require trust third parties support centralized fully distributed management keying material low complexity log 
scalability large groups 
keywords secure multicasting tree key distribution multicast key distribution schemes distributed key management ip multicasting offered internet multi party applications fast important class distributed applications demonstrated popularity experimental mbone multicast service applications supports 
today important class applications multicast transport service collaborative multimedia applications vic vat mb 
applications may implemented efficient way advantage multicast services 
example take primary task distribute information set receivers stock data distribution audio video distribution services clearly belong class usenet news postings 
unicast applications multi party applications listed successful privacy authenticity participants provided 
cryptographic mechanisms deployed 
consider example stock data distribution service distributes information large number customers globe 
obvious people subscribed service able receive information 
new customer subscribes able receive stock data immediately understand information released time subscription 
conversely started eth customer canceling subscription able process information time cancellation 
consequence purpose discuss key management schemes guarantee instance time actual group members possession cryptographic keys needed participate 
naive solution create new session key joins leaves group securely distribute key members group unicast security mechanisms 
solution scale requires new session key encrypted individually participant 
propose suite novel approaches achieving efficient security multicast enabling applications requiring secure multi party communications highly dynamic groups arbitrary size 
approaches allow group members establish mutually shared secret provide privacy message authenticity property relying shared secret 
transitions key management approach running system possible 
approaches offer perfect forward secrecy dif require small amount calculations storage participants avoid investing trust third party components routers re 
depending choosen approach setup phase unidirectional communication sufficient manage group membership inter participant communication may required 
techniques limited ip multicast applicable satellite broadcasts connection oriented multicast services atm atm 
organized follows section presents related section discuss schemes relation section evaluates results discusses impacts security attacks 
section concludes explores 
related existing protocols secure multicasting limited distribute session keys static small groups 
dealing group key distribution large group frequent membership changes explorations done spanning tree bd proposes distribution key spanning tree generated members 
relies trust members forward data modification handle group membership changes securely efficiently 
cliques approach proposed stw improve capability system distribute session keys dynamic groups solution scale large groups group manager exponentiations group membership change messages get prohibitively large 
iolus iolus mit large group decomposed number subgroups reducing number members affected key change due membership changes :10.1.1.39.4261
relies relay nodes performing admission control packet rekeying 
requires full trust relays increases transmission delay handle relay failures gracefully 
multicast trees came schemes multicast key distribution remarkably similar tree approach 
wallner harder national security agency currently available expired internet draft 
scheme wong gouda lam university texas scheduled appear sigcomm 
complete list related works see :10.1.1.21.7972
issues improved reach goal scalability reduction computational complexity reduction trust dedicated nodes network components necessity group members interoperate generation group wide secret 
propose new set protocols demonstrating ability successfully handle issues large highly dynamic groups 
secure multicasting solutions changes group membership possible minimal involvement dedicated nodes group members limiting number size messages computing resources needed 
approaches cope properties inherent multicast broadcast environments unreliable case ip unordered transmission channel transmissions may way minimal return channel reflect nature broadcast environments users secure multicasting 
third party entities routers intermediate systems forwarding secured data allowed gain access actual keying material plain text payload 
seen earlier important system large groups frequent joins leaves susceptible implosion enables users understand transmitted times part group joined left 
additionally third party recording ongoing transmission capturing secrets held participant able understand recordings 
known perfect forward secrecy dif 
completely achieve unicast connections need set ephemeral secrets 
section organized follows general architecture discussed followed detailed descriptions key management approaches centralized tree centralized flat distributed flat explaining properties available large dynamic groups 
schemes cover wide range applications security needs tight control centralized approach extreme tolerance system network failures completely distributed scheme 
architecture common components identified explained interactions operations shown 
components data related control related sender data multicast group receiver admission control group manager key manager key control group setup channel multicast data connection multicast control connection shot control connection unicast multiple instances secure multicasting components single sender multiple recipients scenario shows basic architecture simplest scenario forming basis descriptions single sender number participants multiple sender scenarios explained 
fundamental common functions explained individual extensions modifications pursued 
generally components separated groups group data related components covering components similar current insecure multicast broadcast communication architecture 
consists sender recipients data multicast groups 
group control key management related components includes components involved key agreement key exchange process 
sender application prepares data non secure transmission encrypts mac possibly authenticates packets current traffic encryption key tek received group manager 
recipient receives data data multicast group decrypts tek local key manager 
steps application data processing notice differences resulting encryption authentication data 
data multicast group multicast broadcast anycast channel delivering secured packets sender intended receivers 
transport bulk application data 
group manager receives admits processes join leave requests participants sends messages key managers perform necessary key changes 
admission control queried group manager find admitted 
function delegated human chairperson 
key manager receives decodes rekeying requests group manager passing resulting tek receiver 
setup channel join requests new members usually received unicast connection mechanism 
channel needed bootstrap join request perform authentication new participant group manager 
single setup component lead implosion problems proposed replicate setup component multiple machines establish permanent connection centralized access control component 
distributed approach setup implosion issue 
key control group multicast broadcast channel delivering packets group manager tended receivers 
traffic consists new keying material needs distributed participants key managers 
transmissions channel received participant achieved implementing components reliable multicast mechanism discussed fjm psb done experimental realisation system performing retransmits regular basis limited history key changes resulting soft state approach 
reason receiver unable receive packet reasonable time fallback solution contact group manager 
data multicast group participant admission control group manager key control group key manager session setup group collaboration scenario sender senders receivers distinguished 
receiver free send data encrypted authenticated current tek group collaboration environment member group holds roles time resulting situation shown 
transformation sender recipient integrated group manager isolated 
schemes scenario distributed key management scheme suited 
senders receivers treated equally referred term participant 
unique identification sender required opposed identification admitted group member necessary sender asymmetrically authenticate data packet 
applications immediate recognition outsiders injecting traffic crucial acceptable detect sender impersonation admitted group members certain pre defined time limit fact occured 
applications possible messages authenticated symmetrically mac amortize costly asymmetric operation packets 
achieve sender retains mac values packets sent 
regular time intervals distributes collected list mac values single asymmetric signature macs recipients 
authenticity data packets sent verified recipients single asymmetric operation get original packets procedure group manager uniquely authenticate source keying material group members 
basic operations group transmit traffic encryption key tek secretly number key encryption keys keks encrypt control traffic containing tek 
distinguish keys key consists discussed detail chapter car application dfp 
tuple containing unique id version revision keying material proper 
key decrypt message part referred id version revision tuple 
usage independent version revision fields allows zero message joining explained leave join descriptions respectively 
abovementioned components keys involved different activities group creation group manager configured group access control information 
additionally group parameters published directory service 
single join new participant key manager sends request group manager checks participant allowed join 
group manager assigns unique id selects series keks transmitted newcomer 
selection keks discussed separately key management scheme 
group manager increases revision keys tek keks transmitted participant passing keying material way function cryptographically secure hash sends keys new participant 
informs sender update revision tek 
participants notice revision change key tuple ordinary data packets pass tek way function 
function reversible newcomer way determine key 
single leave ways leave group silent leave voluntary leave forced leave 
third kind interest require action group manager 
admission control feels need forcibly exclude participant leave message sent 
participants may ask admission control exclude member 
admission policy deal requests 
exclude member keys known need replaced entirely new keying material 
remaining participants aware change key version number increased 
group manager sends message new keying material decrypted remaining participants key managers member just left 
multiple join multiple leave group merge group split functions number dependencies chosen scheme enhance usability 
due space constraints see description :10.1.1.21.7972
group destruction group manager notifies remaining participants destruction closes network connections destroys keying material frees memory 
soon parties thrown away keying material perfect forward secrecy covering traffic third party opponents guaranteed 
centralized tree key management tightest control individual participants achieved centralized approach suitable applications high security demands 
easy implement maintain poses little load network receivers 
keying material managed centrally group manager joining participants register 
store keying mate tree arbitrary degree 
participants represented leaves 
simplicity explanation assume tree fully balanced complete binary tree 
example depicts tree maximum group members depth 
cf ab cd ef traffic encryption key key encryption keys binary hierarchy keys 
labels hexadecimal define range participants knowing key 
setup phase includes admission control participant establishes shared secret group manager 
shared secret known group manager individual participant lowest level key encryption key kek 
group manager stores leaf node associated participant uses truly private communication participant required join operation 
revision increased insure perfect forward secrecy 
nodes binary tree held group manager contain keks achieve efficient communication new keying material membership group changes 
nodes represent actual systems intermediate entities hold keys hierarchy virtual sub groups different sizes 
participant holds different subset keys tree specifically keys path participants leaf root node traffic encryption key tek 
intermediate key encryption keys message understood part group message encrypted kek understood participants 
enables transmission new keys limited set receivers disabling decrypt specific messages 
encrypted payload key change message includes key version revision number key changes order delivery implicitly detected receivers 
version changes separate message group manager new key provided secure manner 
revision changes resolved locally 
join join operation participant key manager unicasts request group manger checks admission control assigns id say participant individual key stored usually ephemeral unicast session key employed join request 
participant id chosen identifies traversal tree leading unique leaf determining ids keys known receiver 
alternative explicit assignment ids possible participant address ip address port number function thereof participants ids 
group manager increases revision keys path new leaf root key encryption keys traffic encryption key puts way function sends degree node possibly different group manager needs aware node degree 
new revision keys joining participant associated version revision numbers 
time senders informed revision change reliable manner start new tek 
receivers know change data packet indicating increased revision arrives 
creates traffic revision change reliable 
leave perform leave operation group manager sends message new keying material decrypted key managers remaining participants 
additionally frees slot utilized leaving participant making available reuse join 
assume leaving 
means keys knew key encryption keys cd cf traffic encryption key need viewed compromised changed way acquire new keys 
done efficiently tree leaf node corresponding leaving participant tek stored root node encrypting new node keys appropriate underlying node leaf keys 
example tree shows new key encryption key replacement cd needs received participants fnew new traffic encryption key fnew participant encrypting new keys individually intended participants take advantage existing hierarchy encrypted recipient need 
sent twice copy encrypted children keys existing ef new decrypted intended recipients fnew similarly encrypted knowing 
fnew encrypted holding key key fnew 
results message sent ed eef fnew fnew fnew fnew fnew path leaving node leaf new keys bottom rows encrypted children 
new key parent node encrypted 
results keys sent represents depth hierarchy length id huge group participants bit keys single message bytes multicast group establishes new secrets 
processing multicast message require decryption operations participants average decryptions 
multiple leaves intuitively extended multiple leaves 
simplest obvious exclusion subtree generalized arbitrary group nodes 
single message multiple leaves takes advantage path overlaps keys need created sent message leave operation 
efficiently coalesce multiple leave join operations single message 
traffic encryption key key id version revision bit long encrypted groups key encryption keys bit version bit revision encrypted sub groups leaf key encryption key encrypted single node 
bit revision keks keks issued leave operation protected joining participants 
colluding participants reliably excluded sequential exclusions grouping multiple leave operation 
multiple joins similarly joins happen short succession revision tek keks shared newcomers need increased newcomers allowed decipher small amount data sent admitted usually fraction second 
frequent joins expected architecture may changed senders responsible revision increases tek 
may increase revision regular short intervals half second creating limited window newcomers read past traffic time removing need group manager reliably keep contact senders 
leaves joins happen interleaved grouped individually 
group merge group split merge independent groups trees joined adding new root node new tek joint group 
keks second level 
undoing operation merged group split point time 
split subgroups new group managers performs group leave operation foreign members 
centralized flat key management organizing bits id hierarchical tree fashion distributing keys accordingly assigned flat fashion 
advantage greatly reducing database requirements obviates sender need keeping information participants 
possible exclude participants knowing group place 
id bit id bit id bit id bit tek kek kek kek kek kek kek kek kek bit value bit value flat id assignment data structure held group manager simple table entries 
entry holds current tek slots hold key encryption keys 
represents amount bits participant id normally equal transport layer network address 
bit network address keys available 
participant knows keys depending value single bits address 
keys associated version revision numbers tree scenario 
table contains keks keys bit corresponding values bit take 
key associated bit having value referred kb bit keys 
keys table generate keying structure starting key associated highest order address bit combining key level create shared secrets subtrees independently 
results similar tree control section key space smaller id length bits keys including tek needed independent actual number participants 
number participants limited value considered choice 
allow separation participants residing machine id space extended bits including port number information 
ipv calculated ids value chosen avoid collisions 
keeps number keys size change messages small 
reducing storage communication needed approach advantage needs keep track currently member group manager able unwanted participant 
join join participant contacts group manager assigned unique id receives keys corresponding id bit value pairs previous revision increment 
id may derived form network address 
example newcomer binary id receive tek key encryption keys secure setup channel revision increased 
leave keys known leaving participant tek keks considered invalid 
need replaced way intractable easily computable remaining participants 
group manager sends multicast message consisting parts firstly contains new tek encrypted valid keks participant single bit difference id calculate new tek 
secondly contains new replacement kek encrypted old kek new tek invalid keks participant remaining group update keks previously gain knowledge keys participants 
example message generated participant binary id leaves shown 
kek new tek id bit tek kek new id bit tek kek new id bit kek new tek id bit bit value bit value new keks encrypted function old kek new tek centralized flat message exclude participant multiple colluding participants note centralized tree approach colluding participants easily done flat approach 
share key tables cover subgroup defined keks common 
participant sharing individual keks colluding parties indistinguishable terms keying material holds 
approaches known unable exclude colluding participants short re creating group 
centralized flat approach excluding colluding participants possible range considering keys held colluding participants tainted 
usually exclude certain amount valid participants re register group manager 
minimal number colluding users needed expelled group re creation resistant limited increased arbitrary number 
simplicity scheme described terms bits generalized symbols number values combining bits symbol 
size id reduce number symbols number keys participant hold 
time increase number keys colluding group needs hold symbol requiring carefully chosen ids resistant 
increasing drawback storage needed group manager participants affected 
group creation time selected expected conspiracy risk cost re creating group re joining participants accidentally excluded range 
distributed flat key management main concerns centralized approaches danger implosion existence single point failure 
attractive search distributed solution key management problem 
solution completely distributing key database centralized flat approach participants created equal complete knowledge 
centralized flat approach participant holds keys matching id collaboration multiple participants required propagate changes group 
dedicated group manager participant may perform admission control operations 
group manager knowing ids ids need generated uniquely distributed way 
apparent solutions participant network address directly apply collision free hash function 
scheme resilient network node failures inherent self healing capability vulnerable inside attacks 
offers security break attacks schemes discussed higher resilience failures considered stronger active attacks 
participant participant group find heartbeat exists start create keys tek keks ones received group manager centralized flat scheme 
starts heartbeat announcing fact key holder keys just generated 
join joins see heartbeat select previous participant sender address packets list key creators heartbeat expanding multicast rings willing admit 
send newcomer keys share tek applicable keks increased revision 
keks needed newcomer exist created initial operation 
id calculated network address easy select participants having remaining keys having knowledge group assist newcomer 
leave leave operation works analogous description section participant care leave key holder new version announcing course newcomer sure trustworthy sides perform access control additional key contributors perform simplified access control procedure newcomer includes mac tek new key left update participants admission control 
know keys version needs increased current key holder keys perform version increase works key relay 
participants wishing leave initiate operation key relay supplying new keying material supposed know 
operations multiple joins leaves group merges performed analogous description section making relays participant supposed know share keys 
description distributed flat key management limits utmost necessities 
treatment additional details necessary considerations reader kindly referred transitions seen schemes closely related 
worth exploring change schemes run time 
possible transitions show 
centralized tree lossless loss pfs large message centralized flat lossless lossless distributed flat security gain old participants colluding old participants expelled participants joining transition 
previous group manager knows keys expelled 
transitions schemes transitions flat schemes simple data structure 
centralized flat approach transition happens new group manager giving keys direction done group manager ceases exist viewed backup solution create basis elect new group manager 
requirement participant able perform access control functions needs trust participant doing 
transition pair attractive heterogeneous approach combining advantages schemes easily created centralized flat possible simplify participants operation group manager gets overloaded 
transition centralized schemes complex involves changes key structure 
hierarchy generated flat table way described section multiple leave 
keys derived hierarchy populate tree data structure held group manager 
transition centralized tree centralized flat difficult depends internal design keying material generator group manager 
keying material generated perfect forward secrecy system assured transition basically involves notification participant carrying new keying material 
buf limited amount perfect forward includes efficient message free protocol obtain consensus contradicting key change requests 
secrecy sufficient generation process utilized 
group manager holds generating secrets branching level tree 
short multicast message group manager participants sufficient reveal generating secrets entitled leads table data structure 
finding solution retains perfect forward secrecy investigation 
evaluation schemes behave differently terms offered functionality achieved performance deal security threats 
properties explored 
offered functionality table compares properties scheme 
properties self explanatory described multiple leaves multiple leaves difficult approaches flat datastructures 
having multiple invalidated fields causes table sparse normal mechanisms 
forcing collaborating entities difficult 
easily recoverable group manager group members suddenly disappear flat approaches recover situation electing new group manager centralized approach shifting key holders distributed approach 
involve cooperation group participants 
failure recovery self healing achieved 
assigned ids centralized flat approach assigned ids may unwanted remember assignment ids ids defined network function thereof may preferred 
exclusion colluding participants possible flat schemes exclude number valid participants need join 
centralized approaches better suited broadcasting high security applications distributed approach fits dynamic conferencing dedicated session chair 
memory requirements group manager significantly higher tree scenario see memory consumption allows additional level control may necessary anyway worth cost certain applications 
multitude available features perfect forward secrecy self healing need participants cooperate return channels manager possibility transition form scheme migrate control required trust third parties allow approaches fulfill different basic needs 
compare favorably existing approaches terms simplicity reliability computational requirements achieved security 
achieved performance usage critical point applications offer cryptographic functions 
relevant costs group manager participants cpu consumption memory consumption property tree allows establishment group wise key achieve privacy authenticity perfect forward secrecy dynamic join leave handled trust third parties required designed central controlling entity controlling entity know participants multiple leaves diff diff exclusion colluding participants diff diff joining separation groups easy setup implosion issue return channel required operation assigned ids network ids net single point failure easily recoverable small database involvement multiple parties leave join table properties different schemes diff difficult communication bandwith typical operation delay tree part system implemented 
view simplicity architecture sound assessment involved costs 
upper bounds concrete values far confirmed implementation appropriate sun ultra workstation 
due recurring space constraints publication exact numbers costs operations related approaches 
memory consumption different tree vs flat scenarios 
tree group manager needs hold participants additional kek nodes 
corresponds storage bytes tree node leaf uncompressed tree times prospective participant 
tree sparsely populated compressed 
grown run time group manager need commit certain size 
tree scenario memory requirements participant amount times bytes kb ipv ids 
flat scenarios memory requirement participant group manager small 
additional information may need storage key ownership total cost kb cases 
approach usable platforms comparatively reduced embedded systems 
communication side join operations centralized scenarios induce additional traffic participants notified key revision changes implicitly reception messages encrypted higher revision number 
leave operation causes message typically bytes sent kb 
message may need retransmitted reliable multicast increasing delay receives updated keying material 
distributed scenario multiple exchanges required resulting multicast messages worst case 
may involve unicast messages cover gaps unrelated subgroups 
operation approach builds complete framework doesn stand 
works nicely top unicast security architectures mandatory ip version atk 
working integration skip cla available source number platforms 
schemes atop reliable multicast protocol fjm psb 
increase load group manager 
take advantage proposed integrated services architecture internet associated resource reservation protocol rsvp bcs limit done reliable multicast protocol reduce latencies 
schemes rely specific cryptographic algorithms protocol number providing basic functionality 
considered weak broken components easy change framework continue 
complete framework secure multicasting 
core framework consists approaches different properties rely basic philosophy 
approaches organize space keys eventually assigned group members unique way generating keys needed 
new group keys need established generated distributed members group affected change 
organization key space assures operations groups may executed complexity logn size group complexity measured size number messages exchanged number cryptographic operations performed participants 
approaches differ important aspects 
offer system designer choice centralized distributed key management trust participants varying degrees load participants tight control group failsafe distributed operation 
discussed introductory section various authors published secure multicasting schemes 
properties table offered approaches aware scheme properties maintaining efficiency 
considerations deserve studies 
preliminary implementation available working lack experiments large distributed groups integration experimental software currently available platforms planned skip cla isakmp orm 
possibility hot switching approaches discussed section discovery needs considered detail 
specifically efficient translation algorithm tree section flat data structure section needs analyzed 
furthermore anticipate batching leave operations may efficient optimal grouping participants leaving time interval 
acknowledgments weiler perlman anonymous reviewers valuable feedback improving 
atk atkinson 
security architecture internet protocol 
rfc august 
atm atm forum 
uni signalling 
bcs braden clark shenker 
rsvp new resource reservation protocol 
ieee network september 
bd burmester desmedt 
efficient secure conference key distribution 
security protocols workshop pages 
car 
dynamic security communication systems 
phd thesis eth rich 
progress 
cla aziz 
skip securing internet 
proceedings ieee fifth workshop enabling technologies wet ice 
marcel waldvogel dan sun bernhard plattner 
efficient security large dynamic multicast groups 
tik technical report tik tik eth rich february 
available ftp ftp tik ee ethz ch pub publications tik report ps gz 
dfp fankhauser plattner 
scalable video stream encoding compression mobile computing 
acts mobile summit volume pages november 
dif diffie 
authenticated key exchange secure interactive communication 
proceedings th worldwide congress computer communications security protection pages 
fjm floyd jacobson mccanne zhang liu 
reliable multicast framework light weight sessions application level framing 
proceedings acm sigcomm pages september 
mb 
mbone provides audio video internet 
ieee computer april 
mit 
iolus framework scalable secure multicasting 
proceedings acm sigcomm pages september 
orm 
key determination protocol 
internet draft progress draft ipsec txt 
psb paul lin bhattacharyya 
rmtp reliable multicast transport protocol high speed networks 
proceedings tenth annual ieee workshop computer communications september 
pingali towsley kurose 
comparison sender initiated receiver initiated reliable multicast protocols 
proceedings sigmetrics 
stw steiner tsudik waidner 
cliques protocol suite key agreement dynamic groups 
research report rz ibm rich research lab december 
