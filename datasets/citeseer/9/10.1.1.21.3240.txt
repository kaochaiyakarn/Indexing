bayesian map learning dynamic environments kevin murphy computer science division university california berkeley ca cs berkeley edu show map learning formulated inference graphical model allows handle changing environments natural manner 
describe different approximation schemes problem illustrate results simulated grid world doors open close 
close briefly discussing learn general models partially observed environments contain variable number objects changing internal state 
mobile robots need navigate dynamic environments short time scale obstacles people appear disappear longer time scales structural changes doors opening closing occur 
consider create models dynamic environments 
particular interested modeling location objects represent map 
enables robot perform path planning propose bayesian approach view map random variable updated bayes rule just way hidden state variables robot pose position orientation updated widely techniques markov localization kalman filtering 
bayesian updating specify observation model state predicts robot see transition model state changes time response robot actions 
formalism factored pomdps partially observable markov decision process bdh see section details 
provide mechanism efficiently performing update equations discuss various approximation algorithms section 
section show results applying algorithm simulated dynamic environment section conclude discuss 
model main components pomdp transition model observation model reward model induces policy 
section focus transition obs 
matrix trans 
matrix action observation location map pomdp depicted graphical model 
dotted nodes represent fixed parameters 
square nodes decision variables actions 
clear nodes represent hidden state robot location 
shaded nodes observations 
pomdp map explicitely represented set random variables 
map nodes connect represented thick arrow 
model dynamic state world doors open closed stored separately static map 
observation models treating sequence actions observed inputs simple exploration policy choose actions described section 
external world considered static modeling purposes treat fixed unknown parameter case state usually just consists robot position orientation see 
state variables discrete valued perform bayesian updating hidden markov model hmm extended kalman filtering non parametric sample filtering see kf 
example consider simple hmm model state consists robot location represented point discrete grid actions consist moving step compass directions 
observation model specifies probability possible observation vector function location 
assume observation symbols simple extend technique handle observations ir discrete set observations observation model represented stochastic matrix kjx 
similarly transition model specifies probability moving grid cell function action taken represented set stochastic matrices jjx 
parameters implicitely encode map estimating parameters em equivalent estimating map ks sk 
external world change time represent random variable fixed parameter 
augment hidden state include random variables mn means location contains object time see 
parameterize model need specify transition matrix em approach assuming priori independent 
assumption realistic 
example probability wall cell depends wall neighboring cells 
modeled adding undirected arcs local map observations global map position dimensional sensor model robot receives observations theta neighborhood 
double nodes deterministic multiplexer nodes connect fashion observations 

example open door closed door probability change write change 
discuss parsimonious representation objects internal state doors section 
robot change external environment open close doors move obstacles depend 
need specify affects observations 
simplest way create indexical representation space robot centered coordinates 
robot knew location simply extract appropriate part build model immediate surroundings call local map 
implement graphical model deterministic multiplexer nodes location acting selector illustrated 
nodes local map defined ffi gamma 
entry local map gets passed stochastic link produce actual observation 
local map predict actions succeed probability moving neighboring cell depend contains obstacle probability actuator failure 
inference naive application exact inference algorithm junction tree jen graphical model wildly intractable nodes map correlated virtue having common child 
intuitively correlation arises robot uncertain location explain means simple example 
suppose time robot sees object know cell need increase record fact values independent 
posterior modes corresponding possible worlds contains contains time robot figures location recognizes landmark infer time location high probability go go compensate correlated 
bayesian approach handle automatically modes posterior nodes slice mrf markov random field consider complication 
collapse robot knows unfortunately exact posterior size need find efficient representation 
robot knows correlation deterministic nature local map see section 
represent posterior factored form mn takes kn space 
perfect sensors know object cell represent map just space 
practice robot know exact location approximation project posterior factored representation step 
bk show error introduced kind iterated approximation grow time :10.1.1.119.6111
assume map changes slowly treat constant short window time gamma compile parameters local map 
alternate estimating locations window map updating map estimated locations 
just online version standard em approach cf 
bk 
main advantage locations early window get look evidence help disambiguate consider example moving corridor known landmarks lead uncertainty part map update 
standard assumption parameter independence means approach handle correlations 
alternative approximations sample filtering algorithms see kf variational approximation gj 
exact inference slice discuss inference dimensional graphical model 
assumption independent need compute marginals separately done exactly efficiently 
basic idea consider location time update part map information sensors weighted probability correct location 
conditional likelihood evidence sensors theta neighborhood centered product factors ejx dr gamma dr jm dr gamma dr jm term just diagonal matrix times vector takes time compute 
update posterior kn time follows jje ffp ff normalizing constant 
weighting matrix je update map kn time nr kjx cje theta kjx terms computed constant time exploiting fact known theta submatrix nodes get connected evidence local map nodes effectively disconnected graph 
formally kjx ae gammar gammac gamma gamma gamma terms jo gammar gammac ffp gammar gammac jm computed equation 
condition probable values simple environment experiments 
shaded blocks represent walls represents starting location robot north open door north east closed door 
























sample run algorithm environment 
considering possible values update map time approximation called bounded conditioning 
results illustrate behavior algorithm robot placed simple environment shown 
change assumed sensors actuators fail probability 
policy visit nearest uncertain cell cf 

show belief state robot time step 
letters center cell robot best guess wall open door closed door free space open closed door uncertain 
true location robot indicated robot best guess location indicated observations theta grid sensors centered true location shown cell asterisk denotes erroneous observation label different true contents cell 
title indicates goal robot heading row column notation represents top left corner action intends take 
discuss interesting steps example 
step robot starts knows fact sure 
nearest accessible uncertain cells arbitrarily decides head 
theta sensing neighborhood sufficient reach goal 
moves upper corridor 
step robot receives observations inconsistent prior beliefs 
consequently gets confused decides stay put action 
step robot uncertainty status door exceeds threshold shown fact represents fact robot knows object door sure open closed 
increase uncertainty door objects walls happens transition matrix nodes specifies open doors closed doors vice versa 
robot revisit door check status examined closer cells 
succesfully learning map environment robot starts running door door trying keep map date 
experiments similar environments robot learns correct map noise levels large 
case robot get lost starts updating wrong part map 
robot wanders area known distinguishing characteristics repair damage map 
discussion problem modeling dynamic environments open quite 
cassandra wrote big shortcomings modeling environment pomdp models dependence world static :10.1.1.35.8467
thrun thr wrote open question incorporate models moving objects grid representation 
shown model dynamic environments graphical models 
previous know addressed problem learning maps dynamic environments yb 
representation leaves desired 
particular suppose interested representing location individual objects internal state 
objects states current approach require theta possible values saw representation doors open closed 
addition transition matrix hard specify 
parsimonious representation map store distribution identity type object cell store state object separate random variables 
course uncertainty object identity induce correlation state variables just uncertainty location previous representation 
simple example object centered representation shown store state door open closed nodes take values fw transition matrix identity matrix assume object location doesn move change identity transition matrix change diagonal gamma change diagonal 
example consider task person maze environment may disappear view corner useful model current position heading 
transition model person similar robot share physical environment local map centered person location 
example assumed knew doors knew corresponded location vice versa 
agent placed unknown environment need decide current observations due existing object needs create new object 
problem arises simpler context learning maps unknown size fixed graphical model clearly inadequate 
situation similar problem data association tracking multiple targets bsf 
standard approach model object state usually position velocity gaussian measurement observed assumed come nearest object observation lie inside confidence ellipsoid new object created 
note hard thresholding approach eliminates need model correlation different objects 
new object needed agent decide kind object pre existing ontology invent categories clustering percepts 
hope problems better understand build embedded bayesian agent 
stuart russell useful discussions 
supported number onr 
bdh boutilier dean hanks 
decision theoretic planning structural assumptions computational leverage 
ai research 
bk boyen koller 
approximate learning dynamic models 
advances neural info 
proc 
systems 
bk boyen koller :10.1.1.119.6111
tractable inference complex stochastic processes 
proc 
conf 
uncertainty ai 
bsf bar shalom fortmann 
tracking data association 
academic press 
cassandra kaelbling kurien 
acting uncertainty discrete bayesian models mobile robot navigation 
ieee intl 
conf 
intel 
robotics systems 
fox burgard thrun 
active markov localization mobile robots 
robotics autonomous systems 
gj ghahramani jordan 
factorial hidden markov models 
machine learning 
jen jensen 
bayesian networks 
ucl press london england 
kf koller 
learning approximation stochastic processes 
intl 
conf 
machine learning 
kaelbling littman cassandra 
planning acting partially observable stochastic domains 
artificial intelligence 
ks koenig simmons 
unsupervised learning probabilistic models robot navigation 
ieee intl 
conf 
robotics automation 
sk shatkay kaelbling 
heading right direction 
intl 
conf 
machine learning 
thrun burgard fox 
probabilistic approach concurrent mapping localization mobile robots 
machine learning 
thr thrun 
learning metric topological maps indoor mobile robot navigation 
artificial intelligence 
thrun fox 
sample hidden markov models 
intl 
conf 
machine learning 
yb yamauchi beer 
spatial learning navigation dynamic environments 
ieee trans 
systems man cybernetics 
yamauchi schultz adams 
integrating exploration localization mobile robots 
adaptive behavior 
