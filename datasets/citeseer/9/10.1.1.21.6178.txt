tabled resolution constraints recipe model checking real time systems du ramakrishnan scott smolka department computer science suny stony brook stony brook ny usa cram cs sunysb edu computational framework tabled resolution constraint processing verifying real time systems 
discuss implementation framework context xmc rt verification tool 
systems specified timed automata xmc rt offers backward forward reachability analysis timed modal mu calculus model checking 
handle timed infinite state systems unbounded message buffers provided set reachable states finite 
illustrate capability real time version leader election protocol 
xmc rt function model checker untimed systems 
despite versatility preliminary benchmarking experiments indicate xmc rt performance remains competitive real time verification tools 

showed logic programming tabulation construct efficient model checker untimed systems 
particular xmc model checker supporting xl extension milner value passing ccs system specification language alternation free fragment modal mu calculus property specification language 
xmc written xsb prolog xsb logic programming system developed suny stony brook extends prolog style sld resolution tabled resolution 
principal merits extension xsb terminates prolog datalog research supported part nsf eia ccr 
programs avoids redundant subcomputations computes founded model normal logic programs 
xmc written highly declarative fashion 
essentially consists predicates trans encoding transitional semantics xl terms models defining xl term satisfies modal mu calculus formula 
told model checker written lines xsb prolog code 
despite high level nature xmc implementation able judicious source level code optimizations attain performance comparable highly optimized model checkers spin mur examples including test suite contained standard spin distribution 
subsequent showed xmc performance improved compiling xl specifications representation low level automata 
showed xmc extended handle full modal mu calculus alternating fixed points arbitrary nesting depth 
experience xmc raises question tabled logic programming brought bear problem verifying real time systems additional technologies required 
reactive systems practical interest real time nature producing logic framework verification real time systems viewed important step xmc evolution 
theory implementation verification framework real time systems logic approach 
systems specified collections timed safety automata widely specification formalism real time systems :10.1.1.43.9418
properties specified real time extension modal mu calculus introduced ease discussion refer timed modal mu calculus 
consider alternation free fragment timed modal mu calculus 
discussed sub logic expressive 
main tangible outcome investigation xmc rt verification tool 
xmc xmc rt written declaratively xsb prolog uses polyhedra package generic constraint solver linear constraints reals constraint processing 
combination xmc effectively gives constraint logic programming clp system tabulation 
despite tabled resolution xmc rt simply extension xmc 
particular construct manipulate region graphs order analyze specifications real time systems requirement xmc :10.1.1.43.9418
convex sets constraints represent regions reason constraint solving needed xmc rt framework 
region graphs represent finite quotient inherently infinite state space underlying timed automaton 
inspired xmc rt constructs region graphs locally fly yielding quotient coarse possible sense refinements quotient carried necessary satisfy clock constraints appearing logical formula timed automaton represent system investigation 
local approach result exploration significantly fewer regions reasonable examples compared global algorithm consistent topdown resolution strategy computing fixed points 
case xmc untimed case 
advantages approach verifying real time systems embodied xmc rt lie mainly versatility include different styles analysis readily implemented single framework including forward reachability backward reachability model checking timed modal mu calculus formulas 
case expressiveness timed modal goes reachability allowing specify properties liveness bounded liveness 
timed infinite state systems unbounded message buffers analyzed framework set reachable states finite 
prolog terms represent system states buffers encoded dynamic prolog list data structures 
illustrate point real time version leader election 
finite state untimed systems analyzed little overhead 
particular specification utilize clocks xmc rt conduct analysis fashion virtually identical style deployed xmc 
capability illustrated protocol untimed leader election 
contrast extant tools verifying real time systems focus exclusively reachability analysis model checking handle specifications untimed contain unbounded structures 
related discussed greater detail 
somewhat surprisingly xmc rt versatility achieved incurring severe performance penalty 
particular preliminary experimental data shows xmc rt competitive performance wise hytech uppaal standard benchmarks 
untimed systems xmc rt takes additional time compared xmc 
related researchers constraint logic programming verification real time systems 
gupta model real time systems clp programs safety properties verified reachability queries 
kinds correctness properties liveness considered 
formulation exploits clp handling constrained variables verify parametric systems computing instance values parameters property holds 
tool traditional prolog system constraints termination guarantees 
podelski encode discrete infinite state systems bakery algorithm clp programs verify ctl properties computing greatest fixed points logical consequence operator :10.1.1.43.1094
fixed point computations implemented meta programs sicstus prolog 
computations intrinsically global magic set transformations goal directed 
contrast xsb evaluation strategy directly compute fixed points goaldirected manner add constraint processing metaprogramming 
approach enables xmc rt performance approach finite state model checker xmc system verified real time components 
noted timed systems expressed explicit manipulation clocks notation :10.1.1.43.1094
mukhopadhyay podelski give sufficient conditions reachability analysis terminates constructing region graphs 
timed modal mu calculus model checker xmc rt verify larger class formulas livelock freedom compared ctl model checker reachability checker :10.1.1.43.1094
discussed section difference significant computationally 
models hybrid systems clp programs 
various properties hybrid systems verified top bottom evaluation clp programs 
approach clp systems tabling 
bjorner kesten deductive approaches verify real time systems 
model systems clocked transition systems fair transition systems extended clock variables verification rules verification diagrams establish validity linear temporal logic formulas 
show process algebraic methods reduce schedulability problem realtime systems set equations solution yields values parameters system schedulable 
equations solved integer programming constraint logic programming 
class model checkers including uppaal concurrency factory difference bound matrices dbms represent constraints 
dbm tuned data structure representing constraints relate variables ideal realtime system verification limits tools nonparametric analysis 
contrast hytech kronos general polytope representation linear constraints reals 
noted xmc rt uses generic constraint solver linear arithmetic constraints reals 
organization section brief overview timed safety automata timed modal tabled logic programming 
introduce constraint logic formulation xmc rt implementation section 
experimental results realtime benchmarks unbounded real time systems untimed systems appear section 
offer concluding remarks section 
full version 
prototype xmc rt available authors request included xmc distribution www cs sunysb edu lmc cs 
timed safety automaton process fischer mutual exclusion protocol 

preliminaries section recall notion timed safety automaton give syntax semantics timed modal mu calculus briefly review tabled logic programming sketch issues arise integrating constraints tabled resolution 

timed safety automata timed safety automaton tsa finite state automaton extended real valued clocks 
states automaton associated identifiers called locations 
transition action label drawn finite alphabet may specify subset clocks reset transition 
conditions transition enabled constraints clock values 
constraint possibly empty conjunction base constraints form clock integer constant taken set state automaton associated location invariant constraint clock values satisfied automaton remain state 
intuitively tsa operates transitions location location 
executing transition takes time 
transitions taken time progresses uniformly incrementing clock value arbitrary real number 
conciseness expression usually extended discrete variables non clock variables take values finite domains 
increase expressive power tsa discrete variables eliminated expanding automaton state space 
example tsa depicted corresponds process process id fischer mutual exclusion protocol 
automaton clock discrete variable start state location state labeled cs represents process critical section 
clock reset transitions transition enabled value clock equal 
state location invariant automaton remain clock value exceeds 
semantics tsa terms dense labeled transition system lts states correspond location tsa unique valuation clocks 
ltss dense number states number transitions state may uncountable 
example lts induced tsa distinct states form hl vi real number 
transitions hl vi hl real values hl called time successor hl vi 
lts transitions hl vi hl hl vi hl cs vi 
destinations transitions known transition successors respective sources 

timed modal mu calculus timed modal mu calculus introduced derived real time logics adds time modalities formula clocks modal mu calculus 
encoding alternation free fragment timed modal mu calculus uses syntax formulas tt ff atomic form neg diam act box act reset logical variable tt ff propositional constants atomic base formula atomic proposition constraint system formula clocks neg standard logical connectives diam act formula holds state reached action act taken delay passage time box act formula holds states reached action act delay dual discrete modal operators delay formula holds delay formula holds dual real time modal operators reset defines new clock local formula logical variables provided definitions fixed point equations form fixed point greatest fixed point 
defining equations stratified respect greatest fixed point operators equation system called 
tsa semantics formula respect dense lts induced new tsa constructed adding clocks defined 
untimed modal logics semantics timed modal mu calculus formula set states lts model state set defined inductively structure 
derive computational procedure evaluating semantics choosing appropriate constraint representation states sets 

tabled logic programming constraints tabled resolution methods logic programming address known shortcomings sld evaluation mechanism prolog susceptibility infinite looping redundant subcomputations inadequate semantics negation 
tabled resolution xsb declaring particular predicates tabled system automatically maintains table predicate invocations answers table equivalent invocations 
programs loop infinitely prolog terminate xsb xsb calls tabled predicate arguments prolog may call predicate infinitely 
xsb computes founded model programs negation exploit ability compute greatest fixed points negations fixed points 
xsb system built support constraint processing 
integrate external constraint solver native logic programming engine 
integration separates constraint processing control aspects fixed point evaluation 
constraint solver determines internal representation constraints assigns handles constraints 
xsb engine identifies constraints handles invokes solver operation involves constraint handles 

clp formulation implementation section describe clp formulation verification framework real time systems forms basis xmc rt 
reachability consider xmc system verifying untimed properties finite state systems 
encoded reachability analysis semantic equations modal mu calculus horn clause notation evaluated logic program tabled resolution 
clauses xmc model checker reachability analysis follows table reach 
reach trans 
reach reach trans 
reach indicates reach binary predicate 
trans means transition label 
diam formulas handled similarly case reachability analysis 
semantic equation diam formula diam fs corresponding clause xmc table models 
models diam act trans act models 
specifying state models formula diam act exists state transition label act models encoding timed systems interprets predicates reach models constraint logic programs interpret single state finite representation possibly infinite set states 
example consider infinite lts induced tsa 
finite representation hl represents infinite set lts states location value 
encoding evaluated complete inference procedure logic programs bottom evaluation tabled resolution long trans relation produces finitely distinct constraints constraint encoding verifying reachability safety properties timed case 
approach similar approaches taken safety properties ctl formulas respectively :10.1.1.43.1094
backward reachability analysis real time systems encoded similar fashion help predicate computes transitions constraints backwards constraint representing set target states computes constraint representing set source states 
formulation forward backward reachability diam formulas real time systems implemented xsb external library constraint solving 
specifically library manipulating convex polyhedra dimensional real space constraint solving connected xsb foreign language interface 
timed modal mu calculus reachability analysis diam formulas involve existential quantifications 
consider universal quantifications 
box formulas untimed modal mu calculus contain universal quantifications finite number target states transitions labeled act 
formulas handled prolog construct findall collect target states state 
semantics modality defined hl hl hl universal quantification uncountable clock values operational encoding findall applicable 
overcome problem encoding elimination universally quantified variable directly builtin constraint operation 
set states common location inv location invariant represent states variable set clock variables 
furthermore represent state value clock variables incremented define univ elim goal sd ss sd set states set solutions prolog predicate goal ss set states fv inv sd univ elim operation implemented difference operations polyhedra existential elimination 
notice univ elim operator requires direct manipulation solutions goal 
typically goal call predicate models 
binary predicate models clp system implicitly return answers binding additional constraints modify binary models predicate derive ternary predicate models ss 
set states formula ternary models explicitly returns ss contains states ss models order correct computation elimination universal quantification models ss return states model 
ensure defining models aggregation relation models identical models required return states ss models 
interesting fragments definition models models 
table models 
models ss union models ss 
formula recursion lfp models form ss models ss 
negation due greatest fixed points models neg ss models diff ss 
models ss models ss models ss 
universal transition modality models box act ss split act ls member ls findall ts trans act ts models ts act ss 
models 
models rest act ss models ts inverse trans ts act ss models rest act ss conjunction ss ss ss 
universal time modality models ss univ elim trans models ts ts ss 
definitions union relation goal contains variable canonical representation states true diff computes difference constraints inverse trans ts act ss ss represents states act state represented ts split act ls constraint ls finite list represents partition states represented identical act conjunction ss ss ss ss conjunction constraints ss ss 
models ts act ss ss subset targets ss act transitions list ts models correctness model checking algorithm key correctness proof definition semantic function lifting point semantics timed modal mu calculus region semantics 
intuitively formula set states returns subset states models 
horn clauses appearing formulation model checker seen direct translation semantic function see details 
optimizations logic program implementing model checker subjected optimizations described 
call abstraction logically speaking query form equivalent query term tabled logic programming environment abstraction improve performance distinct queries form overlapping answer sets share answer computations 
model checker call models ss replaced models ss set states obtained abstracting clock constraints location invariants 
early completion aggregation predicate union collects answers rules match current call models 
clearly answer generation stopped soon partial union covers solution space 
instance consider call form models ss results call models ss 
call results answer ss ss subsequent call models ss eliminated 

experimental results order gauge xmc rt performance real time verification tool consider example systems widely accepted benchmarks real time community fischer mutual exclusion protocol processes bridge crossing system adapted 
specifically compare xmc rt performance benchmarks hytech version uppaal version 
latest versions hytech uppaal currently available 
tools perform reachability analysis forward backward reachability case hytech forward reachability case uppaal 
fischer mutual exclusion protocol fischer mutual exclusion protocol controls access critical section turn variable imposing timing constraints turn variable modified 
protocol modeled parallel composition structure tsa depicted 
verify properties protocol 
safety process critical section time 
possibility states reachable initial state state exactly process critical section eventually reached 
liveness states reachable initial state evolution system eventually reaches state exactly process critical section 
bridge crossing system bridge crossing system controller schedules crossing trains bridge track 
system modeled parallel composition controller process train processes 
controller uses synchronization signals control movement trains keeps list trains bridge waiting cross bridge 
initially trains far away bridge free empty 
train emits signal appr nears bridge 
bridge free controller allows train proceed 
controller sends signal train 
send signal go train cross bridge bridge eventually free 
consider correctness properties 
safety trains bridge time 
liveness train eventually cross bridge 
bounded liveness train leaves crossing time units approach 
benchmarking results table contains running times obtained fischer mutual exclusion protocol bridge crossing system 
case fischer protocol considered processes 
properties interest expressed timed modal mu calculus verified xmc rt model checker logic 
safety verified forward backward reachability possibility property verified combining forward backward reachability 
uppaal support backward reachability possibility results tool 
introducing monitor automaton bridge crossing system bounded liveness property verified forward backward reachability 
liveness verified reachability analysis results case xmc rt 
hytech xmc rt backward reachability faster forward reachability data obtained backward reachability property verified technique 
data obtained sun enterprise gb memory running solaris 
sets data obtained uppaal option uppaal option uppaal 
option causes uppaal disable deadlock warnings results markedly lower execution times benchmarking runs 
data indicates xmc rt competitive hytech fischer bridge crossing benchmarks significantly uppaal exception process fischer protocol option 
expected sense 
xmc rt hytech rely general constraint solver convex polyhedra 
uppaal hand uses clock difference diagrams cdd bdd data structure representing efficiently manipulating certain non convex subsets euclidean space encountered verification timed automata 
general polytope representation linear constraints reals permits parametric analysis available hytech planned xmc rt performed restricted data structures dbms difference bound matrices 
dbms efficient 
comparing xmc rt hytech tools exhibit similar performance backward reachability 
comparable performance obtained cases xmc rt model checker attributable call abstraction optimization discussed 
table shows xmc rt slower hytech verifying possibility property process fischer protocol 
due inefficient subsumption check prototype implementation 
particular time region visited table lookup performed ascertain region visited previously 
indexing techniques speed check currently investigation 
plan implement part fully integrated tabled logic programming system constraints 
verification bounded liveness xmc rt timed mu calculus model checker slower corre system property xmc rt hytech uppaal uppaal mu calc reach fischer safety proc possibility liveness fischer safety proc possibility liveness fischer safety proc possibility liveness bridge safety crossing bounded liveness liveness table 
running times seconds verification fischer mutual exclusion protocol bridge crossing system 
reach stands reachability 
sponding unbounded liveness analysis 
time bound formula induces extra splitting regions reduces potential early completion optimization 

real time version leader election unbounded message queues leader election protocol nodes connected unbounded buffers form ring 
nodes identical unique identifiers 
node sends messages neighbor right receives messages neighbor left comparing messages local variables eventually exactly node elected leader 
protocol uses unbounded buffers communication media buffer fact holds finite number messages protocol execution 
extend leader election protocol placing timing constraints sending actions nodes message transmitted time units 
realtime protocol property upper bound elapsed time leader elected 
specification protocol process node process medium process modeled tsa 
buffer non empty corresponding tsa required send message time units 
unbounded buffers medium processes modeled naturally xmc rt prolog lists 
illustrate technique clause trans predicate describes local variable buf medium process updated message msg received channel chan 
process moves location empty nonempty transition 
trans empty buf chan msg nonempty msg buf 
xmc rt model checker timed modal mu calculus verify unbounded bounded liveness node leader election system 
unbounded liveness property requires leader eventually elected bounded liveness property requires leader elected time units 
time bound protocol requires rounds message passing leader elected 
round nodes simultaneously transmit messages plus time required medium processes leads requirement time units round 
xmc rt needed seconds verification unbounded liveness property seconds bounded liveness property 
discussed unbounded buffers protocol xmc rt able verify properties combines local model checking dynamic data structures lists offered xsb tabled logic programming system 

xmc rt verification untimed systems recall section xmc rt predicate invocation form models ss sr computes maximal subset states ss models formula precisely ss set states dense lts representing system version formula xmc xmc rt leader leader election processes af leader ef leader buggy livelock protocol fixed livelock buggy livelock fixed livelock table 
running times seconds verification untimed systems 
semantics tsa investigation corresponding pair hl ri location tsa region constraint 
contrast xmc corresponding invocation form models simply succeeds fails depending single state represented models models ss sr invoked prolog variable representing region underlying ss unbound region interpreted constraint true 
case rules xmc rt untimed operators timed modal mu calculus perform computations regions behavior xmc rt closely resembles xmc 
xmc rt effectively analyze untimed systems ensuring region variables unbound 
order estimate overhead attributable complex formulation models predicate xmc rt constraints interface compared performance xmc rt xmc verifying untimed systems 
table documents performance xmc xmc rt process leader election protocol adapted spin benchmark suite sliding window protocol gnu uucp called protocol 
basic properties leader election verified 
checked existence livelock error fixed correct buggy versions protocol window sizes 
data xmc table taken 
results indicate performance real time model checker xmc rt approaches finite state model checker xmc 
noted xmc performance protocol comparable spin mur 
see xmc rt structures handling real time verification lead little overhead applied finite state systems 

shown careful integration tabled resolution constraint processing yield computational framework suited model checking real time systems 
real time model checker xmc rt written highly declarative manner approx 
lines prolog code counting course package utilizes local approach region graph construction handle real time untimed systems unbounded structures 
includes integrating constraints directly xsb tabled logic programming system engine level 
expect considerable improvement performance xmc rt built top clp system verify conjecture experimentally 
abadi lamport 
old fashioned recipe realtime 
proceedings rex workshop real time theory practice volume lecture notes computer science berlin 
springer verlag 
alur dill :10.1.1.43.9418
theory timed automata 
theoretical computer science 
alur henzinger editors 
computer aided verification cav volume lecture notes computer science new brunswick new jersey july 
springer verlag 
bjrner manna sipma uribe 
deductive verification real time systems step 
proc 
th intl 
amast real time systems arts volume lecture notes computer science pages may 
bol 
tabulated resolution wellfounded semantics 
proceedings symposium logic programming 
chen warren 
tabled evaluation delaying general logic programs 
journal acm jan 
cui warren 
mutable terms tabled logic programming system 
international conferenceon logic programming las cruces new mexico usa nov 
podelski :10.1.1.43.1094
model checking clp 
proceedings fifth international conference tools algorithms construction analysis systems tacas lecture notes computer science volume pages amsterdam mar 
dill 
mur verification system 
alur henzinger pages 
dolev rodeh 
log unidirectional distributed algorithm extrema finding circle 
journal algorithms 
dong du ramakrishna ramakrishnan ramakrishnan smolka stark warren 
fighting livelock protocol comparative study verification tools 
proceedings fifth international conference tools algorithms construction analysis systems tacas lecture notes computer science volume pages amsterdam mar 
dong ramakrishnan 
optimizing compiler efficient model checking 
formal description techniques distributed systems communication protocols protocol specification testing verification forte 
du 
tabled resolution constraints model checking real time systems systems 
phd thesis state university new york stony brook aug 
available www cs sunysb edu thesis ps gz 
gupta 
constraint approach specification verification real time systems 
proceedings ieee real time systems symposium december 
halbwachs 
verification real time systems linear relation analysis 
formal methods system design august 
henzinger ho wong toi 
hytech model checker hybrid systems 
international journal software tools technology transfer october 
henzinger nicollin sifakis yovine 
symbolic model checking real time systems 
information computation 
holmer larsen wang 
deciding properties regular real timed processes 
proceedings cav 
lncs 
holzmann 
engineering model checker gnu protocol case study revisited 
proc 
th spin workshop volume lecture notes computer science toulouse sept 
holzmann peled 
state spin 
alur henzinger pages 
kesten manna pnueli 
verifying clocked transition systems hybrid systems iii 
proceedings international conference computer aided verification cav vol 
lecture notes computer science volume lecture notes computer science pages 
choi lee 
symbolic schedulability analysis real time systems 
proceedings ieee real time systems symposium pages december 
larsen pettersson yi 
model checking real time systems 
proc 
fundamentals computation theory number lecture notes computer science pages aug 
liu ramakrishnan smolka 
fully local efficient evaluation alternating fixed points 
proceedings fourth international conference tools algorithms construction analysis systems tacas lecture notes computer science 
springerverlag 
mukhopadhyay podelski 
region graphs symbolic forward analysis timed automata 
editor proceedings foundations software computer science fst tcs india december 
ramakrishna ramakrishnan ramakrishnan smolka swift warren 
efficient model checking tabled resolution 
proceedings th international conferenceon computer aided verification cav volume lecture notes computer science pages haifa israel july 
springer verlag 
ramakrishnan srivastava sudarshan 
efficient bottom evaluation logic programs 
wilde vandewalle editors computer systems software engineering state art 
kluwer academic 
smolka 
local model checking real time systems 
proceedings th international conference computer aided verification volume lecture notes computer science 
american mathematical society 
tamaki sato 
oldt resolution tabulation 
international conference logic programming pages 
mit press 

analysis hybrid systems clp 
proceedings nd conference principles practice constraint programming cp volume lecture notes computer science pages 
xsb 
xsb logic programming system 
available www cs sunysb edu 
yi pettersson daniels 
automatic verification real time communicating systems 
editors proc 
th int 
conf 
formal description techniques pages 
north holland 
yovine 
kronos verification tool real time systems 
international journal software tools technology transfer october 
