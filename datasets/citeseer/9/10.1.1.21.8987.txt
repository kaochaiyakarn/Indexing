workflow system active databases johann eder herbert harald institut fur informatik universitat klagenfurt 
klagenfurt austria mail feder herb ifi uni ac architecture workflow system active databases 
business processes defined easy graphical workflow description language 
process descriptions written language compiled rules executed system active database 
workflow system take full advantage capabilities database system reliability recovery concurrency control transactions authorization 
describe general architecture system implementation prototype discuss advantages approach building applying workflow machines 
keywords workflow management active database trigger dynamic modeling aim workflow systems support business processes 
perspective business process consists sequence tasks 
process specifies ffl tasks performed ffl sequence probably depending decisions part process ffl ffl constraints time quality business processes businesses industries administration 
tasks performed automatically humans interaction humans information technology 
traditionally business processes mainly managed forms communication media 
traditional supports business processes limited way 
restricted standard processes conceived inflexible 
current economic changes lean management just time production computer integrated manufacturing require enterprises administrations highly reactive external internal events participate tightly integrated processes able flexibly adjust processes 
advantages applying workflow systems business processes comprise ffl specification application workflow systems leads better specification business processes regular standard processes special adhoc processes 
technical matter experience shows organizational analysis design needed employ workflow systems increases quality business processes 
ffl documentation application workflow systems leads directly exact documentation business processes 
noted process documentation inherent necessary feature quality management 
integrated documentation yields better traceability processes built status accounting improved responsiveness 
ffl turn primary goal employing workflow systems reduce turn times improve reactiveness 
ffl flexibility comparison traditional software solutions workflow systems easier adapt 
allow dynamic flexible redesign business processes adapt business needs 
furthermore standard cases processes nonstandard ones dealt range system 
ffl integration workflow systems act glue different allowing integration legacy systems new business processes 
aim automation business processes called workflows 
requires step storage documents handled agents database electronic forwarding documents agent 
conventional way tools text processors spreadsheets databases electronic mail 
tools knowledge responsibility process remains agents process documents decide successor documents delivered 
automation task requires model schema process automatic delivery mechanism documents process information 
mechanism automatic invocation programs call items workflow machine 
workflow machine data event driven uses process information decide delivery document finished agent invocation automatic agents 
years systems automating business processes studied area office automation office information systems hea ml ektw ms cb lcs term workflow coined types systems interest systems exploded 
workflow management systems quite different capabilities market today went marked past years 
commercial technological reasons rush 
commercial reasons stimulating demand workflow management systems outlined 
technological reasons seen high availability fast communication infrastructures client server solutions powerful client workstation need integrate legacy information systems 
main contribution approach usage active databases implement workflow machine 
active databases suited applications inherently data driven event driven field active databases refer day cha 
systems extend conventional passive databases production rules 
allow specification actions executed automatically certain events occur certain conditions satisfied 
specification event condition actions done declaratively called eca rules 
database access user application program insert update delete select seen event trigger application rule 
rule triggered conditions rule evaluated 
satisfied actions rule applied 
conditions descriptions database states actions operations modify database start external procedures 
syntax sql ia basic structure rule create trigger name table event condition action create trigger rule defined reacts changes table table 
event triggers rule specified conditions sql query follow keyword 
actions database actions formulated sql 
description processes terms triggers low level programs hard read debug 
describe workflows graphical high level language designed specifically purpose translate specifications workflows triggers active database system 
advantage independence descriptions specific product trigger language 
advantages active databases base technology implementing workflow systems 
ffl dynamic information dynamic status processes documents mapped database maintained database system 
capabilities database systems safety authorizations important recovery immediately available 
particular case system crashes recovery mechanism database recovers dynamic state processes 
ffl workflow processes provide high degree concurrent execution decrease turn times 
transaction mechanism permits increase concurrency safe way 
concurrency control system database directly necessary reimplement additional workflow machine 
ffl active databases employed database blackboard workflow scheduler workflow processes workflow machine 
particular scheduler agents longer poll database preconditions process fulfilled creating unnecessary high workload reducing responsiveness 
previous shown central scheduler advantages sending polling strategies 
section introduce language designed specifying processes section translation process workflow description rules active database section system architecture prototype implementation described 
workflow description language main design criteria easy user design simple workflows flexibility describing wide variety business processes direct compilation executable workflow 
note describes communication tasks data flow control structure tasks internal structure task modifications task performs 
basic modelling concepts users roles forms processes consisting tasks flows 
brief description concepts user describes agent perform tasks data manipulation role defines set users common properties clerk members organizational unit form data container holding information flows different agents 
forms representing manipulation information process describes structure complex distributed job tasks flows composed task defines elementary activity done agent flow defines transmission information form agents workflow aggregation processes submit application approval hd approval dean suggestion confirmation request money paying system applicant hd dean pers 
dept applicant applicant process diagram business trip concepts modelling language expressed comprehensive process diagram 
description graphical notation process diagram specifies structure specific process involving tasks data flows users respectively roles performing tasks 
fig 
shows diagram process application business trip 
process requires interaction different persons departments 
applicant plans trip needs permission head department dean 
trip gets money personal department 
main elements graphic representation tasks flows task elementary activity done person computer program 
exactly happens task executed focus description typically task changes contents forms 
task represented rectangle 
inside rectangle name task agent user role performing task written name agent enclosed brackets 
task processed automatically pseudo user system specified 
allows definition arbitrary programs manipulation data integration application programs workflow 
useful define user dynamically send task content field form 
case write dynamic user field 
possible specify task timeout 
means specified duration timeout signalled 
task agent input flows output flows flow connects tasks denoted arrow 
considering task group flows input flows output flows 
input flows incoming flows task delivering necessary forms task 
output flows specify outgoing forms completion task 
delay flow defined similar tasks 
form transmitted specified delay 
flow form task agent task agent usually task input output flow 
introduce concepts specifying constraints input output side task 
input side define preconditions fulfilled activating task 
possible preconditions precondition means task activated input forms arrives 
boolean expression optional predicate define explicitly valid combinations input forms means forms available activating task predicate synchronizing forms name name means forms available name 
synchronization point form sent successor task parallel manipulation 
parallel processing synchronization point passed parallel tasks finished 

output side completing task output flow transports forms specified successor task optional condition valid 
consider special concepts disjunction actual form sent task task depending condition specified flows 
concept model conditional flows 
form sent task task parallel manipulation counterpart synchronization point introduced paragraph 
modelling parallel manipulation form splitting synchronization point defined 
note concept dynamic users powerful example mail modelled user write field form agent task read 
process diagram mail task flow starting task 
extensions graphical notation process diagrams illustrative showing going additional information expressed compilation description executable workflow 
example types fields forms specified 

general information workflow associated users roles process diagram just shows participating users roles 
addition define users participating workflow association roles users 
structure involved forms process diagram just shows flow forms defining structure form 
form consists fields having type 
allow atomic types string number boolean character type table collection tuples atomic types external files 
appearance form user interface defined 

additional information tasks postconditions explicitly define postconditions enforce valid state 
task successful completed postconditions fulfilled 
procedure procedure procedure specified execution activating completing task respectively 
procedures post condition optional 
selection criterion specifying role task performer requires definition selection criterion 
criterion assignment task concrete user execution 
possible criteria choose user minimal workload choose user randomly access structure possible specify fields form task read change 
defined exact syntax preconditions postconditions procedures specified 
left unspecified depends concrete implementation case data manipulation language database management system 
section describe graphical design tool facilitating specification workflows 
execution model process description defines conditions form transported task successor task 
done task specified 
form manipulation task finished workflow system executes steps 
optional procedure task processed 

postconditions task evaluated 
postconditions fulfilled forms manipulated task marked processed task finished case task gets error message 

output flow task checked flow condition met form sent successor task gets status pending 

preconditions successor task evaluated 
preconditions task met task ready 

task ready step assignment user task specified agent task role 
selection criterion evaluated concrete user assigned task 

optional procedure started 

user interface user assigned successor task gets signal task started 
translating workflow description rules section describe principles implementation workflow system active databases 
description process stored rules tables database 
structure content forms information users roles maintained database tables 
additional fields needed administrative dynamic information holder form task currently access status pending active 
rules automatically generated declarative descriptions tasks flows compiler 
active database management system workflow server functionality described process specification 
mainly rules react changes status fields forms 
example task finished changes status processed forms active processed 
event fires rule runs post procedure changes status forms 
way chain rule applications initiated task completed 
analogy steps described description workflow translated groups rules 
flow rule generated called flow rule triggering task completed satisfaction postcondition 
corresponds third step execution model 
rule specifies flow form type form task task form sent condition flow condition met 
create trigger flow step form update status new status finished form type form form task task flow condition update new set task task rule fires changes status field table form condition met new value status finished 
case task field form set successor task 
example rules built fixed templates information process specification filled task task form flow condition 
types rules generated task post task rule rule triggers task finished executes step execution model 
postcondition rule rule tests postconditions task step 
precondition rule rule tests precondition tasks necessary task input flow 
arrival form task rule triggered checks forms necessary execution task available step 
dispatch rule rule exists performer task specified role selection criterion step 
non empty user field task execution triggers rule pre task rule rule applies procedure 
completion rule sends signal client program standard client application program performing task 
want emphasize workflow manager simply consists rules resulting compilation workflow specifications 
necessary features provided database management system 
system architecture evaluate approach implemented prototype workflow manager oracle database management system version provides simple rule system 
hardware platform cluster sun workstations sunos 
system consists components ffl server ffl user interface client ffl workflow design tool compiler ffl monitoring client 
server active database management system rules forms tasks users specified database 
additional code necessary communication components done exclusively database accesses 
user client component interface normal user workflow system fig 
shows appearance screen 
typical process handling similar processing mail user interface notifies reception task 
user selects task gets task description general information sender corresponding process description task list forms 
view edit received forms 
step user see forms fields marked visible editable task description edit fields declared editable 
filling forms user client interface designer interface user rollback modifications form 
task concluded commit results communication server running post procedure checking post condition removing task users active task list 
explicit forms necessary history mechanism server keeps history form 
user view forms handled past 
user send copies forms users ordinary mail 
allows informal communication addition predefined workflows 
workflow designer interface purpose component allow interactive graphic design workflow processes forms 
user interface process designer shown fig 

second part tool compiler translates workflow description rules active database 
maintenance processes workflows done database 
designer previously defined forms tasks 
newly defined process stored database possible users responsible initial task initiate process 
monitoring client important task workflow systems monitoring inspecting forms pending long active task lists different users structure component similar ordinary user interface 
main difference forms currently system visible 
different views forms type forms belonging process viewed 
contents forms edited 
addition monitoring client maintenance tasks installing users 
implementation component simple due availability needed data database 
information tasks location forms workload users retrieved simple sql queries 
proposed new approach development workflow management systems 
workflow description language graphically assisted specification workflow processes 
goals design language easy possible skilled endusers may define workflows ad hoc manner hand scales able processes 
language simple known metaphors business forms support specification workflows graphic workflow designer tool 
language supports specification arbitrary conditions features higher order constructs specification receiver part task scales represent workflows complexity 
important contribution approach show active databases facilitate development workflow management systems application systems 
modern database management system capable storing manipulating kind data quite natural database systems maintain data relevant business processes 
advantages approach summarized follows efficiency approach showed efficient development workflow management system directly features database management system transaction management concurrency control access authorization recovery 
necessary code workflow management system minimized 
approach efficient actual processing workflows trigger concept active databases efficient way schedule tasks transport data tasks launch processes 
reliability relevant dynamic information processes mapped database 
recovery mechanism database management system storing data state information workflow processes reliable way 
case system failures data information processes recovered 
aspect approach user program circumvent workflow manager intensionally accident 
changes data relevant workflow monitored active database workflow manager 
workflow description language allows easy extension workflows 
furthermore changes data monitored workflow manager arbitrary existing application programs workflows changing 
automatically launched workflow manager changes perform data immediately trigger workflow processes 
tight integration workflow manager database system facilitates development workflows integration platform existing isolated applications 
traceability changes relevant data managed monitored workflow system changes automatically documented 
business processes control workflow manager documented traced meeting important requirement quality assurance procedures additional effort 
successfully applied approach developement prototype workflow management system 
active databases proven powerful technology implementing system 
software engineering problems arising programming rules avoided usage higher level language describing business processes 
usage standard commercial database brought benefits stable system available different platforms drawbacks limited trigger mechanism oracle possible triggers changing table initiated trigger application 
triggers reacting temporal events supported 
plan extend system directions 
integrate extended transaction concept allowing long running activities accompanied compensation mechanism handling exceptions cancellations requiring description inverse tasks inverse activities 
characterization formed processes check processes definedness parallel tasks alter attribute reading value requires earlier writing 
port prototype system database management systems object oriented object relational paradigm 
authors werner jurgen michael stark efforts implementing workflow designer interface 
cb ellis 
office talk experimental office information system 
proc 
acm conference office information systems 
cha chakravarthy editor 
data engineering bulletin special issue active databases volume 
december 
day dayal 
active database management systems 
proc 
third international conference data knowledge engineering jerusalem 
ektw eder kappel tjoa wagner 
behaviour design methodology form flow systems 
technical report universitat klagenfurt institut fur informatik 
eder kappel 
evaluation scheduling mechanisms dynamic data model simulation 
prof int 
conference measurement control pages 
ge eder 
active databases cim german 
des adv informations und fur das neue europa pages 
hea heikki eero 
distributed form management 
acm transactions information systems january 
ia iso ansi 
working draft database language sql sql 
digital equipment maynard ma august 
lcs lum shu 
office procedure automation system 
ibm systems journal 
ml martens frederick lochovsky 
oasis programming environment implementing distributed organizational support systems 
bulletin 
ms mccarthy 
workflow transactions inconcert 
data engineering bulletin june 
michel li pascal fares 
ams knowledge approach task representation organization 
bulletin april 
zloof 
office example business language unifies data word processing electronic mail 
ibm systems journal 

