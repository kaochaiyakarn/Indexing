distributed workflow process management johann eder panagos labs research eder acm org research att com today companies driven rate technologies change move global enterprises virtual organizations order stay competitive 
global virtual enterprises business processes consist multiple sub processes may span multiple time zones organizational boundaries legal domains 
current workflow technology provide necessary functionality model enact manage processes due centralized coupled architecture limited process management capabilities 
going efforts address issues involved 
particular event infrastructure supports distribution decoupling time related constructs addressing time aspects process management 

today experience increasing number corporate merges acquisitions strategic alliances 
environment infrastructures employed member companies business processes integrated 
integration task due heterogeneity information communication systems involved fact organizational structure resulting entity may follow traditional strictly hierarchical delegation model 
implies decoupled infrastructure preserves autonomy supports dynamic changes employed 
traditionally advances internet distributed middleware technologies driving factors design workflow systems 
centralized tightly coupled architecture employed proprietary components tools 
today shortcomings identified advances distributed middleware internet standards influencing workflow technology 
areas need addressed order able support dynamic distributed environment characterizes global virtual organizations 
areas hyper process modeling distributed role worklist management interoperability asynchronous decoupled communication better process management tools 
efforts workflow management coalition wfmc omg business object domain task force address shortcoming efforts fully materialized 
addition efforts address parts issues involved 
particular primarily focus selection instantiation enactment business processes 
address issues distributed exception handling address time management issues 
furthermore proposed standards address workflow systems operate coupled mode workflow engines know order communicate jointly execute processes 
contributions position include event workflow infrastructure modeling constructs addressing time aspects process management 
particular discuss functionality event service provide order address distributed decoupled dynamic workflow executions 
addition briefly cover additional components believe part infrastructure supporting global virtual companies commerce service providers 
introduce timing constructs required expressing various time dependencies may exist activities sub processes constitute distributed processes 

workflow standards current state wfmss workflow management coalition wfmc model workflow management system wfms consists engine application agents invoked applications process definition tool administration monitoring tools interoperability component selecting instantiating executing remote processes 
process definition tool visual editor define schema workflow processes specify activities constitute workflow precedence relationships 
schema creating multiple instances process time 
workflow engine various tools communicate workflow database store update workflow relevant data schemas statistical information control information required executing monitoring active process instances 
omg business object domain task force produced workflow specification utilizes events workflow execution 
particular events raised process instances created terminated items created terminated state changes occur 
specified events proposed architecture efficiently handle distributed dynamic workflows 
idl specification address interoperability existing omg event notification services provide necessary high level constructs handling distributed workflows 
example mechanisms grouping event producers order encapsulate events raised particular subworkflow 
addition time management functionality discussed proposal 
existing wfmss maintain audit logs keep track information status various system components changes status workflow processes various statistics past process executions 
information generate events provide real time status reports state system active workflow process instances various statistical measurements average completion time activity belonging particular process schema 
support time management existing wfmss limited process simulation identify process bottlenecks analyze execution duration activities assignment activity deadlines triggering process specific exception handling activities referred escalations deadlines missed run time 

event decoupled workflow infrastructure section outline distributed workflow infrastructure currently working addressing decoupled distributed dynamic business processes 
shows high level architecture having event notification service key component module 
addition assume availability distributed storage component exchanging process specific data workflow specific data 
distributed storage component web technology similar wfms 
particular assume xml workflow specific data 
process specific data xml html 
furthermore assume security mechanism employed ensure authenticated secure access various system components 
distributed ldap directory storing role information process information 
directory provides naming lookup facilities 
event notification service ldap web wfms ldap web wfms ldap web wfms decoupled distributed workflow architecture event notification infrastructure provides decoupled notifications events event suppliers need aware event consumers event consumers need aware event suppliers benefits realized workflow participants workflow engines agents subscribe receive events trigger start workflow activities processes events describe state changes workflow processes interested 
workflow participants dynamically added removed requiring modifications existing architecture workflow administrators subscribe events correspond state changes existing workflow instances monitor lifecycle processes exception handling driven appropriate events 
example subscribing various alarm resource availability capacity events agent availability workload timing exceptions handled 
important feature event notification service supporting distributed workflows ability support multiple event domains 
domains may correspond different organizations departments organizations administrative domains 
functionality required able distinguish various events raised domain maintaining autonomy domain 
goal avoid imposing new naming scheme involved members global virtual organization 
service ready provides support addition uses domain routers connecting event domains hierarchical peer peer topology 
domain routers encapsulating event mappings domains enforce access restrictions regulate flow events domains 
ready clients interact ready admin supplier consumer sessions 
admin sessions creating destroying supplier consumer sessions sessions groups administrative operations 
supplier sessions supply events service suppliers declare kinds events supply 
consumer sessions register specifications describe event patterns actions take matches patterns 
common action notify causes consumer session deliver notification matched event 
notification behavior controlled session properties including quality service properties qos control reliability notification delivery delivery properties control delivery order 
suppliers consumers specifications grouped enabling sharing specifications uniform control qos delivery properties efficient suspend resume operations large number specification 
important feature ready ability support self describing events 
ready event type definition specifies set required optional fields field contains field name type identifier value 
ready types subtypes subtype declarations simply add additional required optional field specifications parent types 
compound type identifiers wf process start convention structure type corresponds type hierarchy 
proposed workflow infrastructure event types registered ldap directory xml describe structure semantics 
event notifications contain process specific data pointers application specific data 
data may correspond results execution particular step workflow specifications regarding steps followed 
addition notifications contain access control rights time live fields 
time live fields important case step workflow needs carried time period 
consequently appropriate agent workflow engine receive notification expiration deadline time exception raised 
event notifications may delivered variety ways email paging entry worklist agents workflow engines choose appropriate medium receiving 
medium selected properties notifications time live event source priority workflow process instance id modified dynamically 

time constraints time constraints crucial designing managing distributed business processes time management part core management functionality provided workflow systems control lifecycle processes 
build time workflow modelers need means represent time related aspects business processes activity durations time constraints activities check feasibility 
run time process managers need pro active mechanisms notified possible time constraint violations 
workflow participants need information tasks assigned manage personal lists 
time constraint violated workflow system able trigger exception handling regain consistent state workflow instance 
business process re engineers need information actual time consumption workflow executions improve business processes 
controllers quality managers need information long activities workflow instance performed 
time constraints belong categories structural explicit 
structural time constraints follow implicitly control dependencies activity durations workflow schema 
arise fact activity start predecessor activities finished 
explicit time constraints derived organizational rules laws commitments 
examples constraints include invitation meeting mailed participants week meeting hardware failure reported service team customer site hours vacant positions announced wednesday month loans usd approved regular meeting board directors applications approved dates regular meeting board directors scheduled 
explicit time constraints temporal dependencies events bindings events certain sets calendar dates 
workflow systems events correspond start activities 
introduce explicit time constraints lower bound constraint distance events greater equal write lbc express lower bound time interval source event destination event upper bound constraint distance events smaller equal write ubc express upper bound time interval source event destination event fixed date constraint express event occur fixed date write fdc fixed date object 
fixed date object abstraction generalizes typically infinite set dates monday 
abstraction provides methods returning valid dates date maximum distance valid dates maximum distance valid dates fixed date objects 
example lower bound constraint includes chemical process control reaction may initiated certain time passes start reaction 
upper bound constraints common requirement final patent filing done certain time period preliminary filing time limits responses business letters 
developed techniques addressing constraints process build instantiation times pre emptive actions run time potential time exceptions may materialize 
currently process extending techniques check satisfiability constraints annotating workflow graph time information cmp pert techniques 
preliminary checks performed process build instantiation particularly interested run time techniques monitor event infrastructure execution progress changes state systems agent availability enforce specified time constraints 

position approach management workflow processes distributed environment 
core approach event notification service provides efficient asynchronous decoupled notification events 
main goals provide infrastructure supports dynamic workflows addition provide timing constructs time management facilitated environment 
currently introduced timing constructs expressing explicit time constraints developing techniques testing satisfiability constraints process built instantiation times enforcing run time 
acknowledgments michael rabinovich valuable comments helping improve presentation position 

eder liebhart workflow management system 
advances workflow management systems interoperability springer verlag 

eder interoperability world wide workflows 
st word conference integrated design process technology austin texas 

gruber krishnamurthy panagos high level constructs ready event notification system 
th acm sigops european workshop support composing distributed applications sintra portugal 

object management group 
event service specification ftp www omg org pub docs formal pdf 

object management group 
notification service specification ftp www omg org pub docs telecom 
ps 

object management group 
workflow management facility 
request proposal ftp ftp omg org pub docs cf pdf 

panagos rabinovich escalations workflow management systems 
dart workshop rockville maryland 

panagos rabinovich predictive workflow management 
proceedings rd international workshop generation information technologies systems 
ilan israel 

panagos rabinovich reducing escalation related costs wfmss 
nato advanced study institute workflow management systems interoperability istanbul turkey 

philipose operations research practical approach 
tata mcgraw hill new delhi new york 

eder liebhart extending pert workflow management systems 
east european symposium advances database information systems st petersburg russia 

workflow management coalition 
workflow standard interoperability specification www org wfmc standards docs mime pdf 

workflow management coalition 
workflow model www org wfmc standards docs tc pdf 
