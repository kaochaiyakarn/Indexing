human machine collaboration creative design 
establishing machines creative way humans propose computational model allows human machine collaborate creative design social structure similar human human collaboration 
discuss specific architectural problems associated design interactive collaborative intelligent system 
design complex cognitive process involves creative skills artistic intuitions rich knowledge 
furthermore design description exploration mitchell 
experiences designers exploration characterized process driven desire change imperfection pushes limits open world 
creative design meets particular goal time compromises set constraints current technological limitations 
free machines predefined world enrich interactions nature detailed article see allow humans help similar way humans benefit calculation data processing power machines 
propose approach integrates previously built intelligent design systems open distributed architecture 
importantly architecture facilitate human machine collaboration human machine creativity exist contribute creative design process 
open architecture contradicts traditional algorithmic nature software organizes functionalities cognitive level task distribution control level task performance 
propose method software agents design develop architecture depicted 
automatic semi automatic agents collaborate human designers cooperate seamlessly achieve goal 
agents reflections mirrors cognitive inner workings person computational take care detailed design works constraint processing search data visualization 
agents architecture developed case reasoning constraint processing multimedia browsing units 
discuss challenging issues encountered development system contributions human machine provide creative design process mirroring processing roles agents collaborative technique allows contributions humans machines take place creative design process 
supported fonds national suisse de la recherche scientifique laboratoire intelligence artificielle institut de swiss federal institute technology epfl mt lausanne switzerland pu epfl ch epfl ch pu ecai 
th european conference artificial intelligence edited wahlster published john wiley sons pearl pu denis system contains components help humans perform creative idea generation techniques brainstorming focus problem performing multicriteria optimization decision making multiple objectives 
task known difficult finding solutions problem considered typical creative process 
illustrate examples treated system descriptions implementation issues 
human cognitive prosthesis role agents humans live stimulating dynamic environment allows creative productive 
limitations humans especially terms cognitive mental power 
instance currently known short term memory conceptual chunks hold 
trouble visualizing set vectors dimensions doing higher dimensions 
fast growing technology computer industry accustomed machines cognitive computational prostheses 
rely power help accomplish tasks 
hard write letter typing word processor traditional ink allow copy paste easily 
spelling checker provided piece 
helping humans perform word processing may trivial task helping solve creative design problems 
consider number issues ergonomics system architecture social issue human machine collaborators contributors 
main approach idea software agents interface human machine 
sociologists maintain interaction human machine mainly social 
furthermore brought human agents superior metaphors object oriented programming 
commonsense tells easier tell agent saw today subway coming program named inspiration lisp 
designing system theories models main domains human computer interaction ergonomics software design artificial intelligence 
basic sketch architecture system working area provided designers treat various aspects design problem 
agents appear caricatures working area consist mainly types reflective computational agents 
reflective agents appear row fully autonomous main goal serve cognitive map user 
show instance designer just done abbreviates computer aided creativity multi criteria optimization design session brainstorming instantiating design parameters 
computational agents appear rows process design space generate partial complete solutions retrieve design cases help designers visualize set competing solutions propose tradeoffs 
agents semiautomatic sense called request users 
autonomous trust period established user agent 
minimize communications agents order simplify protocols architecture 
interfacing agents roles sections describe framework interfacing agents operate design environment support innovative creative design 
reflective agents restricting focus conceptual design domain defined agents goals manner 
reflective agents serve purposes creative design process 
novices students agents act guide reminds students important processes take conceptual design 
example student performing brainstorming reminded criticize design ideas moment 
goal produce ideas possible 
agent observe behavior person notice speed ideas produced speed average guess person evaluating design ideas doing 
agent signal user stall idea production 
useful reflective agent suggests related contrasting ideas users put theirs 
method called stimulate ideas combining unrelated ones 
believe similar ideas useful 
cases humans perform terms propose ideas proposing related contrasting ideas 
agents accomplish task designers find partners brainstorming sessions 
goal reflective agents serve expert designers 
useful showing designers reasoning path took arrive point design process 
small window corner working area map show instance person done brainstorming evaluation house quality method working multicriteria tradeoff 
person different pattern perform conceptual design longer period time users may observe behavioral pattern 
may choose follow similar patterns purposely change patterns visualization tool 
kind cognitive map useful prompting humans exploring unknown territories 
critical designers slip usual way thinking cognitive maps serve indications current attention memory human notices may choose change 
agents called reflective perform design se help reflect organize give feedback ongoing design process 
doing help designers achieve better design 
computational assistants contrast reflective agents computational agents accomplish tasks human designers 
main role take away computational burdens human provide visualization facilitate tradeoff higher dimensional spaces 
important element design problems address making decisions tradeoffs generation design solutions 
consider mainly cases 
solution space sparse null problems constrained 
humans help system find solutions adding parameters deleting constraints order relax solution space 
process called mutation central design problems creativity humans required order change current representation design problem changing parameters relaxing constraints 
second case solutions potentially cause problems terms generating generating ones 
furthermore designers narrowed dozen hard evaluate competing pareto optimal 
problem called multicriteria optimization better handled machines provide visualization tools order humans analyze perform tradeoffs 
precisely computational agents currently implemented architecture named param def solve pareto visu show case tradeoff main functionalities follows 
param def allows users define represent current design problem terms parameters constraints 
solve agent brought param def area search solution space 
case produces null set meaning problem constrained users asked change participating parameters modify constraints 
solve brought re generate solutions 
problem admits solutions users ask neighborhood solutions ask pareto visu plot pareto space set evaluation criteria see section order visualize 
users propose additional criteria case pareto optimal solutions 
tradeoff offer finalize design solution finding balance objectives 
show case case system targets mainly novices teaching stimulating creative showing expert designers achieve 
scenarios illustrate agents handle problem mutation multicriteria evaluation 
mutation scenario goal design wrist watch electronic agenda 
step users define main parameters product dimensions weight material watch base resolution screen display watch param def shown 
secondly designers provide rough range parameters define constraints govern parameters 
instance largest surface dimension length diameter depending watch square round centimeters 
resolution function times total square centimeters dimension 
resolution currently set greater pixels 
param def formulates problem constraint satisfaction problem continuous discrete design parameters represented variables 
variable range intelligent user interfaces pu possible values called domain 
finding design solution generate instantiation variables chosen values violate constraints 
difficulties arise problem overconstrained case 
resolution constraint violated dimension small 
wrist watch viewing area satisfactory 
moment system suggest designers things 
relax constraints perform mutation 
relaxation constraints chosen list constraints caused null space 
case dimension resolution constraints highlighted param def constraint area signifying conflicts 
designers signaled add modify delete parameters order change current formulation problem 
deciding change parameters designer thought achieve compromise larger display area increasing dimension watch 
came thought umbrella feature 
suggests wrist watch display area furthermore faces folded shown 
gives resolution times pixels 
novice designers perform mutations 
don believe magic intuitions inspirations automated 
case reasoning system help stimulate creativity novices providing creative design scenarios video animations text 
existing system store design cases linear hierarchical linked list structures 
currently plan store creative design show case agent design students ask see illustrate rotational order 
adaptation involved 
main purpose show users types creative possibilities integrate system 
multicriteria evaluation design problem solutions important solutions evaluated set criteria best chosen 
quite solutions competing called pareto optimal 
solutions certain aspects dominate 
creativity required discover new criteria narrow pareto set reevaluate solutions tradeoff 
corresponds seeing things new light life 
scenario best illustrate type problems 
purpose simplicity non design scenario 
techniques mainly applied design domain 
finding apartments arrival graduate school person encounters choices 
criteria noise level size apartment maps solutions criteria graph shown 
solutions pareto optimal furthermore equal criteria 
situations decision maker lacks motivation take solution 
exploration agent brought fifth solution apartment street currently dominated solutions shown 
time discovered third criteria evaluate solutions distance public transportation systems 
close subway lines apartment got pushed pareto surface 
user ready tradeoff 
possibilities reason criterion important 
solution strong optimality respect transportation criterion chosen final choice 
believe human computer interaction plays important role multicriteria evaluation 
additional criteria emergent criteria phenomenon tomlin suggested users design exploration 
machines stimulate human criteria emergence showing design cases simply providing multimedia browser show photo sketch artifact 
machines provide visualization capabilities criteria space 
solutions mapped dimensional space shown 
pareto surface constructed illustrate dominating solutions 
dominated solutions thrown users try add additional criteria climb pareto surface 
furthermore node selected mouse control viewing area selected solution compared solutions tradeoff 
algorithms solve agent uses efficient consistency constraint satisfaction algorithms prone search space 
constrained problems method quickly indicate design parameters constraints restricted ones 
search space null solve uses simple backtracking algorithm find solutions 
looks neighborhood similar solutions 
solutions compared pareto space set criteria users 
users add new criteria perform tradeoffs select solution 
selecting solution user ask solve change value assignment explicitly keep rest assignments 
case solve uses minimum conflict repair algorithm satisfy user request attempting variable assignments 
main method contrast implementation algorithm guide search solution way pareto optimality heuristically guide successful search path 
fact heuristic rule applied uniformly partial solutions prohibits discovery unusual partial solutions unpromising 
approach hand allows designers see kinds solutions compare set dynamically determined criteria 
users dissatisfied current solutions abandon neighborhoods opt 
allow designers shoot dark process discovering creative designs kind serendipity part discovery 
design engaging interface agents hypotheses established humans computers meet screen benefit strengths creative design process 
claim engaging interface agents stimulate designers creativity increase output 
addressing architectural technical issues system discuss efforts required design system interface 
domains evaluation measured analytically notion expressing complexity algorithms interface design hard evaluate scientific scales 
fortunately rich body theories guidelines mainly hci human computer interaction design implement interfaces 
intelligent user interfaces pu reviewing field discuss principles adopted design 
agents achieves goals design current architecture 
stated earlier interaction machine human basically social 
agents appeal designers characters designers familiarize quickly usage 
second help designers classify knowledge rules need remember manageable set chunks 
agent architecture distributed facilitates computation various design tasks non algorithmic structure 
designer forced brainstorming followed parameter definition vise versa 
free tool fits current state mind 
architecture evolves agents added functionality extensive 
works intelligent agents employ learning methods implement agents observe users behavior 
period time called watching shoulder agents automatically perform tasks users 
approach suited domains electronic mail sorting especially users subscribe interest groups receive enormous amount mail originator 
norman points fully autonomous agents overwhelming annoying users 
studies point early humans completely trust machines 
know little bit machines solve certain task launch freely 
true especially user experience program 
agents reflective ones self imposing 
called action user tedious invocation procedure pointing agent pulling menu selecting function 
prohibits users invoking hasty basis 
words really want call agent available 
measure establish trust users machines described maes simple mechanism associating key bindings invocation agents 
humans known tasks typing 
executing task subconscious require cognitive load 
building agents automatically establish trust user users capture trust task 
summary main hypothesis interaction human machine important role computer supported design especially creativity required 
proposed open architecture design viewed algorithmic activity collaboration user set software agents 
role creativity drawing inspirations nature falls mainly human number computational visualization tasks provided machine 
architecture limited closed world assumption artificial intelligence systems 
evolves human experiences evolve 
furthermore computational modules available added system support design activities 
book great job outlining explaining innovative design role computers 
inspiration came 
users factor go deeper computer human interaction issues 
key step design process visualized 
users agents collaborate time 
humanly automatic 
evolves creates new design cases tends debug designs existing cases 
handle agents protocol human agents takes similar line philosophy 
maximize natural interaction human machine minimize guess 
george technical support professors clavel popovic encouragement insights design methodology 
faltings giving useful comments multicriteria optimization tradeoff problem 
allan baddeley 
human memory theory practice 
lawrence erlbaum associates 
margaret boden editor 
creative mind 
basic books 
eugene freuder alan mackworth guest editors 
special volume constraint reasoning 
artificial intelligence 
patrick hayes kenneth ford 
turing test considered harmful 
proceedingsof conferenceon artificial intelligence august 
alan mackworth 
consistency networks relations 
artificial intelligence 
pattie maes 
agents reduce information overload 
acm july 
minton johnston philips laird 
minimizing conflicts heuristic repair method constraint satisfaction scheduling problems 
artificial intelligence 
william mitchell 
new agenda computeraided design electronic design studio 
mitchell eds 
purcell editors electronic design studio 
mit press cambridge mass 
clifford nass jonathan steuer ellen tauber 
computers social actors 
proceedings chi acm april 

exploration innovation design 
springer verlag new york 
donald norman 
people interact agents 
acm july 
pareto 
cours 
technical report rouge lausanne switzerland 
chris 
efficient design systems case techniques 
technical report university connecticut 
master thesis 
pu pearl denis 
human machine collaboration creative design 
technical report ecole polytechnique de lausanne switzerland 
antony radford john gero 
design optimization architecture building construction 
van nostrand reinhold new york 
doug 
intelligent agent 
acm july 
christopher riesbeck roger schank 
inside case reasoning 
lawrence erlbaum 
thomas moran stuart card allen newell 
psychology human computer interaction 
lawrence erlbaum associates 
tomlin 
communication 
technical report harvard university 
linda wills janet kolodner creative case design systems 
proceedings national conference artificial intelligence august 
intelligent user interfaces pu 
software agents appeared 
definition design problem 
agenda watch 
nodes correspond street apartment located 

larger nodes located pareto surface 

visualization solutions visualisation pareto surface intelligent user interfaces pu 
