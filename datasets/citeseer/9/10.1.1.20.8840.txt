accurate instruction level energy consumption model embedded risc processors lee school computer science engineering seoul national university seoul korea archi ac kr andreas dept information technology uppsala university se uppsala sweden docs uu se sang min school computer science engineering seoul national university seoul korea ac kr energy consumption software increasingly important issue designing mobile embedded systems batteries main power source 
consequence number promising techniques proposed optimize software reduced energy consumption 
low power software techniques require energy consumption model estimate predict energy consumed software 
propose technique derive accurate energy consumption model instruction level combining empirical method statistical analysis technique 
result proposed approach model equation characterizes energy behavior software properties instructions 
experimental results show model equation accurately estimate energy consumption random instruction sequences average error 
keywords low power systems instruction level energy model regression analysis 
energy consumption software emerged important metric system performance increas supported part ministry education bk program ministry science technology national research laboratory program 
performed advanced software technology www docs uu se competence center supported swedish national board industrial technical development www se 
ing requirement low energy computing 
especially embedded systems high demand optimization techniques enable energy reduction software increasing number applications powered batteries 
studies focusing developing techniques reduce energy consumption various levels including program optimization low power 
low power program optimization techniques require detailed cost model represented terms energy consumption direct decisions program transformations 
propose technique build accurate energy consumption model instruction level estimating energy consumption sequence instructions 
energy consumption model applicable program optimization framework properties 
accuracy model able estimate energy consumption accurately 
simplicity model constructed simple properties visible instruction level easily integrated program optimizer 
accountability model able identify signi cance factor ects energy consumption direct optimization 
retargetability model building framework general applied wide range di erent target processors 
construct energy consumption model rst assume model equation linear combination factors possibly ect energy behavior instructions 
derive unknown parameters equation black box stimulus response approach apply set test programs stimulus observe energy consumption measured real hardware response purpose statistical analysis technique called linear regression analysis model equation actual energy behavior target processor 
proposed approach gives detailed instruction level characterization energy behavior processors enabling simple accurate estimation software energy consumption 
expect information provide base aggressive program optimization low power increasingly important embedded systems design 
furthermore availability model essential developing systematic optimization framework considers di erent optimization criteria time code size execution time energy consumption 
major contributions follows 
technique provides systematic approach estimating software energy consumption simple linear model equation 
second resulting energy model identify important factors signi cance energy consumption instructions 
proposed model building approach generally applicable wide variety processors empirical method require information processor implementation 
focus estimating energy consumed inside core risc style microprocessor characterizing instructions executed processor 
believe similar approach applied model system level energy behavior account various components memory devices peripherals 
rest organized follows 
section discusses previous works related research 
section describe detail proposed approach deriving instruction level energy consumption model 
experimental setup results section 
section concludes outlining possible extensions 

related attempts construct energy consumption models software 
previous approaches functional simulation processor direct measurement energy 
simulation methods energy consumed software estimated calculating energy consumption various components target processor simulations di erent levels 
example mehta propose power pro ler records information previous current states functional units correlated switching capacitance 
extension approach chen technique estimate cycle level energy consumption data hierarchical decomposition architectural features target processor 
generalized form rt register transfer level energy simulator called simplepower proposed :10.1.1.11.7261
approaches concentrated modeling target architecture analyze ect sequential execution di erent instructions gate level analysis tool 
approach inter instruction energy ect modeled additional energy consumption observed instruction executed nop instruction 
common drawback simulation energy models provide mechanism calculate energy consumption software directly instruction sequence 
hand measurement approaches energy consumption software characterized examining data obtained real hardware 
advantage measurement approaches resulting energy model close actual energy behavior processor data acquired hardware 
tiwari describe technique model energy cost software average current drawn target processor 
approach energy model power cost table records unique base cost instruction inter instruction effects 
base cost instruction de ned average current drawn instruction executed repeatedly tight loop multiplied number cycles taken instance instruction 
hand inter instruction ect de ned additional power cost incurred executing di erent instructions sequentially 
recording inter instruction ect signi cantly increases size power cost table requires space number instructions instruction set 
rectify problem technique group instructions common classes proposed 
techniques provide simple framework software energy estimation summarizing energy consumption instructions form table 
relying average current largely ignore detailed impacts various factors ect energy consumption instruction level 
techniques provide information energy variation due various aspects instructions instruction fetch address operand speci ers 
contrast approaches average current russell software energy estimation model instantaneous power measured digitizing oscilloscope 
technique derive ne grained energy consumption proposed chang measure cycle level energy consumption measurement hardware developed research 
analyze impact various properties instructions energy consumption measurement 
approach shown energy consumption software dependent properties instructions register numbers immediate operands instruction level energy characterization software give framework estimate energy consumption sequence instructions 
explain complex energy behavior processors statistical analysis techniques employed energy estimation software 
propose energy estimation optimization technique vliw processors incorporating statistical method analyzing functional unit usage patterns instructions 
approach tries predict energy consumption software regression analysis 
prediction minimize energy consumption respect average current drawn 
studies sami techniques estimate software energy consumption combination functional decomposition statistical analysis technique :10.1.1.11.7261
approaches focused modeling energy consumption terms usage various functional units mainly targeted regression analysis fitted model equation black box target processor measurement model fitting model application stimulus test programs response measured energy consumption model variable extraction hypothetical model equation statistical results sequence instructions energy consumption estimation approach deriving energy consumption model 
vliw processors 
technique distinguished approaches concentrate properties instructions functional units inside processor 
aim deriving accurate energy consumption model instruction level combining empirical approach statistical analysis technique 
empirical method eliminate need detailed information target processor implementation 
time empirical approach provides retargetability model building framework dependent speci target processor 
statistical analysis technique mathematically summarize relationship number factors interact complex manner contributing software energy consumption 

instruction level energy model energy consumed microprocessor dependent internal organization implementation processor 
possible approach estimating energy consumption software perform circuit level simulation target processor program input simulation 
simulation energy estimation practical program optimization reduced energy consumption number reasons 
example evaluating impact slight change instruction sequence requires rerunning simulation process substantial complexity 
simulation method inapplicable program optimization requires frequent cost evaluation number optimization candidates 
circuit level implementation data shelf microprocessors generally available simulation approach dicult apply 
obtain energy consumption model incorporated program optimization framework propose technique derive accurate energy consumption model instruction level 
proposed energy model estimate energy cost software properties instructions 
shows approach deriving instruction level energy consumption model 
relying information processor implementation empirical approach model actual energy consumption data measured real hardware 
regard implementation target processor black box internals known assume accessible information responses black box set stimuli 
words measure energy consumption target processor executes set test programs try derive energy model reasoning relationship instruction sequence measured energy 
empirical method signi cantly simpli es process model construction require modeling complex internal circuits target processor 
furthermore proposed method enhances retargetability approach technique dependent implementation speci processor 
course measurement procedure repeated energy consumption model retargeted di erent processor 
model building framework retargetable sense technique derive model equation applied di erent processors major modi cation 
note approach con ned measurement construction energy model 
technique derive energy model data obtained energy simulators give information cycle level energy consumption simulator target processor available 
case proposed technique signi cantly reduces time complexity energy estimation model derived estimate energy consumption need running simulation instruction sequence investigation 
technique provide information various factors ect energy consumption instructions form model equation impossible rely entirely simulation estimating software energy consumption 
derive energy model summarizing data gathered measurement simulation statistical analysis technique called regression analysis 
assume hypothetical model equation unknown parameters function model variables de ned terms various aspects instructions 
model variables factors may ect energy consumption instructions values extracted test programs examining instruction sequence 
regression analysis determines parameters model equation investigating combinations measured energy values model variables 
procedure called model tting result tted model equation explains relationship model variables energy behavior target processor 
tted model equation estimate energy consumption instruction sequence 
addition regression analysis produce set statistical results re ning model measuring quality tted model equation 
section describe hypothetical model equation constructed instruction level introducing set energy formulas model variables 
section explain derive parameters model equation linear regression analysis 

instructions affecting energy consumed clock cycle id ex instruction fetch execute instruction decode pipeline stages id ex example pipelined execution scenario 
energy model equation general energy consumption cmos processor dependent switching activity clock cycle current charge discharge state circuit 
speci cally energy consumed clock cycle proportional number bit ips internal signals clock cycle number logical number alternatively signals 
internal signals processor controlled instruction execution conjecture energy consumption modeled combination properties visible instruction level 
motivates de ne model equation terms currently executing instruction previously executed instruction various stages execution pipeline 
generally pipelined processor energy consumed clock cycle determined instructions currently occupy pipeline stages previously occupied stages 
assuming energy consumed clock cycle sum energy consumed pipeline stages calculate energy consumption clock cycle simple equation 
set pipeline stages instruction occupying pipeline stage clock cycle energy consumed clock cycle es es denotes energy consumed pipeline stage instruction executed stage preceded instruction example consider pipelined execution scenario shown stages instruction fetch id instruction decode ex execute 
assume instruction sequence executed sequentially 
energy consumed clock cycle calculated eif eid model energy consumed pipeline stage instruction executed instruction denoted es properties instructions speci cally de ne set model variables terms binary representation factors assumed uence energy consumption 
examples model variables include instruction fetch address ect energy consumption address bus instruction fetched instruction bit encoding ect energy consumption instruction register pipeline latches operand speci ers register numbers immediates ect energy consumption instruction decoding execution data values ect energy consumption arithmetic logical execution units 
assume identi ed model variables signi cance energy consumption 
set model variables es es vx vy vx vy denote model variable de ned instructions respectively 
term gives base cost instruction pipeline stage corresponds portion energy consumed instruction stage regardless previous state pipeline 
hand function vx vy gives variation energy consumption model variable de ned instructions observation energy consumption proportional number bit ips number logical internal signals de ne energy variation function vx vy 
vx vy 
vx denotes hamming distance binary numbers denotes weight number binary number equation unknown coecients characterize energy consumption instruction pipeline stage regard model variable note linear equation system energy consumption clock cycle number unknown parameters 
call parameters characterizing parameters describe characteristics energy behavior target processor 
step proposed approach best estimates unknown parameters determined linear regression analysis 
possible number characterizing parameters large depending number pipeline stages number di erent instructions 
set characterizing parameters possibly includes insigni cant irrelevant energy consumption possibly degrade model accuracy 
rectify problem regression analysis uses techniques statistical model testing addition deriving values characterizing parameters 
identify parameters little signi cance eliminate reduce number characterizing parameters enhance model accuracy time 
second merge characterizing parameters instructions group instructions behavior di erent instructions group similar respect model variables 
techniques process deriving values characterizing parameters 
regression analysis energy model regression analysis statistical method investigating functional relationships variables 
relationship expressed form equation model connecting response variable predictor variables 
denote response variable set predictor variables xp true relationship xp approximated regression model xp assumed error representing discrepancy approximation 
case deriving energy model response corresponds energy measured cycle predictors hamming distances weights model variables 
relationship response set predictors assumed linear method constructing regression model called linear regression analysis 
linear regression model expressed equation 
constants called regression coe cients 
best estimates regression coecients ones lead model equation best explains relationship response predictors determined investigating number sample combinations response predictors 
common method nding regression coecients called square method analysis 
case nding best estimates regression coe cients corresponds determining values characterizing parameters model equation 
compared applications statistical analysis case lends bene able freely set values predictor variables carefully written test programs 
means determine subset characterizing parameters independently values parameters analyses parameters determined 
example change instruction fetch address xing factors operand speci ers data values repeatedly executing instructions 
determine impact register numbers example executing instructions di erent register numbers factors xed 
calculate value response variable subtracting variation due changes fetch address previously analyzed measured energy value 
similarly set previously determined values introduce set indicator dummy variables take boolean value express base cost instruction form linear combination 
characterizing parameters analyze parameters separately 
stepwise derivation characterizing parameters enhances accuracy model reducing possible errors incurred regression keeps complexity regression analysis low decomposing problem subproblems 
addition deriving values characterizing parameters identify remove predictors little signi cance energy consumption statistical measures regression analysis 
done testing null hypothesis alternative regression coecient best model selected model testing technique called test 
intuitively assess signi cance predictor compare model speci characterizing parameter set zero model parameter set value derived regression analysis 
removing predictors insigni cant irrelevant energy consumption increases accuracy resulting model equation maintains model complexity reasonable level 
addition reduce complexity model equation merging speci characterizing parameters instructions group selected instructions 
done testing null hypothesis 
alternative 
combination selected regression coecients model best explains measured energy values selected model testing technique called test 
intuitively check group instructions merged respect speci characterizing parameter compare model characterizing parameters di erent instructions model di erent characterizing parameters di erent instructions 
example naturally assume impacts fetch address register numbers identical instructions impact data values di erent instruction 
target processor assumption validated technique explained regression analysis phase model derivation 
tted model equation regression analysis produces statistical measures assess validity model 
common measure quality accuracy resulting model equation coecient determination denoted 
intuitively interpreted proportion total variability response variable accounted set predictor variables 
rest value evaluating quality energy model equation 

experimental results demonstrate validity approach deriving energy consumption model instruction level performed set experiments 
section apply proposed technique derive model equation target processor arm cycle accurate high precision measurement hardware described 
experimental settings example instruction sequence model derivation model variables investigation instruction fetch address register certain fixed value 
base costs instructions register certain fixed value sub eor add 
register numbers registers fixed value 
data values registers random known values 
legend analysis steps stepwise derivation characterizing parameters 
section estimate energy consumption randomly generated program model equation derived analysis 
energy model arm processor core applied proposed technique energy model construction arm processor core 
target processor stage pipeline similar shown 
derived energy consumption model arm data processing instructions instruction formats 
op rd rn rm op rd rn imm op speci es opcode instruction rd rn rm speci es destination register rst source operand register second source operand register respectively 
second source operand register immediate value designated second operand imm eld speci ed 
de ned set model variables instruction level terms instruction fetch address register numbers immediate operand data values 
measured energy consumption executing set test programs target processor derive values various characterizing parameters model equation 
previously mentioned section decompose problem subproblems derive di erent characterizing parameters number steps sake model accuracy analysis simplicity 
illustrates problem decomposition sample instruction sequences similar ones derivation characterizing parameters 
rst set test programs executed instructions di erent program locations operand speci ers data values derive parameters hamming distance weight instruction fetch address denoted fa 
regression analysis derived fa pj fa pj merged instructions consideration 
case coecient determination means model variable fa capable explaining energy variation due changes instruction fetch address 
results indicate table base costs di erent instructions pipeline stage instruction id ex add sub eor op units pj energy consumption proportional number bit switches fetch address negatively proportional number fetch address 
information available apply program optimization low energy code replacement frequently executed instructions placed program addresses small hamming distances large number 
derive base costs various instructions pipeline stages executed set test programs 
test program consists instruction mix di erent instructions operand speci ers data values instructions 
eliminate ect changes instruction fetch address calculated energy variation due fetch address parameter values derived previous analysis step subtracted measured energy value 
table presents results regression analysis sample instructions 
analyzed impact opcode energy consumption results show energy proportional hamming distance opcode shown row table 
results indicate energy consumed stage substantially di erent instruction shown second column table 
stages id ex energy consumption di erent instructions substantially diverse 
example sub instruction consumes energy id ex stages instructions eor instruction consumes energy id stage 
large difference base costs di erent instructions tendency increase energy consumption due space limitation results instructions derived parameters data processing instructions arm instruction set 
table parameters register numbers pipeline stage variable type id ex rd rn rm units pj increase hamming distance opcode indicates energy consumption software reduced applying instruction selection instruction scheduling techniques tailored low energy 
speci cally energy consumption signi cantly reduced selecting instructions low base costs choices possible execution semantics 
careful scheduling instructions save substantial portion energy consumed processor core reducing number bit switches opcodes adjacent instructions 
example reducing opcode bit ip average save approximately pj energy instruction sum savings stages amounts total energy consumed processor core 
small fraction energy consumed processor core energy savings expected consider di erent parts system instruction cache main memory interconnect bus 
derive characterizing parameters register numbers executed set test programs instructions executed changes register numbers rd rn rm 
eliminate ects instruction fetch addresses calculated variation due fetch address subtracted measurement data 
table summarizes results regression analysis 
successfully derived parameter values hamming distance weight register number pipeline stages merged instructions consideration 
results indicate energy variation due register numbers id stage induced large coecient values fourth column table 
especially signi cant factors hamming distances rd rm largest coecient values 
information program optimization techniques register assignment register relabeling low energy 
speci cally reduce bit ip register numbers average resulting energy savings approximately pj instruction corresponds total energy 
expected energy savings techniques reducing bit switches register numbers larger take account memory subsystem register numbers ect energy consumption various levels memory hierarchy interconnect bus 
table parameters data values pipeline stage instruction variable type id ex src add src dest src sub src dest src src dest src eor src dest units pj similarly executed set test programs random data values derive coecients data values 
table shows results regression analysis sample instructions src src denote rst second source operands respectively dest denotes destination operand 
results show variables de ned terms data values signi cance weights hamming distances 
phenomenon presumably due precharge evaluation scheme dynamic cmos implementation target processor 
note weight destination operand id stage omitted table computation result generated ex stage 
note results previous analysis steps di erent instructions di erent parameter values model variables de ned terms data values 
due fact di erent instructions behave di erently respect data values operation speci ed instructions 
conjecture di erence energy behavior due di erent ways utilizing functional units di erent instructions 
likewise performed regression analysis impacts immediate operand turned signi cance hamming distance id stages 
coecient values derived imm pj imm id pj respectively value 
program energy estimation show usefulness energy consumption model estimating energy consumed instruction sequence implemented energy consumption analyzer 
analyzer takes assembly source program binary program input estimates energy consumption instruction sequence clock cycle 
analyzer rst extracts values predictor variables examining instruction sequence 
calculates energy consumption clock cycle model deriving values predictor variables de ned terms data values assumed initial values registers known priori 
clock cycles measurement estimation comparison estimated measured energy 
equation values characterizing parameters previously determined regression analysis 
experiments sample program generated contains random mixture arm data processing instructions operand speci ers register numbers immediates chosen random 
data values randomly generated prepared sample program prior execution instruction sequence investigation 
compares estimated energy actual energy consumption measured hardware sample instruction sequence executed clock cycles 
results show proposed approach provides accurate energy estimation veri ed fact graph estimated energy closely resembles measured energy 
coecient determination value case means variation measured energy captured estimation equation 
total measured energy consumption clock cycles nj estimated energy nj 
error total energy 
calculated error ratio cycle re measurement average value means error energy estimation model equation average total energy 
maximum error ratio means error 
error comes number sources including 
st st st st st st 
id ex energy consumed clock cycle depends stalled instructions example pipeline stalls 
energy consumption may perfectly linear hamming distances weights model variables 
model missed variables signi cant impacts energy consumption 
quantization error inherent measurement hardware model construction may cause inaccuracies deriving characterizing parameters 

proposed technique deriving accurate energy consumption model instruction level 
proposed approach combines empirical method statistical analysis technique called regression analysis 
result proposed approach deriving energy model form model equation estimate energy consumption instruction sequence properties instructions 
energy consumption model described enables simple accurate method estimating energy consumption instruction level 
availability instruction level energy model provide basis various energy reduction techniques embedded software identifying factors contribute energy consumption indicating signi cance factor 
advantage proposed approach model derivation retargeted wide variety processors require information processor implementation 
words proposed technique derive energy model equation arbitrary processor provided mechanism available obtaining cycle level energy consumption data 
purpose energy simulator measurement hardware similar 
applied proposed method derive energy consumption model arm processor core verify validity approach 
case study shows accurate energy model derived characterization software technique proposed 
results experiments indicate energy model accurately estimate energy consumption instruction sequence 
statistical results show energy variation explained derived model equation 
maximum error ratio prediction average approximately 
currently investigating technique analyzing ect pipeline stalls shown 
gure instructions stalled pipeline stages id respectively instruction executes clock cycle ex stage 
analyze energy consumption case instructions stalled pipeline augment model de ning stall state pipeline stage special case instruction occupying stage 
extension expect able model energy consumption multi cycle instructions multiply instruction execution cycle ex stage dependent data values operates 
addition allow model stalls due pipeline branch instructions pipeline hazards due various reasons data dependency resource con icts 
investigating technique modeling load store instructions 
energy consumed execution memory instructions dependent access hits misses cache need integrate technique analyzing cache behavior 
energy consumption dependent characteristics memory devices checking feasibility incorporating empirical analytical energy consumption model memory devices 

acknowledgments authors jakob hans hansson fruitful comments drafts article giancarlo inspiring discussions analysis methodology 
comments anonymous reviewers improved quality 

additional authors additional authors chang school computer science seoul national university email ac kr 

advanced risc machines arm data sheet august 
:10.1.1.11.7261
instruction level functionality energy estimation model bits microprocessors 
proceedings annual acm ieee design automation conference pages june 

chang pedram 
register allocation binding low power 
proceedings annual acm ieee design automation conference pages june 
chang 
kim lee 
cycle accurate energy consumption measurement analysis case study arm 
proceedings international symposium low power electronics design pages july 
chatterjee price 
regression analysis example third edition 
john wiley sons 
isbn 
chen irwin 
architectural level power estimator 
proceedings power driven microarchitecture workshop 

arm system architecture 
addison wesley 
isbn 

power minimization derived architectural usage vliw processors 
proceedings annual acm ieee design automation conference pages june 

empirical comparison algorithmic instruction architectural power prediction models high performance embedded dsp processors 
proceedings international symposium low power electronics design 
kandemir vijaykrishnan irwin ye 
uence compiler optimizations system power 
proceedings annual acm ieee design automation conference pages june 
kandemir vijaykrishnan irwin ye 
register relabeling post compilation technique energy reduction 
proceedings workshop compilers operating systems low power october 
thomas schmit nagle 
modeling inter instruction energy ects digital signal processor 
proceedings power driven microarchitecture workshop june 

lee tiwari malik fujita 
power analysis minimization techniques embedded dsp software 
ieee transactions vlsi systems pages march 
mehta owens irwin 
instruction level power pro ling 
proceedings international conference acoustics speech signal processing 
mehta owens irwin chen ghosh 
techniques low energy software 
proceedings international symposium low power electronics design pages august 
russell 
software power estimation optimization high performance bit embedded processors 
proceedings international conference computer design october 
sami 
instruction level power estimation embedded vliw cores 
proceedings international conference hardware software codesign pages may 

su 
tsui despain 
low power architecture design compilation techniques high performance processors 
proceedings ieee compcon pages 
tiwari malik wolfe 
power analysis embedded software rst step software power minimization 
ieee transactions vlsi systems december 
tiwari malik wolfe :10.1.1.11.7261
lee 
instruction level power analysis optimization software 
journal vlsi signal processing august 
conte :10.1.1.11.7261
instruction scheduling low power dissipation high performance microprocessors 
proceedings power driven microarchitecture workshop june 
ye vijaykrishnan kandemir irwin :10.1.1.11.7261
design simplepower cycle accurate energy estimation tool 
proceedings annual acm ieee design automation conference pages june 
