haptic rendering virtual environments basdogan srinivasan jet propulsion laboratory california institute technology pasadena ca basdogan jpl nasa gov laboratory human machine haptics massachusetts institute technology cambridge ma basdogan srini mit edu 
goal haptic rendering enable user touch feel manipulate virtual objects haptic interface 
high fidelity haptic devices ref 
biggs srinivasan chapter possible simulate feel fine surface textures rigid complex shapes dynamic conditions 
starting early nineties significant progress occurred ability model simulate haptic interactions virtual objects real time salisbury srinivasan srinivasan basdogan 
rapid increase number workshops conference sessions community web pages electronic journals haptic displays rendering techniques indicates growing interest exciting new area research call computer haptics 
just computer graphics concerned synthesizing rendering visual images computer haptics art science developing software algorithms synthesize computer generated forces displayed user perception manipulation virtual objects touch 
seen various applications computer haptics areas medicine surgical simulation tele medicine haptic user interfaces blind people rehabilitation patients neurological disorders entertainment painting character animation morphing sculpting mechanical design path planning assembly sequencing scientific visualization geophysical data analysis molecular manipulation 
anticipate applications way devices rendering techniques improve computational power increases 
chapter primarily focus fundamental concepts haptic rendering discussion implementation details 
impossible cite relevant constraints chapter attempts cover major 
current technology mature net force torque feedback tool usage real world tactile feedback actual distribution force fields skin contact real objects restrict techniques concerning 
general concepts discussed chapter include see proceedings phantom users group workshops starting www ai mit edu conferences asme dynamics systems control dsc division starting ieee international conference robotics automation ieee virtual reality conference 
visit haptic community pages www com community index htm haptic mech nwu edu haptics journal www haptics org 
haptic interaction paradigms define nature haptic cursor interaction virtual objects object property display algorithms enable render surface material properties objects behavior repeated haptic interaction paradigm 

principles haptic rendering object shape typically haptic rendering algorithm parts collision detection collision response see 
user manipulates probe haptic device new position orientation haptic probe acquired collisions virtual objects detected collision detection 
collision detected interaction forces computed preprogrammed rules collision response conveyed user haptic device provide representation objects surface details 
haptic loop updates forces khz virtual surfaces feel softer worst surface feels haptic device vibrating includes function calls get position vector position position orientation effector calculate force vector force user defined function calculate forces send force vector force calculate joint torques reflect forces back user position orientation force torque collision detection contact information collision response object database geometry material 
haptic interaction algorithm typically parts collision detection collision response 
haptic loop seen requires update rate khz stable force interactions 
computationally fast collision detection response techniques required accommodate requirement 
describe basic concepts haptic rendering consider simple example haptic rendering frictionless sphere located origin virtual space see 
assume user interact virtual sphere single point point haptic probe known haptic interaction point hip 
real world analogous feeling sphere tip stick 
freely explore space haptic probe haptic device passive reflect force user contact occurs 
virtual sphere finite stiffness hip penetrate sphere contact point 
penetration virtual sphere detected appropriate forces reflected back user computed device active reflect opposing forces hand resist penetration 
easily compute magnitude reaction force assuming proportional depth penetration 
assuming friction direction force surface normal shown 
distance hip hand void calculate force vector force float distance float hip hip hip distance sqrt distance collision check force distance distance force distance distance force distance distance 
haptic rendering sphere virtual environments 
software code right hand side calculates direction magnitude reaction force sphere discussed example 
sphere radius units located origin 
seen example rigid virtual surface modeled elastic element 
opposing force acting user interaction stiffness coefficient depth penetration 
keeping stiffness coefficient low surface perceived soft setting high value interactions unstable causing undesirable vibrations 
depicts changes force profile respect position real virtual walls 
position probe tip sampled digitally certain frequency simulation virtual wall staircase effect observed 
staircase effect leads energy generation see discussions suggested solutions brown ellis 
wall 
force displacement curves touch interactions real virtual walls 
case real wall curve continuous 
see staircase effect simulating touch interactions virtual wall 
due fact haptic device sample position information finite frequency 
difference areas enclosed curves correspond penetrating virtual wall manifestation energy gain 
energy gain leads instabilities stiffness coefficient increased compare energy gains stiffness coefficients 
hand low value stiffness coefficient generates soft virtual wall desirable 
basic recipe haptic rendering virtual objects easy follow rendering complex surfaces volumetric objects requires sophisticated algorithms sphere 
stringent requirement updating forces khz leaves little cpu time computing collisions reflecting forces back user real time interacting complex shaped objects 
addition algorithm rendering sphere considered point interactions interacting objects tip stick real world far hands capable real world 
haptic rendering techniques developed simulate complex touch interactions virtual environments reviewed salisbury srinivasan srinivasan basdogan hollerbach johnson 
existing techniques haptic rendering force display distinguished way probing object modeled point zilles salisbury adachi avila ruspini ho line segment basdogan ho object group points line segments polygons 
type interaction method simulations depends application 
point haptic interactions point haptic device known haptic interface point hip interacts virtual objects 
time user moves generic probe haptic device collision detection algorithm checks see point inside virtual object 
depth indentation calculated distance current hip corresponding surface point known ideal haptic interface point called god object proxy point surface contact point see 
exploring shape surface properties objects ves pointbased methods probably sufficient provide users similar force feedback feel exploring objects real environments tip stick 
point rendering technique zilles salisbury ruspini ho nurbs thompson stewart implicit surfaces salisbury tarr volumetric objects avila successfully rendered 
point methods capable simulating general tool object interactions involve single multiple objects contact tool arbitrary locations tool 
context forces torques displayed user need computed 
ray interactions generic probe haptic device modeled line segment orientation taken account collisions checked finite line objects 
approach enables user touch multiple objects simultaneously 
addition forces torque interactions simulated possible point approaches see 
ray rendering considered approximation long tools intermediate stage progress full interaction cursor objects 
geometric model probing object simplified set connected line segments ray rendering technique faster simulation full object interactions 
example successfully simulated haptic interactions mechanical shaft engine block ho interactions laparoscopic surgical instruments deformable objects basdogan basdogan multiple line segments ray rendering technique 
probing object complex geometry easily modeled set line segments simulation degree freedom dof object object interactions considered 
simulation haptic interactions polyhedra desirable applications computationally expensive point ray interactions see 
single point sufficient simulating force torque interactions virtual objects group points distributed surface probing object shown feasible solution 
example 
simulated touch interactions model teapot mechanical assembly 
force force torque force torque 
existing interaction methods haptic rendering force display distinguished way probing object modeled point line segment object 
irrespective interaction method haptic rendering algorithm include collision detection collision response computations see 
collision detection extensively studied computer graphics lin hubbard gottschalk cohen existing algorithms designed directly haptic devices simulate touch interactions virtual environments 
merely detecting collisions objects simulating haptic interactions 
collision occurs evolves time contact history crucial factors see discussion contact history haptic rendering accurately compute interaction forces reflected user haptic device ho 
hip hip hip 
haptic rendering algorithm point interactions calculate hip rendering cycle 
known god object surface contact point proxy point considered surface point object tool finger contact 
computation point relies contact history 
example ignoring contact history choosing closest point object surface new hip user feel pushed object hip moves point point 
collision detection algorithms developed computer graphics haptics directly concepts developed fast collision detection ported haptics 
example haptic rendering algorithms easily take advantage space partitioning techniques partitioning space encloses object smaller sub spaces advance faster detection contact local search approaches searching neighboring primitives possible new contacts hierarchical data structures constructing hierarchical links primitives object faster access contacted primitive 
addition improvements client server model considered synchronize visual haptic displays achieving faster update rates 
multithreading techniques example calculate forces khz thread updating visual images hz thread ho 
forces computed khz numerical scheme developed extrapolate new forces previously computed ones maintain constant update rate khz stable interaction ellis basdogan 

rendering surface details smooth shapes friction texture quite frequently desirable display object surfaces smooth continuous underlying polyhedral representation employed 
computer graphics example illumination models compute surface color point object foley 
shading algorithms applied shade polygon interpolating light intensities shading surface normals phong shading 
shading algorithms shared edges adjacent polygons invisible provide user display visually smooth surfaces watt watt 
integrate similar approach study haptics convey feel smooth object surfaces srinivasan basdogan ruspini 
force shading technique suggested srinivasan reduce force discontinuities edges polyhedral object feel smoother 
implement force shading polygonal surfaces basdogan pre compute surface normal vertex averaging surface normals neighboring polygons weighted neighboring angles 
real time computations detect collision point divides contacted triangle sub triangles 
surface normal calculated collision point averaging normals vertices contacted polygon weighted areas ai sub triangles haptic simulation surface details friction texture significantly improves realism virtual worlds 
example friction impossible avoid real life virtual surfaces friction feel icy smooth explored haptic device 
similarly surfaces nature covered type texture sensed distinguished quite tactile system srinivasan 
haptic texture combination small scale variations surface geometry frictional characteristics 
displaying detailed geometry textures computationally expensive 
friction texture simulated appropriate perturbations reaction force vector computed nominal object geometry material properties 
major difference friction texture simulation haptic device friction model creates forces tangential nominal surface direction opposite probe motion texture model generate tangential normal forces direction see 
fn direction movement user 
forces acting user user fn ft ff haptic simulation friction textures 
normal force computed simple physics model hooke law fn depth penetration haptic probe virtual surface 
simulate coulomb friction need create force ff coefficient friction opposite direction movement 
simulate textures change magnitude direction normal force vector gradient vector texture field contact point 
salisbury 
simulated static dynamic friction user feels stick slip phenomenon stylus haptic device object surface 
changing mean value friction coefficient variation sophisticated frictional surfaces periodic ones ho various grades green salisbury simulated 
haptic perception display textures virtual environments require thorough investigation primarily textures nature come various forms 
luckily graphics texturing studied extensively draw experience simulate haptic textures virtual environments 
example bump mapping known technique graphics generating appearance nonsmooth surface perturbing surface normals 
blinn initially proposed technique method graphically rendering bumps modeling clouds 
formulation depends parameterization surface 
surface parameterization techniques advantages may generate uneven bump textures surface complex shapes 
max becker suggested direct method mapping require transformation global parametric space 
developed formulation purely original surface normal local gradient height field generates bumps surface object 
max becker utilized technique generate bumps cloud contour surfaces 
approach perturbed direction magnitude surface normal ns generate bumpy textured surfaces sensed user virtual environments basdogan 
perturbed surface normals computed formulation represents texture field function local gradient vector 
earliest methods texture rendering uses force perturbation concept dof haptic device developed minsky 

formulation extends concept surfaces 
general haptic texturing techniques classified parts image procedural 
image haptic texturing class haptic texturing deals constructing texture field image data 
computer graphics digital images wrapped objects look realistic 
graphical texture consists texels color gray scale intensities haptic texture consist texels height value 
display image haptic textures stage texture mapping technique computer graphics bier sloan watt watt followed 
stage technique map image simple intermediate surface plane cube cylinder sphere 
second stage maps texels intermediate surface object surface 
stage easily access height value point object surface 
addition gradient vector point estimated finite difference technique interpolation scheme 
force perturbation concept described display imagebased haptic textures see ho implementation details 
procedural haptic texturing goal procedural haptic texturing generate synthetic textures mathematical functions 
function usually takes coordinate input returns height value gradient outputs 
example investigators implemented known noise texture perlin ebert generate stochastic haptic textures pai fritz basdogan 
fractals appropriate modeling natural textures objects exhibit self similarity mandelbrot 
fractal concept combination texturing functions fourier series pink noise various frequency amplitude scales generate sophisticated surface details ho 
similarly types graphical textures converted haptic textures 
example ho implemented haptic versions reaction diffusion textures turk witkin kass spot noise wijk cellular texture 

rendering deformable objects graphical display deformable objects extensively studied computer graphics 
addition haptic feedback deformable objects gained new characteristic 
deformable models need estimate direction amount deformation node object magnitude direction interaction forces reflected user haptic device 
way categorize deformation techniques approach followed researchers deform surfaces geometry physics deformations 
geometry deformations object surrounding space deformed purely geometric manipulations 
general user manipulates vertices control points surround object modify shape object 
contrast physics deformation techniques aim model physics involved motion dynamics interactions 
models simulate physical behavior objects effect external internal forces 
geometry deformation techniques faster relatively easier implement necessarily simulate underlying mechanics deformation 
emphasis visual display goal deformations easily controllable appear smooth user 
physics approaches necessary simulating realistic behavior deformable objects computationally expensive suitable real time applications due current limitations computational power 
general hybrid approaches take advantage worlds real time applications 
geometry physics deformation techniques render force reflecting deformable objects sub grouped follows see basdogan details geometry deformation models vertex vertices object manipulated display visual deformations 
reaction force modeled hooke law depth penetration computed current home positions vertex closest contact point 
example displaying soft tissue deformations graphically polynomial functions fit experimental data deformation srinivasan remap vertices organs basdogan 
spline directly transforming vertices object control points assigned group vertices manipulated achieve smoother deformations 
concept free form deformation originally suggested sederberg parry extended hsu 
direct free form manipulation 
extension technique haptic display deformable objects applications medical simulation basdogan computer aided design cad haptic sculpting edwards literature 
key advantages force feedback increase intuition control deformations support implementation various constraints 
physics deformation models comparison geometry models interaction forces part computation physics models developer need consider separate model computing forces 
particle particle systems consists set point masses connected network springs moving influence internal external forces see witkin implementation details 
model particle represented mass position velocity acceleration 
technique extensively computer graphics researchers simulation soft tissue cloth behavior cover lee ng 
swarup demonstrated implementation technique haptic simulation deformable objects 
finite element volume occupied object divided finite elements properties element formulated elements assembled study deformation states loads 
due limited computational power available today modeling simplifications implement real time fem haptic displays see cotin james pai static computations basdogan dynamic computations 
example de srinivasan proposed modeling approach organs viewed thin structures enclosing fluid converting problem effectively see costa 
basdogan compute dynamical deformations interaction forces implemented modal analysis approach significant vibration modes object selected 
incorporated interactions deformable objects finite element particle 
basdogan proposed spectral lanczos decomposition method obtain explicit solutions finite element equations govern dynamics deformations 
methods modal analysis spectral lanczos decomposition rely modeling approximations generate dynamical solutions computationally faster ones obtained direct numerical integration techniques 
methods complexities mesh generation consequent constraints imposed computations numerical technique called method finite spheres applied physics soft tissue simulation de 
earlier studies proposed loose coupling force displacement computations take advantage human perceptual limitations basdogan 
approach vertex spline approaches generate smooth visual deformations interaction forces computed reflected user simple spring damper model new home positions contact point 
human perception position motion influenced visual cues interacting objects srinivasan loose coupling force displacement computations readily sensed users simulations see model 
architecture limited simulation geometric deformations sculpting animation 
force displacement computations usually tightly coupled physically systems closed loop architecture developed solve equations govern physics deformable behavior see model 
architecture forces displacements computed previous cycle continuously supplied back physics model generate new values cycle 
position orientation geometric model penetration displacement force model force displacement model position orientation geometric model penetration displacement model model physics model force 
computational architectures simulating objects 
model force displacement computations loosely coupled 
model physics model generates forces displacements simultaneously fed back model generate new values 
architecture computationally expensive implement comprehensive architecture basdogan 

rendering dynamic objects simulating haptic interactions objects translate rotate time challenge computationally quite intensive objects collide haptic probe real time 
dynamic equations solved state object updated iteration see 
techniques calculate forces torques principles rigid body dynamics baraff impulse mechanics mirtich canny mirtich developed graphical simulation floating multiple objects 
discusses extension techniques haptics domain brown adams address stability issues 
describe basic concepts haptic interaction dynamic objects consider example see 
assume interactions point user controls dynamics floating object tip point haptic probe 
new position orientation object calculated equations govern dynamics rigid body motion 
equations solved real time numerical integration method euler integration update state object cycle haptic loop constants initial conditions integration interval 




lt 
user user update quantities user user represent total force torque acting object represent linear velocity position vectors angular velocity momentum vectors 
addition rotation mass inertia matrices object respectively sampling time seconds haptic loop updated khz 
total force acting user object calculated depth penetration haptic probe object 
torque user acting object cross product vectors see 
details formulation computation mass inertia matrices baraff 
position orientation object change time step updated coordinates object detect collisions new coordinates hip 
computationally expensive update object database time step detect collisions new hip 
better strategy compute relative original coordinates apply effects transformation see description legend 
body user cm cm hip hip cm 
modeling point haptic interactions floating rigid object virtual environments 
transformation matrix represents force acting user haptic display represent haptic visual coordinates object respectively 
discuss different methods computing interaction forces object transformed state state 
describes method haptic visual coordinates updated collisions detected new haptic coordinates object compute new interaction force state 
visual coordinates updated 
hip multiplied inverse transformation matrix collisions detected original haptic coordinates 
reaction force computed relative original coordinates multiplied matrix 
include effects transformation 
methods valid return interaction force method described computationally expensive described haptic coordinates object required updated iteration object transformed new state 

recording playing back haptic stimuli concept recording playing back haptic stimuli maclean user interesting applications 
example user equipped desktop haptic device may touch feel prerecorded textures car seat advertised car internet concept similar downloading movie file playing screen 
application pre programmed haptic devices neuro rehabilitation improve motor control skills patients neurological disorders displaying pre recorded haptic trajectories krebs 
examples user passive participant system may control device 
user holds effector device gently device guides hand pre recorded shapes paths 
describe concept haptic play back consider simple example 
assume goal program haptic device display square shaped frame passive user 
consider programming haptic device typical closed loop control problem studied problem robotics practical issues appear implemented haptic devices haptic devices typically open loop systems 
user manipulates effector robot control position dynamics interactions governed principles closed loop control systems 
words need design controller command haptic device play back pre recorded haptic stimuli 
build haptic device purchase manufacturer know kinematics mass length link dynamic properties friction performance motors device exactly 
haptic devices sold manufacturer usually come library includes function calls acquiring position orientation effector sending force commands motors see section chapter 
goal function calls control movements haptic device navigate point space compensating positional errors 
design controller achieve goal see pd controller track desired profile 
nt desired profile digital controller nt nt nt nt desired profile haptic library send forces nt get position 
digital servo loop commanding haptic device play pre recorded haptic stimuli frame example 
represent position error force vectors respectively 
derivative proportional control gains 
possible play back pre recorded forces user user actively interacting environment visual cues 
dang developed injection nt simulator training feature capability display expert path forces novice ways 
expert path displayed visually tunnel novice traverse cursor moving prerecorded path trainee needs follow closely feel pre recorded forces continuously 

shared haptics haptic interaction networked users potentially promising area haptic interaction group users sharing network 
haptic loop requires high update rate khz stable interactions changes visual scene require frequent update haptic database developing network protocol provide sufficient bandwidth minimum latency group distributed users quite challenging problem 
shared environments effective performing collaborative tasks involve haptic feedback network architectures proposed wilson physics models simulate haptic interactions users begun developed basdogan 
network time delays difficult nature collaborative tasks lack knowledge user abilities behaviors problem developing universal model shared haptics complex 
example obvious time delays transfer processing data may easily result unstable forces harmful user 
similarly participants follow different strategies manipulate virtual objects execution task interaction model established 
example talk sequential versus simultaneous types haptic manipulations 
possible user stronger see basdogan 
limited knowledge area impossible integrate features single interaction model type model selected simulate haptic interactions participants shared environments depend stage collaborative task 
example developed simple physics model simulate haptic interactions participants basdogan 
model subject manipulates cursor stylus attached force feedback device placed seat 
subject manipulates stylus haptic device dominant hand cursor moves space manipulated object translates rotates depending task 
experiments spring damper model force exerted user ring felt remote partner spring damping coefficients displacement subject cursor control impedance interactions participants subject cursor ring scene see 
model simply simulates translational movements ring wire pulling pushing forces subjects 
subject pulls pushes cursor remote partner feels forces 
visually ring remained rigid deformation ring displayed graphically 
rotation ring due unbalanced forces applied participants prevented task easier 
simultaneous haptic interactions supported ring move subjects apply sufficient forces ring time 

developed shared vr set enables people remote locations interact visual haptic displays 
designed experiment investigate role haptics collaborative manipulation 
experiment subjects asked hold move ring wire collaborative manner depicted 
eliminate time delays due network connections signals single host displayed separate monitors haptic interfaces 

summary computer haptics concerned development software algorithms enable user touch feel manipulate objects virtual environments haptic interface 
primarily deals computation forces displayed user response user actions 
demands placed depend capabilities limitations interface hardware computational engine user needs task accomplished 
current haptic interface technology mature net force torque feedback tool usage real world 
consequently current haptic rendering algorithms developed mainly simulating net forces torques interaction give user feeling touching manipulating objects stick rigid 
point rendering views haptic cursor point computing point object interaction forces developed widely 
followed ray rendering computes line object interaction forces torques 
limited success achieved simulating object object interactions objects viewed collection points 
haptic interaction paradigms real time haptic display shapes textures friction rigid deformable objects achieved 
haptic rendering dynamics rigid objects lesser extent linear dynamics deformable objects accomplished 
methods recording playing back haptic stimuli algorithms haptic interactions multiple users shared virtual environments emerge 
capabilities haptic interface devices expected improve primarily ways improvements desktop wearable interface devices terms factors inertia friction workspace volume resolution force range bandwidth development tactile displays simulate direct contact objects including temperature patterns 
expected result body displays heterogeneous devices connected networks 
current rapid expansion capabilities affordable computers needs haptic rendering complex interface devices continue stretch computational resources 
currently point rendering computational complexity simulating nonlinear dynamics physical contact organ surgical tool surrounding tissues high 
continued demand efficient algorithms especially haptic display needs synchronized display visual auditory modalities 
similar graphics accelerator cards today quite repetitive computations need done specialized electronic hardware parallel processing 
complexity need efficiency application central question simulation needs achieve desired goal 

adachi march intermediate representation stiff virtual objects 
proc 
ieee virtual reality annual intl 
symposium research triangle park carolina pp 


adams port framework design unconditionally stable haptic interfaces ieee rsj international conference intelligent robots systems victoria canada 

avila haptic interaction method volume visualization ieee proceedings visualization pp 


costa lem approach physically soft tissue simulation suitable haptic interaction proceedings fifth phantom users group workshop 

baraff physically modeling rigid body simulation unconstrained rigid body dynamics siggraph tutorial notes 

baraff 
fast contact force computation rigid bodies 
acm proceedings siggraph 

basdogan ho srinivasan 
ray haptic rendering technique displaying shape texture objects virtual environments 
asme winter annual meeting dallas tx 

basdogan ho srinivasan small dawson force interactions laparoscopic simulations haptic rendering soft tissues medicine meets virtual reality conference pp 
san diego ca january 

basdogan force reflecting deformable objects virtual environments haptics basic principles advanced applications siggraph th international conference computer graphics interactive techniques course august los angeles available eis jpl nasa gov basdogan 
basdogan course name simulating minimally invasive surgical procedures virtual environments tissue mechanics simulation training medicine meets virtual reality jan irvine ca www com pro html 
basdogan ho srinivasan virtual environments medical training graphical haptic simulation common bile duct exploration accepted ieee asme transactions mechatronics available eis jpl nasa gov basdogan 
basdogan ho srinivasan small dawson 

force interactions laparoscopic simulations haptic rendering soft tissues 
proceedings medicine meets virtual reality vi conference san diego ca january 

basdogan real time simulation dynamically deformable finite element models modal analysis spectral lanczos decomposition methods medicine meets virtual reality pp 


basdogan ho srinivasan slater experimental study role touch shared virtual environment acm human computer interactions vol 
pp 


finite element procedures prentice hall new jersey 

bier sloan 

part texture mapping 
ieee computer graphics applications 

blinn 

simulation surfaces 
acm proceedings siggraph 

architectures shared haptic virtual environments computers graphics vol 
pp 
july aug 

cohen lin manocha ponamgi 

collide interactive exact collision detection system large scaled environments 
proceedings acm interactive graphics conference 

brown factors affecting width haptic display proceedings ieee int 
conference robotics automation 

cotin delingette ayache real time elastic deformations soft tissues surgery simulation ieee transactions visualization computer graphics vol 
pp 


cover brien rowe palm interactively deformable models surgery simulation ieee computer graphic applications november pp 


qin kaufman el haptic sculpting dynamic surfaces acm symposium interactive graphics 

dang srinivasan development evaluation injection simulator force feedback medical training medicine meets virtual reality press 

de srinivasan thin models haptic graphical rendering soft tissues surgical simulations medicine meets virtual reality eds westwood ios press 

de kim srinivasan numerical technique physically real time medical simulations medicine meets virtual reality pp 


ellis sarkar jenkins numerical methods haptic presentation contact theory simulations experiments proceedings asme dynamic systems control division dsc vol 
pp 


ebert perlin 

texturing modeling 
ap professional cambridge ma 

edwards physically models force feedback virtual environment japan usa symposium flexible automation asme pp 


foley van dam feiner hughes 

computer graphics principles practice 
addison wesley 

fritz 
haptic scientific visualization 
proceedings phantom users group workshop eds salisbury srinivasan mit ai tr rle tr 


bump mapping force display proc 
phantom user group workshop pug www ai mit edu conferences pug pug proceedings html 
gottschalk lin manocha 

obb tree hierarchical structure rapid interference detection 
acm proceedings siggraph august 

green salisbury 

texture sensing simulation phantom remote sensing soil properties 
proceedings second phantom users group workshop oct 

ho basdogan srinivasan modeling force torque interactions line segment triangular surfaces haptic display convex objects virtual teleoperated environments international journal robotics special issue tactile perception vol 
pp 


ho basdogan srinivasan efficient haptic rendering technique displaying polyhedral objects surface details virtual environments october vol 
pp 
presence teleoperators virtual environments 

hollerbach johnson appear human machine haptics eds srinivasan cutkosky howe salisbury 

hubbard 

collision detection interactive graphics applications 
ieee transactions visualization computer graphics 

hsu hughes kaufman direct manipulation free form deformations computer graphics proceedings siggraph vol 
pp 


james pai accurate real time deformable objects computer graphics siggraph conference proceedings 

krebs hogan 
robot aided 
ieee transactions rehabilitation engineering 

haptic interaction rigid objects real time dynamic simulation thesis massachusetts institute technology mechanical engineering 

lee terzopoulos waters realistic modeling facial animation proceedings siggraph pp 


lin 

efficient collision detection animation robotics 
ph thesis university california berkeley 

maclean haptic camera technique characterizing playing back haptic properties real environments proceedings asme dynamic systems control division vol 
dsc pages 

mandelbrot 

fractal geometry nature 
freeman 

mark randolph finch van taylor 

adding force feedback graphics systems issues solutions 
computer graphics proceedings siggraph august 

max becker 

bump shading volume textures 
ieee computer graphics app 

troy degree freedom haptic rendering voxel sampling proceedings siggraph pp 


minsky ming steele brook 

feeling seeing issues force display 
proceedings symposium real time interactive graphics 

mirtich 

impulse dynamic simulation rigid body systems 
ph thesis university california berkeley 

mirtich canny 

impulse simulation rigid bodies 
proceedings symposium interactive graphics april 

srinivasan 

force shading haptic shape perception 
proceedings asme dynamic systems control division 

ng computer graphics techniques modeling cloth ieee computer graphic applications september pp 


perlin 

image synthesizer 
acm siggraph 

ruspini khatib 

robust haptic display graphical environments 
proceedings phantom users group workshop eds salisbury srinivasan mit ai tr rle tr 

ruspini khatib 

haptic display complex graphical environments 
acm proceedings siggraph july 



emulation stiff walls static friction input output device 
asme dsc 

salisbury brock swarup zilles 

haptic rendering programming touch interaction virtual objects 
proceedings acm symposium interactive graphics monterey california 

salisbury srinivasan 

phantom haptic interaction virtual objects 
ieee computer graphics applications 

salisbury tarr haptic rendering surfaces defined implicit functions proceedings asme dsc pp 


sederberg parry free form deformation solid geometric models siggraph proceedings computer graphics vol 
pp 


pai 

haptic texturing stochastic approach 
proceedings ieee international conference robotics automation minneapolis minnesota 

srinivasan ma jm rh tactile detection slip surface peripheral neural codes neurophysiology vol 
pp 

srinivasan ma gl brock dl impact visual information haptic perception stiffness virtual environments proceedings asme dynamic systems control division dsc vol 
pp 


srinivasan basdogan 

haptics virtual environments taxonomy research status challenges 
computers graphics 

stewart chen direct integration haptic user interface cad systems proceedings asme dsc vol 
pp 


swarup haptic interaction deformable objects real time dynamic simulation thesis mechanical engineering department massachusetts institute technology 

thompson johnson cohen direct haptic rendering models proc 
sym 
interactive graphics providence ri pp 


turk 

generating textures arbitrary surfaces reaction diffusion 
acm proceedings siggraph 

watt watt 

advanced animation rendering techniques 
addison wesley ny 

wilson kline hogan algorithms network force feedback proceedings fourth phantom users group workshop salisbury srinivasan 
eds ai lab technical report rle technical report mit 

wijk 

spot noise 
acm proceedings siggraph 

witkin kass 

reaction diffusion textures 
acm proceedings siggraph 

witkin kass tutorial notes physically modeling siggraph 



cellular texture basis function 
acm proceedings siggraph august 

zilles salisbury 

constraint god object method haptic display 
ieee international conference intelligent robots system human robot interaction cooperative robots iros 
