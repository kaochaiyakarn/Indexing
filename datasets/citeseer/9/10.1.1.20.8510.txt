incremental conversion wire frame models polygonal surface models stein sabine coquillart inria domaine de voluceau le chesnay cedex france jerome stein sabine coquillart inria fr large variety methods developed model objects construction solid objects curved surfaces 
part sketch project modeling arbitrarily polygonal shapes 
method modeling objects user drawing removing edges 
addresses automatic computation polygonal surface model wire frame 
straightforward incremental algorithm proposed allowing update surface model modification wire frame 
objects genus topological type handled method 
keywords geometric modeling sketching wireframe surface reconstruction powerful modeling systems exist provide user tools modeling complex objects 
distinguish main classes traditional systems 
csg foley systems define object boolean combination primitives cubes spheres 
surface systems provide user tools extrusion sweep surface revolution defining complex surfaces 
addition deformation tools ffd proposed 
systems provide user powerful tools accurately modeling complex objects surfaces 
traditional systems difficult tedious especially inexperienced users 
finding effective interactive modeling techniques continues active area research 
tends prioritize ease return accuracy generality 
examples techniques goal include methods implicit surfaces bloom marko deformation techniques wires technique singh wires deforming objects direct manipulation technique hsu approaches sketch ides introduce gesture interfaces rapid modeling csg models sculpting methods wang sketching methods teddy sketching interface design objects 
techniques specific class shapes time represent solid objects 
modeling various complex shapes particular solids addressed literature 
papers address interactive modeling arbitrarily polygonal surfaces defined traditional sweep extrusion tools non predefined shapes 
examples shapes include surfaces shape open box solids ones figures 
shapes sketched approach consists interactively defining edges surface probably best known solution user point view 
sketch approaches include stages drawing edges transformation edges reconstruction faces wire frame 
note stages input device 
addresses third stage reconstruction faces wire frame 
time reconstruction process executed offline wire frame entered user see related section addition proposed methods valid subclass closed solid objects 
believe modern interactive modeling systems reconstruction process take place online edge entered deleted user surface model updated time user doesn see wire frame representation model full surface model 
despite large bibliography offline reconstruction techniques authors knowledge researches devoted online reconstruction 
modeling systems avoid problem requiring user define list edges edge cycles representing face 
solution doesn fit need user definition cycle tedious 
order edges entered additional constraint edges entered twice time adjacent face 
goal allow user define polygonal surface object edges entered order 
purpose proposes simple interactive incremental online technique reconstructing object faces edges 
section reviews related wire frame face reconstruction 
proposed algorithm followed discussion results section 
related automatic conversion surface models research issue time 
topological geometrical approaches literature 
markowsky marko proposed mixed geometrical topological approach planarity faces 
markowsky algorithm generates list planes containing intersecting edges 
second time searches called virtual faces lying inside plane 
virtual face cycle edges true face internal face simple cycle due chance alignment edges 
set virtual faces defines virtual blocks solid objects 
blocks discriminated accepted ones define final solid model 
hanrahan approach strictly topological uses planar embedding technique 
fundamentally wireframe represented flat twodimensional edge vertex graph faces represent faces object 
method advantage able handle objects non planar faces edges return handles valid models holes 
ganter court proposed topological approach edge vertex graph 
graph examined find fundamental cycles faces computed called reduction process 
method handles non planar faces requires valid connected solids holes 
shortest path approach strictly topological approach 
uses shortest path algorithm produce set cycles graph identifies second step ones form cycle basis cycle space graph set facial cycles 
method works valid connected solids holes 
agarwal propose different original approach problem conversion decomposing volumes 
tetrahedra yield set faces 
list faces scanned faces appearing eliminated 
remaining faces true faces model 
method doesn apply non solid models 
algorithm previous methods developed offline treatments project online treatment desired update surface model addition removal edge 
constraint consequences conversion incremental surfaces topological type solid models computation needs efficient completed real time time compatible interaction 
purpose proposed algorithm find faces defined planar cycles edges 
desired destroyed second time discussed discussion results paragraph 
incremental approach avoids need recompute set faces modification edge vertex graph representing wire frame model 
edge added removed graph faces adjacent edge need created removed altered 
edge vertex graph interactively constructed updated user 
user operations may include addition removal edges displacement vertices edges 
operations turn simplify different cases incremental reconstruction algorithm edge addition edge removal 
displacement edges treated removing edges possibly adding new ones 
addition new edge may create new faces subdivide existing faces 
removal edge may result removal faces fusion faces 
assumed edges intersect endpoints 
guaranteed wire frame construction method 
cases edge addition edge removal studied sections 
third section discuss case faces embedded faces 
adding edge types new edges distinguished depending vertices connected edges 
face cyclic set edges vertex new edge connected edges new edge involve creation face 
case needs considered vertices new edge connected edges 
proposed method updating surface inspired method turns significantly simpler incremental interactive approach 
proposed algorithm takes advantage planarity faces 
mixed method topological geometrical 
geometrical information speed search new faces restricting search set planes containing added edge 
planes topological approach proposed derive new faces 
method divided stages find set planes possibly embed new faces second find faces inside theses planes 
finding candidate planes edge finding planes planes include new drawn edge vertices new edge give clues find planes 
point needed define plane possibly include new faces 
third point exploring graph connection starting vertex new edge depth search algorithm 
new path traversal stops soon point geometrically aligned vertices new edge see 
points vertices new edge form set planes possibly embed new faces 
planes may verification order remove duplicated planes 
finding faces inside planes previously detected planes may include new faces 
straight forward topological algorithm employed testing plane includes faces 
plane hold zero faces face side new edge 
arbitrary orientation plane defining canonical normal order differentiate left right side oriented edge 
step consists checking left resp 
right face created 
treatments independent similar left face detailed 
problem reduces problem 
graph corresponding plane sub graph original contains vertices edges lying plane 
example correct shortest cycle left face simplicity consider graph remainder paragraph 
implementation graph explicitly created 
graph treated vertices edges lying plane considered 
assume vertex edges meeting vertex ordered respect canonical normal plane 
dealing planar graph graph said planar drawn plane edges intersect geometrically vertex incident 
problem reduces finding planar graph cycle edges includes new edge located left side 
note correct cycles represent true faces shortest ones 
see 
cycle exists path starts second vertex new edge ends 
defined traversed vertex outgoing edge follows incoming clockwise order counterclockwise order right faces 
traversed edge new edge edges traversed twice 
algorithm moves backward time available outgoing edge dangling edge path continues edge previous vertex 
algorithm backtracks 
edges backtrack path forbidden traversal depth search algorithm 
search fails path vertices new edge case face created 
described algorithm detects types left faces valid ones cases infinite ones valid exist see 
simple way differentiate infinite face valid sum traversed vertex angle clockwise incoming outgoing edge see 
valid face search left face resulting infinite face sum sum sum summing edges angular deviations sum degrees degrees infinite face 
face declared valid left face sum positive sum negative right faces 
adding edge edge connected search planes plane search left path search right path merge left face right face exists delete old face decomposition face addition new edge model create faces decomposition existing face 
faces left right plane algorithm check faces split face face face face face difference simple difference sufficient merge correctly new faces existing face delete old face 
test merging new faces difference court edges face 
cases difference yields directly valid face compared old faces model 
tricky cases frontier new faces simple path edges see returned edges define set cycles 
search set edges identify cycles order keep result merging unique cycle geometrically includes 
cycle produced merging doesn need compared faces model 
sufficient compare faces lying plane associated edges faces 
seen dangling edges neglected graph traversal 
consequently edges may associated face dangling edges addition new edges 
removing edge removing edge graph faces model may need deleted merged 
faces adjacent removed edge affected 
faces lie plane merged previously described merging method 
faces plane deleted 
removing edge search faces including couple faces list faces normal vector merge faces delete faces embedding face face case studied face embedded face 
note filled face unfilled face hole 
treated similarly flag indicates filled change concerns display 
call embedded face inside face face inside face embedded outside face 
user point view different approaches create inside face 
consists subdividing outside face special treatment needed 
obvious drawback method requires user know drawing outside face contains inside face 
second method natural user consists drawing shape inside face faces linking outside face inside face displayed correctly 
third solution consists automatically determining new face embedded embeds existing face 
solution attractive potentially time consuming requires considering possible couples faces 
may compatible interactive constraint 
consequently decided adopt second approach fits interactive status system 
note information user algorithm works faces superposed 
link outside faces inside face stored data structure outside face 
edge added splits existing inside face sub faces link outside face old inside destroyed links outside face new faces added 
edge added cuts outside face sub faces algorithm determine new face inside faces lie add link appropriate face inside face 
inside face destroyed deleting edges link outside face inside face destroyed 
edge outside face containing inside faces shape deleted outside face destroyed links inside faces destroyed 
edge inside faces deleted inside faces merge link outside face previous inside faces replaced link new resulting inside face 
outside face merges face link inside face transmitted resulting outside face 
discussion results proposed algorithm handles large variety objects objects solid manifold genus 
reconstruction process finds possible correct faces planar cycles edges convex concave specific cases ambiguous wire frame models internal faces user input may necessary remove unwanted faces 
simplicity decided change data structure filled unfilled information stored face information introduced previous paragraph holes order indicate face desired user 
choosing automatically create faces user destroy unwanted ones minimize possible user input manually creating face requires click edge removing face requires click 
average cost find destroy new faces addition removal edge 
operation find new faces divided steps search planes search faces open box inside planes 
operations computed average time 
worst case vertices graph connection visited operations linear 
cases rare vertices plane aligned line 
destroying face performed low cost 
figures objects modeled proposed method 
algorithm convert wire frame model polygonal surface model incremental process 
faces constructed creation object 
modifications edge vertex graph induce incremental computation new set faces 
algorithm general works valid polygonal surface 
efficient incrementally compute wire frame model real time interaction 
main possible extension automatic computation inclusion edges faces 
trivial solutions suppose check couples mn 
optimized method partitioning space consideration 
purpose extending technique offline treatment interest arbitrary solid manifold genus objects constructed 
acknowledgment authors david proof reading 
partly carried funding association 
warren jr shortest path approach wireframe solid model conversion 
sma proceedings third symposium solid modeling applications pages 
acm may 
held may salt lake city utah 
bloom jules bloomenthal brian wyvill 
interactive techniques implicit modeling 
rich carlo sequin editors computer graphics symposium interactive graphics volume pages march 
costa nunes ferreira 
sketching models interaction devices 
computer graphics forum eurographics volume pages 
eurographics basil blackwell 
sabine coquillart 
extended free form deformation tool geometric modeling 
forest baskett editor computer graphics siggraph proceedings volume pages august 
court brewer 
automated conversion curvilinear wire frame models surface boundary models topological approach 
computer graphics august 
brigham 
efficiently identifying faces solid computer graphics 
computers graphics 
foley james foley andries van dam steven feiner john hughes 
fundamentals interactive computer graphics 
systems programming series 
addison wesley reading ma usa second edition 
galyean hughes 
sculpting interactive volumetric modeling technique 
computer graphics proc 
acm siggraph july 
ganter jr 
wire frame solid geometric automated conversion data representations 
computers mechanical engineering september 
hanrahan 
creating volume models edge vertex graphs 
computer graphics july 
hsu william hsu john hughes henry kaufman 
direct manipulation free form deformations 
edwin catmull editor computer graphics siggraph proceedings volume pages july 
takeo igarashi satoshi matsuoka tanaka 
teddy sketching interface freeform design 
siggraph conference proceedings annual conference series pages 
acm siggraph august 
marko george markowsky michael wesley 
wire frames 
ibm journal research development september 
marko lee markosian jonathan cohen thomas john hughes 
skin constructive approach modeling freeform shapes 
siggraph conference proceedings annual conference series 
acm siggraph august 
thomas sederberg scott parry 
free form deformation solid geometric models 
david evans russell editors computer graphics siggraph proceedings volume pages august 
singh singh eugene fiume 
wires geometric deformation technique 
michael cohen editor siggraph conference proceedings annual conference series pages 
acm siggraph addison wesley july 
isbn 
tarjan 
efficient planarity algorithm 
tech 
report computer science dept stanford univ 
wang sidney wang arie kaufman 
volume sculpting 
pat hanrahan jim editors symposium interactive graphics pages 
acm siggraph april 
isbn 
alias wavefront 
www aw sgi com 
robert zeleznik kenneth herndon john hughes 
sketch interface sketching scenes 
holly rushmeier editor siggraph conference proceedings annual conference series pages 
acm siggraph addison wesley august 
