bitmap indexing clustering retrieval xml documents jong yoon ctr 
advanced computer studies university louisiana lafayette la cacs louisiana edu describes bitmap indexing technique cluster xml documents 
xml documents hierarchically represented elements 
improve performance information retrieval documents indexed bitmap techniques 
bitmap index sparse meaning contains unnecessarily zero bits especially word dimension 
remove zero bits improve performance information retrieval propose generate small bitmap indexes sparse 
similarity popularity operations available bitmap indexes clustering techniques discussed topdown clustering bottom clustering mixed clustering 
experimental results shown 
keywords clustering partitioning bitcube xml indexing 

extensible markup language xml standard representing exchanging information internet 
documents represented xml content retrieval possible 
size xml documents large types vary typical information retrieval techniques lsi latent semantic index satisfactory 
information retrieval web satisfactory due partly poor usage structure content information available xml documents 
consider document database 
document represented xml 
contains zero words bound 
typical indexing requires frequency table dimensional matrix indicating number occurrence terms documents 
generalizing idea dimensional matrix consists 
treat pair query 
pair want find document database triplet 
cases internet query answering slow 
simple way speed query answering speed distance calculations organized document clusters 
propose bitmap vijay raghavan ctr 
advanced computer studies university louisiana lafayette la raghavan cacs louisiana edu ctr 
advanced computer studies university louisiana lafayette la cacs louisiana edu indexing technique call bitcube represents operations cluster documents efficiently 
going consider examples 
motivating examples example suppose query posed find documents describe clustering subsections 
type queries easily processed relational document databases object oriented document databases due inflexible modeling irregularity documents unacceptable performance 
xml irregularity elements flexibly represented shown 
example suppose query posed find documents describe indexing sub subsection 
notice type queries asks specific document structure section subsection sub subsections 
searching entire xml database costly word pattern search rarely search large document database 
word list document sparse compared list words available database 
search sparse list words efficient 
resolve problem proposes way clustering xml documents word 
way searching restricted cluster documents order improve performance 
related conventional techniques document retrieval systems include lists word stems frequency tables 
words deemed irrelevant query eliminated searching 
words share common word stem replaced stem word 
frequency table matrix indicates occurrences words documents 
occurrence simply frequency word ratio word frequency respect size document 
size frequency table increases dramatically size document database increases 
reduce frequency tables latent semantic indexing lsi technique developed 
lsi retains significant frequency table 
svd trick reduces size original frequency table finding singular matrix trivial 
considers complex frequency table represents terms values xml element epath xml document 
describe novel approach decompose frequency table table sparse matrix 
addition new data structure called tree introduced storing high dimensional data 
inverted indexes studied extensively 
fast insertion algorithms inverted indexes proposed 
numerous document clustering algorithms appear literature 
agglomerative hierarchical clustering algorithms probably commonly 
linear time clustering algorithms means algorithm line clustering 
ordered sequence words cluster documents available internet 
internet attempts alta vista handle large number documents returned query refinement features 
collection bitmaps bitmap index forms dimensional bit matrix 
bitmap index optimize queries 
propose dimensional bit matrix 
bit wise operations developed earlier generalized dimensional bit matrix context 
organization remainder follows 
section describes preliminaries element paths xml documents bit wise operations bitmap indexes 
section describes similarity xml documents popularity xml elements partitioning techniques 
bitcube set triplets document terms contents introduced 
section describes various clustering techniques application bitcube indexing content querying 
section describes experimental results 
interestingly find bitcube constructed bit wise operations xml documents executed constant time 
section concludes summarizing contributions providing directions 

preliminaries section defines technical terms borrowed 
xml document definition element content xml element contains simple content element content empty content content 
example consider xml document shown 
element section line simple content 
element section line element content meaning contains subsections shown lines 
course content types mixed element section line contains simple content line elements lines 
element contains empty content 
content content hyperlinks site 
section section xml represented bitmap indexing section new standard section section application shown www clustering clustering algorithm section section section bitmap indexing technique section section xml document definition epath element path called epath sequence nested elements nested element simple content element 
example section section section epath section epath due top element section simple content 
xml document defined sequence associated element contents 
xml document database contains set xml documents 
propose bitmap index xml document database 
document epath bitmap index bit column represents epath row represents xml document 
course element contents values words need taken account 
doing need consider dimensional bitmap index discussed detail section 
section consider dimensional bitmap index 
example bitmap index assume xml documents 
example xml documents set simple xml documents 
need define follows vi key word chosen simple content search 
bitmap indexing document epath set corresponding bit 
bits set 
epath documents represented shown 
definition size bitmap bi denotes size bitmap bi number bitmap bi bi denotes cardinality bitmap bi number plus bitmap index definition hamming distance distance documents defined dist di dj xor di dj xor bit wise exclusive operator 
example distance documents xor 
notice bitmap index bit represents word document distance terms word obtained 
popularity bit column bit column bitmap index described popularity 
popular frequently 
index popular bit column mode bitmap index 
definition popularity popularity bit column pop pi pi pi 
bit column pi popular pop pi bit column pi unpopular pop pi 
example popular popl popular 
bitmap index notion determine epath popular unpopular 
popularity epath changes new document added deleted 
classify bit columns cases 
consider bitmap index convenience call new bitmap index including new input bitmap target bitmap index 
pop pi new bitmap index pis input bitmap called popular bit columns pop pi pi input bitmap called weakening unpopular bit column pop pi pi called strengthening unpopular bit column radius center section describes features bitmap indexes radius center 
radius variance center mean statistics 
definition center cluster xml documents center vector element vector mean value corresponding bits documents 
example assuming documents cluster center cluster 
notice center computed mode min max value mean value application domain 
definition radius radius cluster defined radius max dist center bitmap index cluster dj bitmap jth document cluster notice dist case generalized version defined definition 
example center bitmaps bitmap index dc 
radius dist dc 
bitcube section describe dimensional bitmap index called bitcube 
technique originally introduced purpose extending twodimensional bitmap indexes dimensional indexes 
bitcube revisit representation documents 
xml document defined set pairs denotes element path epath described root element denotes word content epath 
typical methods handling text documents frequency table inverted signature file represents words documents 
xml documents represented xml elements xml tags typical methods sufficient 
propose section dimensional bitmap representation called bitcube 
bitcube xml documents defined bitcube denotes xml document denotes epath denotes word content epath denotes value bit bitcube epath contains bitmap index word bit set 
example consider xml documents similar documents shown 
xml documents represented 
bitcube set documents 
documents vi vi vi vij 
approximate size bitcube docs words paths bytes docs number documents paths represents number different represented set documents 
bit columns initially organized order order documents processed 
bitcube partitioned epath bits shifted 
bit columns words may organized ways known 
simple word organization 
words xml documents shown bitcube 
keyword organization 
words importantly meaningful xml documents shown bitcube 
size word list way smaller previous organization 
signature word organization 
similar keyword organization meaningful words shown order significance 
bitcube operations operations described section epath slice word slice document project 
outcome operations applied bitcube dimensional bitmap index 
furthermore operations extended dicing querying results bitmap index 
epath slice operation takes epath input returns set documents words associated 
slice epath doc word epath doc word associated epath 
outcome slicing dimensional bitmap index represents set documents set words 
word slice operation takes search key word input returns set documents 
slice word doc epath word associated epath turn doc 
outcome dimensional bitmap index represents set documents set epath bitcube example word associated 
multiple word slices combined 
outcome multiple word slices combination outcomes word slices 
way combination depends way words requested 
example conjunctive outcomes need combined conjunction 
document project operation takes document input returns set words associated 
project doc epath word entire content epath pairs appeared doc 
outcome bitmap index represents set content words 
typical method project operation web browsing 

document clustering low frequency words represented documents bitcube bitcube may sparse 
observed large number distinct words possibly occur set xml documents 
factors bitcube large sparse 
sparse bitcube efficient terms space access time 
bigger bitcube time taken accessing 
order overcome problem sparse smaller constructed bitcube divided smaller reducing size bitcube content access time 
approaches proposed partitioning top approach clustering bottom approach 
querying faster smaller bitcube 
best way constructing smaller clustering indexing data 
partitioning top approach partitioning cluster consider bitmap index wj denotes document epath pairs denotes words 
popularity threshold threshold 

compute pop wj 
split rows types subclusters pop wj pop wj pop wj 
eliminate columns value wj 
ti empty ti partitioning ci 
bitmap partitioning algorithm approach documents indexed considered cluster 
cluster recursively divided smaller clusters epath similar clusters put cluster 
identifying set popular basis defining similarity topdown approach 
types clusters possible approach 
type cluster collection documents contain popular 
collection rows original cluster bits corresponding popular set 
type cluster collection documents contain popular 
collection documents doesn contain popular identified type 
set xml documents partitioned clusters 
number partitions depends characteristics documents epath words documents 
section simplicity consider dimensional bitmap indexes representing documents epath 
algorithm document partitioning 
collection documents center radius clusters respectively 
radius threshold 
consider clusters assume compute distance dist 
rj ri cluster cj merged ci 

ri rj clustering bottom approach approach document compared existing clusters put potentially belongs new cluster formed current document centroid 
decision document belongs cluster comparing distance document centroid cluster pre set radius threshold 
order improve performance computing center distance defined earlier redefine distance follows definition generalized distance center ci denotes average th dist ci ci cj bit cluster ci 
distance radius threshold document considered belong cluster 
clusters document potentially belong closest cluster chosen document put 
clusters generated approach contain documents nearer dimensional space 
algorithm 
notice cluster ci contains documents 
earlier discussion bitcube resulted indexing xml data set sparse 
order reduce sparseness propose types clustering indices 
early clustering clusters ci cj clustered ci 
clustered 
bitmap clustering algorithm clustering done indexing documents 
set xml documents divided number smaller clusters 
cluster indexed separately form separate bitcube 
observed size resulting smaller original bitcube formed normal indexing method clustering 
initially documents indexed clustered clustering approaches discussed earlier 
results smaller document sets generate comparably smaller 
number distinct words cluster equal actual number distinct words original data set space bitcube occupies reduced 
query posted find bitcube queried contents belong steer query bitcube 
levels indexing indexing second bitcube 
main disadvantage approach 
kinds queries access bitcube 
delayed clustering set xml documents indexed construct corresponding bitcube followed clustering 
number words main measure sparseness bitcube 
number words bitcube reduced density bitcube improved 
bitcube expanded word dimension documents resulting bitmap index columns distinct words data set rows possible combinations documents data set 
bitcube represented dimensional space 
bitmap index obtained divided smaller clusters 
clusters similar column index distinct words input data set 
columns removed clusters order reduce number words cluster 
smaller clusters denser removing redundant words 
early clustering smaller clusters indexed queries directed appropriate clusters 

experimental results approaches clustering evaluated clustering time number clusters generated different test data scenarios 
test data collections generated running program 
sample documents generated program illustrated 
experimental environment windows byte memory 
measurement efficiency data retrieval depicted various graphs 
evolution measuring technique measurement effectiveness precision data retrieval progress 
comparison clustering techniques clustering techniques described earlier advantages 
topdown clustering technique definition clustered similarity words different document epath combinations 
possible zero columns removed 
topdown approach gets denser indexing discarding unnecessary zeros simple bitcube indexing 
topdown clustering takes time indexing size clustering technique clusters possible technique clusters possible combinations documents compared documents case bottomup approach 
bottomup approach dividing data set smaller sets similarity structure documents contents 
set indexed generate smaller bitcube set contains number distinct words original data set reducing size 
querying done easier case compared topdown clustering 
main disadvantage bottomup technique extra indexing documents facilitate clustering documents structure 
various methods evaluating cluster quality 
consider types metrics evaluating clustering quality entropy measure 
assume class predefined 
entropy 
entropy clustering cj nij nij pij log pij ij number documents cluster cj belong class nj number documents cj 
measure 
measure cluster cj class recall recall clustering index size pr pr simple bitcube indexing technique size indexing documents indexed words 
frequently occurring words indexed documents indexing big sparse 
clustering documents instrumental making indexing denser compact 
clustering saves considerable amount indexing space 
depicted experimental results increasing indexing sizes document sets indexed clustering techniques reveal amount saved indexing space gets high bigger document sets 
recommends clustering techniques indexing saved indexing space possible index bigger sets documents 
execution time bitcube operations measured execution time bitcube operations slice slice document project clustering technique incorporated 
execution times cases scrutinized find time slicing doesn change clustering 
depicted execution time slice deteriorated increasing number documents clustering incorporated 
describes slice execution time affected clustering 
clustering execution time bitcube operations remained reducing indexing 

main contributions application bitmap indexing represent xml document collection dimensional data structure xml document xml element path terms words definition bitcube index schemes partition documents clusters order efficiently perform bitcube operations document retrieval technique application bitcube operations subcubes resulting clustering phase 
big xml document collections indexing done reasonable amount time 
time taken various bitcube operations remained constant 
berchtold keim kriegel tree index structure high dimensional data proc 
intl 
conf 
large data bases bombay india 
time comparision clustering 
time comparision clustering 
chan ioannidis bitmap index design evaluation proc 
int acm sigmod conference gupta mumick eds materialized views cambridge ma mit press 
hill vector clustering technique mechanised information storage retrieval dissemination north holland amsterdam 
kobayashi takeda information retrieval web acm computing surveys 
neil quass improved query performance variant indexes proc 
int acm sigmod conference 
papadimitriou tamaki raghavan vempala latent semantic indexing probabilistic analysis proc 
th acm symposium principles database systems 
salton mcgill modern information retrieval new york mcgraw hill 
tomasic garcia molina incremental updates inverted lists text retrieval proc 
acm sigmod conf 
management data minneapolis 
willet trends hierarchical document clustering critical review information processing management 
wu query optimization selections bitmaps proc 
int acm sigmod conference 
yoon kim level user interface multimedia digital libraries relaxation restriction ieee conf 
advanced digital libraries santa barbara 
yoon raghavan bitcube dimensional bitmap indexing xml documents thirteenth international conference scientific statistical database management fairfax va 
zamir etzioni web document clustering feasibility proc 
acm sigir conf 
research development information retrieval 
