infocom lagrange relaxation method qos routing problem alp ar bal ecs ericsson research traffic analysis network performance laboratory budapest hungary mail eth ericsson se practically efficient qos routing method provides solution delay constrained cost routing problem 
algorithm uses concept aggregated costs provides efficient method find optimal multiplier lagrange relaxation 
method proven polynomial efficient practice 
benefit method gives lower bound theoretical optimal solution result 
difference lower bound cost path small proving quality result 
relaxing optimality paths easy way provided control trade running time algorithm quality paths 
comprehensive numerical evaluation algorithm comparing wide range qos routing algorithms proposed literature 
shown performance proposed polynomial time algorithm close optimal solution computed exponential algorithm 
keywords qos routing delay optimization lagrange relaxation providing network wide delay guarantee real time flows internet challenging task 
thinking voice application numerous sources delay queuing delay propagation delay codec delay serialization delay shaping reshaping delays 
queuing delay depends scheduling algorithms 
determine queuing delay calculating worst case delay calculating average delay statistical means 
literature articles concentrate guaranteeing worstcase delay bandwidth simple flow utilizing concept called network calculus service curves 
papers concentrate providing delay bounds flows treated separately 
grouping flows belong guaranteed delay service may result lower resource requirement handling flows separately 
shown grouping flows pair may result gain allocated resource 
shown enhanced routing information distribution component assuming service model queuing delay determined hop burst size maximum packet size minimum service rate reserved hop known 
propagation delay considered constant attribute link depending distance source destination nodes 
investigating effect internet path selection substantial degree inefficiency path selection 
study showed congestion propagation delay play significant roles observed inefficiencies internet paths single dominant factor 
knowing computed hop worst case queuing delay propagation delay assign single additive delay metric link 
approach take account inaccuracy ospf state information consider network optimization criterion neglected mentioned study 
example optimization criterion resource utilization achieved minimizing hop count 
example minimize additive monetary cost price depending delay guaranty requested 
proven routing problem np complete number additive qos parameters minimized equal 
literature algorithms try solve complex problem define simpler problems 
concentrate simplified problem find path minimal cost delay remains bound 
formulate problem referred delay constrained cost path problem section ia section ii survey previous field 
method provides optimal paths dclc problem exponential running time 
group rest qos routing algorithms groups heuristics combining paths calculated different metrics heuristics calculating single metric multiple requirements 
main result section iii new algorithm called lagrange relaxation aggregated cost larac proposed belongs second category 
larac algorithm provides polynomial heuristic solution dclc problem 
heuristics manipulate weights different metrics aggregated cost function method uses lagrange relaxation method find optimal multiplier 
describing details larac algorithm show properties gives back path satisfies delay constraint path exists 
running time proven polynomial 
practical cases running time algorithm competes elementary heuristics 
general theoretical guarantee optimality path cost algorithm gives lower infocom bound optimal cost gives individual guarantees solution 
lower bound cost path close practical cases proving high quality result 
multiple qos requirements 
extension basic algorithm proposed section iii control trade optimality result running time algorithm 
section iv show algorithm gives simulation result compared previously developed algorithms 
proposed extension running time algorithm path costs close optimal 
problem formulation assume communication network modeled directed connected graph represents set nodes represents set directed links 
number nodes number edges respectively 
usually duplex links graph existence link node node implies existence link link characterized values delay constant value related propagation queuing delay link hop cost simple hop count monetary cost measure link capacity 
definition delay constrained cost path problem referred simply dclc directed connected graph non negative cost non negative delay link source node destination node positive delay constraint delay constrained minimization problem min set path delay bounded delay 
delay 
dclc problem np hard worth mentioning important special case solvable polynomial time link costs link delays equal constant different values 
number heuristic algorithms proposed solve dclc problem appropriate choice routing algorithms open issue 
ii 
previous section give survey different routing algorithms proposed literature 
best knowledge widely accepted algorithm give optimal solution dclc qos routing problem polynomial time 
proposed routing method gives optimal path having lowest possible cost violating delay constraint unfortunately exponential running time 
constrained bellman ford cbf routing algorithm performs breadth search discovering paths monotonically increasing delay recording updating lowest cost path node visits 
stops highest constraint exceeded possibility improving paths 
extension uses delay hopcount continuous metric routing table contains entries possible delays large unrealizable size 
mentioned cbf algorithm exponential running time 
analyzed conclusively stated despite exponential nature performance algorithm reasonable practice 
development cbf algorithm kind scaling technique authors gave fully polynomial time approximation schemes dclc problem proved exists polynomial time algorithm able find path satisfying delay constraint cost greater factor optimum 
running time best known approximation scheme nm log log log nm unfortunately practical cases running time methods sufficiently small worse cbf algorithm results theoretical 
algorithms try kind heuristics approximation 
simple method proposed lee give optimal paths provides simple heuristic solution dclc problem 
fallback routing algorithm assumes ranked metrics network 
routing algorithm calculates shortest path metric cost checks guarantee qos requirements 
path failed algorithm tries find metric appropriate path routing fails metrics 
algorithm simple fast gives appropriate solution exists guarantee finding optimal route know quality path 
algorithm proposed improves previous idea combining paths calculated different metrics calculating paths metrics source node nodes destination trying possible combinations 
algorithms improving idea fallback 
ishida proposed distributed algorithm nodes choose cost path fulfills delay requirements point choose path delay 
delay constrained unicast routing algorithm proposed salama similar choose cost delay paths independently choice previous node 
algorithms higher reasonable running time find solution near optimal case fallback algorithm algorithms guarantees optimality path 
cheng nahrstedt give algorithm find path meets requirements polynomial time 
algorithm reduces original problem simpler modifying cost function problem solved extended shortest path algorithm 
shortcoming infocom method algorithm high granularity approximating metrics costly time space guarantee simpler problem solution original problem 
group algorithms calculating simple metric multiple requirements 
doing simple shortest path algorithm single cost aggregated combination weighted qos parameters 
main drawback solution result quite sensitive selected aggregating weights clear guideline weights chosen 
handle problem determining weights aggregated cost solution routing algorithms proposed 
example algorithm proposed tries find appropriate path single cost weighted link metrics 
fails tries find path iterative changing values weights get possible paths appropriate path guarantees 
problem solution path correct aggregated cost mean correct user qos requirements 
words information lost aggregation process 
wang crowcroft say single mixed metric approach sufficient qos routing 
best indicator path selection provide information making reliable quantitative estimation path meets requirements 
example proposes mixed metric delay bandwidth loss probability 
path large value better choice terms bandwidth delay loss probability 
sure path minimizes expression suitable constraints bandwidth delay loss 
contrary state problem solved algorithms aggregated costs find paths meet qos constraints 
section larac algorithm uses lagrange relaxation method find optimal weighting aggregated cost function achieve 
iii 
proposed algorithm lagrange relaxation aggregated cost original dclc problem minimize cost path keep delay constraint delay formal description looking min delay set paths source node destination node unfortunately mentioned problem proven np hard hope algorithm find theoretical optimum runs polynomial time 
heuristic lagrange relaxation 
lagrange relaxation common technique calculating lower bounds finding solutions problem 
held karp raised technique traveling salesman problem 
propose technique solve dclc problem 
larac lagrange relaxation aggregated cost algorithm heuristic minimizing modified cost function 
fixed easily calculate minimal path 
delay optimal solution original problem 
delay increase increase dominance delay modified cost function 
increase optimal solution suits delay requirements 
section show find value gives best result 
algorithm give upper bound badness solution byproduct claim 
claim min delay 
lower bound problem 
proof 
denote optimal solution 
min delay delay delay proves claim 
obtain best lower bound need maximize function looking value max maximizing properties function 
simple proofs left reader 
claim concave piecewise linear function minimum linear functions delay 
claim minimal path point 
claim delay delay minimal path claim value maximizes function paths minimal delay delay 
case delay algorithm give paths claim minimal minimal paths 

claims gives maximizing function gives best modified cost function smallest value exists minimal path satisfies delay constraint 
summing neglect constraining conditions relaxation build object function 
solutions feasible original problem certainly suit relaxation conditions get lower bound original problem 
path feasible constraining conditions increase dominance modified cost function enforcing solution approach infocom optimal solution 
decrease difference obtained lower bound optimum original problem 
base lagrange relaxation 
detailed description reader referred 
help lagrange relaxation algorithm find optimal source destination pair aggregated cost routing methods algorithm gives best solution obtained 
gives estimation optimal solution guarantee finding optimal solution get bound solution tells far optimal solution 
section survey larac algorithm section iii iii mention possibilities improving algorithm 
description algorithm section larac algorithm described 
step algorithm sets 
calculates shortest path modified cost function dijkstra algorithm 
means shortest path algorithm shortest original cost path meets delay requirement delay optimal path algorithm stops 

algorithm stores path best path satisfy delay path denoted checks appropriate solution exists calculates shortest path delay obtained path suits delay requirement proper solution exists algorithm stores path best appropriate path till denoted 
suitable path fulfill delay requirement algorithm stops 
steps obtain optimal updating repeatedly paths 

see current paths certain minimal claim larac delay dijkstra delay return dijkstra delay return solution repeat pc pd pd pc dijkstra return delay repeat procedure dijkstra returns minimal path nodes fig 

larac algorithm 
case get possible 
set new candidate optimal solution 
find minimal path minimal done setting resulting replace fails fulfills delay constraint repeats step 
running time algorithm denote sequences paths generated algorithm 
seen delay delay finite number different path algorithm finds optimal finite number steps 
stronger result proved similar technique proof strongly polynomiality called newton method 
theorem larac algorithm terminates log iteration running time algorithm log 
omit long technical proof 
optimality path stated section iii optimality mean optimality path 
fact guarantee finding optimal path bound higher ratio obtained optimal path 
cases algorithm find optimal solution 
case algorithm find optimal solution sure finds 
find example network belonging cost functions paths 
network path optimal algorithm decide path optimal base optimality path depends path chosen dijkstra algorithm path cost equal length 
idea constraining dijkstra choose path lowest cost path equal results proper path 
seen find path lowest cost violates delay constraint 
real networks case occur worthy study solution profoundly 
case see cause great anxiety 
considering network lagrange function see easily occur modified cost optimal path higher suboptimal path optimal 
infocom optimal path higher path algorithm means 
fact problem handled algorithms aggregated cost 
possibility improving performance algorithm case increase influence cost modified cost function 
cost raised second power effect cost strong chance optimal path smallest optimal increases 
delay remains linear delay remains linear function paths violate convergence paths fig 

network paths opt lagrange function paths optimal path optimal fig 

network optimal path higher suboptimal path opt lagrange function algorithm 
see effect raising cost second power 
paths paths fig 

lagrange function network linear cost square cost notice modifying influence slope lines dependence delay 
just shifts lines farther 
path lower cost placed lower position comparison path higher cost 
certainly trial solve problem easy find networks behave way square cost network previous example 
benefit networks gives better solution algorithm linear cost function 
exponents applied increasing exponent may results high values costs 
usually decided worth working higher costs give better solution network 
improvements larac algorithm section mention important possibilities improving larac 
storing results reality router computes paths lot destinations doing single 
original larac algorithm improved utilizing fact reusing results previous calculations 
call dijkstra algorithm certain store result store minimal paths destinations 
paths form tree need store edges 
store cost cost path 
new method simple 
difference looking path new destination looking largest previously calculated infocom delay smallest delay initialize paths minimal ones 
improved condition optimize algorithm gain faster running time giving requirements minimality path cost 
compute path source destination pair calculate different values 
iteration number increases decreases difference subsequent values difference cost paths decreases 
series paths say source destination satisfy delay constraint series paths satisfy delay constraint 
aim algorithm finds optimal solution assure result far optimum 
algorithm gives final solution interested difference cost tags series tag examine running algorithm certain intermediate iteration suppose current paths iteration get 
difference small difference possibly negligible case need continue running iteration 
define upper bound named maximal difference md shows percentage difference tolerated cost original solution original algorithm cost new solution path improved algorithm 
md stands iteration algorithm significant improvement resulting path cost earned 
tolerance minimality cost represented value md iv 
numerical results complexity routing model precludes closed form analytical expressions simulations evaluate performance larac algorithm qos routing algorithms proposed literature 
section structured follows survey implemented algorithms measurements section iv section iv give description simulation environment 
section iv introduce simulation experiments 
implemented algorithms measurements investigated performance larac algorithm compared promising algorithms selected ones surveyed section ii 
cbf algorithm selected gives optimal solution useful measure algorithms 
fallback algorithm selected simplicity promising algorithms compose constrained path paths obtained simple shortest path algorithms 
larac give best solution obtained aggregated costs implement algorithms category 
compared behavior implemented algorithms help measures average number unreachable nodes happen delay constrain delay path network certain destination 
need measure know algorithms find paths number destination nodes 
average cost attribute measures average cost paths source node reachable destination nodes 
average delay average delay paths source node reachable destination nodes 
average number steps attribute measures running time algorithms 
dijkstra cbf works heap number step represents events algorithm changes contents heap 
give exact results calculation number steps different cbf algorithms dijkstra complexity measurements calculations provide valuable feedback 
algorithms execute dijkstra times calculations complexity measure gives comparable results 
cost inefficiency measure calculated optimal cost measure cbf algorithm 
defined pa stands algorithm cost inefficiency calculated 
max characterize comprehensively results algorithms provided different delay constraints 
simulation environment simulation built random networks nodes average node degree reflecting real network values 
results measurements averaged 
topology networks generated random graph generator program 
cost value links varies uniform distribution 
propagation delay links selected ranges resemble delay characteristics nationwide network 
range ms represents short local links second range represents longer local links third range ms represents continental links 
ratio long local links configured percent ratio continental connections networks configured percent 
simulations changed delay constraint delay investigated effect paths different algorithms 
average number unreachable nodes algorithms measures routing algorithms comparable 
infocom experiments section iv investigate basic larac algorithms proposed improvements described details section iii experiments improved larac algorithm section iv 
comparison algorithms mentioned important result simulation average number unreachable nodes algorithms 
means algorithms managed find path satisfies delay constraint 
minimizing additive metric cost algorithms provide different results 
see average cost paths algorithms 
larac algorithm paths cbf paths higher cost worst cost achieved fallback 
result fallback meets expectations tell worse larac seen easily find paths higher cost optimal 
larac lower bound optimal path cost close results cbf 
delay constraint ms larac cbf fallback larac lower bound fig 

average cost maximum worst case cost max average worst case cost algorithms compared cost optimal cbf table table maximum average cost inefficiency algorithm max larac fallback larac lower bound seen section curves delay paths low cost cost path increases delay bound 
explanation phenomenon impossible find path source destination pairs small delay paths short costs small 
delay bound increases algorithms find longer paths average cost paths increases 
point path source destination pairs average cost paths decrease delay bound algorithms able find paths lower costs higher delay bounds 
effect noticed delay curves 
expected cbf highest delay larac fallback 
result got meets expectations surprise highest delay 
average delay delay constraint ms larac cbf fallback fig 

average delay average number steps algorithms compared 
see algorithms characteristic curve number steps 
routing step delay constraint ms larac cbf fallback fig 

average number step small delay constraints larac increasing running time find paths destinations number dijkstra executions increases 
reaches delay constraint allows paths nodes network number steps starts decrease minimum cost paths computed satisfy looser delay bounds eliminating execution second dijkstra algorithm get minimum delay path 
reason average number steps larac algorithm approximates number step single dijkstra algorithm high delay values 
infocom fallback decreasing characteristic difference linear section equals running time dijkstra algorithms 
section number steps decreases number steps dijkstra similar reasons explained larac 
implemented algorithm centralized manner simulations 
reason running time huge times running time dijkstra algorithm estimation plotted distributed implementation 
execution time dijkstra algorithms running time estimation distributed 
cbf totally different characteristic 
algorithm exit condition depends delay constraint increases delay horizontal section shows algorithm stopped paths heap 
improvements larac algorithm investigated optimization proposal effect performance larac algorithm 
optimization storing results aims improving running time basic larac algorithm 
simulations say gain routing step quite significant 
critical value delay bound ms gain earned 
second optimization improved condition affects running time cost paths modifies exit condition algorithm 
delay constraint ms larac larac storing larac md larac md larac md larac md fallback fig 

average number step show average routing step algorithms average cost computed paths 
see running time greatly decreases increase value maximal difference shortly md 
different results different md values 
table ii summarizes improvement algorithms running time help average iteration number 
provides average number times dijkstra algorithm executed algorithm 
notice original larac algorithm average iteration number improved md value decreased 
values impressive gain routing steps side coin 
examine average average cost delay constraint ms larac larac md larac md larac md larac md larac lower bound fallback fig 

average cost cost paths 
table 
increase cost 
md value average cost inefficiency increased 
similarly md value equals 
gain running time compared loss optimality path costs worthy 
algorithm provides way controlling trade optimality path running time algorithm 
average cost delay constraint ms larac larac md larac md larac md larac md cbf fallback larac lower bound fig 

average cost special network cbf node random networks cbf acceptable running time high delay constraints higher running time algorithms 
execution table ii summary average iteration number optimality costs algorithm average max iteration number larac md md md md infocom time cbf increases faster algorithms number nodes network increases large networks may undesirable high execution time 
network type shown cbf worse execution time nodes algorithms 

fig 

special network cbf network node connected node edges 
cost delay links marked arrows 
upper links high cost low delay way cost upper link higher sum costs lower links 
arrangement increase running time cbf delay different paths obtained 
easily seen kind chain networks running time cbf exponential number links 
adding node links running time algorithm doubles 
proposed new algorithm called larac known delay constrained cost problem common qos routing problem delay sensitive traffic considered 
evaluated performance different qos routing algorithms simulation 
compared running time algorithms optimality paths terms cost delay 
original larac algorithm best polynomial heuristic algorithms proposed far literature 
cost closest optimal cost computed cbf algorithm gives estimate optimality paths 
proposed improvements larac algorithm 
decreased running time significantly effecting cost paths second improvement decreased running time controllable loss optimality 
improved larac algorithm running time slightly greater cbf due stability kind networks reasonable algorithm solve dclc problem 
concluded simulations algorithm finds routes higher cost delay larac 
fallback algorithm execution time easy implement cost worst implemented algorithms 
cbf gives optimal cost solution surprisingly execution time cases certain situations running time undesirably high 
possible improvement larac algorithm extension handle constraints minimizing third 
example constraints delay hop number 
aggregated cost function contain tag cost delay hop number 
expectations complexity algorithm increase great manner extension true case cbf algorithm 
acknowledgments authors acknowledge suggestions aron 
georgiadis guerin peris rajan efficient support delay rate guarantees internet ibm watson research center parekh gallager generalized processor sharing approach flow control integrated services networks multiple node case ieee acm transactions networking june 
parekh gallager generalized processor sharing approach flow control integrated services networks multiple node case ieee acm transactions networking april 
szabo bro nemeth 
non rate proportional weighting generalized processor sharing schedulers globecom dec 
cruz calculus network delay ieee transactions information theory vol pp january 
guerin flow grouping reducing reservation requirements guaranteed delay service july stefan savage andy collins eric hoffman thomas anderson endto effects internet path selection acm sigcomm pp september 
guerin qos routing mechanisms ospf extensions internet engineering task force internet draft december progress 
guerin orda ariel qos routing networks inaccurate information theory algorithms ieee acm transactions 
vol june 
guerin implementation performance measurements qos routing extensions ospf proceedings infocom new york march 
shenker partridge guerin specification guaranteed quality service request comments proposed standard rfc internet engineering task force september 
zheng wang jon crowcroft bandwidth delay routing algorithms ieee globecom singapore november 
funda rakesh sinha lisa zhang qos routing costs ieee infocom pp march 
garey johnson computers intractability guide theory np completeness freeman new york 
hussein salama douglas reeves yannis distributed algorithm delay constrained unicast routing ieee infocom kobe japan april 
design evaluation routing algorithms realtime channels technical report tr university california berkeley june 
lee multi criteria routing subject resource performance constraints atm forum march 
chakraborty routing multiple qos requirements supporting multimedia applications journal high speed networks 
kenji ishida delay constrained cost path routing protocol synthesis method ieee 
cheng klara nahrstedt finding multi constrained paths icc atlanta georgia 
jeffrey jaffe algorithms finding path multiple constraints networks vol 
pp 
david george approximation algorithm combinatorial optimization problems parameters 
ahuja tomas magnanti james orlin network flows prentice hall upper saddle river new jersey 
de van multiple quality service routing algorithm pnni ieee atm workshop pp fairfax virginia may 
liang guo ibrahim matta search space reduction qos routing technical report nu ccs october 
infocom atsushi iwata atm routing algorithms multiple qos requirements multimedia internetworking ieice trans 
commun vol pp august held karp traveling salesman problem minimum spanning trees operations research pp 
held karp traveling salesman problem minimum spanning trees part ii mathematical programming pp 
gabor jozsa daniel random graph generator telecommunication networks technical report april 
fractional combinatorial optimization handbook combinatorial optimization editors du panos pardalos vol 
kluwer academic publishers december 
approximation schemes restricted shortest path problem mathematics operations research feb 
lorenz orda qos routing networks uncertain parameters ieee acm transactions networking dec 
danny raz yuval shavitt optimal partition qos requirements discrete cost functions infocom dean lorenz ariel orda danny raz yuval shavitt efficient qos partition routing unicast multicast iwqos june 
