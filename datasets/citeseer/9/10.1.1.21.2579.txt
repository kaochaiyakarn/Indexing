programming tools robots integrate probabilistic computation learning sebastian thrun computer science department carnegie mellon university pittsburgh pa describes programming language extension called ces specifically targeted mobile robot control 
ces design motivated series successful probabilistic methods mobile robot control goal facilitating development probabilistic software robot applications 
ces extends ideas computing probability distributions built mechanisms learning examples new means programming 
example program control mail delivering robot gesture interface illustrates ces may reduce code development orders magnitude 
ces differs special purpose programming languages field typically emphasize concurrency real time event driven processing 
years probabilistic algorithms popular mobile robotics 
probabilistic algorithms explicitly represent robot uncertainty explicitly enabling cope ambiguities noise mathematically sound elegant way 
probabilistic approaches typically robust traditional methods demonstrated series fielded systems rhino minerva tour guide robots 
equally popular idea learning robotics 
learning successfully applied design mobile robot software pomerleau autonomous alvinn vehicle trained watching human drive robot operation systems learn maps fly 
underlying mechanisms probabilistic computation learning generic transcend specific application 
development probabilistic software learning software tedious timeconsuming 
clear need programming tools support ideas facilitate robotic applications 
presents extension called ces short embedded systems integrates learning probabilistic reasoning 
probabilistic computation 
handle uncertain information data types provided represent probability distributions 
computing probability distributions similar computing conventional data types added benefit increased robustness 

learning 
ces provides function approximators necessary infrastructure credit assignment mechanisms train experience 
particular ces uses gradient descent learn distal target information 
chosen base language popularity robotics 
remainder describes major concepts demonstrates benefits context implemented mobile robot system 
probabilistic computation ces probabilistic data types assignments template prob constructs probabilistic variables conventional data types 
examples probabilistic variables prob prob prob parallel standard data types char int double 
probabilistic variables represent probability distributions respective base data types 
ces distributions represented lists values annotated numerical probability 
distribution finite list may contain value variable domain annotated probability 
continuous variables prob list sample approximation hypothetical true density 
constructed appropriately sample approximations converge speed denoting number samples 
reader may notice sample approximations applied great success robotics computer vision 
just conventional variables probabilistic variables initialized constants 
example assignment prob assigns dirac distribution probability centered 
finite distributions specified trough lists 
assignment assigns distribution elements probabilities respectively pr pr pr ces offers range frequently distributions normal uniform arithmetics probabilistic data types analogous arithmetic conventional data types 
example consider code segment prob statement generates new distribution values possible sums probabilities products corresponding marginal probabilities just ces offers type conversions conventional probabilistic variables 
suppose declared double declared prob 
statement prob assigns dirac distribution probability mass centered value inverse statement double assigns mean distribution computed obvious way 
additional means converting distributions values ces offers functions mean ml median variance 
independence keep probabilistic computation tractable ces implicit important independence assumptions probabilistic variables 
variables right hand side statements assumed independent joint distribution product marginal distributions pr pr pr independence assumption essential maintain tractability large ces programs 
see consider situation bayes networks popular alternative framework reasoning probabilistically 
bayes networks interpret statements constraints high dimensional joint distribution keep track implicit dependencies arising statements depends 
result evaluating bayes network marginalizing highdimensional joint distribution difficult specifically network possesses loops 
ces interprets program code computational transformations constraints joint distribution 
semantically closer conventional procedural programming languages 
ensures tractability large ces programs loops 
command ces independence assumption strong 
ces offers mechanisms explicitly maintaining dependencies arising computation command 
command provides sound mechanism maintain arbitrary dependencies limited code segment programmer choice 
syntax command follows var list var list var list var list lists probabilistic variables separated commas program code regular code 
variables may appear lists list may empty 
command interprets variables varlist probability density functions 
executes program code combinations values variables var list exception probability zero 
inside program code variables lists var list var list nonprobabilistic duals 
program code read values variables var list write values probabilistic variables var list 
execution things cached probability combination values probabilistic variables var list effect program code probabilistic variables var list 
constructs new probability densities probabilistic variables var list 
example consider code segment prob instruction loops combinations values 
program code executed result var list resides cached probability assigned values assigned result converted probability distribution variable var command provides sound way probabilistic variables commands loops loops see 
direct manipulation densities statements assign distribution pr yz pr pr zi manipulation called indirect 
combines iterating domains 
useful manipulate combine densities directly obtain pr pr pr achieved built functions multiply direct manipulation densities useful range operations including averaging multiple probabilistic variables implementing bayes rule 
example bayes rule pr ajb pr bja pr pr implemented ces divide multiply assuming holds pr bja holds pr holds pr 
perform direct manipulations sample approximation probability densities data type prob approximation complete density temporarily constructed samples density trees 
idea importance factors densities combined manipulating sample probabilities sample set tree generated sample set 
unfortunately space limits prevent describing mechanism greater detail 
learning support learning ces provides built function approximators mechanism credit assignment program code 
example programmer specify artificial neural network map raw camera images steering direction vehicle see famous example approach 
train program programmer may provide target signal target steering direction vehicle 
basic idea approach programmers leave gaps programs filled learning teaching 
leaving gaps function approximators created template fa requires data type input output 
currently input output double prob vectors thereof vector 
additionally programmer specify type function approximator 
example fa prob creates backpropagation neural network hidden layer hidden units maps vector doubles probability distribution vectors 
dimension vector obtained automatically function approximator 
created function approximators accessed special method eval vector dimension prob dimension eval output function approximator restricted lie 
current implementation offers collection function approximators backpropagation networks linear regression radial basis functions 
training ces programs trained method train defined probabilistic data types 
assignment train specifies desired value variable current point program execution 
variables type type prob type foo 
current implementation training operator induces quadratic error norm 
training operator encountered ces adjusts parameters contributing function approximators accordingly 
ces possess built built credit assignment mechanism uses gradient descent 
specifically probabilistic variable 
operation eval real world interface robot research 
schematics robot environment 
attaches sample denoted hx gradient px parameter function approximator gradients passed subsequent dependent probabilistic variables 
example program execution ces encounters statement gradients pz computed automatically chain rule differentiation 
training function executed desired parameter updates computed immediately gradients chain rule 
pleasing consequence programmer provide target signals directly output function approximator 
suffices provide target signals variable values depend parameters function approximator 
convenient enables programmers specify examples input output behavior code segments internally contain function approximator having generate examples input output behavior function approximator 
importance probabilities learning probabilistic computation key enabling factor ces learning mechanism 
conventional non probabilistic code usually differentiable 
consider example statement assumed type double 
obviously probability 
consequently program statements similar types probability alter gradients zero gradient descent change parameters adaptation occur 
left hand right hand hands gesture gesture gesture positive top row negative bottom row examples gestures 
fortunately picture changes probabilistic variables 
suppose type prob 
statement differentiable non zero gradients pr pr pr pr notice gradients zero 
differentiability probabilistic variables essential ces gradient descent function approximator 
proof concept mail delivery robot provide proof concept successfully implemented program mail delivery robot instructed gestures 
obviously single example insufficient demonstrate generality language time tell useful concepts 
example ces reduced length program orders magnitude compared previous implementation second example described led code orders magnitude shorter original implementation table shows full program development described detail 
program appropriate training sufficient robot shown deliver mail office environment 
robot instructed visual gestures shown delivers mail designated locations populated corridor environment labeled 
ces program lines long trained hours worth data 
program operates raw sensor data directly controls robot motors velocities 
successfully implements highly reliably robotic controller involving collision avoidance localization point point navigation gesture recog main declarations fa prob fa prob fa prob prob alpha prob theta prob prob coin 
prob prob double scan image double struct double rotation transl struct double dir stack int int initialization alpha uniform pi theta uniform pi main loop localization scan get sonar scan eval scan pi alpha multiply alpha coin coin pi theta multiply theta robot orientation theta int int theta pi int scan scan eval eval multiply robot coordinate multiply robot coordinate get odometry data prob rotation normal fabs rotation alpha alpha alpha pi alpha pi theta new orientation theta theta pi theta pi theta theta prob transl normal fabs transl cos theta sin theta truncate new coordinate truncate new coordinate gesture interface scheduler image eval image eval image wait gesture double stack xa location stack stack ya stack dir double stack xb location stack stack yb stack dir stack home location stack stack stack dir stack dir reached goal 
double stack robot depth horn wait button navigation stack stack theta double atan double theta location goal pi pi pi rotate left rotate right fabs pi translation go ahead double convert double double convert double sonar set velocity training command alpha train enabled training 
train removed 
train train train table complete implementation mail delivery program 
line numbers added reader convenience 
functions capital letters get set 
part interface robot 
nition high level scheduling deliveries ambiguous dynamic environment 
program uses neural networks recognize gestures camera images lines 
depending gesture robot schedules target locations lines navigates lines 
target locations robot horn waits person pick mail lines 
doing maintains accurate probabilistic estimate location world coordinates sonar readings neural networks bayes rule update belief lines 
robot avoids collisions unexpected obstacles humans proximity obstacles plot robot trajectory raw odometry consecutive runs pieces mail delivered 
shown raw sonar measurements 
robot reaches various destination points high accuracy despite significant error robot odometry 
line 
described code developed stages interleaving conventional programming teaching 
train various function approximators lines data sets collected labeled manually localization lines gesture interface lines 
collecting labeling data took hours mobile robot graphical interface data labeling 
ces program sufficient control mobile robot reliably crowded environment despite shortness 
extensive tests robot navigated extended periods time populated corridor loosing position colliding obstacle 
shows example trace raw data recorded minutes continuous deliveries sonar measurements odometry measurements 
notice raw odometry insufficient track robot position 
program reliably navigated robot correct location high accuracy tests independently collected data error rate gesture interface consistently despite simplicity measured independently collected testing examples 
mail delivery gesture human robot interaction problems ai mobile robotics community 
short program obviously restricted ways robot operate single corridor key result new language able provide solution line program hours training 
comparable systems usually require orders magnitude code considerably difficult implement see example various chapters 
second example demonstrates lines state art mobile robot localization algorithm implemented lines ces code 
related large number robot application illustrates great power probabilistic methods learning robotics 
similar applications benefit greatly ces mechanisms described sufficiently generic support broad range useful mechanisms probabilistic robotics 
probabilistic reasoning 
vast majority uai bayes networks represent probabilistic knowledge declaratively procedurally ces 
bayes networks seen version programming language example lacks loop statements 
contrary ces employ probabilistic separate inference mechanisms compute desired quantities marginal distributions 
implications discussed section 
compared ces approaches advantage support reasoning multiple directions output network input 
ces richer includes conventional means programming different semantics 
procedural computation knowledge representation thing avoiding serious computational problems scaling large programs currently exist large bayes networks 
machine learning 
machine learning point view ces provides means integrating prior knowledge program code learning 
previous approaches knowledge induction originated require declarative representations prior knowledge 
ces represents knowledge procedurally 
declarative representations require inference methods timing unpredictable rarely robotics 
ces differs procedural approaches generic programming learning components keep human provided program code intact making easier programmers understand code learning 
robotics 
various ai researchers proposed specialpurpose programming languages robots similar embedded systems 
existing languages typically support concurrency event driven execution restricting design program modules 
issues entirely orthogonal pursued ces 
discussion trends mobile robotics suggest probabilistic robotics robot learning viable means designing robot software existing programming tools provide support probabilistic computation learning 
described language extension specifically developed robots sensor embedded systems 
introduces new ideas previously general purpose programming languages probabilistic computation exemplar learning teaching 
software development ces interleaves phases conventional programming phases program taught examples 
result functions difficult program hand easily trained learned 
ces probabilistic data types facilitate computation uncertain information generated sensors provide additional robustness aid learning 
primary benefit ces extension facilitates rapid development robust software 
validate claim example program mail delivery robot 
example demonstrated improvement size code program development time order magnitude compared today best practice 
course single example second insufficient fully assess advantages new programming framework ideas underlying ces extremely generic hopeful similar benefits obtained applications 
integrating probabilistic computation learning popular procedural programming language hope facilitate dissemination important ideas mainstream robotics 
ideas probabilistic computation learning shown great promise range state ofthe art robot applications hope integral part robot application faced inaccurate sensing unpredictable dynamic environments 
acknowledgments author frank pfenning park invaluable input project 
research sponsored part darpa contract number rome labs contract number national science foundation regular number iis career number iis gratefully acknowledged 
brooks 
intelligence reason 
ijcai 
burgard cremers fox lakemeyer schulz steiner thrun 
interactive museum robot 
aaai 
burgard cremers fox lakemeyer schulz steiner thrun 
experiences interactive museum tour guide robot 
artificial intelligence appear 
dellaert burgard fox thrun 
condensation algorithm robust vision mobile robot localization 
cvpr 
elfes 
occupancy grids probabilistic framework robot perception navigation 
phd thesis ece cmu 
firby 
investigation reactive planning complex domains 
aaai 
fox burgard dellaert thrun 
monte carlo localization efficient position estimation mobile robots 
aaai 
gat 
esl language supporting robust plan execution embedded autonomous agents 
aaai fss 
heckerman 
tutorial learning bayesian networks 
tr msr tr microsoft research 
kahn swain firby 
gesture recognition perseus architecture 
cvpr 
koller 
learning approximation stochastic processes 
icml 
konolige 
language reactive control 
ki 
kortenkamp bonasso murphy editors 
ai mobile robots case studies successful robot systems mit press 
kortenkamp huber bonasso 
recognizing interpreting gestures mobile robot 
aaai 
koza 
genetic programming programming computers means natural selection 
mit press 
mitchell 
machine learning 
mcgraw hill 
moore schneider deng 
efficient locally weighted polynomial regression predictions 
icml 
neal 
probabilistic inference markov chain monte carlo methods 
tr crg tr university toronto 
pearl 
probabilistic reasoning intelligent systems networks plausible inference 
morgan kaufmann 
pomerleau 
rapidly adapting neural networks autonomous navigation 
nips 
simmons koenig 
probabilistic robot navigation partially observable environments 
ijcai 
tanner 
tools statistical inference 
springer 
thrun 
bayesian landmark learning mobile robot localization 
machine learning 
thrun 
framework programming embedded systems initial design results 
tr cmu cs cmu 
thrun burgard cremers dellaert fox rosenberg roy schulte schulz 
minerva second generation mobile tour guide robot 
icra 
