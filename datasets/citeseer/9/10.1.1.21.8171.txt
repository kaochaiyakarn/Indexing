ensemble prediction sat search behaviour ain maarten de rijke johan van benthem institute language logic computation university amsterdam nieuwe wv amsterdam netherlands email mdr illc uva nl attempting solve instance satis ability problem ascertain instance hand put information selecting tuning sat algorithm solve instance 
argue ensemble approach describe illustrative example methodology applied determine optimal restart cuto points systematic backtracking search procedures sat 
discuss methodology indicate applied evaluate strategies restarts algorithm comparison randomization portfolios algorithms 
priori predictions satis ability computationally hard problem 
face intractability need solve instance sat option set tackling currently available algorithms 

selected algorithm parameter settings strategies 
supported project logic action netherlands organization scienti research nwo project number 
preprint submitted elsevier science may line thinking leads general question 
sat instance seen priori predictions 
priori mean attempting solve instance 
allow cursory scan instance permitting say steps 
properties useful predictions cost hard instance 
predict degree con dence expect solve instance minutes days years 
size instance best prima facie indicator computational cost 
solubility expect instance satis able 
existence distinct satis able unsatis able phases sat ensemble problems give indication probability instance satis able ratio clauses variables 
strong heuristics versus randomization strong heuristics example branching rules lead quicker solution 
heuristics 
randomization bene cial 
randomization appropriate :10.1.1.112.8065
restart susceptibility instances search cost vary enormously run run 
search attempt may better cut losses give start :10.1.1.27.2863
restart strategies possible 
instance susceptible 

extent search parallelized 
bene gained running number processes parallel balance overhead coordinating processes 
issue closely related restart strategies similar analysis applied 
algorithm suitability sat algorithm available decide instance quickly 
resource budgets available time number processors storage limited available resources best allocated 
portfolios portfolio algorithms suitable available resources processor time processors storage allotted algorithms 
new instance approaches prediction possible 
view instance element drawn ensemble 
properties instance number clauses number variables connectivity measured 
predictions behaviour instance search knowledge behaviour instances ensemble having properties 
alternatively sidestep notion statistical ensemble look directly measurable parameters instance provide indicators behaviour search 
refer ensemble independent parameters refer approach ensemble prediction 
may intuitively direct measure ensemble independent parameters bring ensemble consideration see diculties measuring ensemble independent parameters statistical considerations concerning ensembles suggest may promising 
rest look ensemble independent parameters methodology ensemble prediction compare 
show methodology applied rigorously deriving criteria restart strategies 
conclude discussion methodology 
ensemble independent parameters kolmogorov complexity theory elegant appealing approach capturing inherent complexity individual objects independently origin 
attempts relate hardness sat instance kolmogorov complexity turn related incompressibility 
attempts fact kolmogorov complexity computable roughly approximable 
claimed algorithms hard problems behave general certain hard instances exist 
hard instances particular non random structure compressible 
evidence consistent view 
rare exceptionally long runs appear due choices algorithm due inherent hardness instance 
performing runs randomized algorithm shows runs long 
selman kirkpatrick conclude practical consequence instances tested inherently hard 
hogg considers entropy instance parameter applies process generates instances instance 
practical measure readily computable considers approximate entropy 
experiments show correlation approximate entropy clustering nds correlation instance hardness approximate entropy 
concludes pessimistically results suggest additional readily computable problem parameters predict search cost number solutions 
ensemble prediction consider sat ensemble subject empirical investigation 
building picture runtime behaviour algorithms range values parameters sat predict behaviour new instance behaviours instances measured sample 
generally sat ensemble covers entire sat problem principle predictions sat instance 
illustrate ensemble predictions applied bayesian methods predictions restart strategies pro les 
criteria performing restarts point departure derive formulae applied empirically measured distributions provide cuto points optimal criteria 
criticisms levelled ensemble approach variance behaviours ensemble large limiting accuracy predictions ensemble averages 
instance regarded having sampled di erent ensembles 
justi cation predicting behaviour instance instances ensembles answer rst point base predictions averages descriptive statistics complete runtime distributions rtd ensemble 
give fuller picture runtime behaviour requiring data collected necessary calculating standard descriptive statistics 
justi cation second point fundamentals theory statistical inference samples 
predictions assumption instance drawn ensemble depend variance properties ensemble typicality instance ensemble 
degree con dence quanti ed measure reliability prediction 
mapping sat currently running large experiment collect runtime data dpll style algorithm running sat instances range sizes containing variables 
purpose experiment generate data set analyzed provide answers questions posed rst section 
particular data set results section provide optimal cuto restart strategies 
restart restart techniques csps explored authors 
gomes noting signi cant variability runtimes di erent presentations single problem instance give methods introducing controlled randomization complete systematic backtrack search procedures csps leading randomization rapid restart rrr strategy 
behaviour procedures modelled pareto evy distributions proven randomization methods eliminate heavy tails distributions tails exist 
obtain call near optimal cuto value trial error process varying cuto value 
approaches nding suitable cuto tried kautz iterative deepening walsh iterative deepening geometric progression randomization geometric restarts 
ad hoc restart strategies sat csps non systematic methods global optimization stochastic search genetic algorithms 
best knowledge provide rst rigorously derived optimal cuto points restart criteria 
similar spirit feel underestimated potential analysis 
luby describe existence optimal strategy interesting theoretical observation little value practice requires implementation detailed information distribution runtimes 
optimistic light observations techniques tune search algorithm run problem instances drawn known ensemble 
example satis ability tester may required application generates instances similar lead bene cial restart strategy 
restart techniques shown scale systematic way restart schedule calculated running small instances scaled improve behaviour algorithm larger instances 
restart criteria speak run mean execution search algorithm termination restarts 
run complete execution standard sense word 
execution search algorithm restart strategy consist sequence runs search algorithm 
runs aborted predetermined number steps cuto starting new run 
optimization random variable number steps takes search algorithm halt single run 
probability density function associated consider events algorithm halts precisely steps 
algorithm runs steps halting 
similarly events probabilities associated events notation hxi expectation event expectation run time algorithm hni derive conditions restarting criteria 
rst write events sans serif font distinguish symbols denoting numbers truth values 
purely distribution comparison continuing current run initiating new run 
run stated words criterion performing restart expected number steps starting scratch expected number steps remaining current run 
steps completed expected total number steps current run 
criterion restart smallest number steps hni criterion compares just runs current run newly initiated run 
obtain expression apply bayes theorem expression determine expectation total number steps runs halt rst steps np plugging expressions criterion get notation expression value proposition true 

runtime frequency distribution restart algorithm steps algorithm halted smallest positive integer satisfying criterion 
account probability satis ability instance sat ratio clauses variables gives indication probability instance satis able 
evidence indicates transition satis able region unsatis able region approximately 
values vast majority instances satis able vast majority instances unsatis able values basis put prior belief concerning satis ability instance 
precise prior assumed convenience take prior belief lumping frequencies runs distribution measure separately runtime frequency distributions instances turn satis able unsatis able respectively 
distributions quite distinct 
events instance satis able unsatis able respectively 
previous subsection consider run halted steps calculate consequences beliefs steps run take steps restarted run take satis ability instance 
bayes theorem sjm partition space events write giving sjm interpret sjm posterior belief concerning satis ability instance knowledge run failed halt steps 
write sjm 
calculate form criterion takes advantage information need expressions 
expressions terms posterior reasoning write application bayes theorem corresponding expectations hni np np plugging expressions criterion get criterion applied algorithm restarted criterion restart derived time prior place iterating nd schedule restarting points rst second subsequent restarts termination 
allows start scratch start time knowledge runs lengths failed terminate 
knowledge uences belief instance satis able 
instance sat values criterion calculate advance optimal sequence restart cuto call sequence restart schedule instance 
discussion considered relative merits ensemble independent parameters ensemble methods making priori predictions sat instances 
propose methodology ensemble prediction bayesian methods 
illustrated methodology deriving criteria restart strategies systematic backtracking search procedures sat 
methodology applied provide testable results comparison algorithms optimization algorithm portfolios parallelization algorithms algorithm randomization 
note results tested empirically evaluate just accurately ensemble predictions properties 
mentioned earlier currently collecting large data set sat ensemble 
directed analyzing data evaluate practical usefulness approach 
roberto bayardo robert schrag 
csp look back techniques solve real world sat instances 
proceedings national conference arti cial intelligence pages 
aaai 
cheeseman kanefsky taylor 
really hard problems 
proceedings ijcai pages sydney australia 
cook 
complexity theorem proving procedures 
proceedings rd annual acm symposium theory computation pages 
association computing machinery 
crawford baker 
experimental results application satis ability algorithms scheduling problems 
proceedings national conference arti cial intelligence pages 
aaai 
james crawford larry auton 
experimental results crossover point random sat 
pages 
elsevier 
davis logemann loveland 
machine program 
comm 
acm 
davis putnam 
computing procedure quanti cation theory 
acm 
ian gent toby walsh 
easy problems hard 
arti cial intelligence pages 
gomes selman 
algorithm portfolio design theory vs practice 
proceedings thirteenth conference uncertainty arti cial intelligence uai pages providence ri 
carla gomes bart selman 
ne structure large search spaces 
ieee 
carla gomes bart selman henry kautz 
boosting combinatorial search randomization 
proceedings fifteenth national conference arti cial intelligence tenth innovative applications arti cial intelligence conference aaai iaai pages madison wisconsin usa 
aaai press mit press 
carla gomes bart selman ken mcaloon carol randomization backtrack search exploiting heavy tailed pro les solving hard scheduling problems 
aips pittsburg pa usa june 
ronald graham donald knuth oren patashnik 
concrete mathematics foundation computer science 
addison wesley 
hogg williams 
expected gains parallelizing constraint solving hard problems 
proceedings twelfth national conference arti cial intelligence pages 
tad hogg 
search problems random 
proceedings fifteenth national conference arti cial intelligence tenth innovative applications arti cial intelligence conference aaai iaai pages madison wisconsin usa 
aaai press mit press 
tad hogg bernardo huberman colin williams editors 
special volume frontiers problem solving phase transitions complexity volume arti cial intelligence 
elsevier march 
hooker vinay 
branching rules satis ability 
automated reasoning 
holger hoos 
stochastic local search methods models applications 
phd thesis universit darmstadt 
hu 
random restart global optimization 
bernardo huberman rajan lukose tad hogg 
economics approach hard computational problems 
science january 
henry kautz bart selman 
unifying sat graph planning 
thomas dean editor proceedings sixteenth international joint conference arti cial intelligence ijcai pages stockholm sweden july 
morgan kaufmann 
ming li paul vit anyi 
kolmogorov complexity applications 
springer verlag nd edition 
michael luby wolfgang 
optimal parallelization las vegas algorithms 
patrice ernst mayr klaus wagner editors stacs th annual symposium theoretical aspects computer science volume pages 
springer february 
michael luby alistair sinclair david zuckerman 
optimal speedup las vegas algorithms 
info 
proc 
lett september 
david mitchell bart selman hector levesque 
hard easy distributions sat problems 
proceedings tenth national conference arti cial intelligence pages 
aaai 
bart selman scott kirkpatrick 
critical behaviour computational cost satis ability testing 
pages 
elsevier 
bart selman david mitchell hector levesque 
generating hard satis ability problems 
pages 
elsevier 
extension 
dan 
particular structure hard instances 
proc 
th national conf 
arti cial intelligence aaai pages menlo park ca 
aaai press 
toby walsh 
search small world 
thomas dean editor proceedings sixteenth international joint conference arti cial intelligence ijcai pages stockholm sweden july 
morgan kaufmann 

