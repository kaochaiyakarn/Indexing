comparison approaches building vertical search tool case study nanotechnology domain michael chau chen qin zhou yi qin wai ki sung daniel mcdonald artificial intelligence lab department management information systems university arizona tucson arizona usa qin wai ki dmm bpa arizona edu web growing exponentially increasingly difficult search desired information 
years domain specific vertical search tools developed serve information needs specific fields 
describes approaches building domain specific search tool 
report experience building different tools nanotechnology domain server side search engine client side search agent 
designs search systems discussed strengths weaknesses compared 
research directions discussed 
categories subject descriptors information storage retrieval information search retrieval clustering information filtering search process digital libraries 
keywords information retrieval web search engine vertical search engine internet spider internet searching browsing post retrieval analysis indexing noun phrasing selforganizing map personalization summarization 
web rich source information field ranging music histories sports movies science culture 
increasingly difficult search desired information web 
users facing problem information overload search general purpose search engine google www 
google com results thousands hits 
user specify search domain permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
jcdl july portland oregon usa 
copyright acm 
medicine music search query may bring web pages outside desired domain 
example user searching cancer may get web pages related disease related sign 
result user browse list results identify relevant web pages task requires significant mental effort 
directory services yahoo 
www yahoo com provide users hierarchy classified topics 
precision high recall rate suffers page included results manually evaluated 
report experience building customized search tool nanotechnology domain 
nanotechnology study science technology scale meter 
fastest growing disciplines science technology 
ability manipulate substances molecular level provides great opportunities various applications circuits tiny computers travel patient disease diagnosis 
nanotechnology young fast growing web important medium researchers practitioners seeking date information 
information sources quality web diverse 
useful nanotechnology information include scientific papers journals technical reports web pages widely varied quality 
result users need go multiple information sources web sites search engines online academic databases conduct significant manual analysis identify quality time critical information 
addition nanotechnology domain encompasses diversity research perspectives application areas physics medicine electronics 
resulted terminology vocabulary differences 
researchers different disciplines different terminologies describe findings user search terms may indexing terminologies databases 
addition exists dichotomy academia industry field 
seeks long term research issues second focuses short term development 
language differences problem worse researchers discipline come variety regions countries 
research findings written language english difficult search web 
diversity overwhelming interest field speed knowledge creation information generation faster resulting problem known fluidity concepts complicates retrieval issue 
concept may perceived differently different researchers may convey different meanings different times 
subcategories field changing quickly established fields new categories evolve frequently 
result building successful domain specific search tool provide information search analysis capabilities young evolving field challenging somewhat uncertain 
address problems project undertaken develop integrated shopping service domain 
project divided phases 
aimed develop domain search tool basic search categorization functionalities 
second phase focused enhancing analysis capabilities tools incorporating functions vocabulary suggestion multi lingual support 
approaches adopted compared 
develop domain specific vertical search engine accessible web users perform searches domain 
involved sending spiders search agent programs automatically collect web pages nanotechnology domain create pages index searchable users web interface 
second approach involved building client side search tool search agent installed run user computer 
kind search agent collect pages web fly retrieve search results search engines process called meta search 
compared approach method allows computer processing time memory allocated search process functionalities possible 
client side search tool allows users control personalization options search process 
continuous growth web important urgent develop vertical search tools address information needs various domains 
developers carefully choose suitable approach specific user needs 
analyze compare strengths weaknesses approaches prototype systems nanotechnology domain built analyzed 
compare discuss pros cons adopting approaches 
knowledge compare prototype vertical search tools built approaches 
rest organized follows 
section reviews related research products including web search engines search agents post retrieval analysis 
section describes architecture server side web vertical search engine approach section describes architecture client side meta search approach 
section compare approaches discuss advantages disadvantages 
section conclude suggest research directions 
related web search engines general purpose search engines search engines built help users find want web 
search engines rely spiders crawlers traverse web collect pages hyperlinks 
earliest search engines world wide web worm built indexes documents provides users search interface 
webcrawler lycos examples early search engines operation today 
size web increased exponentially years search engines grown similar scale 
december google www google com largest search engines pages database 

typical search engine architecture architecture typical search engine shown 
search engine usually consists components spiders crawlers collect web pages internet different graph search algorithms 
indexer index web pages store indices database 
retrieval ranking retrieve search results database ranked results users 
user interface allow users query database customize searches 
domain specific search engines web continues grow general purpose search engines longer satisfy needs users searching specific information topic 
domain specific search engines known vertical search engines built facilitate efficient search particular domains 
search engines usually provide precise results customizable functions 
instance com specializes searching legal information web www com searches web pages 
examples include www com www com www com 
personal web search agents opposed server side search engine allows multiple users submit search queries web site personal search agents designed run search sessions user computer 
web software programs concept spiders agents softbots developed 
prominent early example 
users enter keywords specify depth width search links contained current homepages displayed request spider agent fetch homepages connected current homepage 
uses fish search algorithm modified best search method 
powerful clientside spiders developed 
example blue squirrel www com www 
com connect search engines monitor web pages changes schedule automatic search 
inquirus known neci meta search engine downloads actual result pages generates new summary page search query 
pages longer available dead links longer contain search terms filtered search results 
connects search engines performs categorization combined search results 
focused crawler locates web pages relevant pre defined set topics example pages provided user 
addition analyzes link structures pages collected 
post retrieval analysis commercial web search systems search results users list urls titles ranked estimated relevance user search query 
lists provide users quick feel documents retrieved 
users know little document content click read 
time consuming disruptive dynamic fast changing electronic information environment 
alleviate problem techniques developed perform analysis retrieved results 
applying automatic indexing algorithm technique widely extract key concepts textual data 
linguistics approaches noun phrasing employed perform indexing phrases just words 
techniques useful extracting meaningful terms text documents document retrieval analysis 
categorization clustering kind analysis 
goal classify documents different categories automatically 
categorization tools allow users quickly identify key topics set search results returned search engine 
vivisimo www vivisimo com northernlight www 
northernlight com commercial examples 
search engines put search results folders represents subtopic 
document clustering general approaches 
documents categorized individual document attributes 
attribute query term frequency document 
northernlight example approach 
retrieved documents organized size source topic author document 
examples include envision 
second approach documents classified inter document similarities 
approach usually includes kind machine learning algorithms 
example self organizing map som approach classifies documents different categories defined process neural network algorithm 
algorithm som technique automatically categorizes documents different regions similarity documents 
produces data map consisting different regions contains similar documents 
regions similar located close 
systems utilizing technique built 
text summarization post retrieval analysis technique helps users understand set retrieved documents 
approaches text summarization vary greatly 
distinction commonly approaches utilize text extraction utilize text abstraction 
text extraction common approach utilizing sentences document create summary 
early examples summarization 
user searches 

user clicks result link view web pages 

search results categorized subtopics medical human body map 
user click region see relevant pages 

search results displayed user ranked list 

system summarizes web page sentences 

sample user session techniques text extraction 
sentences text thought limit bias appear summary 
text abstraction programs hand produce grammatical sentences summarize document concepts 
formation may better fit idea summary creation involves greater complexity difficulty 
ai summarizer utilizes text extraction 
various techniques identify sentences effectively summarize document 
luhn utilized word frequency rules late identify sentences summaries 
language oriented heuristics cue phrases sentence position sentence length added early 
information retrieval style methods break documents segments 
segments topics sentences selected form summaries 
server side vertical search engine approach approach built server side web search engine nanotechnology domain called 
similar typical vertical search engine collects pages web indexes pages stores indexes database provides users webbased interface search nanotechnology related pages database 
sample user session shown 
user search term web interface step 
example 
search query sent back search engine results displayed user step 
typical search engine user click result see corresponding web page 
user summarize web page built text summarizer step 
additionally user request system extract key concepts pages arizona noun phraser categorize web pages topic map som step 
example pages categorized topics medical human body 
system architecture follows typical search engine architecture discussed section 
main technologies include html java java server page jsp java bean java servlet 
architecture shown 
right hand side shows batch process building search engine 
simple vertical spider developed java collects web pages nanotechnology domain calculates number inlinks hyperlinks pointing page web sites 
pages collected spider processed indexer generate index files 
information index files loaded oracle database automatically tool called sql loader 
left hand side shows search process demonstrates search engine interacts users 
different components connected middleware implemented jsp file 
search queries user interface passed middleware converted proper format 
middleware generates executes sql statements java bean file retrieve relevant web pages database 
retrieval results returned user interface 
user wants perform analysis retrieval set find precise results middleware invokes ai summarizer self organizing map som java servlet files 
som java servlet ai summarizer user user interface middleware jsp java bean database oracle internet vertical spider 
architecture web pages indexer index files sql loader search process build process vertical spidering indexing vertical spider program developed java research group collect nanotechnology related pages web 
urls nanotechnology domain manually identified reviewing set pages neighbor pages obtained searching word nanotechnology yahoo 
google 
urls seed urls spider program 
spider collects pages links page collected simple breadth search algorithm 
spider stops specified number pages collected 
prototype spider downloaded pages 
pages collected indexer program developed language index word occurrence page 
indexer records frequency term appears document 
number inlinks page calculated 
data loaded database 
document retrieval ranking user types search term user interface clicks search button term passed middleware 
middleware separates string single keywords removes words common predefined stopword list 
sql query retrieve web page records containing search term generated executed database connection java bean program 
retrieval results returned middleware java bean contains basic information url page title page description page information ranking purpose number inlinks frequency keywords appearing page tf document frequency pages containing keywords idf 
system idf calculated log total number pages number pages containing keywords 
factors considered page ranking relevance page content popularity page 
relevance represented tf idf popularity represented number inlinks 
system popularity considered little important ranking content relevancy final score calculated page inlink tf idf 
weights arbitrary easily adjusted 
results retrieved sorted score 
ranking results returned user interface displayed user 
addition showing search results traditional ranked list provide users graphical way visualize search results 
search result picture flower called represents quality particular web page see step 
size flower represents term frequency number petals represents number inlinks 
larger flower indicates page relevant search string flower indicates page popular 
provides intuitive way users find pages want 
post retrieval analysis important extract key concepts retrieved document order perform post retrieval analysis 
arizona noun phraser developed research group serves purpose 
extracts noun phrases document part speech tagging linguistic rules 
components 
tokenizer takes web pages text input creates output conforms upenn treebank word tokenization rules separating punctuation symbols text interfering textual content 
tagger module assigns word document part speech designation 
module called phrase generation module converts words associated part speech tags noun phrases matching tag patterns noun phrase pattern established linguistic rules 
example phrase carbon tube considered valid noun phrase matches rule noun noun sequence forms noun phrase 
phrases built post retrieval analysis tools ai summarizer self organizing map som 
user summarize web page retrieval result ai summarizer 
summarization help user decide quickly page interesting 
ai summarizer utilizes segmentation summarization methods identify representative sentences document 
process accomplished main steps sentence evaluation segmentation topic boundary identification segment ranking 
step sentence evaluation involves ranking sentences original document existence cue phrases sentence position sentence paragraph frequency terms sentence relative document existence proper nouns 
second step document processed segmentation algorithm similar texttiling 
texttiling algorithm analyzes document determines topic boundaries located 
topic boundary thought place author document changes subjects themes 
texttiling algorithm divides text blocks equal size blocks compared similarity function jaccard score 
low similarity score adjacent blocks indicates segment topic boundary 
step summarization process involves ranking segments evaluation sentences segment 
program produces summary document extracting highest ranking sentences document required summary length reached 
uses som give users overview set documents collected 
som employs artificial neural network algorithm cluster web pages collected different regions map automatically 
som document represented input vector keywords dimensional grid output nodes created 
distance input output node computed node minimum distance selected 
network trained repeated presentation inputs documents submitted trained network region labeled phrase key concept represents cluster documents region 
important concepts occupy larger regions similar concepts grouped neighborhood 
map displayed user interface user view documents region clicking 
client side meta search agent approach second approach implemented client side search agent called system developed previous research 
client side search tool built microsoft visual combination java classes windows foundation classes dynamic link libraries dll 
connects general purpose search engines processes combined search results arizona noun phraser 
user searches chosen search engines 

results multiple search engines shown user 

sample user session som way similar 
section discuss architectural design customization 
sample user session shown 
user input search term chose preferred search engines step 
example user input search term 
search query sent chosen search engines results combined shown user step 
browsing search results user request system fetch pages web extract key concepts pages arizona noun phraser step 
user categorize web pages topic map som step 
system architecture system architecture shown 
main components user interface search spiders arizona noun phraser som 
architecture components customized perform web search analysis nanotechnology domain 

key topics concepts extracted web pages 

web pages categorized topic map 
user interface search query search results key phrases selected phrases topic map nano spider general search search spiders arizona noun phraser som search results key phrases lexicon 
architecture engines search engines academic db search engines news search engines meta search design searches multiple search engines presents combined results process called meta searching 
search spiders developed perform meta searching 
tasks search spiders include formulating url specific search engine search query fetching search result search engine parsing search result details url title description search result result page fetched html format analyzing search results presenting user 
steps vary search engine search engine format querying database presenting search results 
original connected general purpose search engines wider range data sources 
categories search engines 
category general purpose search engines altavista excite google goto lycos locate pages web aiming high coverage 
second category involved nanotechnology specific search engines aims high precision searching pages nanotechnology domain 
third category consists academic literature search engines ieee xplore medline tries locate journal articles abstracts may covered search engines 
fourth category news search engines usa today abc news trying retrieve latest breaking information searching online news articles 
data sources added easily data sources 
post retrieval analysis incorporated arizona noun phraser som post retrieval analysis 
algorithms discussed section 
search spiders get results different search engines user browse list search results 
user wants perform analysis result set system fetch result pages web send arizona noun phraser extracts key phrases web page 
frequency phrase recorded sent back user interface 
user view document frequency phrase link documents containing phrase 
documents processed data aggregated sent som categorization 
map generated displayed user 
opening saving search sessions important functionality incorporated system save function 
user save completed search session file local computer open time 
feature allows user perform search review 
helps users want monitor pages web site particular topic 
comparisons server side client side approaches successfully applied building vertical search tool nanotechnology domain 
section analyze compare strengths weaknesses approaches experience prototype systems 
accessibility usability server side approach allows users access search service easily web site 
user web browser search tool conveniently platform windows linux macintosh software download installation needed 
web browser interface server side search tool accessed familiar users 
increases usability system 
hand client side search tool presents issue installation 
user download installation file web install software computer 
poses problem users incompatible computers operating systems 
current works ms windows environment ms windows specific java virtual machine particular version installed 
java virtual machine ms windows specific users linux macintosh computer able system 
pure java build search tool alleviate problem extent users need kind java environment installed order tool 
solution bundle java runtime environment software installation package 
greatly increases size package download time needed 
scalability web deal users perform searches time 
processes spidering indexing performed batch mode processes performed thefly arizona noun phraser som ai summarizer 
high computational requirements modules difficult serve large number users increased investment server computers network bandwidth 
computer servers handle moderate number web pages search queries large scale search engine google reported need computer servers collect index web pages response search queries 
hand multiple users concurrently different copies software installed computers 
number users constrained central server processing power server network bandwidth 
easily customizable 
server side scenario user settings saved database retrieved user logon 
memory consuming store complete search sessions users 
saving data server provides great opportunities research web log mining 
issue security privacy needs handled cautiously server approach 
client user settings search sessions saved user local computer requiring space centralized server 
allows functionalities runs user computer processing time memory utilized 
categorization techniques requiring heavy computation client side tool having worry number simultaneous users case server side search engines 
maintainability server side tool easy modify 
changes algorithm interface incorporated way transparent users 
users go web site enjoy improved service 
client side comparatively difficult update user needs repeatedly download install software patch change 
difficult upgrade maintain software 
data source altavista changes query result display format dramatically handle modified user download install new component 
solution embed component permit check automatic update time software invoked 
example system approach 
directions report experience different approaches building customized search tool nanotechnology domain 
demonstrate feasibility approaches 
approach strengths weaknesses choice depend objective tool built 
size targeted audience functionalities quality requirements tool impact decision 
research plan includes conducting detailed user experiment compare performance usability user perception level satisfaction search tools 
users prefer web service prefer piece downloadable software 
plan test individual components order identify integrated techniques contribute improvement performance 
prepare conduct user studies evaluate visualization techniques som system 
currently expanding web portal called 
plan study broader educational social issues related creating complete community service nanotechnology engineers scientists 
search tools available local student groups public internet 
evaluate instructors students interact search tools nanotechnology classes 
plan evaluate social impact search tool nanotechnology community 
acknowledgments research supported part nsf nse intelligent web searching science engineering cts january september 
nsf digital library initiative high performance digital library systems information retrieval knowledge management iis april march 
nsf cise css intelligent cscw workbench analysis visualization agents iis june june 
li ji chip la members artificial intelligence lab university arizona contributed design implementation search tools 
go anonymous reviewers invaluable comments 
bowman danzig manber schwartz scalable internet resource discovery research problems approaches communications acm 
brin page anatomy large scale hypertextual web search engine 
proceedings th international world wide web conference www brisbane australia apr 
chakrabarti van den berg dom focused crawling new approach topic specific web resource discovery 
proceedings th international world wide web conference www toronto canada may 
chau chen qin zhou sung chen qin mcdonald web portal science technology 
proceedings nd acm ieee cs joint conference digital libraries jcdl portland usa july 
chau zeng chen personalized spiders web search analysis 
proceedings acm ieee cs joint conference digital libraries jcdl va usa june 
chen collaborative systems solving vocabulary problem ieee computer special issue computer supported cooperative cscw 
chen fan chau zeng meta searching categorization web journal american society information science technology 
chen internet categorization search self organizing approach journal visual communication image representation 
genome databases science 
debra post information retrieval world wide web making client searching feasible 
proceedings international world wide web conference geneva switzerland 
fox hix nowell wake rao users user interfaces objects envision digital library 
journal american society information science 
furnas landauer gomez dumais vocabulary problem human system communication communications acm 
hearst texttiling segmenting text subtopics passages 
computational linguistics 
hearst pedersen reexamining cluster hypothesis scatter gather retrieval results proceedings th international acm sigir conference research development information retrieval sigir 
hovy lin automated text summarization summarist 
advances automatic text summarization mit press 
kohonen self organizing maps 
springer verlag berlin 
lawrence giles inquirus neci meta search engine 
proceedings th international world wide web conference brisbane australia apr 
lawrence giles accessibility information web nature 
lin chen nunamaker verifying proximity size hypothesis self organizing maps 
journal management information systems 
lin soergel marchionini self organizing semantic map information retrieval proceedings th international acm sigir conference research development information retrieval 
luhn automatic creation literature abstracts 
ibm journal research development 
mani maybury advances automatic text summarization 
mit press ix xv 
mauldin lycos design choices internet search service 
ieee expert 
mcbryan wwww tools taming web 
proceedings st international world wide web conference geneva switzerland 
pinkerton finding people want experiences webcrawler 
proceedings nd international world wide web conference chicago il usa 
shneiderman feldman rose grau visualizing digital library search results categorical hierarchical axes proceedings th acm conference acm digital libraries san antonio tx usa 

ed 
nanotechnology 
scientific america september entire issue 
tolle chen comparing noun phrasing techniques medical digital library tools 
journal american society information science 
belkin evaluation tool visualization information retrieval results 
proceedings th international acm sigir conference research development information retrieval sigir 
