experimental evaluation wireless ad hoc network saman division computer science university texas san antonio san antonio tx cs edu experimentally evaluate performance wireless ad hoc network point view routing transport layers 
experiments done testbed desktop pcs laptops wireless radio lan interfaces 
experiments demand routing protocol called aodv implemented part operating systems protocol stack 
describe design choices experimental setup 
performance evaluation reveals performance poor hops moderate high loads 

advances wireless communication technology portable computing devices notebooks pdas generated lot interest ad hoc networking 
idea network collection portable computing devices low cost short range radios static infrastructure base stations access points 
ad hoc network node act potential router routing packets communicating nodes may radio contact 
communication may multiple wireless hops 
couple technical challenges addressed networks usable practice 
nodes mobile topology changing dynamic routing protocol employed maintain routes pair source destination nodes 
second access shared wireless medium number competing nodes efficient fair 
nature wireless medium medium access control mac problem nontrivial 
example received power snr signal noise ratio falls rapidly distance receiving node transmitting node 
ordinarily possible transmitter sense carrier detect packet collision receiver 
conceivably effectiveness routing mac protocol affect performance observed higher layers transport application layers 
progress studying routing mac protocols ad hoc networks 
particular new class routing protocols developed maintain routes demand needed fashion :10.1.1.132.7416
ondemand protocols source initiated route discovery process discover routes route needed 
links route break due node mobility example part route stale 
stale part samir das department electrical computer engineering computer science university cincinnati cincinnati oh uc edu route erased new route discovery initiated 
depending protocol scenario broken route may locally repaired 
demand protocols attractive compared traditional proactive shortestpath protocols distributed bellman ford distributed link state protocols usually lower routing overhead common traffic scenarios 
currently demand protocols consideration standardization manet mobile ad hoc networking working group ietf internet engineering task force 
progress designing random access mac protocols carrier sense multiple access csma 
example ieee standard specifies physical mac layer protocols wireless lans 
uses csma ca carrier sense multiple access collision avoidance protocol persists busy channel employs random backoff channel switches idle avoid possibility collision receiver 
standard optionally uses rts cts request send clear send packets reserve channel pair source destination avoid classical hidden terminal problem 
body evaluates performance standard ad hoc setting see example 
performance study routing protocols ad hoc networks simulation models see example 
detailed simulation models available model various limitations real wireless network 
include limitations interface hardware limited buffer space limitations due operating systems protocol stack implementation slow processor slow memory buffer allocation various random sources errors wireless physical layer multipath propagation radio noise occasional radio shadow owing mobility asymmetric radio links spite limitations simulation studies limited amount appeared current literature evaluating performance real multihop wireless networks 
describe experience design evaluation wireless ad hoc network linux laptops lucent technology wavelan radio 
implemented ad hoc network routing protocol called aodv ad hoc demand distance vector routing part linux network protocol stack 
protocol allows setting maintenance routes source destination 
wavelan radio uses csma ca protocol access radio medium 
generation wavelan radios circa implementation rts cts channel reservation technique ack successful packet reception 
intention experimentally evaluate performance aodv routing protocol route discovery latency network layer udp ip tcp ip protocols transport layer testbed 
rest organized follows 
section describes testbed presents results set single hop experiments demonstrates hardware characteristics 
section describes aodv protocol implementation linux kernel 
section presents performance evaluation experiments followed section 
wireless ad hoc network testbed wireless testbed consists mhz mb pentium desktop pc mhz mb pentium laptops ibm mhz mb pentium laptop dell 
machine runs linux operating system version 
wireless interfaces lucent technology wavelan isa desktop pcmcia laptop cards 
card contains lan controller modem control unit radio transceiver attached small external unit houses antenna 
wavelan system operates ghz license free ism industrial scientific military band nominal bit rate mbits sec 
wavelan employs lowpower radio transmit power primarily targeted building wireless extensions existing ethernet lan 
wavelan ad hoc setting 
performed extensive performance evaluation single hop wireless link pcmcia isa cards 
previously reported evaluations wavelan showed architectural differences cards drivers processor differences desktop laptop may affect network performance significantly 
key results evaluation summarized table 
performance measurements type laptop mhz mhz revealed similar results 
pcmcia card maximum send bandwidth mb nominal 
isa card go mb limitation send data rate pcmcia due single buffer allocation high buffer transfer time device driver pcmcia device 
see table details 
metrics evaluated pcmcia isa maximum send bandwidth udp transfer mb mb maximum received bandwidth udp transfer mb mb number mtu size buffers allocated data transfer device kernel number mtu size buffers allocated data transfer kernel device time move data device ms ms kernel mtu rreq ms ms time move data kernel ms ms device mtu rreq ms ms time complete data transmit ms ms device mtu rreq ms ms table 
single hop performance pcmcia isa wavelan network cards 
maximum transmission unit mtu bytes 
rreq described section packet bytes 

implementation aodv routing protocol section describe implementation aodv protocol part linux protocol stack 
start brief description protocol go implementation details 

aodv routing protocol aodv maintains routing table essentially destination node hop 
hops destination tuples node ad hoc network 
node attempts send data packet destination know route routing table entry uses route discovery process dynamically determine route 
route discovery works flooding network route request rreq packets 
node receiving rreq rebroadcasts destination route destination routing table 
node replies rreq route reply rrep packet routed back original source 
routing table entries pointing back source route rrep back source 
entries called reverse path entries created time rreq forwarded 
reverse path entries expired short interval time sufficient allow rrep propagated 
link source route broken source node notified route error rerr packet 
source intermediate node way rerr packet remove indicated route routing tables 
rerr propagation works fashion 
set predecessor nodes maintained routing table entry node 
indicate set neighboring nodes entry route data packets 
nodes notified rerr packets hop link breaks 
predecessor node turn forwards rerr set predecessors effectively erasing routes broken link 
important feature aodv maintenance timer states node regarding utilization individual routing table entries 
routing table entry expired 
useful routes maintained keep routing overheads low 
aodv uses sequence number technique determine freshness routing table entries 
sequence numbers logical clocks 
help guaranteeing loop freedom protocol 
details aodv protocol activities necessary data structures 

design choices implemented aodv protocol extension address resolution protocol arp 
arp useful broadcast network ethernet provide mac address mapping packets broadcast domain carry identifying mac address corresponding intended destination 
arp maintains arp table contains known mappings 
mapping absent node node arp request mac broadcast packet carrying ip address intended destination node broadcast domain hears request recognizes address responds arp reply supplying mac address 
insert new mapping learnt arp table 
technique called proxy arp different broadcast domains ip layer router route ip packets proxy arp gateway node connected broadcast domains responds arp request node node node maps mac address node ip address node arp table 
ip packets node targeted node node usual approach assuming course broadcast domains appropriately forward packets proxy arp approach extended minor modifications arp layer handle multi hop forwarding ip packets 
model ad hoc network nodes belong ip subnet appear ip layer belong broadcast domain ethernet segment 
extension proxy arp approach multihop routing 
arp table essentially acts aodv routing table providing hop mac address destination ip address 
node destination ip packet forwards packet hop mac address consulting arp table 
source node specified ip header entry corresponding destination address arp table starts route discovery process broadcasting modified arp request packet serves aodv rreq packet 
node receiving modified arp request packet time rebroadcasts destination entry destination arp table 
cases node generates modified arp reply aodv rrep targeted ip address source node forwards mac address immediate source arp request 
arp request received time updates arp table providing reverse multi hop route back original source 
mechanism proxy arp efficient requires minimal modifications arp packet structure arp table include aodv specific fields 

local connectivity management absence link layer acks recall radios aodv protocol needs keep track local neighborhood explicitly 
way knowing existing link broken 
time neighbor moves neighborhood protocol invalidate routes neighbor 
keep track neighborhood node periodically second testbed broadcasts hello message 
node receives hello message form neighbor checks possibly updates local connectivity information maintained set neighboring nodes 
node hear existing neighbor predetermined period time seconds testbed assumes link neighbor lost 
case set neighbors updated error mechanism rerr initiated 

route errors queuing rerr packets arp reply packets special flag differentiate rrep packets 
current specification aodv intermediate node start new route discovery 
responsibility source node 
intermediate node route destination arp table entry corresponding destination ip address incoming packet source ip address different drop incoming packets destination 
hand source node start new route discovery buffer ip packet route 
neighbor table add del update neighbors aodv route maintenance aodv modules kernel modules arp table wavelan add del arp tcp arp recv arp table lookup tcp write xmit arp send arp queue 
block diagram aodv linux kernel maintains queues useful context 
queue buffers ip packets waiting arp reply called arp queue buffers packets received mac address arp table just waiting transmitted device driver called transmit queue 
see diagram 
linux transmit queue bound 
arp queue hold packets 
short queue sufficient demand routing protocol experiments arp queue size increased 

experimental evaluation keep experiments manageable repeatable run static non mobile configuration 
experiments route breaks emulated artificially purging routing table arp table entries independent daemon program force new route discoveries 
route loss part natural dynamics network loss hello messages 

aodv route discovery latency device device transmit queue wavelan device route discovery latency time discover routes 
key performance metric demand routing protocols aodv 
larger latency impacts delay data packets packets buffered route discovery progress 
high route discovery latency packets dropped due buffer overflows 
determine route discovery latencies experiment run nodes set linear chain 
distances nodes adjusted node hear node neighbor chain 
ip arp resolve ouput arp send aodv arp recv aodv udp write xmit wait ip queue xmit udp dev queue xmit device transmit queue node chain desktop isa card 
rest laptops pcmcia cards 
experiment routes broken artificially purging routing table entries 
traffic network routing packets 
table shows average confidence intervals latencies route discoveries various routes lengths 
single hop route discovery latency short ms additional hop takes roughly ms 
short hop discovery latency artifact experimental design 
recall node desktop isa card 
primary reason low single hop route discovery latency isa card lower transfer time device kernel compared pcmcia card see table 
note set source node isa card rest pcmcia cards 
independent set measurements verifies laptop source single hop route discovery time ms 
hops average latency ms confidence interval fraction average table 
average route discovery latencies various numbers hops load 
hops confidence interval fraction average average latency ms table 
average route discovery latencies various numbers hops multihop udp 
experiment run traffic node sending udp packets mtu size bytes plus ip header destination node chain mb route losses natural loss hello messages due collisions routes longer needed broken artificially 
notice loaded network latencies higher significantly wider confidence intervals denoting lot variability data see table 
notice sharp rise latency hop counts 
due frequent timeouts owing loss rreq rrep packets 

multihop udp repeat similar experiments udp nodes linear chain focus udp performance 
node desktop isa card acts udp source loads network udp packets destined node chain 
hop number packets received number packet forwarded number packets dropped lost various reasons recorded extensive 
experiments repeated various offered load sending rate different number nodes chain 
packet size kept fixed mtu 
experiment run sec average runs 

offered load vs received throughput multi hop udp experiment results experiment shown figures tables 
shows offered load received throughput hop experiments 
hop experiments received throughput ideal throughput drops considerably hop experiments higher offered loads 
analyze reason dropped throughput show packet loss statistics hop experiments tables respectively 
tables node drops percentage drops routing layer node respect total number packets sent node drops percentage drops link layer node node 
hop counts maximum error free load appears mb higher bandwidths achievable loss rates significant bandwidths 
hop nodes experiment table losses nodes 
nodes suffer hidden terminal problem 
send udp packets hearing range 
packets collide node loses udp packets node node drops hello messages node 
similarly node loses udp packets node node drops collisions hello messages node 
load high successive losses hello messages frequent 
successive losses hello messages initiate rerr message 
udp packets dropped node node drops new rreq initiated 
new rreq started udp packets dropped arp queue runs 
counted node drops 
notice packet drops noticeable mb offered load significant mb offered load 
maximum received bandwidth mb notice node packet drops small 
drops nodes links high small fraction offered load reaches node 
offered load mb node drops node drops node drops node drops node drops node drops received table 
packets dropped percentage total number packets sent hop udp experiment 
offered load mb node drop received 
table 
packets dropped percentage total number packets sent hop udp experiment 
hop experiment table situation similar 
node transmits udp packets increasing possibility collisions node packets node 
node drops significant 
maximum received bandwidth mb notice received bandwidth going high load 
larger number drops node due arp queue overflows 
larger number hops route discovery takes time seen previous section opening possibility losses 

ftp progress time various number hops 
received bandwidth kbytes hop respectively 
tcp performance linear chain nodes set evaluate tcp performance multi hop wireless network 
set similar previous sections nodes carefully positioned way nodes hops away sense carrier signal strength node hop away strong nodes back csma ca mac protocol longer hidden weak form link 
improves performance somewhat reducing collisions 
adjustment difficulty running ftp large number nodes transfer hang time due large number lost packets 
single ftp file transfer size mbytes set desktop node node chain various numbers nodes chain giving data various hop counts 
experiment tcpdump tool run source node trace outgoing incoming tcp packets 
tcpdump user level program captures link layer packets 
experiments section tcpdump run non promiscuous mode minimize load avoid capturing snooped packets destined nodes 
independent experiment run verify desktop powerful tcpdump steal cycles alter tcp performance significant extent 
indicates progress ftp transfer destination node various hop counts 
hop count increases transfer gets progressively slower 
expected experience udp previous section 
collisions packet drops reduced somewhat new node placement latency node increased increased backoff delays 
evaluate reason slowdown perspective tcp dynamics zoom randomly selected area plot mb mb show individual tcp packets sent data packets received ack packets source see 
linux uses tcp reno selected sack option 
notice smooth behavior data ack packets hop experiment 
tcp reno normally alternate packets acknowledged packet loss 
clearly evident 
number hops increased things turn somewhat irregular 
example hops data packets sent regular interval 
small delay packets due tcp window overruns 
means tcp sender waiting ack move window timer expiry retransmission 
delay progressively increases hops 
hops situation bad retransmissions observed plot 
notice acks coming back regularly hop cases things getting progressively worse larger number hops 
segments acknowledged cumulatively single ack 
times successive segment acknowledged 
hop experiment duplicate acks seen 
duplicate acks retransmitted data segments mean dropped packets network 

ftp progress blowup 
attempts experimentally evaluate performance wireless ad hoc network building dynamic routing protocol part protocol stack 
multi hop performance wireless ad hoc network encouraging evaluation 
hops small fraction nominal bandwidth achievable sparse network configuration linear chain 
packet loss rate high load kept substantially low 
multiple access interference collisions due hidden terminals interacts routing protocol loss hello messages routing packets significantly high loads 
gives rise unnecessary route discoveries absence mobility 
high load route discovery latency quite large high degree variability affects performance higher layer protocols udp tcp due long packet delays lost packets due buffer overflows 
low load routing layer performance small route discovery latency transport layer performance lower drops reasonable 
experiments done generation wireless lan hardware 
new generation hardware carries standard implements channel reservation rts cts control packets 
reduce impact multiple access interference somewhat 
link layer aodv able hello messages 
plan newer wireless hardware improved device driver optimized implementations aodv study performance realistic applications 
acknowledgment partly supported dod afosr nsf aci ani 
bruce tuch development wavelan ism band wireless lan technical journal vol page july aug 
cheng riley kumar loop free extended bellman ford routing protocol bouncing effect proceeding acm sigcomm conference pages 
perkins royer ad hoc demand distance vector routing proceeding ieee workshop mobile computing systems applications page february 
perkins royer das ad hoc demand distance vector aodv routing internet draft progress www ietf org draft ietf manet aodv txt march 
fullmer garcia luna aceves solutions hidden terminal problems wireless networks proceedings acm sigcomm conference pages 
maltz broch johnson experiences designing building multi hop wireless ad hoc network testbed cmu technical report cmu cs march 
johnson maltz dynamic source routing ad hoc wireless networks mobile computing kluwer academic 
tobagi kleinrock packet switching radio channels part ii hidden terminal problem carrier sense multiple access models busy tone solution ieee transactions communications pages 
tassiulas behavior different tcp algorithms wireless channel proceeding sigmetrics conference pages may 
wright stevens tcp ip illustrated 
vol addison wesley 
polyzos tcp udp performance wireless lan proceedings ieee infocom conference 
gupta performance modeling asynchronous data transfer methods ieee mac protocol proceedings ieee personal communications conference pages october 
ieee standards department ieee standard wireless lan medium access control mac physical layer phy specifications 
broch maltz johnson 
hu jetcheva performance comparison multi hop wireless ad hoc network routing protocols proceedings th international conference mobile computing networking acm mobicom pages oct 
marker corson mobile ad hoc networks manet www ietf org html charters html ietf manet working group charter 
gerla bagrodia zhang tang wang tcp wireless multi hop protocols simulation experiments proceedings ieee icc june 
mathis mahdavi floyd romanow rfc tcp selective acknowledgment option available www ietf org rfc oct floyd henderson rfc new reno modification tcp fast recovery algorithm available form www ietf org rfc april keshav 
engineering approach computer atm networks internet telephone network chapter addison wesley 
das yan sengupta comparative performance evaluation routing protocols mobile ad hoc networks proceedings th int 
conf 
computer communications networks ic lafayette la pages october 
stevens tcp ip illustrated 
vol addison wesley 
