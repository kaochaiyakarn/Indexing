pb denmark november thisis believe vol iv press 
languages event structures mazurkiewicz 


contents 

restriction 
relabelling 
product 

sum 

version 
version 
example 
languages 

event structures 






nets 


adjunction 



nets seman tics em 



notes op proofs chapter science systems practice 
lambda calculus markov systems inthe 
levels world joint task terminate 
systems input expresses starvation 
give examples behavioural 
years 

common consider 

sender receiver medium sender medium receiver atomic ts receiver obviously set 
formally components 
thisis ofcourse 
components possibility event structures reston component isa computational progress study adhoc fashion 
computations 
inthe ora ora faulty delivery 
linear possibility ofa determinate runs ma 
indicated thisis synchronisation course 
system information prime trees 


ofa tran wheres isa isa ass state 
forexample component 
dependson extent su cient pair inwhich isa isa transitions oft 
isa 
sent computation tobe labels parallel toa inwhich 
cient ccs constructions category colimits ofa category itis 

fashion 
behaviour 
loops inwhich category functor adjunction ina uniquely functor adjoint 
perform adjunction 
languages 
synchronisation 
transition trees systems 
morphisms behaviour 
way 

away importantly 


ce 
chapter 
comm ccs csp understood structures 

deflnition structure tran isa isa tran 

notation tran bea tran 
forexample ora 
isa 
deflnition say tran thereisa transition tran say isempty 
state 

setl toa setl asa total function isa tol andl 
deflnition lett tran wheres deflne tran tran js sg 
pair states toa transition oft precisely isa transition oft isa provided states deflnition tran tran isa tran tran int 
sowe transition fora 
proposition 
isa isa transition proposition cate gory isg composition oft 
proof 
deflnition 
areas 
understood point cient generality processes 
restriction forexample ccs process deflnition lett tran andlet 
inl toa inl tran tran tran ja lg 
observe set restriction isa isthe inclusion forany thatp isa thatp ina diagram inclusion cartesian tot infact see 
proposition inclusion lett labelled 
isa itis strong cartesian 
inclusion 
preserve labels explicit inp 
functor 
strong set isa 
relabelling 
deflnition lett tran bea tran tran lifting 
thereisa tf forany thatp isa tf thatp ina diagram proposition lett labelled isa tf whichis strong cocartesian see 


strong set 
product comm 

inwhich 
deflnition tran tran tran oo oo ja jb ja projections 

tran oo 
oo tran oo 
oo tran oo 
andf oo 

example lett andt wheret fag fbg intuitively involve clearly generous useful processes 
oo 
andf oo 
category viz andf thatf andf proposition lett andt oo 
oo 
isa states ifi oo oo inparticular nil fig forany thereisa nil thatis systems forany nil 
product viz common inwhich labels 
generally relabelling andt respectively give frg synchronisation 
commutative uniform way 
set binary commutative associative operation onl relabelling may fora canbe frg fa element andr fora examples tables passing canbe 
example ccs events label 
resultant parallel composition andq say jq 
example theoretical csp see 
composition ust 
ana form 
sum processes alternative cases important 

deflnition lett tran andt tran 
tobe tran fi fi transitions tran tran tran 
andi category viz andf toa isa andh proposition lett injections isa 
states iss iss 
forexample disjoint look 
fora common general 
deflnition lett tran andt tran 
tran fi fi tran tran tran 
proposition lett 
transition 
match cesses forexample 
unchanged 
deflnition lett respectively 
deflne tobe tran wheres fi fi tran tran tran 
asa labelling set proposition lett respectively 

fork fj fj 

sum fact 
example fa bg useful 
traditionally ccs csp new behaves place transition new copy way deflnition leta tran js sg fag tran fsg fs fig 
label isan fag 
chapter 
consider jt jt jt jx rec wherea isa label isa isa term construction recursive ded term 
oo introduced set nil oo nil fora oo oo oo rec oo foran environment oo oo forany environment oo 
approach preserving colimits forexample colimits 

tran tr tran tran ofa ob set chains tran forn bound 




tran systems fig fora toa operation sum product restriction itfollows process oo ifx 
consequently fig wehave monotonicity def 

isthe termin deflnition fort tran deflne tobe tran tran lemma ift isa flx label 
proof 
rec oo flx wheref oo 
op version alternatively oo ifa fg rec rec 

disjoint property furthermore ust transitions semantics 
course ifwe related shown term thereisa 
op version simple way new copies seman terms 
rules 


fg rec rec 
bisimulation 

deflnition deflne lemma forany closed tagged 
proof show jtj 
theorem lett closed 
oo oo label 
proof show ift isa oo label notation forx andt variable 
case seen sum operationally 
operational culty 
observe lemma follows rec rec rec 

preserving rec rec rec oo rec 
rec rec preserving oo butt rec oo flx lemma rec rec rec oo inwhich 
thereisa infact transition systems cf 
deflnition zig zag andt int int oft 
fora lett version 
forr 

zig version 
proposition lett closed term isa 
states zig 
proof versa 
example onc table 







anonymous identity 


ina sy kv kc fb tg nil intuitively sys coin repeatedly coin coin breakdown sy version notice inparticular breakdown ba nil viz 
represent independence 
chapter 



example sy 
adjoint seen formally away 
deflnition isa tran ifs fora string isempty acyclic witha 
deflnition infact 
synchronisation tree 
deflnition lett tran 
deflne ts tobe tran sequence 
andu 
deflne 
theorem lett labelled 
ts isa withthe ts 
isa morphism overt 
forany isa ts name way th 
proof lett 
itis isa ts 
isa morphism show ts thatf map asfollows ofv forany take 
itfollows thatf fora 
itfollows tot ts 
see theorem full see 
nondeterministic systems milner see characterisation 
proposition ofthe form proof inparticular ts isa common forexample infact right adjoints tree 
example fa bg ts 
chapter languages 

deflnition isa nonempty thena language string traces mazurkiewicz tobe 
example asa language tree descriptions sy bc deadlocks 
deflnition sa 

morphisms 
tos synchronisation tree functor 
tol tol 
deflnition bea language tran tran ha lett tran deflne sl wherea ifi thereisa sequence possibly empty int 
theorem language ls isa synchronisation tree sl ls 

ls sl 
synchronisation tree isa ls suchthat sl proof tobe ls sl 
full re ection letr set morphism 
set 
languages takes 



right respectively 
strong 
chapter recalling adjunctions inclusions embedding hooks 

adjoint right 

inparticular functor right limits right theorem faithful similarly 

liftings lemma lemma 
forexample straightforward deflnition 
inclusion semantics environment oo denotational oo forany oo language oo fora andl 
oo ts oo ts oo forany adjoints argument 
example ts oo ts oo dependson oo oo lemma shown earlier continuity sl oo sl oo fora oo 


general right colimit accordingly special circumstance 
chapter 
mo described uch better computation depending important 

label channel 
tothe 
structures ofa labels insection 
deflnition isa set isa symmetric relation andm isa nonempty sa closed aib coherent sa sb aib sab ofa canbe thought 
actions closedness understanding forexample ifa independent 
partial 
deflnition fors deflne callan fors trace 
deflne su proposition trace equivalence su relation 
preorder relation isa traces 
example remarked bi bi breakdown 
traces drawn drawn arrow trace fsg andb andc deadlock 

ofa 
preserve independence deflnition 
aib 
proposition 
languages ifs language 
inthe trace language 
deflnition 



aib 









union aib relabelling cut 
lifting function fa bg fcg 
preserved 
di culty set relabelling 
taken tohave 
way 
process ccs process algebra understood icts 
labels ofa ofthe ccs dependent 
met 
true fundamental set inparticular proposition 
nets 

languages 

chapter event structures point forexample 
may 
con binary fashion 
deflnition 
consisting ofa relation anda binary symmetric ict relation satisfy fe je say coe ifi ore ore con 
ict 
example drawn partial 
upwards arrows ict 

event structure 
ta rna computation con 
deflnition 

free downwards close inparticular fe je ict free 


proposition 


coe 


deflnition 
event structure letx 
feg proposition ofan suchthat structures ws deflnition lete 
ande 

toe morphism expresses event ine ofan canbe understood isa component distinct 
thisis 
proposition lete ande ofe described proposition 

isa suchthat dee ii vv 
proposition 



event structures 
structures 
domains subsets letx foran event ifx canbe 
semantics cpo set domains familiar 
event event 

deflnition 
say upper ind say ind 
completeness 
pv pv forany setx exists 
fp jp isa fp qjp isa isa 
ifd 
theorem lete 
proof see 
conversely coherent 
theorem coherent 
deflne 
ordered pv forp 
fp jp isa 
proof see 
elements 
theorem 
proof see 
ifi berry 
def theorem orf 
proof 
event isa su ofa 

ands sto mean 
abbreviation ins 
tobe relation 
deflnition sa sba sa ta sba ta languages 
lemma ta aib sa ta proof assume aib 
cient ii son sc 
ii aia sa ta ta proposition supposes show deflnition lets tobe ev ju isa nonempty lemma lets ev ev proof ev ev follows cient wheres ev ev jv isa nonempty ev jv isa nonempty ev 

assume ev ev wheres inductively thats ag ev ev ev 
itfollows au thats 
fs ag ev proposition andn au au 
lack 
lemma lets ev ev ev ifi ev ev proof prove ev ev anda ev ev ev ft ag ev ev ev ag ev lemma 
lemma ft ev show inductively ft ag ev ev making ft ag ev know aib andu inparticular andu itfollows ev ev fft ag ev ev fft ag ev ev 
ag ev induction 
ev ev fors ev ev band aib anda au bu va au 
lemma au au au lemma 
lemma 
demonstrated 
shown vw ev ev ev follows 
minimum representative 
lemma suchthat ta sa 
ta proof deflne sa sb ors take def lete event ofe 
show sa ta sa 
ta 


ua obtain sa 
ua ub ua ta 
see sa 
sa 
ta 
lemma weget ev sa ev tba ev tab ev ta ev sa ev ta sa 
ta lemma 
ev 
ev bs wheres tab ib bs ba ab sa 
minimality 
ev 


deflnition lett bea 
deflne tle 
isa ifi ev minimum representative ofe deflnition ifi va vb furthermore deflne 
itfollows function 
proposition lett trace language tle 
isan ifi ev ev ifi ev ev 
proof events 

theorem lett bea trace language 
isan 

fsg ev 
fors 
anda ev ind 
sa ev sa 
proof lets itfollows ev isa con ict lemma ev 

isan 
follows directly asfollows assume sa ev sa event ev show minimum representative 
downwards closed ev ev ict direction fors ev ev ev ta sw 
ev ev sw sow 
shows ev 
connection pomset event concurrent 
see 
proposition fora trace isan coe ifi va vb va vb aib proof 
vb aib ev proposition 
coe de en fe feg fe fe assume asx va itfollows vab itfollows similarly shown vb vb vb event itfollows vab 
aib va vb required 

deflnition lete wheres ifi thereisa chain bea proposition tl proof isa provided isa fort 
proposition lett trace language etl tl 
isa languages 
proof lete tle 
thereisa fe fe fe en ife coe proposition follows etl tle 
isa morphism 
lemma lete 

etl 
se 
proof cases 
ue ue coe ine ande 
int tl ue ue int ine ande int se 
theorem lett trace language etl tle overt 
etl 
isa tle suchthat etl 
proof lete 
tle 

deflne oo se itfollows isa isa tle 
prove isa morphism proposition ii 
dee ine assume fx se dee ine 
may withe dee 
ii vv suppose coe ine se se int se se 
secondly ine ses applying ses ev ses ev ses itfollows intl proposition furthermore weget implies se ses 

se 
show assume letx feg ine firstly weget ifi assume feg morphism er itfollows satisfying 
corollary trace functor core xl tle sends tle 
tle tle sothat oo sa 
proof itfollows functor described adjunction tle etl itis isan tle etl 
structures embeds event 

ande tle etl etl forming event follows ina similar way nets structures models 
core 
thereisa re 
canbe cf alternatively 


inorder morphisms 
tobe preserve aib 

isan event 
isa total labels set ln 


ofa anda morphism 
inset tl deflnition lett bea tobe 


inset unlabelled 
tobe tle 

proposition 
set bea trace language deflne 
tobe close closed languages containing 
languages 
bea canbe proposition morphism etl 
etl 
tl deflnition 
andl 
inset deflne etl fact proposition shows 
intl 
inset 

section 
theorem tl 
tl infact ift isa trace 
re ection 
proof follows theorem isa forany tl setl 
withl 
andt tl show 
thereisa 
commutes follows associated tl show 
etl 
etl 
morphism etl 
deflnition tle isa ifi tle isa thisis equivalent tle isa tl tle 
synchronisation trees tl 
concurrent label 
inparticular see fora 
sync structure arcs anda empty 
structures structures ev 
chapter known described roughly thought take deflnition pre post isa nonempty isa pre pow nonempty post pow 
generally marking subset hold 
deflnition letn pre post pre post notation write ande post ofe deflnition letn pre post net 
form ande de ifi ne say 
ofn inn proposition letn ifi property shows 

squares 
token token game expressed insection 
example concurrency events common 
ict ict net 
contact doesnot 
example deflnition 

example 
net nets inwhich 
buildup 
deflnition letn pre post andn pre post morphism fl op isa anda flm fl fle 
morphism fl behaviour rich 
proposition letn pre post pre post nets suppose fl isa 
ifm inn flm inn inn inn proof deflnition fl fle fore event ofn observe op isa fl mean flm inn follows 
proposition fl fl fl fl 
deflnition letn 
nets nets achieve 
deflnition letn pre post andn pre post 
tobe pre post nm nm pre pre post post ife pre pre post post ife 
inwhich morphism fl respectively pair fl op nm 
nm inset fl op inset 
set 
proposition example strangely allow mix canbe described 
lemma respectively similarly 
ifi inn inn inn inn 
inn ifi inn inn proof follows follows 
showing ifx isa andj inn ofn inn ofn show inn wherex isa reachable 
ofn assumption fb fb itfollows sowe token game tox nj 
establishes analogous follows 
suppose 
ofn 
nets 
deflnition letn pre post andn pre post pre post 

andb deflne oo tobe oo op deflne oo similarly oo op oo op 
event pre oo op pre 
oo op pre 
post oo op post 
oo op post 
proposition oo 
oo 
isa 
proposition tothe andn inn ifi oo 
oo oo 
oo example nets chapter systems tobe asa independent 
accurately thought 
deflnition tran tran isa tran tran tran tran tran tran tran tran tran tran tran axiom transition axiom axioms common common state independent axiom 
example insection fb tg bi structures 
lower 
preserve 
deflnition lett tran andt tran 
systems tran 
tran category 
deflnition 
deflnition tran andt tran 
tran tran tran tran oo 
oo 
andthe aib 







deflnition tran andt tran tran tran tran tran andthe aib deflnition satisfying se 
deflnition tran tran se fsg 
deflne tla fsg 
proposition deflnition lett tran 
seq tran bea proposition tl infact theorem tl tl bea tla 
atl tla 
lett tla atl 
fora trace fe proof andt tran atl isa tla 
fe int 
inthe follow 
toa tl isa asynchronous tl restricts toa tl etl tl tla 
structure 
proposition fore 
deflne tran tran feg 
es es deflne forx es 
functor etl 
proof isa functor proposition morphism tle 
tla canbe checked tobe ofan event morphism etl tle etl 
tla tle etl etl tle etl 
etl isan isomorphism etl bijection ensures etl isan isomorphism tle etl tle etl 
nets adjunction andn 
deflnition letn net 
deflne na tran pow tran inn form pow 
fl bea deflne na fl flm forany pow 
proposition na isa proof properties properties follow 
letting fl nets proposition fl isa na 

condition ofa asa na 
ofa infact simplicity tobe transitions play deflnition letb jbj tran jb ofa ofn forexample transition inn 

course independent events deflnition pre 

deflnition lett tran 
tran 
tran tran tran band letb fore deflne fb bg fb 
fors fb bg 
check 
lemma letn 
jbj 
ii jbj inn proof ii jbj jbj jbj asm ii 
fbg fbg 
deflnition andb jbj 
ifp jbj 
andb applied twice deflnition tran andt tran 
tran deflne tran bg lemma 
letb provided furthermore oft 
proof tran oft observe isa follows condition 
deflnition lett tran 
deflne pre post tobe pre int 
deflne fl andb oft ifi 
ifi isa fromthe rich lemma lett tran 
isa suchthat isa suchthat proof deflne tran je isa lemma lett tran 
isa net tran proof foran tobe nonempty 
tran marking feg 
ife deflnition ensures conversely lemma suppose tran fb bg fb bg fb bg fb bg fb bg ne 

example lemma isa proof culty morphisms tran tran 
require def fl isa 
pre post pre post 
arguing fl op fl follows 
infact 
lemma lett fors stateof na proof isa 
counit lemma letn forb andc tran cfl def jbj suchthat fl na 
isa 
proof lemma ifb isa isa andb fl na 
isa letm na fl op fl op fl op 
andn inwhich 
lemma lett tran pre post net 
fora fl 
fl fors fl def na fora na ifi tran jb morphism def fl 
furthermore morphisms 
na proof fl fl na na fl na na fl withthe unit counit forma bijection 
letting na require 
know 
fl def fl forany note fl fl op fl op recalling fl 
fl fl foran fl 
write fl def fl 
show fl fl arbitrary tran letb fl op flm flm flm fl op fl op fl isa morphism fl op rewriting fl op fl op fl op fl op op wehave fl op fl op 
fl op fl op consequently fl fl fl fl 
theorem na forman 
proof lett net na 
na 
na 

isomorphism see na na conditions 
full nets leta tran satisfying axiom thereisa 
axiom axiom tran axioms axiom says infact axiom 
isa transition ands isa condition axioms proposition tran deflne tran bg forany forany isa 
andb jbj jbj ofa 
proposition letn pre post net na 
proof ifu 
andm demonstrates axiom 
show na supposing ands inn pre ii post 
thereisa pre jbj jbj ii thereisa post pre jbj jbj jbj jbj jbj proposition 
ii see ift isan axioms isa 
lemma assume tran isan tran forany isa oft 
proof lemma tran 

withthe 
tran axiom 

axiom deduces converse tran show thereisa transition oft reachability chain oft 
sets fb bg fb bg 
corollary na 
andn reachable anda deflnition leta tran 
letr tran follows tran fe tran tran 
fora morphism deflne ofr 
events proposition suppose morphisms proof tr tr 
proposition isa unit att core ection preserves axioms 
proof isa right adjoint tothe 
bea 
ofr area tran isa 
supposes ands ift thereisa axiom 
na condition 
deflnition letn net na deflne jbj jbj tran theorem na ofan toa tran isan isomorphism na fors 
fl na ifi jbj proof na right na ofa andr toone adjunction tran na fors na isan lemma 
na forma left proposition 
na proposition proof net ift lemma 

deflnition letn jbj isa 
theorem na na forman equivalence 
proof na na toa ata fl na 
ifi jbj 
ofa events extensional proposition lett ifb proof suppose andb oft inductively inb state oft withthe ifb isa condition say tran condition proposition etl isan consequently tla atl tle toa core ection 
proof etl tle etl event lete event structure etl isan see proposition safe occurrence theorem na etl logical decomposed disjoint 
seen asynchronous notion adjunction ones allow 
asynchronous ifb isa isa thenthe isa cf lemma 
ifx isa nonempty soe thenthere isa cf lemma 
cf proposition 
unions disjoint ifs bea nonempty ifb isa 
connected conditions new components infact conversely disjoint 
deflnition lett forb write comp def bnb ifb comp isa 
say ifi notation andb infact ofan ora lemma 
ccomp proof 
proposition lett isa ii comp 
iii ifc isa 
iv ifc 
proof isa itfollows anc anb bnc 
ii clear 
iii isa 

give assume isa condition lemma inparticular isa condition inparticular conditions bn bnc bn bnc 
iv andc bnc component bnc isa nc bn bnc 
deflnition letb 
deflne conn ccomp bg ofa lemma conn conn ii conn 
proof conn andc itfollows andc nc nc nc similarly implying 
ii clearly conn show lett take ccomp bg clearly isa andd conn conn 
ofa 
isan cf lemma 
deflnition lett assume pre post pre post wherec pre pre post post lemma lett isa 
ii isan isomorphism na fors proof axiom pretty uch isa forany event earlier lemma 
ii int connected lemma thereisa connected fe isa lemma ore example inwhich nets nets nets insection folding 
conditions pre post uch anda bea ifi pre andm pre post andm possibly 
component 
isa transition pre post pre post 
ofm morphism tobe fl isa tob isa toe asa special fl fl pre pre fl post post behaviour proposition fl isa andm inn isa reachable fl fl inn proof pre ent fl fl ofm 
tobe fl fl fl isa 
isa andm exceeding canbe 
coe def fe ina coe reachable 
pre post pre post canbe fl isa flm pre pre pre post post post 
op isa pre post 
op bea example folding event event condition andb fori 
ande indep image 
ifwe 
proposition isa core proof right adjoint object tran ina tran inwhich def adjoint forn deflne na na ofn fl fl flm ofn safe 
lemma lett 
isa 
conn 
ii 
isa inn commutes proof pre post pre post wherec pre pre post post forany inparticular 
show isa section 
ifc 
wherec conn 
lemma pre fore thereisa transition lemma pre pre pre pre conn lemma 
ii isa fl bea ifm isa reachable isa andb ofn ii fl 
morphism forp isa disjoint flp andc flp wherec wherem lemma ii 
relation andn op forp yields op oo nonempty isa condition 
isa follows fl 
conn op op 
corollary na safe 
forma core proof toa adjoint ton na respectively andn thereisa chain na na ina na ina inn 

na respectively isa 
argues safe 
event en condition see 
chapter seman tics show section toa 
em non nets trace event colimits 

ofa continuous ona 
infact embeddings inclusions forma 
kahn rigid embeddings see 
deflnition fl op ofn thereisa ofn fl example sum injections isa net relates injective toe ande 
colimits colimits proposition fl fl fl fl 
pre post 
pre post sequences fl op withthe consists sequences implies forall 
pre pow pow satisfy pre pre post post andb 
isa net relation suchthat anda function suchthat isan furthermore isa chain 

deflnition morphism andt respectively forany oft proposition iff isan na 
na isan na preserves 
ii isan 
isan preserves 
deflnition lett tran tran ifi 

inparticular isan tran 



tran embeddings em tla deflnition morphism respectively aib lett ifi aib ai inclusion chains unions functors embeddings 
event structures event notion see 
deflnition morphism op isa op lete 

deflne ifi event trace languages proposition ife etl trace languages colimits embeddings 
ii ift tle forthe associated tle preserves inclusion embeddings 
event structures events process ina forexample structures isgiven set way deflnition lete set deflne objects 
wherex isan 

wheref inx 
take tobe model say event structures sox ise tobe ent events structures isan event total morphisms 
structures thatl facts proposition lete set cate assume inl isa inx isa inset hl 
suchthat 
proposition lete set assume 

inl 
injections isa inx isa inset 
suchthat 
thereisa 
set 


forany inset strong object 


inl 
forany 
inset 
structures forexample 
anda toe 
asfollows fe structures asl 
embedding inclusion embedding iff embedding isan inparticular chain 




insection set relabelling fg 
respectively 
associated witha 
similarly lifting 
unique morphism 
thatf isa 
foreach model isan inclusion fg ofl forany 
lab 
asl forexample 
op carry alternative direct got 
way section 
deflnition structure tran tran isa tran ii take preserve independence morphism comp 
suggests viz axiom uch ofthe development coherent ina 
axioms seen relation expresses property thereisa square state states ands properties respectively 
event forany states 
inwhich asynchronous isa bijection 

copying transition 
op uch systems rules 
assume tran andt tran 
tran tran tran tran oo 
oo 
ifi 

oo 
oo oo 
oo 

oo 
oo oo 
oo tran tran tran tran inwhich orb transition 
fi oo 
oo oo 
oo oo 
oo oo 
oo section 
deflne adjoin similarly lett andt transition system ifi 

tran tran tran tran tran tran 
relation independence 
unicity supposes ands version 
lett tran bea assumed property tran tran tran property witha 
tagged relation sum product fg fg recursion rec rec rec rec rec rec rec 
fora sum ifu sum lemma rec isomorphism rec 
rec 



continuous deflnition lett tran tran transition ifi tran tran tran 
environment oo transition ti oo 
deflnition fort tran tran tran tran deflne tobe tran tran tran andi tran tran 
lett insection deflne theorem lett closed forany oo ti oo label 
oo fora environment oo 
equivalent deflnition lett tran 
deflne tobe tran tran tran 
theorem oo ti oo oo proof shows ti oo oo oo andg large cpo ti andl recursion inparticular 
ti 
itfollows unfolding labelled 

chapter 
models shall versions described forexample 
deflnition lete set ande set functors isa isa deflne 






ections lemma lete set set functors 
isa isa 
isa isa natural transformation isan 
forany form counit follows 
isa core ection thenl forma core re 
proof theorem andd gf gf condition 

lab counit 

tle tl lete tl tl set alphabets lete set structures tl maps natural transformation tle 
tl tle tl 

tl natural transformation tl etl 
hold etl etl etl unit forany tl weget tl etl tl etl tl etl tl see etl holds lemma etl 
tl adjoint tle 
tl cuts tl 
inparticular ina similar uch easier manner andn tl tl safe lemma functor triviality 
toe accordingly extending take tohave andl le ltl la le safe semantics 
insection saw re thereisa ti states forthe inclusion independence models 
see forexample 
alternative scheme models inset respecting met independence set inparticular labelling set set inwhich independence 
chapter notes chosen 
give 
labelled keller concurrency ccs pro milner logic approach see milner glabbeek 
labelled basic form studied developed witha fair manna pnueli transition asin generalised take behaviours 
may ccs actions 

variety acceptance refusal ready fora comprehensive survey fora thorough treatment model testing 
times components 
treatment hiding inwhich internal taken tobe hidden 
canbe milner interpretations 

ina syntax sos scott 
plotkin approach occam 

axiom mazurkiewicz 
remarked lamport petri pomsets canbe see 
hand uch example acceptors algebraically thomas 
winskel event general ict domains domains article see 

di culty languages see coherent di event primes method semantics event new deflnition 
ow event structures self event 
trakhtenbrot thiagarajan 
new foran alternative 
describe canbe thiagarajan event thereisa 
thereisa known complementation 
olderog 
petri graph petri montanari 
logic see 
behaviour events partial strategies 
shields related geometric approach 
remarked deflnition alternatively event extracted see canbe mukund 
boudol castellani degano de montanari gorrieri mukund 
important interestingly fore see 
survey method rensink :10.1.1.21.5791

inadequacy models 
thiagarajan van inparticular 
fie mukund 
app functions andy 
fora functionf thatf 
forx say 
say course total correspond take oftwo sets course set functions 
inset andy inset jx jy jx 
app 
deflnition functor 
inx inx thatp thereisa thatp andf diagram inx inb say isa inb thatp 

inx subcategory ofx morphism ofb 
inx inx 
inb isa thatp itis strong compose 
deflnition functor op op op inx top iff op isa op isa 
inx inx thatp thereisa thatp andh diagram strong cartesian morphisms bea functor forx inx 
write def ff jp proposition inx inx 

obtained isan isomorphism bisection 
inx inx 
obtained isan isomorphism 
strong 
andq 
shows 

deflnition andg forman tog andq ifi andp 

lemma forma 
proof inb naturality comm wherex 
fi pg observe isomorphisms fi fi fl fi asg fl fi equals proposition 

morphisms 
ections inwhich faithful re ection lemma re ects 
proof isomorphism forany 
inb letx fi 
inb fi fi fl fi asf fl fi proposition 


app op proofs part section part 
acyclicity 
lemma forany 
proof show transitive relation way tj 

deflne 
integers relation isa deflne jtj tag size tag nil tag size nil size tag tag size size tag min tag tag size size size tag tag tag size size size tag tag tag size size size tag rec tag size rec size tag tag size size shown property forexample assume jt rec rec itfollows tag rec 
tag 
tag rec tag rec tag tag tag tj 

prove lemma fork projecting steps 
lemma jn 





proposition isa label preserving 
lett fork 
min chapter 
operations fork proof itfollows thata operation composition 

fork 
show continuity lemma say sothat oo fork itfollows fork 
preserving functor fork label 
deflnition label 
lemma iff flx tobe inparticular 
proof functor preserving morphisms continuous inparticular flx flx 
asf flx ask flx asf flx induction 
foran foran continuity ofr andf lemma itfollows flx flx 
flx guarded prove andlet name 
isan isomorphism isan single preserve isomorphism isomorphism follows isomorphism 

forn isa isomorphism flx obtain isomorphisms def flx forn forn show 

followed 
flx 
flx 
flx may forn proposition itfollows 
isan 
seman theorem lett foran oo ti oo label 
move isa 
deflnition objects tran tran isa tran tran preserve independence morphism comp isa constructions insection forti serve inparticular give fora proc environment oo denotation pti oo oo forany denotations pti oo oo coincide 
endofunctor pti pro object steps tot deflnition lett tran deflne tobe tran wheres tran thereisa transition tran andi tran tran 
letf fork tobe pti pti 
empty 
say sothat pti oo canbe inwhich preserving fork fork 
fork itfollows thata label fork guarded variable reading pti lemma 
lemma int 
lett pti oo pti ift pti oo label preserving isomorphism pti rec oo label 
theorem closed foran oo pti oo label 
proof pti oo label processes operationally theorem 
asa corollary oo oo 
bibliography abramsky jagadeesan games 

badouel darondeau 
ed concur springer lncs pp 
barr andw prentice hall 
phd university 
category theory jsl pp 
bergstra centrum voor amsterdam 
berry etat universite 
bloom trade brookes main melton mislove schmidt eds semantics pp 
boudol note association pp 
boudol flow ow nets ini ed pp 

boudol castellani non xi pp 
boudol flow inria 

brookes csp ed icalp pp 
brookes roscoe winskel eds concurrency pp 
brookes roscoe 
brown 

ell habermann pp 
castellani zhang structures inria 
curien birkh auser 
degano de nicola montanari 
ed concepts iii ifip pp 
degano de nicola montanari third pp 
droste event domains pp 
van glabbeek phd thesis cwi amsterdam 
van glabbeek lineartime baeten 
eds concur pp 
van glabbeek lineartime best ed concur pp 
gorrieri hierarchy pp 
goubault jensen 
ed concur pp 

grabowski iv pp 
grothendieck ed sga expose vi 
pp 
hoare comm programming 
hoare brookes jacm pp 
hennessy mit press 
hyland rule university bridge 
jacobs theory phd university 
johnstone lecture notes 
joyal nielsen winskel open maps proc pp 
kahn report 
katz inde bakker de rosenberg eds lineartime pp 
keller communications vol pp 
kwiatkowska phd thesis university 
abramsky eds pp 
lamarche sequentiality games proceedingsof workshop parti ii aarhus march daimi pb 
lamport time distributed system ca cm pp 
larsen languages pp 
lauer ell processes pp 
non lotos university 
maclane graduate springer 
manna springer verlag 
martin lof 
meseguer montanari new proc pp 
milner 
milner prenticehall 
milner pp 
mukund report tcs 
mukund ce 
ed fst tcs pp 
mukund structures 
mukund nielsen ccs 
ed fst tcs springer lncs pp 
mazurkiewicz concurrent pb department aarhus 
mazurkiewicz eds lineartime pp 
nicollin algebras pp 
nielsen plotkin domains part vol pp 
nielsen rosenberg pp 
systems eatcs pp 
olderog hoare comm diaz ed icalp pp 
olderog nets cam press 
peirce mit press 
penczek xi pp 
petri non gmd isf 
eds pp 
pinter andw proc rd acm pp 
plotkin lecture notes daimi fn department aarhus reprinted 
logic pitt abramsky rydeheard eds pp 
pratt mo international pp 
pratt mo inproc th ann 
acm programming languages pp 
rabinovich xi pp 
rensink phd thesis university 
pp 
sassone nielsen concurrency :10.1.1.21.5791
ed concur pp 

sassone nielsen winskel sokolowski eds mf cs pp 
scott domains nielsen schmidt 
eds automata programming pp 
shields concurrent machines vol pp 

stark pp 
stirling mo vol 
oxford university press 
taylor indexed polymorphism phd thesis cam 
thiagarajan brauer erg eds central pp 
thomas inv 
ed action see frg technical university pp 
vogler science pp 
winskel phd thesis camp 
sc report 
winskel eds icalp pp pb university 
winskel department carnegie mellon university 
winskel pp 
winskel roscoe eds concurrency pp 

winskel algebras pp 
winskel eds pp 
winskel event structures inde bakker de eds lineartime pp 

winskel system proc pp 
winskel computation vol pp 
winskel languages mit press 
partial ed concur pp 
zielonka etal eds proc ussr pp 

