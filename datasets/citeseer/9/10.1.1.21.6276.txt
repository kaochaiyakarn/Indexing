common framework initiative algebraic specification development software progress donald sannella laboratory foundations computer science university edinburgh uk 
common framework initiative cofi open international collaboration aims provide common framework algebraic specification development software 
central element common framework specification language called casl formal specification functional requirements modular software design subsumes previous algebraic specification languages 
brief summary progress cofi period cofi received funding european commission working group esprit programme 
algebraic specification extensively developed approaches formal methods area 
fundamental assumption underlying algebraic specification programs modelled sorted algebras consisting collection sets data values functions sets 
level abstraction commensurate view correctness input output behaviour program takes precedence properties 
common element specifications programs consist mainly logical axioms usually logical system equality prominent role describing properties functions required satisfy 
wide variety di erent approaches algebraic specification take principles starting point 
past years seen great deal research theory practice algebraic specification 
overviews material include 
developments foundational side balanced applications despite number success stories industrial adoption far limited 
proliferation algebraic specification languages seen significant obstacle dissemination techniques 
despite extensive past collaboration main research groups involved high degree agreement concerning basic concepts field appearance extremely fragmented de facto standard specification language international standard 
tools supporting algebraic techniques developed academic community gained wide acceptance partly isolated usability tool uses di erent specification language 
late underway attempt remedy situation 
common framework initiative abbreviated cofi open international collaboration aims provide common framework algebraic specification development software 
common framework intended attractive researchers field common basis ultimately attractive industry 
central element common framework specification language called casl common algebraic specification language intended formal specification functional requirements modular software design subsuming previous specification languages 
development prototyping verification tools casl leads interoperable capable combination isolation 
cofi began collaboration modest funding obtained european commission esprit programme period october april support cofi meetings cofi related travel europe project cofi wg 
point ort cofi concentrated design casl complete respects 
building progress goals cofi working group coordinate completion disseminate common framework demonstrate practical applicability industrial contexts establish infrastructure needed european collaborative research algebraic techniques 
activity organized task groups follows language design coordinator bernd krieg bruckner april peter mosses semantics coordinator andrzej tarlecki methodology coordinator michel bidoit tools coordinator kirchner april bernd till mossakowski reactive systems coordinator astesiano joined heinrich hussmann october external relations coordinator peter mosses coordination cofi peter mosses august don sannella 
summary progress cofi pointers publications material produced cofi members period 
previous summaries cofi 
presentations casl :10.1.1.147.3253
casl tutorial especially recommended newcomers details rationale examples available 
language design october language design casl version published 
subsequent polishing design concerned syntactic extensions literals syntactic annotations parsing precedence mixfix operator predicate symbols semantic annotations proof obligations arising various kinds conservative extensions details concrete syntax ecting form position comments annotations details concerning semantics architectural specifications 
modification version incorporating minor adjustments released july adjustments incorporated casl version released march 
revisions planned 
design casl formally approved ifip wg see external relations 
semantics tools methodology task groups ifip wg reviewers detailed comments previous version casl provided essential feedback regarding language design proposals 
rationale aspects language design 
major ort development library basic datatypes casl produced methodological insight 
apart specification natural integer rational numbers standard algebraic properties usual types sets collections lists defined 
attempt order specification real numbers appears kind 
types related approximate numeric types computers 
library basic datatypes revised times feedback members language design methodology task groups 
final result documented 
various sublanguages casl total sorted equational defined corresponding closely embeddings specification languages frameworks casl 
relation casl specification languages act asf hep theories lsl obj functional cafeobj clarified 
logic underlying casl translated order logic second order logic sort generation constraints considered 
allows re order higherorder theorem provers casl 
procedure stepwise approval sublanguages language extensions established 
proposals sublanguages higher order extension received preliminary approval definition proper semantics step 
parametrised polymorphic higher order types ongoing proposal extension casl mechanism late binding 
object oriented reactive system extensions casl carried reactive systems task group see 
semantics activities semantics task group centered development complete formal mathematical semantics casl 
development accompanied borderline semantic design issues casl devoted careful study concepts introduced formalism partiality detail architectural specifications details category signatures 
early version semantics allowed identify problems language design led casl version described 
serious revision entire semantics completed 
visible changes involved semantics casl architectural specifications due problems pointed instance 
key issue development final version semantics fully institution independent studied structured specifications extended architectural specifications 
see study impact institution independence development tools casl 
semantics essentially ready started proof systems proof support casl 
includes study foundations translation casl supported logical frameworks verification architectural specifications key aspects logical system underlying casl thoroughly investigated cf 

important stream addressed issues careful semantics comparison casl specification formalisms 
discussed possible extensions casl notably higherorder operations complete formal proposal development basis behavioural equivalence higher order models represented pre logical lax logical relations investigated 
taken place borderline semantics methodology 
methodology aim methodology task group enrich formalism designed common framework initiative ideas methodology system specification development support encourage propagate 
expected methodological views influence casl language help dissemination influenced design casl language 
activities methodology task group organized issues user manual tutorials 
casl user manual currently preparation 
intended reuse corresponding material preparation casl electronic tutorial available web 
casl user manual provide guidelines writing specifications individual system modules various features casl language 
preliminary draft versions casl tutorials berlin etaps genova etaps 
independent casl tutorial nasa formal methods workshop june 
related studies write consistent specifications proper casl features addition annotations casl specifications 
studies discuss casl software development specification design phases 
case studies 
web site case studies illustrating benefits casl various projects set cofi participants contributed 
extensive done basic datatypes casl collaboration language design task group see details 
addition studies casl computational geometric modeling multimedia presentations 
casl proposed general meta notation semantic descriptions 
formal software development algebraic specifications 
architectural specifications novel concepts casl studied 
studies investigated refinement various frameworks 
related casl software development process 
tools casl ers flexible syntax including mixfix notation requires advanced parsing technology 
casl tools described built algebraic specification formalism asf sdf asf sdf 
casl supports user defined syntax non trivial process asf sdf ers powerful parsing technology called generalized lr 
interactive development environment facilitates rapid prototyping complemented early detection correction errors 
number core technologies developed asf sdf meta environment reused context casl 
interoperability casl existing tools major goal tools task group 
step propose exchange format accepted input produced output tool 
starting idea adopt basically syntax trees annotations providing specific information communicate various tools parsers rewrite engines proof tools 
instantiation generic format developed representation asf sdf specifications terms provides casl specific exchange format 
data type annotated terms aterms defined design implementation application discussed 
comprehensive procedural interface enables creation manipulation aterms java 
aterm implementation maximal subterm sharing automatic garbage collection 
binary exchange format concise representation aterms sharing preserved allows fast exchange aterms applications 
progress provide xml external exchange format translations back forth xml aterms 
low level formats high level formats syntax trees casl specifications global environments containing signature information flattened version tools support structured specifications developed 
formats storing proofs developments follow 
main achievement integration tools casl tool set cats 
combines parser static checker pretty printer facilities printing signatures specifications structure graphs casl specifications links various verification development systems 
experiment casl specifications cats system provides di erent user interfaces web interface compact stand version command line window interface 
repository successfully unsuccessfully parsed specifications development 
existing rewrite engines provide basis prototyping parts casl specifications 
problem executing casl specifications rewrite engine provided elan system implements rewriting cient way addressed 
class casl specifications executed having equational axioms including possibly operators oriented conditional rewrite rules 
equality predicate express congruence terms whilst equivalence connective allows defining congruence expressions built predicates 
subsorting partiality features considered basic structured casl specifications supported 
mapping casl elan performed translating casl syntax syntax developed elan 
current implementation needs casl tool set parse casl specification generate flattened format 
translation tool elan compiler executable program produced computes normal forms respect casl specification 
standalone version cats contains encoding logics 
encoding transforms casl specification second order logic step step 
partiality encoded error elements inhabiting supersort second subsorting encoded injections third sort generation constraints expressed second order induction axioms 
possible second step wants tool supporting subsorting sort generation constraints directly 
details see alternative encodings described 
way cats allows casl interface large number higher order theorem provers 
hol casl system built top cats uses encoding casl second order logic connect casl isabelle theorem prover generic graphical user interface 
approach encoding casl proof systems isabelle allows verification program transformation 
various verification tools developed algebraic specifications reused specific subsets casl equational conditional full order logic total functions total functions subsorts partial functions system provides integrated specification theorem proving environment sub language casl excludes partial functions encoding provided cats useable full casl 
cats connected development graph management component theorem proving system 
structured casl specifications format translated development graphs 
development graph supports management theories proof obligations arise casl specifications theorem prover independent way 
provides cient way managing change allowing re parts proofs ected change specification 
tools developed tools task group available community validation group 
web page tools describing going giving access available tools giving guidelines propose new tool available www tzi de cofi tools 
reactive systems aim reactive systems task group develop extension common framework deal reactive concurrent parallel systems object oriented techniques dealing reactiveness considered 
specification framework deals phases requirement design including intermediate steps 
goal extension state art techniques compatible integrated casl language proposal mathematically rigorous able deal wide range significant systems su ciently friendly practical wide community guided complemented considerations concerning methodology tools 
technical task group proceeded tracks track autonomous extensions casl reactive systems 
extensions individual contributions aligned common framework 
proposals developed task group close connection 
casl charts formalism integrating casl state charts developed giving discrete models functional dynamic behaviour reactive systems 
state casl extension extension casl deal internal states developed 
integration casl process specification languages proposals bring casl known approaches formal specification communicating processes casl ccs casl csp casl petri nets 
casl ltl design method design specification concurrent systems developed formalism structured conditional specifications defining processes terms labelled transition systems 
cofi ltl requirements essentially sorted order temporal logic cf 

java targeted notation visual formal notation developed specification reactive parallel concurrent systems 
essentially restricted subcase casl ltl design automatically translatable java 
track coordinated ort 
joint ort members task group centered omg standard language uml unified modelling language 
motivation decision uml industry standards specification design complex systems including reactive systems link uml definitely enhance practical accessibility casl uml contains number graphical formalisms dealing concurrency reactiveness 
observed uml standard reached level maturity close formal methods missing solid semantic foundation 
basic idea joint adopt casl language annotating uml static dynamic diagrams enhancing possibly replacing object constraint language uml 
order achieve integration casl uml systematic translation uml diagrams casl specifications defined documented 
class diagrams representing static aspects system translated standard casl 
statechart diagrams dealt translation casl ltl 
attempts translate sequence diagrams casl ltl 
multiview approach worked semantics uml integrating static dynamic aspects 
core idea approach casl metalanguage helps express semantics various diagrams uniform mathematically rigorous language 
way important contribution better formal underpinning semantics uml diagrams produced cf 

external relations main tasks concerning external relations establishing relationship casl previous frameworks developing tutorial online presentation casl liaison ifip working group 
relationship casl previous frameworks 
level specification small act asf sdf functional cafeobj lsl obj examined 
outcome apart pathological case algebras empty carriers languages translated sublanguages casl 
translation straightforward exception obj retracts translation casl previously studied 
languages corresponding sublanguage casl indicated 
level specification large informal look previously taken lsl act asf sdf obj 
structuring constructs languages translated literally casl possible find circumscription casl 
cofi wg su cient resources defining embeddings existing languages casl 
hoped forthcoming informal sketch relationship basic specifications casl various languages may stimulate detailed investigations leading provision translators languages casl 
developing tutorial online presentation casl 
decided combine casl tutorial casl user manual single publication di erent media described methodology 
casl tutorial explanations examples user manual supplemented exercises interactivity provided means available casl tools 
examples main points tutorial user manual presentations casl etaps 
liaison ifip wg 
review previous version casl ifip wg asked review final design casl version may ifip wg meeting stanford june 
report ifip referees available cofi ifip wg meeting genova march 
basis report reviewers subsequent response casl designers ifip wg decided formally approve design casl version 
ifip wg reviewers useful recommendations concerning enhancement documents describing casl especially concerning need rough indication relationship casl existing languages level basic specifications 
dissemination take principal goals cofi wg wide dissemination awareness common framework 
main target audience stage fellow researchers formal methods awareness relevant industrial groups secondary goal 
activities include publication scientific results variety forms conferences journals cofi web pages cd roms distributed fm proceedings including prototype casl tools including annotated list cofi related urls 
publication book casl planned 
tutorials presentations casl cofi variety venues range audiences 
tutorial material teaching number universities 
workshops organized jointly relevant workshops wadt satellites major conferences fm etaps 
boosts visibility workshops providing opportunities fellow researchers learn join cofi 
early expect significant industrial take 
concrete start direction represented initiatives engineering ag zurich lsl past 
internal study comparing lsl casl led decision switch lsl casl projects industrial training material formal methods casl preparation 
casl play central role german multi site multimedia instruction safe secure systems project funded bmbf develop range educational materials concerning formal specifications covering sc 
curriculum safe secure systems 
logic algebraic specification embodied casl major foundation casl specification language issues involving data 
worth noting connection cofi casl highlighted springer marketing material suggesting degree market penetration achieved 
presentations wadt cofi reported projects casl adopted practical 
presentations concerning casl gave impression casl recognized established de facto standard language algebraic specification 
invitation cofi accomplished great deal inception remains done 
open collaboration new participants welcome join time 
anybody wishes contribute invited visit cofi web site www brics dk projects cofi cofi documents freely available 
announcements general interest cofi participants broadcast low volume mailing list cofi list brics dk task group mailing list see cofi web site subscription instructions 
mailing lists moderated 
participants cofi contributions cofi activity describe 
special coordinators various cofi task groups listed 
extra special peter mosses got cofi ground behalf ifip wg compass wg acted coordinator mid 
described supported esprit funded cofi working group project cofi wg 

ancona cerioli zucca 
extending casl late binding 
trends algebraic development techniques selected papers wadt bonas 
springer lncs 

astesiano bidoit kirchner krieg bruckner mosses sannella tarlecki 
casl common algebraic specification language 
theoretical computer science appear 

astesiano broy reggio 
algebraic specification concurrent systems 
astesiano 
kreowski krieg bruckner eds algebraic foundations systems specifications 
springer 

astesiano cerioli reggio 
plugging data constructs languages application uml 
proceedings amast iowa city 
springer lncs 

astesiano 
kreowski krieg bruckner eds 
algebraic foundations systems specification 
springer 

astesiano reggio 
uml heterogeneous multiview notation strategies formal foundation 
proc 
oopsla workshop formalizing uml 




hutter mantel 
evolutionary formal software development casl 
trends algebraic development techniques selected papers wadt bonas 
springer lncs 


relating datatypes schemata 
trends algebraic development techniques selected papers wadt bonas 
springer lncs 


casl case studies 
www informatik uni muenchen de cofi case html 

bert 
algebraic specification casl 
software specification methods overview case study formal approaches computing information technology 
springer 

cerioli mossakowski mosses sannella tarlecki 
casl common algebraic specification language 
semantics 
version completed 


state extension casl 
proc 
ifm 

bert lo 
algebraic specification operator multimedia scenarios 
trends algebraic development techniques selected papers wadt bonas 
springer lncs 

bidoit 
requirements software casl 
invited talk wadt bonas 

bidoit wirsing 
correct realizations interface constraints ocl 
proc 
uml 
springer lncs 

bidoit 
kreowski lescanne orejas sannella eds 
algebraic system specification development survey annotated bibliography 
springer lncs 

bidoit mosses 
gentle casl 
tutorial wadt cofi workshop th european joint conferences theory practice software etaps genova 
available www lsv ens cachan fr bidoit casl 

bidoit sannella tarlecki 
architectural specifications casl 
formal aspects computing appear 
preliminary version appeared title proc 
th intl 
conference algebraic methodology software technology amast 
springer lncs 


generalized interpolation casl 
information processing letters 


higher order logic theorem proving structured specifications 
trends algebraic development techniques selected papers wadt bonas 
springer lncs 

van den brand de jong klint olivier 
cient annotated terms 
software practice experience 

van den brand 
development parsing tools casl generic language technology 
trends algebraic development techniques selected papers wadt bonas 
springer lncs 

cerioli gogolla kirchner krieg bruckner qian wolf eds 
algebraic system specification development survey annotated bibliography 
nd edition 
monographs bremen institute safe systems 
shaker 

cerioli krieg bruckner mossakowski 
permissive subsorted partial logic casl 
proceedings amast sydney 
springer lncs 

cerioli mossakowski reichel 
total equational partial order logic 
astesiano 
kreowski krieg bruckner eds algebraic foundations systems specifications 
springer 

cerioli reggio 
basic casl compass labyrinth partiality subsorting predicates 
wadt bonas 

choppy reggio 
casl specify requirements design problem specific approach 
trends algebraic development techniques selected papers wadt bonas 
springer lncs 

cofi 
common framework initiative algebraic specification development electronic archives 
notes documents accessible www brics dk projects cofi 

cofi language design task group 
casl cofi algebraic specification language summary version 
documents casl summary 

cofi language design task group 
casl cofi algebraic specification language summary version revised 
documents casl summary 

cofi language design task group 
casl cofi algebraic specification language summary version 
documents casl summary 

cofi semantics task group 
casl cofi algebraic specification language semantics 
documents casl semantics version 

reggio 
java targeted graphic formal notation reactive concurrent systems 
fundamental approaches software engineering fase european joint conferences theory practice software amsterdam 
springer lncs 

costa reggio 
specification dynamic datatypes temporal logic approach 
theoretical computer science 

ehrig meseguer montanari orejas parisi presicce wirsing 
recommendations revised design casl 
internal ifip wg document 


model sets nonconstructive logic partial terms definite descriptions 
automated reasoning analytic tableaux related methods tableaux 
springer lnai 


extended joint consistency theorem nonconstructive logic partial terms definite descriptions 
studia logica 
appear 

haveraaen 
domain specific languages software architectures challenge casl 
cofi meeting amsterdam 

haveraaen 
tiered software process model utilizing casl 
technical report department informatics university bergen 

haveraaen johansen 
formal software engineering computational modeling 
nordic journal computing 

krieg bruckner mossakowski 
subsorted partial higherorder logic extension casl 
cofi note 

ho man semantics architectural specifications polish 
master thesis warsaw university 

ho man verifying architectural specifications 
trends algebraic development techniques selected papers wadt genova 
springer lncs appear volume 

honsell longley sannella tarlecki 
constructive data refinement typed lambda calculus 
proc 
rd intl 
conf 
foundations software science computation structures fossacs european joint conferences theory practice software berlin 
springer lncs 

honsell sannella 
pre logical relations 
information computation appear 
preliminary version appeared title proc 
computer science logic csl madrid 
springer lncs 

hussmann cerioli reggio 
data types uml models 
technical report disi tr universita di genova 

kirchner ringeissen 
executing casl equational specifications elan rewrite engine 
cofi note revised version 

klin 
implementation static semantics architectural specifications casl polish 
master thesis warsaw university 

klin ho man tarlecki schroder mossakowski 
checking conditions casl architectural specifications 
proc 
intl 
symp 
mathematical foundations computer science mfcs 
springer lncs 

ledoux le gall bertrand 
high level operation modeling casl case study 
report universite val 

ledoux le gall bertrand 
geometric modeling casl 
trends algebraic development techniques selected papers wadt genova 
springer lncs appear volume 

ledoux 
dubois le gall bertrand 
formal specification mathematics application domain geometric modeling 
report universite val 

ledoux 
dubois le gall bertrand 
specifications du 
dans assistance au de nancy 


ehrich wolf 
specification data types 
wiley 

mossakowski 
sublanguages casl 
cofi note 

mossakowski 
functional programming sublanguages casl 
cofi note 

mossakowski 
colimits order sorted specifications 
trends algebraic development techniques selected papers wadt 
springer lncs 

mossakowski 
translating specification languages casl 
wadt lisbon 
handwritten notes available author 

mossakowski 
translating obj casl institution level 
trends algebraic development techniques selected papers wadt lisbon 
springer lncs 

mossakowski 
write consistent casl design specifications 
cofi note 

mossakowski 
specification arbitrary institution symbols 
trends algebraic development techniques selected papers wadt bonas 
springer lncs 

mossakowski 
casl semantics tools 
tools algorithms construction analysis systems tacas european joint conferences theory practice software berlin 
springer lncs 

mossakowski 
relating casl specification languages institution level 
theoretical computer science appear 

mossakowski hutter 
extending development graphs hiding 
fundamental approaches software engineering fase european joint conferences theory practice software genova 
springer lncs 

mossakowski klin 
institution independent static analysis casl 
trends algebraic development techniques selected papers wadt genova 
springer lncs appear volume 

mosses 
cofi common framework initiative algebraic specification development 
proc 
th intl 
joint conf 
theory practice software development lille 
springer lncs 

mosses 
casl asf sdf users 
asf sdf proc 
nd intl 
workshop theory practice algebraic specifications volume electronic workshops computing 
british computer society www org uk workshop list cfm 

mosses 
casl guided tour design 
trends algebraic development techniques selected papers wadt lisbon 
springer lncs 

mosses 
casl cafeobj users 
chapter futatsugi nakagawa eds cafe industrial strength algebraic formal method 
elsevier 

mosses 
casl action semantics 
number ns notes series brics univ aarhus 

mosses 
cofi common framework initiative algebraic specification development 
rozenberg salomaa eds current trends theoretical computer science entering st century 
world scientific 
earlier version appeared bull 
eatcs 

plotkin power sannella tennent 
lax logical relations 
proc 
th intl 
colloq 
automata languages programming geneva 
springer 

reggio astesiano choppy 
casl ltl casl extension dynamic reactive systems summary 
technical report disi tr universita di genova 

reggio astesiano choppy hussmann 
analysing uml active classes associated state machines lightweight approach 
fundamental approaches software engineering fase european joint conferences theory practice software berlin 
springer lncs 

reggio cerioli astesiano 
algebraic semantics uml supporting multiview approach 
proc 
nd amast workshop algebraic methods language processing number twente workshop language processing enschede 

reggio cerioli astesiano 
rigorous semantics uml supporting multiview approach 
fundamental approaches software engineering fase european joint conferences theory practice software genova 
springer lncs 

reggio 
casl chart syntax semantics 
technical report disi tr universita di genova 

reggio 
casl chart combination statecharts algebraic specification language casl 
proceedings amast iowa city 
springer lncs 


casl tutorial 
slides available www tzi de tutorial ps 


annotated list urls related cofi casl 
cd rom distributed participants fifth nasa langley formal methods workshop 
available www informatik uni bremen de url txt 

mossakowski 
proposal annotations literal syntax casl 
cofi note 

mossakowski 
basic datatypes casl 
cofi note version 

schroder 
trustworthy specifications consistency checks 
trends algebraic development techniques selected papers wadt genova 
springer lncs appear volume 

schroder mossakowski 
specifying real numbers casl 
trends algebraic development techniques selected papers wadt bonas 
springer lncs 


formal combination ccs process algebra casl algebraic specification language 
wadt cofi genova 

sannella 
common framework initiative algebraic specification development software 
proc 
rd intl 
conf 
perspectives system informatics psi 
springer lncs 

sannella 
algebraic specification program development stepwise refinement 
proc 
th intl 
workshop logic program synthesis transformation venice 
springer lncs 

sannella tarlecki 
essential concepts algebraic specification program development 
formal aspects computing 

sannella tarlecki 
foundations algebraic specifications formal program development 
cambridge univ press appear 

schroder mossakowski 
hascasl integrated specification development haskell programs 
submitted publication 

schroder mossakowski tarlecki 
amalgamation casl enriched signatures 
proc 
th intl 
colloq 
automata languages programming 
springer 

schroder mossakowski tarlecki ho man klin 
semantics architectural specifications casl 
fundamental approaches software engineering fase european joint conferences theory practice software genova 
springer lncs 

wagner 
category casl signatures 
wadt bonas 

wieringa astesiano reggio le hussmann van den berg van den 
feasible construct semantics uml 
dynamic behaviour concurrency 
ecoop workshop reader uml semantics faq 

wirsing 
algebraic specification 
handbook theoretical computer science van leeuwen ed 
north holland 
