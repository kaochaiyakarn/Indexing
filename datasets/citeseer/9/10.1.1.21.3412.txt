matchmaking heterogeneous agents internet katia sycara lu matthias klusch seth robotics institute carnegie mellon university pittsburgh usa 
klusch cs cmu edu internet providing data users browse databases query software agents run 
due exponential increase deployed agents internet automating search selection relevant agents essential users collaboration di erent software agents 
rst describes agent capability description language larks 
discuss matchmaking process larks give complete working scenario 
concludes comparing language matchmaking process related works 
implemented larks associated powerful matchmaking process currently incorporating retsina multi agent infrastructure framework 
keywords agent interoperability matchmaking collaboration 
nowadays internet providing data users browse databases query software agents run 
due exponential increase deployed agents internet automating searching selection relevant agents essential users software agent society ways 
firstly novice users cyberspace may idea nd service agents available doing job 
secondly experienced users may aware change internet 
relevant agents may appear disappear time 
thirdly number sophistication agents internet increase obvious need standardized meaningful communication agents enable perform collaborative task execution 
facilitate searching interoperation agent internet proposed retsina multi agent infrastructure framework 
framework distinguish general agent categories service providers service requester agents 
service providers provide type service nding information performing particular domain speci problem solving number sorting 
requester agents need provider agents perform service 
internet open environment information sources communication links agents may appear disappear unpredictably need means help requester agents nd providers 
agents help locate called middle agents 
identi ed di erent types middle agents internet yellow page services brokers billboards experimentally evaluated di erent protocols interoperation providers requesters various types middle agents 
developed protocols distributed matchmaking 
process nding appropriate provider middle agent called matchmaking 
general form provider agents advertise capabilities expertise middle agents 
middle agents store advertisements 
research sponsored part ce naval research 
department computer science university canada 
email cs toronto edu requester agent matching result matching service request larks larks protocol providing service matchmaker agent capability descriptions larks provider agent provider agent process request local isis matchmaking larks requester asks middle agent knows providers desired capabilities 
middle agent matches request stored advertisements returns result 
process rst glance simple complicated fact providers requesters usually heterogeneous incapable understanding 
di culty gives rise need common language describing capabilities requests software agents convenient way 
addition devise mechanism matching descriptions language 
mechanism middle agents users ciently select relevant agents tasks 
rst describe agent capability description language larks 
discuss matchmaking process larks give complete working scenario 
concludes comparing language matchmaking process related works 
implemented larks associated powerful matchmaking process currently incorporating retsina multi agent infrastructure framework 
agent capability description language larks desiderata agent capability description language obvious need describe agent capabilities common language advertisement request matchmaking agents take place 
fact formal description capabilities di cult problems area software engineering ai 
main desired features agent capability description language 
expressiveness 
language expressive represent data knowledge meaning program code 
agent capabilities described implementation level 
existing agents able distinguished descriptions language 
inferences 
inferences descriptions written language supported 
automated reasoning comparison descriptions possible cient 
ease 
descriptions easy read understand easy write user 
language support domain common ontologies specifying agents capabilities 
application web 
main application domains language speci cation advertisements requests agents web 
language allows automated exchange processing information agents 
program description languages describe functionalities programs :10.1.1.27.4632
languages concern detail useful searching purpose 
reading writing speci cations languages require sophisticated training 
hand interface de nition languages idl go extreme omitting functional descriptions services 
input output information provided 
ai knowledge description languages kif meant describe knowledge actions service 
action representation formalisms strips restrictive represent complicated service 
agent communication languages kqml fipa acl concentrate communication message types agents leave content part language unspeci ed 
internet computing various description format proposed notably resource description framework rdf 
rdf aims web applications intended basis describing metadata 
rdf di erent vendors describe properties relations resources web 
enables programs web robots easily extract relevant information build graph structure resources available web need give speci information 
description describe functionalities web services 
languages satis es requirements propose called larks language advertisement request knowledge sharing enables advertising requesting matching agent capabilities 
speci cation larks speci cation larks frame slot structure 
context context speci cation types declaration variable types input declaration input variables output declaration output variables constraints input variables constraints input output variables ontological descriptions words frame slot types meaning 
context context speci cation local domain agent 
types optional de nition data types speci cation 
input output input output variable declarations speci cation 
addition usual type declaration may concept attachment 
concept de ned concept description slot 
logical constraints input output variables appear input output declaration part 
constraints restricted horn clauses 
optional description meaning words speci cation 
description relies concepts local domain ontology 
concept slots done form means concept ontological description word concept included slot 
speci cation larks interpreted advertisement aswell request depends purpose agent sends speci cation matchmaker agent 
larks speci cation wrapped appropriate kqml message sending agent indicating message content treated request advertisement 
domain knowledge larks larks ers option application domain knowledge advertisement request 
done local ontology describing meaning word larks speci cation 
local ontologies formally de ned concept languages 
main bene option twofold user specify detail requesting advertising matchmaker agent able automated inferences kind additional semantic descriptions matching larks speci cations improving quality matching 
example finding informations computers suppose provider agent hotbot excite advertises capability nd informations type computers 
administrator agent may specify capability follows 
context computer computer types listof model model brand brand brand price price money color color colors input brands setof brand brand areas setof state processor setof cpu cpu integer integer output info sorted info 
computer product exists processor cpu memory memory model price ge exists currency aset usd price le exists currency aset usd aset hp powerpc thinkpad satellite cpu aset pentium product colors brand money words speci cation attached name concept ontology 
de nitions concepts included slot 
concept de nitions sent matchmaker enclosed brackets 
example assume underlying ontology written concept language itl 
matchmaking process larks di erent types matching larks agent capability matching process determining advertisement registered matchmaker matches request 
details matchmaking process clarify various notions matches speci cations 
exact match accurate match descriptions equivalent equal literally equal renaming variables equal logically obtained logical inference 
type matching restrictive 
plug match accurate useful match called plug match 
roughly speaking plug matching means agent capability description matches request plugged place request raised 
see exact match special case plug match descriptions exact match plug match 
simple example plug match match request sort list integers advertisement agent sort list integers list strings 
example elaborated section 
relaxed match accurate useful match called relaxed match 
relaxed match tell description reused 
determines close descriptions returning numerical distance value 
descriptions match distance value smaller preset threshold value 
example relaxed match request nd place address buy compaq pentium computer capability description agent may provide price contact phone number computer dealer 
di erent users di erent situation di erent types matches 
provide matchmaker agent kinds lters 
filtering stages matchmaking process matching engine matchmaker agent contains di erent lters 
context matching 
pro le comparison 
similarity matching 
signature matching 
constraint matching 
rst lters meant relaxed matching signature semantical matching lter meant plug matching notions matching implement di erent modes matching matchmaker 
complete matching mode 
lters considered 

relaxed matching mode 
context pro le similarity matching done 

pro le matching mode 
context matching comparison pro les performed 
computational costs lters increasing order 

plug matching mode 
mode matchmaker performs signature semantical matching 
users may select combinations lters demand 
example ciency major concern may context pro le lter 
hand user agent want nd agents perform task exactly wants signature constraint lters nd plug matches 
describe lter detail 
context filter obvious matching speci cations appropriate context 
larks possibilities deal 
comparing words context slot considered speci cations 
comparing speci cations assumed domains atleast similar long real valued distances words exceed threshold subsumption relations attached concepts similar words 
matching process proceeds true 
pro le filter context matching cient consider speci cation 
done pro le lter compares larks speci cations tf idf term frequency inverse document frequency technique information retrieval area 
speci cation larks treated document word document req weighted document way 
number times occurs documents called document frequency df ofw 
collection documents unlimited advertisement database matchmaker 
document relevance word proportional number wf times word occurs inverse proportional df 
weight word document set documents denotes signi cance classi cation de ned follows wf log jdj df 
weighted keyword representation document contains word dictionary weight element 
dictionaries provide huge vocabulary cut dimension vector xed set appropriate keywords determined heuristics set keywords larks 
similarity dps req ad request req advertisement ad consideration calculated dps req ad req ad req ad denotes inner product weighted keyword vectors 
value dps req ad exceed threshold matching process continues steps 
similarity filter pro le lter drawbacks consider structure description 
means lter able di erentiate input output declaration speci cation 
second comparison pro le rely semantics words document 
lter able recognize word pair computer notebook closer distance pair computer book 
similarity lter overcomes drawbacks comparing descriptions terms called similarity distance descriptions larks 
computation similarity distance combination distance values calculated pairs input output declarations input output constraints 
distance values turn computed terms distance concepts words occur descriptions 
values computed ine stored respective databases matchmaker 
word distance computed trigger pair model 
words signi cantly related considered called trigger pairs 
value relation domain speci current implementation wall street journal corpus words compute word distance 
distance computation concepts discussed section 
signature constraint filters similarity lter takes consideration semantics individual words description 
take meaning constraints larks speci cation account 
sophisticated semantical matching needed 
done matchmaking process signature constraint lters 
lters designed look called semantical plug matches 
signature matching checks signatures input output declarations match 
performed set subtype inference rules concept subsumption testing see details 
software engineering proven component description desc plug matches description desc signatures matches 
desc implies desc clause set input constraints spec clause set input constraint 
implies desc clause set output constraints spec clause set output constraints spec 
denotes subsumption relation de nite program clauses 
type semantical match shown gure 
main problem performing plug matching logical implication constraints decidable rst order predicate logic arbitrary set horn clauses 
matching process tractable feasible decided subsumption relation weaker logical implication 
concept subsumption checking concept subsumption relation concept distance frequently matching engine especially similarity lter signature lter constraint lter 
relations computed ine stored concept database 
concept subsumes concept extension subset means logical constraints de ned term concept logically imply general concept concept language decidable concept subsumption concepts de ned language 
concept language itl np complete decidable 
incomplete inference algorithm computing subsumption relations concepts itl mechanism subsumption computation refer reader 
known trade expressiveness tractability concept languages practice surrounded subsumption algorithms correct incomplete 
desc capability desc desc plug desc desc capability desc plug match descriptions desc plugs desc 
computation distances concepts matchmaking identi cation additional relations concepts subsumption useful leads deeper semantic understanding 
expressivity concept language itl restrictive performance enhanced need way express additional associations concepts 
purpose called weighted associative network semantic network directed edges concepts nodes 
edge denotes kind binary relation concepts labeled addition numerical weight interpreted fuzzy number 
weight indicates strength belief relation real world semantics may vary 
implementation create associative network concept subsumption hierarchy additional associations set user 
distance concepts computed strength shortest path triangular norms see details 
example matchmaking larks consider simple speci cations request sorting integer numbers advertisement agent capability sorting real numbers strings respectively 
find agents sort integer numbers context matching matchmaker agent profile matching requester agent similarity matching signature matching ranked set agents capable sort integer numbers semantical matching example matchmaking larks 
context sort types input xs listof integer output ys listof integer le length xs ys ge ys xs context sorting types input xs listof real string output ys listof real string ys ge ys ys xs assume requester provider agent sends request matchmaker respectively 
describes matchmaking process request 

context matching words context declaration parts su ciently similar 
referenced concepts check equity 
matching process proceeds ltering stages 

comparison pro les result tf idf method speci cations su ciently similar 
similarity matching current auxiliary database word distance values similarity matching constraints yields le length xs null ys ge ys xs ys xs ys ys ge ys similarity speci cations computed sim 

signature matching consider signatures listof integer listof 
subtype inference rules 

holds st vice versa fsm sub 
analogous fsm sub 

constraint matching advertisement plug matches semantically request set input constraints subsumed set output constraints subsumed 
plugs 
please note hold vice versa 
related works agent matchmaking actively studied inception software agent research 
matchmaker aware facilitator kqml speci cation uses kif content language 
kif expression basically treated horn clauses 
matching advertisement request expressed kif simple uni cation equality predicate 
matchmaking larks performs better language matching process 
plug matching larks uses subsumption test select matches semantically matches 
shade coins kqml 
content language coins free text matching algorithm utilizes tf idf 
language shade matchmaker consists parts subset kif structured logic representation called max 
max logic frames declaratively store knowledge 
shade uses frame representation matcher prolog uni er 
service broker information system infosleuth 
content language supported infosleuth kif deductive database language ldl semantics similar prolog 
constraints user request resource data speci ed terms central ontology 
common vocabulary enables dynamic matching requests available resources 
advertisements specify agents capabilities terms ontologies 
constraint matching intersection function user query data resource constraints 
conjunction user constraints resource constraints satis able resource contains data relevant user request 
somewhat related research area research information mediators heterogenous information systems :10.1.1.48.1416
local information system wrapped called wrapper agent capabilities described levels 
provide usually described local data model local database schema 
kind queries answer usually subset sql language 
set queries service accept described grammar notation 
matching query service simple just decides query generated grammar 
area emphasizes planning database queries heterogeneous information systems providing complete sql 
systems supposed searched vast number resources internet 
description capabilities matching studied agent community related areas 
works related capability description problem capability service descriptions tackled di erent approaches 
software speci cation techniques 
agents computer programs speci characteristics 
numerous software speci cations formal methods model oriented vdm larch :10.1.1.27.4632
languages describing computer programs precise way speci cation usually contains details interests agents 
existing languages complex semantic comparison speci cations impossible 
reading writing speci cations require substantial training 

action representation formalisms 
agent capability seen actions agents perform 
number action representation formalisms ai planning classical strips 
action representation formalism inadequate task propositional involving data types 

concept languages knowledge representation 
various terminological knowledge representation languages 
ontology describe capability 
hand provides auxiliary concepts assist speci cation agent capabilities 

database query capability description 
database query capability description technique developed attempt describe information sources internet automated integration information possible 
approach information source modeled database restricted capabilities 
works related service retrieval broad approaches service retrieval 
information retrieval techniques search relevant information text software component retrieval techniques search software components software speci cations :10.1.1.48.1416
third search web resources typically described database models 
software component search techniques de ned notions matches including exact match plug match formally proved relationship matches :10.1.1.48.1416
proposed sequence lters search software components purpose increase ciency search process 
computed distance similar speci cations 
algebraic speci cation computer programs 
concept description concept hierarchy considered 
web resource search techniques proposed method look better search engines may provide relevant data user concerns rank search engines relevance user query 
propose directory services record descriptions information server called server description 
user sends query directory services ranks servers relevant user request 
query server described boolean expression 
search method similarity measure boolean expressions 
internet open system heterogeneous agents appear disappear dynamically 
number agents internet increases need de ne middle agents help agents locate provide requested services 
prior research identi ed variety middle protocols performance characteristics 
matchmaking process brings requester service provider agents 
provider agent advertises know middle agent stores advertisements 
agent desires particular service sends middle agent service request subsequently matched middle agent stored advertisements 
middle agent communicates results requester way happens depends type middle 
wehave de ned protocols allow middle agent maintain consistency databases 
matchmaking usually done dynamically large networks cient 
obvious trade quality ciency service matchmaking internet 
de ned implemented language called larks agent advertisement request matchmaking process larks 
larks judiciously balances language expressivity ciency matching 
larks performs syntactic semantic matching addition allows speci cation concepts local ontologies itl concept language 
matching process uses lters context matching comparison pro les similarity matching signature matching constraint matching 
di erent degrees partial matching result utilizing di erent combinations lters 
selection lters apply control user requester agent 
davide jha helpful discussions project 
ambite knoblock 
planning rewriting ciently generating high quality plans 
proceedings fourteenth national conference arti cial intelligence providence ri 
decker sycara williamson 
middle agents internet 
proc 
th ijcai pages nagoya japan august 
fankhauser neuhold 
knowledge integration heterogeneous databases 
proceedings ifip conference ds semantics interoperable database systems lorne victoria australia 
finin fritzson mckay 
kqml agent communication language 
proc 
rd international conference information knowledge management cikm acm press 
goguen nguyen meseguer zhang 
software component search 
journal systems integration pp 

jacobs shea 
role java infosleuth agent exploitation heterogeneous information 
proc 
intranet java developers conference april 
jha chalasani shehory sycara 
formal treatment distributed matchmaking 
proceedings second international conference autonomous agents agents minneapolis mn may 

cheng 
speci cation matching software reuse foundation 
proceedings acm sigsoft symposium software reusability acm software engineering note aug 

fuzzy concept network 
proc 
ieee international conf 
fuzzy systems 
kuokka kqml matchmaking 
proc 
rd intl 
conf 
information knowledge management cikm pp 
aaai mit press 

li danzig 
boolean similarity measures resource discovery 
ieee transactions knowledge data engineering vol november december 
muggleton de raedt 
inductive logic programming theory methods 
journal logic programming 
potter sinclair till :10.1.1.27.4632
formal speci cation prentice hall international series computer science 
resource description framework rdf schema speci cation 
www org tr wd rdf schema 
rosen eld 
adaptive statistic language model 
phd thesis carnegie mellon university 
salton wong 
vector space model automatic indexing 
communications acm 
sycara lu klusch 
interoperability heterogeneous software agents internet 
carnegie mellon university pa usa technical report cmu ri tr 
sycara decker williamson zeng 
distributed intelligent agents 
ieee expert pp december 
smolka schmidt 
attributive concept description expressive flexible action representations reason capabilities intelligent agent cooperation 
www dai ed ac uk students gw phd story html vassalos 
expressive capabilities description languages query rewriting algorithms 
available www cse ucsd edu yannis papers ps wing speci cation matching software components :10.1.1.48.1416
carnegie mellon university pa usa technical report cmu cs 
matchmaking heterogeneous agents internet katia sycara matthias klusch robotics institute carnegie mellon university pittsburgh usa 
klusch cs cmu edu lu department computer science university canada 
cs toronto edu internet providing data users browse databases query software agents run 
due exponential increase deployed agents internet automating search selection relevant agents essential users collaboration di erent software agents 
rst describes agent capability description language larks 
discuss matchmaking process larks give complete working scenario 
concludes comparing language matchmaking process related works 
implemented larks associated powerful matchmaking process currently incorporating retsina multi agent infrastructure framework 
keywords matchmaking agent collaboration coordination nowadays internet providing data users browse databases query software agents run 
due exponential increase deployed agents internet automating searching selection relevant agents essential users agent society ways 
firstly novice users may idea nd service agents available doing job 
secondly experienced users may aware change internet 
relevant agents may appear disappear time 
thirdly number sophistication agents internet increase obvious need standardized meaningful communication agents enable perform collaborative task execution 
facilitate searching interoperation agent internet proposed retsina multi agent infrastructure framework 
framework distinguish general agent categories service providers service requester agents 
service providers provide type service nding information performing particular domain speci problem solving number sorting 
requester agents need provider agents perform service 
internet open environment information sources communication links agents may appear disappear unpredictably need means help requester agents nd providers 
agents help locate called middle agents 
identi ed di erent types middle agents internet yellow page services brokers billboards experimentally evaluated di erent protocols interoperation providers requesters various types middle agents 
developed protocols distributed matchmaking 
process nding appropriate provider middle agent called matchmaking 
general form provider agents advertise capabilities expertise middle agents 
research sponsored part ce naval research 
requester agent matching result matching service request larks larks protocol providing service matchmaker agent capability descriptions larks provider agent provider agent process request local isis matchmaking larks middle agents store advertisements 
requester asks middle agent knows providers desired capabilities 
middle agent matches request stored advertisements returns result 
process rst glance simple complicated fact providers requesters usually heterogeneous incapable general understanding 
di culty gives rise need common language describing capabilities requests software agents convenient way 
addition devise mechanism matching descriptions language 
mechanism middle agents ciently select relevant agents tasks 
rst describe agent capability description language larks 
discuss matchmaking process larks give complete working scenario 
concludes comparing language matchmaking process related works 
implemented larks associated powerful matchmaking process currently incorporating retsina multi agent infrastructure framework 
agent capability description language larks desiderata agent capability description language obvious need describe agent capabilities common language advertisement request matchmaking agents take place 
fact formal description capabilities di cult problems area software engineering ai 
main desired features agent capability description language 
expressiveness 
language expressive represent data knowledge meaning program code 
agent capabilities described implementation level 
existing agents able distinguished descriptions language 
inferences 
inferences descriptions written language supported 
automated reasoning comparison descriptions possible cient 
ease 
descriptions easy read understand easy write user 
language support domain common ontologies specifying agents capabilities 
application web 
main application domains language speci cation advertisements requests agents web 
language allows automated exchange processing information agents 
program description languages describe functionalities programs 
languages concern detail useful searching purpose 
reading writing speci cations languages require sophisticated training 
hand interface de nition languages idl go extreme omitting functional descriptions services 
input output information provided 
ai knowledge description languages kif 
meant describe knowledge actions service 
action representation formalisms strips 
restrictive represent complicated service 
agent communication languages kqml fipa 
concentrate communication message types agents leave content part language unspeci ed 
internet computing various description format proposed notably resource description framework rdf 
rdf aims web applications intended basis describing metadata 
rdf di erent vendors describe properties relations resources web 
enables programs web robots easily extract relevant information build graph structure resources available web need give speci information 
description describe functionalities web services 
languages satis es requirements propose called larks language advertisement request knowledge sharing enables advertising requesting matching agent capabilities 
speci cation larks speci cation larks frame slot structure 
context context speci cation types declaration variable types input declaration input variables output declaration output variables constraints input variables constraints input output variables ontological descriptions words frame slot types meaning 
context context speci cation local domain agent 
types optional de nition data types speci cation 
input output input output variable declarations speci cation 
addition usual type declaration may concept attachment 
concept de ned concept description slot 
logical constraints input output variables appear input output declaration part 
constraints restricted horn clauses 
optional description meaning words speci cation 
description relies concepts local domain ontology 
concept slots done form means concept ontological description word concept included slot 
speci cation larks interpreted advertisement aswell request depends purpose agent sends speci cation matchmaker agent 
larks speci cation wrapped appropriate kqml message sending agent indicating message content treated request advertisement 
domain knowledge larks larks ers option application domain knowledge advertisement request 
done local ontology describing meaning word larks speci cation 
local ontologies formally de ned concept languages 
main bene option twofold user specify detail requesting advertising matchmaker agent able automated inferences kind additional semantic descriptions matching larks speci cations improving quality matching 
example finding informations computers suppose provider agent hotbot excite advertises capability nd informations type computers 
administrator agent may specify capability follows 
context computer computer types listof model model brand brand brand price price money color color colors input brands setof brand brand areas setof state processor setof cpu cpu integer integer output info sorted info 
computer product exists processor cpu memory memory model price ge exists currency aset usd price le exists currency aset usd aset hp powerpc thinkpad satellite cpu aset pentium product colors brand money words speci cation attached name concept ontology 
de nitions concepts included slot 
concept de nitions sent matchmaker enclosed brackets 
example assume underlying ontology written concept language itl 
matchmaking process larks di erent types matching larks agent capability matching process determining advertisement registered matchmaker matches request 
descriptions match 
mean text 
occurrence words su ciently overlap 
descriptions totally di erent text possible match 
match sense say matched advertisements 
details matchmaking process clarify various notions matches speci cations 
exact match accurate match descriptions equivalent equal literally equal renaming variables equal logically obtained logical inference 
type matching restrictive 
plug match accurate useful match called plug match 
roughly speaking plug matching means agent capability description matches request plugged place request raised 
see exact match special case plug match descriptions exact match plug match 
simple example plug match match request sort list integers advertisement agent sort list integers list strings 
example elaborated section 
example plug match request nd computer information constraint output list advertisement agent provide informations sorts respective output 
relaxed match accurate useful match called relaxed match 
relaxed match tell description reused 
determines close descriptions returning numerical distance value 
descriptions match distance value smaller preset threshold value 
normally plug match exact match special case relaxed match threshold value small 
example relaxed match request nd place address buy compaq pentium computer capability description agent may provide price contact phone number computer dealer 
di erent users di erent situation di erent types matches 
provide matchmaker agent kinds lters 
filtering stages matchmaking process matching engine matchmaker agent contains di erent lters 
context matching 
pro le comparison 
similarity matching 
signature matching 
constraint matching 
rst lters meant relaxed matching signature semantical matching lter meant plug matching 
please note computational costs lters increasing order 
notions matching implement di erent modes matching matchmaker 
complete matching mode 
lters considered 

relaxed matching mode 
context pro le similarity matching done 

pro le matching mode 
context matching comparison pro les performed 

plug matching mode 
mode matchmaker performs signature semantical matching 
users may select combinations lters demand 
example ciency major concern may context pro le lter 
hand agent want nd agents perform task exactly wants signature constraint lters nd plug matches 
describe lter detail 
context filter obvious matching speci cations appropriate context 
larks possibilities deal 
context slot speci cation contains list words denoting domain discourse matching speci cation 
comparing speci cations assumed domains means context atleast su ciently similar long real valued distances words exceed threshold matching process proceeds true 
second word larks speci cation may associated concept domain ontology 
context speci cations turned su ciently similar step concept de nitions describe meaning words attached detail domain 
case concepts name di erent de nitions stored separately extending concept name identi er agent send concept 
summarize context matching consists consecutive steps 
pair words context slots compute real valued word distances dw 
determine similar matches word selecting words minimum distance value dw 
distances exceed threshold 

pair similar matching words check semantic distance attached concepts exceed threshold 
pro le filter context matching cient consider speci cation 
done pro le lter compares larks speci cations tf idf term frequency inverse document frequency technique information retrieval area 
speci cation larks treated document word document req weighted document way 
number times occurs documents called document frequency df ofw 
collection documents unlimited advertisement database matchmaker 
document relevance word proportional number wf times word occurs inverse proportional df 
weight word document set documents denotes signi cance classi cation de ned follows wf log jdj df 
weighted keyword representation document contains word dictionary weight element 
dictionaries provide huge vocabulary cut dimension vector xed set appropriate keywords determined heuristics set keywords larks 
similarity dps req ad request req advertisement ad consideration calculated dps req ad req ad req ad denotes inner product weighted keyword vectors 
value dps req ad exceed threshold matching process continues steps 
similarity filter pro le lter drawbacks consider structure description 
means lter able di erentiate input output declaration speci cation 
second pro le comparison rely semantics words document 
lter able recognize word pair computer notebook closer distance pair computer book 
similarity lter overcomes drawbacks comparing descriptions terms called similarity distance descriptions larks 
computation similarity distance combination distance values calculated pairs input output declarations input output constraints 
distance values turn computed terms distance concepts words occur descriptions 
values computed ine stored respective databases matchmaker 
word distance computed trigger pair model 
words signi cantly related considered called trigger pairs 
value relation domain speci current implementation wall street journal corpus words compute word distance 
distance computation concepts discussed section 
signature constraint filters similarity lter takes consideration semantics individual words description 
take meaning constraints account 
signature lter constraint lter designed look plug matches 
larks representation proven description desc plug matches description desc signatures matches 
desc implies desc clause set input constraints spec clause set input constraint 
implies desc clause set output constraints spec clause set output constraints spec 
denotes subsumption relation clauses :10.1.1.27.4632:10.1.1.27.4632
plug semantical match illustrated gure 
signature matching performed set subtyping rules concept subsumption testing 
main problem performing plug matching logical implication constraints decidable rst order predicate logic arbitrary set horn clauses 
matching process tractable feasible decided subsumption relation weaker logical implication 
desc capability desc desc plug desc desc capability desc plug match descriptions plugs concept subsumption checking concept subsumption relation concept distance frequently matching engine especially similarity lter signature lter constraint lter 
relations computed ine stored concept database 
concept subsumes concept extension subset means logical constraints de ned term concept logically imply general concept concept language decidable concept subsumption concepts de ned language 
concept language itl np complete decidable 
known trade expressiveness tractability concept languages practice surrounded subsumption algorithms correct incomplete 
incomplete inference algorithm computing subsumption relations concepts itl 
mechanism subsumption computation refer reader 
computation distances concepts concept subsumption gives generalization specialization relation de nition concepts roles attribute sets 
particular matchmaking identi cation additional relations concepts useful leads deeper semantic understanding 
expressivity concept language itl restrictive performance enhanced need way express additional associations concepts 
purpose called weighted associative network semantic network directed edges concepts nodes 
edge denotes kind binary relation concepts generalization specialization positive association labeled addition numerical weight interpreted fuzzy number 
weight indicates strength belief relation real world semantics may vary 
implementation create associative network concept subsumption hierarchy associations set user 
distance concepts computed strength shortest path triangular norms see details 
find agent sort integer numbers matchmaker agent context matching requester agent type hierarchy syntactical matching ranked set agents capability sort integer numbers ontology semantical matching example matchmaking larks 
example matchmaking larks consider speci cations request sorting integer numbers advertisement agent capability sorting real numbers strings respectively 
context sort types input xs listof integer output ys listof integer le length xs ys ge ys xs context sorting types input xs listof real string output ys listof real string ys ge ys ys xs assume requester provider agent sends request matchmaker respectively 
describes matchmaking process request 

context matching words context declaration parts su ciently similar 
wehave referenced concepts check equity 
matching process proceeds ltering stages 

comparison pro les result tf idf method speci cations su ciently similar 
similarity matching current auxiliary database word distance values similarity matching constraints yields le length xs null ys ge ys xs ys xs ys ys ge ys similarity speci cations computed sim 

signature matching consider signatures listof integer listof 
subtype inference rules 

holds st vice versa fsm sub 
analogous fsm sub 

constraint matching advertisement plug matches semantically request set input constraints subsumed set output constraints subsumed 
plugs 
please note hold vice versa 
related works agent matchmaking actively studied inception software agent research 
matchmaker aware facilitator kqml speci cation uses kif content language 
kif expression basically treated horn clauses 
matching advertisement request expressed kif simple uni cation equality predicate 
matchmaking larks performs better language matching process 
plug matching larks uses subsumption test select matches semantically matches 
shade coins kqml 
content language coins free text matching algorithm utilizes tf idf 
language shade matchmaker consists parts subset kif structured logic representation called max 
max logic frames declaratively store knowledge 
shade uses frame representation matcher prolog uni er 
service broker information system infosleuth 
content language supported infosleuth kif deductive database language ldl semantics similar prolog 
constraints user request resource data speci ed terms central ontology 
common vocabulary enables dynamic matching requests available resources 
advertisements specify agents capabilities terms ontologies 
constraint matching intersection function user query data resource constraints 
conjunction user constraints resource constraints satis able resource contains data relevant user request 
somewhat related research area research information mediators heterogenous information systems :10.1.1.48.1416
local information system wrapped called wrapper agent capabilities described levels 
provide usually described local data model local database schema 
kind queries answer usually subset sql language 
set queries service accept described grammar notation 
matching query service simple just decides query generated grammar 
area emphasizes planning database queries heterogeneous information systems providing complete sql 
systems supposed searched vast number resources internet 
description capabilities matching studied agent community related areas 
works related capability description problem capability service descriptions tackled di erent approaches 
software speci cation techniques 
agents computer programs speci characteristics 
numerous software speci cations formal methods model oriented vdm larch 
languages describing computer programs precise way speci cation usually contains details interests agents 
existing languages complex semantic comparison speci cations impossible 
reading writing speci cations require substantial training 

action representation formalisms 
agent capability seen actions agents perform 
number action representation formalisms ai planning classical strips 
action representation formalism inadequate task propositional involving data types 

concept languages knowledge representation 
various terminological knowledge representation languages 
ontology describe capability 
hand provides auxiliary concepts assist speci cation agent capabilities 
database query capability description 
database query capability description technique developed attempt describe information sources internet automated integration information possible 
approach information source database restricted capabilities 
works related service retrieval broad approaches service retrieval 
information retrieval techniques search relevant information text software component retrieval techniques search software components software speci cations :10.1.1.29.5124
third search web resources typically described database models :10.1.1.48.1416
software component search techniques de ned notions matches including exact match plug match formally proved relationship matches :10.1.1.29.5124
proposed sequence lters search software components purpose increase ciency search process 
computed distance similar speci cations 
algebraic speci cation computer programs 
concept description concept hierarchy considered 
web resource search techniques proposed method look better search engines may provide relevant data user concerns rank search engines relevance user query 
propose directory services record descriptions information server called server description 
user sends query directory services ranks servers relevant user request 
query server described boolean expression 
search method similarity measure boolean expressions 
internet open system heterogeneous agents appear disappear dynamically 
number agents internet increases need de ne middle agents help agents locate provide requested services 
prior research identi ed variety middle protocols performance characteristics 
matchmaking process brings requester service provider agents 
provider agent advertises know middle agent stores advertisements 
agent desires particular service sends middle agent service request subsequently matched middle agent stored advertisements 
middle agent communicates results requester way happens depends type middle 
wehave de ned protocols allow middle agent maintain consistency databases 
matchmaking usually done dynamically large networks cient 
obvious trade quality ciency service matchmaking internet 
de ned implemented language called larks agent advertisement request matchmaking process larks 
larks judiciously balances language expressivity ciency matching 
larks performs syntactic semantic matching addition allows speci cation concepts local ontologies itl concept language 
matching process uses lters context matching comparison pro les similarity matching signature matching constraint matching 
di erent degrees partial matching result utilizing di erent combinations lters 
selection lters apply control user requester agent 
seth invaluable help implementation 
ambite knoblock 
planning rewriting ciently generating high quality plans 
proceedings fourteenth national conference arti cial intelligence providence ri 
decker sycara williamson 
middle agents internet 
proc 
th ijcai pages nagoya japan august 
fankhauser neuhold 
semantic vs structural resemblance classes 
special issue semantic issues multidatabase systems acm sigmod record vol 
pp 
fankhauser neuhold 
knowledge integration heterogeneous databases 
proceedings ifip conference ds semantics interoperable database systems lorne victoria australia 
finin fritzson mckay 
kqml agent communication language 
proc 
rd international conference information knowledge management cikm acm press 
goguen nguyen meseguer zhang 
software component search 
journal systems integration pp 

jacobs shea 
role java infosleuth agent exploitation heterogeneous information 
proc 
intranet java developers conference april 
jha chalasani shehory sycara 
formal treatment distributed matchmaking 
proceedings second international conference autonomous agents agents minneapolis mn may 

cheng 
speci cation matching software reuse foundation 
proceedings acm sigsoft symposium software reusability acm software engineering note aug 

fuzzy concept network 
proc 
ieee international conf 
fuzzy systems 
kuokka kqml matchmaking 
proc 
rd intl 
conf 
information knowledge management cikm pp 
aaai mit press 

li danzig 
boolean similarity measures resource discovery 
ieee transactions knowledge data engineering vol november december 
muggleton de raedt :10.1.1.27.4632
inductive logic programming theory methods 
journal logic programming 
nebel 
reasoning revision hybrid representation systems 
lecture notes arti cial intelligence lnai series vol 
springer 
potter sinclair till 
formal speci cation prentice hall international series computer science 
resource description framework rdf schema speci cation 
www org tr wd rdf schema 
rosen eld 
adaptive statistic language model 
phd thesis carnegie mellon university 
salton wong 
vector space model automatic indexing 
communications acm 
smolka schmidt 
attributive concept description complements 
ai 
sycara lu klusch 
interoperability heterogeneous software agents internet 
carnegie mellon university pa usa technical report cmu ri tr 
sycara decker williamson zeng 
distributed intelligent agents 
ieee expert pp december 
vassalos :10.1.1.48.1416
expressive capabilities description languages query rewriting algorithms 
available www cse ucsd edu yannis papers ps 
expressive flexible action representations reason capabilities intelligent agent cooperation 
www dai ed ac uk students gw phd story html wing speci cation matching software components :10.1.1.29.5124
carnegie mellon university pa usa technical report cmu cs 

