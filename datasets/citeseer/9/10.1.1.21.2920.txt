proximal nodes model query document databases contents structure gonzalo navarro ricardo baeza yates university chile model query document databases content structure 
goal obtain query language expressive practice efficiently implementable features time previous 
key ideas model set oriented query language operations nearby structure elements hierarchies content structural indexing bottom evaluation 
model evaluated regarding expressiveness efficiency showing provides trade goals 
shown include model media different text 
categories subject descriptors models principles user machine systems human information processing database management logical design data models database management physical design access methods database management languages query languages database management systems query processing information storage retrieval text processing document preparation format notation languages systems standards text processing index generation general terms algorithms design human factors languages performance additional key words phrases structured text hierarchical documents expressivity efficiency query languages text algebras 
document databases deserving attention due multiple applications digital libraries office automation software engineering automated dictionaries encyclopedias frakes baeza yates purpose document database store documents structured 
document database composed parts content structure 
content data structure relates different parts database criterion 
information model document database comprise parts data structure query language 
specify data seen image formats character set structuring mechanism markup index structure query language things asked author address 
de ciencias de la computaci universidad de chile blanco santiago chile 
email dcc uchile cl supported part chile 
preliminary partial version appeared proceedings sigir 
delta gonzalo navarro ricardo baeza yates answers 
problem retrieving information document databases normally concentrated text part 
text relational table codd information formatted meant retrieved key 
information easy way extract 
user specify wants see results reformulate query satisfied answer 
helps users find want worth considering 
traditionally textual databases searched contents words phrases structure navigating table contents time 
models appeared allow mixing types queries 
mixing contents structure allows posing powerful queries expressive mechanism 
language integrates types queries retrieval quality document databases improved 
suppose example software development environment editor allows users search procedures global variable assigning points variable assigned procedures invoke function defined module example search digital library books population statistics graphs illustrations regarding birds oil mentioned historical context 
queries mix content structure database new models handle 
see models evolution classical ones 
new models fully satisfactory 
general mature classical ones 
lack long process testing maturing traditional models enjoyed primitive software systems having implemented mainly research prototypes 
number challenges faced 
hand content database formatted natural language form 
means traditional model relying formatted data relational model assuming uninterpreted data objects relying formatted attributes classical multimedia databases bertino powerful represent wealth information contained text 
information extracted text rigid way sacks davis arnold moore zobel argue lines 
hand consensus structuring model database 
number possible models ranging structuring complex interrelation networks 
deciding structuring model involves choosing kind queries structure posed 
consensus powerful model 
powerful model efficiently implemented 
pay special attention expressiveness efficiency trade weak aspects model impractical applications 
aim model structure query document databases new trend mixing content structure queries 
model shown expressive efficiently implementable 
model query document databases contents structure delta time best knowledge approach satisfying goals see dao 
concentrate text show integrate types data audio images 
media common document databases 
argued better put layer integrating traditional database system textual trying design language comprising features sacks davis 
subsystem focuses different part query integration object oriented database structured text engine consens milo 
rely approach 
design language focused exploiting structure content related features 
features tuples joins added integrating language oriented kind operations relational database 
point covering 
cover languages describe document structure sgml international standards organization dsssl international standards organization international standards organization hytime international standards organization cover structuring models hierarchical 
structuring model may may expressed language describe structure 
second concentrate querying indexing 
describe different implementation alternatives index consider updates frequent queries 
efficiency comparison models centered querying 
third describe fixed query language model show number operations expressed 
include widely accepted primitives new ones 
syntax query operations necessarily intended final users operational algebra map user oriented query language 
fourth reasons experimental performance comparison model previous 
main problems cases code available performance depends heavily implementation comparing algorithms models models impose different structures text retrieve different types elements study needs theoretical framework exist structured text databases 
address important issue merging structural queries involving operations relevance ranking sections titles word computer relevant 
reason simple problem relevance considerations solved integration structuring relevance ranking seen goal see sacks davis arnold moore ideas problem 
organized follows 
section related reviewed 
section model terms data model operations allowed queries 
section resulting expressiveness evaluated 
section outline relevant implementation aspects formally analyze efficiency 
section software architecture model 
delta gonzalo navarro ricardo baeza yates section show experimental evaluation 
section extend model include types data 
section directions outlined 
formal syntactic semantic definition model appendix partial earlier versions navarro baeza yates navarro 

related section briefly review previous approaches problem structuring querying textual database 
mention traditional ones cover novel ideas 
complete survey see baeza yates navarro 
traditional approaches classical approaches problem querying textual database 
attempts adapt relational model codd include text management stonebraker desai traditional models information retrieval boolean model probabilistic model bit vector model full text model salton mcgill frakes baeza yates hypertext conklin semantic networks hull king tague object oriented databases kim cattell adapted manage text christophides 
approaches satisfy goals mixing structure content queries see sacks davis 
relational model adapt manage text clearly separates structure content inside structure case structured text 
classical information retrieval allows little structuring normally plain records fields 
hypertexts navigational oriented network structure 
semantic networks model unformatted data text images set attributes facts derivable reasonable images poor text brings lot information content 
object oriented databases express structure natural way facilities handle text limited implemented ad hoc 
path expressions extract structural components general structure documents amenable optimization see consens milo example optimizing path expressions particular case inclusion semantics 
object oriented databases record oriented set oriented drawback forces operational data manipulation reminiscent earlier navigational systems date 
models powerful extract information want document databases address different problems pure models oriented structure address general tuples joins attributes relevance ranking 
compare model address different goals 
novel approaches approaches characterized generally imposing hierarchical structure database mixing queries content structure 
model query document databases contents structure delta structuring simpler example hypertext simpler case problem mixing content structure satisfactorily solved 
sample novel models cover different approaches 
hybrid model baeza yates models textual database set documents may fields named areas inside records 
fields need cover text document nest overlap 
query language algebra pairs set documents set match points text position matches searched word pattern documents 
number operations obtaining match points prefix search proximity operations set manipulation documents match points restricting matches fields retrieving fields owning match point 
inclusion relationships queried respect field match point language fully compositional 
model implemented efficiently 
original proposal model baeza yates 
pat expressions tompa sees match points define regions 
regions defined pattern matching expressions specify endpoints look 
region represents set disjoint segments 
segment contiguous portion text 
allows dynamic definition regions translate queries regions queries matches 
need avoid overlapping segments regions causes lot trouble lack orthogonality model 
model implemented efficiently fawcett 
cost efficiency restrictions applications reasonable 
overlapped lists clarke solves problem pat expressions elegant way allowing overlaps nesting 
region list possibly overlapping segments originated textual searches named regions chapters example 
idea unify searches extension inverted lists regions words indexed way 
implementation model efficient pat expressions 
lists macleod general model structure query textual databases including hypertext linkages attribute management external procedures 
structure documents hierarchical overlaps answers queries nest top level elements qualify elements type sections paragraphs 
answers queries seen lists pointers database 
allows integration elegant way answers queries hypertext links seen lists 
model powerful hard implement efficiently 
model suitable comparison consider portion related querying structures portion quite powerful 
parsed strings gonnet tompa fact structure manipulation language 
context free grammar express database schemas database structured giving grammar parse text 
fundamental data structure string parsed string composed derivation tree plus underlying text 
manipulation carried number operations transform trees 
approach extremely powerful shown delta gonzalo navarro ricardo baeza yates relationally complete 
hard implement efficiently blake 
tree matching mannila query model relying single primitive tree inclusion 
idea model structure database query pattern structure trees find embedding pattern database respects hierarchical relationships nodes pattern 
language enriched prolog variables express requirements equality parts matched substructure retrieve part matching subtree root 
complexity algorithms studied showing case problem polynomial complexity logical variables matches satisfy left right ordering nodes pattern 
polynomial case operations traverse database structure find answers 

new model query structured documents describe model 
expose main concepts data model query language 
main concepts section expose general ideas structuring model query language defined achieve goals efficiency expressiveness simultaneously 
draw model lines 
main goal define powerful operations allow matching structure database avoiding algorithms match searching structure tree mannila 
point want set oriented language successful areas relational model extract set answers possible find algorithms retrieve elements low cost processed element 
want define fully compositional query language consider query expressions syntax trees nodes represent operations perform operators subtrees operands 
obtain set answers avoid top approach answers searched structure tree 
prefer bottom strategy 
idea quickly find small set candidates answers eliminate meeting search criterion 
solution algebra sets structure nodes 
nodes refer structure tree database structural element particular chapter 
confused types nodes refer structure nodes simply nodes 
operators take sets nodes return set nodes 
sets nodes subsets set nodes structure tree 
place pose text matching query name structural component leaves query syntax tree 
leaves solved sort index converted set structure nodes 
operators deal sets nodes produce new sets 
shows main concept refined model query document databases contents structure delta detail query language draw general software architecture model 
structure index operators composition basic text operators operators basic structure query language text index fig 

initial diagram model operates 
approach indices retrieve nodes satisfy text matching query represent node type chapters 
nodes obtained traversing database 
converted leaves query syntax tree sets structure nodes operators take sets nodes operate 
normally set hold candidates result operation 
note traverse complete structure searching 
need piece complete picture point operations sets time consuming matching database 
piece coupling structure nodes segments 
segment node represents text owns segment chapter includes text 
coupling allows efficient data structures arrange nodes looking segments example forming tree 
approaches mannila gonnet tompa weak binding nodes segment text need search tree find need 
order arrangement efficient operators need access nodes sets proximal 
happens obtain result traversing sets nodes synchronization 
efficiently convert text matching expressions node types sets nodes operations efficiently arranged sets produce arranged sets efficient implementation 
show interesting operators fact kind need operate nearby nodes identity nodes corresponding segment 
delta gonzalo navarro ricardo baeza yates point twofold show language operations nearby nodes efficiently implemented second show possible obtain quite expressive query language kind operations 
scheme allows structure hierarchy independent 
show allows integration media natural way 
data model explain model database 
pass redefine precisely terms informally 
text database composed parts text seen long sequence symbols characters words 
text stored seen filtered hide markup uninteresting components important model logical view text 
structure organized set independent hierarchies disjoint sets nodes 
hierarchy types nodes areas covered nodes different hierarchies overlap happen inside hierarchy 
need cover text 
important model structure expressed extracted text 
filtering markup important 
user aware details structure document internally represented obtained parsing able query document seen output device 
words contiguous logical view user aware may markup example asking proximity 
may argued including markup text allows user query markup text matching 
believe carried implementation 
query markup probably structure query language 
user query structure low level fashion content query language query content structure query language query structure 
text considered static structure built quite static 
allow building new hierarchies deleting modifying aim heavy continued operations 
striving efficiency aspects model usage text static hierarchies built sparingly querying frequent 
way structure obtained text part model 
obtained parsing text markup information hierarchy tree structure nodes simply nodes represents independent way see text chapters sections paragraphs pages lines 
root hierarchy special node considered comprise database 
model query document databases contents structure delta hierarchy set node types structural components corresponding tree 
examples node types page chapter section 
sets node types different hierarchies disjoint 
node hierarchy belongs node type hierarchy associated segment pair numbers representing contiguous portion underlying text 
segment node include segments children tree inclusion need strict 
point numbering scheme need noted highlevel user represent logical oriented constructions collections documents 
set disjoint segments seen belonging special text hierarchy nodes belong text node type 
text hierarchy node possible segment text 
idealized view really appears disjoint subsets nodes obtained time patternmatching queries 
observe hierarchical relationship nodes sets 
say sets flat 
disjointness restriction fact essential pattern matching expressions perfectly generate nested structure 
normally case text pattern matching languages 
appendix give formal definition model query syntax semantics 
query language section define query language operate structure defined previously including queries content 
intend define monolithic comprehensive query language requirements vary greatly application 
including alternatives single query language complex 
point number operations follow lines efficiently implemented 
set produced evaluating query subset hierarchy 
subsets composed nodes subtrees 
normally treat simply sets consider subsets keep hierarchical structure inherit complete hierarchy forming ordered forest trees 
decided merge nodes different hierarchies single result reasons clear hierarchies different independent ways see text sense pages chapters second implementation efficient set strict hierarchy 
clarke choice selected overlaps allowed answers nested components 
possible retrieve subtrees nodes algebra allows select nodes regarding context structure tree mannila 
language operational algebra necessarily intended accessed final user relational algebra seen users relational database 
serves intermediate representation operations 
delta gonzalo navarro ricardo baeza yates operations 
list operations consider sufficient large set applications suitable efficiently implemented 
said set exclusive essential 
including elements free positional content basis expr 
match matches basis structure constructor view included elements matches direct structural parent set manipulation composition operations child collapse subtract 
distances fig 

possible operations model classified type 
shows schema operations 
basic extraction operators forming basis querying structure contents operators combine results classified number groups operate considering included elements including elements nearby elements manipulating sets direct structural relationships 
matching sublanguage accesses text content database orthogonal rest language 
matches matching language generates set disjoint segments introduced model belonging text hierarchy explained 
example computer generates flat set segments letters word appears text 
note matching language allow complex expressions regular expressions 
operations matches applicable subsets text hierarchy transformations segments 
see point previous mechanism generating match queries restrict language sublanguage 
see navarro alternatives 
model query document databases contents structure delta example propose collapse sets matches merging overlap results 
basic structure operators kind leaves query syntax tree refer basic structural components 
name structural component struct queries 
set nodes type 
example chapter retrieves chapters book 
name hierarchy hierarchy queries 
set nodes hierarchy 
example formatting retrieves hierarchy related formatting aspects 
effect obtained summing operator node types hierarchy 
included operators select elements operand sense included second 
free inclusion select included element 
set nodes included node example citation table selects citations inside table 
set nodes initial final position included node example page formula pages cut display formula may want avoid 
positional inclusion select elements included position 
order define position top level included elements including node considered 
qualifying nodes descend node position left right considered order linearize position node top level nodes disjoint node considered overlap discarded descendants 
language expressing positions values independent 
consider finite unions gamma gammaj gammaj suffice purposes 
range possible values 
example paragraph page retrieves rd th th paragraphs pages 
paragraphs included paragraphs top level ones considered partially included page discarded 

example page chapter selects pages chapters normally wholly included chapter 
including operators select operand elements including sense elements second 
set nodes include nodes assume 
example section computer selects sections word computer appears times 
set nodes include start points nodes assume 
example chapter page selects chapters length pages assuming chapter begins new page 
direct structure operators select elements operand direct structural criteria direct structure tree corresponding delta gonzalo navarro ricardo baeza yates hierarchy 
operands hierarchy text hierarchy 
child set nodes children hierarchy node position considered th children 
assume 
example title child chapter retrieves titles chapters titles sections inside chapters 
parent set nodes parents hierarchy nodes assume 
example chapter parent section selects chapters top level sections 
distance operators select operand elements distance element second operand certain additional conditions 
set nodes segments segment candidate node nearest node considered distance includes select including 
order node considered candidate node minimal node containing exist cases 
example table chapter retrieves nearest tables figures inside chapter 
set nodes segments segment distance text symbols nearest ones 
plays role 
example computer architecture paragraph selects words computer followed architecture distance symbols inside paragraph 
recall distance measured filtered file markup removed 
set manipulation operators manipulate operands sets implementing union difference intersection different criteria 
operands hierarchy text hierarchy 
union example small medium large set size changing commands 
union text segments collapse 
gamma set difference example chapter gamma chapter chapters figures 
subtract text segments resort operations matches 
intersection example section chapter section page selects sections top level sections chapter time third top level section page 
intersect text segments 
set nodes segments segment node different hierarchies 
example title gets titles say exactly 
observe operations related beginnings endings sense operands different hierarchies model query document databases contents structure delta full segment counterparts 
examples 
examples language give idea kind queries posed 
suppose hierarchy main structural component book 
book number chapters bibliography appendix 
may sections may sections inside formulas figures tables 
table divided rows columns 
number paragraphs may appear chapters sections appendix 
elements title book chapter section table 
citations books listed bibliography 
hierarchy volume page line hierarchy vp presentation aspects italics emphasize suppose simple word matching language text 
chapter parent title architecture set chapters books titled architecture 
architecture expression pattern matching sublanguage 
chapter section title early chapters section subsection parent select top level sections title includes word early 
query illustrated 
paragraph paragraph computer science paragraph page paragraph preceding paragraph word computer appears symbols word science 
paragraphs page 
column row table title results extracts text position tables titled results 
citations chapter book knu selects knuth books chapters 
section formula gamma section appendix selects sections mathematical formulas appendices 
chapter parent title bibliography books 

expressiveness compare formally model similar models surveyed strings structure manipulation model 
pointto point comparison useful formal categorization expressiveness features exists 
appeal informal methods 
show model fits quality criteria exposed sacks davis 
develop informal framework situate models kind 
formal comparison appendix formally define semantics operations 
definition compare model novel models determine delta gonzalo navarro ricardo baeza yates early results solve early 
text book chapter chapter chapter section section 
title title title section title section title title title title title 
structure 
fig 

illustration effect query chapter section title early 
circles indicate selected nodes 
features represented vice versa 
brief results follows omitting representation mapping performed models see navarro details 
hybrid model baeza yates model completely represent converse weak 
represent structure defined model little queried 
pat expressions tompa model completely represent disregarding undesirable complications language really want represent mainly regarding conversions regions match points 
converse weak model represent recursive structures prevents representing operations language 
overlapped lists clarke comparison difficult models orthogonal 
represent hierarchies overlaps inverse 
disregarding fact model represent important structure operations translated models 
lists macleod model completely represent model recall consider part model related querying structures hand portion model represented important omissions multiple hierarchies return nested components 
tree matching mannila represent part model 
important omissions course logical variables model query document databases contents structure delta model implementation np complete inclusion semantics 
different models inclusion relationship hold text holds query hold text holds query relations hold text 
prevents model representing aspect show represent restricted cases 
related consens milo called included problem ability express containing followed 
consens milo simplification pat expressions formally analyze expressive power finding included represented introducing tuples join capabilities language ala relational 
holds model 
observe source problem possible express name appearing parts expression denote node exactly relational equijoin 
logical variables model represent weak part integration text structure 
quality criteria sacks davis number queries kind language able answer pointed 
summarize show express areas interested exclude features related relevance ranking connection relational databases address 
word word access find containing parallel computing processing expressed doc parallel computing collapse processing 
query scope restricted sub documents find containing parallel processing expressed doc parent title parallel processing 
example find st containing parallel processing expressed doc para doc parallel processing 
retrieval sub documents find containing parallel processing expressed section para parallel processing 
access structure documents 
examples find elements parent type expressed child article name hierarchy 
find elements children expressed parent 
find elements child expressed parent title child 
find elements expressed section 
find contain expressed doc 
find contain expressed section section 
access different types document find articles papers books parallel computing title expressed article delta gonzalo navarro ricardo baeza yates model type implicit static bound answers structure explicit dynamic hierarchy explicit static intermediate nested multiple hybrid model flat implicit static text flat pat hierarchy implicit dynamic text flat expressions recursive overlapped hierarchy implicit dynamic text overlapped lists overlaps lists hierarchy explicit static structure flat network single type tree hierarchy explicit static structure nested matching single strings hierarchy explicit dynamic intermediate nested multiple table 
analysis structuring power 
book title parallel computer 
issue concerned problem having different names standing title type document easily handled book booktitle 
article 
access attributes find attribute confidential 
attributes node types children node values text answer simple queries case express parent confidential 
informal framework experience gained formal comparison define informal framework situate models regarding important features baeza yates navarro navarro baeza yates 
framework divides analysis main areas structuring power database structured 
see table 
type structure flat hierarchical network implicit explicit structure embedded markup explicit structure index static dynamic structure ability link content structure strongly text bound intermediate strongly structure bound structure answers flat overlapped nested query language asked 
see table 
text matching querying content set manipulation handling sets answers inclusion relationships selecting nodes included including distances selecting nodes distance third area regarding content seen consider part 
model query document databases contents structure delta model set inclusion distances manipulation relationships hierarchy 
including different set included 
direct bound minimal 
nodes text positional inclusion inside node hybrid separate text restricted matches model documents 
complement fields pat 
negation including operations included bound overlapped union including included combination lists combination plus negations words lists nodes including type 
restricted direct tree logical tree patterns matching connectives variables table 
analysis query languages 
presents simplified graphical version comparison 
identify main points expressiveness represent model set containing aspects reasonably supports 
pat expressions hybrid model lists text firstclass object overlaps results compositional language positional inclusion direct distances semijoin contents join tuples set manipulation structure inclusion relations tree matching model combination nodes lists overlapped overlaps hierarchy results structures recursive fig 

graphical representation expressiveness comparison 
see main features model lacks tuples semijoin content retrieve chapters titles appear paragraph possibility having overlaps combine nodes result set query 
delta gonzalo navarro ricardo baeza yates believe included significantly degrading performance 
features support large class applications 
lacking features better included integrating model 

implementation issues section cover main aspects related implementation model regarding indexing querying 
depict suitable software architecture prototype implemented test model 
details navarro 
represent hierarchy tree nodes 
trees form structure index 
index struct hierarchy queries obtain types trees represent sets nodes algebra rest language operates 
processing content retrieval index 
model implementation content retrieval independent rest studied 
different operations leaves query syntax tree solved index internal nodes operate produce sets nodes 
explain process internal nodes query syntax tree leaves includes indexing scheme evaluation plan 
formally analyze efficiency implementation 
important observe proposing new implementation technique 
example mackie zobel 
known techniques efficiently implement model 
key efficiency achieved definition model allows efficient implementation classical tools 
evaluating internal query nodes traversal algorithms language compositional operations struct hierarchy receive deliver sets nodes 
sets arranged trees attending corresponding hierarchy text queries return flat sets implemented trees nodes level 
proximal nodes related operations algorithms traverse trees synchronization 
idea list merging case node sibling list children 
operation traverses trees slightly different way performs slightly different operations central idea 
implementations possible full evaluation scheme computes set answers lazy evaluation scheme computes result nodes inner operands query syntax tree obtained necessary compute final result 
lazy mechanism works follows syntax tree query require level answers 
triggers new requirements children root syntax tree turn expand level answers 
hopefully sets involved expression need fully evaluated 
mechanism new example widespread lazy functional model query document databases contents structure delta languages object oriented query languages 
lazy version forces order evaluation optimal requirements operators higher query syntax tree 
higher complexity 
hand may compute part result immediate better 
experimental results see show lazy evaluation normally better 
lazy evaluation suitable interactive environments user wants see top level answer navigates subtrees avoiding need evaluate rest 
evaluating leaves query tree indexing schemes left consider efficiently solve struct hierarchy queries 
handled accessing index 
requirements index structural component id retrieve tree nodes type 
hierarchy retrieve tree nodes 
lazy evaluation keep pointer node disk ask node retrieve top level descendents type 
node retrieve children operations preferably linear size answer counting cpu processing number disk accesses total seek time 
observe total seek time may higher order number disk accesses example random accesses file take seek time average 
alternatives handle trees structure index disk 
leads different indexing scheme 
full index 
full index stores hierarchy tree breath layout disk 
node pointers kept perform linear expected time respect size output seek time proportional size hierarchy 
index split file level tree ease reindexing process 
purpose endpoints segments node computed relative parent segment 
pose implementation problem node accessed parent 
benefit complete subtrees inserted deleted modifying numbers rest index 
results struct hierarchy queries extracted index positions rewritten absolute 
cases suffices retrieve node id segment node order process query node id parent needed parent child queries 
possible syntactically determine query needed avoid access disk 
memory efficient read single pass struct nodes needed leaves query syntax tree 
observe index suited lazy evaluation efficiently implement 
top level descendents node type spread file unordered seek time may large 
drawback index large space requirement words node 
delta gonzalo navarro ricardo baeza yates partial index 
possible reduce space requirement just words node cost allowing parent child queries different nodes having segment restriction easily overcome expressiveness cost 
case files kept node type sorted start points sorted points 
see 
final positions initial positions fig 

example partial index associated hierarchy 
easy implement linear time single pass index hierarchy query solved union node types takes kn time size hierarchy number different node types 
index wholly rewritten reindexing scheme worse previous 
index suitable lazy evaluation 
words node version partial index suitable lazy evaluation designed 
extended full index words node adding parent node handle different nodes segment 
case file node type kept layout similar full index 
allows implement linear time solved 
big problem lazy evaluation probably hierarchy computed 
problem different nodes having segment solved parser artificial intermediate points 
query evaluation query plan query syntax tree evaluation order respects dependencies allowed 
prefer minimizes total amount memory needed evaluation 
sequence operations perform solve query called query plan 
problem generating minimum memory query plans solved simplified aho obtain larger operand operand operate 
aho problem registers compile expression tree weight tree defined number nodes 
estimate size sets 
absence estimators number nodes reasonable choice 
algorithm simple solving tree evaluating bigger subtree 
model query document databases contents structure delta operation full lazy gamma min min min min min dh min min nh min dh child parent min min dh table 
time complexities algorithms size operands maximum height tree representation maximum arity trees 
useful alternative syntax tree represent query directed acyclic graph dag avoid re evaluating common subexpressions 
case problem finding optimal evaluation order complicated similar problem evaluating dag expression minimizing registers known np complete garey johnson 
heuristics case aho 
policies evaluate query order applicable full evaluation 
lazy evaluation expands nodes unpredictable way node syntax tree dictated requirements posed parent 
important point write algorithms operate modifying operands produce answer generate new set 
operand better modify generate new set 
query plan generator implement appropriate policy avoid keeping unnecessary copies memory deleting replacing operands time 
interesting point optimization query address issue complex constitute separate problem 
despite clever algorithms avoid operands large fit memory swapping policy implemented 
problem solved virtual memory approach keeping part intermediate results swapped disk 
case select operand swap information available query plan 
interesting option store internal results layout indices node types 
idea swapping policy provides uniform elegant solution problem 
analysis analyzed efficiency algorithms theoretically experimentally 
table abstracts complexity analysis 
observe lazy version expected higher complexity full 
see navarro algorithmic details 
performance hierarchy struct queries depend indexing scheme explained section 
delta gonzalo navarro ricardo baeza yates 
software architecture section outline possible software architecture system model 
users interact system interface define want friendly language mannila 
interface convert query query syntax tree language 
tree submitted query engine 
query engine optimizes query generates smart query plan evaluate converts tree sequence operations perform 
leaves query tree involve extracting components hierarchy name node types text matching subexpressions 
ones solved accessing index structure extract set nodes type set node ids segments 
second ones submitted text search engine returns list segments corresponding matched portions text 
rest operations performed internally final result set nodes delivered back interface 
interface charge visualizing results 
accomplish access contents database portions retrieved segments 
done request text engine engine knows access text 
text engine charge offering text pattern matching language keeping indices needs searching presenting filtered version text file upper layers 
service accepts query returns list matching segments 
third accepts segment retrieves text contents 
text engine completely separate subsystem separate indexing processes may exist 
indexes text answer text pattern matching queries indexing performed text engine 
extracts structure way text parsing recognizing markup creates structure index accessed query engine 
time text accessed directly outside text engine 
indexers collaborate markup structure indexer filtered text indexer presenting text upper layers 
see figures diagram complete system scheme organized 
document layer intended support sophisticated document management collections documents 

experimental results implemented prototype proposed software architecture test average time space measures evaluate heuristics 
aim compare model systems difficult practice test suitability model implementation 
matching sublanguage api ars pat suffix arrays manber myers frakes baeza yates 
matching sublanguage supported api includes words ranges wildcards proximity search boolean operators sub model query document databases contents structure delta user visualization results query query engine structure index text contents text index text engine segment constructor name set textual query list segments search results interface query set tree document layer text contents nodes segments fig 

architecture system model regarding querying 
traction fuzzy search 
api allows filtering raw text applying format filter character normalization filter synonyms stopwords filter 
filter allows files formats different ascii copying filtered form new file 
format related non searchable portions file filtered queries see true contents file 
filtering facility incorporate texts structure embedded content way allowing contents searchable marking parse structure generate structure index 
index matches separate index hierarchy 
pat array seen generic index text hierarchy 
implemented filters digital equipment sgml international standards organization lamport code kernighan ritchie 
query plan generation simple query optimization performed 
currently structure index kept memory kept disk 
text text index kept disk 
serious limit appear structure index tends far smaller text 
example megabyte texts articles generates near nodes index kilobytes space demanding indexing scheme 
megabytes ram devoted index handle database megabytes text 
course types documents pose serious problems 
example megabyte code indexed delta gonzalo navarro ricardo baeza yates structure index text index user interface add add write index engine text write index text contents structure indexer add document layer document document documents filter parse fig 

architecture system model regarding indexing 
fine grain parsing generate index nodes megabytes full index 
conducted set tests running prototype implementation sun mb ram running sunos 
cpu speed machine approximately 
results conclude full version time process query proportional total number nodes internal results constant near nodes second machine 
rough approximation gamma theta average operand size number nodes query syntax tree 
lazy version normally better full especially complex queries running times unstable 
running times full version nodes computed 
shows typical times single operation 
results possible approach operating proximal nodes allows compute results pass traversal operands 
ideas set oriented query language data structure efficiently arrange segments reduction queries operations proximal nodes lead implementation amortized cost processed element cases constant 

extending model multimedia documents study section extend model handle types data 
interested documents containing text audio images video queried subrahmanian jajodia 
model query document databases contents structure delta operand size lazy seconds full fig 

typical times single operation query 
note scale logarithmic axes 
multimedia documents normally structure relates components text images call structure external structure 
text multimedia objects internal structure 
example possible structure audio segment corresponding symphony 
text normally queried content classical multimedia databases multimedia objects queried truly content bertino 
textual formatted data description created hand attached object information queries ask 
multimedia data way introduced classical formatted data model leaving unresolved performance security considerations elmasri navathe 
advances signal processing artificial intelligence techniques allowed possibility searching content objects audio images faloutsos wu 
purpose show capabilities included data model smoothly integrate new facilities existing capabilities 
show structure inherent multimedia documents external multimedia objects internal exploited improve retrieval capabilities database 
fundamental ideas remain applicable assume possible impose hierarchical structuring data 
assumption quite general simpler hypermedia spatial structuring 
hypermedia structuring supported differentiating structure links hierarchical pointer links queried means graphlog language consens mendelzon 
technical reasons represent structure containment segments assume different elements inside structure linearly ordered 
delta gonzalo navarro ricardo baeza yates done internally visible user 
queries distances permitted spread different type objects return 
document order elements positional queries simply permitted hiding artificial ordering user 
database composed data sequence segments heterogeneous types 
structure 
relevant position data stream assigned number 
numbers ascending order longer represent consecutive text symbols 
just indicate ordering containment elements 
structural operation longer sense replaced medium specific applicable positions may represent words text seconds audio 
distances sense inside homogeneous data portion containing complete data portions interpretation start points specific medium 
single sublanguage text content language medium 
example language audio contents may consist audio pattern matching signal processing images may oriented precomputed semantic descriptions 
answers regarded segments specific hierarchy medium text hierarchy 
medium interprets structure way keep consistent idea containment 
example may represent part relation objects appearing image node representing object associated segment 
queries spatial proximity regarded medium specific 
technique allows consider structure document homogeneous regardless external internal 
queries containment performed structure extend seamlessly structure defined inside images audio software point view module responsible handling type data 
general parser recognize external structure data object passing relevant segment corresponding indexer indexes content internal structure 
index medium built content internal structure returned general indexer appends hierarchy 
moment querying subexpressions belonging sublanguage medium assigned specific query processor uses index text retrieval audio matching image semantics retrieve set segments represents relevant portion object 
structural part query solved regardless external internal nature 
visualize final result interface sends segment module determines medium belongs passes request appropriate specific module 
may retrieval text portion image combination text audio shows example document 
query phrase photo paul near retrieves segment visualized model query document databases contents structure delta sound recording 
paris trip went text index audio index area trip paris photo people paul eiffel tower nd part st part went audio text image text phrase image index friend paul near front front tower eiffel external structure internal structure segments fig 

document multimedia elements structure contents indices 

problem querying document database content structure analyzed 
existing approaches expressive inefficient 
defined model structuring querying textual databases expressive efficiently implementable extended handle types data 
language meant accessed final users constitute operational algebra 
evaluated model expressiveness efficiency 
showed competitive expressiveness getting close efficient implementation 
hand algorithms show performance analysis experimental tests 
model close efficiency expressive 
see graphical informal comparison similar models account efficiency expressiveness 
note included strings drawing assuming expressiveness superior languages analyzed 
note part lists model considered efficiency implement part considered 
observe delta gonzalo navarro ricardo baeza yates quantization concepts comparison subjective 
give idea model lies 
expressivity efficiency tree matching strings model hybrid lists pat expressions overlapped lists model fig 

comparison similar models regarding efficiency expressiveness 
number research directions related exploration possibilities offered model order find operators fit philosophy efficiently implementable 
definition query language suitable users possibly visual map operational algebra see example 
integration kind model relational model traditional ones information retrieval 
issue considered focus structure problem 
important issue include relevance ranking model see sacks davis ideas 
generalization problem manage non hierarchical structures hypertext network keeping desirable properties obtained simpler case 
dao extends overlapped lists handle nesting overlapping time shows different trend deserves attention 
formal framework compare expressiveness needed 
longterm goal formal sound hierarchy area formal languages see navarro baeza yates consens milo examples 
number implementation issues remaining example design swapping policy query evaluation keeping index disk handling multimedia documents query optimization model query document databases contents structure delta acknowledgments ziviani mariano consens jos omar alonso unknown referees fruitful comments careful reading improved 
aho sethi ullman 
compilers principles techniques tools 
addison wesley 
arnold moore fuller lowe thom wilkinson 
elf data model query language structured document databases 
proc 
th australasian database conference pp 

ars 

search city 
text retrieval windows power users 
santiago chile ars 
baeza yates 
hybrid query model full text retrieval systems 
technical report dcc dept computer science univ chile 
ftp sunsite dcc uchile cl pub users ps gz 
baeza yates 
extended model full text databases 
journal brazilian cs society april 
baeza yates navarro 
integrating contents structure text retrieval 
acm sigmod record march 
ftp sunsite dcc uchile cl pub users sigmod ps gz 
bertino gibbs 
query processing system 
acm tois jan 
blake bray tompa 
shortening oed experience grammar defined database 
acm tois july 
cattell 
object data management 
addison wesley 
faloutsos 
design performance considerations optical disk multimedia object server 
ieee computer dec 
christophides abiteboul cluet scholl 
structured documents novel query facilities 
proc 
acm sigmod pp 

clarke cormack burkowski 
algebra structured text search framework implementation 
computer journal codd 
relational model data large shared data banks 
cacm jan 
milestones research selected papers cacm th anniversary issue 
conklin 
hypertext survey 
ieee computer sept 
consens mendelzon 
hy query visualization system 
proc 
acm sigmod pp 

video presentation summary 
consens milo 
optimizing queries files 
proc 
acm sigmod pp 

consens milo 
algebras querying text regions 
proc 
pods 
dao sacks davis thom 
indexing structured text queries containment relationships 
proc 
th australasian database conference 
date 
database systems th ed 
addison wesley 
desai goyal sadri 
data model formatted textual data 
journal asis 
digital equipment 

cda technical specification 
digital equipment 
elmasri navathe 
fundamentals database systems nd ed 
benjamin cummings 
fawcett 
pat user guide 
uw centre new oed text research univ waterloo 
delta gonzalo navarro ricardo baeza yates frakes baeza yates eds 

information retrieval data structures algorithms 
prentice hall 
garey johnson 
computers intractability 
freeman 
gonnet tompa 
mind grammar new approach modelling text 
proc 
vldb pp 

hull king 
semantic database modelling survey applications research issues 
acm computing surveys 
international standards organization 

information processing text office systems standard generalized markup language sgml 
international standards organization 
iso 
international standards organization 

information processing text composition standard page description language 
international standards organization 
iso iec dis 
international standards organization 

information technology hypermedia structuring language hytime 
international standards organization 
iso iec 
international standards organization 

information technology text office systems document style semantics specification language dsssl 
international standards organization 
iso iec dis 
kernighan ritchie 
programming language 
prentice hall 
mannila 
grammatical tree matching 
proc 
cpm pp 

mannila 
retrieval hierarchical texts partial patterns 
proc 
acm sigir pp 

kim eds 

object oriented concepts databases applications 
addison wesley 

dimensional filters structured text 
information processing management lamport 
document preparation system 
addison wesley 
mackie zobel 
retrieval tree structured data disc 
proc 
rd australasian database conference 
macleod 
query language retrieving information hierarchic text structures 
computer journal 
manber myers 
suffix arrays new method line string searches 
proc 
acm siam pp 

navarro 
language queries structure contents textual databases 
master thesis dept computer science univ chile 
ftp sunsite dcc uchile cl pub users thesis ps gz 
navarro baeza yates 
expressive power new model structured text databases 
proc 
panel pp 

ftp sunsite dcc uchile cl pub users ps gz 
navarro baeza yates 
language queries structure contents textual databases 
proc 
acm sigir pp 

ftp sunsite dcc uchile cl pub users sigir ps gz 
sacks davis arnold moore zobel 
database systems structured documents 
proc 
pp 

sacks davis zobel ramamohanarao 
advanced database systems text retrieval 
proc 
rd australian database conference pp 

tompa 
pat expressions algebra text search 
complex pp 

salton mcgill 
modern information retrieval 
mcgraw hill 
model query document databases contents structure delta stonebraker lynn guttman 
document processing relational database system 
acm tois april 
subrahmanian jajodia eds 

multimedia database systems 
springerverlag 
tague 
complete formal model information retrieval systems 
proc 
acm sigir pp 

wu ang lam loh desai 
inference retrieval facial images 
acm multimedia systems 
appendix formal syntax semantics define formal model syntax expressions studied expr annotated syntax semantics operations function expr 
expressions sets nodes 
formal model text database tuple type segm sigma text array 
size database number symbols sigma alphabet text 
finite set hierarchies text distinguished element text hierarchy 

set node types hierarchy write cv finite set node types distinguished element text node type 
holds cv cv 
cv fc 
set nodes hierarchy write nv finite set nodes including special text nodes text nodes 
holds nv nv 
nv ft tg 

theta binary relationship defines tree hierarchy write holds rv nv theta 

ype type node 
holds type cv implies type segm theta segment node 
holds segm define rom satisfy segm rom 
define segm expected 
define binary relationship gamma 
union gamma rv impose conditions gamma gamma 
gamma 
loops allowed 
gamma 
transitive closure gamma 
gamma fv 
nv nv gamma 
hierarchy text hierarchy single root 
gamma 
gamma 
node parent 
delta gonzalo navarro ricardo baeza yates gamma 
segm segm 
operate segments sets interpret segm fn nat rom segment node includes segment descendants 
nat set natural numbers 
gamma fv nv segm ae segm gamma 
text hierarchy segments tree included including ancestor included 
gamma fv nv segm segm gamma 
gamma 
text hierarchy segments tree equal single path tree 
gamma 
kleene transitive reflexive closure gamma 
gamma fv nv segm segm segm segm segm segm strict hierarchy segments text hierarchy 
define binary relation theta called ae mean node includes confuse segment inclusion 
nodes hierarchy second descend test segment inclusion 
ae gamma fv fx yg nv gamma 
segm segm 
observe ae segm segm reciprocal true 
syntax formal semantics table shows syntax language 
definition nat set natural numbers int integers mat set pattern matching expressions os language denoting positions expr 
compositions allowed operands different hierarchies 
indicate right side alternative brackets conditions intervening hierarchies production valid 
hierarchy result belongs expressed function expr brackets indicate simply type result production belongs 
position define semantics defined operations 
defining function expr 
interprets expression terms set nodes 
function defined inductively hierarchy nv struct fx ype cg 
pattern matching expression result set segments 
ft collapse ft gamma ft 
gamma gamma 

model query document databases contents structure delta expr gamma 
hierarchy gamma fv struct gamma fc match mat collapse 
operations manipulate matches gamma nat nat os os parent nat child os nat table 
syntax 
fx segm segm fx ae kg 
fx rom segm gj kg 
fx segm gj kg 
fx ae yg 
fx rom segm fx segm fx theta theta ftrue falseg interpretation position language says left right position node set nodes acceptable specification position defined segments includes case define fx ae maxim ae ae maxim selects maximal nodes set maxim fx ae yg 
fx fx rom segm maxim segm oe segm fx fx segm maxim segm oe segm parent fx gamma 
kg 
child fx gamma 
fz gamma 
zg fx rom gamma fz ae zg fz ae zg fx rom fz ae zg fz ae zg 
selects node set lowest value rom delta gonzalo navarro ricardo baeza yates maximal 
nodes hierarchy criterion gives exactly node 
fx rom gamma fz ae zg fz ae zg fx rom fz ae zg fz ae analogous selecting highest value maximal 
