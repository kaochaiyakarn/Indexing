articles visual formalisms higraph general kind diagramming object forms visual formalism topological nature 
higraphs suited wide array applications databases knowledge representation notably behavioral specification complex concurrent systems higraph language sea 
david harel visualizing information especially information com plex intricate nature 
years subject considerable people 
formation interests 
structural 
set theoretical relational nature 
contrasted kinds quan information discussed length 
consequently shall interested diagrammatic paradigms essentially topological nature geometric 
sequel 
best known topo visual formalisms roots famous swiss mathematician euler 
course 
formalism graphs second notion euler circles 
evolved venn diagrams 
graphs implicit euler celebrated solved problem bridges berg 
english translation appears 
euler circles appear letters written euler early 
modified improve ability represent logical propositions john venn 
see 
chap 
information 
graph basic form 
simply set points nodes connected edges arcs 
role interestingly 
topo visual achievements euler carried period see eye 
euler lost sight right 
left 
tempting attribute part fact lack stereoscopic vision reduces ability estimate ze distance 
possibly causing sharper awareness ical feature 
part carried author computer science carnegie mellon university 
pittsburgh 

ac represent single set elements binary relation 
precise meaning relation part application little mathematical properties graph 
certain restrictions relation yield special classes graphs particular interest ones connected directed acyclic planar bipartite 
need elaborate graphs computer science extensively virtually branches field 
elements represented nodes applications range concrete physical gates circuit dia gram complexit classes classification schema edges represent conceivable kind relation including ones temporal causal functional epistemological nature 
graphs modified support number different kinds nodes edges representing different kinds elements relation ships 
somewhat widely extension graphs formalism hypergraphs see 

finding applications computer science 
mainly database theory see 

hypergraph graph relation spec ified necessarily binary fact need fixed arity 
formally edge longer connects pair nodes 
subset thereof 
hypergraphs somewhat amenable visual repre sentation 
various ways overcoming diffi culty conceived see 
analogy graphs special kinds hypergraphs par ticular interest directed acyclic 
important emphasize information communications ac 
may volume number articles conveyed graph hypergraph nonmetric captured purely topological notion hess term taken shapes locations dis sizes example significance 
quite widely graphs euler circles venn diagrams represent logical propositions color charts 
see 
basic idea appeal dimensional case jordan curve theorem simple closed curves partition plane disjoint inside outside regions 
set represented inside curve giving topo logical notions enclosure exclusion intersection curves obvious set theoretic meanings subset disjoint having nonempty intersection respectively 
bottom line graphs hyper graphs nice way representing set elements special relation euler venn diagrams nice way representing collec tion sets structural set theoretical relationships 
difference types relationships obvious 
structural ones uniformly interpreted obvious set theoretic fashion way symbol logical formalisms uniformly inter equality predicate edge rela tions graphs hypergraphs attain different mean ings different applications 
main observation motivating numerous computer related applications complexity objects systems situations consideration due large part fact capabilities needed 
usually large num ber sets interrelated nontrivial set venn consistent respect see 

description set diagram 
topological termed 
theoretic ways additional relationships special nature depend ing application hand 
furthermore structural set theoretic relationships desirable identify cartesian product sets action crucial preventing certain kinds representations growing tially size 
line observations 
supported examples sequel pur pose article extend combine euler topo visual formalisms tool suitable dealing cases 
section introduce higraphs mod euler venn diagrams somewhat 
extending represent cartesian product 
connecting resulting curves edges hyperedges 
appendix contains formal syntax seman tics simple higraphs 
illustrate power formalism briefly discussing higraph versions graphical languages entity relationship diagrams semantic associative networks dataflow diagrams 
detail obvious application called statecharts essentially higraph version finite state machines transition diagrams 
higraphs start simple example euler circles fig ure 
seen prefer rounded rounded rectilinear shapes circles unrestricted curves shall call areas zones enclose blobs sequel 
sec ond formal definition supplied appendix shows regard blob denoting certain kind successful choice term 
chosen reminiscent high graphs 
graphs 
diagrams limited stratified way word imply 

graphical representation hypergraphs may volume number communications ac articles 
applications euler circles venn diagrams set nesting curves denoting set inclusion set membership 
seen contain cases intersection sets 
real departure euler venn treatment require set interest represented unique blob complete full contour 
reasons desire provide set area naming labeling purposes 
example represent difference sets represented large blobs entire set upper left 
answer venn notational conven tions appear label upper set 
solution illustrated large intersecting blobs clearly labeled intersection labeled difference called fact left contour refer 
pre aid 
simple blobs 
adding unique contours identifiable sets 
unique contour convention 
real identifiable sets atomic sets represented blobs residing bottom levels diagram containing wholly enclosed blobs 
blob merely denotes compound set consisting union sets represented blobs totally enclosed 
atomic blobs significantly fact jordan curve intersects ily mean sets represented really intersect nonempty 
fact 
formalism intersection curves 
mean internal blobs appear appropriate places difference intersection sets represent identifiable 
far information 
drawn completely dis sequel 
shall blur distinction curve 
associ ated blob 
set depicts 
communications acm may volume number articles joint defined union curve intersects 
course entirely enclosed 
things quite different union sound little strange really restrictive intersect simply add extra blobs representing done 
say empty space diagrams represents area atomic blob contains enclosed blobs 
atomic blob represents identifiable set clearly set happen empty 

adding cartesian products add ability represent cartesian product 
shows notation partition ing dashed lines 
example longer union product union union 
symbolically cu shall call operands product case 
orthogonal components blob cartesian product unordered sense really set unordered pairs elements 
operator symmetric fact appendix symbol denote 
consequence previous convention regarding set inclusion versus set membership product associative 
way unordered triple legal element set need distinguish 
idea helps assume atomic sets pairwise element appears sets 
decomposing blob orthogonal components topologically partitioning inner area jordan curve yields unique unambiguous area component 
labels label appropriate components unambiguously 
hand shall see reason wanting sets blob contours desired orthogonal component enclosed 
notice somewhat awkward location labels couple possibilities locating label product blob illustrated shall remain 

alternative labeling partitioned blobs formalism representing sets interested structural set theoretic relationships time add edges 
higraph obtained simply allowing edges 
generally 
hyperedges attached contour anu blobs 
graphs edges directed undirected la unlabeled type allowed single kind unlabeled directed hyperedge arity 
arrows simple binary edges 
add rag edges resulting higraph may volume number acm high level connecting low level connecting connecting directed way hyperedges connecting connecting clearly prohibit self directed partially self directed edges connecting formal meaning edges see appendix graph theoretic spirit simply associates target blobs source blobs particular relationship edges represent 
reason wanting set interest contour enable connected edges 
sequel term higraph liberal sense 
making real distinction various possibilities example edge hyperedge cases 
free attach meaning relation ship way extends wards elements sets 
take relationship represented ordinary arrows higraph mean element source set related element target set relationship information conveyed 
ex ample really captured ordinary graph edges forced decide element target set meant causing overspecification 
computer science literature full uses graphs appears 
benefit extensions offered higraphs 
consider entity relationship diagrams conceptual specification databases 
really hyper graphs single type node depicted rectangle denotes entity described pool 
representations clique immediate applications thing notice attempting apply higraphs edges connect sets sets 
elements elements graphs 
common way inter higraph edge collection regular edges connecting element set element 
way example possible represent clique 
semantics mandatory bare meaning higraph edge relationship represents holds sets connects 


simple higraph data 
hyperedges labels written small diamond shaped boxes regarded nodes capture intended relationships en 
shows simple example diagram representing small part data airline 
information content clear pi ots fly aircraft secretaries employees employees paid salaries certain dates way relation ship 
notice edges informing pilots secretaries really employees 
conveying information totally different kind 
capture precisely kind structural set theoretic relations discussed earlier 
flat diagrammatic representation kinds relationships cause lot confusion especially large intricate cases glance examples literature shows 
formalism 
called 
ignoring additional features tha 
formalism supports 
attributes entities 
relationships classification relationships 


shall satisfied describing features formalism directly relevant discussion 
communications ac may volume number articles 
simple diagram shows way information represented higraph extension diagrams 
set employees divided sub sets interest secretaries additional blob desired 
paid edge emanates emp blob 
edge emanates plots blob exactly expect 
edge rightly connects secret 
ates blob parent blob emp 

new information quite easily added part equipment related years relationship received dates received specified consisting pairs orthogonal components month year independent divisions represented overlapping blobs illustrated shows new breakup emp sex added previous 
higraph version extension employees 
employees couple additional details 
reason relate plot male secret aries entities 
practice overlaps probably somewhat overly overlapping blobs detract clarity total diagram observation line claim hierarchy far way humans prefer structure things see chap 

opinion universally accepted human factors aspects formalisms higraphs appear require careful experimental research carried 
occasionally authors labels capture relationships typically ones try describe special nature breakup subsets 
may volume number acm articles department vehicle example consider verbatim higraph contains information 
formalism similar dia grams number years see semantic associative networks 
graph structures widely artificial intelligence natural language processing knowledge representation discussed numer 
higraph version 
diagram taken ous books papers 
survey history ap pears examples collection papers 
semantic networks thought concept relationship diagrams research area concerned association rich se mantic meaning various types nodes edges 
edges abundance resulting large times incomprehensible diagrams 
semantic networks contain distinct type edges corresponding set inclusion set membership physical part relationship way higraphs exactly diagrams advantages significant different shades structural relationships visually distinct see section called possible variations theme 
clearly naive claim profound cs knowledge representation overcome diagrammatic considerations 
little improvement helps 
diagrams semantic networks people observed relationships entities concepts stratified levels variety names attached 
el standing instance 
subset 

respec lively 
auch 
group part 
communications ac may number articles detail 
typically done considering diamond shaped relationship labels nodes second kind involving structural relationships 
people opposed visual blurring distinction tween entities relationships prevent transferring idea higraph framework 
yield blob struc ture relationships edges serv ing connect entities concepts rele vant real relationships 
noteworthy area blobs higraph exploited applications 
full diagrams semantic networks typically laden attributes properties attached additional stump nodes various entities 
attributes kind inherited hierarchy phrase goes 
fact interesting issues associated notion inheritance see 
representation inside blob appear ideal place lit attach identify properties attributes explanations relevant blob enclosed 
simple inheritance possible quite naturally approach representing subset relationship 
papers semantic networks model suggested edges represent highlevel entities relationships ideas pursued full potential see 
idea basing decomposition sets cartesian products consistent literature types 
example see features captured notions record variant respec tively 
graph formalisms higraphs appear useful data flow diagrams 
higraph version diagrams called activity charts graphical languages supported statemate system logix described 
activity charts blobs denote func tions activities subset relation representing subfunction relationship edges denote possible flow data 
cartesian product 
con sider activity chart simple part functional decomposition automatic teller machine 
edges means customer account number possibly flow 
read write instruction identify activity update account ac tivity serve customer activity deposit withdraw balance query 
edges means new amount customer balance adjusted flow deposit withdraw activities update account activity 
customer 
simple 
activity chart higraphs form basis visual language specifying security con straints operating systems 
formalism represents access rights exceptions thereof distinct kinds edges higraph blobs represent groups users files entities 
cartesian product represent breakup files components 
contains number interesting special purpose extensions basic higraph formalism 
ideas appears form proof diagrams verifying concurrent programs simple way higraphs basis hypertext system conventional graph 
part issues arise context hypertext systems multiple hierarchies superconcepts composite nodes treated naturally higraph formalism 
see 
conceive additional applications visualizing interrupt driven flowcharts certain kinds model collapsing constructions model theory 
statecharts obvious application previous section notwithstanding appear beneficial application higraphs lies extending state transition diagrams obtain statecharts 
process trying formulate underlying graphical concepts embodied earlier statecharts higraphs emerged 
section contains brief description statechart formalism reader referred details 
motivate discussion appears agreement literature software systems engi neering existence major problem specification design large complex reactive systems 
reactive system see 
contrast transformational system characterized event driven continuously having react external internal stimuli 
examples include tele phones communication networks computer operating systems avionics systems vlsi circuits man machine interface kinds ordinary software 
problem rooted difficulty describing reactive behavior ways clear realistic may volume number communications ac 
depth statecharts time formal rigorous order amenable precise computerized analysis 
havior reactive system really set allowed sequences input events conditions actions additional information timing constraints 
notable solutions proposed problem petri nets communicating sequential processing csp calculus communicating systems ccs 
sequence diagrams esterel temporal logic 
statecharts constitute attempt solving problem aimed classical formalism finite state machines fsms visual counter part state transition diagrams trying suitable large complex applications 
people working design really complex systems conventional fsms state diagrams rea sons state diagrams flat 
provide natural notion depth hierarchy modularity support stepwise top bottom development 
state diagrams comes transitions 
event causes tran sition large number states highlevel interrupt attached sepa resulting unnecessary multitude arrows 
state diagrams extremely quite infeasible wl en comes states states interpreted usual way snapshots situation point time 
system description grows linearly number states grows exponentially conventional fsm formalism forces explicitly represent 
state diagrams inherently sequential nature cater concurrency natural way 

concurrent system global states considered unnatural 
attempts remove drawbacks various kinds hierarchical communicating state machines 
typically hierarchies provide little help reducing size resulting description condense information 
communication fsms usually channel processor 
allows single set communicating machines highest level description 
furthermore part extensions particularly diagrammatic spirit loses advantages visual medium offer 
statecharts higraph extension standard state transition diagrams blobs represent states arrows represent transitions 
additional statechart features reader referred 
basics say statecharts state diagrams depth orthogonality broadcast communication 
depth represented blobs illustrated may replace 
symbols stand events trigger transitions bracketed condition 
triggers transition occurs true time 
fact overlap completely inside means exclusive xor tantamount 
main point arrow leaves contour applies 
simple higraph principle applied large collections states levels helps overcome points flatness multilevel events 
idea exploiting kind describing levels state transition diagram appears 
noted small default arrows depend encouraging experimental evidence state charts system description discussed 
sect 

communications ac may volume number articles encompassing blobs 
state singled default start state fact represented top default arrow 
bot tom states default alleviates need continuing arrow boundary 
orthogonality dual xor decomposition states essence decomposition cap tured partitioning feature higraphs unordered cartesian product 
state consists orthogonal components related tantamount default arrows 
intended semantics equivalent flat version represents sort automata product 
tice simultaneity transitions takes place event occurs state configuration merging splitting transitions lead note special condition attached transition way reflected 
illustrates heart exponential blowup problem states explicit version product numbers 
transition statechart merely sent outside world output 
affect behavior state chart orthogonal components 
achieved simple broadcast mechanism just occurrence external event causes transitions components 
rele vant see event occurs transition labeled elf 
taken action immediately acti regarded new event possibly causing transitions components 
simple example 
comes external event configuration virtue generated fn triggering transitions components chain reaction length 
external event occurs new configuration virtue similar chain reaction length 
concludes brief account basic features statecharts illustrate formalism simplified version digital watch described 
watch external control buttons main display jg orthogonality statecharts states th orthogonal components higraph version 
levels state explosion difficulties points overcome reasonable way 
observed studying ex amples 
figures contain outputs orthogonal components synchronize far common events affect state condi tions 
certain amount subtlety added way statecharts model concurrency allowing output events statecharts viewed extension mealy machines see output events called actions attached optionally triggering event transition 
contrast conventional mealy machines action ap 
broadcasting statecharts may volume number communications ac articles show time hour 
minutes seconds date weekday 
day month month 
enabled disabled hour enabled 
arm enabled disabled beeps minutes time alarm setting reached buttons pressed earlier 
stopwatch display modes regular lap 
ight 
bat blinking indication 
external events relevant watch signify pressing buttons 
respectively 
example signifies release button event shall min 
signifies minutes elapsed time button pressed 
choose get involved syntax event expressions 
language compound events includes time construct event expressed easily 

part state digital watch statecharts describe behavior watch terms interface user operations pressing buttons influence things 
noted 
descriptions follow specify activities car internally watch control 
said time ac tivity technicalities blinking 
displays 
aspects system described means incorporated specification statecharts 
see approach tion 
shows basic displays state watch 
notice time default state cycle leading time stopwatch states back time 
general update state special state updating alarm internal setting 
min event signifies return time minutes elapsed state stopwatch button pressed 
stopwatch 
ff 
stopwatch state specification watch contains examples orthogonal states various levels 
consider stopwatch state detailed 
substates zero disp run default 
pressing takes stopwatch causing start running regular display 
repeatedly pressing causes start alternately 
pressing seen cause display switch lap back reg 
leave orthogonal state return zero depending illustrated state configuration 
encircled starred additional notations described prescribes entering stopwatch pressing state entered system 
entering state history de fault time stopwatch 
entered history cleared description high levels watch uses orthogonality 
watch specified de ire consist ing orthogonal components 
notice beep bt bt clh 
high level description watch communications ac may volume articles main bt beep rt hits tm rain stopwatch alarm st bt rm clh wer light alarm rc hr 
statechart displays state fits 
events bt bt rm bt dy bt wk signify respectively insertion removal expiration weakening certain level battery 
hits tm signif internal time watch reached internal time setting alarm hits hr signif reached hour 
ep rt occurs button pressed minutes elapsed entering ep beep st occurs seconds entering beep 
men tioned events written formally compound event expressions language involving time outs disjunctions see 
components main specifies transitions displaying beep ing displays simply state described ear see 
actuality displaying ties shut watch beep ing changed control returns digital watch displays state 
alarm st component describes status alarm specifying changed 
control alarm display state 
st state similar addi tional provision hour 
power state self explanatory activity take place weak state displays blinking 
considering innocent looking light state default depressing releasing cause light switch alternately 
interesting effect actions 
entire statechart parts watch described far contemplated see realizes pressing illumination significant side effects cause return update state happen stopping alarm happens change stopwatch behavior happen working may volume number communications ac articles 
conversely displays things light go 
anomalies result fact light component orthogonal main component meaning scope broad 
imagine far humble light compo nent applicable time date states cause problems 
specification carried attaching nally main new state surrounding time date 

smaller scope light mentioned earlier section described version statecharts 
com plete treatment appears formal syntax semantics appear 
reader may noticed intersecting states statecharts 
intersecting blobs higraphs cause serious semantic problems see appendix intersecting states state charts 
fact syntactically legal higraphs sense state charts clear define appropriate syntax statecharts intersecting states see sect 

preliminary approach problems appears 
possible variations theme higraph formalism enriched extended various ways 
shall point possi bilities briefly informally 
times useful base formalism valued valued underlying model 
example certain uses graphs databases artificial intelligence arises need state certain relationship holds hold capture situation know case 
possibility reinterpret absence arrow denoting don known situation new kind arrow representing negative information definitely hold 
simple idea adopted higraphs suppose indicate holds hold 
negative arrows possibilities including holds left open 
don know option needed arrows blobs 
want represent uncertainty presence absence identifiable sets relationships 
accordingly 
new blob notation 
dashed contour denote set sure exists assumes regular blobs stand nonempty sets 
asserts uncertainty empty states empty difference called re lated relationship 

quite sure blobs higraphs practice see useful able zoom particular view suppressing low level details 
example going detailed state chart description watch detailed 
cases arises problem edges connected omitted new detailed view 
decide zoom likes suppressing blobs mistake consider correct new version clearly inconsistent 
better stubs represent relationships unspecified 
example state chart arrow target high level state prescribes entrance default substate determined arrow 
discussed earlier 
fact holds says hat case subsets 
communications ac may volume number articles 
simple higraph 
skipping multiple crossovers somewhat inconsistent 
context better version shown beep rt arrow crossing contour dsp 
state stub indicating en substate unspecified pos different default substate roe 
weakness higraph formalism ity specify set inclusion set membership 
chosen adopt meaning blob enclosure probably cho sen causing problems 
weakness apparent higraphs contrasted equivalents set inclusion depicted edges see 
need additional type edge labeled el 
instance able represent set membership 
claim notational problem requires topo visual way distinguishing different kinds 
solutions notational problem come mind somewhat unsatisfactory exception calls dimensional basis higraphs third dimension responsible distinctions having set inclusion take place plane set membership reflected different levels planes 
additional possible extension higraphs arrows mean simple connection source target 
assuming ordinary directed binary edges say hyperedges 
higraph arrows general cut blob contours want say sequence crossovers edge takes way source target 
achieved trivially drawing arrow appropriate contours desired order assuming order possi ble basic topology blobs 
interesting case occurs want omit sequence contours topologically speaking 
crossed line source target 
arrow example enter enter process 
state charts intersections give rise interesting motivation cases wants system enter intersecting visual formalisms dimensional nature 
third dimension far question 
willing wait quality holographic workstations show 
need 
case 
ability tell nested blobs plane 
simple graphical simulation dynamic left right shift point view job 

possible zoom outs may volume number communications acm states reader referred sec 
details 
richer notion edge represented visually simply allowing arrows skip edges 
multiple crossovers desired represented illustrated 
clearly formal semantics elaborate finite sequence blobs ordered pair interpretation directed edge finite set thereof unordered pair interpretation undirected edge 
higraphs give rise interesting mathematical notions adapted large extent graphs hypergraphs 
example provide reason able definitions connectivity transitive closure plan arity acyclicity higraphs couple different notions 
may ask upper lower bounds computational complexity corresponding algorithmic problems 
cases algorithms bounds carried graphs hypergraphs gets feeling cases bounds improved utilizing special structure higraphs 
algorithmic problems arisen implementation statemate system supports higraph formal 
appear algorithmics higraphs forms fruitful avenue research 
main thesis underlying intricate nature variety computer related systems situations opinion represented visual formalisms visual generated comprehended communicated humans formal lated maintained analyzed computers 
thesis consistent study argues visual nonverbal approach mathe 
part motivation stressing point despite fact appear obvious different approach occasionally finds 
example compendium computer related diagrammatic methods graphs 
opinion quite inadequate accepts visual apparently formal 
part methods languages described man ner devoid semantics best informal aids working hopefully rigorous nonvisual medium 
implicit points tried article considerable amount mileage gotten ha sing formalisms small number simple diagrammatic notions foremost topological nature geometric 
lot gained topo visual formalisms connected ness partitioning semantics attempts attach special significance example shapes colors sizes 
entirely convinced visual 
believe years man daily technical scientific chores carried visually graphical facilities far better cheaper today 
languages approaches shall doing merely iconic nature picture trash denote garbage collection inherently diagrammatic conceptual way dimensional animated 
designed encourage visual modes thinking tackling systems increasing complexity exploit ex tend wonderful visual system intellectual activities 
appendix 
formal definition higraphs follows formal syntax semantics higraphs simple binary directed edges 
reader dif extending edge set represent say hyperedges 
quadruple finite set elements called blobs set edges binary relation 
function defined 

assigns blob set restricted cycle free 
define ix restricted partitioning defined associating blob equivalence relation set 
ts really just rigorous way specifying breakup orthogonal components defined simply equivalence classes induced relation 
denote classes 

orthogonal communications acm may volume number articles 

ffn 
atb rent ortho 

ff 



inte show extend oz atomic 
se blobs lent 
clearly 
dennis inductively cludes hig semantics 
notations useful 
hi graph define set atomic blobs obviously cycle freeness restriction imply nonempty 
unordered cartesian product sets defined st 
higraph model pair set unstructured elements called ta want avoid situations 
say ix ate elements old 
intuition calculate semantics blob form unordered cartesian product meanings orthogonal components turn simply union meanings constituent blobs 
particular course ff product taken really expected 
complete semantics note ede set induces semantic relation de fined acknowledgments 
due ton kalker doug tygar wing comments appendix anonymous referee de tailed thoughtful report 

barge 
graphs hypergraphs 
north holland amsterdam 

berry 

esterel synchronous programming language mathematical semantics 
seminar concurrency brookes winskel 
eds 
lecture notes computer science vol 

springer verlag 
new york pp 



lloyd wilson 
graph theory 
clarendon press 
oxford 

brachman 

epistemological status semantic networks 
associative networks representation knowledge com puter 
ed 
academic press 
new york pp 



semantics multiple inheritance semantics data types 
kahn lecture notes computer science 
vol 
springer verlag pp 


charniak 

mcdermott 
artificial intelligence 
addison wesley 
reading 
mess 


chen 
entity relationship model unified view data 
acm trans 
database spat 
mar 

hypertext survey 
ieee computer sept 


davis 

anderson 
aspects mathematics implication research education 
siam review jan 


dos santos 
neuhold 

data type ap proach entity relationship model 
entity relationship approach systems analysis design chen ed 
north holland 
amsterdam 
pp 


topology 
allyn bacon 
boston mass 


euler ad 
comm 
acad 
ci 
imp 


euler 
une vol 

letters 

fagin degrees acyclicity hypergraphs relational data base schemes 
ac july 
ls 
fagin 
mendelzon ullman simplified universal relation assumption properties 
acm trans 
database syst 
sept 

entity relationship approach modelling petroleum engineering database 
entity relationship approach soft ware engineering 
davis eds 
elsevier science publishers amsterdam pp 


findler 

ed 
associative networks representation knowledge computer 
academic press new york 

fitter 
green diagrams com puter languages 
lat 
man math 
stud 
march 


gardner logic machines diagrams 
nd ed 
university chicago press chicago 
ill 

green pictures programs processes things lines 
behav 
inf 
technol 


harel statecharts visual formalism complex systems 
sci 
cornput 
program 
june 

harel 
pnueli development reactive systems 
logics models concurrent systems nato asi series 
vol 

apt ed 
springer verlag 
new york 

pp 


harel 
pnueli schmidt 
sherman formal semantics statecharts 
proceedings nd ieee logic computer science ithaca june 
ieee press new york pp 


harel 

naamad pnueli 

sherman 

statemate working environment development complex reactive systems 
proceedings tenth ieee international conference software engineering singapore april 
ieee press 
new york 


hendrix 
expanding utility semantic networks partitioning 
proceedings th international conference artificial intelligence georgia ussr sept 
international oint council artificial intelligence 
cambridge mass pp 


hoare communicating sequential processes 
commun 
acm aug 


hopcroft 

ullman 
automata theory 
lan 
guages computation 
addison wesley reading 
mass 


logix languages statemate 
tech 
rap logix 
ton mass 

may volume number communications acm articles 
kahana statecharts overlapping states 
thesis 
dept mathematics computer science bar university 
rarest gan israel 
hebrew 

topology 
princeton university press princeton 



ullman 
connections acyclic hypergraphs 
proceedings ac symposium database systems los angeles 
march 
acm new york 
pp 


manna 

pnueli 
specification verification concurrent programs automata 
proceedings ac symposium principles programming languages munich 
agm new york 
pp 


marlin 
nd mcclure 
diagramming techniques analysts programmers 
prentice hall englewood 




minker 
predicate calculus semantic network deductive searching 
associative networks representa tion knowledge computer ed 
academic press new york pp 


milner 
calculus communicating systems 
lecture notes computer science vol 

springer verlag 
new york 

nakano 
integrity checking logic oriented er model 
entity relationship approach software engineering 
davis eds 
elsevier science publishers 
amsterdam 

pp 


nilsson principles artificial intelligence 
tioga 
palo alto 


owicki 
proving liveness properties concurrent programs 
acm trans 
program 
lang 
syst 
july 


pnueli applications temporal logic specification verification reactive systems survey current trends 
current trends concurrent 
de bakker eds 
lecture notes computer science 
vol 
springer verlag new york 

pp 



semantic memory 
information processing minsky ed 
mit press 
cambridge 
mass pp 


reisig 
petri nets 
springer verlag 
berlin 



multiple views abstractions extended entity relationship model 
cornput 
lang 



schmid 
statistical graphics design principles practices 
wiley 
new york 


shapiro 
net structure semantic information storage 
de duction 
retrieval 
proceedings thc nd international joint conference artificial 

pp 


touretzky 
mathematics inheritance systems 
pitman london morgan kaufmann 
los altos 




visual display quantitative information graphics press cheshire conn 

tygar 
wing visual specification security constraints 
ieee workshop visual languages 
swe den aug 
ieee press 
new york 

venn diagrammatic mechanical rep esentation propositions reasonings 
phil 
mag 



venn 
symbolic logic 
nd ed 
london 
reprinted sea 


woods link 
foundations semantic 

bobrow collins eds 
academic press 
new york 

pp 


distributed alternative 
finite state machine specifications 
ac trans 
program 
lang 
syst 



cr categories subject descriptors computer systems organization general systems specification computer systems organization application sys tems real time systems software general software engi neering requirements specifications tools techniques software engineering design data general data data structures graphs devices models computation automata models principles gen eral artificial intelligence knowledge representation formal methods semantic networks general terms design 
languages theory additional key words phrases higraph 
reactive systems 
state charts 
visual formalisms author address david harel department applied mathematics computer science weizmann institute science 
rehovot israel 
permission copy fee part material granted provided copies distributed direct commercial advantage 
acm copyright notice title publication date appear 
notice copying permission association computing machinery 
copy 
republish requires fee specific permission 
