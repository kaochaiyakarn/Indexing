composable controllers physics character animation petros faloutsos michiel van de panne demetri terzopoulos university toronto department computer science motion playground new york university courant institute computer science department dynamic virtual falls ground rolls rises erect position balancing gravity 
ambitious goal area physics computer animation creation virtual actors autonomously synthesize realistic human motions possess broad repertoire lifelike motor skills 
control dynamic anthropomorphic figures subject gravity contact forces remains difficult open problem 
propose framework composing controllers order enhance motor abilities figures 
key contribution composition framework explicit model pre conditions motor controllers expected function properly 
demonstrate controller composition pre conditions determined manually automatically support vector machine svm learning theory 
evaluate composition framework family controllers capable synthesizing basic actions balance protective stepping balance disturbed protective arm reactions falling multiple ways standing fall 
furthermore demonstrate basic controllers working conjunction dynamic motor skills prototype virtual 
composition framework promises enable community physics animation practitioners easily exchange motor controllers integrate dynamic characters 
keywords computer animation character animation physics animation control physics modeling cr categories computer graphics dimensional graphics realism animation simulation modeling types simulation animation appear proceedings siggraph los angeles ca august 
computer graphics proceedings annual conference series acm siggraph press 
despite considerable history progress animating virtual humans physics animated characters large repertoire motor skills far elusive 
may surprising view successes implementing specialist controllers capable realistically synthesizing complex dynamics running diving various maneuvers 
divide conquer strategy clearly prudent coping enormous variety controlled motions humans animals may perform little effort directed resulting control solutions may integrated yield composite controllers significantly broader functionalities 
example researcher creates walking controller dynamic character researcher creates running controller articulated model beneficial share controllers mail exchange easily create composite controller enabling character walk run 
difficult problem resolution help pave way controller libraries dynamic animation communities practitioners utilize contribute 
propose simple effective framework composing specialist controllers general capable control systems dynamic characters 
framework individual controllers black boxes encapsulating control knowledge possibly gleaned biomechanics literature derived robotics control literature developed specifically animation control 
individual controllers able determine things controller able determine take dynamic character current state desired goal state active controller able determine operating nominally succeeded failed 
controller answer queries may added pool controllers managed supervisor controller goal resolve complex control tasks 
important technical contribution controller composition framework explicit model pre conditions 
preconditions characterize regions dynamic state space individual controller able successfully carry mission 
initially demonstrate successful composition controllers manually determined pre conditions 
proceed investigate question pre conditions determined automatically 
devise promising solution employs support vector machine svm learning theory 
novel application technique learns appropriate pre conditions repeated sampling individual controller behavior operation 
testbed techniques developing animated character capable large repertoire motor skills 
obvious application character creation virtual dynamic nature typical dangerous perform attractive candidate physics animation 
open challenge lies developing appropriate control strategies specific actions ways integrating coherent 
demonstrate families composable controllers articulated skeletons physical parameters reflect anthropometric data consistent fully fleshed adult male 
family controllers degree freedom dof articulated skeleton second family controllers developed comparable dof articulated skeleton 
skeleton illustrates ultimate promise technique easier control associated skeleton allows rapid prototyping larger families controllers careful analysis operation 
recognized robotics literature control broad skilled repertoires motion remains open problem articulated figures 
fig 
illustrates dynamic character autonomously performing complex control sequence composed individual controllers responsible falling reactions rolling getting balancing gravity 
upright balancing dynamic pushed backwards external force arms react cushion impact ground comes rest position rolls prone position pushes rises feet balances upright 
subsequent disturbance elicit similar means identical autonomous behavior initial conditions external forces usually exactly 
control sequences fully dynamic articulated figures unprecedented physics animation literature 
reviewing related prior section details control framework section 
investigate question determining pre conditions section 
section describes articulated models software system implement control framework 
section presents details example fig 
examples demonstrate effectiveness framework 
section concludes discusses avenues research opened 
previous simulation animation human characters challenging problem respects 
comprehensive solutions aspire distill integrate knowledge biomechanics robotics control animation 
models human motion meet particularly high standard familiarity results look 
surprisingly divide conquer strategy evident approaches focusing efforts reproducing particular motions order yield tractable problem allow comparative analysis 
biomechanics literature useful source predictive models specific motions typically experimental data supplemented careful analysis 
models target applications medical diagnosis understanding treatment motor control problems analysis accidents disabilities high performance athletics 
computer simulation increasingly useful tool domain motion models evolve complex comprehensive 
challenge achieving high fidelity motion models individual motions fewer efforts integrated solutions applicable multiple motions 
example 
robotics research remarkable progress successful design variety legged robots robots anthropomorphic aspirations 
despite limited motion repertoires deliberate movements robotic systems truly engineering 
provides summary behavioral architectures explored context robotics 
dof ball juggling robot described uses theory behavior composition practicality extending method high dof dynamic models human motions unclear 
computer animation large extent unencumbered fidelity requirements biomechanical models mechanical limitations robotic systems 
spawned great variety kinematic dynamic models character motion 
motion capture solutions blending warping techniques may give satisfactory results tasks short term controller approaches reveal physics planning control motions serve basis general solutions 
dynamically simulated characters proposed years ago progressed sophistication variety directions 
controllers successfully designed specific human motions walking running cycling 
dynamically simulated articulated characters equipped integrated wide ranging repertoire motor skills currently remain goal 
positive steps direction evident 
examples include integrated repertoire motor controllers animated fish methodology controller design integration applicable simple figures demonstration successful integration selected diving motions adapting controller designed character character 
relevant example sequence successive transitions controllers human motions tumbling landing balancing 
transitions realized including state controllers starting states controllers 
digital biomechanics laboratory proposed boston dynamics tool simulating wide range human motion 
currently remains ambitious progress 
aimed creating dynamic human characters broadly integrated action repertoires 
previous focusing specific athletic movements methodology core set simple actions including balancing small steps falling reactions recovery falls standing chair 
cover appreciable detail design individual controllers effect basic actions 
contribution framework composing individual controllers may designed capable control systems dynamic characters 
interesting tech full details individual controllers designed 
nical contribution controller composition framework learning approach automatically determining controller pre conditions 
pre condition learning algorithm adds growing body learning algorithms successfully applied context computer animation years 
controller composition framework controller composition framework consider individual controllers black boxes managed simple supervisor controller 
controller active supervisor polls pool controllers querying handle transition dynamic character current state desired goal state 
individual controllers return integer confidence suitability score queried order bid active controller 
implementation controllers perform sensible action current state character return integer range handle current state guarantee transition desired state return integer range 
lastly value means controller unsuited current state 
controller returns highest score active 
scoring scheme potentially allows nuanced evaluation controller suitability terms criteria probability success energy current controllers resort simpler scheme 
consists binary success failure evaluation multiplied weighting factor assigned controller serves establish relative preference ordering 
power scheme stems attributes simplicity composition method straightforward easy implement 
appreciably burden controller design task 
generality composition method restrict design individual controllers 
controller primitive sophisticated designer wishes 
controller abstraction controller pool available controllers simple constant force complex structured hierarchy multiple levels control abstraction 
example controllers added system may wish group walking running controllers cluster treated encapsulated controller 
regardless encapsulation composition method requires controllers define pre conditions post conditions expected performance 
pre conditions set conditions state character environment 
conditions met controller operate possibly enable character satisfy post conditions 
assuming pre conditions met post conditions define range states final state character execution controller 
words controller realizes mapping domain input states range output states character 
unexpected changes environment mapping may succeed motivates notion expected performance 
controller able evaluate performance order detect failure point operation 
controller times knowledge current expected state character environment 
defining pre conditions post conditions expected performance complex characters motions environments straightforward task 
believe effort required generate specifications fair necessary price pay achieve benefits composability 
controllers adhere specifications form pool available controllers managed supervising controller 
fig 
presents overview supervising controller function interaction individual controllers time step simulation 
supervising controller time step active controller controllers controller handle true put controller candidates active controller arbitrate candidates status active controller endif controller preconditions postconditions expected performance controller selection arbitration simulation 
elaborate pre conditions post conditions expected performance subsequent sections define quantities symbols state vector generalized positions velocities dot indicates time derivative 
position velocity center mass denoted respectively 
base support called support polygon denoted 
itis represented polygon surrounds foot feet contact ground time 
pre conditions general pre conditions relationships constraints involving different parameters 
parameters initial state 
controllers operate small region state space denote environmental parameters 
include contact points character ground normal ground amount friction contact points 
denote conditions generally indicated letter environment parameters 
balance 
usually indicated relative position velocity center mass base support 
typically projection gravity vector intersect base support considered unbalanced 
denote balance conditions target state general target region state space provided user 
pre conditions consist unions instances conditions denoted determination pre conditions crucial success composition framework examined detail section 
post conditions successful operation controller brings character initial state defined pre conditions desired state desired region state space 
region balance possibly environmental constraints form postconditions controller note pre conditions may subset postconditions sufficient characterize controller achieve 
general post conditions different pre conditions 
example pre condition falling controller requires center mass moving postconditions require center mass rest 
expected performance framework permits automatic selection appropriate controller information provided controllers 
individual controllers detect operating normally failure imminent 
failure case means controller meet post conditions 
controller may fail sudden change environment badly designed pre conditions 
sooner controller detect failure sooner appropriate controller take 
important making character behave naturally 
example character attempt continue walking gait lost balance falling 
implementation expected performance consists expressions similar pre conditions 
particular controller successfully completes task time interval 
transitions transitions controllers explicitly modeled finite state machine 
occur implicitly response evolution motion time system state traverses regions competency various controllers 
controllers designed specific situations typical patterns controller activation occur 
fig 
shows family controllers designed dynamic character typical transition patterns 
example controllers transitions achieving motion shown fig 
balance fall default prone balance 
fig 
similarly shows family controllers designed dynamic character typical transition patterns 
note possible transitions shown figs 

example prone standing fall transition occur sufficiently strong push rising 
transitions shown practically feasible nature dealing falling behaviors 
note fall controller responds specific direction current fall 
transition involves controller deactivated activated 
controller deactivated elicit transition reasons 
may relinquish control declaring success reaching postcondition case controller successfully returned character standing position 
second user intervention may elicit transition 
controllers designed sitting balanced standing retain control intervention user higher level planner forces desired transition 
character balanced user driven process choose plausible actions sit walk dive see fig 

third controller may detect failure case unpredictable events push unforeseen obstacle causing character trip 
transitions figs 
labelled type controller typically elicit transition patterns 
note framework designed interactive settings 
controllers typically start slightly different initial conditions time invoked user interact character time generally guarantees controller reach state time operates 
result transition graph dynamic structure 
controllers typical transitions controllers typical transitions determining pre conditions controllers associated complex dynamic characters determining exact region state space general conditions determine success failure controller general non trivial matter 
section address problem manual automatic approaches 
manual approach allows designers incorporate knowledge controllers automatic approach machine learning techniques 
manual approach certain cases suitable pre conditions specific controllers may biomechanics literature 
example pai patton comprehensive study balance sagittal plane identify conditions human compensate postural disturbances maintain balance stepping 
certain cases pre conditions trivially defined desired motion 
certain controllers function intermediate stages controllers 
controller intermediate step postconditions dictate pre conditions similarly pre conditions define post conditions cases pre conditions computed manual experimentation 
example simple balance controller inverted pendulum model intrinsic stability tolerate small disturbances 
controller designed repeated testing disturbances increasing magnitude yield approximation pre conditions post conditions 
case designer controller presumably understands way controller operates able provide high level conditions success failure 
example designer walking controller knows controller operate walking surface minimal friction properties 
human motion shaped notions comfort designer take account 
example person pushed standing take protective step may comfortable maintaining inverted pendulum balancing strategy 
similarly way people react slipping imbalance protective behaviors employ largely age dependent 
automatic learning approach section introduce automatic machine learning approach determining pre conditions systematically sampling performance controllers 
method uses machine learning algorithm attributed vapnik known support vector machines svms attracted attention cases performance svms matches exceeds competing methods 
support vector machines svms svms method fitting functions sets labeled training data 
functions general regression functions classification functions 
application simple classification functions binary outputs encode success failure controller 
burges provides excellent tutorial svms :10.1.1.117.3731
mathematically observations consisting dimensional vector associated truth provided trusted source 
labels positive example application observed success controller applied dynamic state labels negative example failure controller applied state 
set observations called training set 
svm machine task learn mapping training set 
svm defined functional mappings form parameters 
particular choice generates trained svm 
trained svm sign decision function represents class assigned test data point 
application properly trained svm predicts controller succeed fail state dynamic character 
train svm 
simplest case linear svm separable training data exists decision boundary separating positive negative examples takes form separating hyperplane svm training algorithm computes separating hyperplane largest margin shortest distance separating hyperplane closest positive negative example 
svm training requires solution quadratic programming optimization problem involving lagrange multiplier datapoint training set 
datapoints solution corresponding called support vectors 
support vectors critical elements training set 
lie closest separating hyperplane 
observations training set moved subject certain restrictions removed svm training repeated separating hyperplane result 
trained svm simply determine side decision boundary test data point lies assign corresponding class label point 
linear svm easily generalized nonseparable training data 
furthermore straightforward generalize theory encompass nonlinear svms decision boundaries longer hyperplanes decision function longer linear functions data 
trick principle map data higher possibly infinite dimensional space linear theory applied 
easily done introducing kernel functions polynomial kernel gaussian radial basis function rbf kernel mathematical details refer reader 
applying svms apply svm technique problem determining controller pre conditions train nonlinear svm classifier predict success failure controller arbitrary starting state 
trained svm boundary regions state space controller successfully job 
training sets comprising examples generated repeatedly starting dynamic initial state numerically simulating dynamics influence controller question setting controller succeeds fails 
distribution stochastically generated initial states importance 
sample points ideally located close boundaries demarcate acceptable precondition region state space 
boundaries fact unknowns wish determine resort uniform sampling strategy 
unfortunately high dimensionality state space precludes regular sampling 
adopt stochastic process generate suitable distribution initial states nominal initial state chosen designer knowledge controller 
simulation typically carried initial state randomized perturbation process executed 
currently consists applying external force random bounded magnitude random direction center mass pelvis 
simultaneously character joints perturbed stochastic fashion setting randomized offset target angles joints character pd joint controllers drive joints perturbed positions 
perturbation strategy admittedly ad hoc effective sampling pre condition space validated online learned pre condition models 
employ joachims svm software available www 
software accommodate large training sets comprising tens thousands observations efficiently handles thousands support vectors 
includes standard kernel functions permits definition new ones 
incorporates fast training algorithm proceeds solving sequence optimization problems lower bounding solution form local search 
includes efficient estimation methods error rate precision recall 
svm training phase take hours application done line 
example mhz piii computer svm training time training set observations seconds polynomial kernel seconds linear kernel seconds radial kernel 
training set observations training time seconds polynomial kernel seconds linear kernel seconds radial kernel 
trained svm classifier provide answers line milliseconds 
pre condition learning results systematic experimentation evaluated performance automatic svm algorithm learning con controller training set size test set size nn svm walk table comparison learned svm nn preconditions 
pre conditions 
compared performance svm algorithm nearest neighbor nn classifier 
training set nearest neighbor classifier returns arbitrary state succeed fail label label observation training set closest 
nn classifiers perform particularly cases feasible area state space highly fragmented localized 
note nn method requires zero training time provides answer time size training set 
table summarizes percentage success rates rightmost columns learned pre conditions variety controllers demonstrations 
compute accuracy rates trained svm nn pre condition learning algorithms randomly sampled observations collected controllers 
generated test sets novel observations compared true success fail status predicted trained nn svm pre conditions obtain accuracy percentages listed rightmost columns table 
results show svm algorithm consistently outperforms nn classifier 
results shown table svm algorithm employed polynomial kernel functions 
ran similar set experiments gaussian rbf kernel functions accuracies consistently lower obtained polynomial kernel functions 
implementation control composition framework implemented dance portable extensible object oriented modeling animation system 
dance provides platform researchers implement animation control techniques minimal design implementation overhead 
core system supports base classes systems simulators actuators geometries loadable plug ins accordance simple apis 
articulated objects system subclass support skeleton hierarchies 
kinematic properties usually fully dynamic physical properties 
virtual actors described shortly dynamic articulated objects implemented systems dance 
actuator generic concept includes exert forces general interact way systems actuators 
example gravity ground collision mechanism supervisor controller individual controllers implemented actuators 
dance places restrictions complexity controllers 
simulators compute equations motion dynamic characters systems dance 
dance offers built support sd fast commercial system produces optimized simulation code 
simulator follows simple dance freely available non commercial url www dgp toronto edu software dance htm joint rotational dofs rotational dofs skeleton model terminator model head neck shoulder elbow wrist waist hip knee ankle dynamic models degrees freedom dofs 
api dynamically loaded system 
simulators automatically produced sd fast description files 
kane method computing articulated dynamics fourth order explicit runge kutta time integrator numerically simulating motions 
actuators simulators implemented dance plug ins 
allows user dynamically load controllers simulators runtime 
addition researchers exchange simulators controllers form dynamically linked pieces code 
object collisions including self collisions handled collision actuator 
actuator works pairs objects 
dance api allows objects different simulators 
collision detection library uses oriented bounding boxes 
collision resolution uses penalty method corrects geometry interpenetration spring damper forces 
penalty methods system stiff performed experiments date 
virtual dynamic model fig 
depicts articulated character models 
red arrows indicate joint positions axes rotational degrees freedom dofs table 
skeleton model dofs correspond global translation rotation parameters 
table fig 
lists dofs skeleton terminator model 
dynamic properties models mass moments inertia taken biomechanics literature correspond adult male 
models equipped natural limits motion joints strength muscles 
dance built muscle model enforce limits automatically 
users implement model prefer include code enforce limits model 
plug control scheme uses rotational spring damper forces control enforces limits joints exponential springs 
pose continuous control controllers virtual pose control articulated objects soft objects 
pose control cyclic acyclic finite state machines time transitions states 
state controller static depend feedback parameters 
controllers continuous control sense control parameters tightly coupled feedback sensors 
balance controllers example 
designed controllers part experimental studies humans detect loss balance analysis protective falling behaviors 
resulting parameterized controllers enhanced appropriate pre conditions post conditions expected performance integrated arbitration supervising controller 
sensors controller full access internal data structures dance including information associated character object system 
allows controllers define arbitrary sensors keep track necessary information state parameters feedback loops state environment 
efficiency supervisor controller calculates number common sensor values available controllers 
command interface controller transitions control framework happen autonomously protective step response losing balance 
actions initiated voluntary fashion 
example standing character remain standing balance controller sit walk dive 
currently user directs voluntary motions interactively entering command strings supervisor controller turn directly increases suitability score designated controller forces arbitration process invoked select new active controller 
control voluntary motions equivalently delegated high level planner kind planning scope 
results heart prototype system composite controller capable handling large number everyday tasks walking balancing bending falling sitting 
addition brief descriptions controllers involved producing actions 
controller descriptions character equivalent controllers similar 
discuss motion sequences generated families controllers see www dgp toronto edu animations html associated animations 
everyday actions began implementation simple tasks standing recovering balance pushed falling 
autonomous human agent able balance standing naturally place 
loss balance occur character ought react naturally restoring motion protective falling behavior depending action appropriate case 
affording dynamic articulated natural reactions loss balance impending falls essential step believable autonomous characters 
balancing balance controller responsible maintaining natural standing posture 
controller inverted pendulum model ankles control body 
despite fact body character rigid inverted pendulum hypothesis suggests approximation works practice 
example type manually defined pre conditions post conditions controller details appendix balance controller 
animated character attempt maintain balance response external disturbances shifting weight step bending waist 
character maintain balance resort falling behavior 
falling manner people fall depends number factors physique age training 
example shows fall elderly impact hip compared younger adults falling conditions 
fall controller designed average adult mind 
main action absorb shock impact hands 
pre conditions fall controller defined accordance balance controller 
situations capabilities handled fall controller 
implementation fall controller handle falls direction responding different ways falls different directions 
fig 
depicts frames falls variety directions 
second frame fig 
demonstrates action fall controller fall recover sequence 
sitting sitting chair rising chair common everyday tasks 
implemented controller depending instructions animator 
apart command string supplied user pre conditions balanced upright posture balanced sitting posture 
postconditions similarly defined 
resulting action illustrated fig 

rising position getting ground surprisingly difficult motion simulate 
involves rapid changes contact points significant shifting weight 
addition frictional properties ground model influence motion 
pre conditions controller straightforward 
character lying back flat ground tolerance 
post conditions character feet center mass support polygon 
controller take bring character position standing 
snapshot resulting motion shown fig 

rolling lying back people may choose roll prone position attempting stand 
implemented roll controller emulate action 
fourth frame fig 
demonstrates action roll controller 
pre conditions roll controller require posture movement center mass postconditions roll controller fairly simple include prone position character extended fairly straight crossing legs arms rising prone position frames fig 
demonstrate action controller enables virtual rise prone position 
lying face pre conditions fairly relaxed 
controller assumes time change state character knows rise 
long lying arms ground relatively flat attempt get 
post conditions chosen satisfy pre conditions balance controller 
apart everyday actions want dynamic character able variety voluntary actions dictated animator 
actions potentially include vigorous physically dangerous actions 
hope large number researchers contribute controllers character eventually virtual 
kip move kip athletic motion seen martial arts films depicted fig 

controller pose controller pre conditions include variation positions 
part controller sure character assumes position suitable performing kip 
larger part motion ballistic focuses control mainly kick landing phases 
part controller applies continuous control bring erect position balance controller take 
plunge roll fig 
shows performing dive stairs 
character instructed forward upward takeoff angle controlled user 
hands contact ground front roll attempted 
pre conditions controller defined upright position little movement center mass experimented multiple character scenario character tackling fig 

timing tackle scripted illustrates capability system cope pair interacting characters equipped supervisory controller 
falling different directions interacting virtual characters 
animation sequences produced relatively long animation sequences demonstrate potential framework 
sequence skeleton model fig 
involves controllers pre conditions provided analytically designer 
conditions tend define square regions space defined parameters involved 
despite simple form pre conditions generally demonstrated animation produced 
expect investigate application svm learned pre conditions model 
second animation sequence terminator model see fig 
set controllers having mix analytic learned pre conditions 
sequence controllers generated animation balance sit lean forward rise balance walk step stand balance dive default stand balance step forward step balance step back step stand balance fall default 
analytical pre conditions prune large parts state space svm classifier provides accurate success failure prediction remaining region 
animation sequence svm classifier correctly refined analytical answer cases 
performance issues computational burden approach lies numerical simulation equations motion 
computations associated controllers composition framework negligible comparison 
general model simulates real time model runs times slower real time mhz pentium iii system 
sitting rising chair rising position ground balancing erect gravity 
kip move vigorous way getting position frame fig 

challenges physics controller design plus technical obstacles researchers face attempting share algorithms hindered progress important area character animation 
methodology problem framework facilitates exchange composition controllers 
framework implemented freely available system modeling animating articulated characters 
knowledge system demonstrate dynamic character controlled reactions disturbances falls direction ability pick ground ways controlled motions 
hope system foster collective efforts numerous practitioners eventually result complex composite controllers capable synthesizing full spectrum human motor behaviors 
enormous challenge building controllers capable large repertoires dynamic human motion inevitable incomplete ways 
published control methods walking running stair climbing obvious candidates integration system 
coping variable terrain dynamic environments dimensions added complexity provide years come 
automatic parameterization controllers variations character dimensions mass necessary step having solutions adaptable variety characters 
deriving controllers motion capture data exciting difficult prospect 
progress area 
methods teaching skills dynamic character warrant investigation 
intelligently integrating controllers affect subsets dofs needs addressed order allow parallel execution controllers 
wish joe laszlo help video editing equipment useful discussions 
symbolic dynamics distribute equations motion human model 
supported nserc 
balance controller articulated body balanced upright position velocity acceleration center mass exceed certain threshold values explained feet maintain contact ground times 
controller tolerate small perturbations posture velocity acceleration center mass ankle joints 
larger accelerations center mass controller actively ankle joint reduce acceleration center mass post conditions similar pre conditions 
mathematical form notation defined section image terminator sequence 
dynamic terminator model knocked backward force collision head red ball 
terminator maintains balance protective step 
acceleration sec velocity balance posture sec 
projection 
acceleration sec velocity balance posture sec 
projection 
rad thigh knee waist normalization parameter 
rad thigh knee waist normalization parameter 
ronald arkin 
behavioral robotics 
mit press 
armstrong green 
dynamics articulated rigid bodies purposes animation 
proceedings graphics interface pages 
badler phillips webber 
simulating humans computer graphics animation control 
oxford university press 
badler barsky zeltzer 
making move 
morgan kaufmann publishers 
burges 
tutorial support vector machines pattern recognition 
data mining knowledge discovery 
rizzi koditschek 
sequential composition dynamically dexterous robot behaviors 
international journal robotics research june 
igor nadia magnenat thalmann daniel thalmann 
avatars networked virtual environments 
john wiley sons 

biomechanical study balance recovery fall forward 
journal biomechanics 
duda hart 
pattern classification scene analysis 
wiley 
petros faloutsos 
composable controller physics character animation 
phd thesis univeristy toronto dcs toronto canada 
awarded 
petros faloutsos michiel van de panne demetri terzopoulos 
dynamic free form deformations animation synthesis 
ieee transactions visualization computer graphics 
fitzpatrick taylor mccloskey 
ankle stiffness standing humans response imperceptible perturbation reflex task dependent components 
journal physiology 
stefan gottschalk ming lin dinesh manocha 
obb tree hierarchical structure rapid interference detection 
computer graphics siggraph proceedings pages 
grzeszczuk terzopoulos 
automated learning muscle locomotion control abstraction 
proceedings acm siggraph computer graphics pages august 
grzeszczuk terzopoulos hinton 
fast neural network emulation control physics models 
proceedings acm siggraph computer graphics pages july 
hodgins brogan brien 
animating human athletics 
proceedings siggraph acm computer graphics pages 
jessica hodgins nancy pollard 
adapting simulated behaviors new characters 
proceedings siggraph pages august 
michael dan rosenthal michael sherman 
sd fast 
symbolic dynamics 
hsiao 
common protective movements govern unexpected falls standing height 
journal biomechanics 
boston dynamics digital biomechanics laboratory 
www bdi com 
joachims 
making large scale svm learning practical 
advances kernel methods 
sch burges smola editors support vector learning 
mit press 
www ai cs de joachims pdf 
joseph laszlo michiel van de panne eugene fiume 
limit cycle control application animation balancing walking 
proceedings siggraph pages august 
honda motor www honda jp english technology robot 
victor ng petros faloutsos 
dance dynamic animation control environment 
software system www dgp toronto edu dgp html 
yi chung pai james patton 
center mass velocity position predictions balance control 
journal biomechanics 
marcus frank anderson 
dimensional computer simulation jumping walking model 
proceedings international symposium computer simulation biomechanics august 
marcus felix zajac sim william levine 
optimal control model maximum height human jumping 
journal biomechanics 
raibert 
legged robots balance 
mit press 
wilson hayes thomas mcmahon 
determining fall direction impact location various disturbances gait speeds articulated total body model 
proceedings international symposium computer simulation biomechanics august 
tu demetri terzopoulos 
artificial fishes physics locomotion perception behavior 
proceedings siggraph pages 
van de panne 
parameterized gait synthesis 
ieee computer graphics applications pages march 
michiel van de panne eugene fiume 
reusable motion synthesis state space controllers 
computer graphics siggraph proceedings august 
isbn 
held dallas texas 
vapnik 
estimation empirical data russian 
nauka moscow 
english translation springer verlag new york 
jane wilhelms brian barsky 
dynamic analysis animate articulated bodies humans robots 
graphics interface pages may 
wayne 
simulation tumbling landing balancing humans 
phd thesis georgia institute technology march 
