journal computational physics article 
cp fast algorithm particle simulations greengard rokhlin department computer science yale university new haven connecticut received june revised february restrict attention case algorithm rapid evaluation potential potential force point sum pairwise force fields systems involving large numbers particles interactions 
specifically consider potentials interactions gravitational nature 
system particles amount order form traditionally required evaluate pairwise interactions approximation truncation method 
algorithm requires amount proportional far near external evaluate interactions roundoff error making considerably practical large scale problems encountered plasma physics fluid dynamics molecular dynamics celestial mechanics 
academic press near rapidly decaying potential van der waals external indepen dent number particles far far field potential gravitational 
models describe classical celestial mechanics problems 
plasma physics molecular dynamics 
vortex method incompressible fluid flow calculations study physical systems means particle simu important expensive portion computation lations established number fields formal structure stream function increasingly important 
classi vorticity related poisson equation 
cal example probably celestial mechanics done formulating studying parti system particles calculation near re quires amount proportional cle models plasma physics fluid dynamics molecular dynamics 
calculation external 
decay gravitational potential sufficiently slow major classes simulation methods 
dy interactions accounted resulting cpu simulations follow trajectories particles time requirements order 
time interval interest 
initial positions method rapid order evaluation xi velocities trajectory particle gov interactions particles 
newton second law motion number previous efforts aimed reducing computational complexity body mi problem 
particle cell methods received careful xi dt study success notably plasma physics 
assuming potential satisfies poisson mi mass ith particle force obtained gradient potential function 
equation regular mesh layed computa tional domain method proceeds interested equilibrium configuration set interpolating source density mesh points particles time dependent properties alternative approach monte carlo method 
case potential function evaluated large number configurations attempt deter mine potential minimum 
fast poisson solver obtain potential values mesh computing force potential interpolating particle positions 
complexity methods order reprinted volume number december pages 
authors supported part office naval research log number mesh points 
number mesh points usually chosen 
tional number particles small constant copyright academic press rights reproduction form reserved 
algorithm particle simulation proportionality log asymptotic complexity method log computational cost practical calculations usually ob served proportional unfortunately mesh provides limited resolution highly nonuniform source distributions cause significant degradation performance 
errors introduced step necessity numerical differentiation obtain force 
improve accuracy particle cell calculations short range interactions handled direct computa tion far field interactions obtained mesh giving rise called particle particle particle mesh methods 
implementation ideas context vortex calculations see 
algorithms depend efficient perfor respectively 
known harmonic region containing point 
harmonic function exists analytic function re unique additive constant 
remainder analytic functions making distinction point mance reasonably uniform distribution particles theory permit arbitrarily high accuracy point iy 
note obtained 
rule required precision relatively low particles distributed re log uniformly rectangular region methods perform satisfactorily 
required precision high standard practice refer ana example modeling highly correlated sys function log potential due charge 
tems cpu time requirements algorithms tend develop expressions potential due excessive 
charge distributions continue com appel introduced method plex notation refer corresponding analytic body simulation computational complexity potentials 
mated order log 
relies lemma immediate consequence cauchy monopole center mass approximation computing riemann equations 
forces large distances sophisticated data structures keep track particles sufficiently clus tered approximation valid 
certain types problems method achieves dramatic speedup lemma 
re describes potential field corresponding force field compared naive approach 
efficient distribution particles relatively uniform ux uy re im required precision high 
algorithm uses multipole expansions derivative ofw 
compute potentials forces precision required cpu time expended proportional approach similar introduced solution boundary value problems laplace equation 
section describe lemma obtaining multipole expansion field due charges 
lemma 
point charge intensity located 
necessary analytical tools section devoted detailed description method 
log log 

physical mathematical preliminaries consider dimensional physical model consists set charged particles potential force obtained sum pairwise proof 
note log log log 
lemma follows expansion interactions coulomb law 
suppose point charge unit strength located point log potential electrostatic field due charge described expressions valid 
greengard rokhlin theorem 
multipole expansion 
suppose charges strengths located points potential log qi ak furthermore log fig 

separated sets plane 
iz 
set points fig 

say sets separated exist points real 
xi yj 
order obtain potential force points yj due charges points xi directly compute xi 
proof 
form multipole expansion immediate consequence preceding lemma fact clearly requires order nm evaluating fields points 
suppose compute zi 
obtain error bound observe cients term multipole expansion potential due charges qm theorem 
log requires number operations proportional mp 
evaluating resulting multipole expansion points ak zk ak zk 
yj requires order np total amount computation order mp np 
substituting expression particular xi yj log yj order obtain relative precision respect total charge order log 
precision specified amount computation reduced log significantly smaller nm large ak zk 

translation operators error bounds demonstrate simple example lemmas constitute principal expansions speed calculations tool allowing manipulate potential fields 
suppose charges strengths multipole expansions manner required fast qm located points xm algorithm 
lemma provides formula shifting center multipole expansion lemma describes convert expansion local taylor expansion circular region lemma furnishes mechanism shifting center taylor expansion region 
derive error bounds associated translation operators allow carry numerical computations specified accuracy 
lemma 
suppose log algorithm particle simulation multipole expansion potential due set charges strengths located inside circle radius center 
outside circle radius center origin log kz zl fig 

source charges contained circle 
corresponding multipole expansion converges inside 
circle radius lemma 
suppose charges strengths located inside circle radius center fig 

corresponding multipole expansion converges inside circle radius centered binomial coefficients 
furthermore origin 
inside potential due charges dep scribed power series log bl zl defined 
ak zk log proof 
coefficients shifted expansion obtained expanding expression taylor series respect 
error bound bl zl ak zk zl observe terms coefficients unique multipole expansion origin charges contained circle theorem applies 
immediately replaced furthermore max error 
values ap expansion computed obtain bp exactly 
words may shift bound truncated series bl center truncated multipole expansion loss precision 
greengard rokhlin defined base natural loga obviously lying rithms 
proof 
obtain coefficients local sion maclaurin theorem applied multi ple expansion 
derive error bound log 
bl easy see ar cr cr algebraic manipulation pr cr cr cr cr observing positive integer integer 
bound easily observing lz zl zl obtain bound circle radius cr fig 

note cr cr 
obtain pr cr cr cr cr ae cr adding expression error bound completes proof 
defining function expression lemma immediate consequence maclaurin theorem 
describes exact translation op log eration finite number terms error bound needed 
taylor theorem complex analytic functions see obtain lz max 
lz lemma 
complex ak ak ak zl 

fast multipole algorithm section algorithm rapid evaluation potentials electrostatic fields due distributions charges 
central strategy clustering particles various spatial lengths computing interactions clusters fig 

computational box shaded nearest periodic images 
box centered origin area 
algorithm particle simulation ciently far away means multipole expansions 
interactions particles nearby handled directly 
specific consider geometry computational box depicted fig 

square sides length centered origin coordinate system assumed contain particles system consideration 
nearest neighbor fig 

computational box levels refinement 
boxes shown needed section considering various boundary conditions 
describe method free space problems boundary ignored interactions accounted involve particles computational box 
fixing precision choose log specify interactions computed clusters particles separated 
precisely condition term local expansion center box level describing potential field due particles outside parent box parent box nearest neighbors 
interaction list box level set boxes children nearest neighbors parent separated box fig 

needed error bounds apply truncation error bounded suppose level local expansion obtained boxes 
lemma desired precision achieved 
order impose condition introduce hierarchy meshes refine computational box smaller smaller regions fig 

mesh level equivalent entire box mesh level obtained level subdivision region equal parts 
number distinct boxes mesh level equal tree structure imposed mesh hierarchy fixed box level boxes level obtained subdivision considered children 
notation description algorithm includes li term multipole expansion box center potential field created particles contained inside box level term expansion center box level describing potential field due fig 

interaction list box thick lines correspond mesh level thin lines level 
boxes marked separated particles outside box nearest neighbors 
box contained nearest neighbors box parent 
greengard rokhlin shift expansion box local expansion describes field due children box level local represen particles system contained tation potential due particles outside parent neighbors interaction list current box nearest neighbors 
local expansion obtained precisely set boxes contribution potential added order create box shifted second inner loop centers box children done lemma convert multipole forming initial expansion boxes expansions interaction boxes local expansions level 
current box center adding set sion obtained parent 
note free space boundary conditions equal zero separated boxes consider form lemma convert forming local expansions level 
multipole expansion box interac formal description algorithm 
tion list box local expansion algorithm 
center box adding local expansions adding result 
initialization enddo choose level refinement log precision set log 
form expansion children upward pass lemma expand box step comment multipole expansions potential field due particles box box box centers 
enddo enddo center finest mesh level 
step comment compute interactions finest mesh level 
form term multipole expansion theorem 
enddo form box lemma convert multipole expansion box interaction step comment form multipole expansions centers boxes coarser mesh levels expansion representing potential field due particles contained box 
list box local expansion center box adding local expansions adding result 
enddo comment local expansions finest mesh level available 
generate potential force due particles outside form term multipole expansion lemma shift center child nearest neighbor boxes finest mesh level 
box expansion current box center adding 
enddo enddo step comment evaluate local expansions particle posi tions 
downward pass particle pj located point zj box comment downward pass interactions consis evaluate zj 
computed coarsest possible level 
enddo box accomplished including interactions boxes separated interactions accounted parent step comment compute potential force due nearest neighbors directly 
level 
particle pj box compute interac step tions particles box comment form local expansion center nearest neighbors 
box mesh level 
enddo algorithm particle simulation step tional easy see asymptotic storage requirements algorithm form particle box add direct terms 
enddo 
local expansion described coef term polynomial 
direct evaluation polynomial point yields potential 
lemma log force immediately obtained derivative available analytically 
need cal differentiation 
furthermore due exist error bounds force exactly form 
coefficients determined computer system language implementation numerical experiments actual storage requirements order brief analysis algorithmic complexity log 
single precision words 
step operation count explanation 
clear operation count step assumes reasonably homogeneous distribution particles 
distribution highly nonhomogeneous order np order np particle contributes expansion finest level 
need refine portions space number particles large 
description lth level shifts involving order order np shift performed 
involved adaptive version retains accuracy computational speed algorithm entries interaction list box level 
extra order np see 
required sec order np ond loop 

boundary conditions entries order np list box boxes 
variety boundary conditions particle term expansion evaluated particle 
simulations including periodic boundary conditions ho order nkn kn bound number parti dirichlet neumann conditions cles box finest mesh level 
interactions computed box nearest neighbors newton third law need compute half pairwise interactions 
types mixed conditions 
periodic case treated detail 
turn imposition dirichlet conditions brief discussion cases 
order adding terms particle 

periodic boundary conditions reconsidering computational domain estimate running time depicted fig 

upward pass algorithm net multipole expansion log log ak zk constants determined computer system language implementation 
addition asymptotic time complexity entire computational box 
expansion storage requirements important characteristic periodic images box respect numerical procedure 
algorithm requires center 
images ones stored locations particles depicted fig 
separated computational charges results calculations poten box induced fields accurately represent electric fields 
box level able term local expansion pair term expansions associated log number terms needed achieve rela lengths storage arrays propor tive precision 
assume periodic particle model greengard rokhlin net charge local representa newton third law requires net force tion lemma written particle zero 
net force particle origin corresponds summation bm set 
bm determine value second term zm ak zk center image box consideration 

certain problems cosmology computational box obviously satisfy condition net charge mass 
condition necessary potential defined logarithmic term unbounded 
force calculations suppose particle simulation dipole strength oriented axis located origin 
periodic model uniform lattice difference potential equiva lent sites zero may carried 
notation algorithm expansions analytic 
functions representing potential derivatives analytic functions regions 
clear theorem contribution potential difference single dipole located derivatives described pure inverse power series 
identical formal structure algorithm due lemma evaluate force fields bypassing difficulty introduced logarithmic term 
change required initial expansions computed derivatives multipole expansions multipole expansions 
find potential difference due nal dipole located origin 
image dipole located expand contribution note separated images computational cell boxes centers integer real imaginary parts re 
set centers 
account field due separated images form coefficients set centers image boxes 
local representation adding local shifted expansions form obtain set points integer real imaginary parts excluding origin 
ak zm 

summation inverse power somewhat involved calculation shows precomputed stored 
series absolutely convergent 
series absolutely convergent computed value depends order addition 
choosing reasonable 
value sum series requires careful consideration physical model 
satisfy set suppose particle simulation charge unit strength located origin 
periodic model corresponds uniform lattice charges 
sum easily evaluated equal zero 
algorithm particle simulation summation inverse power defined 
procedure converting multipole expansion computational cell local expansion describes potential field due separated images written notation algorithm fig 

computational cell centered origin represented cell image cell reflected top boundary corresponding particles assigned charges opposite sign 
cell image cell reflected left boundary corresponding particles assigned charges opposite sign 
cell image cell reflected origin corresponding particles assigned charges sign 
successive reflections constant matrix entries defined formula boundaries computational cell yield infinite expansion image boxes indicated 
tm zm 
sources field due particles inside computational cell images field due selected image charges located outside computational cell 
viewed step downward pass algorithm periodic boundary conditions 
image charge positions strengths chosen point accounted interactions excluding ones immediate neighbors computational sources images box depicted fig 

expansions boxes inside computational cell expansions corresponding boxes inside nearest neighbor images computational cell 
adding interaction list appropriate boxes maintain formal structure algorithm associated computational com plexity 
computational domain considering ap locations image charges deter mined iterative process illustrated fig 

reflect particle pi charge strength computational cell top boundary line place image charge strength location generating image box denote fig 

set 
dirichlet boundary conditions turn imposition homogeneous dirichlet boundary conditions image charges denoted field induce called adding sources clearly enforces desired condition top boundary 
impose boundary condition bottom computational cell reflect charges source image cur rently model bottom boundary generating image boxes copies 
boundary computational domain 
set image charges second reflection step analytically speaking accomplished method images described detail 
general denoted 
sources equal zero bottom boundary resulting field violates terms consider potential field composed top boundary condition 
reflect parts top boundary creating new image boxes sources images new set image charges sources satisfies top condition violates bottom 
greengard rokhlin iterating manner generate sequence sets converted lemma expansion image charges vi origin center computational cell call 
remains account separated boxes contained inside nearest neighbors 
exactly boxes multipole expansions shifted lemma vi set charges contained infinite array image boxes depicted fig 

easy see corresponding sequence image fields local expansions origin added form 
vi converges inside computational cell potential field sources satisfy top 
boundary conditions bottom boundary conditions 
order enforce dirichlet condition re sides proceed analogously 
reflect charges currently model original sources plus images left boundary 
obviously affect top bottom conditions enforces homogeneous boundary condition left side computational cell 
current set image charges denoted 
reflecting right boundary creates new set field sources satisfying dirichlet condition right left boundary 
repeated reflection left right boundaries computational cell yields sequence hi infinite sets image charges certain applications periodic dirichlet boundary conditions called neumann mixed conditions imposed boundary computational domain 
typical example problem mixed conditions computational cell neu mann conditions opposing sides dirichlet con ditions 
models require periodic boundary conditions left right sides com putational cell dirichlet neumann conditions top bottom 
imposition conditions achieved procedure essentially identical described 
reflection periodic extension generates entire plane images 
local expansion computed appropriate summa tion separated image boxes remaining image interactions handled 
hi set charges contained dimensional family image boxes depicted fig 

numerical results 
easy see sequence hi converges inside computational cell denote limit observe sources onthe entire boundary computational point view rate convergence method images quite unsatisfactory 
conjunction algorithm method turned extremely efficient numerical tool 
terminology previously introduced image boxes nearest neighbors computational cell separated induced fields represented single local expansion denoted 
coefficients local expansion computed need account interactions nearest neighbors computational cell 
periodic case simply add appropriate image boxes interaction lists boxes inside computational cell 
remains calculate 
observe plane images periodic structure unit centered indicated thick lines fig 

method developed periodic problems obtain expansion point accounts interactions computer program implemented utilizing algorithm capable handling problems problems periodic homogeneous dirichlet homogeneous neumann boundary conditions 
testing purposes randomly assigned charged par positions computational cell fig 
charge strengths numbers nearest neighbors 
expansion fig 

randomly located charges computational cell 
algorithm particle simulation particles varying 
calculations performed vax number terms expansions set guaranteeing roughly digit accuracy result 
case performed calculation ways algorithm single precision arithmetic directly formula single precision arithmetic formula double precision arithmetic 
calculations compare speed accuracy algorithm direct method 
direct evaluation field double precision standard comparing relative accuracies computations 
cases calculation performed periodic model periodic boundary condition imposed means algorithm described section 
fig 

lines electrostatic field due randomly located charges computational cell homogeneous results numerical experiments summarized table column table contains numbers particles calculations dirichlet boundary conditions 
performed 
second third columns contain cpu times required algorithm pres 
accuracy results produced algo rithm predicted estimates ent obtain fields particles greatest relative error alg obtained particles respectively 
columns contain cpu times number terms expansions evidence accuracy problems due truncation errors 
required direct algorithm obtain fields particles greatest relative error 
calculation time grows linearly number dir obtained particle respectively 
charges model behavior erratic 

example involving particles 
particles model algorithm required tational effort required direct algorithm roughly minute cpu time see table 
times greater required algorithm considered practical direct algorithm evaluate 
particles effort nearly field points take times greater 
cpu time producing useful information 
direct algorithm evaluate field particles single double precision resulting data estimate alg dir 
value case estimated scaling 
similar calculations performed homogeneous dirichlet neumann boundary conditions observations periodic model equally applicable cases 
illustration lines box observations table randomly distributed particles dirichlet boundary conditions shown fig 

entire calculation required cpu time half time spent evaluating field points table computational results rest plotting routine 

alg dir algorithm constructed rapid evalua tion potential fields generated ensembles particles type encountered plasma physics molecular dy fluid dynamics vortex method celestial mechanics 
algorithm applicable context dynamical simulations monte carlo simulations provided fields evaluated est 
nature 
asymptotic cpu time estimate algo greengard rokhlin rithm order number particles simulation cal examples section indicate 
anderson comput 
phys 

large scale problems result acceptable cpu time 
appel siam sci 
stat 
comput 

requirements 
dimensional ver 
carrier greengard rokhlin fast adaptive multipole sion algorithm described 
generalizing result algorithm particle simulations technical report yale com dimensions fairly straightforward puter science department 
reported date 

fluid 
mech 


computer simulation acknowledgments particles mcgraw hill new york 
authors pleasure professor schultz drawing 
polya complex variables wiley new york 
attention subject continuing interest support 

rokhlin comput 
phys 

