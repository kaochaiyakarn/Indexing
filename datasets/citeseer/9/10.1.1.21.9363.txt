digital fountain approach reliable distribution bulk data john byers michael luby michael mitzenmacher proliferation applications reliably distribute bulk data large number autonomous clients motivates design new multicast broadcast protocols 
describe ideal fully scalable protocol applications call digital fountain 
digital fountain allows number heterogeneous clients acquire bulk data optimal ciency times choosing 
feedback channels needed ensure reliable delivery face high loss rates 
develop protocol closely approximates digital fountain new class erasure codes large block sizes orders magnitude faster standard erasure codes 
provide performance measurements demonstrate feasibility approach discuss design implementation performance experimental system 
natural solution software companies plan disseminate new software internet millions users simultaneously multicast broadcast transmission 
transmissions fully reliable low network overhead support vast numbers receivers heterogeneous characteristics 
activities similar requirements include distribution popular images database replication popular web site access 
applications require just reliable multicast protocol users wish access data uc berkeley international computer science institute berkeley california 
research supported part national science foundation operating ncr 
email byers icsi berkeley edu international computer science institute berkeley california 
research supported part national science foundation operating ncr 
email luby icsi berkeley edu digital systems research center palo alto california 
email pa dec com international computer science institute berkeley california 
research supported part national science foundation operating ncr 
email icsi berkeley edu times choosing access times overlap users 
unicast protocols successfully receiver initiated requests retransmission lost data provide reliability widely known multicast analog solution unscalable 
example consider server distributing new software release thousands clients 
clients lose packets requests retransmission quickly overwhelm server process known feedback implosion 
event server handle requests retransmitted packets small subset clients 
sophisticated solutions address limitations techniques local repair polling hierarchy proposed solutions appear inadequate :10.1.1.121.1027
adaptive solutions best unscalable ine cient terrestrial networks unworkable satellite networks back channel typically high latency limited capacity 
problems solutions adaptive retransmission led researchers consider applying forward error correction erasure codes reliable multicast :10.1.1.35.7747
basic principle erasure codes original source data form sequence packets additional redundant packets transmitted sender redundant data recover lost source data receivers 
receiver reconstruct original source data receives su cient number packets 
main bene approach di erent receivers recover di erent lost packets redundant data 
principle idea greatly reduce number retransmissions single retransmission redundant data potentially bene receivers simultaneously 
applications real time video retransmission may undesirable due timing constraints emphasize considering real time applications 
biersack towsley de nes hybrid approach reliable multicast coupling requests retransmission transmission redundant codewords quanti es bene ts approach practice 
au erasure codes called forward error correcting codes fec codes networking community 
fec refers codes detect correct errors codes typically implemented special purpose hardware 
avoid confusion refer codes consider erasure codes 
focus erasure codes reed solomon codes :10.1.1.35.7747
limitation codes encoding decoding times slow large block sizes ectively limiting small values practical applications 
solution involves breaking source data small blocks packets encoding blocks 
receivers received packet block request retransmission additional codeword block 
demonstrate approach ective dramatically reducing number retransmissions packet loss rates low typically consider loss rates 
approach eliminate need retransmissions especially number receivers grows large higher rates packet loss 
approach enable receivers join session dynamically 
eliminate need retransmission allow receivers access data asynchronously data carousel broadcast disk approach ensure full reliability 
data carousel approach source repeatedly loops transmission data packets 
receivers may join stream time listen receive distinct packets comprising transmission 
clearly reception overhead receiver measured terms unnecessary receptions extremely high approach 
shown adding redundant codewords carousel dramatically reduce reception overhead 
papers advocate adding xed amount redundancy blocks transmission reed solomon codes 
source repeatedly loops set blocks transmitting data redundant packet block turn packets exhausted repeats process 
interleaved approach enables receiver reconstruct source data receives su ciently packets block 
limitation approach lossy networks receiver may receive unnecessary packets blocks reconstructed waiting packets blocks needs reconstruct 
approaches described eliminate need retransmission requests thought approximations ideal solution call digital fountain 
digital fountain conceptually simpler cient applicable broader class networks previous approaches 
digital fountain injects stream distinct encoding packets network receiver reconstruct source data 
key property ofa digital fountain source data reconstructed intact subset encoding packets equal total length source data 
digital fountain concept similar ideas seminal works maxemchuk rabin 
approach construct better approximations digital fountain basis protocols perform reliable distribution bulk data 
emphasize digital fountain concept quite general applied diverse network environments 
example framework data distribution applicable internet satellite networks wireless networks mobile agents 
environments quite di erent terms packet loss characteristics congestion control mechanisms latency strive develop solution independent environment speci variables 
considerations motivate study example wide range packet loss rates comparisons 
body organized follows 
section describe detail characteristics problems consider 
section describe digital fountain solution 
section describe build theoretical approximation digital fountain erasure codes 
major hurdle implementing digital fountain standard reed solomon codes unacceptably high running times applications 
section describe tornado codes new class erasure codes extremely fast encoding decoding algorithms 
codes generally yield far superior approximation digital fountain realized reed solomon codes practice show section 
section describe design performance working prototype system bulk data distribution tornado codes built top ip multicast 
performance prototype bears simulation results demonstrates interoperability layered multicast techniques :10.1.1.102.1697:10.1.1.102.1697
conclude additional research directions digital fountain approach 
requirements ideal protocol recall example application millions clients want new release software course days 
application assume distribution server server send stream packets broadcast multicast long clients attempting download new release 
software download application highlights important features common similar applications distribute bulk data 
addition keeping network tra minimum scalable protocol distributing software multicast reliable le guaranteed delivered entirety receivers 
cient total client needs receive amount time required process received packets reconstruct le minimal 
ideally total time download client point point connections 
demand clients may initiate download discretion implying di erent clients may start download widely disparate times 
clients may sporadically interrupted continue download time 
tolerant protocol tolerate heterogeneous population receivers especially variety packet loss rates data rates 
state assumptions regarding channel characteristics 
ip multicast internet satellite transmission wireless transmission cable transmission representative consider 
important property channels return feedback channel clients server typically limited capacity non existent 
especially applicable satellite transmission 
channels generally packet packet header including unique identi er 
best ort channels designed attempt deliver packets frequently packets lost corrupted 
wireless networks particularly prone high rates packet loss networks describe prone bursty loss periods 
assume error correcting codes correct detect errors packet 
packet contains errors corrected discarded treated loss 
requirement solution reliable cient demand implies client robustness missing packets crucial 
example client may sporadically interrupted continuing download times completion 
interruptions server sending stream packets interrupted client ciency requirement implies total length packets client receive order recover le roughly equal total length le 
digital fountain solution section outline idealized solution achieves objectives laid previous section channels interest 
subsequent sections describe measure new approach implements approximation ideal solution superior previous approaches 
server wishes allow universe clients acquire source data consisting sequence equal length packets 
idealized solution server sends stream distinct packets called encoding packets constitute encoding source data 
server transmit encoding packets clients listening session 
client accepts encoding packets channel obtains exactly packets 
idealized solution data reconstructed regardless encoding packets client obtains 
encoding packets received client disconnect channel 
assume idealized solution little processing required server produce encoding packets clients recover original data encoding packets 
metaphorically describe stream encoding packets produced server idealized solution digital fountain 
digital fountain properties similar fountain water quenching thirst drinking glass water irrespective particular drops ll glass thirst 
digital fountain protocol desirable properties listed previous section functions channels characteristics outlined previous section 
building digital fountain erasure codes ideal way implement digital fountain directly erasure code takes source data consisting packets produces su ciently encoding packets meet user demand 
standard erasure codes reed solomon erasure codes ideal property decoder client side reconstruct original source data receives transmitted packets 
erasure codes typically stretch le consisting packets encoding packets input parameters 
refer ratio stretch factor erasure code 
nite stretch factor limits extent erasure codes approximate digital fountain reasonable approximation proposed researchers set repeatedly cycle transmission encoding packets :10.1.1.35.7747
limitation pre speci ed value su ciently high loss rates client may receive packets cycle 
lossy environments client may receive useless duplicate transmissions reconstructing source data decreasing channel ciency 
practice experimental results indicate source ine ciency large high loss rates set small multiple asn setting remainder 
serious limitation regards ciency encoding decoding operations 
detailed subsequent sections encoding decoding processing times standard reed solomon erasure codes prohibitive moderate values alternative propose avoid cost faster tornado codes :10.1.1.35.5754
tradeo associated code place 
main drawback tornado codes decoder requires slightly transmitted packets reconstruct source data 
tradeo main focus comparative simulation studies section 
rst section provide depth description way tornado codes constructed properties 
tornado codes section describe detail construction speci tornado code explain general principles tornado codes 
rst outline codes di er traditional reed solomon erasure codes 
give speci example tornado code compare performance standard reed solomon code :10.1.1.35.5754
rest discussion consider erasure codes take set source data packets produce set redundant packets total encoding packets xed length theory providing intuition reed solomon codes 
think ith source data packet containing value variable xi think jth redundant packet containing value variable yj linear combination xi variables appropriate nite eld 
ease description associate variable data single packet simulations packet may hold values variables 
example third redundant packet hold xk primitive element eld 
typically nite eld multiplication operations implemented table lookup addition operations implemented exclusive 
time packet arrives equivalent receiving value variables 
reed solomon codes guarantee successful receipt distinct packets enables reconstruction source data 
redundant packets source data packets arrive system equations corresponding redundant packets received 
substituting values corresponding received packets equations takes time proportional remaining subsystem equations unknowns corresponding source data packets received 
reed solomon codes system special form allows solve unknowns time proportional matrix inversion matrix multiplication 
bipartite graph bipartite graph source data redundancy large decoding time reed solomon codes arises dense system linear equations 
tornado codes built random equations sparse average number variables equation small 
sparsity allows substantially cient encoding decoding 
price pay faster encoding decoding packets longer su ce reconstruct source data slightly packets needed 
fact designing proper structure system equations number additional packets coding times simultaneously small di cult challenge :10.1.1.35.5754
tornado codes equations form bitwise exclusive 
tornado codes equations form redundant packets may derived redundant packets 
encoding time dominated number exclusive operations system equations 
decoding process tornado codes uses basic operations 
rst operation consists replacing received variables values equations appear 
second operation simple substitution rule 
substitution rule applied recover missing variable appears equation variable unique missing variable 
example consider equation 
suppose redundant packet containing received source data packets containing received 
equation solve exclusive operations 
substitution rule repeatedly single packet arrival may allow additional packets ect arrival propagates 
practice number possible substitution rule applications remains minimal slightly packets arrived 
single arrival generates substitutions allow recovery remaining source data packets 
name tornado codes 
decoding may soon packets arrive source data reconstructed 
note tornado codes exclusive operations avoid eld operations matrix inversion inherent decoding reed solomon codes 
total number exclusive operations decoding number encoding general 
stated reconstruct source data code su ces recover slightly structure tornado codes denotes exclusive tornado reed solomon decoding ine ciency required encoding times ln decoding times ln basic operation xor field operations table properties tornado vs reed solomon codes packets 
say decoding ine ciency encoding packets required reconstruct source data 
tornado codes decoding ine ciency xed quantity depends packet loss pattern random choices construct code 
variance decoding ine ciency described detail section 
advantage tornado codes standard codes trade small increase decoding ine ciency substantial decrease encoding decoding times 
recall reed solomon codes encoding times proportional decoding times proportional 
result reed solomon codes applied practice relatively small 
values ranging 
contrast families tornado codes encoding decoding times proportional ln decoding ine ciency practice encoding decoding times tornado codes orders magnitude faster reed solomon codes large values 
summary comparing properties tornado codes standard reed solomon codes table 
section example fast tornado code decoding ine ciency performance compare directly reed solomon codes 
example provide speci example tornado code 
convenient describe association variables equations terms levelled graph depicted 
nodes leftmost level graph correspond source data 
subsequent levels contain redundant data 
redundant packet exclusive pack ets held neighboring nodes level left depicted right side 
number exclusive operations required encoding decoding dominated number edges entire graph 
specify code specifying random graphs place consecutive levels 
mathematics code call tornado described covered :10.1.1.35.5754
code source data nodes redundant nodes 
code uses levels number nodes levels respectively 
graph rst levels union subgraphs 
graph truncated heavy tail distribution 
level truncated heavy tail distribution parameter fraction nodes degree 
graph di connects source data nodes nodes second level 
node degrees left hand side determined truncated heavy tail distribution 
example means nodes degree left hand side 
edge attached node chosen uniformly random right hand side 
distribution node degrees right hand side poisson 
second graph nodes left degree 
nodes right remaining nodes second level nodes degree 
edges generated randomly permuting edge slots left connecting permuted order nodes right 
graph helps prevent small cycles halting progress decoding 
second layer uses graph speci distribution designed linear programming tool discussed :10.1.1.35.5754
linear program nd graphs low decoding ine ciency 
graph nodes left degree 
right hand side nodes degree nodes degree nodes degree nodes degree node degree nodes degree nodes degree 
connections edge slots left right selected permuting edges slots left randomly connecting edge slots right 
total edges graph approximately edges source data node 
sparseness graph allows extremely fast encoding decoding 
performance practice tornado codes values order tens thousands encoded decoded just seconds 
section compare ciency tornado codes standard codes previously proposed network applications :10.1.1.102.1697:10.1.1.35.7747
erasure code listed tables cauchy standard implementations reed solomon erasure codes cauchy matrices 
note cauchy implementation available faster larger values implementation reed solomon codes notice may yield nodes degree right hand side happens small probability nodes removed 
may edges pairs nodes 
ect behavior algorithm dramatically redistribution multiple edges improves performance marginally 
encoding benchmarks reed solomon codes tornado codes size cauchy tornado kb seconds seconds kb seconds seconds mb seconds seconds mb seconds seconds mb seconds seconds mb seconds seconds bytes seconds seconds table comparison encoding times 
decoding benchmarks reed solomon codes tornado codes size cauchy tornado kb seconds seconds kb seconds seconds mb seconds seconds mb seconds seconds mb seconds seconds mb seconds seconds mb seconds seconds table comparison decoding times 
vandermonde matrices rizzo :10.1.1.35.7747
tornado codes designed described earlier section 
implementations carefully optimized running times improved constant factors 
experiments benchmarked sun mhz ultrasparc megabytes ram running solaris 
runs packet length kb 
runs le consisting packets encoded packets stretch factor 
decoding cauchy codes assume original le packets redundant packets recover original le 
assumption holds approximately carousel encoding stretch factor roughly half packets received redundant packets 
tornado average decoding ine ciency average original le packets redundant packets recover original le 
results demonstrate tornado codes encoded decoded faster reed solomon codes relatively small les 
note small variation decoding ine ciency decoding tornado codes depending particular set encoding packets received 
study variation ran trials tornado code 
show percentage trials receiver reconstruct source data speci values decoding ine ciency 
example tornado codes node representing packet decoding ine ciency corresponds receiving packets 
clients reconstruct source data receiving packets 
trials average decoding ine ciency cent decoding inefficiency tornado decoding inefficiency decoding ine ciency variation trials tornado maximum reception ine ciency standard deviation 
trials graph graph specially chosen generated randomly described section 
achieve better performance testing various random graphs performance settling 
tests suggest performance representative 
simulation comparisons previous section clear reed solomon erasure codes encode large les bulk data distribution prohibitive encoding decoding overhead 
approach described method interleaving suggested :10.1.1.35.7747
interleaved codes constructed follows suppose encoding packets produced le packets 
partition le packets blocks length blocks total 
stretch block ofk packets encoding block ofk packets standard erasure code adding kl redundant packets 
form encoding length interleaving encoding packets block encoding consists sequences packets consist exactly packet block 
choice value parameter interleaved codes crucial 
optimize encoding decoding speed interleaved codes clearly chosen small possible 
choosing small defeats purpose encoding redundant packet arrives reconstruct source data packet block 
redundant packets arrive data blocks reconstructed successfully bene sender 
explain detail say block full client viewpoint distinct transmitted packets associated block received 
entire le decoded client blocks full 
note decoding potentially done background packets arrive holds tornado codes 
phenomenon arises relatively small illustrated waiting blocks blocks waiting blocks ll 
source data redundancy ll receiver may receive packets blocks reconstructed successfully 
useless packets contribute directly decoding ine ciency 
summarize choice value interleaved codes introduces tradeo decoding speed decoding ine ciency 
compare various protocols compare decoding ine ciency decoding speed receiver 
recall decoding ine ciency obtain distinct packets order decode source data 
tornado codes decoding ine ciency codes constructed 
interleaved codes decoding ine ciency arises practice obtain packets packets decode block 
emphasize interleaved codes decoding ine ciency random variable depends loss rate loss pattern block size 
tradeo decoding ine ciency coding time interleaved codes motivates set experiments 
suppose choose interleaved setting decoding ine ciency comparable tornado decoding time compare 
suppose choose interleaved setting decoding time comparable tornado decoding ine ciency compare 
initial simulations assume probabilistic loss patterns transmission receiver lost independently xed probability emphasize bursty loss models uniform loss model impact results tornado code performance loss rate important 
tornado codes compute entire encoding ahead time send packets random order source 
loss pattern appears equivalent uniform loss pattern receiver 
note randomization sender may introduce latency tornado code approach may appropriate applications real time interactive video 
choice uniform model impact performance results interleaved codes randomization transmission order highly dependent loss pattern 
particular expect interleaved codes slightly better performance bursty losses 
provide results trace driven simulations internet demonstrate relatively small ect burstiness interleaved code performance 
decoding inefficiency decoding inefficiency mb file tornado interleaved interleaved receivers decoding inefficiency decoding inefficiency mb file tornado interleaved interleaved receivers comparison decoding ine ciency codes comparable decoding times 
speedup factor tornado erasure probabilities size kb kb mb mb mb mb mb table speedup tornado codes interleaved codes comparable ciency 
equating decoding ciency rst simulation compares decoding time tornado interleaved code decoding ine ciency comparable tornado section determined experimentally tornado codes property decoding ine ciency greater time 
table ratio running time interleaved code chosen property realized running time tornado course ratio changes loss probability le size change 
explain entries table derived 
compute running time interleaved codes rst simulations determine loss probability value maximum number blocks source data split maintaining decoding ine ciency time 
example megabyte le consisting kilobyte packets split eleven blocks maintaining property packets lost probability 
calculate decoding time block multiply number blocks obtain decoding time interleaved code 
stretch factor half packets injected system redundant encoding packets half source data packets 
computing decoding time block assume half packets received redundant encoding packets 
data previously cauchy codes column table approximate decoding time block source data packets seconds 
compute running time tornado simply decode times tornado earlier table 
example suppose encoding mb le transmitted mbit second channel loss rate 
takes just minutes receive packets decode le tornado interleaved code desired decoding ine ciency guarantee decoding time minutes interleaved code compared just seconds tornado comparisons encoding times yield similar results 
note slightly slower tornado codes decoding ine ciency wewould obtain better speedup results high loss rates 
interleaved codes harder pressed match stronger decoding guarantees 
equating decoding time second set simulations examines interleaved codes comparable decoding times tornado cauchy codes block length roughly equivalent speed tornado code 
compare block length reasonable practice 
block sizes study maximum decoding ine ciency observed scale large number receivers 
sender megabyte encoding megabyte le receivers asynchronously attempt download 
simulate results case packets lost independently uniformly random receiver rates 
loss rates representative congested internet connections loss rates near upper limits mobile receiver poor connectivity reasonably experience 
results give interpolated provide intuition performance intermediate rates loss 
channels low loss rates asthe loss rates studied interleaved codes tornado generally comparable performance 
shows di erent numbers receivers worst case decoding ciency experienced ofthe receivers averaged trials 
gures refers probability packet lost receiver 
leftmost point sub gure case receiver point just average decoding 
interesting feature gure decoding inefficiency decoding inefficiency receivers tornado avg 
tornado max 
interleaved avg 
interleaved max 
interleaved avg 
interleaved max 
file size kb worst case decoding ine ciency grows number receivers 
packet loss rates block size average ine ciency interleaved codes comparable tornado packet loss rates increase smaller block size ine ciency interleaved codes rises dramatically 
ine ciency worstcase receiver scale interleaved codes receiver size grows large 
tornado codes exhibit robust scalability better tolerance high loss rates 
scaling large files experiments demonstrate tornado codes scale better interleaved approach le size grows large 
due fact number packets client receive reconstruct source data interleaving grows super linearly size source data 
known coupon collector problem contrast number packets receivers require reconstruct source data tornado codes grows linearly size source data particular decoding ine ciency increase le size increases 
ect di erence easily seen 
case average decoding ine ciency maximum decoding ine ciency grow length le interleaving 
ect completely avoided tornado codes 
trace driven simulations study impact bursty loss patterns relative performance reed solomon tornado code approaches perform similar comparison publicly available mbone trace data collected yajnik kurose towsley 
traces clients abroad subscribed mbone broadcasts roughly hour length reported packets received 
clients experienced packet loss rates ranging course broadcasts 
sample loss patterns traces simply chose random starting point broadcast trace data generate packet loss patterns receiver broadcast time 
simulated downloading les various lengths interleaving tornado codes loss patterns 
decoding inefficiency decoding inefficiency receivers tornado avg 
tornado max 
interleaved avg 
interleaved max 
interleaved avg 
interleaved max 
file size kb comparison decoding ine ciency le size grows 
decoding inefficiency decoding inefficiency receivers trace data tornado avg 
interleaved avg 
interleaved avg 
file size kb comparison decoding ine ciency trace data 
averaging loss patterns generated broadcasts plot average decoding ine ciency various le sizes 
average loss rate randomly chosen trace segments selected just 
trace data considerable variance loss rate clients received virtually packet experienced large burst losses signi cant periods time 
trace data limited scope tornado codes maintain superior decoding ine ciency presence high burst losses data set 
fact results appear similar suggesting bursty loss pattern small ect 
implementation reliable distribution protocol tornado codes section describe experimental system distributing bulk data large number heterogeneous receivers may access data asynchronously 
implementation designed internet protocol built top ip multicast 
drawn existing techniques handle receiver heterogeneity congestion control layered multicast :10.1.1.102.1697
emphasize purpose developing system demonstrate feasibility tornado codes actual systems create completely functional multicast protocol deployment 
expect tornado codes prove useful environments internet satellite wireless systems 
settings di erent channel characteristics suggest di erent approaches congestion control tolerating receiver heterogeneity 
tornado code approach bulk data distribution apply remain essentially varying bandwidths packet loss rates 
rst describe design multicast protocol 
main issues layered multicast approach client uses decode message 
describe experimental setup performance results system 
layering multiple multicast groups congestion control approach employ follows lead authors advocate layered multicast :10.1.1.102.1697
main idea underlying approach enable source transmit data multiple multicast groups allowing receivers subscribe appropriate subset layers 
course practical considerations warrant keeping number multicast groups associated source minimum 
receiver subscription level factors width bottleneck link source network congestion 
basic ideas common proposed layered schemes server transmits data multiple layers layers ordered increasing transmission rate 
layers cumulative receiver subscribing layer subscribes layers beneath 
say receiver subscribes level subscribes layers example implementation geometrically increasing transmission rates bi rate ith layer 
receiver subscription level receive bandwidth proportional bi 
protocol scheme described vicisano rizzo crowcroft proposes novel ideas summarized brie congestion control achieved synchronization points sp specially marked packets stream :10.1.1.102.1697:10.1.1.102.1697
receiver attempt join higher layer immediately sp keeps track history events sp 
rate sp sent stream inversely proportional bandwidth lower bandwidth receivers frequent opportunities move upto higher levels 
explicit join attempts clients server generates periodic bursts packets sent twice normal rate layer 
ect creating network congestion conditions similar receivers experience explicit join 
receivers packet loss event indication congestion 
receiver witnesses packet losses burst adds layer sp 
conversely receivers drop lower subscription level packet loss occurs outside burst preceding synchronization point 
sending sp burst periods driven sender receivers reacting appropriately 
attractive features approach receivers need provide congestion control feedback source receivers need coordinate join attempts prevent disruption receivers 
features particularly important context digital fountain receiver source inter receiver communication undesirable 
demonstrates set transmission rates interarrival time sp resulting congestion control policy tcp friendly shares bandwidth comparable way point point tcp connections :10.1.1.102.1697:10.1.1.102.1697:10.1.1.102.1697
refer reader details :10.1.1.102.1697
scheduling packet transmissions multiple multicast groups described earlier receiver level subscribes layers important schedule packet transmissions carefully multiple layers minimize number duplicate packets client receives 
stretch factor limits number distinct packets transmitted strong ect number duplicates client receives especially presence high packet loss rates 
course large stretch factor provides exibility slows decoding time increases space requirements decoding 
reasons typically choose stretch factor compared larger stretch factors tornado codes certainly feasible 
nd choice suitable practice packet transmission scheme property level property receiver remains xed subscription level transmission packet loss remains su ciently low reconstruct source data receiving duplicate transmissions 
speci cally loss rate tion ine ciency tornado code cycle ck encoding packets receiver obtains packets necessary decode 
bhattacharyya show general transmission scheme exists realizes level property arbitrary set layered transmission rates 
example table demonstrates simple sending pattern rate organization previously described layers source data packets stretch factor 
sending pattern satis es level property 
fact sender transmits permutation entire encoding multicast layer cumulative subscription level repeating packet 
receivers change subscription level time witness ideal behavior 
show section reception ine ciency remains low receiver subscription levels change frequently optimizing properties schedule scenario remains open question 
reconstruction client detailed previous subsection client responsible observing sps modifying subscription level congestion warrants 
activity client perform reconstruction source data 
implement client decoding protocol 
memory required decoding tornado codes proportional length encoding size source data 
bandwidth packets sent layer round rd rd rd rd rd rd rd rd rst incremental approach client performs preliminary decoding operations packet arrives 
approach leads redundant computation reconstructed source data may arrive intact 
may substantial overhead processing individual packets immediately arrival 
second patient approach reduces ects wait xed number packets arrive source reconstructed statistical observations 
decoding completed time additional packets may processed individually small groups 
incremental approach bene enabling decoding computation overlapped packet reception patient approach simpler implement practice little loss decoding speed 
nal implementation wait packets arrive attempt decode process additional packets individually needed decoding successful 
experimental setup results turn measurements ciency experimental system 
clarify sources ine ciency 
recall decoding ine ciency captures ine ciency due speci cally tornado codes 
de ned distinct packets received prior reconstruction source data packets possible source ine ciency receiver obtain duplicate packets 
distinctness ine ciency captures loss ciency caused receiving duplicate packets 
occur cycling carousel exceedingly high loss rates changing receiver subscription layer described section 
de ned total packets received distinct packets received combining ects yields reception ine ciency de ned total packets received prior reconstruction source data packets clear experimental results measure prototype implementation 
testing layered protocol described test single layer protocol 
measure reception ine ciency server transmits le single multicast group xed rate 
results allow focus ciency packet transmission scheme independent layering scheme congestion control 
server runs threads udp unicast thread provides various control information table packet transmission scheme layers multicast group information le length client multicast transmission thread 
clients protocols connect server known udp port control information receipt information subscribe appropriate multicast groups 
test source data consisted quicktime movie clip available www nfl com size slightly megabytes 
encoding algorithm stretch factor produce packets size bytes 
packets additionally tagged bytes information packet index serial number group number give nal packet size bytes 
server clients di erent subnets located berkeley cmu cornell 
hops path berkeley cmu bottleneck bandwidth obtained pathchar mb rtt ms hops path berkeley cornell bottleneck bandwidth mb rtt ms base layer bandwidth set rates ranging kb sec kb sec 
ran experiments server berkeley cmu clients located subnets 
locating server cmu tended generate higher packet loss rates transmission bandwidth 
machines cmu berkeley mhz ultrasparc running solaris 
client cornell ran mhz sparc 
running layered protocol layers 
initial experiments cases witnessed loss rates course transmission rates admittedly far higher congestion control techniques intended handle :10.1.1.102.1697:10.1.1.102.1697
generate higher loss rates arise environments mobile wireless networks base layer rate set arti cially high causing router path drop packets persistently 
data sets experiments shown 
seen graphs single layered case packet losses distinctness 
expected level property 
low loss rates reception ine ciency ectively decoding ine ciency example roughly average 
decoding ine ciency slightly higher tornado di erent experiments wait packets arrive trying decode 
observe transmission scheme robust severe loss rates nearly loss rate reception ine ciency generally 
course reason suspect excessively high note possible loss rate losses initially higher rst cycle client receives duplicates 
precisely happened outlying point packet loss single layer distinctness ine ciency graph 
distinctness inefficiency packet loss distinctness inefficiency packet loss loss rates ahead time choose larger stretch factor expense proportionally higher encoding decoding times 
shows experimental data multilayered case 
observe multiple layers congestion control increases distinctness ine ciency 
natural switching subscription levels cause client receive packets obtained subscription levels 
high loss rates distinctness ine ciency remained low receivers generally subscribed base layer 
interesting direction intend pursue study reception ciency varies rates change receiver subscription level 
tornado codes yields signi cant new possibilities design reliable multicast protocols 
explore possibilities formalized notion ideal digital fountain explained tornado codes yield closer approximation digital fountain previous systems standard reed solomon erasure codes 
prototype multicast data distribution system demonstrates simple protocols tornado codes ective practice 
useful test similar system large number users fully demonstrate ectiveness approach 
closely approximate digital fountain tornado codes conclude possible applications encoding scheme 
application experimental data single layer experimental data layers decoding inefficiency packet loss decoding inefficiency packet loss experimental results prototype reception inefficiency packet loss reception inefficiency packet loss routing data endpoint endpoint ina packet routing network 
packets generated digital fountain source inject packets multiple paths network 
packets experience congestion delayed destination recover data su cient number packets arrive irrespective paths took 
application dates back seminal works routing maxemchuk information dispersal rabin 
suggested standard erasure codes 
expect tornado codes lead improved practical routing schemes 
application tornado code approximation useful arises context mirrored data 
currently minimize response time clients search lightly loaded mirror site uncongested path 
sources ideal digital transmit data clients access multiple sources simultaneously aggregate packets receive recover data ciently 
problem tornado code solution stretch factor small receives duplicate packets frequently stretch factor large space time requirements decoding prohibitive 
currently studying parameters may set appropriately yield viable solution 
acharya franklin zdonik dissemination data delivery broadcast disks ieee personal communications december pp 

bestavros 
aida real time fault tolerant broadcast disks 
procedings th ieee real time system symposium 
bhattacharyya kurose towsley nagarajan cient rate controlled bulk data transfer multiple multicast groups proc 
info com san francisco april 
karpinski karp luby zuckerman xor erasure resilient coding scheme icsi technical report 
tr august 
floyd jacobson liu mccanne zhang reliable multicast framework light weight sessions application level framing :10.1.1.121.1027
acm sigcomm pp 
august 
gemmell erasure correcting scalable reliable multicast microsoft research technical report ms tr june 
huitema case packet level fec 
proc 
ifip th int workshop protocols high speed networks sophia antipolis france october 
cauchy reed solomon codes 
available www icsi berkeley edu luby 
jacobson pathchar available www nrg ee lbl gov pathchar 
lin paul rmtp reliable multicast transport protocol 
ieee infocom pp 
march 
luby mitzenmacher shokrollahi spielman practical loss resilient codes :10.1.1.35.5754
proceedings th acm symposium theory computing 
luby mitzenmacher shokrollahi analysis random processes tree evaluation 
proceedings th annual acm siam symposium discrete algorithms january 
maxemchuk routing store forward networks 
ph 
thesis university pennsylvania may 
maxemchuk routing 
proceedings icc san francisco ca pp 

mccanne jacobson vetterli layered multicast 
proc 
acm sig comm pp 

miller reliable multicast protocols practical view 
proc 
nd annual computer networks 
biersack reliable multicast forward error correction 
proc 
ifip th int workshop protocols high speed networks pp 
sophia antipolis france october 
chapman hall 
biersack asynchronous multicast push amp 
proc 
international conference computer communications cannes france november 
jung carl biersack bad reliable multicast local recovery 
proc 
infocom san francisco april 
biersack towsley parity loss recovery reliable multicast transmission 
proc 
acm sigcomm 
rabin cient dispersal information security load balancing fault tolerance 
journal acm volume pp 

rizzo ective erasure codes reliable computer communication protocols :10.1.1.35.7747
computer communication review april 
rizzo vicisano reliable multicast data distribution protocol software fec techniques 
proc 
greece june 
schooler gemmell multicast fec solve midnight problem microsoft research technical report ms tr september 
vicisano rizzo crowcroft :10.1.1.102.1697
tcp congestion control layered multicast data transfer 
proc 
infocom san francisco april 
yajnik kurose towsley packet loss correlation mbone multicast network 
proceedings ieee global internet london november 
yavatkar gri oen sudan reliable dissemination protocol interactive collaborative applications 
proceedings acm multimedia san francisco pp 

