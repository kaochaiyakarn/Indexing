ieee transactions visualization computer graphics vol 
october december ball pivoting algorithm surface reconstruction fausto bernardini joshua holly rushmeier cla silva member ieee gabriel taubin senior member ieee ball pivoting algorithm bpa computes triangle mesh interpolating point cloud 
typically points surface samples acquired multiple range scans object 
principle bpa simple points form triangle ball user specified radius touches containing point 
starting seed triangle ball pivots edge revolves edge keeping contact edge endpoints touches point forming triangle 
process continues reachable edges tried starts seed triangle points considered 
process repeated ball larger radius handle uneven sampling densities 
applied bpa datasets millions points representing actual scans complex objects 
relatively small amount memory required bpa time efficiency quality results obtained compare favorably existing techniques 
index terms scanning shape reconstruction point cloud range image 
advances data acquisition hardware facilitated widespread scanning document geometry physical objects archival purposes step new product design 
typical data acquisition pipeline consists steps adapted scanning acquisition surface samples measurement device laser range scanner system 
data registration alignment scans single coordinate system 
data integration interpolation measured samples points derived measured samples surface representation usually triangle mesh 
model conversion mesh decimation optimization fitting higher order representations focuses data integration phase 
new method finding triangle mesh interpolates unorganized set points 
fig 
shows closeup view triangle mesh obtained running algorithm hundreds scans michelangelo 
model took minutes compute pentium ii pc 
method mild assumptions samples valid wide range acquisition techniques samples distributed entire surface spatial frequency greater equal application specified minimum value bernardini rushmeier taubin ibm watson research center box yorktown heights ny 
mail fausto holly taubin watson ibm com 
silva labs research shannon laboratory park ave florham park nj 
mail research att com 
information obtaining reprints article please send mail tvcg computer org ieeecs log number 
ieee estimate surface normal available measured sample 
main contributions method conceptually simple 
starting seed triangle pivots ball edge current mesh boundary new point hit ball 
edge point define new triangle added mesh algorithm considers new boundary edge pivoting 
output mesh manifold subset point set 
nice properties alpha shapes proved reconstruction 
ball pivoting algorithm bpa short efficient terms execution time storage requirements 
exhibited linear time performance datasets consisting millions input samples 
implemented form require input data loaded memory simultaneously 
resulting triangle mesh incrementally saved external storage computation additional memory 
bpa proved robust handle noise real scanned data 
tested large scanned datasets particular create models michelangelo hundreds scans acquired structured light sensor visual interface supplemented photometric system 
rest structured follows section define problem discuss related 
section discuss concepts underlying ball pivoting algorithm section describe algorithm detail 
results ieee transactions visualization computer graphics vol 
october december fig 

section michelangelo 
triangle mesh generated scans ball pivoting algorithm 
section discuss open problems section 
background years seen proliferation scanning equipment algorithms synthesizing models scanned data 
refer reader reviews research field 
section focus role interpolating meshing schemes play scanning objects practical scanning systems 
interpolating meshes scanning systems define scanning problem object find continuous representation object surface captures features length scale larger 
value dictated application 
capturing features scale requires sampling surface spatial resolution 
surface may consist large areas approximated sparser meshes absence priori information need sampling resolution guarantee feature missed 
consider acquisition systems produce sets range images arrays depths covers subset full surface 
height fields regular sampling individual range images easily meshed 
individual meshes compute estimated surface normal sample point 
ideal acquisition system return samples lying exactly object surface real measurement system introduces error 
system returns samples error orders magnitude smaller feature size sampling regarded perfect 
surface reconstructed finding interpolating mesh additional operations measured data 
scanning systems need account acquisition error 
sources error error registration error sensor line sight 
estimates actual surface points usually derived averaging samples redundant scans 
estimates connected triangle mesh 
methods estimating surface points depend data structures facilitate construction mesh 
classes methods successfully large datasets assume negligible registration error compute estimates correct line sight error 
classes volumetric methods introduced curless levoy 
methods individual aligned meshes compute signed distance function volume grid encompassing object 
estimated surface points computed points grid distance zero 
structure volume facilitates construction mesh marching cubes algorithm 
second class methods mesh stitching methods technique 
disjoint height field meshes stitched single surface 
disjoint regions defined finding areas overlap different subsets set scans 
estimated surface points region computed weighted averages points overlapping scans 
estimated points region re triangulated resulting meshes stitched single mesh 
turk levoy developed similar method disjoint meshes computes estimated surface points 
observe cases methods method estimating surface points need closely linked method constructing final mesh 
volumetric approach technique marching cubes finding triangle mesh passing estimated surface points 
mesh joining approaches technique finding mesh connecting estimated surface points place stitching existing meshes 
importantly efficient algorithm computing mesh joins points method computing estimated surface points including impose additional structure data treat registration line sight error separately 
example demonstrated reducing error individual meshes alignment reduce registration error 
developing method moves samples known scanner error bounds conform meshes aligned 
current implementation method preprocess data shown results section 
method described 
may desirable find interpolating mesh measured data contains error 
preliminary mesh smoothed cleaned decimated planning functions 
mesh interpolating measured points starting point computing consensus points 
state art interpolating meshes existing interpolating techniques fall categories sculpting region growing bpa 
sculpting methods bernardini ball pivoting algorithm surface reconstruction volume tetrahedralization computed data points typically delaunay triangulation 
tetrahedra removed convex hull extract original shape 
region growing methods start seed triangle consider new point join existing region boundary continue points considered 
strength sculpting approaches provide theoretical guarantees quality resulting surface topology correct surface converges true surface sampling density increases see 
computing required delaunay triangulation prohibitively expensive terms time memory required lead numerical instability dealing datasets millions points 
goal bpa retain strengths previous interpolating techniques method exhibits linear time complexity robustness real scanned data 
surface reconstruction ball pivoting main concept underlying ball pivoting algorithm quite simple 
manifold surface threedimensional object point sampling assume dense ball ball radius pass surface touching sample points see fig 
example 
start placing ball contact sample points 
keeping ball contact initial points pivot ball touches point illustrated fig 
details section 
pivot edge current mesh boundary 
triplets points ball contacts form new triangles 
set triangles formed ball walks surface constitutes interpolating mesh 
bpa closely related alpha shapes 
fact triangle computed ball walk obviously empty smallest open ball radius see page 
bpa computes subset faces shape faces subset skeleton dimensional delaunay triangulation point set 
alpha shapes effective tool computing shape point set 
surface reconstructed bpa retains qualities alpha shapes provable reconstruction guarantees certain sampling assumptions intuitively simple geometric meaning 
skeleton alpha shape computed noisy sampling smooth manifold contain multiple connections 
nontrivial filter unwanted components 
original formulation alpha shapes computed extracting subset delaunay triangulation point set data structure easily computed datasets millions points 
assumptions input stated bpa efficiently robustly computes manifold subset alpha shape suited application 
sufficient conditions sampling density curve plane derived guarantee fig 

ball pivoting operation 
see section details 
pivoting ball contact vertices triangle normal pivoting edge lies axis perpendicular page pointing viewer midpoint origin 
circle intersection pivoting ball 
coordinate frame center ball lies positive axis 
pivoting ball stays contact edge endpoints center describes circular trajectory center radius 
pivoting motion ball hits new data point sk intersection sphere centered 
center ck pivoting ball touches intersection sk lying negative halfplane oriented line lk alpha shape reconstruction homeomorphic original manifold lies bounded distance 
theorem easily extended surfaces stated proof suppose smooth manifold sampling satisfies properties 
intersection ball radius manifold topological disk 

ball radius centered manifold contains sample point interior 
condition guarantees radius curvature manifold larger ball pass cavities concave features multiple contacts surface 
second condition tells sampling dense ball walk sample points leaving holes see fig 
examples 
bpa produces homeomorphic approximation smooth manifold define homeomorphism distance jjp jj practice deal ideal samplings 
behavior algorithm cases 
consider case real scanned data 
typical problems missing points nonuniform density imperfectly aligned overlapping range scans scanner line error 

types scanners produce outliers points lie far actual surface 
outliers occur frequently boundaries range images presence sharp 
outlier removal best done device dependent preprocessing 
scanner data section affected problem 
ieee transactions visualization computer graphics vol 
october december fig 

ball pivoting algorithm 
circle radius pivots sample point sample point connecting edges 
sampling density low edges created leaving holes 
curvature manifold larger sample points reached pivoting ball features missed 
bpa designed process output accurate registration conformance algorithm see section attempt average noise residual registration errors 
bpa robust presence imperfect data 
augment data points approximate surface normals computed range maps disambiguate cases occur dealing missing noisy data 
example parts surface scanned holes larger sampling 
impossible distinguish interior exterior region respect sampling 
surface normals assume outward orientation decide surface orientation 
example choosing seed triangle check surface normals vertices consistently oriented 
areas density higher problem 
pivoting ball walk points forming small triangles 
data noise free smaller local curvature points interpolated 
points affected noise lying surface touched ball part reconstructed mesh see fig 

missing points create holes filled pivoting ball 
postprocessing hole filling algorithm employed particular bpa applied multiple times increasing ball radii explained section 
need handle possible ambiguities missing data introduce 
pivoting boundary edge ball touch unused point lying close surface 
surface normals decide point touched valid see fig 

triangle rejected dot product normal surface normal negative 
presence misaligned overlapping range scans lead poor results registration error similar pivoting ball size 
undesired small connected components lying close main surface formed main surface affected high frequency noise see fig 

seed selection strategy avoids creating large number small components 
simple postprocessing removes small components surface smoothing significantly improve result cases aesthetically 
regardless defects data bpa guaranteed build orientable manifold 
notice bpa try build largest possible connected manifold seed triangle 
choosing suitable value radius pivoting ball typically easy 
current structured light laser triangulation scanners produce dense samplings exceeding requirement distance fig 

ball pivoting presence noisy data 
surface samples lying surface level touched pivoting ball remain isolated discarded algorithm 
due missing data ball pivots edge touches sample belongs different part surface 
checking triangle data point normals consistently oriented avoid generating triangle case 
noisy samples form layers distant allow ball walk layers 
spurious small component created 
seed selection strategy avoids creation large number small components 
remaining ones removed simple postprocessing step 
cases bpa outputs orientable triangulated manifold 
bernardini ball pivoting algorithm surface reconstruction half size features interest 
knowledge sampling density characteristics scanner feature size wants capture choose appropriate radius 
alternatively analyze small subset data compute point density 
uneven sampling arise scanning complex surface regions project small areas scanner direction 
best approach take additional scans scanner perpendicular regions acquire additional data 
notice bpa applied multiple times increasing ball radii handle uneven sampling densities described section 
ball pivoting algorithm bpa follows advancing front paradigm incrementally build interpolating triangulation 
bpa takes input list surface sample data points associated normal ni optional attributes texture coordinates ball radius basic algorithm works finding seed triangle data points ball radius touching contains data point adding triangle time performing ball pivoting operation introduced section 
front represented collection linked lists edges initially composed single loop containing edges defined seed triangle 
edge front represented endpoints opposite vertex center ball touches points links previous edge loop front 
edge active boundary 
edge pivoting 
possible pivot edge marked boundary 
frozen state explained context core extensions 
keeping information edge simpler pivot ball 
reason front collection linked lists single ball pivots edge depending touches newly encountered data point previously front changes topology 
bpa handles cases simple topological operators join glue ensure time front collection linked lists 
basic bpa algorithm shown fig 

detail functions data structures 
particular describe simple modification necessary basic algorithm support efficient core execution 
allows bpa triangulate large datasets minimal memory usage 
spatial queries ball pivot find seed triangle lines fig 
require efficient lookup subset points contained small spatial neighborhood 
implemented spatial query regular grid cubic cells voxels 
voxel sides size data points stored list list organized bucket sort points lying voxel form contiguous sublist 
voxel stores pointer fig 

skeleton bpa algorithm 
necessary error tests left readability edge orientation checks 
edges front generally accessed keeping queue active edges 
join operation adds active edges front 
glue operation deletes edges front changes topology front breaking single loop combining loops 
see text details 
find seed triangle function returns exposed triangle initialize front 
sublist points sublist voxel empty 
extra voxel grid stores null pointer 
visit points voxel sufficient traverse list node pointed voxel pointed voxel 
point easily find voxel lies dividing coordinates usually need look points distance subset points contained voxels adjacent including 
grid allows constant time access points 
size prohibitive processed large dataset step core implementation described section process data manageable chunks 
memory usage reduced expense slower access compact representations sparse matrix data structure 
seed selection data satisfying conditions reconstruction theorem section seed connected component reconstruct entire manifold function find seed triangle line fig 

simple way find valid seed pick point reconstructed triangulation 
consider pairs points neighborhood order distance build potential seed triangles ieee transactions visualization computer graphics vol 
october december check triangle normal consistent vertex normals pointing outward 
test ball center outward halfspace touches vertices contains data point 
valid seed triangle 
presence noisy incomplete data important select efficient seed searching strategy 
valid seed algorithm builds largest possible connected component containing seed 
noisy points lying distance slightly larger reconstructed triangulation form potential seed triangles leading construction small sets triangles lying close main surface see fig 

small components artifact noise data usually undesired 
easy eliminate data significant amount computational resources wasted constructing 
observe limit considering data point voxel candidate vertex seed triangle components spanning volume larger voxels 
voxel consider average normal points 
normal approximates surface normal region 
want ball walk surface convenient consider points projection large positive 
simply keep list nonempty voxels 
search voxels valid seed triangles start building triangulation pivoting operations 
pivoting possible continue search seed triangle stopped skipping voxels containing point part triangulation 
seeds algorithm stops 
ball pivoting pivoting operation line fig 
starts triangle ball radius touches vertices 
loss generality assume edge pivoting edge 
ball initial position center contain data point seed triangle computed previous pivoting operation 
pivoting principle continuous motion ball ball stays contact endpoints illustrated fig 

contact motion constrained follows center ball describes circle lies plane perpendicular midpoint 
center circular trajectory radius 
motion ball may hit point point hit edge boundary edge 
triangle new valid triangle ball final position contain point valid starting ball pivoting operation 
practice find follows consider points neighborhood point compute center cx ball touching ball exists 
cx lies circular trajectory computed intersecting sphere centered circle points cx select trajectory report point hit corresponding ball center 
trivial rejection tests added speed finding hit point 
join glue operations operations generate triangles adding removing edges front loops lines fig 

simpler operation join ball pivots edge touching vertex vertex part mesh 
case output triangle locally modify front removing adding edges see fig 

part mesh cases arise 
internal mesh vertex front edge uses 
corresponding triangle generated create vertex 
case simply marked boundary edge 
belongs front 
check adding candidate new triangle create manifold 
easily accomplished looking existence orientation edges incident apply join operation output new mesh triangle 
join potentially create pairs coincident edges opposite orientation removed glue operation 
glue operation removes front pairs coincident edges opposite orientation coincident edges orientation created 
example edge added front join operation applies edge front glue remove pair edges adjust front accordingly 
cases possible illustrated fig 

sequence join glue operations illustrated fig 

core extensions able personal computer triangulate highresolution scans allows inexpensive site processing data 
due locality advancing front algorithms suited simple core extensions 
employed simple data slicing scheme extend algorithm shown fig 

basic idea cache portion dataset currently pivoting dump data longer load data needed 
case axis aligned planes define active region pivoting 
initially place way data points lie user specified distance 
edge created test endpoints case mark edge frozen 
edges remaining queue frozen simply shift upwards update frozen active edges 
subset data points loaded discarded bernardini ball pivoting algorithm surface reconstruction fig 

join operation simply adds new triangle removing edge front adding new edges 
memory corresponding bounding box enters exits active slice 
scans easily preprocessed break smaller meshes span slices memory load remains low 
change required algorithm implement refinement outer loop move active slice addition instructions edges lines fig 

multiple passes deal unevenly sampled surfaces easily extend algorithm run multiple passes increasing ball radii 
user specifies list radii ng input parameters 
slice increasing start inserting points grid voxel size bpa run active edges queue 
point increment go front edges check edge opposite vertex forms valid seed triangle ball radius added queue active edges 
pivoting started 
fig 

glue operation applied join creates edge identical existing edge opposite orientation 
coincident edges removed front adjusted accordingly 
possible cases edges form loop 
loop deleted front 
edges belong loop consecutive 
edges removed loop shortened 
edges consecutive belong loop 
loop split 
edges consecutive belong different loops 
loops merged single loop 
fig 

example sequence join glue operations 
new triangle added existing front 
front vertices inside dashed circle represent single data point 
join removes edge creates new front edges coincident existing ones 
glue operations remove coincident edge pairs 
shows triangle added 
edges created join coincident existing edge 
glue removes duplicate pair 
remarks bpa algorithm implemented standard template library 
code lines including core extensions 
algorithm linear number data points uses linear storage assumption data density bounded 
assumption appropriate scanned data collected equipment known sample spacing 
scans overlap total number points region bounded known constant 
steps simple state checks updates queues linked lists 
bounded density point need related constant number neighbors 
example point contained constant number loops advancing front 
operations ball pivot find seed triangle complex 
ball pivot operates different mesh edge number pivots 
single pivot requires identifying points neighborhood 
list points collected voxels surrounding candidate ieee transactions visualization computer graphics vol 
october december point grid 
bounded density list constant size perform algebraic computations point list select minimum result operations list size 
find seed triangle picks unused points time tests incident triangle valid seed 
point considered test performed times 
test candidate point gather point list discussed consider pairs points find seed triangle reject candidate 
testing triangles may require classifying nearby point sphere touching vertices worst case steps 
practice limit number candidate points triangles tested heuristics discussed section 
core implementation bpa uses memory number cells voxel grid 
term includes data advancing front include mesh edge candidate edge queue 
core implementation uses memory number data points largest slice size smaller grid covering single slice 
user control size slices memory requirements tailored available hardware 
voxel grid compactly represented sparse matrix small constant increase access time 
experimental results experiments conducted mhz pentium ii xeon processor ibm pro running windows nt 
experiments datasets clean dataset points analytical surface see fig 
datasets stanford scanning database see figs 
large dataset acquired main motivation model michelangelo see fig 

allow flexible input multiple scans core execution program reads input parts list individual scans converted single coherent fig 

results 
triangle mesh computed bpa interpolating points triangle mesh scan transformation matrix bounding box quickly estimate mesh position assignment slice actual scan loaded needed 
experiments table fig 
summarizes results 
clean dataset collection points analytical surface 
stanford bunny dragon buddha datasets multiple laser range scans small objects 
scanner acquire data cyberware ms 
data required minor preprocessing 
stanford program connect points individual range data scan provide estimates surface normals 
removed plane large planes triangles hole filling algorithms described 
fig 

summary results 
pts scans original number data points range images respectively 
lists radii pivoting balls mm 
multiple radii mean multiple passes algorithm increasing ball size 
slices number slices data partitioned core processing 
triangles number triangles created bpa 
mem 
usage maximum amount memory time mesh generation mb 
time time spent reading input binary files includes time write output mesh indexed triangle set binary format 
cpu time time spent computing triangulation 
times minutes stated 
tests performed mhz pentium ii xeon 
bernardini ball pivoting algorithm surface reconstruction fig 

results 
stanford bunny 
stanford dragon 
stanford buddha 
preliminary reconstruction michelangelo 
change aesthetic reasons bpa problem handling full input 
order confirm effectiveness core capabilities modified stanford dragon subdividing range mesh pieces multiplying original meshes 
similar preprocessing applied buddha dataset 
note decompositions performed efficiently arbitrarily large range scans necessarily need fit memory techniques described 
data undergone extensive preprocessing scanning registration scope 
data large processed core processed slices 
scanning included capture multiple color images calibrated lighting ieee transactions visualization computer graphics vol 
october december reflectance normals maps augment geometric data computed see 
introduced ball pivoting algorithm advancing front algorithm incrementally build interpolating triangulation point cloud 
bpa desirable properties intuitive bpa set points rolling ball point cloud 
user chooses single parameter 
flexible efficient robust test datasets ranged small synthetic data large real world scans 
shown implementation bpa works datasets millions points representing actual scans complex objects 
data pentium ii pc algorithm generates writes disk output mesh rate roughly triangles minute 
theoretical foundation bpa related alpha shapes sufficiently dense sampling guaranteed reconstruct surface homeomorphic bounded distance original manifold 
avenues 
interesting evaluate bpa triangulate surfaces sampled particle systems 
possibility left open problem developed context isosurface generation 
weighted points able generate triangulations adaptive samplings 
sampling density changed depending local surface properties point weights accordingly assigned computed 
extension algorithm lines weighted generalization alpha shapes able generate compact adaptive interpolating triangulation 
done initial experiments smoothing algorithm adapted preprocess data compute consensus points multiple overlapping scans input bpa time making small refinements rigid alignment scans 
datasets preprocessed current implementation algorithm 
acknowledgments authors stanford university computer graphics laboratory making range data publicly available 
dell opera del florence italy kind collaboration allowing scan michelangelo dr jack wasserman proposing collaborating project 
pulli duchamp hoppe mcdonald shapiro stuetzle robust meshes multiple range maps intl 
conf 
advances digital imaging modeling pp 
ieee cs press may 
edelsbrunner mu cke dimensional alpha shapes acm trans 
graph vol 
pp 
jan 
visualization solve year old mystery ieee computer graphics applications vol 
pp 
feb 
bernardini bajaj chen automatic reconstruction cad models digital scans int computational geometry applications vol 
nos 
pp 
aug oct 
mu ller interpolation approximation surfaces dimensional scattered data points proc 
eurographics eurographics state art reports 
curless levoy volumetric method building complex models range images proc 
siggraph computer graphics conf pp 

lorensen cline marching cubes high resolution surface construction algorithm computer graphics vol 
pp 

general surface approach integration set range views ieee trans 
pattern analysis machine intelligence vol 
pp 
apr 
turk levoy polygonal meshes range images proc 
siggraph computer graphics conf pp 

dorai wang jain mercer registration integration multiple object views model construction ieee trans 
pattern analysis machine intelligence vol 
pp 
jan 
bajaj bernardini xu automatic reconstruction surfaces scalar fields scans proc 
siggraph computer graphics conf pp 

amenta bern new voronoi surface reconstruction algorithm proc 
siggraph computer graphics conf pp 


boissonnat geometric structures dimensional shape representation acm trans 
graph vol 
pp 

graph approach surface reconstruction proc 
eurographics computer graphics forum vol 
pp 

hilton marching triangles range image fusion complex object modelling proc 
ieee int conf 
image processing vol 
pp 

bernardini bajaj sampling reconstructing manifolds alpha shapes proc 
ninth canadian conf 
computational geometry pp 
aug 
updated online version available www ca 
amenta bern surface reconstruction voronoi filtering proc 
th ann 
acm symp 
computer geometry pp 

edelsbrunner weighted alpha shapes technical report uiucdcs computer science dept univ illinois urbana il 
taubin signal processing approach fair surface design proc 
acm siggraph computer graphics conf pp 
aug 

chiang silva schroeder interactive outof core isosurface extraction proc 
ieee visualization pp 
nov 
rushmeier bernardini computing consistent normals colors photometric data proc 
second int 
conf 
digital imaging modeling ottawa canada oct 
witkin heckbert particles sample control implicit surfaces glassner ed proc 
acm siggraph computer graphics conf pp 
orlando florida july 
angel isosurface extraction particle systems yagel hagen eds ieee visualization pp 
nov 
bernardini ball pivoting algorithm surface reconstruction fausto bernardini received degree electrical engineering universita la sapienza rome italy phd degree computer science purdue university 
currently member research staff ibm watson research center 
research interests include large scale data capture interactive visualization 
authored papers patents fields applied computational geometry computer graphics 
joshua received masters degree rutgers university 
working graphics ibm watson research center specializing simplification detail control algorithms applied rendering complex models 
holly rushmeier received bs ms phd degrees mechanical engineering cornell university respectively 
research staff member ibm watson research center 
receiving phd held positions georgia institute technology national institute standards technology 
selected national science foundation presidential young investigator 
served papers chair acm siggraph conference papers chair ieee visualization conference 
currently editor chief acm transactions graphics 
research interests include data visualization rendering algorithms acquisition input data computer graphics image synthesis 
claudio silva received phd degree computer science state university new york stony brook 
senior member technical staff information visualization research department research 
joining research staff member ibm watson research center worked geometry compression scanning visibility culling polyhedral cell sorting volume rendering 
student national science foundation postdoctoral researcher worked sandia national labs developed large scale scientific visualization algorithms tools handling massive datasets 
main research interests graphics visualization applied computational geometry high performance computing 
dr silva member ieee member ieee computer society 
gabriel taubin received phd degree electrical engineering brown university en ciencias matem degree university buenos aires argentina 
research staff member manager visual geometric computing group ibm watson research center yorktown heights new york 
joined ibm research member exploratory computer vision group moved visualization interaction graphics group visualization technologies 
known geometry compression progressive transmission polygonal models signal processing approach polygonal mesh smoothing algebraic curve surface rasterization algebraic curves surfaces computer vision 
published book chapters refereed journal conference papers conference papers technical reports patents issued 
eurographics state art report geometry compression progressive transmission organized taught courses geometry compression siggraph siggraph 
granted ibm research computer science best award geometry compression topological surgery 
led development geometry compression technology years incorporated mpeg standard 
currently interested graphics networked environment including modeling scanning surface reconstruction surface simplification geometry compression progressive transmission geometric algorithms computation rendering new image representation rendering schemes 
dr taubin senior member ieee senior member ieee computer society 
