framework audio analysis george tzanetakis department computer science princeton university perry cook department computer science department music princeton university cs princeton edu prc cs princeton edu address olden street princeton nj fax existing audio tools handle increasing amount computer audio data inadequately 
typical tape recorder paradigm audio interfaces inflexible time consuming especially large data sets 
hand completely automatic audio analysis annotation impossible current techniques 
alternative solutions semi automatic user interfaces users interact sound flexible ways content 
approach ers significant advantages manual browsing annotation retrieval 
furthermore implemented existing techniques audio content analysis restricted domains 
describes framework experimenting evaluating integrating techniques 
test architecture proposed techniques implemented tested 
addition new method temporal segmentation audio texture described 
method combined audio analysis techniques hierarchical browsing classification annotation audio files 
growing amount audio data available internet today 
traditional tape recorder sample playback paradigm browsing locating manipulating skimming audio cumbersome inflexible 
main reason treats audio data linear block samples 
traditional information retrieval ir van rijsbergen popular web search engines uses computer readable text data ers ability quickly locate browse large amounts data familiar search ranked similarity interface 
unfortunately equivalent methods available audio 
obvious solution problem handling large amounts audio data annotate textual information traditional ir techniques searching 
approach works advantage known supported techniques 
hand current interfaces human annotation audio extremely time consuming 
number techniques automatic analysis audio information proposed foote 
approaches reasonably restricted classes audio 
techniques completely automatic annotation system audio envisioned 
impossible theory problems approach 
current systems perfect annotation errors inevitable 
problem current state art possible solved 
second problem subtle easy address 
audio especially music heard described di erently listener 
attributes audio listeners agree general structure piece style ideally system annotation automatically extract information user edit expand 
leads semi automatic approach combines manual fully automatic annotation flexible practical user interface audio manipulation 
describes framework building audio analysis tools integrating semi automatic graphical interface 
framework designed flexible accommodate new algorithms easily 
addition new approach segmentation audio files texture described 
combination temporal segmentation sound classification significantly reduces overhead manual annotation forms powerful foundation audio analysis applications 
improve classification performance texture adaptive window size integrating classification results 
applications possible application areas semi automatic audio analysis tools 
digital video libraries active area research benefit development tools 
informedia project carnegie mellon hauptmann witbrock contains terabyte data 
indexing archive done combination speech recognition image analysis keyword searching techniques 
audio analysis browsing tools enhance current indexing techniques especially regions contain speech 
detecting speech segments important automatic speech recognition systems especially dealing real world multimedia data 
detecting speaker male female determining identity improves recognition performance 
generally audio analysis tools implement signal responsive algorithms 
compression algorithm example knowing signal contains speech method takes advantage speech characteristics achieve higher compression rate 
responding parameters analyzed audio interactive algorithms performing animation sound synthesis virtual reality simulations computer games 
libraries sound ects instrument samples available 
due large size searching particular sound daunting task 
audio similarity retrieval techniques fast browsing greatly accelerate process 
related number techniques audio analysis proposed 
section systems relevant briefly described 
complete overview foote 
robust multi feature music speech discriminator described scheirer slaney 
similar discriminator initially separate speech music detect phonemes notes accordingly 
multi feature classifier spectral moments recognition steady state instrument tones described 
retrieval similarity system isolated sounds developed muscle fish llc wold 
users search retrieve sounds perceptual acoustical features specify classes features ask engine retrieve similar dissimilar sounds 
speech arons example pushing audio interaction tape recorder metaphor 
user audition spoken documents times real time time compression techniques segmentation pitch 
hidden markov models wilcox wilcox segmentation analysis recorded meetings speaker 
framework projects similar features classifications algorithms different tasks 
design system ort common elements architectural building blocks 
facilitates integration di erent techniques common framework interface 
addition helps rapid prototyping common elements written developing evaluating new technique application requires writing new task specific code 
typically sound analysis systems follow bottom processing architecture sensory information flows low level signals higher level cognitive representations 
increased evidence human auditory system uses top bottom information flow slaney 
top prediction driven approach computational auditory scene analysis ellis 
extension approach hierarchical taxonomy sound sources proposed martin 
design framework tried flexible architecture support models top flow hierarchical classification traditional bottom processing 
architecture framework named greek 
initials stand musical research system analysis synthesis 
implemented client server architecture 
server written contains signal processing pattern recognition modules optimized performance 
client written java contains user interface code communicates computation engine sockets 
breakdown advantage decoupling interface computation code allows di erent interfaces built underlying computational functionality 
example server accessed di erent graphical user interfaces scripting tools web crawlers server client run solaris sgi linux windows nt platforms 
special attention abstracting audio analysis process object oriented programming techniques 
classes provide common api building blocks system 
inheritance factor common operations 
main classes system roughly divided categories process objects datastructure objects 
process objects transformations low level signal processing units system 
take input frame sound samples output transformation frame 
examples power spectral density cepstrum windowing digital filtering 
features process frame sound samples output vector transformations reduced significantly dimensionality 
typically sound transformations calculations 
output vector physical features combined 
example spectral centroid involve calculation power spectral density possible bundle feature increased performance separately rapid prototyping 
memories circular bu ers hold previously calculated features limited time 
compute means variances features large windows recomputing features 
di erent sizes depending application 
iterators break sound stream frames 
frame features memories calculate feature vector 
result time series feature vectors called feature map 
typically di erent iterator classification scheme 
example silence non silence iterator uses energy feature memories 
complicated iterator music speech iterator uses features memories di erent size feature calculation 
classifiers take input feature vector return estimated class 
trained labeled feature maps 
take input feature maps output signal peaks corresponding segmentation boundaries 
data structure objects vectors basic data components system 
float arrays tagged sizes 
operator overloading vector operations avoid writing nested loops signal processing code 
operator functions inlined optimized 
resulting code easy read understand compromising performance 
sound data objects contain samples audio vectors additional header information sample rate channels feature maps time series feature vectors 
feature maps class labeled evaluation training 
time regions time intervals tagged annotation information 
time lines lists time regions 
time trees arbitrary trees time regions 
represent hierarchical decomposition audio successively smaller segments see fig 

objects contain methods read write files transport socket interface 
example calculated feature map stored evaluate di erent classifiers having redo feature calculation classifier 
objects form natural bottom hierarchy top flow information expressed framework 
simple example silence feature iterator music speech avoid calculating features silent frames 
similarly hierarchical classification expressed multiple iterators di erent features 
features system implemented number features proposed literature 
features form pool di erent algorithms pick specific features depending specific task 
classification algorithms example invariant loudness energy feature 
hand segmentation algorithm probably include energy features indicating change texture 
currently supported features systems describe spectral centroid balancing point spectrum 
calculated ia amplitude frequency bin spectrum scheirer slaney wold 
spectral moments statistical measures characterize shape spectrum 
spectral flux norm di erence magnitude short time fourier transform stft spectrum evaluated successive sound frames 
stft normalized energy scheirer slaney 
pitch pitch estimate frame calculated various di erent techniques rabiner 
harmonicity measure strong pitch perception sound wold 
voiced unvoiced detection 
mel frequency cepstral coe cients mfcc commonly speech recognition wilcox scheirer slaney 
perceptually motivated compact representation spectrum hunt 
linear prediction lpc reflection coe cients speech research estimate speech vocal tract filter makhoul 
features supported include zero crossings rms spectral 
features means variances higher order statistics larger time windows calculated memories 
new features easily added system writing code computing feature value frame sound samples 
classifiers currently statistical pattern recognition classifiers implemented part system 
complete description classifiers statistical pattern recognition general refer duda hart 
gaussian map classifier assumes class represented multi dimensional normal distribution feature space 
labeled data set train classifier calculating parameters particular class 
classifier typical parametric statistical classifiers assume particular form class probability density functions 
parametric classifiers nearest neighbor classifier directly uses training set classification assuming mathematical form underlying class probability density functions 
sample classified class nearest neighbor training data set 
nn nearest neighbors calculated voting determine class 
due flexibility architecture new advanced classifiers easily added 
gaussian mixture neural network classifiers currently development 
ability di erent classifiers allows trade classification speed accuracy depending application 
framework evaluation data evaluating system consists hours audio data 
minutes speech minutes music minutes mixed audio 
radio live recordings speech compact disks movies representing variety speakers music styles data sources 
test architecture music speech discriminator similar described scheirer slaney implemented 
implementation test refine design framework 
discriminator runs real time sgi workstation 
fig 
shows layout information flow implementation 
performance system music speech discrimination comparable recognition accuracy current systems scheirer slaney nn classifier 
direct comparison impossible due di erences data sets classifiers 
cross validation testing framework scheirer slaney ensure evaluation dependent particular test training sets 
addition instrument identification system steady state tones similar implemented 
similarity retrieval described wold supported 
segmentation segmentation idea transitions audio texture result sudden changes values features 
idea consistent research psychoacoustics bregman multiple perceptual cues combined indicate onset new sound event 
algorithm works stages 
time series feature vectors calculated iterating sound file 
feature vector thought short description corresponding time frame 

distance metric calculated successive frames sound 
implementation distance 
defined feature covariance matrix calculated training set 
distance metrics possibly relative feature weighting 

derivative dt distance signal taken 
thresholding finding peaks result 
derivative distance low slowly changing textures high sudden transitions 
peaks roughly correspond texture changes 

peaks picked simple heuristics create segmentation signal time regions 
heuristic example minimum duration successive peaks set avoid small regions 
result stored time line list time intervals browsing annotating see fig 

combining segmentation classification classification methods proposed literature report improved performance classification results integrated larger time windows 
fixed size integration windows blurs transition edges classes 
usually test data consists files contain transitions simplify evaluation problem show 
real world data transitions exist important preserve 
described segmentation method provides natural way breaking data regions texture 
regions integrate classification results 
way sharp transitions preserved classification performance improved integration 
initial experiments number di erent sound files confirm fact 
detailed quantitative evaluation method fixed window integration way 
segmentation results method tested various sound files data set 
representative examples include detecting guitar solo entrance crash change speaker transitions music speech musical structure cyclic abab type pop songs 
segmentation results di cult evaluate quantitatively depend choice features parameter values peak threshold distance metric 
typically resulting regions perceptually meaningful 
fine tuning parameters done user programmer depending desired result 
example lowering peak threshold results smaller regions 
automatic parameter adjustment investigated 
user interface interface looks typical tape recorder style waveform editor 
addition typical play fast forward rewind buttons allows skipping user defined fixed duration blocks time lines containing regions variable duration 
time lines created hand automatically segmentation method described 
skipping annotating regions faster manual annotation way finding song cd faster finding tape 
user select region retrieve similar sounds 
possibility classify region available classification schemas music speech discriminator 
time region annotated multiple keywords 
addition user combine time regions form time tree multi resolution browsing annotation 
tree captures hierarchical nature music pieces musical analysis 
applications initial description appeared tzanetakis cook 
detailed description segmentation algorithm user experiments performed evaluation tzanetakis cook 
number di erent applications developed system 
undergraduate senior theses class projects princeton 
examples instrument family classification system content music library system 
addition investigated mpeg audio compressed data basis feature calculation 
user interface conduct user experiments humans annotate segment audio tzanetakis cook 
interface side plan support multiple time lines fast keyword search annotations 
interesting application segmentation scheme audio thumbnails 
region characteristic segment selected 
segments create shorter summary version original sound file 
computational side investigating perceptually accurate front system 
number computational models ear physiology proposed literature slaney lyon slaney lyon basis feature calculation 
attempts build music analysis systems past tried extract content transcribing music symbolic notation music theory characterize 
approach challenged martin scheirer 
current systems try analyze structure content directly features calculated audio signal 
systems easily implemented evaluated framework 
simple example music analysis structure cyclic pop songs revealed segmentation scheme 
believe combination segmentation scheme beat tracking methods scheirer er significant information music style identification music analysis 
plan write web crawler automatically create segmentation time lines annotations files web 
summary designed implemented flexible framework building integrating audio analysis tools 
number existing techniques implemented tested evaluate framework 
new method audio segmentation texture 
method combined analysis tools semi automatic user interface ers significant improvements audio searching annotation browsing 
addition improve classification performance results segmentation adaptively change classification integration window size 
arons arons 

system interactively skimming recorded speech 
acm transactions computer human interaction 
wilcox wilcox 

hidden markov model framework video segmentation audio image features 
proc 
int conf acoustics speech signal processing vol pages 
bregman bregman 

auditory scene analysis 
mit press 
duda hart duda hart 

pattern classification scene analysis 
john wiley sons 
ellis ellis 

prediction driven computational auditory scene analysis 
phd thesis mit dept electrical engineering computer science 
foote foote 

overview audio information retrieval 
acm multimedia systems 


machine recognition timbre steady state tone acoustic instruments 
proc 
icmc pages 
hauptmann witbrock hauptmann witbrock 

informedia news demand multimedia information acquisition retrieval 
intelligent multimedia information retrieval chapter pages 
mit press cambridge mass www cs cmu edu afs cs user alex www 
hunt hunt 

experiments syllable recognition continuous speech 
proc 
icassp pages 
wilcox wilcox 

acoustic segmentation audio browsers 
proc 
interface conference sydney australia 
makhoul makhoul 

linear prediction tutorial overview 
proc ieee 
martin martin 

automatic sound source recognition identifying musical instruments 
nato computational hearing advanced study institute 
il 
martin martin scheirer 

musical content analysis models audition 
proc acm multimedia workshop content processing music bristol uk 
rabiner rabiner cheng rosenberg 

comparative performance study pitch detection algorithms 
ieee trans 
acoust speech signal process assp 
rodet 

features extraction temporal segmentation acoustic signals 
proc 
icmc pages 
scheirer scheirer 

bregman music perception auditory scene analysis 
proc international conference music perception cognition montreal 
scheirer scheirer 

tempo beat analysis acoustic musical signals 
acoust soc am 
scheirer slaney scheirer slaney 

construction evaluation robust speech music discriminator 
ieee transactions acoustics speech signal processing icassp pages 
slaney slaney 

critique pure audition 
computational auditory scene analysis 
slaney lyon slaney lyon 

perceptual pitch detector 
proceedings international conference acoustics speech signal processing pages albuquerque nm 
ieee 
slaney lyon slaney lyon 

importance time temporal representation sound 
cooke crawford editors visual representations speech signals pages 
john wiley sons tzanetakis cook tzanetakis cook 

framework audio analysis classification temporal segmentation 
proc th euromicro conference 
workshop music technology audio processing milan italy 
ieee computer society 
tzanetakis cook tzanetakis cook 

audio segmentation browsing annotation 
proc ieee workshop applications signal processing audio acoustics new paltz ny 
tzanetakis cook tzanetakis cook 

experiments computer assisted annotation audio 
appear proc icad atlanta 
van rijsbergen van rijsbergen 

information retrieval 
butterworths london nd edition 
wold wold blum 

content classification search retrieval audio 
ieee multimedia 
rms hamming psd centroid memory memory ii iterator silence detector nn classifier transformations features memories iterators layout music speech detector music speech detector toms guitar group time tree el piano intro entrance segmentation peaks corresponding time tree 
