workflow management product driven case handling van der aalst department technology management eindhoven university technology box nl mb eindhoven netherlands aalst tm tue nl decade workflow technology building blocks realizing enterprise information systems 
unfortunately application contemporary workflow management systems limited defined environments 
practice workflow technology fails limited flexibility 
advocate paradigm shift overcome problem workflows driven pre specified control flows products generate 
presents software package flower fully supports paradigm shift 
categories subject descriptors information systems applications office automation workflow management 
general terms management design human factors languages theory verification 
keywords workflow management case handling workflow management systems product driven design flower 

decades attempts build information systems support business processes 
called office automation mid nowadays called workflow management 
technological point view progress 
processes moved second class citizens class citizens enterprise information system 
traditional data oriented approaches replaced process oriented paradigms bpr cpi 
unfortunately despite stories suppliers application workflow management wfm permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
group sept oct boulder colorado usa 
copyright acm 
pallas athena box nl netherlands paul pallas athena com systems limited 
wfm applied clear majority supported processes simple 
complex processes wfm systems applicable require considerable modeling implementation efforts 
non trivial processes degree customization typically high 
process models driving wfm system kept simple removing flexibility complex non transparent address exceptions adequately 
process model kept simple idealized version preferred process supported 
result real run time process variable process specified design time 
way handle changes go system back 
users forced bypass wfm system quite frequently system liability asset 
process model attempts capture possible exceptions resulting model complex manage maintain 
authors pointed importance workflow flexibility workshops special issues journals devoted topic 
results reported really applicable practical setting impact contemporary wfm systems limited 
argue core problem fact routing mechanism driving workflow moved pre specified causal relations 
causes problems needs straight activities 
activities considered atomic wfm system atomic user 
clustering atomic activities workflow activities required distribute 
actual done finegrained level 
routing distribution authorization 
result crude mechanisms align workflow organization 
focusing control flow context data related entire case just activity moved background 
typically context tunneling results errors inefficiencies 
routing focuses done done 
push oriented perspective results rigid inflexible workflows 
overcome problems propose paradigm shift case routing drive workflow 
case object handled 
think case product manufactured executing workflow process 
characteristics product drive workflow 
typically product information decision various data 
focusing product characteristics replace push oriented routing pull oriented mechanisms centered data objects relevant case 
propose product driven case handling mechanism support distribute manage processes 
focus processes traditional wfm systems traditional flow oriented paradigm fall short 
flower developed pallas athena practical experiences contemporary wfm systems fully supports paradigm shift 
interested reader invited play line demo shows functionality flower www pallas athena com 

relation manufacturing workflow logistical point view similarities administrative processes production processes cf 

kinds processes focus routing workflow allocation resources 
production system products physical objects principal resources machines robots humans conveyor belts trucks 
administrative process products informational documents resources human 
similarities logistical aspects administrative process differs typical manufacturing process making copy easy cheap 
contrast making copy product car relatively easy copy piece information especially electronic form 
real limitations respect process inventory 
informational products require space easy access especially stored database 
requirements respect order activities executed 
human resources flexible technical constraints 
quality difficult measure 
quality decision accept insurance claim 
quality products may vary 
manufacturer cars minimal quality level product satisfy 
administrative process attractive skip certain checks reduce workload 
transportation electronic data timeless 
network information travels speed light 
production stock seldom possible 
product unique difficult produce advance 
possible process insurance claim arrives 
loops rework occurs frequently administrative processes seldom impossible production processes 
addition required behavior different 
administrative process reuse information easy production process reuse requires disassembly reassembly 
customer influence handling administrative process production process influence restricted process starts 
types processes lot common 
consider example performance indicators throughput time waiting time service level utilization 
performance indicators play prominent part domains 
manufacturing bill material bom drive production process 
consider example material requirements planning referred mpr determines production schedule ordered quantities current stock composition product specified bom 
contemporary enterprise resource planning erp systems sap take resource availability account refined algorithms 
production driven structure product product design driven desirable characteristics manufacturing process 
administrative processes generating products mortgage loans driving permits customs declarations salary payments relation product process seldom explicit 
clearly interaction product process back mind 
standardized way describe product workflow process usually designed proper consideration product 
consider example processing insurance claims 
product basically decision claim accepted followed payment claim rejected 
kind information elements may play role making decision 
think information elements raw materials subassemblies 
workflow process manufacture decision criteria product quality average flow time service level handling costs account 
driven management principles business process reengineering bpr focus shifted data organization processes 
problem focus way processes designed 
workflow designs typically small groups consultants managers specialists 
result processes incomplete subjective high level devil details 
learn 
lesson differences administrative processes production processes 
simply transfer concepts manufacturing workflow 
push oriented nature contemporary wfm systems applicable knowledge intensive processes 
lesson current focus business processes result blind spot product manufactured 
status product terms information objects visible starting point workflow design 
lessons propose paradigm shift tool support product driven case handling 

product driven case handling section introduce concepts provide meta model product driven case handling 
concepts central concept case activities routing 
case product manufactured time workers aware context 
examples cases evaluation job application verdict traffic violation outcome tax assessment ruling insurance claim 
handle case activities need executed 
activities logical units 
wfm systems impose socalled acid properties activities 
means activity considered atomic carried completely 
rigid notion 
activities simply chunks recognized workers filling electronic form 
rule thumb activities separated points transfer worker possible 
please note activities separated points transfer non atomic activity book business trip may include tasks book flight book hotel clearly activities related cases follow typical patterns 
process recipe handling cases type 
wfm systems specification process fixes routing cases activities workers hardly insight 
result exceptions difficult handle require deviations standard recipe 
exceptions rule precedence relations activities minimized 
workflow exclusively driven precedence relations activities activities considered atomic paradigm needed support handling cases 
workers freedom need aware case 
case considered product structure current state 
processes state structure case collection data objects 
data object piece information value 
contrast existing wfm systems logistical state case determined control flow status presence data objects 
truly paradigm shift driven data flow exclusively control flow 
provides balance data oriented approaches ties process oriented approaches ties 
important workers insight case executing activities 
relevant data worker 
workers able look data objects associated case working assuming proper authorization 
forms different views data objects associated case 
activities linked form data objects relevant 
forms way presenting data objects 
link data objects activities processes specified directly 
data object linked process 
called free data objects changed case handled 
data object explicitly linked activity mandatory restricted 
data object mandatory required complete activity 
data object restricted required complete activity entered preceding subsequent activities 
means information processed activities information restricted hand 
actors workers executing activities grouped roles 
roles specific processes multiple roles named manager long linked different processes 
actor multiple roles roles may multiple actors 
roles linked role graphs 
role graph specifies relations roles 
way specify anybody role manager role employee 
process activity roles need specified execute role redo role skip role 
execute role role necessary carry activity start process 
redo role necessary undo activities case returns state executing activity 
note possible undo activity activities undone 
skip role necessary pass activities 
order skip consecutive activities worker needs skip role activities 
types roles associated activities processes provide powerful mechanism modeling wide range exceptions 
redo ensures dynamic dependent role employee status case flexible form loop 
skip takes care range exceptions modeled order pass activities 
course ways avoiding undesirable effects define role process higher roles user perform 
define role lower 
activity redo role undone possible go back earlier activity 
effective way model points return 
execute role means activity carried role process person equal role 
uml meta model structure concepts introduced far uml object model 
object model shown describes concepts meta level 
classes case process activity data object data value form role actor correspond entities discussed 
association instance links cases processes 
case linked process process linked cases 
association consists shows process may contain activities activity part single process 
association roles shows holds roles 
correspondence actors roles indicated association roles 
association specifies role graph 
forms linked activities data objects 
indicated associations form data 
note may forms connected activity 
forms linked directly process expressed association form 
refers essence case handling values data object may viewed updated assuming proper authorization executing activities 
form corresponds process 
shown easily added additional association form process 
input form form output precedence data form value data value mandatory data object restricted instance values data object class precedence contains precedence relations 
wfm system precedence relations calculate activities line executed 
possible relations model sequential behavior 
precedence relation multiple outputs model split 
precedence relation multiple inputs model join join 
precedence relations specify routing constructs available traditional wfm systems 
associations mandatory restricted redo skip execute show additional mechanisms handle cases 
associations redo skip execute link roles activities 
traditional wfm systems support execute role 
redo skip roles allow flexibility 
note meaningful definition roles possible acyclic workflow graphs cyclic precedence relations allowed 
skip redo actions require notion 
cyclic workflow graphs ill defined 
note iteration emulated execute redo 
consistent statement workflow activity consists process meta model 
redo skip roles execute role case actor roles loops exceptions raised authors 
skip redo roles lead dynamic behavior just specific loops modeled range loops depending role user working case 
associations mandatory restricted link data objects activities 
association data denotes link data objects processes 
data objects free linked specific activity linked specific activities associations mandatory restricted 
mandatory data objects need complete corresponding activity 
restricted data objects entered corresponding activity enabled 
associations mandatory restricted suggest tight coupling data objects activities data objects really linked processes cases roles actors 
free data objects changed entered executing activity executing activity 
mandatory data objects entered execution activities linked association mandatory 
activity completed mandatory data objects 
important note mandatory data object may appear forms linked corresponding activities 
means mandatory data objects entered advance 
value mandatory data object entered changed employee role equal higher execute role activities 
example mandatory data object policy number client 
policy number may entered value really required processing 
data object restricted activities value data object entered changed activities fact due carried moment 
example approved data object carried activity approve insurance claim line 
dynamics gives static view case handling process 
state case completely determined objects class data value 
object class linked concrete case data object 
indicates value data object corresponding value 
note traditional wfm systems state case control flow pointer petri nets configuration tokens 
case handling data objects unambiguously specify state enabled activities 
describe corresponding mechanism give potential states activity instance activity may may executed case initial enabled completed undone skipped 
activity instance starts state initial 
instance enabled preceding activities completed skipped 
instance skipped activity instance enabled skipped explicitly user proper skip role choice process split resulting scenario enabling activity 
instance undone activity instance executed rolled back redo action 
activity instance completed previous activities completed skipped mandatory restricted data objects activity value called completion condition activity true 
completion condition normally set true means sufficient give mandatory data objects value 
note fact activity completed depends values data objects 
illustrates control flow 

flower section give brief description flower pallas athena case handling product 
flower flexibly structured processes functionalities necessary traditional production workflow 
flower compensates shortcomings traditional wfm systems offers organizations new mechanisms respond effectively change 
flexibility guaranteed data driven workflows redo skip capabilities activity independent forms 
flower goes workflow fully supports concepts appearing meta model shown 
flower architecture shows architecture flower 
flower consists number components flower studio flower case guide flower cfm flower integration facility flower management information case history logging 
flower cfm adjust organisation adjust organisation integration functionality flower cfm flower functionality flower studio adjust design flower case guide queues queries adjust execution adjust adapt adapt definition definition analysis planning analysis planning flower flower management management info info case case history history logging logging adapt adapt operation operation architecture flower 
flower studio graphical design environment 
define processes activities precedences data objects forms 
flower case guide client application handle individual cases 
flower queue corresponds worklist basket traditional wfm systems 
flower queue provides refined mechanism look cases satisfying specified search criteria 
flower cfm configuration management define users actors profiles authorization profiles 
profiles map users roles 
flower cfm available operational level allow run time flexibility 
flower management information case history logging store retrieve management information various levels detail 
flower integration facility provides functionality interface applications 
services supported client side com objects synchronous command line interface integration dll nt windows shared libraries unix parameterized invocation client applications ms excel ms word available server side api sql integration access external databases separately available module dcom wrapper 
basic flower functionality available api application program interface 
allows example develop client flower workflow better case handling engine 
remainder focus user interface design interface flower 
component flower case guide illustrates difference wfm systems case handling tools user perspective 
second component flower studio discuss advanced features 
flower case guide traditional supported traditional wfm systems push items activities enabled specific case workers presenting proper context reducing operational flexibility 
flower case guide client application flower different 
case shown context shows screenshots case guide 
screenshots section taken process dealing motor insurance claims 
left screen corresponds initial screen initiating new case 
case guide window consists zones 
top zone provides context navigate process 
zone provides contents sub process status line activities sub processes decisions 
left status line called time line wave front process objects need handled status line due processed right line completed 
objective get objects right status line 
activity colored white employee carry 
bottom zone contains forms 
user clicks activity claim start opens form 
form screenshots case guide flower 
tunneling 
second workers forced execute activities fixed predefined order 
initialize insurance claim 
executing activity claim start corresponding icon moved right side status line 
register claim specified step process moved status line 
icon corresponding register claim indicates activity sub process 
flower allows sub processes 
functionality discussed detail 
witness statement sub process 
shows activities corresponding choices different icons 
zone bottom window indicates forms directly linked process level 
note forms opened point time status line suggests execution activities status line 
user proper authorization open forms time implicitly progress state case addition information 
shows case guide starting subprocess register claim successfully completing activity sub process 
top zone gives context information window provides information case process motor claim locus control confined sub process register claim 
zone middle indicates activity register claim completed activities status line policy holder data opposite party data 
activities enabled 
note inside sub process different forms offered worker 
flower form containing free mandatory restricted data objects 
shows flower form 
form corresponds activity collect case data activity sub process register claim 
form provides view subset data objects associated case 
flower forms options standard current form packages 
form linked zero activities sub processes 
hand form connected activity 
statuses data objects flower form shown user 
flower indicates example data objects mandatory order complete activity status line form connected data objects value need re confirmed adapted previous activity carried 
form connected activity user carry various activities form single session 
mandatory data objects entered flower automatically completes activity immediately shows mandatory fields belonging activity connected form 
user need return tray start activity 
words experienced employee process case largely forms 
flower ensures employee enter information fields permission basis role model status case 
allows model employee low role fill part form employee high role fill entire form 
flower studio process design environment flower called studio 
graphic design environment process designed full 
design consists broadly elements 
process flow determine sequence processing 
available object types described 
role graph roles interrelationships recorded 
role represents authorization level process 
roles role graph defined process 
data important handling process 
forms data shown entered 
consider process flow way precedence relations handled flower 
types process objects nodes available activity sub types activity connected flower form standard letter application 
standard letter feature automatically create documents data text integration allowing data case 
sub plan sub process consisting types static dynamic sequential 
decision types user decision system decision 
user decision taken user processing 
system decision taken flower processing data known time 
process objects mentioned process flow 
process flow fact flow diagram graph 
process flow describes order process objects handled 
sub process object graph 
way tree structure formed main process sub processes 
uml meta model incorporate sub processes 
flower supports sub processes relevant case handling discuss types subprocesses detail static sub process 
static sub process represents part process grouped purposes structuring 
example register claim data case motor claim 
sub process contains number activities relate registering claim 
dynamic sub process 
dynamic sub process represents part process needs repeated number times processing 
example process witness function case motor claim 
subprocess needs repeated witness 
goes saying time employee witness deal 
note dynamic sub process iteration 
case iteration part process carried previous result overwritten 
dynamic sub process number separate sub processes created 
example mentioned exactly sub process witness 
sequential sub process 
sequential sub process similar dynamic sub process difference sequential sub processes sub process worked time 
words new instance possible previous completed 
example request information case motor claim 
information arrive time subprocess terminated new instance created information requested 
sequential sub process particularly suitable modeling reminders diary entries 
static sub process supported wfm systems 
indicated workflow systems problems dealing sub processes instantiated multiple times run time 
dynamic sub process sequential sub process constructs flower powerful mechanisms deal multiple instances inside single case 
note sub processes considered 
flower uses role indicate permission authorization level 
role connected process 
allows define role senior handler example settle motor claim process role senior handler process credit application process 
roles different role exists context process 
employee role senior handler example settle motor claim process credit application process 
possible connect employee function collection roles accompanying processes connected 
possibilities mean optimum flexibility 
roles screen process 
opt example model employee medical adviser role view part process activities data relates medical matters 
organizations modeled collections roles different processes 
possible define role higher role placing roles called role graph 
higher role lower role words succession screening functionality 
case higher roles allowed see carry screened process parts 
relationships different roles specified graphically called role graph 
flower uses relationships role graph determine user roles 
flower uses role model described meta model process designer define roles process object node execute role redo role skip role 
execute role role necessary carry activity start sub process 
role consistent wfmc calls role 
wfmc identify types redo skip 
essential creating operational flexibility 
redo role activity role necessary return case activity 
suppose case settle motor claim employee wants redo activity carried earlier register claim data 
means interim activities need carried 
employee may role high redo roles interim activities register claim data activity 
execute role register claim data order handle activity 
skip role necessary pass activity 
order skip consecutive activities example employee role equal skip role activities 
administrative processes progress determined data 
generally accepted fact 
data purely process control data example decisions 
way typing case straightforward complex determines subsequent activities 
data purely content related telephone number client example 
data includes aspects relevant content control 
example level claim amount determines control defined primary legacy system 
flower extensive possibilities defining typing data including structures arrays 
possible define data including content data flower 
necessary course 
integration functionality flower type data stored primary systems 
flower completely data driven uses data determine state case 
data object process connected zero activities 
nature connection determines importance data object activity 
flower supports types free mandatory restricted mentioned earlier 
activity completed previous activities completed skipped mandatory restricted data objects activity value completion condition activity evaluates true 
employee wants give restricted data object value accompanying activity due carried positioned status line employee move status line skipping activities redoing activity 
possible appropriate role described flower role model 
moving status line influences activities carried front status line 
carried 
flower necessary give involved data objects value 
flower remembers value entered earlier gives data objects special status awaiting confirmation 
user confirm value values data object activity 
fact flower studio allows definition powerful links activities roles data objects results extremely flexible model user depending role process large number exceptions 
hand restricted data objects role relatively simple force sequential order handling 
detailed discussion flower cfm flower integration facility flower management information case history logging scope 
tools possible fine tune operational organizational aspects case handling integrate variety applications ranging legacy systems web solutions obtain detailed management information 
important note flower clearly distinguishes authorization distribution aspects 
process model contain specific behavior run time 
possible workgroups different distribution mechanisms 
clearly characteristic distribution process 
interested reader referred line demo shows functionality flower www com 

related authors addressed issue workflow flexibility 
years workshops edited books special issues journals workflow flexibility 
agostini de michelis argue simple workflow models exceptions dealt hand called linear jumps 
authors give concrete adaptation rules 
authors state workflow change workflow 
authors propose declarative style specifying workflows 
consider example vortex paradigm 
just pointers elaborate literature workflow flexibility 
problems respect designing process models real life processes recognized 
herrmann seeks solution semi structured workflow models 
propose product driven approach adopted 
vendors wfm systems struggling flexibility issues 
systems inconcert tibco allow ad hoc routing workflow instances cases 
systems require fly modifications process models users 
london bridge blue systems aiming case handling 
compared flower focus customer relationship management crm supporting variety workflow processes 
staffware extended workflow management system case handler 
unfortunately case handler works context single step process 

currently workflow systems available applied flexible processes frequent exceptions individual employees able carry wide range different steps 
type functionality called operational flexibility 
standard workflow packages support exception needs explicitly modeled 
furthermore functionality available allowing user control steps process 
standard workflow packages fail provide type process support case handling 
case handling involves approaching case related folder related task context entire folder 
carrying process times full insight tasks activities carried carried moment 
address issues developed meta model support product driven case handling 
meta model identify differences conventional workflow management 
noted contemporary wfm systems support specific form case handling case handling context tunneling rigid routing redo skip data object restricted push oriented distribution items 
system support 
flower unique providing operational flexibility case handling facilities 
development fully operational version flower completed middle 
installed base limited 
diversity processes currently supported flower impressive 
examples case handling processes currently managed flower application dutch citizenship handling house tax complaints handling complex social benefits applications complaints handling insurance claims handling 

acknowledgments people involved development flower 
special go flower development team pallas athena 
anonymous referees comments 

van der aalst 
application petri nets workflow management 
journal circuits systems computers 
van der aalst 
automatic generation workflow processes product structures 
computers industry 
van der aalst desel oberweis editors 
business process management models techniques empirical studies volume lecture notes computer science 
springer verlag berlin 
van der aalst ter hofstede kiepuszewski barros 
advanced workflow patterns 
scheuermann editors th international conference cooperative information systems coopis volume lecture notes computer science pages 
springer verlag berlin 
van der aalst jablonski editors 
flexible workflow technology driving networked economy special issue international journal computer systems science engineering volume number 
agostini de michelis 
improving flexibility workflow management systems 
pages 
casati ceri pernici pozzi 
workflow evolution 
data knowledge engineering 
ellis keddara 
workflow change workflow 
pages 
hammer 
reengineering 
nicolas publishing london 
herrmann hoffmann loser 
semistructured models surprisingly useful user centered design 
coop sophia antipolis france may 
hull llirbat simon su dong kumar zhou 
declarative workflows support easy modification dynamic browsing 
proceedings international joint conference activities coordination collaboration wacc pages 
jablonski bussler 
workflow management modeling concepts architecture implementation international thomson computer press 
klein dellarocas bernstein editors 
proceedings cscw workshop adaptive workflow systems seattle nov 
klein dellarocas bernstein editors 
adaptive workflow systems special issue journal computer supported cooperative volume numbers 
lawrence editor 
workflow handbook workflow management coalition 
john wiley sons new york 

structuring bill materials mrp 
production inventory management pages dec 

logistical view business processes bpr wfm concepts dutch 
phd thesis eindhoven university technology eindhoven 

workflow reengineering 
adobe press mountain view ca 

optimal design processes information systems dutch 
december 
strong miller 
exceptions exception handling computerized information processes 
acm transactions information systems 
