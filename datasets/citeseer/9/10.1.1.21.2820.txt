convolution kernels discrete structures ucsc crl david haussler department computer science university california santa cruz santa cruz ca email haussler cse ucsc edu url www cse ucsc edu haussler july introduce new method constructing kernels sets elements discrete structures strings trees graphs 
method applied iteratively build kernel infinite set kernels involving generators set 
family kernels generated generalizes family radial basis kernels 
define kernels form joint gibbs probability distributions 
kernels built hidden markov random fields generalized regular expressions pair hmms anova decompositions 
uses method lead open problems involving theory infinitely divisible positive definite functions 
fundamentals theory theory reproducing kernel hilbert spaces reviewed applied establishing validity method 
problems statistics pattern recognition demand discrete structures likes strings trees graphs classified clustered similarity 
desirable method extract real valued features oe oe structure class discrete structures 
finitely features extracted feature extraction process represented mapping dimensional euclidean space infinitely features extracted mapping hilbert space square summable sequences case get infinite series representation fourier series representation function methods defining series representations discrete structures general type kernel function call convolution kernel 
kernel formulation series representations develop implicit 
giving explicit formula foe give formula inner product kernel oe oe computed structures course serves define distance structures standard manner gamma discuss methods defining distance kernel 
considerable showing standard classification clustering regression methods kernelized accomplished explicitly representing feature vector foe relying indirect computations kernel distance see bibliography svm gmd de :10.1.1.48.3599
kernels corresponding distance functions construct suitable methods 
particular correspondence kernels gaussian processes defined set 
pursue avenue kernels develop plugged directly gaussian process methods 
convolution kernels obtained kernels certain sum products viewed generalized convolution section 
possible construct kernels way follows simple closure properties class positive definite functions embodiments kernels sections 
convolution kernels generalize classes radial basis simple exponential kernels section class anova kernels section 
represent joint probability distributions pairs structures set section 
classical methods convolutions generating functions analyse discrete distributions extended convolution kernels section 
normalizing positive convolution kernel obtain probability distribution theta call gibbs kernel section 
kernels may promising applications areas structures modeled hidden markov random fields 
convolution kernels applied iteratively build kernel infinite set kernels involving generators set 
introduce class generalized regular expressions define kernels manner section 
give example developing kernel finite strings describes relationship strings derived common ancestor operations insertion deletion substitution letters section 
similar kernels related pair hmms defined 
provides new angle old field syntactic pattern recognition developed kung sun fu colleagues 
attempts control width parameter generalized radial basis kernels derived convolution kernels lead important notion infinitely divisible kernels review section 
open problems mentioned regard 
review theory reproducing kernel hilbert spaces section derive results mentioned earlier sections 
convolution kernels kernels set theta denotes real numbers theta denotes set product 
say kernel theta symmetric positive definite sense xn matrix defined ij positive definite ij ij 
equivalently symmetric matrix positive definite eigenvalues nonnegative see 
authors consider general case complex valued kernels 
relationship definitions case ones real case discussed section page 
virtually results extend naturally complex case 
readily verified represented sequence oe foe theta 
inner product oe oe hoe oe kernel xn hoe oe oe oe oe oe see equation section 
turns reasonable assumptions nearly hold practice kernel represented oe oe choice functions foe 
give proof section theorem 
particular true kernels theta countable set generally true separable metric space continuous function theta see section 
sense choosing kernel theta choosing series oe feature values represent class kernels set theta wonderful closure properties great advantage 
particular readily verified class closed addition multiplication positive constant pointwise limits see 
form closed convex cone 
known class closed product kernels kernel 
equivalent fact positive definite matrices closed schur product element wise product delta see theorem page 
kernels closed product easy see closed tensor product kernel theta kernel theta omega kernel theta theta theta corollary page 
similarly note oe oe closed sum closed direct sum phi kernel theta theta theta 
going direction kernel theta theta theta diagonal projection delta kernel theta clear omega delta phi delta lastly easy see kernel theta may extended kernel theta defining follows directly definition positive definite function 
call zero extension convolution kernels suppose composite structure xd parts set positive integer 
assume xd nonempty separable metric spaces 
includes special case xd countable sets see section 
countable case primary focus 
represent relation parts relation set theta delta delta delta thetax thetax xd true iff xd parts brevity xd denote xd 
gamma say finite gamma finite examples 
tuple theta delta delta delta theta xd component part iff 
set finite strings finite alphabet define iff ffi ffi denotes concatenation strings 
continuing previous example alphabet letter finite string represented nonnegative integer length iff 
xd set degree ordered rooted trees define iff xd subtrees root tree note examples show possible object may decomposable parts multiple ways 
examples demonstrate relation part structure iteratively define complex structures delta delta delta xd infinite set suppose decompositions xd parts parts suppose kernel measure similarity part part uncountable assume continuous 
define similarity generalized convolution gamma gamma defines symmetric function thetas fx gamma empty define convolution kd denoted delta delta delta kd zero extension theta refer finite convolution finite 
theorem kd kernels theta xd theta xd respectively finite relation theta delta delta delta theta xd theta kd kernel theta prove theorem need lemma kernel set theta finite nonempty define kernel product set finite nonempty subsets 
proof lemma section 
proof theorem denote theta delta delta delta theta xd kd kernels assumption clear closure kernels tensor product kernel theta finite lemma gamma gamma kernel product set nonempty gamma 
delta delta delta kd zero extension gamma gamma follows kernel theta case uncountable follows assume separable metric space metric defined continuous function 
example radial basis simple exponential kernels example section way decompose convolution kernel reduces delta delta delta kd oe gamma gammaf oe known kernel see section page theorem page 
delta delta delta kd gamma gammaf oe kernels form called radial basis kernels 
radial basis kernels function extract primitive real valued feature component features define kernel fact maps implicitly infinite dimensional feature space 
kernels proven quite useful practice 
continuing example section primitive features ff dg define simple exponential kernel delta delta delta kd oe oe kernel real valued function see corollary page 
closely related radial basis kernel defined 
radial basis kernel simple exponential kernel easily verified introduce general version radial basis kernels section 
example anova kernels quite different type convolution kernel practice called analysis variance anova kernel 
set kernel theta anova kernel order defined delta delta delta dn theta ng 
readily verified kernel 
define iff delta delta delta cardinality gamma finite 
clearly convolution kd clear omega delta delta delta omega extreme phi delta delta delta phi playing definition parts relation anova kernels get spectrum kernels direct sum tensor product 
play definition get spectrum normal sums products 
define iff delta delta delta call resulting kernel diagonal projection anova kernel 
kernel easily verified omega delta delta delta omega delta delta delta delta typically superscript dropped 
phi delta delta delta phi delta delta delta delta convolutions generalize products sums kernels 
interesting variations radial basis simple exponential kernels discussed previous sections possible diagonal projection anova kernels place simple products 
kernels exponential number terms recursive formula allows computed efficiently critical practical utility 
kernels say kernel positive positive kernel probability distribution theta called kernel 
closure properties class positive kernels closed addition multiplication multiplication positive scalar pointwise limits convolution finite relation closure properties clear know closure property holds class kernels verify hold class positive kernels suffices notice preserve positivity 
say relation function 
examples section relation function 
theorem class kernels closed convex combination convolution finite function proof closure kernels convex combination clear finite convex combinations kernels closed addition multiplication positive constant convex combination preserves property kernel positive sums 
verify closure property infinite convex combinations form kernel additionally closure kernels pointwise limits see second closure property holds assume kernel probability distribution theta product distribution theta delta delta delta theta xd theta theta delta delta delta theta xd defined 
convolution zero extension image distribution function probability distribution theta simple convolutions generating functions 
say 
simple convolution gamma gamma empty 
denote convolution delta delta delta demonstrated kernels easily verified probability distribution function delta delta delta probability distribution class probability distributions clearly closed convex combinations closure properties kernels theorem simple convolutions 
simple convolutions probability distributions illustrated classical convolutions discrete random variables 
example section iff random variable values distribution random variable distribution generating function defined formal variable similarly generating function may defined generating function clearly 
convolution distributions relation corresponds multiplication generating functions 
differentiating generating function obtains moments distribution see 
kinds convolutions represent combinatorial counting problems delta delta delta cardinality gamma 
example iff gamma oe oe euler function counts number non negative integers relatively prime independent diagonal kernels say kernel independent function 

clear independent kernel product independent identical distributions convolutions independent kernels decompose independent kernel consisting product simple convolutions delta delta delta kd delta delta delta delta delta delta convolutions independent kernels function independent kernels 
say kernel diagonal necessarily positive function ffi ffi function defined ffi ffi 
identity kernel diagonal kernel ffi 
function convolution diagonal kernels diagonal kernel simple convolutions ffi delta delta delta kd delta delta delta ffi convolutions diagonal kernels function diagonal kernels 
positive simple convolutions gibbs distributions hidden markov random fields say positive class positive kernels class positive functions closed addition multiplication multi plication positive scalar pointwise limits simple convolution relation suppose finite nonzero 
may normalize probability distribution simple convolution call gibbs distribution convolution refer gibbs distribution 
call partition function 
central example finite markov random field generally finite markov random field latent variables call hidden markov random field hmrf 
finite hmrf defined joint distribution finite set visible random variables finite set unobserved hidden latent random variables um assume variables finite range 
hmrf defined terms cliques graph vertices representing variables auxiliary functions associated cliques 
give brief definition details 
distinct subset fv fu um cliques 
assume variables contained clique 
denote set possible joint assignments variables call variable assignment set um denote assignments random vectors respectively 
denote joint assignment restricted variables fu um similarly denotes assignment variables clique induced global joint assignments 
positive function 
call compatibility function clique defines hmrf gibbs distribution visible variables set assignments define iff exist assignments call assignment checking relation hmrf 
variables finite range finite relation 
clear delta delta delta hd gibbs distribution defined convolution hd gibbs kernels positive kernel finite nonzero may normalize kernel convolution call gibbs kernel 
example radial basis simple exponential positive anova kernels generate gibbs kernels way 
interesting hidden markov random field 
assume hmrf cliques section 
set assignments observed variables xd variable assignment sets cliques assignment checking relation hd compatibility functions cliques delta delta delta hd equation probability distribution defined hmrf set 
equation follows theta kd independent positive kernel 
clearly gibbs kernel case gibbs kernel just product independent copies gibbs distribution 
alternatively define ffi obtaining diagonal kernel delta delta delta kd ffi equation 
case ffi hmrf appears diagonal gibbs kernel assignments observed variables completely correlated 
kd positive kernels clique variable assignments xd hmrf 
kernels replace compatibility functions hd defined convex combination interpolate extremes 
delta delta delta kd gibbs kernel models dependency assignments visible variables hmrf 
variables represent parts observed structure gibbs kernel provides way generative probability model inherent hmrf define notion similarity related structures 
idea developed separate 
see alternate way 
iterated convolution kernels generalized regular expressions countably infinite examples kernels strings natural numbers section useful able build complex kernels simpler kernels closure properties kernels 
conveniently done kernels restrict case section 
accordingly assume relation finite function may exploit closure convex combination closure convolution 
essence constructions exploit recursive nature relation iterating closure properties 
iteration simple convolution define finite iteration simple convolution 
finite function 
ffi unique 
say associative ffi ffi ffi ffi case ffi semigroup 
relation associative examples section 
assume associativity follows 

probability distribution define define gamma simple convolution defined equation 
technically left iteration easily verified associative right iteration gamma loss specificity notation 
clear probability distribution 
iteration simple convolution extensively application generating functions 
example independent random variables geometric distribution generating function distribution gamma qs generating function gamma qs follows negative binomial distribution gamma classical examples iterated convolution semigroup defined associative relation example section 
infinite iteration simple convolution probability distributions regular languages fl 
define fl infinite iteration fl gamma fl fl gamma call generalized kleene star operation reasons discussed clearly fl convex combination geometric distribution parameter fl 
fl probability distribution set finite strings finite alphabet ffi operation string concatenation example section 
ffl denote empty string 
subset called language 
operation concatenation extended languages defining ffi fx ffi iteration operation defined ffi gamma 
kleene star operation defined ffflg regular languages defined smallest set languages contain ffflg fag letters closed union concatenation kleene star 
operations convex combination simple convolution fl iterated convolution may define class probability distributions regular languages called regular probability distributions string call distribution ffi indicator distribution probability distributions corresponding operation union fl form binary convex combination flg regular operator gamma fl clearly probability distribution corresponding operation concatenation convolution clear corresponding kleene star fl iterated convolution fl class regular probability distributions smallest class probability distributions contains indicator functions empty string letters alphabet closed binary convex combination convolution fl iterated convolution fl 
notice ffflg forms minimal set generators semigroup ffi sense element constructed applying operation ffi finitely times generators 
definition regular probability distributions easily extended semigroup defining smallest class probability distributions contains indicator functions generators closed binary convex combination convolution fl iterated convolution fl 
denote set distributions iterated convolution kernels analogous operations defined kernels 
theta 
kernel finite associative function representing operation ffi 
denotes convolution times fl gamma fl fl gamma fl infinite iteration kernels semigroup ffi theta ffi 
building set regular distributions ffi define set regular kernels ffi theta ffi denoted smallest class kernels contains kernel closed binary convex combination convolution fl infinite convolution fl 
ffi semigroup strings finite alphabet operation concatenation call class regular string kernels 
fuller theory regular kernels representations machines grammars extension stochastic context free gram mar kernels preparation separate 
simple application theory 
application regular string kernels derive regular string kernel measure similarity strings underlying generative probability model pairs strings 
application discussed detail experimental results separate 
pattern recognition string may represent sequence elementary objects derived decomposition structured object 
elementary object denoted letter finite alphabet set objects identified semigroup finite strings alphabet pattern recognition applications assume object strings similar objects length 
occurs example strings consist amino acids representing proteins nucleic acids representing genes phonemes representing spoken words 
contexts objects may missing components similar objects 
align object strings corresponding components adjacent special symbol indicate component missing certain place strings 
example alphabet fa cg strings bc abbc aab represents alignment insertions deletions components substitution component type exchanged type place 
way define generative probability model captures essential properties string alignments model strings having derived common ancestor string example choice take show derivation aab bc abbc chosen going insertions substitutions deletions 
possible choose represent common ancestor aligned strings assume derivation done way 
order model derivation process start defining kernel models substitution process single letter 
assume ancestor letter bja denotes probability ancestor derives letter string assume probability string derivation letters independent ancestor letter assume probability ancestor letter 
zero extension finite strings kernel theta defined bja cja regular string kernel basis case inductive definition 
strings define class regular string kernels closed finite convex combination regular string kernel 
models substitution process single letters zero strings single letters 
model insertion process 
consecutive letters ancestor arbitrary inserted corresponding places assume inserted string independent inserted string regular probability distribution strings 
example easy see distribution length string geometric distribution letters independently chosen fixed distribution alphabet regular probability distribution 
may take model insertion process regular string kernel basis case inductive definition 
generate pair strings derived randomly common ancestor iterate processes insertion substitution 
parameter fl flk 
fl gamma fl clearly regular string kernel models generative process defined 
see clearly useful look special cases 
ffl fl independent kernel strings modeled independently generated underlying insertion process empty common ancestor 
similarity depends magnitude individual probabilities 
ffl ffl ffl ffl denotes empty string empty 
insertions whatsoever allowed 
case easily verified case 
follows easily different lengths length gamma fl fl take product 
case kernel decomposes geometric mixture disjoint product distributions pairs strings different lengths 
completely dissimilar orthogonal different lengths similar extent corresponding letters similar derived common ancestor letter 
special case obtained ff fi fi ff ff fi 
length gamma fl flff ff fi gammad dh hamming distance binary strings defined number components differ 
general interpolates extremes cases strings similar structure insertions deletions substitutions similar strings comparable length don share property 
shown regular string kernels modeled defined 
means efficient dynamic programming algorithm evaluate kernels important practical consideration 
pair hmms define regular string kernels 
example possible define pair hmm represents distribution pairs strings symmetric kernel 
regular string kernel defined closely related joint probability distribution defined pairwise local alignment pair hmm page 
distribution incorporates bells easily accomplished slightly complex regular string kernel exception feature definition pair hmm consecutive letters hypothetical ancestor string string inserted corresponding position 
kind distribution modeled kernel fails positive definite 
replaces part model independent distribution insertions ends pair hmm distribution resulting pair hmm regular string kernel 
pair hmms proven useful pattern recognition applications involving strings virtue generative models define 
developing regular string kernels take advantage kinds pattern recognition clustering methods implicit feature space representation obtained kernel 
generalized radial basis kernels radial distances section showed derive gibbs kernel arbitrary positive kernel normalizing 
different kind normalization positive kernel convert generalized radial basis kernel defined analogy equation section gamma log log gammalog assume easy see positive definite 
remove necessary 
clear kernel product kernel gamma gamma 
furthermore positive definite matrix symmetric nonnegative eigenvalues determinant nonnegative 
follows jk viewed generalized cauchy schwarz inequality semi inner product kernel see equation section 
positive kernel radial distance log log gamma log nonnegative infinite 
normalization kernel values range quite important practice 
example consider regular string kernel defined equation section 
square corresponding generalized radial basis kernel represents kind odds ratio comparing probability generated common ancestor independent occasions probability copies generated common ancestor occasion copies generated common ancestor independent occasion 
analogous interpretation kernel kernels equation values rapidly get exponentially small size increase moving advantage normalizing similarity measurement remove undesirable aspects length dependency helping keep values representable range 
get extremely small practice prefer deal generalized radial distance gamma log 
fact large literature closely related types distances strings going back early ulam colleagues developed 
earlier derive distances probability models insertions deletions substitutions idea introduced fairly 
theoretical discussions string distances concerned question certain distance function metric symmetric satisfies triangle inequality property 
pattern recognition applications sufficient useful distance 
distance useful need embed metric space finite dimensional euclidean space space infinite square summable sequences feature extraction mapping oe foe oe gamma oe called isometric embedding 
string distances general isometrically embedded finite dimensional euclidean space linial develop general methods distances fact general metric distance approximately embedded finite dimensional euclidean space sense euclidean distance oe oe close original distance 
apply results problem classifying protein sequences 
embedded mentioned take advantage classical pattern recognition clustering regression classification methods kernel formulation 
interesting open question 
question regular string kernel defined log log gamma log isometrically embedded generally arbitrary positive kernel thetax log log gamma log isometrically embedded allow isometrically embedded useful distance decomposed sets xm isometrically embedded case say isometrically embedded disjoint union spaces 
generally question 
question arbitrary positive kernel theta log log gamma log isometrically embedded disjoint union spaces 
interesting consider question extreme special cases regular string kernel discussed section 
particular assume strictly positive isometrically embedded zero dimensional space 
hand different lengths length gamma fl flff ff fi gammad gamma log log ff fi length 
hamming distance dh clearly squared euclidean distance gamma case binary sequences case isometrically embedded disjoint union 
isometrically embedded useful space kernel methods pattern recognition directly generalized radial basis function form gammad important practice able scale radial distance radial basis kernel positive width parameter oe obtain gammad oe oe width large nearly width small ffi 
kernel useful case 
width parameter set cross validation optimize performance measure 
kernel get away keeping oe adjusting parameters internal kernel peaked diagonal effect similar adjusting width parameter 
example adjust parameter fl definition kernels modeling substitution insertion control regular string kernel peaked diagonal 
convenient simply adjust width parameter oe underlying generative probability model 
unfortunately oe positive positive integer reason believe kernel gammad oe defined positive definite 
lead general question question positive kernel log log gamma log gammad oe oe kernel oe 
turns answer questions properties hold infinitely divisible 
briefly review relevant theory section 
infinitely divisible kernels definition infinitely divisible kernels positive kernel set theta kernel called infinitely divisible positive integer kernel kernels related family infinitely divisible probability distributions limits sums independent variables see 
describe properties infinitely divisible kernels need additional definitions 
negative definite kernels function negative definite symmetric real ij note extra condition 
means positive definite gammak negative definite converse generally hold 
clearly class negative definite functions forms closed convex cone class kernels 
negative definite kernels useful closure property positive definite kernels 
lemma function theta 
negative definite iff negative definite 
proof clearly symmetric iff real ij ij ij negative iff say negative definite functions equivalent differ function say function theta zero diagonal note negative definite gamma equivalent zero diagonal equivalence may assume negative definite functions zero diagonal 
close relationship positive negative definite functions 
lemma symmetric function theta zero diagonal element gamma 
positive definite iff negative definite 
proof previous lemma follows easily definitions 
see lemma page proof 
see close relationship negative definite functions squared distances 
intuition 
assume symmetric function zero diagonal 
say satisfies inequalities positive integer ij inequality says positive inequality says basically sum squared lengths diagonals quadrilateral equal sum squares side lengths true euclidean distance 
simple result known 
theorem symmetric function zero diagonal 
negative definite iff satisfies inequalities positive integer proof note condition ij definition negative definite function restrict integer follows easily fact negative definite kernels closed pointwise limits multiplication positive constant 
furthermore duplicating elements needed stipulate sigma 
condition implies half half gamma 
rename associated negative assume write condition ij get inequality 
main result infinitely divisible kernels convenience useful allow negative definite functions value way positive kernel gamma log defined equals zero 
assume symmetric function diagonal values infinity 
real define ffl ffl gamma ffl say negative definite define relation jn iff 
easily verified negative definite iff jn equivalence relation negative definite usual sense defined section equivalence class equivalence relation 
furthermore extended negative definite kernels remain closed pointwise limits 
characterization infinitely divisible kernels primarily obtained schonberg 
theorem positive kernel gamma log log log gamma log 
equivalent 
infinitely divisible 
kernel 
negative definite 
negative definite 
equivalence relation isometrically embedded equivalence class equivalence relation 
proof treatment follows proposition page 
see implies note infinitely divisible gamman positive definite positive integers gamma gamman negative definite positive integers clear lim gamma gamman negative definite kernels closed pointwise limits negative definite 
recall assuming continuous function separable metric space assumption result holds replaced arbitrary hilbert space 
see implies note negative definite tn 
define tn gamma negative definite lemma zero diagonal 
assume define gamman gamman gamman positive definite lemma 
note tn terms clearly positive definite functions positive definite taylor expansion limit sums powers positive coefficients positive definite closure product 
positive definite closure product 
result follows 
clearly implies 
equivalent 
equivalence follows lemma 
equivalence somewhat involved postponed section 
obvious questions previous section equivalent infinite divisibility positive kernel infinitely divisible immediate produce example shows 
fitzgerald horn give nice example main theorem real symmetric theta matrix positive positive definite fractional schur power fk ij positive definite gamma 
result rediscovered years 
denote vector denote example fitzgerald horn supply show bound tight matrix form ffi show sufficiently small ffi ffi positive definite gamma ffi infinitely divisible 
easily verified positive matrix positive definite iff infinitely divisible 
obvious independent positive kernel infinitely divisible 
example fitzgerald horn shows class infinitely divisible kernels closed sum 
showed section sum represented convolution follows class closed convolution 
closed product fractional positive powers 
progress answering questions lack useful operational way test infinite divisibility practice 
assuming kernels kd infinitely divisible convolution infinitely divisible 
positive kernel infinitely divisible modify manner infinitely divisible 
shown accomplished finite multiplying diagonal elements kernel large constant 
analogous adding diagonal necessarily positive symmetric function finite set positive definite trick practice 
appear appropriate kernels countably infinite sets 
particularly pleasing rich subclass convolution kernels proven infinitely divisible simple methods modifying infinitely divisible 
kernels reproducing kernel hilbert spaces summarize aspects reproducing kernel hilbert spaces relate results 
allows characterize kernel oe oe promised section provide proof lemma final step proof theorem 
treatment follows 
set metric 
refer metric space case wish leave specific metric unspecified 
say separable exists countable set dense ffl exists ffl 
countable assume endowed discrete metric ffi rendering separable metric space 
function 
continuous ffl exists ffi ffi jf gamma ffl 
clear endowed discrete metric function 
continuous 
assume separable metric space theta 
continuous kernel 
denote linear space real valued functions generated functions fk xg elements define hf gi note function delta deltai depend chosen representations clearly bilinear hcf hi hf hi hg hi symmetric hf gi hg fi positive definite hf fi semi inner product see page 
follows equation semi inner product reproducing property hf implies hk semi inner product delta deltai kernel space semi inner product defined hf hf delta deltai kernel theta inequality equation hf fi implies hf fi 
delta deltai just semi inner product inner product norm inner product space delta deltai inner product space defined jjf jj hf fi distance jjf gamma gjj 
hilbert space inner product space complete sense cauchy sequence ff sequence sup mn jjf gamma jj converges space 
ff cauchy sequence gamma jjf gamma jj inequality real valued function possible complete adding limits cauchy sequences extending inner product larger class real valued functions includes functions hilbert space 
space dense space called reproducing kernel hilbert space associated kernel 
easy see reproducing property 
assume ff cauchy sequence jjf gamma jj 
discussed implies 
hf hf lim hf lim show separable metric space continuous separable 
countable dense subset set functions form rational numbers clearly countable 
member jjf gamma gamma small likes appropriate choice continuous 
dense separable 
dense follows separable 
separable hilbert space countable orthonormal basis set foe ae hoe oe ffi exist unique real fc oe hf oe infinite say infinite dimension 
case isometric space infinite real sequences fc 
dimension size isometric euclidean space dimension 
state main result 
theorem continuous kernel theta separable metric space associated rkhs separable isometric finite case orthonormal basis foe oe oe proof fact separable isometric orthonormal basis foe follows discussion 
definition orthonormal basis contains hk oe oe follows reproducing property hk oe oe establishes result 
position prove parts theorem section equivalent 
suppose finite negative definite zero diagonal 
gamma kernel lemma 
rkhs associated 
jjk gamma jj gamma oe isometric embedding isometric embedding result follows isometrically embedded negative definite infinite discussed section decomposed equivalence classes finite equivalence class infinite equivalence classes 
follows implies 
see implies note remarked section decomposed equivalence classes finite equivalence class infinite equivalence classes negative definite equivalence class negative definite trivial verify isometrically embedded negative definite function theta result follows 
reproducing kernel hilbert space associated kernel gives simple proof lemma kernel set thetau finite nonempty define show kernel product set finite nonempty subsets 
nonempty finite subset pre hilbert space associated nonempty finite define equation hf inner product kernel follows kernel product set nonempty finite subsets 
construction suggests broad generalization notion convolution 
theta delta delta delta theta xd kernels theta omega delta delta delta omega kd kernel theta theta 
say represents relation 
xd countable define convolution hf 
welldefined kernel rkhs associated kernel clear represents finite relation rkhs associated kernel convolution convolution 
xd uncountable cases integral representation element rkhs place sum modify definition convolution accordingly 
lead interesting connections theory classical uses kernels 
acknowledgments tommi jaakkola providing main inspiration research valuable ideas early stages 
manfred opper richard montgomery gave helpful advice material treated sections andrzej ehrenfeucht vincent bill grundy provided suggestions 
research supported partly army research office partly national science foundation department energy 
berg christensen 
harmonic analysis semigroups theory positive definite related functions 
springer 
burges 
tutorial support vector machines pattern recognition 
data mining knowledge discovery 
dudley 
real analysis probability 
wiley 
durbin eddy krogh mitchison 
biological sequence analysis probabilistic models proteins nucleic acids 
cambridge university press 
elliott moore 
hidden markov models estimation control 
springer verlag 
william feller 
probability theory applications volume 
john wiley 
william feller 
probability theory applications volume 
john wiley 
fitzgerald horn 
fractional hadamard powers positive definite matrices 
journal mathematical analysis applications 
fu 
syntactic pattern recognition applications 
prentice hall englewood cliffs nj 
king sun fu taylor booth 
grammatical inference survey part ieee transactions systems man cybernetics smc january 
king sun fu taylor booth 
grammatical inference survey part ii 
ieee transactions systems man cybernetics smc july 
geman geman 
stochastic relaxations gibbs distributions bayesian restoration images 
ieee trans 
pattern analysis machine intelligence 
girosi 
equivalence sparse approximation support vector machines 
neural computation 
hopcroft ullman 
automata theory languages computation 
addison wesley reading massachussetts 
jaakkola haussler 
fisher kernel method detect remote protein homologies 
proceedings seventh international conference intelligent systems molecular biology aug 
jaakkola haussler 
exploiting generative models discriminative classifiers 
advances neural information processing systems san mateo ca 
morgan kauffmann publishers 
appear 
jaakkola haussler 
probabilistic kernel regression models 
proc 
seventh int 
workshop ai statistics 
appear 
lauritzen 
graphical models 
oxford university press 
linial linial tishby 
global self organization known protein sequences reveals inherent biological signatures 

linial london rabinovich 
geometry graphs algorithmic applications 
combinatorica 
mackay 
gaussian processes 
available wol ra phy cam ac uk mackay 

hilbert space methods science engineering 
adam 
poggio girosi 
sparse representation function approximation 
neural computation 
lawrence rabiner 
tutorial hidden markov models selected applications speech recognition 
proc 
ieee february 
rosen 
positive powers positive positive definite matrices 
canadian journal mathematics 
david sankoff joseph kruskal 
time warps string edits macromolecules theory practice sequence comparison 
addison wesley 
scholkopf sung burges girosi niyogi poggio vapnik 
comparing support vector machines gaussian kernels radial basis function classifiers 
ieee transactions signal processing november 
scholkopf burges smola 
advances kernel methods support vector learning 
mit press 
gilbert strang 
linear algebra applications 
harcourt brace jovanovich 
gammerman vovk 
ridge regression learning algorithm dual variables 
proceedings fifteenth international conference machine learning icml 
available lara enm bris ac uk cig pubs nf htm 
vapnik 
statistical learning theory 
wiley 
wahba 
spline models observational data 
cbms nsf regional conference series applied mathematics 
wahba 
support vector machines reproducing kernel hilbert spaces randomized 
technical report tr rr university wisconsin madison 

