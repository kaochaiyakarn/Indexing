reprogrammable network packet processing field programmable port extender fpx john lockwood jon turner david taylor department computer science applied research lab washington university brookings drive saint louis mo www arl wustl edu arl projects fpx prototype platform developed allows processing packets edge multi gigabit second network switch 
system field programmable port extender fpx enables packet processing functions implemented modular components reprogrammable hardware 
logic fpx implemented field programmable gate arrays fpgas 
packet processing functions system implemented modules 
core functionality fpx implemented fpga called networking interface device nid 
nid contains logic transmit receive packets network dynamically reprogram hardware modules route individual traffic flows 
full non blocking switch implemented nid route packets networking interfaces modular components 
modular components fpx implemented second fpga called reprogrammable application device rad 
modules loaded rad reconfiguration partial partial reconfiguration fpga 
combination nid rad fpx individually reconfigure packet processing functionality set traffic flows rest system continues operate 
platform simplifies development deployment new hardware accelerated packet processing circuits 
modular nature system allows active router migrate functionality plugins hardware modules 
research supported nsf ani xilinx permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
fpga february monterey ca usa copyright acm keywords fpga reconfiguration hardware modularity network routing packet internet ip atm processing categories subject descriptors hardware input output data communications interconnections subsystems computer systems organization computer communication networks network architecture design 
background internet routers firewalls need high performance keep pace growing demands bandwidth 
time devices need flexibility reprogrammed implement new features functionality 
functionality router occurs ingress egress ports switch 
routers locations required perform extensive packet processing operations 
hardware routers firewalls provide high throughput including optimized packet processing pipelines parallel computation circuits 
application specific integrated circuits asics traditional routers able implement performance critical features line speed 
static nature asic circuit limits functionality performance critical features fixed set system functionality 
software routers firewalls excel ability implement reprogrammable features 
new features added removed active router loading software new software modules 
sequential nature microprocessor executes code limits throughput system 
routers solely software process packets typically archive throughputs orders magnitude slower counterparts 
routers firewalls utilize fpgas implement desirable balance performance flexibility 
share performance advantage asics customized pipelines implemented parallel logic functions performed area device share flexibility software systems reconfigured 

fpx system field programmable port extender enable rapid prototype deployment hardware components modern routers firewalls 
system intended allow researchers hardware developers quickly prototype new functionality hardware download functionality nodes network 
architecture fpx suited implement applications ip routing flow queuing flow control algorithms hardware 
components fpx include fpgas banks memory high speed network interfaces 
networking interfaces fpx optimized enable simultaneous arrival departure data cells oc rates 
equivalent bandwidth multiple channels gigabit ethernet 
photograph fpx module shown 
fpx circuit implemented layer printed circuit board dimensions cm cm 
fpx xilinx virtex fpgas xcv efg xcv efg 
versions fpx utilize larger pin compatible xcv efg provide additional logic resources user defined functionality 
sram components fpx mounted rad 
sdram memories mounted back fpx sockets 
reconfiguration data fpgas stored non volatile flash memory nid sram memory rad 
fpx integrates open hardware platform called washington university gigabit switch 
shows fpx mounted port 
inserting fpx modules port switch parallel fpx units simultaneously process packets pass network ports switch 
fpx module data data sdram sdram data sram rad program sram ec module vc ec module vc vc vc switch rad nid data sram nid rad configuration logical configuration fpx implements logic fpga devices network interface device nid reprogrammable application device rad 
interconnection rad nid network memory components 
rad contains modules implement module specific functionality 
module rad connects static random access memory sram wide synchronous dynamic ram sdram 
total modules implemented rad full control independent banks memory 
sram typically applications need implement table lookup operations fast ip lookup algorithm sdram interface typically applications packet queuing transfer bursts data tolerate higher memory latency 
rad communicates nid utopia interface 
packets interface segmented sequence fixed size cells formatted ip atm 
interface small amount buffering implements flow control 
start cell soc signal asserted input module indicate arrival data 
transmit cell available tca signal asserted back incoming data source indicate downstream congestion 

network interface device network interface device nid fpx controls packet flows routed modules 
provides mechanisms dynamically load hardware modules network router 
combination features allows modules dynamically loaded unloaded affecting switching traffic flows processing packets modules system 
shown nid components implemented fpga hardware 
contains port switch transfer data ports virtual circuit lookup tables vc port order selectively route flows control cell processor cp process control cells transmitted received network logic reprogram fpga hardware rad synchronous asynchronous interfaces network ports surround nid 
flow routing nid routes flows modules rad network interfaces switch line card port switch 
traffic flow arrives incoming port forwarded destination port 
nid interfaces provide small amount photo fpx mounted switch programming interface control cell processor rad program sram error check circuit ccp vc vc port switch ec ec switch vc vc rad synch buffered interface virtual circuit lookup table nid asynchronous interface network interface device configuration nid flow routing table vpi 
vpi vci vci 
vci aggregate flow routing table flow routing table flow routing nid buffering short term congestion 
buffers nid implemented chip memory 
packets contend transmission destination port nid performs arbitration 
longer term congestion nid avoids data loss sending back pressure signal previous module network interface network flow path 
design port switch scheduling algorithm arbitrate flows design switch 
ip packets routed fpx switch assignment cell headers transport packet 
mod soc mod data interface mod soc mod tca mod tca mod sram gr sram sdram gr sdram data module logic sram interface sdram interface clk module reset interface enable ready sram req sram sram addr sram rw sdram req sdram data sram addr sram rw modular component fpx nid supports forwarding aggregate traffic flows individual traffic flows 
nid virtual circuit lookup table vc maps flows hop destinations ports 
shown nid flow routing table contains entries ports switch identify destination port flow 
table sufficient entries support virtual paths aggregated traffic virtual circuits individual flows 
examples illustrate nid switching functionality shown 
default cells simply passed line card interface switch 
implement egress flow processing process packets exit router nid routes flow switch rad module line card 
likewise implement ingress cell processing nid routes virtual circuit line card rad module switch 
full rad processing occurs data processed directions modules rad 
loopback partial loopback testing programmed nid debug experimental modules 
modules implement selective packet forwarding reassignment headers transport packet 
control functions nid implements control cell processor ccp hardware manage operation fpx communicate network 
ingress interface switch ccp listens responds commands sent specific virtual circuit 
nid processes commands include modification flow routing entries reading writing hardware status registers reading writing memory commands cause logic rad reprogrammed 
executing command nid returns response control cell 
fpx order reprogram rad network nid implements reliable protocol fill contents board ram configuration data sent network 
cell arrives nid uses data sequence number cell write data rad program sram 
cell correctly received fpx holds image reconfiguration data sdram sram module switching fpx module fpx module fpx module 
larger configuration fpx modules needed reprogram rad 
time control cell sent nid initiate reprogramming rad contents rad program sram 
fpx supports partial reprogramming rad allowing configuration streams contain commands program portion logic rad 
issue command reinitialize device nid just writes frames reconfiguration data rad reprogramming port 
feature enables module rad continue processing packets partial reconfiguration 
similar techniques implemented systems software controllers 
modular interface application specific functionality implemented rad modules 
modular interface developed provides standard interface access packet content interface chip memory 
hardware plugin modules rad consist region fpga gates internal memory bounded defined interface network external memory 
currently regions defined half fpga fixed set pins 
modular interface fpx component shown 
data arrives departs module bit wide utopia interface 
data passes modules complete atm cells 
larger ip datagrams pass interface multiple cells 
module provides interfaces chip memory 
sram interface supports transfer bit wide data chip sram 
synchronous dynamic ram sdram interface provides bit wide interface memory 
implementation ip lookup module chip sram store data structures fast ip lookup algorithm 
larger configurations capacity fpgas increases possible integrate modules fpga 
ccp ec ccp ec modules installed vc module vc vc vc ec ec vc module vc vc vc switch full rad processing packet routing reassembly rad nid rad ccp ec ccp ec module vc module vc vc vc switch switch default flow action egress sw processing bypass flow output queueing nid vc ec ec module installed vc module vc vc rad nid rad nid module installed ccp ec ccp ec vc module vc vc vc vc ec ec module vc switch ingress lc processing ip routing module switch switch full loopback testing dual egress processing system test chained modules nid switching functionality vc vc rad nid rad nid line card oc oc oc line card oc oc oc spc smart port card spc smart port card fpx field programmable port extender fpx field programmable port extender ipp opp ipp opp ipp ipp gigabit switch fabric fpx spc physical configuration current system module occupies half xcv 
systems larger number modules fit higher capacity fpga 
interface hardware modules existing system designed remain unchanged larger configuration 
applications retain interfaces timing relationships data bus memory buses control lines 
hardware modules need resynthesized fit fixed region new device 
configuration larger configuration fpx modules shown 
physically module occupies fixed region fpga device 
intra chip routing interconnects data paths modules 
common signal lines modules sram sdram 
combined hardware software modules complex packet processing algorithms require hardware software components research project active processing node called smart port card spc built contains routing chip called apic embedded pentium processor runs netbsd kernel 
combined fpx interesting applications implemented perform active processing hardware software 
physical configuration combined system shown 
physically fpx spc stack ports switch 
logical configuration combined system shown 
packets enter exit combined system interfaces switch fabric line card 
data flows selectively forwarded network interfaces hardware modules fpx software modules spc configuration virtual circuits virtual paths nid apic 
example application utilize hardware software modules process packets consider implementation internet router combined system 
packet flows enter line card forwarded apic nid hardware module fpx 
hardware module turn performs fast ip lookup packet forwards standard packets pre established virtual circuit leads nid switch fabric appropriate egress port 
packets require non standard processing ip options hardware module forward packet software module spc processing 
hardware software combined system provide high throughput majority packets full processing functionality exceptions 
opp opp networking testbed fpx provides open platform environment rapid prototype broad range networking components 
national science foundation fpx hardware available researchers universities interested developing networking hardware components 
implementation sample fpx module including vhdl source code pin mappings rad downloaded web 
modules developed fpx perform ip routing packet buffering packet content modification 
details fpx available project website 

field programmable port extender enables customized packet processing functions implemented modules dynamically loaded hardware network 
networking interface device implements core functionality fpx 
allows fpx individually reconfigure packet processing functionality set traffic flows disrupting packet processing functions 
modular design fpx system interest active networking systems allows customized applications achieve higher performance hardware acceleration 

acknowledgments authors dave xilinx support project research mechanisms implement interfaces chip modules 

hauck roles fpgas reprogrammable systems proceedings ieee vol 
pp 
apr 
marcus mcauley smith protocol applying programmability network infrastructures ieee communications magazine vol 
pp 

lockwood turner andd taylor field programmable port extender fpx distributed routing queuing fpga monterey ca pp 
feb 
duan lockwood kang high performance oc oc queue design prototype input buffered atm switches infocom kobe japan pp 
apr 
lockwood kang 
park available bit rate architecture simulation input buffered vc queued atm switch globecom sydney australia pp 
nov 
turner design gigabit atm switch infocom 
lockwood duan kang campbell scalable atm networks fully functional testbed ieee journal technology pp 
june 
switch fabric data sdram programming interface control cell processor rad program sram error check circuit gbps gbps temp ccp module vc fpx vc port switch ec ec module vc vc rad nid hardware packet processing data sdram data data sram sram illinois pulsar optical interconnect homepage vlsi uiuc edu sept 
internet reconfigurable logic creating web enabled devices xilinx 
virtex configuration architecture advanced user guide xilinx sept 
turner gigabit technology distribution program www arl wustl edu kits html aug 
lockwood lim hello world simple application field programmable port extender fpx tech 
rep wucs washington university department computer science july 
field programmable port extender homepage www arl wustl edu projects fpx aug 
synch buffered interface virtual circuit lookup table asynchronous interface intel embedded module pentium north bridge apic spc pci bus pci interface port switch data sram south bridge software packet processing combined fpx spc logical configuration line card choi keller lockwood turner wolf design flexible open platform high performance active networks allerton conference champaign il 
alexander hicks keromytis shaw moore gunter trevor nettles andj acm sigplan workshop ml international conference functional programming icfp 
richard taylor smart port card embedded unix processor architecture network management active networking ieee acm transactions networking submitted july 
choi wolf plattner design issues high performance active routers ieee network vol 
jan 
