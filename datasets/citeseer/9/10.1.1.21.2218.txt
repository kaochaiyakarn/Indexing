dimacs series discrete mathematics theoretical computer science volume general stochastic approach solving problems hard soft constraints henry kautz bart selman jiang 
ai problems conveniently encoded discrete constraint satisfaction problems 
case solutions csp equally desirable general interested set preferred solutions example solutions minimize cost function preferences encoded incorporating soft constraints problem instance 
show hard soft constraints handled encoding problems instances weighted max sat finding model maximizes sum weights satisfied clauses problem instance 
generalize local search algorithm satisfiability handle weighted max sat 
demonstrate effectiveness approach experimental results encodings set studied network steiner tree problems 
approach turns competitive best current specialized algorithms developed operations research 

traditional satisfiability testing algorithms backtracking search 
surprisingly search heuristics proven generally useful increases size problems practically solved come mainly increases machine speed efficient implementations 
selman levesque mitchell gu introduced alternative approach satisfiability testing stochastic local search 
algorithms family partial decision procedures prove formula unsatisfiable find models satisfiable ones 
interesting classes formulas solve problem instances orders magnitude larger handled systematic search algorithm 
variant called walksat currently fastest robust versions basic algorithm 
mathematics subject classification 

fl american mathematical society page kautz selman jiang success stochastic local search handling formulas contain thousands discrete variables viable approach directly solving logical encodings interesting problems ai operations research circuit diagnosis planning 
certain classes problems provides general model finding technique scales realistically sized instances demonstrating purely declarative logical representation necessarily conflict need computational efficiency 
kinds problems useful encoding terms propositional satisfiability particular problems contain hard soft constraints 
clause cnf conjunctive normal form formula viewed constraint values true false assigned variable 
satisfiability clauses equally important clauses evaluate true satisfying model 
problems contain classes constraints hard constraints satisfied solution soft constraints different relative importance may may satisfied 
language operations research hard constraints specify set feasible solutions soft constraints specify function optimized choosing feasible solutions 
kinds constraints represented clauses formula constructed conjoining clauses unsatisfiable 
order find solution original problem ordinary satisfiability procedure necessary repeatedly try exclude different subsets soft constraints problem representation satisfiable formula 
performing search space soft constraints account relative importance complex costly practical sense theoretical complexity entire process ordinary satisfiability 
natural representation problems involving hard soft constraints weighted maximum satisfiability max sat 
instance weighted max sat consists set propositional clauses associated positive integer weight 
clause satisfied truth assignment adds cost weight associated clause total cost associated truth assignment 
solution truth assignment maximizes sum weights satisfied clauses equivalently minimizes sum weights unsatisfied clauses 
note sum weights clauses correspond soft constraints encoding problem hard constraint represented clause weight greater assignments violate clauses total weight exactly correspond feasible solutions original problem 
modified walksat algorithm mentioned handle weighted max sat efficient manner 
important difference simple sat weighted max sat problems near approximate solutions generally value 
local search general general stochastic approach widely applicable heuristic method finding approximate solutions optimization problems versions previously applied max sat 
algorithm notable employing particularly simple efficient effective method escaping local minima search space 
main experimental described boolean encodings network steiner tree problems 
np complete problem involving finding paths graphs explained 
network steiner tree problems applications network design routing intensively studied operations research decades 
worked wellknown set benchmark problems compared performance best published results 
implicit goals develop representations algorithms provide state art performance advance research ai operations research communities 
possible max sat encodings optimization problem equally 
practical applications final size encoding crucial low order polynomial blowup size may unacceptable 
number clauses straightforward propositional encoding steiner tree problem quadratic possibly large number edges graph 
developed alternative encoding linear number edges 
savings completely free alternative representation approximates original problem instance theoretically lead optimal solution 
experimental results obtained encoding stochastic local search algorithm competitive terms solution quality speed best specialized steiner tree algorithms operations research literature 
general approach alternative representation steiner problems break problem small tractable subproblems precompute set near optimal solutions subproblem maxsat assemble global solution picking elements pre computed sets 
general technique applicable kinds problems ai operations research 
approach called partitioning independent gu puri applying sat circuit synthesis problems 

stochastic search algorithm local search algorithms satisfiability searching space truth assignments satisfies clauses 
search begins random complete truth assignment 
neighborhood point search space defined set assignments differ point value assigned single variable 
step search corresponds flipping truth value assigned variable 
basic search heuristic move direction minimizes number unsatisfied clauses moves called greedy moves 
local minima avoided occasionally kautz selman jiang weighted walksat input weighted clauses max flips max tries target noise 
soln random truth assignment max tries max flips compute sum weights clauses unsatisfied soln sum target return success solution soln randomly chosen unsatisfied clause probability noise flip value assigned soln randomly chosen variable probability noise variable compute sum weights clauses currently satisfied soln unsatisfied variable flipped flip variable minimizes sum return failure best assignment soln 
weighted walksat procedure 
randomly flipping variable appears unsatisfied clause moves called random walk moves 
frequency random walk moves controlled noise parameter 
fig 
presents version walksat algorithm modified weighted max sat problems 
change simply involves sum weights set unsatisfied clauses merely counting number clauses 
new parameter target provides threshhold terminating algorithm current assigned 
hard constraints encoded clauses giving weight greater target 
hard constraints greater weight soft constraints biased satisfying constraints 
working soft constraints hard constraints may unsatisfied 
search proceeds mixture feasible infeasible solutions 
sharp contrast standard operations research methods generally stepping feasible solution feasible solution 
methods guaranteed definition find local minimum space feasible solutions 
hand guarantee approach 
empirical question local search weighted max sat encoding problems hard soft constraints moderately 
initial test problems encodings airline scheduling problems studied researchers constraint logic programming clp 
results encouraging solutions approximately times faster clp approach 
purposes wished larger test set studied intensively longer general stochastic approach period time 
set benchmark problems operations research community describe section 

steiner tree problems network steiner tree problem long studied operations research known hard benchmark instances available 
problems obtained ftp repository imperial college ms ic ac uk 
ran experiments problems results readily compared best competing approaches 
available test problem generator creates hard random steiner tree problem instances hope compare approach instances source 
network steiner tree problem consists undirected graph edge assigned positive integer cost subset nodes called terminal nodes 
goal find subtree graph spans terminal nodes sum costs edges tree minimum 
nodes subgraph terminals called steiner nodes 
fig 
shows example steiner problem 
top shows graph steiner nodes nodes 
weights edges 
bottom shows steiner tree connecting nodes 
note solution involves steiner nodes 
general finding steiner tree np complete 

exact encodings 
exact translation steiner problems maxsat entirely obvious difficulty axiomatizing connectedness 
translation requires jej variables jej number edges entire graph 
replace edge graph pair directed edges steiner tree correspond tour subgraph includes steiner nodes 
tour corresponds walking perimeter steiner tree equivalently making depth traversal tree 
boolean variable possible position possible edge take tour 
course edges appear tour 
example proposition true directed edges derived original edge appears th element tour 
requires jej variables 
include set hard constraints state directed edge variables true tour includes terminal nodes parts tour may repeated 
set soft constraints represents costs assigned edges 
example edge cost simply includes unit clause weight max sat encoding 
unfortunately encoding practical realistically sized problems quadratic blowup number variables relative number edges original instance large 
problems wish handle kautz selman jiang 
example network steiner problem solution 
contain edges hope solve formula containing variables current machines 

approximate encodings 
desire handle large instances led search compact max sat encodings 
ultimately encoding linear factors number edges original problem instance parameter controls encoding approximates original problem instance 
say encodings approximate solutions yield guaranteed optimal solutions original instances large jej 
practice quality solutions optimal solutions quite small problems edges 
intuition encoding original problem broken set tractable subproblems range near optimal solutions subproblems pre computed max sat combine selection solutions subproblems create global solution 
steiner tree problems subproblems smaller steiner trees connect just pairs nodes original terminal set 
node steiner problems general stochastic approach tractable solution simply shortest path nodes 
range near optimal solutions shortest path shortest path generated modified version dijkstra algorithm 
approach approximates original problem instance generate paths pairs nodes shortest paths fixed 
discuss choice 
pathological problem instances exist require non optimal subproblem solutions 
shall see approach works quite practice 
illustrate encoding example fig 

introduce variable edge graph 
example edge nodes represented variable interpretation variable variable true corresponding edge part steiner tree 
capture cost including edge tree include unit clause form weight cost edge 
clause soft constraint 
note edge included solution true clause unsatisfied truth assignment incurs cost 
similarly clause edge 
second list terminal nodes successive pair nodes list generate shortest paths nodes 
consider issue nodes ordered list 
associate variable path 
example shortest paths terminal nodes 
name variables third introduce hard constraints assert solution contain path pair terminal nodes 
example clause hard constraint assigned high weight greater sum soft constraints 
hard constraints assert path appears solution edges contains appear 
example path introduce clauses oe oe 
concludes encoding 
encoding requires jej jt gamma variables jej number edges graph jt number terminal nodes number shortest paths pre computed pair 
total number clauses jej kl jt gamma maximum number edges pre computed paths 

selecting subproblems 
large paths pair terminal nodes included subproblem solutions encodings sure optimal original problem instances 
obviously impractical large max sat encoding exponentially larger original problems defeating entire approach 
key devise way selecting subproblems global solution assembled kautz selman jiang solutions generated subproblem 
set terminal nodes choose jt gamma pairs nodes 
consider strategies chosing pairs 
random 
arbitrary linear ordering terminal nodes 
choose pairs adjacent pair nodes ordering 
example fig 
ordering correspond selecting pairs 
greedy 
arbitrary linear ordering terminal nodes 
step list constructing pairs algorithm terminal node ordering find nearest terminal node appear earlier ordering output pair step finding nearest terminal node node computed dijkstra single source shortest paths algorithm jv time 
time required jv jt 
minimum spanning tree 
construct matrix distances pairs terminal nodes 
done floyd warshall pairs shortest path algorithm jv time johnson algorithm sparse graphs jv log jv jv time 
defines complete weighted graph pairs terminal nodes 
edge weight gives length shortest path terminal nodes 
find minimum spanning tree edge spanning tree defines pair nodes 
note third strategy takes global view pair selection process strategies 
selecting shortest path pair nodes give initial approximation steiner tree connecting terminal nodes 
greedy heuristic viewed computing pretty spanning tree terminal nodes true minimum spanning tree algorithm 
expect minimum spanning tree strategy give best initial approximation random strategy worst 
confirmed experiments 
allowing path pair nodes walksat start looking paths fit better note paths share edges reducing weight connecting spanning tree 
question ordering strategy allows find best global solutions 

empirical results description benchmark problems appears beasley 
set contains classes problem instances increasing size general stochastic approach complexity 
instances class relatively small easy solve 
classes contain hard benchmark instances 
order keep presentation concise limit discussion results class instances obtained qualitatively similar results class 
table contains results class instances best specialized steiner tree algorithms reported papers beasley chopra 
table jv denotes number nodes graph jej number edges jt number terminal nodes 
columns labeled soln give weight best steiner tree method 
solutions chopra globally optimal 
column marked basis number paths give subproblem selection strategy greedy minimum spanning tree obtained best results 
give number path pairs nodes 
discussed walksat algorithm inherently incomplete find optimal solutions instances 
chopra algorithm complete 
beasley algorithm complete theory practice incomplete run termination due time space limitations instances 
pardalos invented new complete algorithm steiner problem appears quite robust efficient plan provide comparisons method 
walksat ran sgi challenge mhz mips processor 
execution times walksat sun sparc series machines similar clock speeds virtually identical 
beasley algorithm ran cray xmp chopra vax 
note attempted adjust numbers machine speed 
differences performance described attributed entirely differences machine speed 
running times table include time pre compute set paths successive terminal nodes 
reasonable practice deals fixed network wants compute steiner trees different subsets nodes 
fixed network pre compute dijkstra algorithm sets paths pair nodes 
table see problems terminal nodes walksat optimal solution quickly approaches 
example walksat times faster reaching global optimum 
walksat runs times faster beasley times faster chopra 
fact optimal solutions cases means things 
shows subproblem decomposition contains global optimal solution 
second shows weighted walksat able synthesize global optimal solution words solved weighted max sat experimental data code available ftp home page author 
kautz selman jiang problem parameters beasley chopra walksat id jej jt soln secs soln secs soln basis cpu cray vax num 
sgi paths table 
computation results beasley class steiner tree problems problem optimality 
instances larger number terminal nodes solutions optimal better beasley see 
cases encodings single path terminal nodes essentially done terminal ordering heuristic selection subproblems 
max sat encodings larger numbers paths terminals simply large walksat procedure handle 
table compare various subproblem selection strategies selection instances 
consider path solution column 
gives global solution obtained simply combining single best solution subproblem 
reflects quality terminal ordering heuristics 
expected tree heuristic yields best solutions followed greedy heuristic random ordering far 
story changes walksat synthesis global solutions picking solutions subproblem 
case greedy heuristic gives best global solutions 
minimum spanning tree heuristic cases see 
random heuristic generally worst 
interesting note data davenport applied complete branch bound max sat algorithm encodings generated including data discussed 
case considered discovered weighted walksat optimal solution max sat instance cases branch bound algorithm required running time 
general stochastic approach random greedy min 
span 
tree id path best best path best best path best best soln soln num soln soln num soln soln num paths paths paths table 
comparing subproblem selection strategies 
random outperforms minimum spanning tree heuristic 
may surprised see superiority simple greedy heuristic minimum spanning heuristic local search combine multiple local solutions 
intuitive explanation minimum spanning tree decomposition corresponds deep local minimum global solution space 
difficult local search escape local minimum 
hand greedy decomposition allows room improvement 
interesting lesson local search methods trying generate initial solutions may hurt final result 
difference greedy random shows degree preprocessing beneficial taken far 
summary results show walksat competitive best specialized methods considerably faster 
problems large numbers terminal nodes encodings large handle effectively 
important note problems handle large graphs containing nodes including non terminal nodes 
real world applications steiner trees share characteristic example setting real time connection small group computers network thousands machines 
noted steiner tree problems evaluate solving max sat encodings weighted walksat defined problem known collection hard benchmark instances 
fact walksat completely general algorithm opposed specialized algorithms beasley chopra performs surprisingly hard benchmark problems 
success domain believe promising approach tackling problems ai involve hard soft constraints combined numeric information 

discussion shown adapt walksat variant gsat satisfiability testing algorithm handle weighted max sat problems 
kautz selman jiang problems encoding optimization problems propositional satisfiability problems difficulty representing hard soft constraints 
weighted max sat encoding hard constraints simply receive high weight example larger sum soft constraints 
solution sum weights violated clauses hard constraint guaranteed feasible satisfies hard constraints 
problem translating optimization problems satisfiability problems handling numeric information 
numeric information crucial part ai applications example representing utility functions preference criteria probabilities 
principle polynomial transformation exists sat encodings realistic problem instances may large solve 
weighted max sat encoding numeric information problem instances captured effectively clause weights 
order test approach considered set hard benchmark problems compared results specialized state art algorithms 
chose steiner tree problem long history public availability established set benchmark instances 
results summarized table show weighted max sat strategy fact competitive superior specialized algorithms 
stressed approach general sense walksat algorithm incorporates heuristics specific steiner tree problems 
experiments provided general insights issue problem decomposition 
considered different methods breaking steiner tree problem local subproblems 
completely random decomposition effective sophisticated approach create deep local minima hard improve 
best approach appears middle ground best global solutions combining range solutions subproblems created somewhat sub optimal decomposition 
mentioned search performed weighted walksat proceeds truth assignments correspond feasible infeasible solutions original optimization problem 
inherent aspect approach simply feasible solutions original problem may variable flips apart 
interestingly weighted walksat get stuck infeasible states 
note constructing specialized local search algorithms particular problem domains generally larger changes moves feasible solutions 
results suggest contrast necessary restrict search feasible region problem space 
part success approach due particular max sat encoding developed problems 
particular encoding significantly shorter direct 
general approach combining solutions tractable subproblems useful en general stochastic approach coding kinds optimization problems 
particular crawford baker observed direct sat encoding job shop scheduling problems leads formulas large hard solve 
interesting see piecewise encoding technique applicable job shop scheduling domain 
demonstrated efficient max sat encodings domain independent stochastic local search algorithm promising approach solving hard problems ai involve hard soft constraints numeric information 

johnston discrete stochastic neural network algorithm constraint satisfaction problems 
proceedings international joint conference neural networks san diego ca 

beasley sst algorithm steiner tree problems graphs networks 

chopra rao solving steiner tree problem graph branch cut orsa journal computing 

crawford baker experimental results application satisfiability algorithms scheduling problems proceedings aaai seattle wa 

davenport panel systematic versus stochastic methods international workshop ai 

davis putnam computing procedure quantification theory assoc 
comput 
mach 

dowsland hill climbing simulated annealing steiner problem graphs eng 
opt 

organizational meeting ai initiative oct 

gu efficient local search large scale satisfiability problems sigart bulletin 

gu efficient local search large scale satisfiability problems ieee trans 
systems man cybernetics 

gu puri asynchronous circuit synthesis boolean satisfiability ieee transactions cad integrated circuits systems 

hansen jaumard algorithms maximum satisfiability problem computing 

hwang richards winter steiner tree problem north holland elsevier science publishers amsterdam 

smith smith solving graphical steiner tree problem genetic algorithms oper 
res 
soc 

kautz selman planning satisfiability proceedings ecai vienna austria 

pardalos du test problem generator steiner problem graphs acm transactions mathematical software 

pardalos heuristic steiner problem graphs computational optimization applications 

lever richards clp approach flight scheduling problems proceedings international symposium methodologies intelligent systems 

minton johnston philips laird solving large scale constraint satisfaction scheduling problems heuristic repair method proceedings aaai boston ma 

papadimitriou steiglitz combinatorial optimization 
prentice hall englewood cliffs nj 
kautz selman jiang 
puri gu modular partitioning approach asynchronous circuit synthesis proc 
th ieee acm design automation conference san diego 

selman levesque mitchell new method solving hard satisfiability problems proceedings aaai san jose ca 

selman kautz domain independent extensions gsat solving large structured satisfiability problems proceedings ijcai chamb ery france 

selman kautz empirical study greedy local search satisfiability testing proceedings aaai washington dc 

selman kautz cohen noise strategies local search proceedings aaai seattle wa 

selman kautz cohen local search strategies satisfiability testing 
cliques coloring satisfiability second dimacs implementation challenge johnson trick eds dimacs series discrete mathematics theoretical computer science vol 
american mathematical society 

trick johnson eds working notes dimacs algorithm implementation challenge 
rutgers university new brunswick nj 
bell laboratories mountain avenue murray hill nj mail address kautz research att com bell laboratories mountain avenue murray hill nj mail address selman research att com bell laboratories mountain avenue murray hill nj current address pacific laboratories executive san ramon ca mail address ttl com 
