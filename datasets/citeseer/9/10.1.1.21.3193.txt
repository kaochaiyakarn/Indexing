building ecient ective metasearch engines weiyi meng state university new york binghamton clement yu university illinois chicago king lup liu depaul university frequently user information needs stored databases multiple search engines 
inconvenient inecient ordinary user invoke multiple search engines identify useful documents returned results 
support uni ed access multiple search engines metasearch engine constructed 
metasearch engine receives query user invokes underlying search engines retrieve useful information user 
metasearch engines bene ts search tool increasing search coverage web improving scalability search 
article survey techniques proposed tackle underlying challenges building metasearch engine 
main challenges database selection problem identify search engines return useful documents query 
document selection problem determine documents retrieve identi ed search engine 
result merging problem combine documents returned multiple search engines 
point problems need researched 
categories subject descriptors computer distributed systems distributed databases information storage retrieval information search retrieval search process selection process information storage retrieval systems software information networks general terms design experimentation performance additional key words phrases metasearch information resource discovery distributed collection collection fusion distributed information retrieval name weiyi meng address department computer science state university new york binghamton binghamton ny email meng cs binghamton edu 
name clement yu address department computer science university illinois chicago chicago il email yu cs uic edu 
name king lup liu address school computer science telecommunications information systems depaul university chicago il cti depaul edu 
permission digital hard copies part personal classroom granted fee provided copies distributed pro direct commercial advantage copies show notice rst page initial screen display full citation 
copyrights components owned acm honored 
abstracting credit permitted 
copy republish post servers redistribute lists component works requires prior speci permission fee 
permissions may requested publications dept acm broadway new york ny usa fax permissions acm org 

weiyi meng clement yu king lup liu 
web vast information resource years 
millions people web regular basis number increasing rapidly 
data web form text image 
survey concentrate search text data 
finding desired data web timely cost ective way problem wide interest 
years search engines created help web users nd desired information 
search engine text database de ned set documents searched search engine 
confusion term database phrase search engine interchangeably survey 
usually index documents database created advance 
term represents content word combination usually adjacent content words index identify documents contain term quickly 
google altavista excite lycos hotbot popular search engines web 
types search engines exist 
general purpose search engines aim providing capability search pages web 
search engines mentioned previous paragraph known ones 
special purpose search engines hand focus documents con ned domains documents organization speci subject area 
example cora search engine cora whizbang com focuses computer science research papers medical world search www com search engine medical information 
organizations business sites installed search engines pages 
believed hundreds thousands special purpose search engines currently exist web bergman 
amount data web huge 
believed february publicly indexable web pages lawrence lee giles number google indexed pages increasing high rate 
believe employing single general purpose search engine data web unrealistic hawking thistlewaite etzioni wu 
processing power may scale rapidly increasing virtually unlimited amount data 
second gathering data web keeping reasonably date extremely dicult impossible objectives 
programs web robots major search engines gather data automatically may slow local servers increasingly unpopular 
furthermore sites may allow documents indexed may allow documents accessed search engines sites part called deep web bergman 
consequently live reality having large number special purpose search engines covers portion web 
metasearch engine system provides uni ed access multiple existing search engines 
metasearch engine maintain index documents 
building ecient ective metasearch engines 
sophisticated metasearch engine may maintain information contents underlying search engines provide better service 
nutshell metasearch engine receives user query rst passes query necessary reformatting appropriate underlying search engines collects reorganizes results received 
simple level architecture metasearch engine depicted 
level architecture generalized hierarchy levels number underlying search engines large gravano garcia molina sheldon yu :10.1.1.31.1173
global interface search engine search engine search engine fig 

simple metasearch architecture number reasons development metasearch engine discuss reasons 
increase search coverage web 
study lawrence lee giles indicates coverage web individual major generalpurpose search engines decreasing steadily 
mainly due fact web increasing faster rate indexing capability single search engine 
combining coverages multiple search engines metasearch engine higher percentage web searched 
largest general purpose search engines index web pages special purpose search engines combined may index web pages bergman 
solve scalability searching web 
mentioned earlier approach employing single general purpose search engine entire web poor scalability 
contrast metasearch engine top specialpurpose search engines created alternative search entire web problems associated employing single general purpose search engine disappear signi cantly alleviated 
size typical special purpose search engine smaller major generalpurpose search engine 
easier keep index data date updating index data re ect changes documents carried frequently 
easier build 
weiyi meng clement yu king lup liu necessary hardware software infrastructure special purpose search engine 
result metasearch engine approach searching entire web signi cantly scalable centralized general purpose search engine approach 
facilitate invocation multiple search engines 
information needed user frequently stored databases multiple search engines 
example consider case user wants nd best newspaper articles special event 
desired articles scattered databases number newspapers 
user send query newspaper database examine retrieved articles database identify best articles 
formidable task 
user identify sites newspapers 
second user need send query databases 
di erent databases may accept queries di erent formats user format query correctly database 
third quality ranking articles returned databases retrieved articles individual database may ranked 
result dicult user reading contents articles determine articles useful ones 
large number databases returning articles user user simply overwhelmed 
metasearch engine top local search engines built user needs submit query invoke local search engines metasearch engine 
metasearch engine rank documents returned di erent search engines properly 
clearly metasearch engine user task easier 
improve retrieval ectiveness 
consider scenario user needs nd documents speci subject area 
suppose specialpurpose search engine subject area general purpose search engine contains documents indexed special purpose search engine addition documents unrelated subject area 
usually true user submits query search engines user obtain better results special purpose search engine general purpose search engine 
words existence large number unrelated documents general purpose search engine may hinder retrieval desired documents 
text retrieval documents collection grouped clusters documents cluster related documents di erent clusters 
evaluating query clusters related query identi ed rst search carried clusters 
method shown improve retrieval ectiveness system xu croft 
documents web databases di erent specialpurpose search engines natural clusters 
result query submitted metasearch engine search restricted specialpurpose search engines related query better retrieval ectiveness achieved metasearch engine generalpurpose search engine 
may possible general purpose search building ecient ective metasearch engines 
engine cluster documents improve retrieval ectiveness quality clusters may ones corresponding specialpurpose search engines 
furthermore constructing maintaining clusters consumes resources general purpose search engine 
article objectives 
review main technical issues building metasearch engine 
second survey di erent proposed techniques tackling issues 
third point new challenges research directions metasearch engine area 
rest article organized follows 
section provide short overview basic concepts information retrieval ir 
concepts important discussions article 
section outline main software components metasearch engine 
section discuss autonomy di erent local search engines heterogeneities may ect building metasearch engine 
section survey reported techniques database selection problem determining databases search user query 
section survey known methods document selection problem determining documents retrieve selected database user query 
section report di erent techniques result merging problem combining results returned di erent local databases single ranked list 
section new challenges building metasearch engine 

basic information retrieval information retrieval deals techniques nding relevant useful documents query collection documents 
documents typically preprocessed represented form facilitates ecient accurate retrieval 
section rst overview basic concepts classical information retrieval point features speci cally associated web search engines 
classical information retrieval contents document may represented words contained 
words contain semantic information 
words called words usually document representation 
remaining words content words represent document 
variations word may mapped term 
example words beauty beautiful denoted term 
achieved stemming program 
removing words stemming document logically represented vector terms salton mcgill yu meng total number distinct terms set documents document collection 
suppose document represented vector dn number weight indicating importance th term representing contents document entries vector terms absent document 
term document weight assigned term usually factors 

weiyi meng clement yu king lup liu term frequency tf term document number times term occurs document 
intuitively higher term frequency term important term representing contents document 
consequence term frequency weight term document usually monotonically increasing function term frequency 
second factor ecting weight term document frequency df number documents having term 
usually higher document frequency term important term di erentiating documents having term documents having 
weight term document frequency usually monotonically decreasing called inverse document frequency weight 
weight term document product term frequency weight inverse document frequency weight 
query simply question written text transformed dimensional vector 
speci cally non content words eliminated comparing words query word list 
words query mapped terms nally terms weighted term frequency document frequency information 
vectors documents query formed document vectors close query vector retrieved 
similarity function measure degree closeness vectors 
simple function dot product function dot vector query dn vector document 
dot product function weighted sum terms common vectors 
dot product function tends favor long documents having terms chance having terms common document query higher longer document shorter document 
order documents fair chance retrieved cosine function utilized 
dot jqj 
jdj jqj jdj denote respectively lengths query vector document vector 
cosine function salton mcgill vectors really cosine angle vectors returns value weights non negative 
gets value term common query document value query document vectors identical vector positive constant multiple 
common measure retrieval ectiveness recall precision 
query submitted user suppose set relevant documents respect query document collection determined 
quantities recall precision de ned follows recall number retrieved relevant documents number relevant documents note boolean queries supported ir systems 
article concentrate vector space queries types queries explicitly identi ed 
study real user queries submitted excite search engine indicates queries boolean queries jansen 
building ecient ective metasearch engines 
precision number retrieved relevant documents number retrieved documents evaluate ectiveness text retrieval system set test queries 
query set relevant documents identi ed advance 
query precision value distinct recall value obtained 
sets recall precision values averaged set test queries average recall precision curve obtained 
curve measure ectiveness system 
ideal information retrieval system retrieves relevant documents recall precision equal 
practice possible user needs may incorrectly imprecisely speci ed query user concept relevance varies time dicult capture 
retrieval documents implemented employing similarity function approximates degrees relevance documents respect query 
relevance information due previous retrieval results may utilized systems learning capabilities improve retrieval ectiveness 
remaining portion shall restrict similarity functions achieving high retrieval ectiveness certain situations users feedback information incorporated 
web search engines web search engine essentially information retrieval system web pages 
web pages features usually associated documents traditional ir systems features explored search engine developers improve retrieval ectiveness search engines 
rst special feature web pages highly tagged documents 
web pages html format 
foreseeable xml documents may widely 
tags convey rich information regarding terms documents 
example term appearing title document emphasized special font provide hint term important indicating contents document 
tag information number search engines google altavista better determine importance term representing contents page 
example term occurring title header page may considered important term occurring main text 
example term typed special font bold face large fonts important term special font 
studies indicate higher weights assigned terms due locations special fonts tags yield higher retrieval ectiveness schemes take advantage location tag information cutler 
second special feature web pages extensively linked 
link page page provides convenient path web user navigate page page careful analysis reveal simple link contain pieces information may improve retrieval ectiveness 
link indicates likelihood contents pages related 
second author page values contents page 
weiyi meng clement yu king lup liu linkage information compute global importance pagerank web pages page pointed pages important pages page :10.1.1.31.1768:10.1.1.31.1768
successfully google search engine improve retrieval ectiveness 
linkage information compute authority degree importance web pages respect topic kleinberg :10.1.1.120.3875:10.1.1.120.3875
ibm clever project develop search engine employs technique computing authorities web page query chakrabarti 
way utilize linkage information follows 
page link page set terms known anchor terms usually associated link 
purpose anchor terms provide information regarding contents page facilitate navigation human users 
anchor terms provide related terms synonyms terms index page utilize valuable information search engines google brin page wwww mcbryan suggested anchor terms represent linked pages page :10.1.1.109.4049
general web page may linked web pages associated anchor terms 

metasearch engine components typical session metasearch engine user submits query metasearch engine user friendly interface 
metasearch engine sends user query number underlying search engines called component search engines article 
di erent component search engines may accept queries di erent formats 
user query may need translated appropriate format local system 
retrieval results local search engines received metasearch engine merges results single ranked list presents merged result possibly top portion merged result user 
result list documents list document identi ers urls web pages web possibly short companion descriptions 
article documents document identi ers interchangeably important distinguish 
introduce concept potentially useful documents 
definition 
suppose similarity function computes similarities documents query similarity document query approximates degree relevance document average user submits query 
query document said potentially useful satis es conditions documents desired nal result positive integer similarity query highest similarities documents query 
document similarity query exceeds pre speci ed threshold desired similarity query greater threshold 
metasearch engine environment di erent component search engines may employ di erent similarity functions 
query document building ecient ective metasearch engines 
similarities computed di erent local similarity functions di erent incomparable 
overcome problem similarities de nition computed similarity function de ned metasearch engine 
words global similarities 
note principle conditions de nition mutually translatable 
words condition threshold condition determined number documents similarities exceed threshold vice versa 
practice translation done substantial statistical information text database available 
usually user speci es number documents view 
system uses threshold determine documents retrieved displays desired number documents user 
goal text retrieval maximize retrieval ectiveness minimizing cost 
centralized retrieval system implemented retrieving potentially useful documents possible retrieving non potentially useful documents possible 
metasearch engine environment implementation carried levels 
select potentially useful databases databases contain potentially useful documents search possible minimizing search useless databases 
second selected database retrieve potentially useful documents possible minimizing retrieval useless documents 
software component architecture metasearch engine illustrated 
numbers edges indicate sequence actions query processed 
discuss functionality software component interactions components 
database selector number component search engines metasearch engine small may reasonable send user query 
number large say thousands sending query component search engines longer reasonable strategy 
case large percentage local databases useless respect query 
suppose user interested best matched documents query 
clearly desired documents contained databases 
consequently number databases larger large number databases useless respect query 
sending query search engines useless databases problems 
dispatching query useless databases wastes resources metasearch engine site 
second transmitting query useless component search engines metasearch engine transmitting useless documents search engines metasearch engine incur unnecessary network trac 
third query evaluated useless component databases resources local systems wasted 
fourth large number documents returned useless databases ort needed metasearch engine identify useful documents 
important send user query potentially useful databases 
problem identifying potentially useful databases search query known database selection 
weiyi meng clement yu king lup liu search engine search engine 
user user interface database selector document selector query dispatcher result merger fig 

metasearch software component architecture problem 
software component database selector responsible identifying potentially useful databases user query 
database selector correctly identify potentially useful databases possible minimizing wrongly identifying useless databases potentially useful ones 
techniques database selection covered section 
document selector search engine selected database selector component document selector determines documents retrieve database search engine 
goal retrieve potentially useful documents search engine possible minimizing retrieval useless documents 
large number useless documents returned search engine ort needed metasearch engine identify potentially useful documents 
factors may ect selection documents retrieve component search engine number potentially useful documents database similarity function component system 
factors help determine number documents retrieved component search engine local similarity threshold documents local similarity query higher equal threshold retrieved component search engine 
di erent methods selecting documents retrieve local search engines described section 
query dispatcher query dispatcher responsible establishing connection server selected search engine passing query 
hypertext transfer protocol connection data transfer sending queries receiving results 
search engine building ecient ective metasearch engines 
requirements request method get method post method query format speci query box name 
query dispatcher follow requirements search engine correctly 
note general query sent particular search engine may may received metasearch engine 
words original query may translated new query sent search engine 
translation boolean queries heterogeneous information sources studied chang garcia molina 
vector space queries query translation usually straightforward just retaining terms user query 
exceptions 
relative weights query terms original user query may adjusted query sent component search engine 
adjust relative importance di erent query terms adjustment accomplished repeating query terms appropriate number times 
second number documents retrieved component search engine may di erent desired user 
example suppose part query user metasearch engine indicates documents retrieved 
document selector may decide documents retrieved particular component search engine 
case number usually di erent part translated query sent component search engine 
result merger results selected component search engines returned metasearch engine result merger combines results single ranked list 
top documents list forwarded user interface displayed number documents desired user 
result merger rank returned documents descending order global similarities user query 
di erent result merging techniques discussed section 
remaining discussions concentrate main components database selector document selector result merger 
query translation problem component query dispatcher discussed survey 
query translation boolean queries discussed article focus vector space queries 
discussions query translation vector space queries provided appropriate places discussing software components 

sources challenges section rst review environment metasearch engine built analyze environment causes tremendous diculties building ective ecient metasearch engine 
component search engines participate metasearch engine built maintained independently 
search engine decides set documents wants index provide search service 
decides documents represented indexed index updated 
similarities documents user queries computed similarity function 
completely search engine decide similarity function 
weiyi meng clement yu king lup liu 
commercial search engines regard similarity functions implementational decisions proprietary information available general public 
direct consequence autonomy component search engines number heterogeneities exist 
section rst identify major heterogeneities unique metasearch engine environment 
heterogeneities common systems multidatabase systems di erent os platforms described 
discuss impact heterogeneities autonomy component search engines building ective ecient metasearch engine 
heterogeneous environment heterogeneities identi ed autonomous component search engines meng 
indexing method di erent search engines may di erent ways determine terms represent document 
example may consider terms document full text indexing may subset terms partial text indexing 
lycos mauldin example employs partial text indexing 
order save storage space scalable 
search engines web anchor terms web page index referenced web page brin page cutler mcbryan search engines :10.1.1.109.4049
examples di erent indexing techniques involve remove stopwords perform stemming 
furthermore di erent stopword lists stemming algorithms may di erent search engines 
document term weighting scheme di erent methods exist determining weight term document 
example method term frequency weight product term frequency weight inverse document frequency weight see section 
variations schemes exist salton 
systems distinguish di erent occurrences term boyan cutler wade di erent fonts term brin page :10.1.1.109.4049:10.1.1.41.9172
example occurrence term appearing title web page may considered important occurrence term appearing title 
query term weighting scheme vector space model text retrieval query considered special document short document typically possible term appear multiple times query 
di erent query term weighting schemes may utilize frequency term query di erently computing weight term query 
similarity function di erent search engines may employ di erent similarity functions measure similarity user query document 
popular similarity functions mentioned section similarity functions see example robertson singhal possible 
building ecient ective metasearch engines 
document database text databases di erent search engines may di er levels 
rst level domain subject area database 
example database may contain medical documents www uk may contain legal documents lp 
com 
case databases said di erent domains 
practice domain database may easily determined databases may contain documents multiple domains 
furthermore domain may divided multiple subdomains 
second level set documents 
databases domain sets documents databases substantially di erent disjoint 
example echidna medical search www com au www uk search engines medical information web pages australia united kingdom 
document version documents database may modi ed 
especially true world wide web environment web pages modi ed wish authors 
typically web page modi ed search engines indexed web page noti ed modi cation 
search engines robots detect modi ed pages re index 
due high cost enormous amount involved attempts revisit page periodically say week month 
result depending document fetched indexed representation search engine may older version newer version document 
local search engines autonomous highly di erent systems may indexed di erent versions document case www web page uniquely identi ed url 
result presentation search engines retrieval result descending order local similarities ranking scores 
search engines provide similarities returned documents www 
gov northern light altavista google 
addition heterogeneities component search engines heterogeneities metasearch engine local systems 
example metasearch engine uses global similarity function compute global similarities documents 
global similarity function di erent similarity functions component search engines 
impact heterogeneities subsection show autonomy heterogeneities di erent component search engines metasearch engine component search engines profound impact evaluate global queries metasearch engine 
order estimate usefulness database query database selector needs know information database characterizes contents database 
call characteristic information 
weiyi meng clement yu king lup liu database representative database 
metasearch engine environment di erent types database representatives di erent search engines may available metasearch engine 
cooperative search engines may provide database representatives desired database selector 
uncooperative search engines follow certain standard say proposed starts standard gravano database representatives may obtained information provided search engines document frequency average document term weight query term 
representatives may contain certain information desired particular database selector 
uncooperative search engines follow standard representatives may extracted past retrieval experiences savvysearch dreilinger howe sampled documents callan callan 
major challenges developing database selection algorithms 
identify appropriate database representatives 
representative permit fast accurate estimation database usefulness 
time representative small size comparison size database easy obtain maintain 
see section proposed database selection algorithms employ di erent types representatives 
second challenge develop ways obtain desired representatives 
mentioned number solutions exist depending search engine follows standard cooperative 
issue obtaining desired representatives discussed article 
challenges document selection problem result merging problem lie mainly fact document may di erent global local similarities query due various heterogeneities 
example query submitted global user document component database potentially useful depends global similarity highly similarity function term weighting scheme di erent global ones 
result local similarity di erent global similarity fact term weighting scheme similarity function locally globally global similarity local similarity may di erent similarity computation may certain database speci information document frequencies terms 
means globally highly ranked document may locally highly ranked document suppose globally top ranked document ranked th locally 
order retrieve local system may retrieve documents higher local similarity text retrieval systems generally incapable retrieving lower ranked documents rst retrieving higher ranked ones 
quite possible documents ranked higher locally potentially useful global similarities 
main challenge document selection develop methods maximize retrieval potentially useful documents minimizing retrieval useless documents component search engines 
main challenge result building ecient ective metasearch engines 
merging nd ways estimate global similarities documents documents returned di erent component search engines properly merged 
sections examine techniques proposed deal problems database selection document selection result merging 

database selection metasearch engine receives query user invokes database selector select component search engines send query 
database selection algorithm identify potentially useful databases accurately 
approaches proposed tackle database selection problem 
approaches di er database representatives indicate contents database measures indicate usefulness database respect query techniques employ estimate usefulness 
classify approaches categories 
rough representative approaches approaches contents local database represented selected key words paragraphs 
representative capable providing general idea database consequently database selection methods rough database representatives accurate estimating true usefulness databases respect query 
rough representatives manually generated 
statistical representative approaches approaches usually represent contents database detailed statistical information 
typically representative database contains statistical information term database document frequency term average weight term documents term 
detailed statistics allow accurate estimation database usefulness respect user query 
scalability approaches important issue due amount information needs stored database 
learning approaches approaches knowledge databases return useful documents types queries learned past retrieval experiences 
knowledge determine usefulness databases queries 
retrieval experiences obtained training queries database selection algorithm put real user queries database selection active 
obtained experiences database saved representative database 
subsections survey discuss di erent database selection approaches classi cation 
rough representative approaches mentioned earlier rough representative database uses key words sentences describe contents database 
capable providing general idea database 

weiyi meng clement yu king lup liu aliweb koster human generated representative xed format represent contents local database site 
example representative describe site containing les perl programming language follows www com site idx template type document title perl uri public perl perl html description information perl programming language 
includes local hypertext perl manual latest faq hypertext 
keywords perl perl faq language author handle koster uk user query matched representative component database determine suitable database query 
match elds title description representatives user choice 
component databases ranked closely match query 
user selects component databases search ranked list component databases database time 
note aliweb full blown metasearch engine allows users select database search time perform result merging 
similar aliweb descriptive representations contents component databases wais kahle 
query descriptions rank component databases similar query 
user selects component databases search desired documents 
wais local database searched time 
search broker manber manber database manually assigned words subject category keywords 
user query consists parts subject part regular query part 
query received system subject part query identify component search engines covering subject regular query part search documents identi ed search engines 
chakravarthy haase text description contents database transformed structured representative 
transformation performed manually wordnet miller transformation process disambiguate topical words 
example description world facts listed country world factbook archive transformed structured representation chakravarthy haase topic country synset nation nationality land country people synset state nation country land commonwealth res body synset country state land nation info type facts word wordnet synsets containing set building ecient ective metasearch engines 
synonyms de nes meaning 
topical word country synsets considered relevant 
synset rural area country meaning match intended meaning country description world facts listed country omitted 
user query sentence automatically converted structured disambiguated representation similar database representation combination techniques 
queries handled 
query representation matched representatives local databases order identify potentially useful databases chakravarthy haase 
rough database representatives generated human involvement exist automatically generated rough database representatives 
etzioni database represented vector terms weights 
terms obtained interface page search engine pages links search engine 
case content words interface page considered weights term frequencies 
case terms appear line link search engine weight term document frequency term number back link documents contributed term 
main appeal rough representative approaches representatives obtained relatively easily require little storage space 
component search engines highly specialized diversi ed topics contents easily summarized approaches may reasonably 
hand short description database represent database suciently comprehensively especially database contains documents diverse interests 
result missing potentially useful databases occur easily approaches 
alleviate problem approaches involve users database selection process 
example aliweb wais users nal decision databases select preliminary selections metasearch engine 
search broker users required specify subject areas queries 
users know component databases involvement database selection process easily useful databases 
rough representative approaches considered inadequate large scale metasearch engines 
statistical representative approaches statistical representative database typically takes term document database consideration keeps pieces statistical information term 
result done properly database selection approach employing type database representatives may detect existence individual potentially useful documents query 
large number approaches statistical representatives proposed 
subsection describe approaches 
wise approach 
wise web index search engine centralized search engine lee 
wise proposed metasearch engine 
weiyi meng clement yu king lup liu number underlying search engines distributed wise lee 
wise representative component search engine consists document frequency term component database number documents database 
representative database distinct terms contain quantities document frequencies cardinality database addition terms 
denote number documents th component database df ij document frequency term th database 
suppose user query 
representatives databases compute ranking score component search engine respect scores measure relative usefulness databases respect score database higher database database judged relevant database ranking scores computed follows 
cue validity query term say term th component database cv ij computed formula cv ij df ij df ij df kj nk total number component databases metasearch engine 
intuitively cv ij measures percentage documents th database contain term relative databases 
th database higher percentage documents containing comparison databases cv ij tends larger value 
variance cv ij query term component databases cv computed follows cv cv ij average cv ij component databases 
value cv measures skew distribution term component databases 
terms cv larger cv term useful distinguish di erent component databases term extreme case database percentage documents containing term term useful database selection cv term zero case 
ranking score component database respect query computed cv 
df ij number terms query 
seen ranking score database sum document frequencies query terms database weighted query term cv recall value cv term re ects distinguishing power term 
intuitively ranking scores provide clues useful query terms concentrated 
database building ecient ective metasearch engines 
useful query terms having higher percentage documents databases ranking score database high 
ranking scores databases computed respect query databases highest scores selected search query 
representative database wise contains quantity document frequency distinct term database plus additional quantity cardinality entire database 
result approach easily scalable 
computation simple 
problems approach 
ranking scores relative scores 
result dicult determine real value database respect query 
databases query rst ranked database little value 
hand databases query th ranked database useful 
relative ranking scores useful di erentiating situations 
second accuracy approach questionable approach distinguish document containing say occurrence term document containing occurrences term 
cori net approach 
collection retrieval inference network cori net approach callan representative database consists pieces information distinct term database document frequency database frequency 
number component databases containing term 
note term appears multiple databases database frequency needs stored metasearch engine save space 
cori net query document ranking technique known inference network turtle croft inquery document retrieval system callan extended rank component databases respect extension conceptual main idea visualize representative database super document set representatives collection database super documents 
explained 
representative database may conceptually considered super document containing distinct terms database 
term appears documents database repeat term times super document 
result document frequency term database term frequency term super document 
set super documents component databases metasearch engine form database super documents 
denote database super documents 
note database frequency term document frequency term representatives component databases obtain term frequency document frequency term super document 
principle 
term frequency weight times inverse document frequency weight formula compute weight term super document represent super document vector weights 
furthermore similarity function cosine function may compute similarities ranking scores super documents database representatives respect query similarities rank component databases 

weiyi meng clement yu king lup liu approach employed cori net inference network probabilistic approach 
cori net ranking score database respect query estimated belief database contains useful documents 
belief essentially combined probability database contains useful documents due query term 
speci cally belief computed follows 
suppose user query contains terms number databases metasearch engine 
df ij document frequency th term th component database dbf database frequency th term 
belief contains useful documents due th query term computed jd 
ij 
ij 
df ij df ij formula computing term frequency weight th term super document corresponding log dbf log formula computing inverse document frequency weight th term super documents 
formulas constants 

dw function size database constants dw number words average number words database 
values constants determined empirically performing experiments actual test collections callan 
note value jd essentially 
weight term super document corresponding database signi cance term representing query denoted estimated example query term weight belief database contains useful documents respect query ranking score respect estimated qjd 
jd cori net representative database contains slightly piece information term document frequency plus shared database frequency databases 
cori net approach scalability 
information representing component database obtained maintained easily 
advantage cori net approach method compute ranking score document query ranking score database database representative super document query 
shown xu callan building ecient ective metasearch engines 
phrase information collected stored database representative queries expanded technique called local context analysis xu croft cori net approach select useful databases accurately :10.1.1.49.3174
ggloss approach 
ggloss generalized glossary servers server system research prototype gravano garcia molina :10.1.1.31.1173
ggloss component database represented set pairs df df document frequency th term sum weights th term documents component database 
threshold associated query ggloss indicate documents similarities query higher threshold interest 
usefulness component database respect query ggloss de ned sum similarities documents component database query higher threshold associated query 
usefulness component database ranking score database 
ggloss estimation methods employed assumptions 
assumption database query term appears documents query term document containing term contains term disjoint assumption database terms set documents containing term disjoint set documents containing term 
discuss estimation methods component database suppose query associated threshold weight term high correlation case terms arranged ascending order document frequency df df df document frequency term means document containing contains df documents having similarity 
df general df df documents having similarity 
df df de ned 
integer satis es 
df 
df estimated usefulness database usefulness df df 

df 
df 

df disjoint case disjoint assumption document contain query term 
df documents contain term similarity df documents query 
df estimated usefulness database usefulness kj df 
df df 

df kj df 
df 

weiyi meng clement yu king lup liu ggloss usefulness database sensitive similarity threshold 
result ggloss di erentiate database moderately similar documents database highly similar documents 
possible wise cori net 
assumptions ggloss somewhat restrictive 
result estimated database usefulness may inaccurate 
shown threshold large estimation formula high correlation assumption tends overestimate usefulness estimation formula disjoint assumption tends underestimate usefulness 
estimates formulas tend form upper lower bounds true usefulness methods useful separately 
database size database representative ggloss twice size wise 
computation estimating database usefulness ggloss carried eciently 
estimating number potentially useful documents 
database usefulness measure number potentially useful documents respect query database 
measure useful search services charge fee search 
example chicago newspaper charges certain fee retrieving archival newspaper articles 
suppose fee independent number retrieved documents 
case user perspective component system contains large number similar documents necessarily similar documents preferable component system containing just similar documents 
hand fee charged retrieved document component system having similar documents preferred 
type charging policy incorporated database selector metasearch engine number potentially useful documents database respect query estimated 
component database sim global similarity query document similarity threshold 
number potentially useful documents respect de ned precisely follows cardinality sim tg accurately estimated database respect query database selector simply select databases potentially useful documents search query 
meng generating function method proposed estimate global similarity function dot product function widely cosine function special case dot product function term weight divided document query length 
method representative database distinct terms consists pairs probability term appears document note simply document frequency term database divided number documents database average weights set documents containing query vector building ecient ective metasearch engines 
query weight query term consider generating function 
wk qk generating function expanded terms combined obtain 
bc shown terms independent weight term document database representative probability document database similarity meng 
database contains documents expected number documents similarity query similarity threshold largest integer satisfy estimated formula solution restrictive assumptions 
rst term independence assumption second uniform term weight assumption weights term documents containing term average weight 
assumptions reduce accuracy database usefulness estimation 
way address term independence assumption utilize covariances term pairs term triplets incorporate generating function meng 
problem approach storage overhead representing component database may large large number covariances may associated component database 
remedy signi cant covariances absolute values signi cantly greater zero 
way incorporate dependencies terms combine certain adjacent terms single term liu 
similar recognizing phrases 
meng method known subrange estimation method proposed deal uniform term weight assumption 
method partitions actual weights term set documents having term number disjoint subranges possibly di erent lengths 
subrange median weights subrange estimated assumption weight distribution term normal standard deviation weights term needs added database representative 
weights fall subrange approximated median weights subrange 
weight approximation query containing term polynomial generating function replaced polynomial wm wm 
il wm il 
weiyi meng clement yu king lup liu ij probability term occurs document weight th subrange wm ij median weights th subrange number subranges 
generating function obtained rest estimation process identical described earlier 
shown meng maximum normalized weight term highest subrange estimation accuracy database usefulness drastically improved 
methods liu meng meng able produce accurate estimation large storage overhead 
furthermore computation complexity expanding generating function exponential 
result suitable short queries 
estimating similarity similar document 
useful measure global similarity similar document database respect query 
hand measure indicates best expect database documents database higher similarities query 
hand query measure rank databases optimally retrieving similar documents databases 
suppose user wants metasearch engine nd similar documents query component databases dm de nition de nes optimal order databases query 
definition 
set databases said optimally ranked order dm respect query exists contain similar documents contains similar documents 
intuitively ordering optimal similar documents query desired sucient examine rst databases 
necessary sucient condition databases dm optimally ranked order dm respect query dm yu global similarity similar document database query knowing optimal rank databases respect query database selector select top ranked databases search challenge estimate query database method utilize expression scan expression descending order exponents approximately number documents exponent estimate expected number documents similarity greater equal approximately 
drawback solution requires large database representative computation high complexity 
ecient method estimate proposed yu 
method types representatives 
global representative component databases 
distinct term global inverse document frequency weight stored representative 
local representative component database distinct term pair quantities stored maximum building ecient ective metasearch engines 
normalized weight average normalized weight term respectively 
suppose weight document normalized weight jdj jdj denotes length maximum normalized weight average normalized weight database respectively maximum average normalized weights documents suppose query vector 
estimated follows max jqj intuition having estimate similar document database maximum normalized weight th query term yields rst half expression braces 
query terms document takes average normalized weight 
yields second half 
maximum taken similar document may maximum normalized weight query terms 
normalization query length jqj yields value equal 
underlying assumption formula terms query independent 
dependencies terms captured certain extent storing statistics phrases database representatives treating phrase term 
method database represented quantities term plus global representative shared databases computation linear complexity 
maximum normalized weight term typically orders magnitude larger average normalized weight term computed documents including containing term 
observation implies formula query terms tf weight reasonable assumption typical query term appears dominate especially number terms query small typically true internet environment jansen kirsch 
words rank database respect query largely determined value max leads scalable formula estimate wu max fq am jqj am adjusted maximum normalized weight term formula requires piece information am kept database representative distinct term database 
learning approaches approaches predict usefulness database new queries retrieval experiences database past queries 
retrieval experiences may obtained number ways 
training queries 
weiyi meng clement yu king lup liu retrieval knowledge component database respect training queries obtained advance database selector enabled 
type approach called static learning approach approach retrieval knowledge learned changed 
weakness static learning adapt changes database contents query pattern 
second real user queries contrast training queries retrieval knowledge accumulated gradually updated continuously 
type approach referred dynamic learning approach 
problem dynamic learning may take obtain sucient knowledge useful database selector 
third static learning dynamic learning combined form combined learning approach 
approach initial knowledge may obtained training queries knowledge updated continuously real user queries 
overcome weaknesses learning approaches 
subsection introduce learning database selection methods 
approach 
modeling relevant document distribution approach voorhees static learning approach 
learning set training queries utilized 
training query submitted component database 
returned documents database query relevant documents identi ed vector re ecting distribution relevant documents obtained stored 
speci cally vector format positive integer indicating top ranked documents retrieved database order obtain relevant documents query 
example suppose training query component database documents retrieved order 
documents identi ed relevant 
corresponding distribution vector 
vectors training queries databases obtained database selector ready select databases user queries 
user query received compared training queries similar training queries identi ed performed reported voorhees 
database average relevant document distribution vector vectors corresponding similar training queries obtained 
average distribution vectors select databases search documents retrieve 
selection tries maximize precision recall point 
example 
suppose query average distribution vectors obtained component databases consider case relevant documents retrieved 
maximize precision reduce retrieval irrelevant documents document retrieved documents retrieved supposed relevant 
words databases selected 
selection yields precision building ecient ective metasearch engines 
retrieved documents relevant 
approach representative component database set distribution vectors training queries 
main weakness approach learning carried manually training query 
addition may dicult identify appropriate training queries learned knowledge may accurate contents component databases change 
savvysearch approach 
savvysearch www search com metasearch engine employing dynamic learning approach 
savvysearch dreilinger howe ranking score component search engine respect query computed past retrieval experience terms query 
speci cally search engine weight vector wm maintained database selector corresponds th term database search engine 
initially weights zero 
query containing term retrieve documents component database weight adjusted retrieval result 
document returned search engine weight reduced number terms query 
hand returned document read clicked user relevance judgement needed user weight increased intuitively large positive indicates database responded term past large negative indicates responded poorly savvysearch tracks performance search engine terms average number documents returned queries average response time queries sent component search engine 
threshold default penalty search engine computed 
similarly average response time greater threshold default seconds penalty computed seconds maximum allowed response time timeout 
new query terms ranking score database computed 
log jw log inverse database frequency weight term number databases number databases having positive weight value term overhead storing representative information local search engine savvysearch moderate essentially just piece information term weight 
terms previous queries need considered 
moderate ort needed maintain information 
weakness savvysearch new query terms query 
weiyi meng clement yu king lup liu terms times 
addition user feedback process employed savvysearch rigorous easily lead cation useful databases 
search engine users may tendency check top ranked documents queries regardless documents useful 
means term weights database representative easily modi ed way consistent meaning weights 
result possible weight term database suciently re ect database respond term 
profusion approach 
profusion www profusion com metasearch engine employing combined learning approach 
profusion fan gauch gauch pre set categories utilized learning process 
categories science engineering computer science travel medical biotechnology business finance social religion society law government animals environment history recreation entertainment art music food 
set terms associated category re ect topic category 
category set training queries identi ed 
reason categories dedicated training queries learn component database respond queries di erent categories 
category component database associated training query submitted top retrieved documents relevant documents identi ed 
score re ecting performance respect query category computed constant set th ranked document relevant set document relevant number relevant documents retrieved documents 
seen formula captures rank order relevant document precision top retrieved documents 
scores training queries associated category averaged database average con dence factor database respect category 
training con dence factor database respect categories 
user query received metasearch engine rst mapped categories 
query mapped category term belongs set terms associated databases ranked sum con dence factors database respect mapped categories 
sum con dence factors database respect called ranking score database profusion databases largest ranking scores selected search query 
profusion documents retrieved selected search engines ranked product local similarity document ranking score database 
database rst document read clicked user 
top ranked document ranking score increased ranking scores databases documents ranked higher reduced 
carried proportionally adjusting con dence factors mapped categories 
example suppose query building ecient ective metasearch engines 
database categories selected corresponding con dence factors respectively 
increase ranking score database con dence factors increased respectively 
ranking score adjustment policy tends move higher rank query processed 
rationale policy ranking scores perfect top ranked document rst read user 
profusion combines static learning dynamic learning result overcomes problems associated employing static learning dynamic learning 
profusion shortcomings 
static learning part done manually selecting training queries identifying relevant documents carried manually 
second higher ranked documents database rst clicked document remain higher ranked documents adjustment con dence factors interest user 
situation learning strategy help retrieve better documents repeating query 
third employed dynamic learning method simplistic 
example little user feedback information users tendency selecting highest ranked document regardless relevance document taken consideration 
way alleviate problem rst clicked document read signi cant amount time 

document selection database selector chosen component databases query task determine documents retrieve selected database 
naive approach selected component search engine return documents retrieved search engine 
problem approach documents may retrieved component systems unnecessarily 
result approach lead higher communication cost require ort result merger identify best matched documents 
naive approach discussed section 
noted previously component search engine typically retrieves documents descending order local similarities 
consequently problem selecting documents retrieve component database translated problems determine number documents retrieve component database 
documents retrieved component database documents largest local similarities retrieved 
determine local threshold component database document component database retrieved local similarity query exceeds threshold 
problems tackled existing proposed metasearch engines 
problem goal retrieve possible potentially useful documents component database minimizing retrieval useless documents 
classify proposed approaches document selection problem categories 

weiyi meng clement yu king lup liu user determination metasearch engine lets global user determine documents retrieve component database 
weighted allocation number documents retrieve component database depends ranking score rank component database relative ranking scores ranks component databases 
result proportionally documents retrieved component databases ranked higher higher ranking scores 
learning approaches approaches determine number documents retrieve component database past retrieval experiences component database 
guaranteed retrieval type approach aims guaranteeing retrieval potentially useful documents respect query 
subsections survey discuss approaches categories 
user determination metacrawler selberg etzioni selberg etzioni savvysearch dreilinger howe maximum number documents returned component database customized user :10.1.1.56.6895:10.1.1.56.6895
di erent numbers di erent queries 
user select number query independent default number set metasearch engine 
approach may reasonable number component databases small user reasonably familiar 
case user choose appropriate number documents retrieve component database ord 
number component databases large method serious problem 
case user capable selecting appropriate number component database 
consequently user forced choose number apply number selected component databases 
numbers useful documents di erent databases respect query di erent method may retrieve useless documents component systems hand retrieving useful documents component systems hand 
documents retrieved selected databases number documents retrieve database may set slightly higher 
weighted allocation query component database rank st nd 
ranking score determined database selection algorithm 
rank information ranking score information determine number documents retrieve di erent component systems 
principle weighted allocation approaches attempt retrieve documents component search engines ranked higher larger ranking scores 
wise lee ranking score information 
query ranking score component database number selected component databases query 
suppose building ecient ective metasearch engines 
documents selected component databases desired 
number documents retrieve database 
cori net callan rank information 
speci cally total number documents retrieved component databases 
documents retrieved th ranked component database note 
cori net chosen larger number desired documents speci ed global user order reduce likelihood missing useful documents 
special case weighted allocation approach ranking score component database estimated number potentially useful documents database ranking score component database number documents retrieve database 
weighted allocation reasonably exible easy implement approach intuition retrieve documents highly ranked local databases 
learning approaches possible learn documents retrieve component database query past retrieval experiences similar queries 
learning approaches towell voorhees voorhees voorhees voorhees tong 
section introduced learning method modeling relevant document distribution database selection 
fact method combines selection databases determination documents retrieve databases 
query average distribution vectors obtained databases decision documents retrieve databases maximize precision 
example relevant documents desired databases method retrieves top document database top documents 
second method qc query clustering performs document selection past retrieval experiences 
set training queries utilized 
training phase component database training queries grouped number clusters 
queries placed cluster number common documents retrieved queries large 
centroid query cluster computed averaging vectors queries cluster 
furthermore component database weight computed cluster average number relevant documents top retrieved documents performed reported voorhees query query cluster 
database weight cluster indicates database responds queries cluster 
user query received component database query cluster centroid similar query selected 
weights associated selected query clusters databases determine number documents retrieve database 
suppose weight associated selected query cluster component database total number documents desired 

weiyi meng clement yu king lup liu number documents retrieve database 
number component databases 
seen method essentially weighted allocation method weight database query learned weight selected query cluster database 
user queries similar training queries approaches may produce results 
approaches serious weaknesses may prevent widely 
may suitable environments new component search engines may frequently added metasearch engine new training needs conducted new search engine added 
second may easy determine training queries appropriate 
hand similar training queries potential user query 
hand having training queries consume lot resources 
third time consuming users identify relevant documents wide variety training queries 
guaranteed retrieval similarity function component database may di erent metasearch engine possible document low local similarity high global similarity vice versa 
fact global local similarity functions identical scenario regarding local global similarities may occur due database speci statistical information functions 
example document frequency term component system probably di erent systems global document frequency 
consequently component system returns documents high local similarities globally potentially useful documents determined global similarities component database may missed 
guaranteed retrieval approach tries ensure globally potentially useful documents retrieved global local document similarities match 
note approaches earlier subsections belongs guaranteed retrieval category take global similarities consideration 
applications especially medical legal fields desire retrieve documents cases similar query case 
applications guaranteed retrieval approaches minimize retrieval useless documents appropriate 
subsection introduce proposed techniques guaranteed retrieval category 
query modi cation 
certain conditions global query modi ed submitted component database yield global similarities returned documents 
technique called query modi cation meng 
essentially query translation method vector queries 
clearly component system returning documents descending order global similarities guaranteeing retrieval globally similar documents trivial 
component database 
consider case local global similarity functions cosine function salton mcgill 
note similarity function globally locally building ecient ective metasearch engines 
document may di erent global local similarities due di erent local global document frequencies terms 
weight vector document suppose computed information term frequency query may term frequency inverse document frequency information 
idf information term incorporated similarity computation modifying query processed buckley 
consider user query weight term query assumed assigned user computed term frequency query 
component system receives query rst incorporates local idf weight query term modifying query evaluates modi ed query local idf weight term component system result cosine function local similarity computed simd jq 
jdj jq jdj lengths respectively 
global idf weight term cosine function global similarity jq 
jdj 
order trick component system computing global similarity procedure 
query received metasearch engine rst modi ed 
modi ed query sent component database evaluation 
receives modi es evaluated compute global similarity unfortunately query modi cation technique combinations local global similarity functions 
general need deal situations documents di erent local global similarities 
furthermore approach requires knowledge similarity function term weighting formula component system 
information proprietary may easily available 
study discovering information sampling queries reported liu 
computing tightest local threshold 
query suppose metasearch engine sets threshold uses global similarity function document satis es retrieved document considered potentially useful 
problem determine proper threshold selected component database potentially useful documents exist retrieved local similarity function document note order guarantee potentially useful documents retrieved unwanted documents may retrieved 
challenge minimize number documents retrieve guaranteeing potentially useful documents retrieved 
words desirable determine tightest largest local threshold 
weiyi meng clement yu king lup liu gravano garcia molina shown similarities computed related inequality constant satisfying local threshold determined 
local threshold determined method gravano garcia molina tight 
meng techniques proposed nd tightest local threshold popular similarity function pairs 
global similarity threshold denote tightest local threshold component database way determine follows 
find function minimum local similarity function documents subject 
step xed varies possible documents 
minimize range minimum desired 
ft set terms query di erentiable respect weight term document nding step generally achieved method lagrange calculus 
minimum value range usually computed easily 
particular non decreasing simply 
example illustrates method 
example 
document query 
global similarity function 
local similarity function known norm salton mcgill 
step nd requires minimize subject 
lagrange method 
function increasing function global threshold tightest local threshold 
method may provide tightest local threshold certain combinations local global similarity functions weaknesses 
separate solution needs di erent pair similarity functions clear solution 
second required local similarity function known 

result merging provide local system transparency global users results returned component search engines combined single result 
ideally documents merged result ranked descending order global similarities 
ideal merge hard achieve due various heterogeneities component systems 
usually documents returned component search engine ranked documents local ranking scores similarities 
component search engines local similarities returned documents available user search engines available 
example google altavista provide local similarities northern light 
local similarities returned di erent building ecient ective metasearch engines 
component search engines available may incomparable due heterogeneities search engines 
furthermore local similarities global similarities document may quite di erent 
challenge merge documents returned di erent search engines single ranked list reasonable manner absence local similarities presence incomparable similarities 
complication problem documents may returned multiple component search engines 
question ect ranking documents 
existing result merging approaches classi ed types 
local similarity adjustment type approaches adjusts local similarities additional information quality component databases 
variation convert local document ranks similarities 
global similarity estimation type approaches attempts compute estimate true global similarities returned documents 
rst type usually easier implement merged ranking may inaccurate merge true global similarities returned documents 
second type rigorous potential achieve ideal merging 
typically needs information local systems 
types approaches discussed subsections 
local similarity adjustment cases identi ed depending degree overlap selected databases query 
case databases pair wise disjoint nearly disjoint 
occurs disjoint special purpose search engines minimal overlap selected 
case selected databases overlap identical 
example situation general purpose search engines selected 
case databases identical 
case usually occur metasearch engine environment 
occurs multiple ranking techniques applied collection documents order improve retrieval ectiveness 
result merging problem case known data fusion vogt cottrell :10.1.1.50.9938
data fusion studied extensively decade 
special property data fusion problem document ranked scored employed ranking technique 
number functions proposed combine individual ranking scores document including min max average sum weighted average linear combination functions cottrell belew fox shaw lee vogt cottrell :10.1.1.50.9938:10.1.1.52.5586
ective functions data fusion known combmnz document sums individual scores multiplies sum number non zero scores lee 
function emphasizes documents ranked high multiple systems 
data fusion techniques surveyed croft 

weiyi meng clement yu king lup liu consider scenarios metasearch engine context selected databases identical 
rst consider case selected databases disjoint 
case returned documents unique 
rst assume returned documents local similarities attached 
possible di erent search engines normalize local similarities di erent ranges 
example search engine may normalize similarities search engine 
case local similarities re normalized common range say improve comparability local similarities dreilinger howe selberg etzioni :10.1.1.56.6895:10.1.1.56.6895
assume local similarities normalized common range 
database selection performed query usefulness quality database estimated represented score 
database scores adjust local similarities 
idea give preference documents highly ranked databases 
cori net callan adjustment works follows 
ranking score component database average scores databases searched 
weight assigned 
number component databases searched query 
clearly greater 
furthermore larger di erence larger weight 
hand smaller 
larger di erence smaller weight 
local similarity document adjusted similarity computed 
result merger lists returned documents descending order adjusted similarities 
way weight database computed clear documents higher ranked databases better chance ranked higher merged result 
similar method profusion gauch 
query ranking score calculated database see discussion profusion section 
adjusted similarity document database product local similarity ranking score consider situation local similarities returned documents component search engines available 
case approaches applied tackle merging problem 
assume document returned multiple search engines returned documents unique 
local document rank information directly perform merge 
local similarities available ignored approach 
searched databases arranged descending order usefulness quality scores obtained database selection step 
round robin method database order local document rank order merge local document lists 
speci cally rst document merged list top ranked document highest ranked database second document merged list top ranked document second highest ranked database 
top ranked documents searched databases selected document merged list second highest ranked document highest ranked database process con building ecient ective metasearch engines 
desired number documents included merged list 
weakness solution take consideration di erences database scores order information utilized randomized version method proposed voorhees 
recall database selection method rst determine documents retrieve component database query maximize precision retrieval 
suppose desired number documents retrieved selected component database local document lists obtained number selected component databases 
local document list database select document placed merged list rolling dice simulated 
dice faces corresponding local lists 
suppose total number documents selected documents list dice biased probability face corresponding dice rolled face current top ranked document list selected highest ranked document merged list 
selection selected document removed reduced 
probabilities updated accordingly 
way retrieved documents ranked probabilistic model 
convert local document ranks similarities 
wise lee method employed 
query suppose ranking score database min lowest database ranking score min minfr local rank document database converted similarity document 
conversion function 
de ned min 
number documents desired searched databases 
intuitively conversion function properties 
top ranked documents local systems converted similarity 
implies top ranked documents local systems considered equally potentially useful 
second model distance converted similarities consecutively ranked documents database words di erence converted similarities th th ranked documents database distance larger databases smaller ranking scores 
result rank document higher rank database rank document lower rank database top ranked converted similarity higher addition method tends select documents databases higher scores merged result 
example consider databases suppose 
furthermore suppose documents desired 
min 
conversion function top ranked documents converted similarities respectively top ranked documents converted similarities respectively 
result merged 
weiyi meng clement yu king lup liu list contain documents document documents ranked descending order converted similarities merged list 
consider situation selected databases overlap 
documents returned single search engine discussed similarity adjustment techniques applied 
consider deal documents returned multiple search engines 
local similarity adjusted techniques discussed 
adjusted similarities document combined certain way produce adjusted similarity document 
combination carried utilizing combination functions proposed data fusion 
practiced metasearch engines 
example max function profusion gauch sum function metacrawler selberg etzioni :10.1.1.56.6895:10.1.1.56.6895
pointed ective combination function data fusion may necessarily ective metasearch engine environment 
data fusion document retrieved retrieval technique document considered useful technique 
contrast metasearch engine possible reasons document retrieved selected search engine 
rst data fusion case document considered suciently useful search engine 
second document indexed search engine 
case document chance judged usefulness search engine 
clearly document retrieved due second reason put disadvantage combination function sum combmnz 
finding ective combination function metasearch engine environment area needs research 
global similarity estimation certain conditions possible compute estimate global similarities returned documents 
methods reported 
document fetching 
document returned search engine typically means url document returned 
additional information associated document short summary rst couple sentences returned 
document typically returned 
document fetching method downloads returned documents local servers computes estimates global similarities metasearch engine 
consider case global similarity function cosine function global document frequency term known metasearch engine note local databases little overlap global document frequency term computed approximated sum local document frequencies term 
document downloaded term frequency term document obtained 
result statistics needed compute global similarity document available global similarity computed 
inquirus metasearch engine ranks documents returned di erent search engines analyzing contents downloaded documents building ecient ective metasearch engines 
ranking formula combines similarity proximity matches employed lawrence lee giles 
document fetching method combines document selection result merging reported yu 
suppose similar documents databases respect query desired positive integer section introduced method rank databases descending order similarity similar document database query 
rank optimal rank retrieving similar documents 
rank perform document selection follows 
small positive integer start top ranked databases searched obtain actual global similarity similar document 
may require downloading documents databases 
min sim minimum similarities 
databases retrieve documents actual global similarities greater equal tentative threshold min sim 
tightest local threshold databases determined 
documents retrieved process stops 
top ranked database th ranked database considered similar document retrieved 
actual global similarity document compared min sim minimum similarities new global threshold retrieve documents databases actual global similarities greater equal threshold 
process repeated documents retrieved 
retrieved documents ranked descending order actual global similarities 
potential problem approach database may searched multiple times 
problem relieved extent retrieving caching larger number documents searching database 
method properties yu 
databases ranked optimally similar documents retrieved accessing unnecessary database second single term query optimal rank databases achieved result similar documents retrieved 
downloading documents analyzing expensive undertaking especially number documents downloaded large documents large sizes 
number remedies proposed 
downloading di erent local systems carried parallel 
second documents analyzed rst displayed user analysis done user reads initial results lawrence lee giles 
initially displayed results may correctly ranked rank needs adjusted documents analyzed 
third may consider downloading portion large document analyze craswell :10.1.1.21.3080
hand downloading approaches clear advantages lawrence lee giles 
trying download documents obsolete urls identi ed 
result documents dead urls removed nal result list 
second analyzing downloaded documents documents ranked current contents 
contrast local similarities 
weiyi meng clement yu king lup liu may computed old versions documents 
third query terms downloaded documents highlighted displayed user 
discovered knowledge 
discussed previously diculty result merging local document similarities may incomparable di erent component search engines documents may indexed di erently similarities may computed di erent methods term weighting schemes similarity functions 
speci document indexing similarity computation methods di erent component search engines discovered example techniques proposed liu better position gure local similarities reasonably comparable adjust local similarities comparable derive global similarities local similarities 
illustrated example meng 
example 
suppose discovered component search engines selected answer user query employ methods index local documents compute local similarities collection dependent statistics idf information similarities local search engines considered comparable 
result similarities directly merge returned documents 
di erence component search engines remove stopwords stopword lists di erent query may adjusted generate comparable local similarities 
instance suppose term query stopword component search engine stopword component search engine order generate comparable similarities remove submit modi ed query matter original modi ed submitted 
idf information need adjust local similarities compute global similarities directly overcome problem global idf local term may di erent 
consider cases 
assumed local similarity function global similarity function cosine function 
case query consists single term similarity document component database computed sim qtf jqj 
jdj qtf tf weights term respectively local idf weight local idf formula discovered global document frequency known local similarity adjusted global similarity multiplying global idf weight case query multiple terms global similarity case building ecient ective metasearch engines 
qtf jqj 
jdj qtf jqj jdj 
clearly qtf jqj computed metasearch engine formulas computing known 
order nd need nd jdj nd jdj term downloading document submit single term query 
sim qtf jt 
jdj local similarity returned 
jdj jt qtf note expression right hand side formula computed metasearch engine local formulas known discovered 
summary additional single term queries compute global similarities documents retrieved 
new challenges discussed previous sections progress nd ecient accurate solutions problem processing queries metasearch engine environment 
emerging area outstanding problems remain solved 
section list worthwhile challenges area 
integrate local systems employing di erent indexing techniques 
di erent indexing techniques di erent local systems serious impact compatibility local similarities 
careful observation reveal di erent indexing techniques fact ect estimation accuracy software components database selection document selection result merging 
new studies need carried investigate precisely impact poses overcome alleviate impact 
previous studies largely focused di erent local similarity functions local term weighting schemes 
integrate local systems supporting di erent types queries boolean queries versus vector space queries 
discussions article queries vector space model salton mcgill 
exist metasearch engines boolean queries french li danzig number works dealing boolean queries metasearch engine reported gravano li danzig sheldon 
di erent methods may rank documents boolean queries traditional boolean retrieval systems rank retrieved documents vector space queries face 
weiyi meng clement yu king lup liu new problems integrating local systems support boolean queries vector space queries 
discover knowledge component search engines 
local systems willing provide sucient design statistical information systems 
consider information proprietary 
su cient information local system estimation usefulness local system respect query may accurately 
possible solution dilemma develop tools learn local system regarding indexing terms certain statistical information terms similarity function probe queries 
learning knowledge discovering tools facilitate addition new component search engines existing metasearch engine detection major upgrades changes existing component systems 
preliminary area started reported 
sampling technique generate approximate database representatives cori net reported callan 
liu technique proposed discover term weights assigned component search engines 
new techniques need developed discover knowledge component search engines accurately eciently 
develop ective result merging methods 
result merging methods gone extensive experimental evaluation proposed data fusion 
methods may unsuitable metasearch engine environment databases di erent component search engines identical 
new methods take consideration special characteristics metasearch engine environment need designed evaluated 
special characteristic document retrieved search engine may document indexed search engine 
extreme ways build metasearch engine 
impose interface top autonomous component search engines 
case cooperation local systems expected 
invite local systems join metasearch engine 
case developer metasearch engine may set conditions similarity function information component databases provided satis ed local system join metasearch engine 
possibilities exist extremes 
means practical environment di erent types database representatives available metasearch engine 
di erent types database representatives estimate comparable database largely untouched problem 
interesting issue come guidelines information local systems useful facilitate construction metasearch engine 
search engine developers may guidelines design upgrade search engines 
multiple levels compliance allowed di erent compliance levels guaranteeing di erent levels estimation accuracy 
serious initial ort regard gravano 
building ecient ective metasearch engines 
new indexing term weighting techniques developed search engines html documents 
example search engines wwww mcbryan google brin page cutler anchor terms web page index web page hyperlinked url associated anchor :10.1.1.109.4049
rationale authors web pages add hyperlink web page include anchor tag description addition url 
descriptions potential important retrieval include perception authors contents example search engines compute weight term position web page font type 
wade weight term page increased term appears title page 
similar method employed altavista hotbot yahoo 
google brin page assigns higher weights terms larger bold fonts :10.1.1.109.4049
known occurrences proximities terms signi cant uence relevance documents 
interesting problem incorporate new techniques entire retrieval process database representatives better metasearch engines built 
improve ectiveness metasearch 
existing techniques rank databases documents similarities query documents database 
similarities computed match terms query documents 
studies information retrieval indicate queries large number terms correlation highly similar documents relevant documents exists provided appropriate similarity functions term weighting schemes cosine function weight formula 
queries short typical internet environment jansen kirsch correlation weak 
reason long query terms query provide context help disambiguate meanings di erent terms 
short query particular meaning term identi ed correctly 
summary similar document short query may useful user submitted query matching terms may di erent meanings 
clearly problem exists search engines 
methods need developed address issue 
promising ideas 
incorporate importance document determined linkages documents pagerank page authority kleinberg similarity document query yu :10.1.1.120.3875:10.1.1.120.3875:10.1.1.31.1768:10.1.1.31.1768
second associate databases concepts fan gauch ipeirotis meng 
query received metasearch engine rst mapped number appropriate concepts databases associated mapped concepts database selection 
concepts associated database query provide contexts terms database query 
result meanings terms accurately determined 
third user pro les may utilized support personalized metasearch 
fourth collaborative ltering cf shown ective recommending useful documents konstan employed directhit search engine 
weiyi meng clement yu king lup liu www directhit com 
cf technique may useful recommending databases search query 
section identi ed major software components building metasearch engine 
issue discussed components placed 
implicit assumption article components placed site metasearch engine 
valid alternatives exist 
example having database selector global site distribute local sites 
representative local database stored locally 
scenario user query dispatched local sites database selection 
site estimates usefulness database respect query determine local search engine invoked query 
placement database selector incur higher communication cost appealing advantages 
estimation database usefulness carried parallel 
database representatives stored locally scalability issue signi cant centralized database selection employed 
components document selector may alternative placements 
need investigate pros cons di erent placements software components 
new research issues may arise investigations 
urgent need create testbed evaluate proposed techniques database selection document selection result merging 
papers report techniques include experimental results hard draw general results due limitations documents queries 
studies various portions old trec collections conduct experiments callan voorhees xu callan information relevance documents query utilized 
old trec collections limitations 
number queries di erent portions trec collections small 
second queries tend longer average typical queries encountered internet environment abdulla jansen 
third documents re ect structured extensively hyperlinked web documents 
gravano garcia molina meng meng yu collection real internet queries :10.1.1.31.1173
database collection small document relevance information 
ideal testbed large collection databases various sizes contents structures large collection queries various lengths relevant documents query identi ed 
testbed partitioning old trec collections hundreds databases proposed evaluating metasearch techniques french french 
testbed far ideal due problems inherited trec collections 
new trec collections consisting web documents wt vlc wt gb subset gb vlc created 
test queries typical internet queries 
possible testbeds derived building ecient ective metasearch engines 

information sources web contain multimedia data text image video 
metasearch deals text sources text aspect multimedia sources 
database selection techniques investigated media types 
example selecting image databases metasearch context studied chang 
example data sources described attributes book title author name necessary sucient condition ranking databases optimally kirk 
database selection method liu considered data sources structured data 
lack research providing metasearch capabilities mixed media multimedia sources 
list challenges means complete 
new problems arise deeper understanding issues metasearch 

increase number search engines digital libraries world wide web providing easy ecient ective access text information multiple sources increasingly necessary 
article overview existing metasearch techniques 
overview concentrated problems database selection document selection result merging 
wide variety techniques problems surveyed analyzed 
discussed causes problems challenging 
causes include various heterogeneities di erent component search engines due independent implementations search engines lack information implementations proprietary 
survey investigation indicate better solutions main problems database selection document selection result merging require information knowledge component search engines detailed database representatives underlying similarity functions term weighting schemes indexing methods 
currently suciently ecient methods nd information cooperation underlying search engines 
possible scenario need solutions di erent degrees knowledge local search engine apply solutions accordingly 
important issue scalability solutions 
ultimately need develop solutions scale orthogonal dimensions data access 
speci cally solution scale thousands databases containing millions documents millions accesses day 
proposed solutions evaluated conditions 
acknowledgments supported part nsf iis iis eia 
grateful anonymous reviewers editor michael franklin article invaluable suggestions constructive comments 
leslie lander reading 
weiyi meng clement yu king lup liu manuscript providing suggestions improved quality manuscript 
abdulla liu saad fox 
characterizing world wide web queries 
technical report tr virginia tech 


probabilistic model distributed information retrieval 
proceedings acm sigir conference philadelphia pa july pp 

bergman 
deep web surfacing hidden value 
www com tutorials index asp 
boyan freitag joachims 
machine learning architecture optimizing web search engines 
aaai workshop internet information systems portland oregon 
brin page 
anatomy large scale hypertextual web search engine 
proceedings seventh world wide web conference brisbane australia april pp 

buckley salton allan 
automatic retrieval locality information smart 
proceedings text retrieval conference nist special publication march pp 

callan 
distributed information retrieval 
advances information retrieval research center intelligent information retrieval edited bruce croft 
kluwer academic publishers pp 

callan connell du 
automatic discovery language models text databases 
proceedings acm sigmod conference philadelphia pa june pp 

callan croft harding 
inquery retrieval system 
proceedings third dexa conference valencia spain pp 

callan lu croft 
searching distributed collections inference networks 
proceedings acm sigir conference seattle july pp 

chakrabarti dom kumar raghavan rajagopalan tomkins gibson kleinberg 
mining web link structure 
ieee computer august 
chakravarthy haase 
semantic knowledge nd internet information archives 
proceedings acm sigir conference seattle july pp 

chang garcia molina 
mind vocabulary query mapping heterogeneous information sources 
proceedings acm sigmod conference philadelphia pa june pp 

chang murthy zhang 
global integration visual databases 
proceedings ieee international conference data engineering orlando florida february pp 

cottrell belew 
automatic combination multiple ranked retrieval systems 
proceedings acm sigir conference dublin ireland july pp 

craswell hawking thistlewaite 
merging results isolated search engines 
proceedings tenth australasian database conference auckland new zealand january pp 

croft 
combining approaches information retrieval 
advances information retrieval research center intelligent information retrieval edited bruce croft 
kluwer academic publishers pp 

cutler shih meng 
structures html documents improve retrieval 
proceedings usenix symposium internet technologies systems monterey california december pp 

building ecient ective metasearch engines 
dreilinger howe 
experiences selecting search engines metasearch 
acm transactions information systems july 
fan gauch 
adaptive agents information gathering multiple distributed information sources 
proceedings aaai symposium intelligent agents cyberspace stanford university march pp 

fox shaw 
combination multiple searches 
proceedings second text retrieval conference gaithersburg maryland august pp 

french fox selman 
wide area technical report service technical report online 
communications acm april 
french powell callan viles prey mou 
comparing performance database selection algorithms 
proceedings acm sigir conference berkeley ca august pp 

french powell viles 
evaluating database selection techniques testbed experiment 
proceedings acm sigir conference melbourne australia august pp 

gauch wang gomez 
profusion intelligent fusion multiple distributed search engines 
journal universal computer science 
gravano chang garcia molina paepcke 
starts stanford proposal internet meta searching 
proceedings acm sigmod conference tucson arizona may pp 

gravano garcia molina 
generalizing gloss vector space databases broker hierarchies 
proceedings international conferences large data bases zurich switzerland september pp 

gravano garcia molina 
merging ranks heterogeneous internet sources 
proceedings international conferences large data bases athens greece august pp 

gravano garcia molina tomasic 
ectiveness gloss text database discovery problem 
proceedings acm sigmod conference minneapolis minnesota may pp 

hawking thistlewaite 
methods information server selection 
acm transactions information systems january 
ipeirotis gravano sahami 
probe count classify categorizing hidden web databases 
proceedings acm sigmod conference santa barbara pp 

jansen spink bateman saracevic 
real life information retrieval study user queries web 
acm sigir forum 
kahle 
information system corporate users wide area information servers 
technical report tmc thinking machine april 
kirk levy sagiv srivastava 
information manifold 
aaai spring symposium information gathering distributed heterogeneous environments 
kirsch 
internet search infoseek experiences searching internet 
acm sigir forum 
kleinberg 
authoritative sources hyperlinked environment 
proceedings acm siam symposium discrete algorithms san francisco california january pp 

konstan miller maltz herlocker gordon riedl 
grouplens applying collaborative ltering usenet news 
communication acm 
koster 
aliweb archie indexing web 
computer networks isdn systems 
lawrence lee giles 
inquirus neci meta search engine 
proceedings seventh international world wide web conference brisbane australia april 
weiyi meng clement yu king lup liu pp 

lawrence lee giles 
accessibility information web 
nature 
lee 

analyses multiple evidence combination 
proceedings acm sigir conference philadelphia pa july pp 

li danzig 
boolean similarity measures resource discovery 
ieee transactions knowledge data engineering november 
liu meng yu 
discovery similarity computations search engines 
proceedings acm international conference information knowledge management washington 
november pp 

liu yu meng wu 
statistical method estimating usefulness text databases 
ieee transactions knowledge data engineering appear 
liu 
query routing large scale digital library systems 
proceedings ieee international conference data engineering sydney australia march pp 

manber 
search broker 
proceedings usenix symposium internet technologies systems monterey california december pp 

manber 
connecting diverse web search facilities 
data engineering bulletin june 
mauldin 
lycos design choices internet search service 
ieee expert february 
mcbryan 
wwww tools training web 
proceedings world wide web conference geneva switzerland may pp 

meng liu yu wang chang 
determine text databases search internet 
proceedings international conferences large data bases new york city august pp 

meng liu yu wu 
estimating usefulness search engines 
proceedings ieee international conference data engineering sydney australia march pp 

meng wang sun yu 
concept hierarchy text database categorization 
international journal knowledge information systems appear 
meng yu liu 
detection heterogeneities multiple text database environment 
proceedings fourth ifcis conference cooperative information systems edinburgh scotland september pp 

miller 
wordnet line lexical database 
international journal lexicography 

networked computer science technical library 
cstr 
cs cornell edu 
page brin motwani winograd 
pagerank citation ranking bring order web 
technical report stanford university 
robertson walker beaulieu 
okapi trec automatic ad hoc ltering vlc interactive track 
proceedings seventh text retrieval conference gaithersburg maryland november pp 

salton 
automatic text processing transformation analysis retrieval information computer 
addison wesley 
salton mcgill 
modern information retrieval 
mcgrawhill new york 
selberg etzioni 
multi service search comparison metacrawler 
proceedings fourth world wide web conference boston massachusetts december pp 

selberg etzioni 
metacrawler architecture resource aggregation web 
ieee expert 
building ecient ective metasearch engines 
sheldon duda weiss toole gifford 
content routing system distributed information servers 
proceedings fourth international conference extending database technology cambridge england march pp 

singhal buckley mitra 
pivoted document length normalization 
proceedings acm sigir conference zurich switzerland august pp 

etzioni 
query routing web search engines architecture experiments 
proceedings ninth world wide web conference amsterdam may pp 

towell voorhees gupta johnson laird 
learning collection fusion strategies information retrieval 
proceedings th international conference machine learning tahoe city ca july pp 

turtle croft 
evaluation inference network retrieval model 
acm transactions information systems july 
vogt cottrell 
fusion linear combination scores 
information retrieval 
voorhees 
siemens trec report experiments database merging 
proceedings fourth text retrieval conference gaithersburg maryland november pp 

voorhees gupta johnson laird 
collection fusion problem 
proceedings third text retrieval conference gaithersburg maryland november pp 

voorhees gupta johnson laird 
learning collection fusion strategies 
proceedings acm sigir conference seattle july pp 

voorhees tong 
multiple search engines database merging 
proceedings second acm international conference digital libraries philadelphia pa july pp 

wade willett bawden 
sandwich interactive ranking information system 
journal information science 

advanced calculus 
nd edition 
dover publications new york 
wu meng yu li 
highly scalable ective metasearch engine 
proceedings tenth world wide web conference hong kong may pp 

xu callan 
ective retrieval distributed collections 
proceedings acm sigir conference melbourne australia pp 

xu croft 
query expansion local global document analysis 
proceedings acm sigir conference zurich switzerland august pp 

xu croft 
cluster language models distributed retrieval 
proceedings acm sigir conference berkeley california august pp 

yu liu wu 
finding similar documents multiple text databases 
proceedings ieee conference advances digital libraries baltimore maryland may pp 

yu meng 
principles database query processing advanced applications 
kaufmann publishers san francisco ca 
yu meng liu wu 
ecient ective metasearch large number text databases 
proceedings eighth acm international conference information knowledge management kansas city november pp 

yu meng wu liu 
ecient ective metasearch text databases incorporating linkages documents 
proceedings acm sigmod conference santa barbara ca may pp 


weiyi meng clement yu king lup liu lee 
search ranking algorithms locating resources world wide web 
proceedings ieee international conference data engineering new orleans louisiana february pp 

lee 
server ranking distributed text resource systems internet 
proceedings th international conference database systems advanced applications melbourne australia april pp 

