multi agent cell controller paulo leit francisco restivo polytechnic institute faculty engineering university department production systems porto engineering ta nia rua dr roberto school engineering university portugal porto portugal es portugal pt fjr fe pt dps pt discusses opportunity technology automation distributed manufacturing systems expected improvements 
support discussion described manufacturing cell control application developed multi agent technology results compared control application developed past authors traditional approach flexible manufacturing cell 
keywords automation systems shop floor control multi agents holonic manufacturing systems 

new trends market business environment mass customisation products short life cycle ebusiness technologies impose need agile re useable distributed cooperative automation systems improve competitiveness enterprise 
new requirements new control systems mainly distribution entities knowledge skills cooperation distributed entities extensibility entities components transparent communication mechanisms easy integration cooperation distributed entities agile adaptation control reaction disturbances failures organisational changes interaction physical devices 
approaches developed solve new requirements application multi agents technology automation manufacturing systems fit requirements mainly autonomy cooperation reactivity pro activity 
multi agents technology previous research projects massive metamorph agent manufacturing enterprise infrastructure 
authors intend agent manufacturing cell controller implementation architecture adaptive cooperative control architecture distributed manufacturing systems developed control distributed manufacturing systems 
results previous implementation case study traditional approaches control possible compare approaches extract benefits multi agents technology automation manufacturing systems 

case study description flexible manufacturing cell cim platform past implement cell controller traditional approaches platform implement control application architecture 
shop floor platform organised set cells material storage transportation cell calibration cell assembly cell flexible manufacturing cell 
case study context cell concept refers group resources grouped due functionality location 
calibration cell responsible assembly tools cnc machines calibration tools grippers materials circulate shop floor 
cell calibrate machine ar ga table 
material storage transportation cell responsible transportation materials shop floor temporary storage materials raw materials semi finished products final products 
cell agv automatic storage system rs transfer tables shop floor 
assembly cell objective assembly components achieve final product 
cell axis robot adept adept technology 
coupled robot exist ccd camera associated artificial vision system ex 
automatic storage system assembly cell calibration cell manufacturing cell agv table flexible manufacturing cell cnc machines anthropomorphic robot load unload machines 
machines turning center siemens controller machine milling center model ma numerical control 
robot ir siemens rc controller 
security reasons robot equipped ops overload protection system 
manufacturing cell transfer tables containers loading unloading 
containers bring material operated cell take away pieces produced 
operation sheet product name base material stell operation machine time turning side lathe turning side lathe operation sheet product name material stell operation machine time turning side lathe turning side lathe flower execution milling operation sheet product name tampa material stell operation machine time turning side lathe turning side lathe flower execution milling drilling operation sheet product name material stell operation machine time turning side lathe turning side lathe drilling milling available products machines map interface boards connection control system platform 
interfaces cp map siemens machine controller cp map siemens robot controller ge osi ethernet interface ge ma numerical controller 
test control application different products designed named base tampa assembled create final product named 
simplified operation sheet product represented 
specification product involves tasks definition material id list operations characterised description operation machine type needed perform operation estimated execution time seconds 

traditional cell controller approach traditional manufacturing cell controller developed implemented flexible manufacturing cell uses modified hierarchical architecture approach 
cell controller architecture set modules brain manager module responsible control supervision production process manufacturing cell management cell resources 
physical device module designated device controller customised industrial machine production handling equipment responsibility local control machine execution jobs requested high level module 
manufacturing cell controller shop floor controller scheduler manager controller monitor device controller device interface device controller device interface device controller device interface manufacturing cell controller traditional approach interface cell controller industrial machines implemented mms manufacturing message specification communication protocol 
mms international standard iso define standardised message system exchanging real time data supervisory control information networked devices computer applications manner independent application function performed developer device application 
problems associated traditional approach presents main problems reconfiguration fit applications rigid organisational structure 
falls necessary change organisational structure example new shop floor layout new strategies hierarchy 
learning disturbance management hard complex introduce intelligence application order optimise execution manage disturbances warnings 
distribution doesn support efficiently distribution functions entities 
code re usability development type applications traditional approach advantage simplicity compared advanced approaches code developed re 

agent approach main unsolved problems traditional control approaches distribution functions cooperation distributed entities reaction disturbances adaptation new environments code reusability 
multi agent systems defined sets agents represent objects systems cooperation mechanisms perform complex tasks 
automation manufacturing domain agent software object represents automation manufacturing system objects tasks cnc machines robots agvs transfer tables plc devices sensors 
multi agent technology suitable distributed manufacturing environment automation manufacturing applications characteristics modular decentralised changeable ill structured complex best suited agents solve 
analysing benefits multi agent technology possible conclude overcome problems traditional approaches autonomy agent operate direct intervention external entities kind control behaviour cooperation agents interact agents order achieve common goal reactivity agents perceive environment response quickly changes occur proactivity agents simply act response environment able initiative controlling behaviour adaptation agents organised decentralised structure easily different organisational structures 
expected improvements multi agents technology automation manufacturing systems fast adaptation system reconfiguration example addition removal resources different organisational structures re code control applications increase flexibility adaptation control application optimised modular software development 

architecture manufacturing control proposed architecture designated adaptive cooperative control architecture distributed manufacturing systems set autonomous intelligent operative agents forming multi agent platform implements concepts derived holonic possibility represent human allow different organisational structures bionic role supervision dynamic evolution system manufacturing systems 
agents organise different organisational structures order optimise individual community objectives combine robustness reaction disturbances 
architecture defines set agent classes operational supervisor product task system management agents 
operational agent handles interactions physical resources cnc machines robots humans plc devices sensors 
operational agent components logic part control interacts physical device 
additionally operational agent allows interaction legacy systems 
interaction agents system management agent external system product agent agent logic part task agent supervisor agent agent logic part agent classes architecture supervisor agent coordinates supervises operational agents accordance particular organisational structure represent cell controllers 
product agent represents available products system takes care product knowledge associated information process plan 
task agent launched represent execution task order produce product contains dynamic information manufacturing orders 
system management agent allows administration system supervision registration agents belonging system 
generic architecture agent architecture generic agent belongs proposed architecture modules local database contains relevant information behaviour agent 
agents decision making interface agents kb database communication local control supervision physical devices architecture generic agent decision making module controls activities agent includes decision engine cooperation mechanisms dynamic organisational techniques learning mechanisms order take decisions solve problems 
support decision making module uses knowledge stored local data base available information decision starts operation process agents try find necessary information decision 
cooperation processes manage cooperation external agents mechanisms different types cooperation negotiation product specification order allocation physical synchronisation monitoring passive active forms 
communication module deals need interaction distributed agents communication mechanisms defined previous point 
local control supervision module intends control supervise operational execution agent 
important feature module interaction physical devices supported platform corba objects defines basic services control supervision physical devices write read variables programs manipulation download start 
local database stores knowledge behaviour agent community agent belongs 
information stored local database involves types knowledge objectives constraints experience decision rules procedures dynamic information organisational related information 
dynamic structure re configuration approach supports agile adaptation different organisational structures self organisation allows re organisation agents different organisational structures 
special attention completely heterarchical architecture hierarchical ones federation approach 
possible add dynamically new organisational structures 
support feature methods represent relationships agents organisation structures techniques handle re organisation 
example agent leaves system necessary associated agents update automatically dynamically relationships 
manufacturing environments disturbances alarms layout changes deviate process original plans 
case disturbances control system respond dynamically quickly mechanisms comprise disturbance engine finds best plan handle disturbance pre defined rules knowledge acquired operation learning 
communication mechanisms interaction agents architecture asynchronous uses tcp ip protocol 
communication language fipa foundation intelligent physical agents format messages data translation uses xml language 
ontologies standardisation messages contents 
communication mechanisms grouped levels contents message physical levels 
contents level interprets message applies appropriate ontology order standardize data translation 
message level formats message send agent communication language fipa 
physical level allows physical iteration agents corba 
advantage corba platform platform independency interaction applications running distinct platforms windows linux unix language independency interaction applications developed different programming languages java 

agent cell controller prototype architecture section describes implementation architecture development agent cell controller prototype flexible manufacturing cell platform 
application system developed java language due platform independency windows operating system uses sockets tcp ip mechanism communication agents due implementation simplicity 
actors system order simplify description representation control application necessary define nomenclature symbology represents actors system 
symbology represent agent classes represented 
supervisor agent operational agent task agent product agent system management agent agent classes symbology cell controllers flexible platform represented supervisor agents designated manufacturing cell controller transportation cell controller assembly cell controller 
inside manufacturing cell physical resources represented operational agents designated turn turning center mach machining center robot robot 
available product system represented product agent forming set product agents prod base prod prod tampa prod 
necessary produce product task agent launched order supervise execution product 
way exist system task agents base tampa 
contextualisation control application case study focus manufacturing cell considered products involve physical processing materials 
order product launch task agent supervise product execution product execution task agent launch task agents supervise sub products execution announce operations compile proposals time expired model product life cycle notify agent responsible launching operations execution management operations execution operations resources additionally products require auxiliary operations preparing fixing cleaning considered due application specificity 
system product launches task agent supervise execution 
final product comprises sub product task agent launch task agents supervise execution sub product 
task agent announce operations available operational supervisor agents allocate best proposals wait execution operation 
registration system management order interact agents particular agent system community necessary agents registration system management agent responsible list available agents system 
existence agent manages registration system lead possible system system management agent blinds agents lose agents 
order avoid possible decentralised procedure system agents 
agent enters system sends message system management agent register system receives list actual available agents system 
agent system management agent agent register list agents inform unregister inform unregister unregister agent registration schema agent stores list available agents independent system management agent 
additionally sends notification message active agents system indicating availability 
agents receive notification add new agent agents list 
agent leaves system sends messages active agents system management agent 
agents receive message remove agent agents list 
remaining problem system management agent blinds agent register system 
system management agent gets back normal functioning consult agents list order verify agents active 
task allocation dispatching allocation operations belongs task dispatching execution crucial aspect control application 
scenario operations announced individually task agent responsible analysis allocation operations 
important issue considered precedence operations affects mainly start date operation 
control flexible manufacturing cell entities performed distinct organisational structures 
case study hierarchical structures implemented 
hierarchical organisational structure hierarchical organisational structure supervisor agent takes name cell controller responsible coordination operational agents represent cell resources 
operational agents visible exterior task agents interact supervisor agents 
tampa 
base turn robot mach agv table table 
hierarchical organisational structure scenario task agent decomposes task operations announces supervisor agents available system 
supervisor agent cell controller verifies availability execute operation elaborates proposal task agent 
supervisor agent ask additional information operational agents coordinate case don information elaborate proposal 
expiration time task agent takes decision allocates operation supervisor agent best proposal 
supervisor agent manage execution operation dispatch operation operational agent represents resource execute operation 
task agent handle proposal operation announce op proposal award operation announce op proposal award start op operation start op operation supervisor agent operation announce op proposal 
operation announce op proposal supervisor agent ask inform allocate allocate operation operational agent operation operational agent communication agents hierarchical structure operation finished supervisor agent notify task agent hierarchical organisational approach presents features announcement individual operations announcement task doesn bring expected optimisation allocation process 
handling auxiliary operations material transportation transfer tables machines easier approach 
pursuing plans provided hierarchical supervisor agent optimised approach 
low level communication cooperation process announcement messages exchanged messages functioning system 
heterarchical structure heterarchical organisational structure isn supervisor agent represents cell controller cell controller diluted operational agents represents cell resources 
tampa 
base turn robot mach agv table table 
heterarchical organisational structure initially task agent announces operation operational agents available system 
compilation proposals task agent evaluates allocates operation best proposal 
step announcement second operation procedure indicating start date date previous operation 
procedure repeated operations allocated 
handle proposal task agent operation announce op proposal award op 
operation announce op proposal award op start op start op operational agent operation announce op proposal operation announce op op operational agent operation announce op proposal 
operation announce op proposal op operational agent communication agents heterarchical structure operational agents start execution operation reception inform message indicating availability start operation position material 
task agent gives indication allocation execution handling operations 
heterarchical organisational approach presents features reaction disturbances easy cooperation agents hierarchical level making easier resolution problems 
approach suitable environments high level autonomy 
announcement approaches announcement approach implementation hierarchical heterarchical structures simple efficient approach terms guaranteeing temporal sequence operations precedence 
approach operations allocated operations known 
implement approach cooperation mechanisms traditional contract net protocol 
elaborated complex approach announcement process organisational architectures implemented previously characterized simultaneous announcement operations 
initially operations announced simultaneously indicating start date due date precedences operation involves 
start date calculated formula op sd dd pt fg dd represents due date pt estimated processing time fg time margin 
award message operations allocated temporarily resources 
possible operations overlapped necessary start multiple iteration refine start times operation avoiding overlapping execution operations 
operations confirmed award messages replaced award performatives 
approach presents features complex implementation approach involving communication volume propagation operations precedences optimisation allocation process cooperation mechanisms extends traditional cnp multiple iteration temporary allocations 

approach comparison implementation agent cell controller prototype experience previous implementation traditional approach application possible compare approaches find benefits approach platform independency java language distributed communications platforms corba develop control applications allows application different operating systems environments windows linux unix platform independent 
application development agent approach software necessary develop application shorter simpler write debug maintain 
code re multi agent technology concept allows easy modular development control applications 
additionally components developed control application re applications 
distribution autonomy agent autonomy control behaviour local community knowledge 
way possible build distinct independent agents placed transparently distributed environment 
plugging intelligence addition intelligence agent example take decisions manage disturbances learning transparent process agent viewed plug intelligence module takes easier development control applications 
specific applications small specific applications traditional approach advantages small complexity code development case isn important re code multiplexing developed code 

reflects research done area distributed cooperative automation manufacturing systems multi agent technology develop agile control systems fulfil main requirements kind applications distribution applications cooperation selforganisation integration humans physical devices 
agent architecture approach development distributed manufacturing applications implementation agent manufacturing cell controller 
comparison traditional approaches agent approach presents important improvements robustness reactivity support distributed environments re application code 
prototype developed case study developed java proprietary communication protocol non optimised existing application 
phase research improve cooperation decision adaptation mechanisms agent platform agent development tool jade java agent development framework fipa compliant easy connection jess java expert shell system 
important improvements intelligence agent development interfaces physical devices application complex case studies 
additionally important develop metrics methodology allow comparison traditional agent control approaches 

matos multi agent dynamic scheduling int 
journal robotics computer integrated manufacturing vol ii pp 
maturana norrie multi agent mediator architecture distributed manufacturing journal intelligent manufacturing vol 
pp 
van dyke parunak baker clark agent architecture manufacturing requirements agent system design workshop agent manufacturing minneapolis 
shen xue norrie agent manufacturing enterprise infrastructure distributed integrated intelligent manufacturing systems proceedings rd int 
conference practical application intelligent agents multi agents london uk march pp 
valckenaers 
manage agent architecture manufacturing control proceedings nd international workshop intelligent manufacturing systems leuven pp 
leit manufacturing cell controller architecture proceedings flexible automation intelligent manufacturing conference pp 
iso iec industrial automation systems manufacturing message specification part service definition 
ferber multi agent systems distributed artificial intelligence addison wesley 
shen norrie agent systems intelligent manufacturing state art survey knowledge information systems international journal pp 
van dyke parunak agents industry 
overview oriented cec industrial technology institute 
leit restivo agile cooperative architecture distributed manufacturing systems proceedings iasted international conference robotics manufacturing may cancun mexico pp 
matos leit restivo integrated distributed manufacturing multi agent perspective proc 
rd workshop european scientific industrial collaboration june netherlands 
smith contract net protocol high level communication control distributed solver ieee transactions computers vol 
pp 
