fast perception depth field rendering mulder robert van liere current algorithms create depth field dof effects costly applied vr systems produce inaccurate results 
new algorithm create dof effects 
algorithm techniques high accuracy high speed accurate 
create dof effects peripheral viewing area accurate results necessary 
applied viewing volume focussed viewer 
techniques extensive rendering hardware texturing image processing 
algorithm improvement fast dof algorithms faster provides better quality dof effects matters 
depth field dof integral part human vision 
power lens human eye changes accommodate different viewing distances 
object looked focus objects closer away focus appear blurred 
amount blur depends current power lens diameter pupil distance object 
todays vr systems dof effects 
images rendered focus display surface 
lack dof effects contributes unnatural appearance virtual center mathematics computer science cwi amsterdam netherlands 
cwi nl world excludes dof additional depth cue 
furthermore adding depth field stereo images aid stereo fusion possibly relieve eye strain experienced vr systems 
algorithms developed create dof effects computer generated images 
algorithms time consuming vr applications produce inaccurate results 
new algorithm proposed greatly reduces computation time 
algorithm takes perceptual capabilities human eye account providing accurate dof effects center attention applying accurate effects peripheral viewing areas 
fast applied todays vr systems significant improvement known dof algorithms faster provides accurate results matters 
brings application dof effects vr step closer 
section briefly describe dof model calculate dof effects 
model see instance 
section related dof algorithms reviewed 
section contains description new algorithm discusses merits 
section results new algorithm section contains indicates areas research 
depth field model human eye modeled thin lens system 
depicts system 
light thin lens system rays emanating point light object point entering eye lens image point relation power lens distances object point image point lens thin lens equation amount refraction depends power lens 
lens human eye changes power focus object point interest retina 
object points located closer away focus create circle confusion coc 
diameter coc retina object point calculated see jv gamma gamma pd gammap pd gammap lens pupil diameter distance unfocused object focus distance dr distance lens retina retina eye lens calculation coc formula calculate coc rendered display screen distance lens display screen 
related algorithms render dof effects developed years 
algorithms classified post process filtering methods multi pass rendering methods 
post process filtering describe dof rendering algorithm 
image created standard pin hole camera 
image value pixel stored 
sampled point turned coc size intensity distribution determined value lens aperture 
intensity pixel output image calculated weighted average intensities overlap pixel 
intensity distribution function calculate intensity neighboring receives 
chen proposes simpler method obtain intensity distribution 
light particle theory shown due raster resolutions intensity spreading neighboring pixels simple uniform intensity distribution coc 
algorithms chen implemented software far slow applied near real time 
suggests special digital hardware filters speed creation dof effects 
multiple consecutive applications gaussian convolution filters pixels spread neighboring pixels create blurred appearance 
uses similar approach applying multiple passes different sized convolution filters sgi image processing hardware 
drawback convolution filters allow uniform distribution pixel intensity coc 
furthermore filtering techniques give rise intensity leakage problems blurred foreground background objects leak objects focus focussed objects leak intensity blurred background foreground objects 
post filtering techniques yields image initially computed single point center projection intermediate image final dof image created contain sufficient information create perfect dof image 
affects results ways real lens focusing effect causes light rays pass pinhole strike lens converge form image 
leads hypo pixel intensities border blurred background objects focussed objects see 
second objects partially occluded objects front visible entire lens surface 
result post filtering techniques hyper pixel intensities occur 
matthews suggests solve hypo hyper intensities scaling valued intensities adding subtracting pixels original color obtain hypo intensities 
left object focus 
background blurred suffers low intensities normalized pixel intensity 
attacks problems creating sub pixel buffer ray distribution buffer performing hidden surface removal distributed ray 
technique adds significant computational memory costs depending accuracy required 
regarding fast creation dof effects include algorithms developed 
presents algorithm objects rendered sorted groups depth rendered independently separate images filtering images combining single final image 
proposes importance ordering method avoid recalculation dof effects frame sequences minor changes 
method suited vr applications major head movements focus changes occur 
multi pass rendering dof effects created rendering scene multiple times standard pin hole camera center projection slightly translated preserving common plane focus 
final image generated accumulation sub images 
similar technique distributed ray tracing 
multiple rays traced scene originate different locations ideal center projection 
techniques produce accurate results computationally expensive scene rendered multiple times create single image 
suitable application vr settings 
dof algorithm algorithm described techniques high resolution accurate technique center attention low accuracy high speed approximation remaining part scene 
techniques postprocessing approach extensive rendering hardware obtain high speeds 
scene rendered standard pinhole camera 
intermediate image pixel representing object focus spread neighboring pixels create coc proportional coc formed viewer retina 
techniques described detail followed explanation techniques combined 
high resolution technique coc diameters discretized pixel sizes coc diameters pixels 
diameters coc border determined 
coc border list pixels ly coc covered coc smaller diameter 
pixel considered ly coc center lies coc see 
process done coc pixels front focus plane focus plane 
texture created intermediate image size intermediate discretized coc sizes borders age 
rgb values original rgb values pixels 
value pixel depth value stored 
frame buffer cleared number texture mapped rectangular polygons drawn 
size polygons equal size original scene texel covers exactly pixel polygons rasterized 
polygon rendered pixel outermost front coc border 
position polygons shifted position coc border 
pixels textured polygon rendered coc larger equal diameter current coc border 
accomplished alpha test alpha value texel depth value original pixel 
furthermore texture color table lookup function alpha values pixels blended converted appropriate intensities 
process repeated inner front coc border upto single pixel center pixels back coc border done time starting smallest coc border upto largest 
border texels rendered coc contains pixel 
selection easily achieved performing alpha test texels alpha value pixels depth value 
furthermore performing color table look operation alpha component correct texel intensity blended scene 
blending function alpha saturate combination front back rendering order ensures hyper intensity values occur 
hypo intensity values corrected final blend original image normalize gaussian pyramid construction pixels low intensities 
main advantages technique extensive fast texturing hardware created parallel intensity distributions uniform 
total number textured polygons rendered blended equals number pixels largest coc image front focus plane plus number pixels covered largest coc focus plane 
fast approximation fast dof technique gaussian pyramids technique image coding :10.1.1.54.299
gaussian pyramids offer fast way create low passed filtered reduced size representations original image 
pyramid constructed follows original image reduced low pass filtered image constructed 
value computed weighted average values window 
image constructed manner illustrates procedure dimensional case 
detailed discussion gaussian pyramids image coding see 
dof algorithm gaussian pyramids constructed 
initial image pyramid contains pixels closer viewer focus plane alpha value set pixels cleared 
second pyramid pixels away focus plane 
convolution function construct image pyramid applied values pixels 
number levels pyramid determined maximum blur needed final image 
image created pyramids stored texture 
final image constructed rendering texture mapped polygons front back front pyramid textures 
pixels focus plane blended texture mapped polygons blended back front back pyramid textures 
polygons pyramid textures rendered appropriate depth coordinates depth testing enabled pixels filled blurred texel value correspond amount blur related pixel depth value 
linear interpolation texel values enabled magnify smaller sized pyramid textures 
hypo intensity pixels corrected blending original image 
main advantages technique allows fast creation highly blurred effects 
comparison third level pyramid image effectively spreads pixel pixels 
achieved passes convolution filter images reduced size half filter pass 
spread achieved technique consecutive passes convolution filter applied entire image far expensive 
combination algorithms advantages disadvantages 
algorithm provides accurate dof effects somewhat time consuming particularly larger coc diameters 
furthermore color resolution frame buffer imposes limit coc diameters large coc diameters pixels blended low intensities 
frame buffers usually integer values low intensities contribute pixel values 
second algorithm provides fast way create dof effects especially larger coc diameters limited accuracy intensity leakage occurs intensity distribution gaussian stead uniform large step sizes amount blur occur 
techniques combined obtain technique provides accurate dof effects needed provides adequate computational speed applying fast approximation areas high accuracy necessary 
human visual system high resolution fovea periphery resolution rapidly decreases 
furthermore larger coc blurred scene important accurately apply dof effects 
combine algorithms defining center attention volume cav inside actual viewing volume 
cav centered object currently focussed viewer 
inside cav apply high resolution algorithm outside cav apply fast approximation see 
results shows theta image created combined algorithm 
image created sgi onyx raster managers 
scene consists spheres diameter located respectively viewpoint 
pupil diameter set mm display screen away viewpoint 
cav set degrees field view view focussed green sphere away viewpoint 
converting pinhole camera image scene final image dof cost approximately fast ap eye point viewing volume center attention volume center attention volume cav 
inside cav high resolution algorithm applied outside cav fast approximation algorithm applied depth field effects applied scene plied todays vr setups frames second rendered preferably significant improvement methods high accuracy provided area matters 
comparison applying dof effects fast algorithm proposed costs approximately ms addition final image suffers intensity leakage 
vr applications depth field virtual world look realistic provide additional depth cue help fusion stereo images 
applying dof costly process 
new algorithm greatly speeds application dof effects scene rendered pin hole camera 
algorithm combines accurate high resolution technique area viewer focussed faster accurate approach rest scene 
improvement known algorithms faster provides accurate results needed 
fast brings application dof vr settings step closer 
major drawback current virtual reality display hardware relationship human viewing violated 
major cause eye strain experienced humans vr equipment 
interesting research investigate application dof positive effect regard 
step line construct head mounted display variable focus plane 
equipped eye tracking system device measure power lens eye focus plane hmd adjusted focus distance eye restore convergence accommodation cue relieving eye strain 
dof effects added system natural vision simulated accurately 
burt 
fast filter transforms image processing 
computer graphics image processing 
burt adelson 
laplacian pyramid compact image code 
ieee transactions communications 
chen 
lens effect synthetic image generation light particle theory 
visual computer october 
cook 
stochastic sampling computer graphics 
acm transactions graphics 
cook porter carpenter 
distributed ray tracing 
christiansen editor computer graphics siggraph proceedings volume pages 

real time depth field algorithm 
parker wilbur editors image processing broadcast video production proceedings european workshop combined real synthetic processing broadcast video production pages 
springer verlag 

importance ordering real time depth field 
proceedings third international conference computer science pages 
haeberli 
accumulation buffer hardware support high quality rendering 
forest baskett editor computer graphics siggraph proceedings pages 
matthews 
analyzing improving depth field simulation digital image synthesis 
masters thesis university california santa cruz december 
davis woo 
opengl programming guide official guide learning opengl 
addison wesley reading mass edition 
chakravarty 
lens aperture camera model synthetic image generation 
fuchs editor computer graphics siggraph proceedings pages 
chakravarty 
synthetic image generation lens aperture camera model 
acm transactions graphics april 

fast generation depth field effects computer graphics 
computers graphics 

generating depth field effects virtual reality applications 
ieee computer graphics applications march 

depth field simulation computer animation volume iii graphics gems series pages 
ap professional 

post filtering depth field simulation ray distribution buffer 
proceedings graphics interface pages 

