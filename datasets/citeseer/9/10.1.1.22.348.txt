published meersman mark eds proceedings sixth ifip tc working conference data semantics london chapman hall 
repository system business rules herbst herbst iwi unibe ch www iwi unibe ch institute information systems research unit information engineering university berne 
ch berne switzerland years rules new focus systems analysis increasing interest 
reason developments active database research resulted commercially available database management systems active components 
support rule active mechanisms desirable rules taken account conceptual level 
important reason focusing rules importance organizations context term business rules 
defines structures business rules main component systems analysis presents results case study introduces meta model repository system business rules 
keywords business rule repository dynamic modeling active database eca active databases important issue current database research cf 
:10.1.1.133.3862
database triggers commercial database management systems dbms ingres oracle sybase approaches research available development information systems 
progress implementation level importance treating business rules conceptual level evident cf 
appl mori 
term business rule referenced defined differently restricted semantic integrity constraints cf 
appl 
business rules cover data integrity may impose restrictions organizational dynamics define business rules statements business done guidelines restrictions respect states processes organization herb 
comparison selected function oriented data oriented object oriented methods revealed single method allows convenient graphical specification different aspects business rules conceptual level combination methods representing specific view business rules may applied 
complement ongoing research dealing primarily graphical representation business rules cf 
focus administration business rules repository system different graphical views generated 
partially supported swiss national science foundation priority programme informatics project 
business rules page systems analysis focusing business rules systems analysis main goal collect relevant information universe discourse conceptual level pohl facts primarily processes structure manipulation data objects 
business rules defined encompass aspects regard business rules central element systems analysis define procedure systems analysis accordingly cf 

steps current focus implementation repository system described 
step facts universe discourse collected real world interviews document analysis specified business rules 

step major part relevant entity types relationship types attributes derived collection business rules structured conceptual data model 
subsequent task checking integrity data model business rule collection may lead iteration 
specifications systems design implementation active database 
business rules collection business rules relevant universe discourse derivation modelling constructs referred business rules data stored repository data access verification business rules systems design implementation 
legend systems analysis focusing business rules structure business rules function repository system activities data model rules active databases cf 
structured event condition action eca paradigm cf 

goals derive implementations business rules active components appropriate structure page business rules accordingly 
result case studies extract business rules practically applied rules transformed eca rules negating condition 
semantic components follows event business rule processed 
condition checked 
action done condition true 
action done condition false 
basic component types business rules classified subtypes especially relevant definition syntax specifying business rules repository system 
structure allows specify integrity constraints entire processes consisting business rules basic elements 
possibility specify processes rules business rules applicable concepts business process re engineering 
importance events respect processes emphasized exist event oriented process description approaches cf 
research active databases event algebras proposed cf 

dividing line integrity constraint process step fuzzy approaches try separate constructs 
artificial separation may lead gap process specification evaluation semantic integrity constraint may part process result trigger process steps 
approach integrity condition corresponds condition part business rule encompasses additionally event triggers evaluation constraint predicate re action depending result 
specification process necessary link action component business rule events may trigger business rules 
link explicitly specified action component indicating events raised 
reasons having clear structure allow raise exclusive events single action situation circumvented replacing business rule rules 
case studies business rules overview examples research project case studies carried cf 
extract business rules practically applied aim case studies get insights different types rules relevance 
gives overview studies 
business rules discussed extracted case study dealing insurance dom automates processing insured events damages 
covers personal liability third party theft property 
case study different aspects taken account organizational process treating insured events needed process 
organizational process analyzed interviewing staff page department 
interviews revealed rules controlling process damage administration analysis cobol source code resulted approximately additional rules damage field entered damage cause entered damage field private third party insurance damage cause damage car third party insurance type family single senior issue error message damages cars insured policy please check necessary pass file central office example illustrates difficulties separating integrity constraints process steps negative evaluation condition may lead passing case central office certainly relevant business process excluded specification 
dom enterprise swiss bank swiss insurance swiss ptt purpose entry pay entry administration administration ments damage claims owned buildings development cobol cobol oracle forms environment ims ims oracle research methods code analysis interviews code analysis interviews code analysis lines code approx 
number business rules application code environment overview case studies illustrate scope different types business rules introduce set rules case study describing part process general level 
process initiated person getting contact insurance 
business rule encompasses checks person policy holder policy holder wants report damage 
business rule person contacts phone call person letter person person policy holder policy holder wants report damage damage registration raise event damage reported processing business rule leads provisional registration damage policy holder provide information damage case receives form fill 
page business rule register prov damage damage reported information damage available register damage provisionally registration date today raise event damage prov registered send damage form policy holder raise event damage form sent registration incomplete information damage followed check damage covered policy policy holder 
depending result claims policy holder rejected form complete information damage sent policy holder 
business rule accept prov damage provisional damage registered damage insured policy accept damage provisionally send damage form policy holder raise event damage form sent raise event damage prov accepted reject damage raise event damage rejected policy holder reminded return form days business rule reminder damage form days damage form sent damage form returned remind policy holder days provisionally registered damage deleted form returned 
business rule time damage form days damage form sent damage form returned delete provisionally accepted damage rule example triggered events damage form sent damage form received occur conjunction 
received form checked regard completeness returned policy holder incomplete 
definitive registration damage started 
page business rule def register damage damage form received days damage form sent information complete raise event start def damage registration return form policy holder raise event damage form sent subsequent execution business rules process treating definitive damage claims policy holder may start 
requirements active components dbms resulting case studies business rules extracted case studies give overview practically relevant rules allow draw requirements active components dbms 
research complemented technical evaluation database triggers survey users 
evaluation considered commercially available dbms active components database triggers ca ingres oracle sybase 
main differences dbms sybase triggers processed statement ca ingres referenced tuple oracle alternatively 
ingres allows infinite number database triggers raised single event business rules may implemented modularly 
oracle sybase number triggers event restricted respectively 
oracle sybase support events raised data manipulation insert update delete ca ingres allows specify kind user defined events 
oracle trigger manipulate data table related triggering event table locked executed database trigger 
furthermore survey ca ingres oracle sybase users conducted respect practical application database triggers 
main problems reported users missing support rules conceptual level missing standardization database triggers experienced feared performance problems insufficient tools administration implemented database triggers 
research activities problems implementing business rules case studies derived case study dom maximum number business rules triggered single event modification damage cause approximately 
implementation rules oracle sybase leads large non modular database trigger 
obvious high number rules triggered single events easily lead performance problems 
time related events ones example implemented dbms regarded supports specification type events 
page implementation business rules case study demand functionalities active dbms provide modularity number rules event restricted 
active dbms provide various number event types listed :10.1.1.133.3862
support administration rules implemented active dbms tools developed 
furthermore mentioned rules considered conceptual level provide basis implementation 
purpose meta model repository system chapters developed 
business rule oriented meta model core submodel business rule submodel business rule consists meta entity types business rule event condition action cf 

structure business rule encompasses exactly event condition action components 
furthermore business rules specialized generalized leads recursive relationship business rule 
meta model allows specification complex events time related events conjunction disjunction events 
complex events event expressed relationship event 
similar recursive relationship exists meta entity type condition 
discussed examples actions business rules may raise events depicted meta model relationship meta entity types action event 
embedding business rules environment business rules defined exemplified describe business done obtain integrated view universe discourse embedded environment 
overview relationships business rules submodels software components components business rules may implemented software component module database trigger stored procedure 
organizational unit business rules allocated organizational units viewpoint organizational units responsible content business rule organizational units process different components business rule 
process business rules structured rules adequate specify processes 
concept specialization discussed allows define different process levels sub process encompasses finite set business rules 
processes furthermore closely linked organizational units 
page origin real world facts specified business rules specific origin organizational guideline 
relationship business rules origin supports administration especially validation business rule collection 
modeling construct submodel modeling construct encompasses meta specification data model 
widely accepted standards chose entity relationship model meta model easily adapted data model object oriented model rule components relate generalized meta entity type modeling construct 
representation different views relationship modeling constructs business rules discussed subsection 
specifying relationships business rules submodels business rules classified approach discussed herb supports administration large rule sets 
consists legend submodel implemented raised event implemented evalu ated software component organizational unit process business rule condition implemented performed linked defines originates consists meta entity type modeling construct raised part consists business rules embedded environment consists action origin page repository system business rules functionality repository system full fledged repository system principle dbms special functionality administer meta data cf 

includes capability specify meta models customize user interface implement appropriate verification mechanisms generators 
cope large number meta data repository system provide sophisticated query possibilities support semi graphical graphical representations query results 
building repository system scratch decided base available solution adapted specific purpose 
applied administration business rules employed repository system support dictionary schema equivalent meta model introduced chapter 
meta model particular approach system allow user defined meta schemas 
system adapted support tasks business rule registration verification business rules checking loops derivation modeling constructs specification data structure 
flexible user interface powerful programming language needed 
furthermore demanded graphical component support different notations representation business rules discussed 
commercial product largely satisfies requirements chosen implementation repository system 
implementation meta model user interface basic constructs describe meta models documents chapters links constructs constitute dictionary schema definition layer standard ansi implementation meta model business rule related submodels means constructs constitutes dictionary definition layer terminology 
layer meta entity types implemented documents types type business rule event 
relationship types meta model implemented directed links source target document 
building link document triggered occurence defined keyword linking chapter source document 
keyword eve document type business rule results link document type event 
definition dictionary schema user interface manipulation business rules developed 
user interface main windows 
window devised fast registration business rules 
business rule documents result links documents exist manipulation referenced documents possible framework window 
second window serves manipulation business rules context allows manipulation entity types relationship types attributes 
furthermore supports analysis relationships registered business rules modeling constructs 
third window deals static process structure specialization business rules 
page depicts second window user interface including example rules overlaid sub window registration manipulation single business rule 
example shows relationships business rule person contacts instances meta entity types specified rule syntax ent damage document damage type entity type eve damage reported event raised action 
window manipulating single business rule case studies revealed amount business rules real system major problem 
results need mechanisms reduce complexity concept generalization specialization business rules devised implemented repository system 
approach adapts principles leveled dataflow diagrams dfd structured analysis leveled dfd parent child diagram balanced data flows parent bubble equivalent data flows child diagram 
straightforward adaptation balancing rule specialization business rules results condition levels triggering events raised events identical example cf 
herb 
br br br br specialization business rules page br br br br br concept different levels specifying business rules allocated sub processes encompassing specific subset business rules cf 

allocation allows reuse business rules different levels rule br 
reused business rules raise events may trigger different business rules depending subset business rules element current subprocess 
mentioned process structure manipulated particular window depicted 
window manipulation process structure graphical representation business rules documented repository system important element repository system business rules capability represent graphically contents repository 
visualizing different views business rules chosen models model static process structure entity relationship model erm er model earlier entity relationship rule model respectively event rule network high level petri net page models implemented graphics 
resulting graphical representations exemplified business rules introduced chapter 
diagrams depicted entirely generated repository system layout diagrams manually adapted 
process structure diagram representing process structure includes hierarchical network subprocesses 
diagrams different types rectangles represent subprocess partly specified business rules 
likewise different types arrows symbolize subprocess connected specialized business rules higher process level 
reduce size complexity er models er networks subsections diagrams drawn specialized subprocesses 
example business rules introduced describe subprocess damage reception diagrams generated subprocess 
entity relationship model discussed description business rule systems analysis cf 
modeling constructs derived collection business rules structured data model 
modeling constructs referenced examples represented erm entity types person policy holder damage policy attribute registration date damage affects policy registration date damage reports policy holder policy policy erm resulting business rules example person page erm visualizes policy holder policy 
may report damages affect policy policy holder affect policies policy holders cars involved particular car crash insured policies regarded 
er entity relationship event rules model submodels business rule modeling construct allow view meta model focusing relationship modeling constructs business rules regarded points view 
business rule modeling construct modeling constructs specific business rule impact modeling constructs 
example business rule person contacts entity type policy holder condition entity type person condition entity type damage condition action 
modeling construct business rule business rules specific modeling construct 
example entity type policy holder referenced person contacts condition register prov damage action reminder damage form action register def damage action discussed views relationship business rules modeling constructs may depicted er model 
model suits especially visualization business rules developed depicting eca rules active databases conceptual level 
er model encompasses erm combines simple event rule net 
net events drawn circles condition action part business rule depicted parallelogram 
events may trigger condition action constructs complex events triggering depicted arrow 
original er model relationships constructs erm net drawn reduce complexity resulting large amount connections decided different layers event condition action component rule layers may depicted simultaneously 
shows impact business rules modeling constructs relationships action components business rules modeling constructs 
dotted lines separate relationships arcs events rules 
events symbolized dashed line referenced stored repository exist virtually 
diagram enriched indicating complex event types 
damage affects policy policy policy policy holder reports damage registration date person page damage rejected letter person letter phone call person contacts damage reported register prov damage prov damage registered accept prov damage damage prov accepted days damage form sent time damage form reminder damage form er model rule actions erm phone call person damage form sent days damage form sent damage form received damage form sent received register def damage start def damage registration high level petri net page dynamics business rules may represented petri nets 
event rule network derived er diagram 
network high level petri net defined triple finite set places representing events finite set transitions representing rules condition action part business rule finite set directed arcs representing raising events triggering rules 
match requirements petri net simple representation dynamics er diagram modified 
transformation cases discussed triggering rule disjunctive events concurrent triggering rules single event 
extended eca structure structure transformation considered handles mutually exclusive events raised business rule cf 

event event event event event event event event conflict non mutually exclusive rules triggered single event coordination disjunctive events triggering single rule conflict mutually exclusive events result structure rules deriving network er diagram application transformations er diagram leads network depicted 
diagram exemplifies loops may appear organizational processes forbidden net 
support administration loops may indicated diagram decision remove left user 
event event letter person damage rejected letter phone call person contacts damage reported register prov damage prov damage registered accept prov damage damage prov accepted page phone call person days damage form sent reminder damage form damage form sent days damage form sent time damage form damage form received damage form sent received register def damage start def damage registration network business rules example page outlook research area active databases proposals graphical representations rules implemented databases meta model treatment business rules conceptual level developed 
meta model business rules related data modeling constructs embedded organizational environment 
embedding gives various possibilities analysis administration business rules 
business rules technique systems analysis fulfill requirements systems users analysts ones described 
commercial repository system implement meta model user interface different graphical representation techniques business rules 
business rule repository system employed documentation large case study dealing insurance application 
support administration large rule base concept specialization generalization business rules incorporated 
implemented graphical models provide visualization views business rules help communicate involved users 
furthermore property implement user defined graphical representations may employed testing applicability different event oriented approaches cf 
realistic case study 
close gap conceptual physical level repository system complemented functions determination derivation implementation alternatives stored procedures database triggers 
furthermore development implementation algorithms checking consistency business rules providing consistency business rules data model desirable 
research issue integrating business rule concept workflow tools business process re engineering 
ansi ansi american national standard information resource dictionary system new york american national standard institute 
appl appleton business rules missing link datamation pp 

appl appleton second generation applications database programming design pp 

bell brooks wood re engineering case study analysis business rules recommendations treatment rules relational database environment golden west information technologies group 
chakravarthy kim composite events active databases semantic context detection proceedings vldb pp 

chakravarthy mishra snoop expressive event specification language active databases technical report uf cis tr university florida :10.1.1.133.3862
dayal buchmann mccarthy rules objects knowledge model active object oriented database management system dittrich eds advances object oriented database systems berlin springer pp 

de marco structured analysis system specification new york yourdon 
events active object oriented database system hamburg 
gehani jagadish shmueli event specification active object oriented database acm sigmod pp 

hammer reengineering new york harper business 
hanson widom overview production rules database systems knowledge engineering review pp 

page heil workflow management integration von organisation und der pp 

herb herbst meta model specifying business rules systems analysis lyytinen rossi eds proceedings seventh conference advanced information systems engineering berlin springer pp 

herbst ans tze zur von gesch wirtschaftsinformatik pp 

herbst schlesinger specification business rules comparision selected methodologies stuart olle eds methods associated tools information system life cycle amsterdam elsevier pp 

herbst business rules wirtschaftsinformatik pp 

herbst schlesinger enforcing business rules application trigger concepts swiss national science foundation ed proceedings priority programme informatics research information conference module berne 
schlesinger die von am beispiel der oracle und des systems working institute information systems university berne 
martin odell object oriented analysis design englewood cliffs prentice hall 
objective object oriented analysis loucopoulos ed proceedings forth international conference advanced information systems engineering berlin springer pp 

mori moriarty paradigm database programming design pp 

und stand des von data dictionaries heidelberg physica 
konzepte analyse und design methoden band ein die analyse und das system design ait 
pohl pohl dimensions requirements engineering rolland bodart eds proceedings fifth international conference advanced information systems engineering berlin springer pp 

rolland conception des syst mes information la paris 
stand der von der eine zum einsatz von oracle sybase und ingres master thesis institute information systems university berne 
von halle linking rules models database programming design pp 

scheer wirtschaftsinformatik gesch th ed berlin springer 
stonebraker hanson hong design postgres rules system proceedings ieee international conference data engineering pp 

streng bpr needs bir btr pit framework business re engineering proceedings second conference barcelona 
tanaka conceptual design active databases phd thesis georgia institute technology 
tanaka navathe chakravarthy er enhanced er model situation action rules capture application semantics ed proceedings th international conference entity relationship approach san mateo institute pp 

loucopoulos rule requirements specification validation lvberg bergman eds proceedings second nordic conference advanced information systems engineering berlin springer pp 

van loucopoulos information systems development rule base approach journal knowledge systems pp 

widom cochrane lindsay implementing set oriented production rules extension starburst proceedings th international conference large databases pp 

