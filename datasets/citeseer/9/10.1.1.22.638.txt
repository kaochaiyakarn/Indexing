lens camera control simple jacobian matrix min ho soo kim ffi sung je hong department computer science south korea ffi dept computer science purdue university usa proc 
graphics interface pp 

improves computational efficiency numerical stability camera control 
simple theta jacobian matrix derived 
matrix equation solved efficient weighted squares method employing singular value decomposition method numerical stability 
keywords virtual camera control quaternion calculus jacobian matrix computer graphics virtual camera models specify scene viewed display screen 
example viewing parameters look look view represent popular virtual camera models 
camera status usually described parameters focus position orientation 
focus represented single value focal length 
position rotation degrees freedom dof 
user controls virtual camera dofs 
easy control camera parameters simultaneously user interfaces mouse support required dofs time 
gleicher witkin suggested camera control scheme provide general solution virtual camera control problem 
controlling camera parameters directly points display screen controlled user 
required changes camera parameters automatically generated picked screen points moved way user specified screen 
user selects points moves new positions camera parameters automatically changed eye eye control point lens camera control corresponding data points projected new points 
virtual camera position eye point projected point viewing plane 
user moves projected point new position camera parameters automatically changed point projected new position new virtual camera position eye 
lens camera control provides powerful user interface virtual camera control 
constrained nonlinear optimization technique gleicher witkin limitations computational efficiency numerical stability 
overconstrained case image control points lagrange equation formulated theta square matrix equation takes time solved 
square matrix singular 
suggest improvements 
simple theta jacobian matrix derived quaternion calculus 
nonlinear optimization technique efficient weighted squares method employing singular value decomposition numerically stability 
time complexity grows linearly time control points 
rest organized follows 
section review previous method 
section introduces simple jacobian matrix 
section matrix equations derived lens camera control 
solved section weighted squares method 
implementation details experimental results discussed section 
section concludes 
previous review previous virtual camera models degrees freedom focal length position orientation 
representing orientations unit quaternions quite useful free singularities gimbal lock 
unit quaternion consists parameters constraint 
quaternions total parameters parameters required represent status virtual camera 
points pm camera parameters perspective projection viewing transformation points defined hm perspective projection display screen 
perspective projection produces nonlinear relationship camera control parameters projected image points 
difficult construct local inverse map image space camera parameter space 
gleicher witkin solved inverse problem approximating nonlinear inverse problem sequence linear inverse problems 
linear equation obtained differentiating nonlinear equation camera parameters image points linear equation gives relationship velocities camera parameters velocities control points image space 
theta jacobian matrix perspective transformation furthermore xm ym relationship represented simple matrix equation initial velocity control points image space specified value gleicher witkin solved nonlinear optimization problem minimizes quadratic energy function gamma delta gamma subject linear constraint problem converted lagrange equation de gamma value vector lagrange multipliers 
lagrange equation converted jj gamma matrix equation solved value value obtained update virtual camera parameters example euler method updated follows deltat deltat jacobian matrix perspective transformation plays important role computation lagrange equations critical factor determines performance algorithm 
jacobian matrix re evaluated time value updated 
jacobian matrix complex performance algorithm 
simple theta jacobian matrix easily derived technique quaternion calculus 
rank deficiency jacobian matrix computing jacobian matrix perspective transformation parameters free variables 
means differentiated considering constraints 
unit quaternions constraint unit length somewhat difficult differentiate unit quaternions constraint 
eliminate constraint gleicher witkin derived rotation matrix jqj unit quaternion computed differential rotation matrix 
unit quaternion rotation matrix see rq gamma gamma gamma gamma gamma gamma qy qz qy qz gamma gamma gamma general quaternion inserting jqj rotation matrix gleicher witkin obtained new rotation matrix jqj jqj gamma gamma gamma jqj gamma gamma gamma gamma jqj gamma gamma jqj method defines rotation matrix nonzero quaternion eliminates constraint unit quaternion 
rotation matrix problem jacobian matrix rank deficient 
nonzero quaternion quaternions ffq represent rotation matrix ff ffq ff points pm quaternion consider transformation gamma 
gamma 
differential linear transformation gamma 
represented theta matrix 
curve generated point rotation quaternion curve radial line tq tq tq curve constant curve 
differential zero vector means rows vectors jacobian matrix orthogonal vector rank furthermore transformation gamma 
gamma 
differential dt represented theta jacobian matrix rows dt orthogonal vector dt rank 
formulation jacobian matrix complexity rank deficiency jacobian matrix essentially result jacobian matrix dt rotational degrees freedom 
simple jacobian matrix quaternion calculus remedy complications jacobian matrices dt take different approach representing rotational degrees freedom 
starting quaternions start angular velocities represent quaternions integrals angular velocities 
unit quaternion curve differential ae delta delta quaternion multiplication tangent space orthogonal vector 
details derivation equation described 
see quaternions 
fixed points rotated point rotation unit quaternion 
theta see details derivation 
interpreted angular velocity equation exactly formula classical dynamics 
consequently transformation gamma 
gamma 
differential gamma 
gamma 
theta isomorphism gamma 
delta gamma 
identifies tangent space euclidean space may interpret differential gamma 
gamma 
theta jacobian matrix represented simple theta square matrix gamma gamma gamma angular velocity computed quaternion updated new quaternion deltat relation deltat exp deltat delta deltat time interval integration operation delta quaternion multiplication transformation exp exponential map 
see details exponential map 
jacobian matrix viewing transformation virtual camera specified perspective viewing transformation projects points viewing plane 
position orientation virtual camera time gammat gammat gammat gammat gamma gammaq gammaq gammaq gammaq quaternion conjugate 
fixed point world coordinate system projected image point represented ffi ffi perspective projection focal length translation rotation axis angle cos 
rigid transformation ffi simply ffi perspective transformation applied follows derive jacobian matrix viewing transformation differentiate equation dh dt dv dt dt ffi ffi applying chain rule equation obtain dh dt gamma delta gamma gamma gamma gamma gamma gamma gamma gamma gammaf gamma ij ij th component theta rotation matrix unit quaternion 
see details derivation 
jacobian matrix simpler gleicher witkin 
camera control moving image control points moving single image point lens camera control virtual camera placement automatically determined solving equation point point point projected 
gleicher witkin approximated solution constrained nonlinear optimization technique solving series lagrange equations 
underconstrained system possible solutions solution equation provides optimal solution respect objective function equation 
system solution overconstrained system approximate solution may computed projection method equation see section 
vector projected column space equation solution equation 
note projection method applied equation clear geometric meaning approximate solution 
projection process enforces give hard constraints 
believe optimization process sense 
concentrate control projection user controllable way see section 
approximate solution equation newton method 
newton approximation carried solving sequence linear equations obtained differentiating nonlinear equation 
linear equation unknowns velocities camera parameters deltax theta theta integrating velocities approximate solution equation 
theta defined gamma deltax deltaf deltat deltaf deltat exp delta taylor series expansion gives dfx deltax deltax theta differential 
approximate ignoring term deltax deltax solve deltax theta linear system deltax gammaf jacobian matrix matrix representation differential 
note matrix equation equation 
square matrix invertible 
weighted squares method section approximate solution 
moving multiple image points linear system single control point derived theta matrix section 
multiple image control points equation generalized follows gamma gamma 
gamma gamma hm function extended dimension jacobian matrix theta matrix 
linear equation deltax gammaf may solutions solution depending rank value 
tracking moving data points derived jacobian matrix assumption picked points stationary points 
points allowed move need take fact account controlling virtual camera parameters 
moving points derivative rotation translation virtual camera computed follows see dt ffi theta perspective viewing transformation dh dt linear system solved deltax gammaf gammaj solving linear system computing pseudo inverse control points image space system solved theta linear system deltax gammaf deltax theta 
non square matrix invertible solution chosen possible solutions deltax optimal criteria 
suggest squares method selection solution 
case deltax minimal norm selected solutions deltax gammaf 

case deltax chosen minimizes jj deltax compute squares solution numerically stable way singular value decomposition svd pseudo inverse jacobian matrix 
various efficient stable methods decompose matrix form diagonal matrix 
decomposing jacobian matrix pseudoinverse computed gamma gamma ij ae ij ij ij numerical stability svd method methods especially matrix singular 
pseudoinverse matrix produces solution minimal norm satisfying condition 
case pseudoinverse require svd large theta matrix increases 
case efficient projection method produces solution minimizes quantity jj deltax deltax gammaj gamma pseudoinverse defined square matrix singular column vectors linearly independent 
svd method detect singularity matrix decomposed compute gamma svd method 
square matrix turns singular go back previous method computing pseudo inverse gamma svd decomposition construction theta square matrix takes time inverse operation takes constant time 
weighted squares underconstrained system squares method gives solution minimizes magnitude 
solutions may required 
example user wants move camera little change focus camera rotation solution skewed squares solution 
higher weights parameters changes 
furthermore camera parameters focus translation rotation different units measure irrational treat equal weight 
simple way enforce condition scale camera parameter space different ratios 
done easily scaling column matrix solving ax diagonal matrix 
linear system overconstrained number control points solution dominated certain control points may desired 
control contribution control point suggest row weighting method 
linear system ax changed new form wax diagonal matrix 
row column weightings may combined reducing linear system ax general form aw diagonal matrices 
row weighting method may useful applications computer animation 
animation movie dramatic scene changes control points 
control points appropriate start scene may scene 
desirable limit effect control point certain time interval keeping smoothness camera motion 
control point assigned active time interval control point valid 
furthermore active set time defined fp ng th control point 
jacobian matrix time constructed active control points 
keep smoothness camera motion function defined non negative smooth function implementation results camera control process briefly summarized pseudo code camera control fs fe input start frames fs start camera parameters fs fe start positions output fs fe sequence camera parameters deltah fe gammaf fe gamma fs gamma deltah newton gamma gamma newton input initial camera parameters start positions destination positions output approximate solution vp positions th step max iteration gamma construct jacobian matrix solve deltax matrix equation deltax gammaf deltax deltaf deltat 
deltat time step deltat deltaf deltat deltat exp deltat 
delta vp fi fi kh gamma gamma kh gamma fi fi ffl return time consuming step solves deltax linear system deltax gammaf squares method 
main subroutine step svd takes rc time theta matrix linear system underconstrained computation takes constant time 
overconstrained system svd takes delta delta delta time 
promising result time complexity grows linearly number control points increases 
experimental results demonstrated 
examples controlling image points shown respectively 
cases points stationary points 
general case shown moving points 
numerical approximations control points control points control points control points experimental results accurate shown 
overconstrained case controlling points experienced large approximation errors shown 
jacobian matrix plays important role lens camera control 
computational efficiency numerical stability algorithm mainly depend simplicity jacobian matrix 
svd method newton approximation numerically stable 
weight squares method provides convenient way controlling optimization criteria 
simplicity jacobian matrix due fact unit quaternion space lie group 
implies delta tangent vector identity element differential calculus complex virtual camera model spaces lie groups 
tangent space exponential map defined differentiable manifold technique extendible general case long exponential map explicit formula 
example consider fibre bundle structure theta shoemake control camera rotations 
applying chain rule ffi theta theta diffeomorphism compute jacobian matrix camera model 
exponential map relatively simple explicit formula case 
conte de boor elementary numerical analysis algorithmic approach rd ed mcgraw hill singapore 
curtis matrix groups springer verlag new york 
carmo differential geometry curves surfaces prentice hall englewood cliffs new jersey 
foley van dam feiner hughes computer graphics principles practice nd ed addison wesley reading mass 
gleicher witkin lens camera control computer graphics vol 
pp 
golub van loan matrix computations johns hopkins university press 
kim kim shin compact differential formula derivative unit quaternion curve technical report dept computer science 
kim nam interpolating solid orientations circular blending quaternion curves appear computer aided design 
kim hong lens camera control simple jacobian matrix technical report cs cg dept computer science 
press flannery teukolsky vetterling numerical recipes cambridge university press 
shoemake animating rotation quaternion curves computer graphics proc 
siggraph vol 
pp 

shoemake fibre bundle twist reduction graphics gems iv heckbert ed academic press boston pp 

strang linear algebra applications rd ed harcourt brace jovanovich pub orlando florida 
wittenburg dynamics systems rigid bodies teubner stuttgart 

