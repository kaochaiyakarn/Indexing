study retrospective line event detection yiming yang tom pierce jaime carbonell school computer science carnegie mellon university pittsburgh pa usa www cs cmu edu yiming investigates extension text retrieval clustering techniques event detection 
task automatically detect novel events temporally ordered stream news stories retrospectively stories arrive 
applied hierarchical non hierarchical document clustering algorithms corpus stories focusing exploitation content temporal information 
resulting cluster hierarchies highly informative retrospective detection previously unidentified events effectively supporting query free query driven retrieval 
temporal distribution patterns document clusters provide useful information improvement retrospective detection line detection novel events 
evaluation manually labelled events judge system detected events obtained result measure retrospective detection value line detection 
rapidly growing amount electronically available information threatens overwhelm human attention raising new challenges information retrieval technology 
traditional query driven retrieval useful content focused queries deficient generic queries happened new 
browsing guidance conceptual structure search space useful information spaces 
consider person returns extended vacation needs find quickly happened world absence 
reading entire news collection daunting task generating specific queries unknown facts unrealistic 
intelligent assistance computer clearly desirable 
assistance take form content summary corpus quick review temporal evolution past events interest listing automatically detected new events demonstrate significant content shift previously known events 
useful structured guidelines navigation document clusters 
table shows sample permission digital hard copy part personal classroom granted fee provided copies distributed profit commercial advantage copyright notice title publication date appear notice copying permission acm copy republish post servers redistribute lists requires prior specific permission fee 
sigir melbourne australia fl acm 
table 
corpus summary keywords automatically generated clusters news stories size top ranking words stemmed clinton congress amend simpson trial jury israel japan kobe russian iraq marin flood rain bosnia game play season crash flight airport clinic sav abort astronaut mir discov patient drug virus infect chin deng trad copyright 
size means number documents included 
summary corpus obtained applying hierarchical content clustering algorithm news stories cnn news reuters articles january february presenting cluster statistically significant key terms 
table shows domestic politics supreme usual oj trial receives media attention table reveals disasters struck kobe japan california events month 
key terms provide content information story counts imply significance measured media attention 
detail desired sub clusters examined query driven retrieval browsing individual documents synthetic summaries documents 
utility computer assistance evident clusters may imperfect current user interface rudimentary 
reports event detection new research topic initiated topic detection tracking tdt project objective identify stories continuous news streams pertain new previously unidentified events 
precise detection consists tasks retrospective detection line detection 
entails discovery previously unidentified events accumulated collection strives identify onset new events live news feeds real time 
tdt project supported government consisting segmentation stories continuous news stream temporal event tracking event detection 
event tracking reported separate 
forms detection intentionally lack advance knowledge novel events access unlabelled historical news stories contrast sets 
event detection essentially discovery problem mining data stream new patterns document content 
bottom document clustering appears natural solution discovery natural clusters introducing assumptions domain stream applications 
bottom clustering result cluster hierarchy allowing observation level abstraction information space 
higher levels clusters give progressively overviews content document groups lower levels provide tighter clusters corresponding specific events temporal phases events sub events 
applied hierarchical incremental nonhierarchical clustering algorithms explore nature problem solution space focusing combined context information temporal patterns event distribution 
directly related going research tdt member groups umass information retrieval group dragon systems speech recognition group 
groups document clustering basic approach 
umass focuses detection disaster events monitoring sudden changes term frequencies news streams stories contain disaster related terms construct cluster centroids 
dragon adapts unigram bigram language models document cluster representation uses means clustering algorithms document grouping 
compare results approaches groups results approaches evaluation section 
related ir literature includes ffl scatter gather cluster approach corpus navigation ffl studies clustering algorithms applications context query driven retrieval :10.1.1.34.6746
detection methods inspired scatter gather including choice basic clustering gac algorithm 
clustering algorithms se major focus study applications evaluations query driven retrieval paradigm 
primary contributions applications clustering techniques event detection 
specifically investigated ffl semantic temporal properties events ffl document clustering content temporal adjacency just content ffl event detection similarity versus novelty ffl evaluation methods retrospective line detection 
event analysis order investigate nature events evaluate effectiveness detection algorithms tdt project prepared collection news stories occurances days violate histograms related events occurances days nyc subway bombing ok city bombing histograms bombing related events events identified tdt researchers guideline explicitly event definition event identify non trivial happening certain place certain time 
property events differ topics 
example twa airplane crash event topic airplane accidents topic event 
distinction gives rise reporting patterns events evolution time 
selecting events tdt corpus entailed initial random sampling corpus bias larger events reported evident 
events selected contain different numbers stories ranging stories panama stories ok city bombing 
entire corpus stories manually labelled story assigned label brief respect events 
corpus contains stories events labeled ones unlabeled events evaluation 
interesting characteristic news stories events associated news bursts 
figures illustrate temporal histograms events axis graph time numbered day axis story count day 
patterns emerged observations temporal event distributions ffl news stories discussing event tend temporally proximate suggesting combined measure lexical similarity temporal proximity criterion document clustering 
ffl time gap bursts topically similar stories indication different events different earthquakes airplane accidents political tdt corpus consists news stories time period july june 
roughly half stories reuters articles half multiple programs cnn broadcast news 
corpus available cmu web site members linguistic data consortium email yiming cs cmu edu 
crises suggesting need monitoring cluster evolution time benefit time windows event scoping 
ffl significant vocabulary shift rapid changes term frequency distribution typical stories reporting new event indicating importance dynamically updating corpus vocabulary statistical term weights 
timely recognition new patterns including previously unseen proper names proximity phrases streams stories potentially useful detection onset new event 
points addressed section design document clustering algorithms event detection described 
detection methods retrospective event detection task grouping stories corpus group uniquely identifies event 
line event detection problem labeling document arrives sequence new old flag indicating current document story discussing novel event time 
investigated clustering methods agglomerative hierarchical algorithm group average clustering gac single pass algorithm incremental clustering incr generates non hierarchical partition input collection 
gac designed batch processing retrospective detection 
incr designed sequential processing retrospective detection line detection 
cluster representation share common representation documents clusters detection tracking algorithms 
employ conventional vector space model uses bag terms representation 
document story represented vector weighted terms words phrases 
normalized vector sum documents cluster represent cluster called prototype centroid cluster 
terms document vector cluster prototype statistically weighted term frequency tf inverse document frequency idf appropriately normalized 
keep top ranking terms vector ignore remaining terms 
value empirically chosen optimize detection tracking performance 
standard cosine similarity cosine value document cluster prototype vectors measure similarity 
employ smart system developed cornell document preprocessing including removal words stemming term weighting 
smart provides term weighting schemes ltc option yielded best detection results experiments 
term document ltc weight defined log tf theta idf dk denominator dk norm vector square root squared sum elements vector 
idf standing inverse document frequency corpus level statistic defined total number training documents number training documents contain term gac hierarchical clustering basic gac algorithm group average clustering gac agglomerative algorithm maximizes average similarity document pairs resulting clusters 
straightforward gac algorithms typically complexity time space quadratic number input documents economical tractable large applications simpler methods single link clustering 
cutting iterative bottomup algorithm aiming compromise cluster quality computational efficiency 
iteration divides current set active clusters documents buckets local clustering bucket 
process repeats generates clusters higher higher levels pre determined number top level clusters obtained 
algorithm time complexity mn number documents input corpus bucket size bucketing reclustering applying algorithm event detection bucketing documents clusters temporal order documents 
motivation just computational efficiency exploitation temporal proximity news stories discussing event 
manually labelled events tdt corpus longer months 
fact events tend appear news bursts reasonable bucket stories order time 
words strategy gives higher priority grouping consecutive stories temporally disparate ones 
input gac algorithm document collection output forest cluster trees number trees specified user 
clusters produced growing binary tree bottom fashion leaf nodes tree single document clusters middle level node merged cluster similar lower level clusters 
default bottom clustering continues root node created represents universal cluster containing clusters stories 
desired number clusters pre specified algorithm stops number clusters reached proceeding root 
algorithm consists steps 
sort stories chronological order initial partition corpus cluster consists single document 

divide current partition non overlapping consecutive buckets fixed size 

apply gac bucket combining lowerlevel clusters higher level ones bottom fashion bucket size number clusters reduced factor ae called reduction factor 

remove bucket boundaries assemble gac clusters preserving time order clusters 
resulting cluster series updated partition corpus 

repeat steps pre determined number top level clusters obtained final partition 

periodically iterations step stories top level clusters flattening component clusters gac clusters internally leaf nodes 
re clustering step augmentation cutting algorithm 
step useful events straddle initial temporal bucket boundaries subsets stories discussing event different buckets clustered somewhat similar stories low level assembled higher level node cluster tree 
subsequent re clustering reduces systematic bias initial bucketing results tighter clusters obtained reclustering 
tunable parameters tunable parameters algorithm including 
bucket size number clusters limits scope gac clustering iteration 
reduction factor ae iteration 
minimum similarity threshold clusters combined 
number terms keep cluster prototype 
term weighting scheme 
number iterations re clustering 
parameter tuning empirical issue 
table shows parameter values typical retrospective detection experiments 
table 
typical parameters retrospective gac bucket size clustering threshold terms vector term weighting ltc reduction factor ae iterations re clustering single pass clustering incremental clustering algorithm quite simple 
sequentially processes input documents time grows clusters incrementally 
new document absorbed similar cluster generated previously similarity document prototype cluster pre selected threshold document treated seed new cluster 
adjusting threshold obtain clusters different levels granularity 
additional efforts exploit dynamic nature input data temporal properties events efforts described sections 
incremental idf task specific constraint line detection prohibited information stories documents posterior current point processing 
raises issue deal growing vocabulary incoming documents dynamic updating corpus level statistics idf impact term weighting vector normalization affect document clustering 
possible approaches problems 
obtain fixed vocabulary static idf statistics retrospective corpus similar application domain cnn wsj news stories prior period tdt stories vocabulary idf values term weighting newly coming documents clusters 
assign constant weight vocabulary oov terms kind smoothing term weights 

incrementally update document vocabulary recompute idf time new document processed 
empirical analysis shows incremental idf approach effective document retrieval sufficient number past documents processed 
chose combine approaches starting idf statistics retrospective corpus updating idf incoming document 
incremental inverted document frequency idf defined idf log current time term number accumulated documents current point including retrospective corpus number documents contain term current point 
time window decaying function line detection time window limit prior context previous stories 
current document sequential processing similarity score document time window computed 
flag new assigned document similarity scores window pre determined threshold 
confidence score decision defined score gamma max window current document th document window tested decaying weight function documents removed time progressively influence current decision 
modified formula confidence score document score gamma max window sim method provides smoother way temporal proximity uniformly weighted window 
note simplicity define time window documents clusters time periods easy generalize definitions documents larger groupings 
windowing strategies yielded measurable improvements line detection experiments enhancing precision small sacrifice recall 
linear decay temporal window yielded consistently better results uniformly weighted window 
similarly investigated time windowing incr clustering retrospective detection 
experiments parameters fixed window documents covering months time improved performance score measure defined evaluation section 
detection thresholding user specified thresholds control detection decisions incremental algorithm clustering threshold tc novelty threshold tn 
determines granularity resulting clusters essential retrospective event detection determines sensitivity novelty crucial line detection 
letting tc tn gamma score line detection rules defined ffl tc set flag old add document similar cluster window ffl tc tn set flag old treat document new singleton cluster ffl tn set flag new treat document new singleton cluster 
thresholds permits better empirical optimization different tasks 
instance tc tn appropriate retrospective clustering tn needed line detection clustering tc better 
tables show parameter values typically retrospective detection line detection experiments incr 
table 
typical parameter values retro 
incr window size clustering threshold terms doc vector term weighting ltc table 
typical parameter values line incr window size linear decay clustering threshold novelty threshold terms doc vector limit term weighting ltc idf retro line updating evaluation detection effectiveness evaluated events total stories tdt corpus detection systems run entire corpus presumably detected events outside evaluated 
retrospective detection results official evaluation tdt project required retrospective detection system generate partition corpus non overlapping clusters span entire tdt corpus 
system may generate number clusters evaluated events 
partition generated cluster best matches labeled events evaluation contingency tables 
table 
cluster event contingency table event event cluster cluster table illustrates contingency table cluster event pair document counts corresponding cases 
evaluation measures defined contingency table including false alarm recall precision measure ffl undefined ffl undefined ffl undefined ffl undefined ffl rp thetaa undefined 
measure global performance averaging methods 
micro average obtained merging contingency tables events summing corresponding cells merged table produce global performance measures 
obtained producing event performance measures averaging corresponding measures 
table shows best result incremental clustering algorithm official tdt retrospective detection evaluation detection system required produce partition entire corpus 
table shows improved results obtained clusters permitted 
cmu results correspond modified gac method described earlier 
available results umass dragon included comparison reports tdt workshop 
table 
retrospective detection results partition required cmu umass dragon incr dupl multi pass recall precision false alarm micro avg macro avg table 
retrospective detection results cluster overlap hierarchy allowed cmu umass gac dupl recall precision false alarm micro avg macro avg results show allowing cluster hierarchy cmu gac cluster overlap umass dupl yielded better results requiring corpus partition 
believe main reason better performance gac multi leveled clusters enable detection events degree granularity 
representational power gac comes cost resulting larger number clusters particular run number clusters partition incr 
difference may significant effect user cluster hierarchies scatter gather type navigation query driven retrieval search steps needed total number clusters 
results partition producing algorithms surprised simplest approach clustering incr cmu worked multi pass means clustering method dragon 
may partly temporal proximity events simplifies clustering problem 
line detection results required output line detection system decision new old incoming document confidence score decision 
events containing stories defined tdt corpus event story report event stories flag new entire corpus 
small number statistically reliable estimation performance 
improve reliability pass detection evaluation conducted 
pass story events removed detection evaluation applied corpus 
eleven passes labeled 
pass contingency table constructed evaluation shown table 
table 
line detection contingency table new true old true predicted new predicted old table figures summarize results cmu umass dragon 
cmu umass conducted multiple runs different parameter settings best result site respect measure 
cmu results correspond parameters discussed earlier table 
note cmu umass chose individual documents clusters represent past line detection dragon single pass means clustering approach interpret better results multi pass clustering allowed task definition knowledge available decision making point 
clustering order pass novelty test story sufficiently different past stories stronger condition novel average 
table 
line new event detection results cmu umass dragon clust clust pass clust recall precision false alarm micro avg macro avg note scores table measure system specific trade level recall precision 
order measure continuous trade recall precision recall precision curves decision error trade det curves curves obtained moving thresholds scores detection decisions 
det software provided tdt project generate det curves converted data point pair false alarm values det curves corresponding recall precision values obtain recall precision curves 
cmu results depicted solid lines show better performance high precision area 
especially evident cmu umass dragon approaches exhibit different behaviors inviting detailed investigation 
behavior analysis order compare behavior algorithms human judgments contrast temporal histograms system generated clusters retrospective detection corresponding histograms human judgments 
figures show pairwise histograms events gac incr respectively 
shows gac performance events 
upper half graph histogram human labeled documents event lower half histogram system generated cluster event 
absolute value axis story count event cluster particular day 
event cluster perfect match histograms completely symmetric mirroring 
figures show gac incr complementary strengths weaknesses 
gac shows surprisingly symmetric graphs events significant temporal extent gac particularly suitable recognition large news bursts 
incr hand symmetric performance compared gac better tracking long lasting events dna trail death kim jong il 
observed behavior may come partly different biases algorithms partly parameter settings particular experiments 
decision error curves plot false alarm analogous precision recall trade curves 
better performance corresponds proximity origin 
original det software provided tdt project sponsor adapted version implemented umass group richer options 
precision recall recall precision curves online detection cmu incr umass terms dragon pass line detection recall precision curves false alarm probability det curves online detection cmu incr pass umass term line detection det curves concluding remarks event detection retrospective line represents new family tasks ir 
results pilot study tasks reinforced results umass dragon show basic techniques document clustering highly effective problems defined content information temporal information jointly properly 
retrospective detection requiring strict partition document space gac incr clustering algorithm dragon exhibit comparable performance partition requirement relaxed hierarchical gac approach best 
line novel event detection somewhat difficult retrospective detection 
non clustering techniques demonstrated better detection accuracy clustering approaches investigation needed better understanding 
spite reasonable results obtained cmu dragon umass remains done 
research questions investigation include ffl exploit multiple input streams cnn ap 
reinforce topical clusters 
ffl better exploit temporal patterns proper names proximity phrases appear highly informative humans event indicators 
occurances days event ok city bombing cluster gac bucketing event ok city bombing vs gac cluster occurances days event ok city bombing cluster incr event ok city bombing vs incr cluster occurances days event dna oj trial cluster gac bucketing event dna oj trial vs gac cluster occurances days event dna oj trial cluster incr event dna oj trial vs incr cluster ffl provide global view information space retrospectively clustered events emerging newly detected ones 
ffl user actively involved cluster navigation permitting zoom options providing summaries different degrees granularity corpus level cluster level document level sub document level 
ffl evaluate compare usefulness cluster hierarchy cluster set assisting user query free query driven retrieval 
shall measure example quickly user find relevant cluster time evaluation criterion 
charles wayne george doddington dod guidance tdt task definition evaluation james allan umass jon yamron dragon sharing ideas results research 
tdt research sponsored dod 
opinions authors necessarily reflect sponsors 
days cluster 
aldrich ames days cluster 
carlos days cluster 
carter bosnia days cluster 
white house days cluster 
clinic days cluster 
comet jupiter days cluster 
panama days cluster 
death kim jong il korea days cluster 
dna oj trial days cluster 
observers days cluster 
halls korea days cluster 
humble tx flooding days cluster 
justice days cluster 
harding days cluster 
kobe japan quake days cluster 
lost iraq days cluster 
nyc subway bombing days cluster 
ok city bombing days cluster 
pentium chip flaw days cluster 
lung days cluster 
days cluster 
violate days cluster 
shannon days cluster 
crash days cluster 
wtc bombing trial pairwise histograms tdt events vs best fit clusters gac jamie callan 
document filtering inference networks 
proceedings th annual acm sigir conference pages 
carbonell goldstein 
automated query relevant summarization reranking 
proceedings ijcai workshop ai digital libraries nagoya japan 
cutting karger pedersen tukey 
scatter gather cluster approach browsing large document collections 
th ann int acm sigir conference research development information retrieval sigir 
feder greene 
optimal algorithms approximate clustering 
th annual acm symposium theory computing stoc pages 
salton 
automatic text processing transformation analysis retrieval information computer 
addison wesley reading pennsylvania 
croft 
support browsing intelligent text retrieval system 
international journal man machine studies pages 
van rijsbergen 
information retrieval 
butterworths london 
ellen voorhees 
implementing hierarchic clustering algorithms document retrieval 
information processing management volume pages 
willett 
trends hierarchic document clustering critical review 
information processing management 
yang carbonell allan yamron 
topic detection tracking detection task 
proceedings workshop topic detection tracking 
