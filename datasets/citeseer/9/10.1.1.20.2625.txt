random walks weighted graphs applications line algorithms extended don coppersmith peter doyle prabhakar raghavan marc snir march version dated september study design analysis randomized line algorithms 
show problem closely related synthesis random walks graphs positive real costs edges 
weighted undirected graph nodes ng ij ji cost edge connecting nodes ii 
consider random walk graph executed transition probability matrix ij ij probability walk moves node node walk pays cost ij process 
ij general ji expected cost random walk starting node node ii expected cost round trip 
say random walk stretch exists constant sequence nodes gamma delta gamma prove tight result random walk weighted graph nodes stretch gamma weighted graph nodes random walk stretch gamma 
upper bound proof constructive shows compute transition probability matrix cost matrix ij 
proof uses new connections random walks effective resistances networks resistors results electric network theory 
consider network resistors nodes conductance oe ij nodes nodes connected resistor branch resistance oe ij 
ij effective resistance nodes ij current flow volt applied known ij oe ij 
resistive random walk defined probabilities ij oe ij oe ik section show random walk stretch gamma graph costs ij ij random walk optimal stretch obtained computing resistive inverse oe ij cost matrix ij network branch conductances oe ij ij effective branch resistance unfortunately cost matrices resistive inverses positive conductances 
matrix ij generalized resistive inverse network non negative branch conductances oe ij associated effective resistances ij ij ij ij ij oe ij 
section show resistive random walk stretch gamma graph costs ij consequently graph costs ij traverses edges costs underestimates 
chandra electric networks analyze particular random walk ij ij ik :10.1.1.3.8954
traditionally electric networks studying random walks analyze random walk cf 
doyle snell 
electric networks synthesize different general random walk optimal stretch 
outline relevance random walk synthesis problem design line algorithms 
consider game played cat mouse graph round starts cat mouse node gamma mouse moves new node known cat cat walks graph reaches mouse point round starts 
strategy cat competitive exists constant sequence nodes cat expected cost delta mouse cost competitiveness coefficient cat mouse game infimum competitive strategy exists 
random walk stretch defines strategy cat competitive round cat executes random walk finds mouse 
strategy simple memoryless cat need remember previous moves cat move depends current position 
show cat mouse game core online algorithms evoked tremendous interest late 
consider settings 
server problem defined 
line algorithm manages mobile servers located nodes graph edges positive real lengths satisfy sequence requests service node moving server server 
time moves server pays cost equal distance moved server 
compare cost algorithm cost adversary addition moving servers generates sequence requests 
competitiveness line algorithm defined respect costs section 
conjectured cost matrix exists competitive algorithm problem 
repeated attempts prove conjecture succeeded special cases 
optimal random walk derive competitive server algorithm situations graph resistive inverse graph nodes 
includes previously known cases conjecture proven true new cases 
single unified theory resistive inverses 
algorithm simple memoryless 
setting metrical task system mts defined 
mts consists weighted graph nodes graph states edge weights costs moving states 
algorithm occupies state time 
task represented vector cost processing task state algorithm sequence tasks move processing task 
cost incurred algorithm sum costs moving processing tasks 
gamma competitive line algorithm mts shown optimal 
algorithm deterministic somewhat complex 
section simple memoryless randomized algorithm mts gamma competitive 
lower bound stretch theorem theta cost matrix transition probability matrix stretch random walk defined graph weights gamma 
proof assume irreducible underlying directed graph strongly connected 
oe ith component left eigenvector eigenvalue aperiodic stationary probability node oe oe ij ij ij denote expected cost move node oe ij oe ij ij average cost move 
oe ij ji oe ij ji oe ii gamma oe oe gamma gamma oe ij ji oe ij ij oe ij ji gamma oe ij ji notice directed edge ji note order 
counted multiplicity proportional oe ij flow condition satisfied total multiplicity edges leading equal leading equation represents convex combination cycles cycle stretch gamma gamma symmetry cost matrix necessary theorem 
upper bound resistive case consider complementary upper bound problem synthesize matrix achieves stretch gamma section describe construction proof class matrices known resistive matrices 
oe ij non negative symmetric real matrix zero diagonal 
build support graph vertex set ng edge set oe ij connected 
consider network resistors resistor vertices branch conductance oe ij branch resistance oe ij ij effective resistance vertices unit voltage network resistors results current ij require support graph connected effective resistances finite 
definition cost matrix ij resistive matrix effective resistances obtained connected non negative symmetric real matrix oe ij conductances 
matrix oe ij resistive inverse facts difficult prove follow standard electric network theory 
resistive cost matrices symmetric finite positive diagonal zero diagonal satisfy triangle inequality ij jk ik principal submatrix resistive cost matrix resistive 
define gamma theta gamma matrices oe oe ii jn oe ij gamma oe ij gammaoe ij gamma ij jn gamma ij gamma oe inverse gamma oe ij jk ffi ik happen cost matrix ij gives rise putative resistive inverse negative conductances oe ij case resistive inverse examples resistive cost matrices include points distances satisfying triangle inequality 
points line vertex real number ij gamma 
uniform cost matrix ij 
tree closure spanning tree vertices positive costs tree edges distance pair points equals distance tree 
cost matrix graph vertices xm gamma 
associated resistive inverse complete bipartite graph resistors resistance mn edge 
example expressed tree closure example tree closure midpoint tree path joining distance gamma contradicting gamma resistive cost matrix resistive inverse oe ij provides way synthesizing optimal random walk achieving stretch gamma 
fact determining stretch random walk suffices consider sequences nodes form cycle theorem ij resistive cost matrix oe ij resistive inverse 
transition probabilities ij oe ij oe cycle stretch gamma gamma delta proof doyle snell define escape probability esc ij probability random walk starting vertex reach vertex returning vertex doyle snell show esc ij ij oe ik average gh oe gh steps random walk visits vertex frequency oe ik number traversals ordered edge ij oe ij average cost gh oe gh steps gh oe gh gh gamma foster theorem 
oe ik round trips vertex number visiting vertex esc ij oe ik ij average cost round trip vertex back gh oe gh gh ij gamma delta ij gamma delta ij ji cost definition ij ji ij ji gamma delta ij ji stretch cycle gamma need bound stretch cycle just cycles 
stationary probability traversing directed edge ij oe ij gh oe gh symmetric oe symmetric 
random walk reversible markov chain 
cycle expected number forward traversals cycle necessarily consecutive expected number backward traversals cycle expected cost forward traversal expected cost backward traversal 
gamma gamma cycle stretch gamma upper bound non resistive case section prove existence generalized resistive inverse 
generalized resistive inverse turns solution convex variational problem simple iterative algorithm finding 
generalized resistive inverse get gamma competitive strategy cat mouse game arbitrary positive symmetric cost matrix 
theorem positive symmetric cost matrix 
unique resistive cost matrix associated conductance matrix oe ij ij oe ij ij ij oe ij 
oe generalized resistive inverse proof simplicity limit discussion case triangle graph assigned costs edge conductances oe oe oe corresponding effective resistances case exhibit features general case allow get cumbersome subscripts 
please note triangle graph cost matrix resistive satisfies triangle inequality general graph triangle inequality necessary means sufficient 
needless say condition analysis triangle graph 
recalling relevant electrical theory cf 
weinberg 
admittance matrix network gammaa gammab gammaa gammac gammab gammac hook network world outside establish node voltages currents flowing network nodes power dissipated network 
matrix non negative definite eigenvector 
label eigenvalues orthogonal complement fv eigenvalues determinant kj product non zero eigenvalues lowest order coefficient characteristic polynomial expressed kirchhoff tree formula det kj fi fi fi fi fi gammaa gammaa fi fi fi fi fi fi fi fi fi fi gammab gammab fi fi fi fi fi fi fi fi fi fi gammac gammac fi fi fi fi fi ab ac bc ab ac bc ab ac bc discriminant ab ac bc obtained summing spanning trees network product edges making tree cf 

effective resistances obtained gradient log edge conductance space log log log log ostensibly review 
non negative orthant pi fa edge conductance space function log log det kj gamma log concave gil strang pointed follows fact set positive definite matrices function log concave see 
log concave effective resistances partial derivatives conductances induce finite effective resistances arg max pi log gamma resistive inverse exists solution convex programming problem 
extremal problem unique solution equation uniquely determines point pi 
kuhn tucker conditions identify point unique point lies interior pi genuine resistive inverse lies boundary generalized inverse true resistive inverse zero conductances 
re set 
proof applies case demand oe ij certain selected edges ij place upper bounds corresponding ij set ij 
ij resistive matrix inversion section find associated conductance matrix oe ij ij resistive iterative algorithm converges generalized resistive inverse existence guaranteed theorem 
presenting algorithm limit discussion case graph triangle notation 
foster theorem ar bs ct number nodes graph 
arg max sigma sigma closure open simplex sigma fa ar bs ct locate maximum knee jerk algorithm iterate mapping algorithm particular instance general method known baum algorithm 
mapping takes sigma strictly increases objective function sigma 
see baum 
follows starting guess sigma sequence iterates converges generalized resistive inverse 
return cat mouse game 
corollary weighted graph nodes 
cat gamma competitive strategy cat mouse game server problem consider server problem manasse defined section 
compare performance line server algorithm performance adversary servers 
adversary chooses request step knowing current state line algorithm moves servers satisfy request necessary 
line algorithm moves servers necessary knowing state adversary 
algorithm competitive exists constant adversary request sequence cost line algorithm delta cost adversary adversary termed adaptive line 
weaken adversary requiring choose sequence requests advance know actual random choices line algorithm servicing request sequence oblivious adversary 
alternatively strengthen adversary allowing postpone decision server moves entire sequence requests generated adaptive line adversary 
types adversaries randomized algorithms provably different 
coincide line algorithm deterministic 
furthermore randomized algorithm competitive adaptive line adversaries competitive deterministic algorithm 
theorem resistive cost matrix 
randomized competitive strategy server problem adaptive line adversary 
generally node subgraph resistive competitive strategy server problem proof exhibit competitive line algorithm general case call algorithm 
request arrives vertices servers cover denote vertices 
suppose request arrives vertex fails cover 
consider vertex subgraph determined hypothesis resistive 
oe denote resistive inverse 
probability oe oe selects server vertex move request vertex finite oe connected denominator oe nonzero probabilities defined sum 
need prove competitive 
define potential phi confused electrical potential 
say servers presently vertices fa adversary servers presently vertices fb may overlap 
define phi sum costs edges vertices currently occupied servers plus times cost minimum weight matching vertices occupied servers adversary servers 
phi jk min delta ranges permutations kg define quantity delta depending position past history delta history phi cost gamma delta adversary cost cost cumulative 
show expected value delta non increasing function time show imply theorem 
consider changes delta due move adversary increase phi ii move hopefully tends decrease phi 
showing cases expected change delta argue sequence requests expected cost times adversary cost plus additive term independent number requests 
adversary moves servers cumulative cost increased potential phi increase times quantity minimum weight matching increase weight obtain new matching old matching gamma note weight new matching plus weight old new minimum weight matching heavier constructed matching 
case delta increase 
consider move compare cost expected change phi 
suppose overlap gamma places remove assumption define convenience set ij oe ij defined ij recall equations relating oe specialized entries interest oe oe oe gammaoe ji jm im gamma ji oe ji ffi multiply equation sum noticing range ffi obtain oe ji oe oe ji oe im gamma gamma oe jm im gamma ji bracketed expression jm im gamma ji zero include sum extending limits summation oe im gamma gamma oe jm im gamma ji oe gamma im gamma gamma gamma jm gamma im ji oe kc gamma gamma kc jm ji oe kc gamma gamma kc jm im ji gamma defining kc jm ij kc jm ij gamma discover oe gamma gamma straightforward verify expected change delta random move probability oe oe oe theta oe gamma gamma expected change delta zero move 
verify case overlap fewer gamma vertices move 
suppose request vertex suppose current minimum weight matching pairs perform previous analysis adversary servers presently vertices obtain oe theta oe gamma gamma true potential phi differs previous case weight minimum weight matching 
consider new matching necessarily minimum weight current move obtained old matching matching new matching differs old gamma gamma gamma triangle inequality 
previous analysis guaranteed expected change delta zero calculation value gamma change phi true change phi allow new matching minimum weight expected change delta non positive 
expected value delta history phi cost gamma delta adversary cost nonincreasing step 
phi positive find cost gamma delta adversary cost remains bounded expectation initial value delta competitiveness result valid graph infinite requires cost simple path bounded node subgraph resistive 
potential phi developed prove result natural useful server problem 
subsequently authors 
corollaries theorem competitive algorithms server problem metric space points line weighted cache problem uniform cost caching case points tree 
algorithms extremely simple memoryless 
berman give algorithm servers achieves finite competitiveness metric space 
sole exception result special case server problem finite competitiveness known resistive metric space 
certainly known cases know competitive line algorithms special cases resistive metric spaces 
theory resistive random walks unifies generalizes current picture server conjecture implies competitive deterministic algorithms resistive spaces 
theorem derive competitive server algorithms non resistive spaces approximated resistive spaces 
cost matrix approximation matrix ij ij ij ij server algorithm competitive matrix competitive matrix observation derive competitive algorithm servers nodes circle distances measured circumference 
consider points circle cost ij points distance smaller arc joining 
construct approximation cost arc circle resistor resistance equal arc length 
smaller larger arc distances joining points ff fi respectively effective resistance fffi ff fi ff fi easily conjunction results implies competitive deterministic algorithm servers circle 
finitely competitive deterministic algorithm known problem 
hand possible finitely approximate arbitrary distance matrices derived euclidean plane proof omitted version 
approximation technique solve server problem plane 
turn case gamma 
theorem cost matrix 
nodes gamma servers gamma competitive strategy 
significance theorem holds ij satisfy triangle inequality case prior result exists 
proof outline assume servers occupy distinct nodes 
line algorithm adversary unoccupied node consider respectively cat mouse 
server moves cat resp 
mouse moves cost ij ji assume adversary requests unique node cat position occupied line algorithm 
move servers satisfy request positions cat mouse coincide 
situation corresponds exactly cat mouse game result follows corollary 
metrical task systems consider metrical task systems defined borodin 
definitions omitted brevity reader referred 
compare performance line algorithm performance adversary 
step adversary chooses task knowing current state line algorithm chooses position 
line algorithm competitive constant adversary cost line algorithm delta cost adversary cost includes task processing cost cost moves 
borodin define line algorithm metrical task systems traversal algorithm states visited fixed sequence delta delta delta independent input task sequence sequence positive threshold costs delta delta delta transition occurs total task processing cost incurred entering reaches fact set extend definition randomized traversal algorithms 
condition replaced states visited markov process independent input task sequence 
borodin give gamma competitive deterministic traversal algorithm complex gamma competitive deterministic algorithm optimal 
give gamma competitive randomized traversal algorithm 
algorithm simple memoryless 
random walks developed sections 
ij cost matrix metrical task system graph nodes 
oe ij generalized resistive inverse ij ij transition probabilities resistive random walk 
line algorithm transition current state expected total task processing cost entering state exceeds threshold fi borodin describe continuous time view process state transition point time discrete steps details done omitted version randomly chooses state state chosen probability ij theorem line algorithm gamma competitive adaptive line adversary choice thresholds fi ij ij oe ij ij 
proof outline show algorithm corresponds cat mouse game modifications cat pays fi reaches node mouse caught node cat mouse move new node pay ij stay put node cat catches pay fi additional properties prove resistive walks show expected total task processing cost cat extended game gamma times expected total cost edges traversed cat 
nontrivial loop random walk cat stretch gamma 
show ii gamma delta fi follows expected move cost cat gamma times mouse cost expected total cat cost gamma delta gamma gamma times mouse cost 
open problems section list open problems raised 
know stretch achieved random walks cost matrix symmetric 
interesting study cat mouse game wider class strategies 
instance circumference circle easy give deterministic algorithm cat achieves constant competitiveness 
consider randomized algorithms random walks 
fact simple memoryless randomized algorithm achieves competitiveness graph complete graph nodes cost edge 
results server problem general metric spaces 
prove resistive random walk yields server algorithm achieves competitiveness function metric space adaptive line adversary 
yield deterministic algorithm having finite competitiveness arbitrary metric space 
prove resistive server algorithm gamma competitive lazy adaptive line adversary moves node occupied adversary server occupied line algorithm server adversary requests node 
lazy adversary conjecture resistive line algorithm achieves worst performance lazy adversary 
proof conjecture show resistive algorithm gamma competitive metric space 
baum 
inequality applications statistical estimation probabilistic functions markov processes model ecology 
bull 
amer 
math 
soc 
ben david borodin karp tardos wigderson 
power randomization line algorithms 
algorithmica 
berman karloff tardos 
competitive server algorithm 
proceedings st acm siam symposium discrete algorithms pages 
borodin linial saks 
optimal online algorithm metrical task systems 
journal acm 

algebra networks 
trans 
amer 
math 
soc 
chandra raghavan ruzzo smolensky tiwari :10.1.1.3.8954
electrical resistance graph captures commute cover times 
proceedings st annual acm symposium theory computing pages seattle may 
chrobak karloff payne vishwanathan 
new results server problems 
proceedings st acm siam symposium discrete algorithms pages 
chrobak 
optimal online algorithm servers trees 
siam journal computing 
doyle snell 
random walks electric networks 
mathematical association america 
fiat karp luby mcgeoch sleator young 
competitive paging algorithms 
journal algorithms 
foster 
average impedance electrical network 
contributions applied mechanics anniversary volume pages 
edwards ann arbor mich 
foster 
extension network theorem 
ire trans 
circuit theory 
kemeny snell knapp 
denumerable markov chains 
university series higher mathematics 
van nostrand princeton nj 
manasse mcgeoch sleator 
competitive algorithms server problems 
journal algorithms 
marshall 
inequalities theory majorization applications 
academic press new york 
papadimitriou 
shortest paths map 
theoretical computer science 
raghavan snir 
memory versus randomization line algorithms 
th international colloquium automata languages programming volume lecture notes computer science pages 
springer verlag july 
revised version available ibm research report rc june 
sleator tarjan 
amortized efficiency list update paging rules 
communications acm february 
weinberg 
network analysis synthesis 
mcgraw hill new york 

