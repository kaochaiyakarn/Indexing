managing time workflow systems johann eder panagos department informatics systems labs research university klagenfurt park avenue klagenfurt austria florham park nj eder isys uni ac research att com currently available workflow management systems wfmss offer sophisticated modeling tools specifying analyzing workflow processes time management support rudimentary 
existing time management functionality mainly addresses process simulations identify process bottlenecks analyze execution durations assignment deadlines activities triggering process specific exception handling activities referred escalations deadlines missed process execution 
address crucial role time management lifecycle workflow processes 
particular describe structural execution order dependent explicit fixed date periodic upper lowerbound time constraints modeled process definition validated modeling instantiation times monitored managed execution time 
today critical need companies striving competitive ability control flow information enterprise timely manner 
consequently time related restrictions bounded execution durations absolute deadlines associated process activities sub processes 
arbitrary time constraints unexpected delays lead time violations 
typically time violations increase cost business processes require type exception handling 
comprehensive treatment time time constraints crucial managing business processes 
instance process managers need tools help anticipate time problems pro actively avoid time constraints violations decisions relative process priorities timing constraints significant unexpected delays occur 
workflow management systems wfmss improve business processes automating tasks getting right information right place specific job function integrating information enterprise 
currently available commercial workflow products offer sophisticated modeling tools specifying analyzing workflow processes time management functionality rudimentary 
particular existing time management functionality supports process simulations identify potential bottlenecks analyze activity execution durations assignment deadlines activities triggering escalations process specific exception handling activities deadlines met 
consistency deadlines side effects missing neglected 
imperative current wfmss provide necessary information process time restrictions actual time requirements process modelers managers 
build time workflow schemas defined developed workflow modelers need means represent time related aspects business processes activity durations time constraints activities check feasibility run time workflow processes instantiated executions started process managers able adjust time plans extend deadlines time constraints unexpected delays process execution pro active mechanisms needed notifying process managers potential time constraint violations take necessary steps avoid time failures time constraint violated wfms system able trigger exception handling regain consistent state workflow instance workflow participants need information tasks assigned manage personal lists accordance goals business process re engineers need information actual time consumption workflow executions improve business processes controllers quality managers need information activity start times execution durations 
aspects usually provided workflow systems workflow documentation referred workflow history workflow logging monitoring interfaces 
mainly interested aspects 
particular address issues 
modeling time time constraints capture available time information pro active time calculations detect time constraint violations raise alerts case potential time violations time monitoring deadline checking handling time errors run time 
note effectiveness time management depends workflow kind detailed description external causes time relevant events 
highly structured production workflows time requirements calculated high degree accuracy 
administrative workflows span different organizations depend external events waiting customer reply may change schema execution dynamic ad hoc workflows time calculations imprecise 
time planning management controlling done experience common practice 
typically time planning relies estimates experience 
time management execution process important environments time monitoring essential adjusting plans avoid deadline violations 
knowledge time issues modeled workflow execution 
remainder structured follows 
section describes workflow model assume addresses activity durations deadlines defines explicit time constraints 
section presents time information time constraints modeled 
section discusses time constraint satisfiability monitoring workflow process 
section outlines possible solutions time violation may occur run time 
section touches workflow executions 
section offers comparison related section concludes presentation 
workflow time constraints section describing assumptions workflow model remainder 
discuss various time constraints associated processes activities 
workflow model workflow collection activities agents dependencies activities 
activities correspond individual steps business process agents software systems humans responsible execution activities 
dependencies determine execution sequence activities data flow 
activities executed sequentially repeatedly loop parallel 
parallel executions unconditional activities executed conditional activities satisfy certain condition executed alternative activity alternatives executed 
addition workflows may contain optional activities 
activities may executed specific workflow instance order satisfy time constraints associated instance 
typically workflows represented workflow graphs process maps nodes correspond activities edges correspond dependencies activities 
shows example workflow graph aforementioned notions 
activity start activity 
followed conditional split executed 
executed split follows executed parallel completed 
complete execution starts execution 
activities optional 
alternative split executed valid choices 
corresponds final activity workflow 
example workflow graph note exists important difference conditional alternative execution activities 
conditional case activity executed depends data state generated execution workflow process instance 
alternative case activity executed depends policies information shared instances workflow process 
implies alternative lead valid workflow execution time management schedule tight alternative shortest execution time chosen express chosen international shipment regular postal service 
due conditional alternative structures different sets activities executed depending case data workflow policies choices workflow participants 
different set activities corresponds valid execution referred workflow instance type 
example workflow instance type workflow shown 
execution durations deadlines order represent time information need augment workflow model basic temporal types time points durations deadlines 
sake simplicity assume time information basic time units 
workflow schema workflow designer assign execution durations deadlines individual activities workflow process 
durations calculated past executions assigned specialists experience expectations 
addition multiple execution durations may assigned activity 
typically common duration values minimum maximum average 
activity process deadlines hand correspond maximum allowable execution times activities processes respectively 
remainder refer deadlines explicit deadlines 
process build time deadlines specified relative process time granularity hours minutes wednesday 
process instantiation time calendar convert relative deadlines absolute time points modify assigned deadlines assign new deadlines 
important note activity durations deadlines may treated existing workflow management systems 
distinguishing beneficial cases actions taken deadline missed high cost associated rollback entire process 
cases activity takes longer execute duration assigned workflow schema preemptive steps taken assess deadline satisfiability modify workflow parameters alert appropriate agents process managers 
deadlines associated activity workflow schema 
extremely beneficial assign deadlines activities 
compelling reason ability monitor execution progress activities processes preemptive actions taken delays developed 
deadlines referred internal deadlines computed process build instantiation time run time sequel 
explicit time constraints time constraints derived implicitly control dependencies activity durations 
arise fact activity start predecessor activities finished 
constraints called structural time constraints reflect control structure workflow 
hand workflow designers specify explicit time constraints organizational rules business policies laws regulations service level agreements 
examples constraints include invitation meeting mailed participants week meeting hardware failure reported service team customer site hours vacant positions announced wednesday month inventory checks finish december st loans usd approved scheduled meetings board directors 
explicit constraints temporal relations events bindings events certain sets calendar dates 
workflow systems events correspond main events associated activity start 
start event denotes start activity event denotes completion 
temporal relationships events time constraints defined assuming corresponds relative time duration 
lower bound constraint time distance source event destination event greater equal 
notation lbc 
upper bound constraint time distance source event destination event smaller equal 
notation ubc 
example lower bound constraint includes legal workflow activities serving warning closing business requirement certain time period passes serving warning closing business 
example chemical process control workflow reaction initiated certain time passes start reaction 
upper bound constraints common 
requirement final patent filing done certain time period preliminary filing time limits responses business letters provide typical examples constraints 
express constraints bind events specific calendar dates abstraction generalizes typically infinite set dates monday th month required 
fixed date object fixed date object data type methods prev return respectively previous valid dates arbitrary date period returns maximum distance valid dates dist returns maximum distance valid dates object fixed date object having default value period 
example fixed date object em monday 
operation em return date monday em prev return monday em period return days 
fixed date object efm month distance em dist efm days efm dist em days 
having fixed date objects disposal define constraints follows 
fixed date constraint express time constraint binds event fixed date write fdc fixed date object 
fixed date constraints associated activity simplicity assume constraint remainder 
workflow time modeling workflow graphs extended include time related data 
workflow graph nodes correspond activities attributes associated role responsible enactment activity easily model time related data adding attributes 
time constraints activities shown graph additional edges time edges 
rest focus time related activity attributes discuss attributes lifecycle process 
workflow graph includes time information referred timed activity graph timed graph 
activity node timed graph called timed activity node 
mentioned previous section activity start events associated 
depending execution duration associated attach pairs events simplicity average execution time expected execution duration activity 
start event computed event known need consider events modeling time constraints 
computation activity events developed extension critical path cpm project planning method frequently project management 
activity name duration optional ebf ebs ewf lbs timed activity node due conditional optional execution activities time information associated event activity ebs ebf ewf lbs lws shown 
stands earliest point time may stands latest possible point time finish ensure minimal execution time entire process 
conditional branches may require different execution times denote best case denote worst case 
optional alternative activity executions captured corresponds execution optional activities executed fastest alternative selected corresponds execution optional activities executed alternative selected 
example ws corresponds earliest point time may finish belongs path worst conditional branches optional activities executed slowest alternative chosen 
hand ws corresponds latest possible point time activity finish order minimize execution entire process assuming worst conditional branches followed optional activities executed alternative selected remaining process 
shows result calculating values workflow shown 
computations outlined section 
lws example workflow graph including time information important information timed graph activity values particular values activity activity executed termination time point corresponds termination time point entire process 
particular earliest possible time entire workflow cor responds bf happen conditional branch containing followed activities executed selected hand optional activities executed workflow finish early late depending specific alternative conditional activity executions 
values activity indicate path containing activity may lead time error process execution 
particular values activity greater corresponding exist execution paths containing activity avoid time violations 
exist values matching values exist paths may lead time violations 
example activity negative lbs values 
executed run time deadline entire process set deadline violated 
node timed workflow graph includes aggregated time information workflow instance types 
presence conditionally executed activities considerable variations execution durations information coarse grained workflow bs ws designers 
timed workflow graph may offer solution 
graph contains exactly set instance types original graph 
contain joins termination nodes instance type 
workflow graph unfolded different time information assigned activities disparate instance types separating split node 
details section 
time constraint satisfiability activity durations deadlines assigned time calculations required computing optimistic pessimistic activity start finish times computing available slack time updating existing deadlines converting relative time information absolute time points 
typically assignment external deadlines iterative process 
designer assigns activity durations uses time calculations process build time compute duration process relative position activities 
designer choose set external deadlines activities recompute time information 
external deadlines met designer modify workflow structure change deadlines 
process build time section outline technique verify time constraint satisfiability possible find workflow execution satisfies constraints 
detailed description technique :10.1.1.21.7470
initial computations initially passes workflow graph performed eand values activities computed extension cpm method 
particular values activities predecessors set durations activities forward traversal workflow graph done computing remaining values 
values activities successors set corresponding backward traversal workflow graph done computing remaining values 
traversal external deadlines exist values activities deadlines set deadlines assumed relative workflow 
procedure finished calculated values reflect activity execution durations lower bound constraints structural constraints external deadlines explicit fixed date constraints 
important aspect computation transformation fixed date constraints lower bound constraints worst case estimates 
mapping necessary build time calendar values workflow execution available information duration valid time points fixed date object 
particular fixed date constraint fdc mapped lowerbound constraint lbc predecessor value depends fixed date constraint 
fixed date constraint equal period execution duration 
fdc exists set dist 
incorporation upper bound constraints process completed upper bound constraints incorporated computed values 
necessary condition constraint ubc satisfiable distance eand values corresponding values 
distance sum execution durations activities longest path distance depends values violated upper bound constraint satisfied changing values consistent way increasing values decreasing values details changes performed algorithmic properties technique :10.1.1.21.7470
note satisfaction individual upper bound constraints may lead violation incorporated upper bound constraints 
upperbound constraint incorporated values activities previously incorporated upper bound constraints validated 
build time calculations exist possibly distinct valid workflow executions 
executions obtained activities complete values values 
may valid combinations activity completion times ranges 
say timed graph satisfies constraint executions activities complete activities terminate values valid respect constraint 
addition examining values activity determine path containing activity may lead time error process execution 
particular values activity greater corresponding values exist execution paths containing activity avoid time violations 
values corresponding values exist paths may lead time violations 
conditional executions explicit time constraints involve conditionally executed activities may beneficial consider conditional paths isolation 
doing may able avoid superfluous constraint violations scheduling conflicts process execution 
general issues need addressed derive timed graphs violate explicit time constraints 
checking individual constraints violation may sufficient 
shown set time constraints may satisfiable individual constraint satisfiable :10.1.1.21.7470:10.1.1.21.7470
consequently incorporation procedure consider constraints checking workflow instance types constraint violation isolation sufficient 
instance types differ splits initial activities common initial activities values 
find values instance types satisfy constraints may possible schedule execution workflow time constraints met incorporating upper bound constraints best case values may meaningful 
upper bound constraint exists conditionally executed activity successor activity executed checking constraint best case possible values depend best case values checking violation upper bound constraints worst case values may lead unnecessary rejections workflow conditional branches 
similar case worst case eand values contribute worst case values activity may find constraint violation trying incorporate constraints 
meet restrictions employ technique unfolding workflow graphs sketched section 
unfolded graph equivalent original graph execution valid workflow specification valid 
advantage unfolding workflow graph different deadlines worst case eand values may assigned activities belonging different instance types 
consequently different deadlines final activities instance types may computed 
shown combining different deadlines disparate instance types probabilities executing instance types beneficial 
intuitively unfolded timed workflow graph derived original workflow graph duplicating graph joins 
instance types share nodes split distinguishes different nodes activities activities shared join merges instances original graph 
practice unfolding procedure complicated unconditionally executed parallel branches closed joins see details 
construction unfolded workflow graph temporal constraints mapped graph 
mapping done way constraint source destination exists original graph constraint exists copies belong instance type unfolded graph 
done mapping constraints compute timed workflow graph unfolded graph incorporate temporal constraints variation algorithms :10.1.1.21.7470
procedure addresses constraint incorporation problems suffers potential explosion number duplicate nodes unfolded graph considers instance type separately 
desirable discriminating instance types necessary interfering constraints instance types check satisfiability constraints unfolding 
problem addressed partially unfolding graph 
partial unfolding takes place upper bound constraint violated incorporation original time graph 
particular upper bound constraint violated determine source destination nodes connected conditionally executed activities belong workflow instance type 
partially unfold workflow graph attempt constraint incorporation procedure 
constraint violated source destination nodes unfolding check overlapping constraint perform unfold source destination nodes constraint 
see details procedures partial unfold determination partially unfold 
process instantiation time process instantiation time relative values replaced absolute time points time constraints satisfiability 
depending kind workflow replacing relative values absolute time points may straightforward process 
main factors complicate process agent loads availability activity executions time zones 
agent load availability hard compute especially agents humans 
complicates computations fact agents may participate multiple workflow processes different availability schedules 
way address issue computing service time probability distributions agent 
computations performed information usually logged wfmss activity process executions 
agents execute activity minimum maximum average service time computing absolute values activities executed agents 
regards activity executions different time zones multiple calendars mapping absolute time points 
example consider upper bound constraint business days 
depending geographic location executed business days may correspond calendar days 
mapping absolute time points completed deadline entire process may specified 
technique build time calculations 
shows workflow graph deadlines activities assigned 
looking values activity conclude possible meet deadlines 
conditional bran ches longer paths followed necessary skip optional activities select faster alternatives 
deadlines example workflow graph deadlines values negative raise time exception 
point values really needed lvalues affected external deadlines 
values performing agent load analysis 
done checking activities assigned agent values activities 
topic discussed subject ongoing research improve forecast delays workflow executions 
process execution run time workflow system monitor temporal status workflow alert possible violation time constraint raised early pre emptive steps taken 
furthermore timed graph guarantees exists correct execution values activity recomputations timed graph necessary accomodate time information activities executed information decisions split points 
process state monitoring execution workflow instance actual activity execution times may vary considerably estimated execution times time computations process build instantiation 
execution time estimated execution slack time available 
hand execution takes longer estimated execution slack time activities may reduced 
addition slack time generated activities take time finish slack time may available due 
deadline assigned workflow process greater values activities signal process successors activities belonging parallel branches may different execution characteristics 
longest branch determines execution parallel branches belonging unconditional split point shorter branches slack available conditional alternative structures slack generated difference duration different paths optional activity executed estimated execution time available slack successor activities 
current absolute time point estimated duration activity values assess state workflow instance containing respect execution progress follows 
duration ws process running smoothly deadlines met remaining activities finish expected execution times ws duration wf process meet deadlines 
necessary drop optional activities choose faster alternatives duration bf chance workflow finishes time 
depends executed conditional branches bf duration possible meet deadlines remaining activities finish faster expected 
note externally defined deadlines taken account construction timed graph consider deadlines long met 
missed escalation invoked 
observations summarize status workflow states 
green expect finish workflow time dropping optional activities changing alternative selection policies yellow may able finish time may eliminate optional activities select fast alternatives 
particular launching optional activity decision activity executed 
similarly decision needs regarding selection alternative activity execute 
rest activities executed normally state red threat missing deadline great time error raised trigger escalation actions 
monitor state process instance currently operating threshold values activity 
signals change green state yellow state 
signals change yellow state red state 
default values thres holds set follows gy ws yr wf values conservative choices risk concerning alternative paths taken 
threshold values take account variance activity durations proportion best worst cases willingness accept risks influenced information usually available workflow systems 
important tuning knob time management believe responsibility process manager set values adjust accordingly 
time computations thresholds treated internal activity deadlines deadlines assigned build instantiation times 
particular deadlines non optional activities set deadlines optional activities set 
note optional activities decision launching activities discussion description yellow state 
may beneficial assign different internal activity deadlines threshold values deadlines influence sequence activities selected worklists influence activities executed 
instance workflow systems shortest deadline scheduling policy engine workflow participants choose activity execute worklists strict internal deadlines accelerate process execution create slack address unexpected delays exceptions 
deadlines met deadline extension granted current state process available slack 
possible alternatives computing internal deadlines slack proportional slack policies described 
case internal deadline set duration activity 
case duration extended fraction available slack proportion duration actual activity duration rest workflow 
internal deadline influence order activities selected worklists case fifo internal deadlines necessary threshold values introduced 
policy corresponds total slack policy 
worklist selection strategies deadline necessary determine escalation raised 
regards time constraints satisfiability may delay execution activities sources upper bound constraints destinations lower bound constraints 
immediately start execution activity source upper bound constraint advantageous delay execution remaining activities slack time shown :10.1.1.21.7470
existing distributing available slack times activities selecting optimal delay value activity allowing activity finish part going 
activity finishes interval may recompute timed graph upper bound constraints modifying values ready activities slack distribution algorithm 
addition re computation timed graph values active activities computing order avoid upper bound constraint violations 
time constraint satisfiability tests performed explicit time constraints involve activities belong loops 
loop iteration time calculation take place 
handling missed deadlines deadline missed time failure generated escalation actions taken 
escalation actions depend state workflow process green yellow red possible alternatives 
deadline extension internal deadline missed process green yellow state deadline may extended 
non optional activities upper bound new internal deadline 
optional activities upper bound new internal deadline discussion previous section 
extending internal deadlines helpful proportional slack slack strategies followed deadline assignment alternative selection process yellow state internal deadline missed extending deadline selection policy alternative activities may changed favor alternatives faster execution times 
course beneficial process deadline met changes 
preemptive escalation determining option removal deadline extension granted alternative selection policy altered preserve process deadline optional activities eliminated 
optional activities marked dropped decision drop scheduled execution time error process red state timing exception raised problem 
recovery may automatically invoked similar human interaction may required proceed 
case options available process managers order regain valid workflow state 
workflow schema dynamically changed parallelizing sequential activities activity priorities raised speed execution deadlines 
escalation strategy tries avoid higher escalations long possible 
threshold values timing states defined determining escalation level 
pro active actions avoiding alternative branches skipping optional activities delayed long possible 
pro active means taken timed graph recomputed reflect changed workflow 
schedule executions execution workflow instance requires re computation timed graph completion activity source lower bound constraint successor source upperbound constraint 
re computations avoided sacrificing flexibility timed graph 
recall timed graph specifies ranges activity completion times exists combination activity completion times satisfies timing constraints completion time range activity 
run time re computation required completion time finished activities observed completion times ranges remaining activities continue valid 
define schedule restrictive timed graph combination activity completion times ranges satisfies timing constraints 
words schedule violations time constraints occur long activity finishes time interval 
consequently long activities finish ranges timed graph re computation needed 
activity finishes outside range schedule remaining activities recomputed 
follows directly schedule definition upperbound constraint ubc lower bound constraint lbc reverse true timed graph satisfies properties schedule 
way compute eand values activities timed workflow graph lvalues qualify schedules 
consequently workflow activity finishes execution value need check time constraint violations 
true activities finish execution values 
remainder section approaches computing strict schedules 
algorithms start timed graph obtained build instantiation time 
note techniques correspond extreme schedules additional required generalizing 
early scheduling technique maintains computed values attempts change values hold ubc lbc respectively violating constraints 
ubc change 
lbc change 
recompute timed activity graph attempt satisfy constraints late scheduling technique maintained computed values attempts change values hold ubc lbc respectively violating constraints 
ubc change 
lbc change 
recompute timed activity graph attempt satisfy constraints 
main advantage schedule executions reduction necessary time calculations run time strategy particular valuable production workflows large numbers instances 
additional advantage better workloads planning resources easier 
particular envision situation possible workflow engine interact calendars workflow participants checking availability inserting possible depending conditionals tasks 
price reduction timed graphs decrease flexibility 
related area time management received lot attention areas project management job shop scheduling active databases currently available commercial workflow products provide little support simple monitoring activity deadlines 
hand workflow research addressing time management issues 
particular ontology time identifying time structures workflow management systems developed 
authors represent time aspects workflow environment event condition action eca model active database management systems discuss special scheduling aspects basic particular reflect changes process 
contrast goal capture time information build time monitor process execution run time react time failures modifying business process model 
somewhat similar scheduling real time systems 
real time systems deadlines scheduling system components cpu view scheduling internal deadline assignment adjustment complimentary mechanisms 
authors studied problem deadline real time activity automatically translated deadlines sequential parallel subtasks constituting activity 
subtask deadline assigned just subtask submitted execution algorithms deadline assignment assume earliest deadline scheduling policy 
similarities important differences 
particular treat alternative conditional optional activities 
offer techniques building timed graph process build time graph arriving process deadline 
supports assignment external deadlines individual activities entire process 
authors propose static data escalation costs statistical data average activity execution time probability executing conditional activity run time information agent worklist length adjust activity deadlines estimate remaining execution time workflow instances 
run time furthermore address explicit time constraints 
author proposes integration workflow systems project management tools provide functionality necessary time management 
project management tools allow modeling explicit time constraints provide means resolution 
authors extension net diagram technique pert compute internal activity deadlines presence sequential alternative concurrent executions activities 
technique business analysts provide estimates best worst median execution times activities distribution compute activity execution times shortest longest process execution times 
having done time constraints checked build time escalations monitored run time 
extends handling structural explicit time constraints process build instantiation times enforcing constraints run time 
notion explicit time constraints introduced 
focused formulation time constraints enforcement time constraints run time escalation time failures workflow transactions 
follows described extends incorporation explicit time constraints workflow schedules 
extends time modeling management technique :10.1.1.21.7470
particular extend expressiveness workflow model augmenting procedures dealing conditional executions 
consequently extend computation timed graphs incorporation algorithm explicit time constraints increased expressiveness complexity conditional constructs 
authors describe time related functionality workflow management system 
part time functionality minimal maximal durations may specified workflow activity 
addition time dependencies workflow activities may defined 
dependencies upper bound constraints modeled additional edge links activities involved constraints 
build time existence valid time schedule assignment absolute start finish times constraints satisfied 
start finish times activities calculated run time floyd warshall algorithm users notified deadlines going missed 
close 
important differences 
contrast consider time constraints isolation provide solutions overlapping interleaving interfering constraints 
demonstrated set time constraints may unsolvable instance workflow violate time constraint single constraint solvable isolation :10.1.1.21.7470:10.1.1.21.7470
addition techniques pro active nature attempt modify eand values activities constraints satisfiable 
currently available workflow management systems wfmss offer sophisticated modeling tools specifying analyzing workflow processes time management support rudimentary 
existing time management functionality mainly addresses process simulations identify process bottlenecks analyze execution durations assignment deadlines activities triggering process specific exception handling activities referred escalations deadlines missed process execution 
addressed crucial role time management life cycle workflow processes 
particular described structural execution order dependent explicit fixed date periodic upper lower bound time constraints modeled process definition validated modeling instantiation times monitored managed execution time 
abbott garcia molina 
scheduling real time transactions performance evaluation 
proceedings th international conference large data bases pages los angeles ca 
bussler 
workflow instance scheduling project management tools 
th workshop database expert systems applications dexa vienna austria ieee computer society press 
cse systems 
workflow 
cse systems computer software engineering gmbh klagenfurt austria 
cse systems homepage 
www february 
dadam reichert kuhn 
clinical workflows killer application information systems 
th international conference business information system bis pages poznan poland 
eder liebhart 
workflow management system 
nato advanced study workflow management systems interoperability istanbul turkey august 
eder liebhart 
workflow transactions 
lawrence editor workflow handbook 
john wiley 
eder gruber panagos 
temporal modeling workflows conditional execution paths 
th ternational conference database expert systems applications dexa london greenwich 
eder panagos rabinovich 
time management workflow system 
orlowska editors bis rd international conference business information system 
springer verlag london berlin 
eder panagos rabinovich :10.1.1.21.7470
time constraints workflow systems 
proc 
international conference caise 
springer verlag lncs 
eder liebhart 
workflow recovery 
ifcis international conference cooperative information systems coopis brussels belgium jun 
ieee computer society press 
eder liebhart 
timing issues workflow management systems 
technical report institut informatik systeme universit klagenfurt 
flow 
collaborative workflow system way people 
box fin helsinki finland 
georgakopoulos hornick sheth 
overview workflow management process modeling workflow automation infrastructure 
distributed parallel databases 
hanover street palo alto ca usa 
hp process design guide edition 
www ice hp com cyc af dir pdf 
hollingsworth 
workflow model 
draft tc workflow management coalition july 
huang stankovic towsley ramamritham 
experimental evaluation realtime transaction processing 
ding th realtime systems symposium december 
inconcert 
technical product overview 
division xerox 
avenue palo alto ca 
www com 
heinrich jasper olaf 
bei der modellierung und ausf von workflows 
jablonski liebhart editors gesch modellierung und volume proceedings reihe der informatik pages 
kao 
deadline assignment distributed soft realtime system 
proceedings th international conference distributed computing systems pages 
kao 
subtask deadline assignment complex distributed soft realtime tasks 
technical report stanford university 
lawrence 
workflow handbook 
john wiley sons 
leymann roller 
business process management flowmark 
proceedings th ieee computer society international conference pages san francisco california february 
www software ibm com workgroup 
lin layland 
scheduling algorithms multiprogramming hard realtime environments 
journal association computing machinery january 
marjanovic orlowska 
modeling verification temporal constraints production workflows 
knowledge information systems may 
panagos rabinovich 
escalations workflow management systems 
dart workshop rockville maryland november 
panagos rabinovich 
predictive workflow management 
proceedings rd international workshop generation information technologies systems ilan israel june 
panagos rabinovich 
reducing costs wfmss 
nato advanced study workflow management systems interoperability istanbul turkey august 
philipose 
operations research practical approach 
tata new delhi new york 
eder liebhart 
extending pert workflow management systems 
european symposium advances databases information systems adbis st petersburg russia 
heinz 
von zeit workflow modellierung und integration 
master thesis university klagenfurt 
sap germany 
sap business workflow 
part sap system 

workflow suite 
business workflow automation 
waters edge dr suite raleigh nc 
www com 
workflow management coalition brussels belgium 
glossary workflow management coalition specification november 

