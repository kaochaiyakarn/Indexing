min max cut algorithm graph partitioning data clustering chris ding zha ming gu horst simon nersc division lawrence berkeley national laboratory university california berkeley ca department computer science engineering pennsylvania state university university park pa department mathematics university california berkeley ca lbl gov cse psu edu mgu math berkeley edu important application graph partitioning data clustering graph model pairwise similarities data objects form weighted graph adjacency matrix contains necessary information clustering 
propose new algorithm graph partition objective function follows min max clustering principle 
relaxed version optimization min max cut objective function leads fiedler vector spectral graph partition 
theoretical analyses min max cut indicate leads balanced partitions lower bonds derived 
min max cut algorithm tested newsgroup datasets outperform current popular partitioning clustering methods 
re nements algorithm improve quality clustering substantially 
demonstrate linearized search order linkage di erential better fiedler vector providing ective partition method 
graph partitioning broad range applications 
near regular graphs mesh surface airfoil engine cylinder 
partitioning mesh subdomains distributed memory processors common task 
popular software packages partitioning task developed 
graphs generated world wide web 
graphs highly irregular random node degrees vary dramatically 
partitioning web graph useful automatically identify topics retrieved webpages user query 
emphasize graph partition data clustering graph model 
attributes coordinates data points dataset similarity anity metric points symmetric matrix containing similarities pairs points forms weighted adjacency matrix weight matrix undirected graph 
data clustering problem graph partition problem 
data clustering point view graph partitioning helps de ne appropriate criteria partitioning 
simplest mincut algorithm connected graph partitioned subgraphs cutsize cut set minimized 
mincut results skewed cut small subgraph cut away 
various constraints introduced ratio cut normalized cut circumvent problem :10.1.1.160.2324
skewed cuts occur overlaps clusters large 
propose new graph partition method min max clustering principle similarity association subgraphs cut set minimized similarity association subgraph summation similarity pairs nodes subgraph maximized 
requirements satis ed simultaneously simple min max cut function 
number theoretical analyses min max cut show min max cut leads balanced cuts ratio cut normalized cut 
methods optimal solution graph partition problem np complete combinatoric nature problem 
ective approach consider continuous relaxation problems 
example compute principal direction component principal eigenvector weight matrix nd cut point direction points side belong subgraph points side belong subgraph 
establishes linear search order minmax cut eciently applied search optimal cut 
relaxed version min max cut function optimization leads generalized eigenvalue problem 
second lowest eigenvector called fiedler vector provides linear search order fiedler order 
min max cut algorithm call mcut algorithm provides de ned objective clear procedure search optimal solution 
test algorithm number newsgroup text datasets compare current methods 
mcut algorithm outperforms 
introduce linkage di erence metric ec tively identi es nodes near cut 
nd nodes sitting wrong side optimal cutpoint higher linkage cluster currently assigned 
swapping correct side objective function reduced clustering accuracy improved substantially 
generally believed fiedler order provides best known linearized order search optimal cut 
nd linkage di erential order provides better ordination fiedler order 
searching linkage di erential order consistently outperforms fiedler order 
linkage di erential order start existing clustering results iteratively improves ordering clustering 
min max cut weighted graph node set edge set weight matrix wish partition subgraphs min max clustering principle minimize similarity clusters maximize similarity cluster 
sound principle established statistics data mining machine learning areas 
similarity association nodes edge weight uv similarity subgraphs cutsize cut uv similarity association cluster subgraph sum edge weights 
note weight wuu node included important applications 
minmax clustering principle requires minimize cut maximizing time 
requirements simultaneously satis ed objective function mcut cut cut call new objective function min max cut function mcut short 
mcut inspired previous works spectral graph partition see section :10.1.1.160.2324
turns continuous relaxation eq solved way di erent existing graph partition relaxations :10.1.1.160.2324
reveal solution reorder rows columns conformally subgraphs wa wb wb vectors conformally partitioned 



follows eqs cut objective function rewritten mcut observe eq mcut invariant changes kxk kyk relations account obtain useful lower bound theorem 
observe problem eq relaxed optimization problem min subject kb xk kb yk jdj jdj conditions necessary general inde nite matrix 
largest eigenvalues construction 
proof omitted 
theorem 
assume 
vectors solve problem eq 
choose column orthogonal matrix orthogonal matrix 
follows theorem ratios equal optimal solution optimal value mcut 
eq continuous relaxation eq fact terms equal optimal solution suggests terms eq close implying close 
resulting clusters tend similar weights balanced 
indication mcut desired objective function data clustering see sections discussions 
fiedler linear search order solution partition problem represented indicator vector nodal value node fa bg depending finding optimal partition np complete 
wellknown ective solution rst compute linear search order nd cut point index order minimizes mcut objective 
theorem implies solution vectors lie eigenspace rst eigenvector 
largest eigenvalue match second eigenvector satis es positive negative elements approximation directly show min mcut min jn jn min jn jn jn dq relaxing real number solution minimizing rayleigh quotient jn dq subject 
solution generalized eigenvalue problem second eigenvector called fiedler vector eigenvalue called fiedler value 
sorting fiedler vector provides desired linear search order 
furthermore obtain lower bound mcut objective min mcut note bound optimal mcut value eq 
related spectral graph partition spectral graph partitioning properties eigenvectors laplacian matrix rst developed donath ho man fiedler populated pothen simon liu 
objective partitioning minimize cut size cut requirement subgraphs number nodes jaj jbj 
indicator variable depending cutsize cut xu uv relax xu continuous value minimizing cut solve eigensystem trivial associated second eigenvector fiedler vector solution 
hagen kahng remove requirement jaj jbj show fiedler vector provides linear search ratio cut rcut partitioning criteria rcut cut jaj cut jbj generalized eigensystem eq eq studied number authors 
chung especially emphasizes advantage normalized laplacian matrix leads eq 
shi malik propose normalized cut ncut cut deg cut deg deg du sum node degrees called subgraph contrast size show ncut reduced ncut jn eq :10.1.1.160.2324
ncut uses linear search order mcut objective 
analysis obtain lower bound ncut objective min ncut rcut ncut mcut objective functions rst prescribed motivating considerations linear order fiedler vector normalized laplacian matrix argued appropriate search order relaxing discrete indicator variables 
important note objective functions automatically obtained eigenvalues fiedler vector perturbation analysis normalized laplacian matrix 
strengthens connection objective function fiedler vector 
spectral partitioning methods partitioning methods seek minimize sum subgraph diameters see center problem examples 
clustering methods singular value decompositions example 
random graph model important feature mcut method tends produce balanced cut resulting clusters subgraphs similar sizes 
random graph model illustrate point 
suppose uniformly distributed random graph nodes 
random graph nodes connected probability consider objective functions mincut rcut ncut mcut 
theorem 
random graphs mincut favors highly skewed cuts uneven sizes 
mcut favors balanced cut subgraphs sizes 
rcut ncut show size preferences 
proof 
compute object functions partition note number edges average 
mincut rcut rcut jaj jbj jaj jbj np ncut nodes degree ncut mcut mcut jbj jaj jaj jbj minimize objectives 
clearly mincut favors jaj jbj jbj jaj skewed cuts 
minimizing mcut obtain balanced cut jaj jbj 
rcut ncut objectives size dependency size preference implies possible unstable results 
completes proof 
mcut algorithm algorithm partitioning graph subgraphs 

compute fiedler vector eq 
sort nodal values obtain fiedler order 

search optimal cut point corresponding lowest mcut fiedler order 

linkage re nements see section 
computation fiedler vector quickly done lanczos method 
fast software package calculation available online www nersc gov html 
lanczos iteration computational complexity jej jv 
experiments document clustering popular analyzing text information 
perform experiments newsgroup articles newsgroups 
focus datasets newsgroups alt atheism comp graphics rec sport baseball rec sport hockey talk politics mideast talk politics misc newsgroup dataset bow toolkit processing available online 
word document matrix rst constructed 
words selected mutual information words documents log represents word represents document 
words stemmed 
standard tf idf scheme term weighting standard cosine similarity documents sim 
jd 
document column normalized norm similarities calculated interpreted weight anity matrix undirected graph 
similarity matrix perform clustering explained 
comparison purpose consider clustering methods ratio cut normalized cut see section principle direction divisive partitioning pddp :10.1.1.160.2324
pddp idea principle component analysis pca applied vector space model centered average row word subtracted 
rst principle component computed 
loadings documents projection document principle axis form dim linear search order 
provides heuristic similar linear search order provided fiedler vector 
searching nd objective function pddp partitions data parts center mass increase statistics perform cluster experiments way similar cross validation 
divide newsgroup randomly subgroups newsgroup randomly subgroups 
subgroups mixed subgroups produce dataset graph partition methods run dataset produce clusters 
true label newsgroup article known accuracy percentage newsgroup articles correctly clustered measure success 
repeated pairs accuracy averaged 
way newsgroup articles number times 
mean standard deviation accuracy listed 
table clustering results listed balanced cases subgroups newsgroup articles 
mcut performs ncut newsgroups ng ng cluster overlap small 
mcut performs substantially better ncut newsgroups ng ng newsgroups ng ng cluster overlaps large 
mcut performs slightly better pddp 
rcut performs worst methods studied 
table clustering results listed unbalanced cases subgroup newsgroup articles subgroup 
generally harder problem due unbalanced prior distributions 
case mcut ncut perform reasonably clear deterioration seen performance pddp clearly deteriorated 
indicates strength mcut method graph model 
mcut consistently performs better ncut cases cluster overlaps large 
dataset mcut ncut rcut pddp ng ng ng ng ng ng table accuracy clustering experiments mcut rcut ncut pddp 
test set mixture news articles newsgroup 
dataset mcut ncut pddp ng ng ng ng ng ng table accuracy clustering experiments mcut ncut pddp 
test set mixture news articles newsgroup news articles newsgroup 
skewed cut study reasons mcut consistently outperforms ncut large overlap cases 
key observation ncut written ncut cut cut cut cut deg uv cut 
ncut cuts set small weight skewed cut cut denominators help produce smaller ncut value 
examine cases speci case shown 
cut points mcut ncut relevant quantity listed table 
ncut pronounced valleys produces skewed cut 
mcut valley gives balanced cuts 
examination shows cases obtained ncut equal bigger weight self similarity smaller cluster listed table 
example ncut produces cutsize larger weight 
cases clearly ncut objective see eq appropriate 
mcut objective cutsize absent denominators provides balanced cut 
case studies provide insights graph partition methods 
prompted studies provide analysis derive general conditions skewed cut occur 
consider nodal value sorted nodes ncut values top nodal values sorted fiedler vector 
middle ncut values cut point moves cut bottom mcut values 
dataset ng ng table 
method cut cut ncut mcut table cut point cutsize cluster similarities case 
balanced cases 
cut 
hw hw average fraction cut relative cluster associations 
case partition optimal exactly partitioning result 
corresponding ncut value ncut cut cut cut cut skewed partition cut 
corresponding ncut value ncut cut cut ncut skewed incorrect cut happen ncut ncut eqs condition satis ed ncut cut repeat analysis mcut calculating mcut mcut condition skewed cut mcut mcut mcut mcut cut large overlap case say conditions possible skewed cut ncut cut mcut cut relevant quantity listed table 
datasets newsgroups newsgroups condition skewed ncut satis ed time leading skewed cuts lower clustering accuracy tables 
datasets condition skewed mcut satis ed time leading correct cuts higher clustering accuracy 
dataset cut ng ng ng ng ng ng table average values cut fraction datasets mcut 
linkage re nements heuristic linear search order provided fiedler vector generally heuristic results shown 
may necessarily perfect 
explore point nd effective re nement method substantially improves quality graph partitioning 
linear search order provided sorting fiedler vector implies nodes side cut point belong cluster nodes linear search allow situation belong cluster belongs cluster 
strict order necessary 
fact large overlap cases expect nodes moved side cut lowering objective function 
identify nodes near cut 
purpose de ne linkage closeness similarity measure subgraphs clusters normalization purpose insensitive cluster weights motivated average linkage hierarchical agglomerative clustering 
spirit min max cut replaced jaj jbj 
single node linkage subgraph 
identify nodes near cut 
node inside cluster large linkage cluster small linkage cluster 
near cut linkages clusters close 
de ne linkage di erence 
node small 
near cut possible candidate moved cluster 
sorted nodes linkage di erence nodes 
vertical line indicates cutpoint mcut 
nodes left forms cluster nodes right forms cluster show linkage di erence 
nodes 
vertical line cut point 
interesting observe nodes small 
quite number nodes 
wrong signs 


example node relatively large negative 
implies node larger linkage cluster located cluster left cutpoint 
move node cluster objective function reduced 
nd better solution 
moving node cluster try move node negative 
cluster cluster depending objective function lowered 
fact move nodes cluster negative 
cluster objective function lowered 
similarly move nodes cluster positive 
cluster procedure swapping nodes called linkage swap 
implemented sorting array 
decreasing order provide priority list moving nodes 
greedy move starts top list node 

swap reduces objective function increases partitioning quality 
table ects clustering accuracy due swap listed 
cases accuracy increases 
note large overlap cases ng ng ng ng accuracy increase mcut re nement 

close node correct cluster close cut 
select smallest nodes 
candidates move reduce mcut objective cluster 
done cluster call procedure linkage move 
moves reduce mcut objective improve solution 
table ects improving clustering accuracy shown 
adding linkage re nements improve accuracy 
note nal mcut results better ncut better pddp see tables 
dataset mcut swap swap move ng ng ng ng ng ng table improvements clustering accuracy due linkage re nements mcut mcut plus swap mcut plus swap move smallest 
sides cutpoint 
linkage di erential order generally believed fiedler order provides best known linearized order search optimal cut delicate counter examples exist 
linear search order better fiedler order 
analysis previous sections suggests new linear search order 
linkage di erence see quite nodes far away cut point wrong 
signs belong subgraph 
strongly suggests fiedler order necessarily best linear search order 
fact sort linkage di erence 
obtain linear order di erent fiedler order referred linkage di erential ld order 
search nd best mcut cut point new ld order represents improvement standard mcut method 
results table 
see mcut values obtained new order lower fiedler order 
clustering accuracy increases substantially 
quality clustering new order slightly better results obtained mcut swap table 
nd new linear order leads better graph partitioning provided fiedler order 
note ld order depend fiedler order 
example obtain ld order principal direction pddp 
furthermore ld order recursively applied clustering results obtained earlier ld order improvements 
dataset acc acc ld min min ld ng ng ng ng ng ng table improvements accuracy nd rd columns due linkage di erential ld order fiedler order 
improvements min mcut values shown 
th th columns 
hierarchical divisive mcut far focus bisection graph subgraphs 
subgraphs clusters desired recursively apply mcut related re nement subgraph certain stopping criteria met desired number clusters reached min mcut value certain pre de ned value 
recursive division stopped re nements lines discussed section applied 
bisection step nodes optimally partitioned nal partition necessarily optimal obtained directly optimal mcut objective cut cut cut gk gk gk partitioned subgraphs 
gk note term larger cases cut 
increase average weight selfsimilarity decrease 
di er cases cf :10.1.1.160.2324
eq 
analysis regarding balanced cuts previous sections ncut produce skewed cuts 
mcut essential way partition 
applying re nements clusters may apply way linkage re nement pairs clusters 
direct way linkage re nement procedure may adopted assume node currently belongs cluster linkage di erence 
ij clusters computed 
smallest 
ij corresponding cluster id stored entry priority list 
repeated nodes entry list lled 
list sorted 
ij obtain nal priority list 
list nodes moved appropriate clusters objective reduced 
completes pass 
passes may necessary 
summary introduce mcut algorithm graph partition 
shown min max objective function follows clustering principle produces balanced partitions compared skewed cuts produced ratio cut cut pddp algorithms cases large cluster overlaps 
linkage di erence metric ectively identi es nodes near cut leads ective re nement procedures 
new linkage di erential order shown provide better linear search order best known fiedler order 
datasets text information represented bipartite graphs 
mcut algorithm applied bi clustering model bipartite graph problems 

supported part oce science oce laboratory policy infrastructure department energy contract de ac sf nsf ccr 
agarwal procopiuc 
exact approximation algorithms clustering 
proc 
th acm siam symposium discrete algorithms pages 
boley 
principal direction divisive partitioning 
data mining knowledge discovery 
bollobas 
random graphs 
academic press 

cheng wei 
improved way partitioning algorithm stable performance 
ieee 
trans 
computed aided 
chung 
spectral graph theory 
amer 
math 
society 
ding zha 
spectral method separate disconnected nearly disconnected web graph components 
proc 
th acm int conf knowledge discovery data mining kdd pages august 
marathe ravi taylor widmayer 
approximation algorithms clustering minimize sum diameters 
nordic journal computing fall fall 
donath ho man lower bounds partitioning graphs 
ibm res 
develop 

improved spectral bisection algorithm application dynamic load balancing 
parallel computing 
drineas frieze kannan vempala vinay 
clustering large graphs matrices 
proc 
th acm siam symposium discrete algorithms 
fiedler 
algebraic connectivity graphs 
czech 
math 

fiedler 
property eigenvectors nonnegative symmetric matrices application graph theory 
czech 
math 

miller 
quality spectral separators 
siam journal matrix anal 
appl 
hagen kahng 
new spectral methods ratio cut partitioning clustering 
ieee 
trans 
computed aided 
zha ding simon 
web document clustering hyperlink structures 
tech report cse april 
hendrickson leland 
chaco mesh partitioning software 
www cs sandia gov crf html 
karypis kumar 
metis graph partitioning software 

cs umn edu karypis metis 
kernighan lin 
ecient heuristic procedure partitioning graphs 
bell system tech 

mccallum 
bow toolkit statistical language modeling text retrieval classi cation clustering 
www cs cmu edu mccallum bow 
parlett 
symmetric eigenvalue problem 
siam press 
pothen simon liou 
partitioning sparse matrices graph 
siam journal matrix anal 
appl 
shi malik :10.1.1.160.2324
normalized cuts image segmentation 
ieee 
trans 
pattern analysis machine intelligence 
spielman 
teng 
spectral partitioning works planar graphs nite element meshes 
proc 
th ieee conference foundations computer science 
zha ding gu simon 
bipartite graph partitioning data clustering 
proc 
th int conf 
information knowledge management cikm nov 

