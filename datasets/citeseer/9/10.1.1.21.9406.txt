describing xml wrappers information integration ek report isbn issn university department computer science applied mathematics box fin finland describing xml wrappers information integration ek tommi university department computer science applied mathematics xml data formats actively developed standard exchange data heterogeneous operating systems 
need transformation programs called wrappers able expose system speci data chosen xml representation 
wrappers written practically general purpose programming language ad hoc solutions tedious develop maintain 
alleviate problem implementing xml wrappers introduce simple powerful wrapper speci cation language called xw 
xw describe structure serialized input data simple declarative speci cation acts template automatic generation corresponding structured xml representation 
introduce language example speci cations real life wrappers 
sketch implementation principles emphasizing standard xml techniques 
xml data formats actively developed standard exchange data operating information systems 
need transformation programs called wrappers able expose system speci data chosen xml representation 
currently running project supported national technology agency finland supporting companies organizations study develop methodology de ning developing utilizing xml interfaces 
initial phase project studied sample data project partners including billing invoices medical laboratory requests responses protocol messages remote procedure calls 
de ned xml representations data implemented ad hoc wrappers translating corresponding xml format 
internal external data formats tend evolve maintaining ad hoc transformation programs rapidly burden 
higher level solution de ning implementing xml wrappers needed 
introduce declarative concise wrapper speci cation language called xw xml wrapper support automatic generation wrappers 
xw provides loose coupling framework transforming serialized data hierarchical xml representation 
language implementation support translation data les external information system produced data 
tightly coupled wrapper retrieves wraps data example database system query language may ecient situations believe loosely coupled wrappers easier sucient practise 
idea wrappers means extracting information databases introduced wiederhold wie 
wrapper applications discussed literature built extracting data web sources ask ade saa 
wrapper speci cation html pages set rules query query language designed wrapping 
wrappers built semi automatically automatically speci cations special tool programming language 
heterogenous data sources systems tsimmis gmp mix developed approach query language wrapper speci cation 
nak closest view describing implementing wrappers uses formal grammars parser generators create skeleton parser xml generation write template document xml result embed partitioning strings break input data parts 
opposed approach wrapper speci cation declarative 
rest organized follows 
section describes main features wrapper speci cation language typical examples taken applications considered project 
implementation principles sketched section section concludes 
declarative speci cation wrappers section presents design principles set features declarative wrapper speci cation language xw typical examples 
rst example text data ow partitioned positional information second separator strings 
third example considers binary data consisting consecutive typed elds lengths de ned types 
general ideas xw design principle simple occurring cases simple specify 
wrapper speci cation language try full edged transformation language 
goal provide language easier full transformation language xslt powerful typical needs wrap data 
expect xw wrapping mainly initial step xml processing data 
complex xml manipulation called result wrapping processed applying appropriate xml technologies sax sax dom abc xslt cla 
xw wrapper speci cation formed xml document composed output elements elements attributes belonging xw namespace www cs fi xw 
elements outside xw namespace produce elements required generated xml representation 
xw language uenced number xml technologies 
template way generating output elements inspired xslt ways model repetitive alternative input structures uenced xml schema tbm 
speci cation de nes template xml formatted output document embedded instructions describing input document divided parts structure altered 
basically wrapper speci cation describes structure output document input data arranged elements 
structure wrapper speci cation implied structure input data 
consecutive parts input data described consecutive output elements wrapper speci cation subparts part described child elements corresponding element 
description part divided subparts placed corresponding element child elements 
elements outside xw namespace produce elements output data corresponding part input data content straight text child elements wrapper speci cation 
structure input data modi ed restrictions 
replacing part input output element xw element process di erently 
instance child elements entire text content text element taken element replacing output 
element created enclose group elements text content sibling text elements 
part input data discarded 
order parts input data changed 
positional text data example deals phone invoice divided parts identi er data speci cation invoice data 
actual content identi ed headings positional information 
example heading invoice starts identi er data part 
parts divided subparts rows case 
data rows ed positions 
example customer number de ned located second row starting position position 
invoice invoice number customer number personal john smith garden avenue phone specification date units duration number price min min min min min john smith garden avenue xw wrapper speci cation root element xw wrapper having attributes xw name de ne optional name wrapper xw tell type input data xmlns xw specify xw namespace 
wrapper phone invoices follows 
xmlns xw www cs fi xw xw xw true xw xw true xw xw true line numbers examples added wrapper speci cations presentational purposes 
multiple root elements output data called invoice line 
invoices occur number times input data element invoice attribute xw occurs value unbounded 
parts invoice elements lines specification lines lines 
attributes xw starter xw xw 
attribute xw starter tells starting string input data current element 
example identification attribute xw starter line value invoice denotes row 
means string invoice row invoice indicates starting part 
attribute xw lines speci es terminating string subparts 
example ofthe line character denoted parts 
parts divided subparts fact rows 
third attribute xw lines value true indicates empty subparts empty lines case ignored splitting input data parts 
starting positions actual data added output data element attribute xw position 
speci es bounding positions text inside enclosing part 
rst position inside part 
de ning part xw position attribute wrapper removes whitespace characters text 
invoice number example added element line attribute xw position value starting positions 
eld empty length output element content case characters twelve 
careful reader notices starting positions invoice number custom number di er start place example invoice 
reason di erence 
positions counted starting xw starter string case string invoice characters 
element xw ignore line removing recognized parts input data 
element remove heading row containing headings date units duration number price 
element xw collapse lines reduces hierarchical structure input data 
example invoice row input data containing date total sum invoice collapsed 
result elements created single data row placed hierarchy level preceding element line 
wrapper produces phone invoice xml form follows john smith garden avenue min min 
separator delimited text data example processes data exchange format health level hl version hls messages 
highest level hierarchical structure message 
second level structure parts rows separated line characters 
rows divided elds separated pipe characters sub elds separated 
row rst eld contains letter identi cation content 
rows xed places inside message occur mixed order rows 
example message response clinical laboratory request 
kl lab pid smith john street city british res ch nm ab po comment ab po 
comment ab po 
nm alat hl message read follows 
rst row begins identi er denotes message 
eld introduces separators message 
seventh eld contains date time creating message 
second row written lines presentational reasons identi er pid consists patient information 
fourth eld contains social security number sixth eld name patient 
ninth eld informs sex patient 
third row having identi er contains response information laboratory 
rows identi er 
row contains result test 
rows comment result previous row 
xw wrapper speci cation transforming previous message xml document instance xmlns xw www cs fi xw xw occurs unbounded xw true 
xw occurs unbounded root element output data called response 
creation response elements controlled attributes lines 
position starts part input data response element identi ed attribute xw starter 
value example string 
separator hierarchical level row identi ed attribute xw value attribute xw occurs expresses number repetitions response element 
attribute xw value true de nes content shall created output 
element xw choice lines choosing alternative parts input 
create new element output data chooses rst subelement matches input data 
attribute xw occurs line inform selection repeated times 
attribute xw starter identifying matching part mandatory xw collapse lines xw element lines xw choice element 
xw element describes output structures input parts rule applies child elements 
example kinds rows choose identi ed starters line line 
new hierarchical level occur input data added output designer element xw element 
element adds new hierarchy level names value attribute xw name 
example element called comment added output data lines 
attribute xw line inherited elements xw choice xw element children elements describe parts input data indirectly child elements 
speci ed wrapper convert previous input data output data 
ab po comment ab po comment ab po 
alat 
binary data typed elds example input binary data ip data communications protocol consisting packets consecutive typed elds 
packet contains segment datagram part 
elds packet simple types actual data payload array bytes 
input data single packet depicted 
rst row describes lengths second row names third row types sequential elds 
sizes domains types xw xml schema de nition language xsd bim java gjs 
type de nes length eld interpretation bits 
elds follows len means length packet bits chk checksum id identi es datagram segment set describing position segment datagram src bit ip address source dst bit ip address destination pay actual data payload 
length type short short short short src dst len chk id pay varies array bytes name byte byte sample datagram structure wrapper speci cation follows xmlns xw www cs fi xw xw numeric output format hexadecimal input data binary wrapper speci cation xw attribute set binary line 
rst eld len ignored value stored variable total length line 
elds checksum id segment offset corresponding elements need named types described xw type attribute lines 
source address destination address bit elds 
content collection bytes di erent parts address need speci ed separately output 
xw recognize structure binary data consecutive elds corresponding element named collection elds 
element needs created xw element enclose parts source address destination address lines 
similarly element needs created bytes payload lines 
elements created individual bytes xw collapse iteration bytes lines 
variables numeric literal constants xw occurs simple arithmetic performed line 
variable created naming attribute xw name 
value content part corresponding element attribute 
wrapper speci cation number bytes pay eld calculated subtracting combined length elds bytes value total length line 
number number repetitions xw collapse element process bytes payload line 
type elds payload xw byte produce decimal numbers output 
example line hexadecimal notation required xw numeric output format attribute value hexadecimal 
case bytes produces digit general number digits required representing value type 
input data converted speci ed wrapper xml form ff implementation plans xw implemented existing xml tools loading wrapper speci cation java realizing input parsing output generating behaviour 
wrapper speci cation read xml parser manipulated internally dom tree called wrapping tree 
input data divided hierarchically nested parts matched nodes wrapping tree 
preprocessing phase computes sets delimiting strings called start set set nodes wrapping tree 
sets computed partitioning information example starter separator terminator strings introduced wrapper speci cation 
role start set set node follows scanning input data part input starting string start set extending rst occurrence string set matched node processed providing content result element corresponding node 
process matches wrapping tree input data creates output xml form sax events characters 
implication design decision easy provide di erent apis wrapper speci ed wrapper easily integrated larger application component provides resulting xml document eciently sax events way complete dom tree 
equally easy wrapper stand lter generates textual representation resulting xml document simply interpreting sax events straight forward text generating commands 
described declarative xml language called xw specifying wrappers non xml data sources 
xw suitable wrapping kind serialized data consisting recognizable parts text lines binary records elds 
described wrappers process input data sequentially recognizing parts arranging hierarchical structure de ned wrapper speci cation 
minimal transformation wrapping transforms recognized parts input xml elements de ned wrapper speci cation preserving order input data 
addition possible remove parts hierarchy levels input data create additional hierarchy levels output data 
language designed speci application domain easily applicable wrap wide variety di erent serialized data 
implementation xw way 
parallel implementing wrapper speci cation language considering various extensions basic features introduced 
possible extensions include xslt constructs generating attributes content input data 
enhancements ability recognize alternative parts considered 
extensions weaken declarative simplicity ecient implementability xw 
hand eliminate need xslt processing typical wrapping applications simplify design speed execution xml wrappers 
research supported national technology agency finland companies organizations group plc interactive university hospital plc 
authors professor post graduate students sami paula help 
abc byrne champion isaacs jacobs le nicol robie wilson wood editors 
document object model dom level speci cation 
recommendation october 
available www org tr rec dom level 
ade 
nodose tool semi automatically extracting structured semistructured data text documents 
sigmod record 
ask ashish knoblock 
wrapper generation semi structured internet sources 
sigmod record 
baru gupta lud papakonstantinou chu 
xml information mediation mix 
sigmod record 
bim malhotra editors 
xml schema part datatypes 
recommendation may 
available www org tr xmlschema 
cla clark editor 
xsl transformations xslt version 
recommendation november 
available www org tr xslt 
gjs gosling joy steele 
java language speci cation 
addison wesley 
gmp garcia molina papakonstantinou quass rajaraman sagiv ullman vassalos widom 
tsimmis approach mediation data models languages 
conference proceedings generation information technologies systems israel june 
available standford edu pub 
hammer garcia molina cho crespo 
extracting semistructured information web 
proceedings workshop management semi structured data pages 
hls health level home page 
hl standards 
available www hl org 
liu han pu tang 
xml wrapper generator web information extraction 
sigmod record 
liu pu han 
xwrap xml enabled wrapper construction system web information sources 
proceedings international conference data engineering icde pages 
nak 
parser generator convert legacy data formats xml 
xml europe berlin germany may 
saa sahuguet 
building light weight wrappers legacy web 
proceedings vldb large data bases pages 
sax sax simple api xml 
may 
available www com sax sax html 
tbm thompson beech maloney mendelsohn editors 
xml schema part structures 
recommendation may 
available www org tr xmlschema 
wie wiederhold 
mediators architecture information systems 
computer 

