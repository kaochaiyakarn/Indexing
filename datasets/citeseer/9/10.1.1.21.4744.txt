appear proc 
conference uncertainty artificial intelligence stockholm july new model plan recognition robert goldman christopher geib christopher miller honeywell technology center minneapolis mn usa geib honeywell com new abductive probabilistic theory plan recognition 
model differs previous theories centered model plan execution previous methods plans formal objects rules describing recognition process 
show new model accounts phenomena omitted previous plan recognition theories notably cumulative effect sequence observations partially ordered interleaved plans effect context plan adoption 
model supports inferences evolution plan execution situations agent intervenes plan execution 
facility provides support plan recognition build systems intelligently assist user 
new theory plan recognition 
theory abductive probabilistic differs previous theories treating plan execution primary 
new perspective clarifies number difficult issues plan recognition permitting solutions wider class plan recognition problems allows plan recognition proceed theoretical footing 
kautz allen published article generalized plan recognition kautz allen framed discussion plan recognition 
defined problem plan recognition problem identifying minimal set toplevel actions sufficient explain set observed actions 
plans represented plan graph top level actions root nodes actions nodes depending top level actions 
approximation problem plan recognition problem graph covering 
formalized view plan recognition terms mccarthy circumscription 
abductive probabilistic theory centered plan execution plan graphs formal objects 
new framework clarifies number issues obscured previous approaches 
particular approach handles partially ordered plans multiple interleaved plans effect context plan choice able correctly treat system recognizing actions agents acting right 
offer formal model plan recognition problem 
pretend provide solution algorithmic implementation problems understanding knowledge level 
encoded plan recognition model language computational interpretation proof concept interpreter test examples 
claim interpreter provides efficient solution plan recognition problem 
ways model implemented mention possibilities 
matter believe single best algorithm appropriate plan recognition domains 
plan recognition motivated interest procedure crisis management specifically industrial control 
working systems assist human agents executing crisis management procedures 
result model plan execution hierarchical procedural distinguished models primitive actions models assume agents deliberative game theoretic models 
application requires account phenomena omitted previous plan recognition theories notably cumulative effect sequence observations partially ordered interleaved plans effect context plan adoption effect interventions process plan execution 
plans simple hierarchical task decomposition plans plan recognition 
assume agents plan library provides recipes achieving goals 
give sample plan library hypothetical space station example 
agent wishes achieve goal increasing available power increase power plan library provides set alternate methods agent 
increase power achieved generating power gen power reducing power consumption lower power 
order lower power agent steps open access panel open shutoff experiment sub system shutoff shutoff experiment sub system shutoff 
note plan library may viewed tree goals nodes methods nodes 
space station plan library contains plans goals increasing available power increase power increasing oxygen content air raise level raising temperature raise temp 
goals increase power raise level alternate methods generate power gen power reduce power consumption lower power generate gen reduce consumption lower respectively 
way raising temperature need actual method node 
method nodes set children connected arcs representing actions steps method 
simple plan library methods composed primitive actions open access panel open turn generator start gen open shutoff shutoff start generator start gen open access panel open seal science module seal sci check temperature check temp raise thermostat setpoint raise temp set 
general methods may introduce sub goals 
example alternate library domain gen increase power sub goal place actions open start gen 
cases steps method done particular order 
ordering constraints represented directed arcs 
example open precede shutoff shutoff lower power 
gen power increase power open start gen raise level gen open start gen minimal explanation involving plan 
notice agent freedom choose order actions 
actions may performed reason 
example open start gen gen power gen notice different conditions events tied goals 
dashed lines represent fact events affect likelihood agent adopt respective goal 
example eva prepared eva prep agent adopt increase power goal 
likewise agent notices drop level drop choose raise level goal 
plan recognition plan recognition process inferring goals agent observations agent actions 
cohen perrault allen distinguish kinds plan recognition keyhole intended plan recognition 
keyhole recognition recognizer simply watching normal actions agent 
intended recognition agent cooperative actions done intent understood 
keyhole recognition problem faces applications fact influences structure model 
best knowledge charniak argue plan recognition best understood specific form general problem abduction reasoning best explanation charniak mcdermott 
model plan recognition kautz allen treated problem computing minimal explanations form vertex covers plan graph 
example approach check temp raise temp set raise temp eva prep open gen power start gen open shutoff shutoff lower power increase power drop raise level lower open seal sci open start gen gen start gen hierarchical plan library diagram form 
observed open start gen minimal explanations increase power gen power raise level gen see 
addition observed system postulate top level plans order explain cover observations shown 
problem take account differences priori likelihood different plans 
charniak goldman argued plan recognition involves abduction best done bayesian inference 
bayesian inference supports preference minimal explanations case hypotheses equally correctly handles explanations complexity different likelihoods 
plan recognition situations handled problems influences state world evidence failure observe 
clearly state world influence agent decision pursue plans 
see space station operator decision pursue increase power affected substantially eva prepared eva prep 
take account treat relative likelihood plans 
simple take account defined probability distributions plan tree 
hand view plan recognition point view agent pursuing plans clear handle 
problem evidence failure observe complex 
consider happen observed open start gen 
assuming equally priori conclude increase power gen power raise level gen equally explanations see 
time went saw actions seeing start gen final action gen certain increase power gen power right explanation 
systems capable reasoning consider plan recognition problem evolves time 
represent fact action observed silent action occurred just means system failed notice action action hasn occurred assert action occur 
show approach handles evidence failure observe actions 
vilain theory plan recognition parsing theory 
vilain propose parsing solution plan recognition problem 
uses reduction limited cases plan recognition parsing order investigate complexity theory 
major problem parsing model plan recognition treat partially ordered plans interleaved plans 
single method partial ordering lower power shutoff done order long open done cause explosion grammar size 
wellman pynadath raise temp check temp raise temp check temp gen power open start gen increase power gen open start gen raise level minimal explanation situation requires plans 
proposed plan recognition method probabilistic parsing 
unfortunately approach suffers limitations plan interleaving vilain 
propose probabilistic context sensitive grammars overcome problem difficult define probability distribution pynadath wellman 
difficulty defining probability distribution problem approach 
overcoming difficulty emphases 
plan recognition systems know properly handles actions taken recognizing agent 
recognizing agent reason situation observes agent actions infers plan thinks pursuing takes actions behalf sees actions 
judea pearl provided general solution reasoning situations theory interventions pearl 
incorporate interventions theory plan recognition permit recognizing systems agents plans watch 
shortcomings past approaches motivated described 
previous plan recognition systems trouble handling ffl partially ordered plans plan interleaving ffl evidence failure observe actions ffl contextual influence plan choice ffl domains recognizer recognized act 
section provide novel model plan recognition provides solutions problems 
plan execution model model plan execution simple 
executing agent start episode chooses set plans execute 
set plans chosen determines set primitive actions pending episode proceeds agent repeatedly execute pending actions generate new set pending actions actions chosen 
new set pending actions generated previous set removing action just executed adding newly enabled actions 
actions enabled predecessors completed 
process illustrated 
model plan execution provides conceptual model generation execution traces 
order model perform plan recognition model reason 
way motivating issues designed confront section brief examples kinds problems system designed handle 
partial orderings encodings plan recognition raise problem partial orders 
partial orders arise tasks sub tasks partially ordered 
method lower power provides example partially ordered sub tasks access panel opened subsystems shut order 
partial ordering arises agent pursues multiple independent tasks simultaneously 
plan recognition theories examined properly handle tasks 
overloaded actions plan recognition systems permit explanations action action done part plan 
example open start gen done part plans increase power raise level 
performing actions sake previous plan recognition systems required users hard distinctions toplevel actions actions done sake actions done service higher level goals 
applications show distinction artificial unrealistic 
example operators control systems occupied glance current values process variables 
expect check temp performed occasionally sake part raise temp 
model require hard distinction top level actions 
negative evidence previous plan recognition systems able properly take account negative evidence confirming effect failing see action 
previous systems didn take negative evidence account didn treat observations sequences 
context model allows take account state world considering goals agent pursuing 
stated earlier agent seen drop level raise level better explanation open increase power open shutoff shutoff lower power increase power open start gen start gen raise level gen open open shutoff start gen start gen shutoff explaining interleaved plans 
pending pending happen happen happen plan plan plan pending pending dynamic belief net illustrating simple model plan execution 
formal exposition model return discuss examples inference performed model 
formalizing model section formal representation plan execution model outlined 
notation poole logic probabilistic horn abduction pha poole 
pha provides logical rules entailing propositions distinguished propositions called hypotheses 
rules prolog horn form 
explanation proposition set hypotheses taken rules entail proposition 
hypotheses associated prior probabilities logic supports notion best explanation 
poole shows pha describe arbitrary belief nets 
plans plan execution model works concert library plans agent may executing 
library tasks 
tasks may goals methods primitive actions 
caution please read terms goal method 
terms mean disjunctive conjunctive nodes plan graph respectively model section walk explanation observed actions 
working backward observation explain observed action chosen set pending actions 
explain set actions assembled 
explanation pending set covers choice subtasks means achieving higher level goals 
covers evolution plan execution episode time 
recall discussion previous section der take account fact agents may carrying multiple interleaved partially ordered plans simply stipulate action happening time chosen set pending actions 
action choosing current pending set corresponds hollow arrows 
define pending set 
happen pending 
rule states action happens time set pending actions picked set 
pick distinguished hypothesis propositions associated probability 
presentation rules mark hypotheses 
current system simply assume pending actions equally 
simple provide complex model choice action execute example sort exponentially increasing probability action continues pending 
example explanations happen open plan database shown pending set fopen check open picked pending set fopen open open picked 
define pending set recursively providing basis case allows explain contents pending set time zero 
process choosing initial pending set plan library shown narrow arrows 
pending set selected set primitive actions leaves pending leaves ls select leaves ls 
rule select leaves selects leaves enabled 
core model plan execution means action enabled 
reasons action may enabled done sake done part parent plan 
enabled sake 
enabled sake parent 
simple case action done case sake 
action set actions may done sake 
particular action meets condition indicated plan database 
note constraints kind action may done sake goals methods primitive actions eligible 
addition possible action done sake done sake 
second condition intended hypotheses probability assessed discussed 
reason action enabled done part larger plan parent parents enabled 
ways child action enabled part parent plan rules 
parent plan may method recipe set steps 
case order particular action enabled member set steps preceding steps recipe done enabled node enabled preds prev done set predecessors node plan defined plan library 
example predecessor set start gen gen gen definition prev done primitive actions straightforward primitive action prev done iff happen composite actions complex 
rule gives condition methods goals 
prev done node expansion prev done prev done node enabled expansion prev done 
second way child enabled part plan set methods carrying case required executing agent choose way intends enabled node choose expansion enabled 
expressions form choose expansion hypotheses 
examples worked assumed methods parent equally may easily changed 
need supply choice probabilities 
substantial limitation approach assumes single method chosen executing agent means achieving assumption relaxed cost cumbersome model method choice 
far necessary 
far provided rules necessary explaining initial contents set pending actions explaining action agent takes 
plan execution progresses contents pending set changes process shown shaded arrows pending pending leaves ls progress ls 
progress rule assembles new pending list considering set primitive actions adding subtracting appropriate actions 
complex rules involving cases 
action removed pending set 
previously pending actions remain pending 
things previously pending may added 
need rules mutually exclusive exhaustive actual rules progress somewhat cumbersome omitted short version 
interesting case case adding primitive action pending set case 
primitive actions added pending set done enabled add prev done enabled 
recall ways action enabled chosen method newly enabled parent part method executed predecessors just completed 
recall definitions enabled recursive applying primitive actions methods goals 
incorporating context far simply assumed plans fixed priori probability chosen 
extend model plan execution plan adoption conditional facts obtain start episode 
add rules plan adoption conditional facts environment 
provide example 
interacting executing agent wish perform plan recognition order provide help users 
properly passively observe process plan execution 
able intervene process predict effects interventions 
build intelligent systems intervene performing actions user behalf 
pearl provides theoretical framework causal interventions processes described dynamic bayesian networks 
essence approach intervene clamping node network cutting causal links node 
revise model plan execution permit explanations action occurring observed agent carries action system intervenes perform action 
apply pearl approach plan execution model replacing rule rules happen intervene 
revision original rule mutually exclusive exhaustive happen intervene pending member pick 
rule indicates intervention action independent preceding events contents pending set 
interventions causal effects contents pending set actions performed agent 
pha requires rules mutually exclusive exhaustive 
probabilities order model probabilistic model need specify probabilities restricted set hypotheses 
follows 
probability agent adopt particular task sake 
probabilities may simple unconditional probabilities may conditional agent environment 

probability agent choose particular method attempting achieve goal 

probability agent choose particular primitive action set pending primitive actions 
parameters correspond types hypotheses marked rules 
simple set rules plan library provides framework abductive plan recognition 
may generate abductive proofs occurrence observed action sequences explanations extract user intentions 
section provide worked examples 
serve illustrate model show differs previous area 
plan recognition examples section provide examples show model handles difficult plan recognition cases 
examples state assumed goals equally methods equally chosen agent 
examples plan library shown 
stress assumptions parts model additional simplifications sake clarity presentation 
abbreviate propositions happen open open yielding expressions open probability open happens time check temp probability check temp happens time open happened time 
likewise intend increase power express system posterior belief agent intends increase power open happened time 
possible ambiguity represent observations intend increase power 
interleaving plans multiple goals consider case agent executes action open action check temp 
system conclude agent pursuing raise temp increase power raise level plan intend raise temp increase power raise level system beliefs multiple goals agent allow assign higher probability actions contribute agent possible plans 
example start gen raise temp set steps respective plans 
system believes actions certainly action executed start gen 
raise temp set 
partially ordered plans pending set provides system ability handle partially ordered plans 
consider case actions open shutoff shutoff lower power 
domain action open predecessor shutoff shutoff 
open executed shutoff shutoff enabled pending set performed 
rules construction pending set guarantee ordering constraints enforced 
example action start gen added pending set action open performed see 
overloaded actions open example action may done part plans simultaneously 
possibility readily handled theory 
recall order explain observations find pending set consistent evidence consider possible explanations 
ask probability open action performed consider possible goal sets agent pursuing possible expansions goals 
part process find explanations action open part different methods increase power raise level 
performing actions sake compare cases observe 
case conventional assumption check temp done part plan raising temperature 
case prove agent executing raise temp 
hand consider possibility operator checking temperature conclude probabilities agent pursuing raise temp just doing check temp equal prior probabilities 
probability doing check temp sake relatively high necessarily conclude agent trying raising temperature 
plan recognition done part system take actions help agent observing see getting right important 
negative evidence consider happens see actions openp start gen 
equal conclude increase power means raise level gen equally 
consider happens see action check temp action raise temp set 
time goes see actions confident seen method gen power simply gen pending set framework provides simple elegant solution problem 
recall action happens set pending actions picked set 
framework see sequence actions contain start gen grow gradually certain start gen member pending set 
undermine previous belief hypothesis raise level reinforce belief increase power 
table shows conditional probabilities problem evolve time 
context model allows take account state world considering goals agent pursuing 
capability essential supporting users tasks influenced state world users controlling manufacturing plant 
shows agent intentions increase power depend proposition 
assume simplicity sake re plan library equally methods 
eva prep increase power deterministic required formalism eva prep true agent intends increase power eva prep agent intend increase power 
eva prep plans equally priori increase power raise level raise temp probabilities initial actions open open 
system knows eva prep true belief agent pursuing increase power shifts probability action contributes plan increases 
open prep open prep 
interventions consider set actions 
suppose agent observed performing action plans consistent performing equally 
system concludes agent doing equal probability intend ja intend ja 
concludes actions equally appear ja ja 
suppose agent perform reason system safely infer agent intends tends explain away lowering probability intend ja 
execution enables provides evidence ja 
consider happen agent performing system done write 
plan recognition algorithm treats evidence agent pursuit agent 
system performs system belief probability agent pursuing change intend ja intend ja execution system licence time proposition probability intend increase power start gen intend raise level start gen intend increase power start gen check temp intend raise level start gen check temp intend increase power start gen check temp raise temp set intend raise level start gen check temp raise temp set table results showing cumulative impact negative evidence 
inferences 
example executed enabled added pending set 
system execution change system beliefs goals agent system believes action execution ja ja 
implementation plan recognition theory implemented computationally 
implementation centers pha abductive theorem prover 
theorem prover david poole poole differs substantially search strategy 
examples mentioned tested implementation 
rules program differ earlier treatment quantification negation interpreted theorem prover 
expect theorem prover rule set publicly available 
concluding remarks general model plan recognition probabilistic abductive logic 
model simple formal theory plan execution 
comparison previous plan recognition theory better handles sequences actions generated interleaved plans 
theory accommodate information context plans adopted 
previous theories incorporate interventions process plan execution 
address limitations model 
limitation model agent interact surroundings 
actions done agent interventions change world state world state represented 
working elaborate plan execution model takes account 
david poole pha interpreter help working 
charniak goldman 
bayesian model plan recognition 
artificial intelligence 
charniak mcdermott 
artificial intelligence 
reading ma addison wesley 
cohen perrault allen 
question answering 
lehnert eds strategies natural language processing 
hillsdale nj lawrence erlbaum associates 

de mantaras poole eds 

uncertainty artificial intelligence proceedings tenth conference 
morgan kaufmann 
kautz allen 
generalized plan recognition 
proceedings fifth national conference artificial intelligence 
pearl 
probabilistic calculus actions 
de mantaras poole 
poole 
logic programming abduction probability top anytime algorithm prior posterior probabilities 
new generation computing 
poole 
probabilistic horn abduction bayesian networks 
artificial intelligence 
pynadath wellman 
generalized queries probabilistic context free grammars 
appear ieee pami vilain 
getting serious parsing plans grammatical analysis plan recognition 
proceedings eighth national conference artificial intelligence 
cambridge ma mit press 
wellman pynadath 
plan recognition uncertainty 
unpublished web page 
