ontology reasoning shoq description logic ian horrocks department computer science university manchester uk horrocks cs man ac uk ulrike sattler theoretical computer science rwth aachen germany sattler informatik rwth aachen de ontologies set play key role semantic web providing source shared precisely defined terms descriptions web resources 
reasoning descriptions essential web resources accessible automated processes 
shoq expressive description logic equipped named individuals concrete datatypes exactly expressive power latest web ontology languages oil daml 
sound complete reasoning services logic 
explosion interest world wide web interest ontologies 
due ontologies existing web applications role development web van heijst mcguinness uschold gruninger particular predicted ontologies play pivotal role semantic web world wide web consortium vision second generation web web resources readily accessible automated processes berners lee key component semantic web annotation web resources meta data describes content ontologies providing source shared precisely defined terms metadata 
requirement led extension web markup languages order facilitate content description development web ontologies xml schema rdf resource description framework rdf schema decker rdf schema rdfs particular recognisable ontology knowledge representation language talks classes properties binary relations range domain constraints properties subclass subproperty subsumption relations 
rdfs primitive language word ontology say abused wide range contexts 
taken mean formally defined model part domain interest 
complete description functionality expressive power clearly necessary desirable order describe resources sufficient detail 
descriptions amenable automated reasoning effectively automated processes 
considerations led development oil fensel daml hendler mcguinness ontology languages extend rdfs richer set modelling primitives 
languages designed way mapped expressive description logic dl 
mapping provides formal semantics clear understanding characteristics various reasoning problems subsumption satisfiability possibility exploiting existing decision procedures 
oil particular designed reasoning services provided mapping shiq dl fact system horrocks horrocks unfortunately mappings currently incomplete important respects 
firstly practical ontology language need deal concrete datatypes numbers strings baader hanschke ontologies commerce may want classify items weight reason item weighing kind item requires special shipping arrangements 
oil supports integers strings class descriptions anticipated daml oil new language developed merging daml oil efforts support datatypes defined definable xml schema 
shiq logic implemented fact system include concrete datatypes mechanism reasoning part language 
secondly realistic ontologies typically contain named individuals class descriptions 
described persons citizens italy italy named individual schaerf required functionality partially simulated treating individuals pairwise disjoint atomic classes approach taken existing oil fact mapping result incorrect inferences 
new dl overcomes fact viewed syntactic variants logic 
deficiencies logic extending individuals concrete datatypes give shoq 
starting point extensions shiq inverse roles reasoning inverse roles known difficult highly intractable combined concrete datatypes named individuals concept satisfiability problem know nexptime hard basic dl alc augmented inverse roles concrete datatypes named individuals lutz tobies hardness result concrete datatypes directly applicable shoq depends comparisons concrete values binary predicates addition comparisons natural extension shoq 
presence nominals dl leads loss tree forest model property particularly problematical presence inverse roles number restrictions general axioms 
result best knowledge practicable decision procedure shiq nominals converse nominals close relative shiq dynamic logics streett individuals concrete datatypes widely ontologies inverse roles corcho perez shoq useful addition reasoning 
preliminaries section describe choice concrete datatypes named individuals introduce syntax semantics shoq 
concrete datatypes concrete datatypes represent literal values numbers strings 
type system typically defines set primitive datatypes string integer provides mechanism deriving new datatypes existing ones 
example xml schema type system datatype derived integer datatype constraining values greater equal zero order represent concepts persons age extend concept language set concrete datatypes concepts form precise assume set datatypes set 
associated 
domain datatypes 
assume 
domain interpretation concrete datatypes 
concrete domain disjoint domain interpretation concept language domain 
exists sound complete decision procedure emptiness expression form possibly negated concrete datatype interpreted 

say set datatypes conforming satisfies criteria 
disjointness concrete domains motivated philosophical pragmatic considerations 
hand concrete datatypes considered sufficiently structured type system may include derivation mechanism built ordering relations need dl mechanism form new datatypes baader hanschke hand allows deal arbitrary conforming set datatypes compromising compactness concept language soundness completeness decision procedure 
scheme trivially extended include boolean combinations datatypes number restrictions qualified data types simplify presentation consider possibly negated atomic datatypes exists value restrictions 
type system complex defined xml schema simple defined oil ontology language fensel primitive datatypes integer string new types derived adding minimum maximum value constraints 
oil example define type min concept person age min 
named individuals allowing named individuals occur concepts provides additional expressive power useful applications nominals individuals called prominent feature hybrid logics blackburn seligman various extensions modal description logics nominals investigated see schaerf de giacomo 
seen nominals occur naturally ontologies names specific persons companies countries etcetera 
semantic point view important distinguish nominal atomic concept simple class nominal stands exactly individual contrast concept interpreted set individuals 
modelling nominals pairwise disjoint atomic concepts lead incorrect inferences particular respect implicit maximum cardinality constraints 
example italy modelled atomic concept possible infer persons citizens italy dual nationality citizens country 
nominals viewed powerful generalisation dl abox individuals schaerf abox assert individual instance concept pair individuals instance role binary relation abox individuals inside concepts 
example giuseppe italy abox individuals assert pair giuseppe italy instance citizen role describe concept italian person citizen italy 
nominals express concept person citizen italy capture abox assertions concept inclusion axioms form giuseppe italian giuseppe italian giuseppe citizen italy giuseppe citizen italy 
construct name syntax semantics atomic concept role ra concrete role rd nominals datatypes 
conjunction disjunction negation 
exists restriction fx hx yi value restriction fx hx yi implies atleast restriction ns ns fx fy hx yi ng atmost restriction ns ns fx fy hx yi ng datatype exists fx hx yi datatype value fx hx yi implies syntax semantics shoq shoq syntax semantics definition ra rd disjoint sets concept names concrete role names individual names 
roles role axiom role inclusion form ra rd transitivity axiom form trans ra role box finite set role axioms 
role called simple transitive reflexive closure role implies trans set shoq concepts smallest set concept name concept individual name concept concepts role concrete role simple role concrete datatype complex concepts built operators shown 
semantics means interpretation consisting non empty domain 
disjoint concrete domain 
mapping 
maps atomic complex concepts roles nominals denotes set cardinality 
interpretation 
satisfies role inclusion axiom iff satisfies transitivity axiom trans iff interpretation satisfies role box iff satisfies axiom shoq concept satisfiable role box iff interpretation satisfies interpretation called model concept subsumed concept iff interpretation satisfying concepts said equivalent iff mutually subsume 
remarks order clear context trans trans please note domain role domain distinguish roles range domain roles range concrete domain concrete roles 
form roles possibly index 
chosen disallow role inclusion axioms form concrete role model axiom necessarily interpret empty relation 
restricting number restrictions simple roles required yield decidable logic horrocks negation concepts datatypes relativised concrete domain 
usual subsumption satisfiability reduced shoq expressive power general concept inclusion axioms horrocks presence nominals add concept general concept inclusion axioms sure universal role reaches nominals occurring input concept terminology 
choose unique name assumption nominals refer individual 
inference algorithm easily adapted unique name case suitable initialisation inequality relation 
tableau shoq ease presentation assume concepts negation normal form nnf 
concept transformed equivalent nnf pushing negation inwards making laws equivalences nr nr sc denote nnf concept cl denote set subconcepts nnf subconcepts possibly negated datatypes occurring subconcepts 
definition shoq concept nnf role box sets concrete roles occurring tableau defined quadruple ea ed set individuals cl maps individual set concepts subset cl ea maps role set pairs individuals ed 
maps concrete role set pairs individuals concrete values individual 
cl ft hs ti ea holds hs ti ea hs ti ea hs ti ed hs ti ed hs ti ea hs ti ea hs ti ea trans ns ns ns ns hs ti ea fc scg hs ti ed 
hs ti ed lemma shoq concept nnf satisfiable role box iff tableau proof concentrate cover new logical features nominals datatypes remainder similar proof horrocks roughly speaking construct model tableau interpretation domain adding missing role transitive roles 
induction structure formulae prove 
ensures nominals interpreted singletons sure concrete datatypes interpreted correctly 
converse model definition semantics tableau 
tableau algorithm shoq lemma algorithm constructs tableau shoq concept decision procedure satisfiability respect role box algorithm described detail 
please note due absence inverse roles subset blocking sufficient see baader sattler ensure termination correctness 
definition role box shoq concept nnf set roles occurring set nominals occurring completion forest respect set trees node forest labelled set cl edge hx yi labelled set role names hx yi containing roles occurring cl additionally keep track inequalities nodes forest symmetric binary relation nodes distinguished node 
represent labelled edge completion forest node called successor node successor hx yi ancestors roots defined usual 
role node define fy successor node directly blocked ancestors blocked ancestor distinguished 
case say blocks node blocked directly blocked predecessor blocked 
node said contain clash 
concept name nc fa ag 
role ns successors yn 
contains possibly negated datatypes dn empty 
individuals occurring algorithm initialises completion forest contain root nodes fdg fo inequality relation initialised empty relation 
expanded repeatedly applying rules stopping clash occurs nodes 
completion forest complete node contains clash rules applicable 
expansion rules applied way yield complete clash free completion forest algorithm returns satisfiable unsatisfiable 
lemma started shoq concept nnf completion algorithm terminates 
proof jcl jr maximal number atleast number restrictions ji termination consequence properties expansion rules rule rule strictly extends completion forest extending node labels adding nodes removing nodes elements node 
new nodes generated rule successors node concepts form ns 
node concepts trigger generation successors node generated removed rule 
successor generated concept removed successor rule applied rule yn generated application rule concept ns added implies rule blocked fc fc rule blocked fc fcg fc rule blocked successor resp 
successor create new node hx yi frg fcg resp 
hx yi ftg fdg rule blocked successor resp 
successor fcg resp 
fdg rule blocked trans successor cg choose rule ns ns blocked successor fc scg feg fc scg rule ns blocked successors yn create new nodes yn hx fsg fcg rule ns blocked successors yn exist distinguished 
add distinguished 
hx hx hx distinguished 
hx 
remove edges leading completion forest rule blocked distinguished distinguished 

predecessor hx xi 
add remove edges leading completion forest complete tableaux expansion rules shoq successors rule rule merges nodes rule removes successor successor inherits inequalities degree forest bounded nm 
nodes labelled subsets cl different node labellings 
path length blocking condition definition nodes directly blocked paths length lemma shoq concept nnf tableau expansion rules applied yield complete clash free completion forest 
proof concentrate new features nominals datatypes refer reader horrocks remainder 
tableau apply non deterministic rules choose rule way obtain complete tableau inductively generation new nodes define mapping nodes completion forest individuals tableau concrete values way pair nodes concrete role successor ea ed 
please note holds case successor distinguished node case concrete value 
due encounter clash form sure rule applied correctly 
lemma expansion rules applied shoq concept nnf role box yield complete clash free completion forest tableau proof complete clash free completion forest obtain tableau ea ed unravelling usual 
element tableau path completion forest starts root nodes going blocked node goes node blocking node disregard nodes datatypes labels 
roles defined labels edges xn hx xn ea labels xn hx xn ea 
concrete roles defined edges disregarded nodes datatypes labels 
clash freeness sure possible 
satisfy cases successors node nr blocked node distinguish individuals going go easily done horrocks annotating points path accordingly 
set xn xn 
remains prove satisfies pi 
similar horrocks 
due completeness rule applicable implies nominals labels distinguished nodes note definition blocking distinguished node block 
due fact clash form rule applicable 
immediate consequence lemmas completion algorithm terminates answers satisfiable iff satisfiable subsumption reduced un satisfiability 
mentioned section shoq general concept inclusion axioms decide inference problems terminologies 
theorem completion algorithm definition decision procedure satisfiability subsumption shoq concepts terminologies 
seen ontologies set play key role semantic web provide source shared precisely defined terms descriptions web resources 
descriptions amenable automated reasoning effectively automated processes 
dl shoq sound complete decision procedure concept satisfiability subsumption 
support nominals concrete datatypes shoq suited provision reasoning support ontology languages general web ontology languages particular 
addition shoq decision procedure similar shiq decision procedure implemented highly successful fact system amenable similar range performance enhancing optimisations 
feature languages oil daml shiq missing shoq inverse roles 
exclusion motivated high complexity reasoning results unconstrained interaction inverse roles nominals datatypes 
include detailed study interaction view providing restricted support inverse roles triggering explosion complexity 
implementation fact system planned test empirical performance 
blackburn marx 
computational complexity hybrid temporal logics 
logic journal igpl 
appear 
baader hanschke baader hanschke 
scheme integrating concrete domains concept languages 
proc 
ijcai pages 
baader sattler baader sattler 
tableau algorithms description logics 
proc 
tableaux vol 
lnai pages 
berners lee berners lee 
weaving web 
orion business books 
xml schema part datatypes 
candidate recommendation oct 
www org tr xmlschema 
blackburn seligman blackburn seligman 
hybrid languages 
advances modal logic vol 
pages 
csli publications 
corcho perez corcho gomez perez 
evaluating knowledge representation reasoning capabilities ontology specification languages 
proc 
ecai workshop applications ontologies problem solving methods 
de giacomo de giacomo 
decidability classbased knowledge representation formalisms 
phd thesis universita degli studi di roma la sapienza 
decker decker semantic web respective roles xml rdf 
ieee internet computing 
fensel fensel oil nutshell 
proc 
ekaw lnai 
hendler mcguinness hendler mcguinness 
darpa agent markup language 
ieee intelligent systems 
horrocks horrocks sattler tobies 
practical reasoning expressive description logics 
proc 
lpar vol 
lnai 
horrocks horrocks 
benchmark analysis fact 
proc 
tableaux vol 
lnai 
lutz lutz 
nexptime complete description logics concrete domains 
proceedings esslli student session 
mcguinness mcguinness 
ontological issues knowledge enhanced search 
proc 
fois 
ios press 
schaerf schaerf 
reasoning individuals concept languages 
data knowledge engineering 
streett streett 
propositional dynamic logic looping converse elementarily decidable 
information computation 
tobies tobies 
complexity reasoning cardinality restrictions nominals expressive description logics 
jair 
uschold gruninger uschold gruninger 
ontologies principles methods applications 
knowledge eng 
review 
van heijst van heijst th 
schreiber wielinga 
explicit ontologies kbs development 
int 
human computer studies 
