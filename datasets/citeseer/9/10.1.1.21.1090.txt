cabob fast optimal algorithm combinatorial auctions tuomas sandholm computer science dept carnegie mellon university pittsburgh pa subhash suri dept computer science university california santa barbara ca andrew craig st pittsburgh pa david levine craig st pittsburgh pa combinatorial auctions bidders bid bundles items lead economical allocations determining winners np complete 
cabob sophisticated search algorithm problem 
uses decomposition techniques upper lower bounding components elaborate dynamically chosen bid ordering heuristics host structural observations 
experiments cplex show cabob usually faster drastically slower cases special structure drastically faster 
uncover interesting aspects problem 
problems short bids hard generation specialized algorithms easy 
second cats distributions easy easier bids 
third test number random restart strategies show help problem run time distribution heavy tail cabob 
auctions important mechanisms resource task allocation multiagent systems 
auctions bidder valuation combination items sum individual items valuations 
combinatorial auctions cas bidders bid bundles items allow bidders express complementarity modifications substitutability sandholm items 
expressiveness lead economical allocations items bidders get stuck partial bundles low value 
determining winners combinatorial auctions computationally complex 
surge research addressing rothkopf sandholm lehmann sandholm suri andersson hoos boutilier fast optimal search algorithm problem 
section defines funded conducted craig st pittsburgh pa 
problem 
algorithm section 
section discusses bid ordering heuristics 
experimental results sections 
random restart strategies discussed section section concludes 
winner determination problem section define winner determination problem 
definition auctioneer set items mg sell buyers submit set bids fb bn bid tuple hs set items price 
binary combinatorial auction winner determination problem label bids winning losing maximize auctioneer revenue constraint item allocated bidder max jji mg np complete rothkopf approximated ratio gammaffl polynomial time np sandholm bids accepted partially problem linear program lp solved polynomial time 
lp formulation dual ways algorithm 
lp max jji mg dual min ng continuous setting shadow price gives price individual item binary case individual items generally prices value dual gives upper bound price item items included bids add dual constraint items 
alternatively preferably items simply removed preprocessing step 
description algorithm algorithm cabob combinatorial auction branch bids tree search algorithm branches bids 
high level idea branching bids proposed sandholm suri bob algorithm 
knowledge bob implemented experimental results published 
cabob incorporates techniques proposed bob host additional ones 
implemented 
skeleton cabob depth branch bound tree search branches bids 
value best solution far global variable initially 
data structure called bid graph maintained 
nodes graph correspond bids available appended search path bids include items allocated 
number vertices jv vertices share edge corresponding bids share items 
vertices removed going search path edges connected removed 
vertices re inserted backtracking edges reinserted 
point number edges jej gamma pseudocode cabob calls special cases introduced 
readability omit solution set winning bids updated conjunction update discussed technique pruning independent subproblems components 
support parameter min denote minimum revenue call cabob return including revenue path far neighbor components competitive best solution far 
revenue bids winning search path far called includes lower bounds actual values neighbor components search node path far 
search invoked calling cabob 
algorithm cabob min 
apply special cases complete edges 
run dfs number components independent bid graphs 
calculate upper bound component 
min return 
apply special case integer 
calculate lower bound component 
delta gamma 
delta delta min min delta 
goto 
choose bid branch articulating bids gamma fb gamma fb old cabob min gamma min min gamma old fb old cabob min min min gamma old fb return 
solved 
unsolved unsolved 
component cg solved unsolved min return solved unsolved gamma old cabob min gamma min min gamma old solved solved unsolved unsolved gamma unsolved unsolved gamma 
return solved discuss techniques cabob length 
upper bounding step cabob uses upper bound revenue unallocated items contribute 
current solution extended new optimal solution optimistic assumption upper bound met cabob prunes search path 
technique devising upper bound 
solve remaining lp objective function value gives upper bound 
cabob copies lp table incrementally adds deletes rows lp table bids removed re inserted search proceeds path backtracks 
cabob moves search path remembers lp solution parent uses starting solution child lp 
necessary run lp optimality 
starting lp look condition step determine minimum revenue lp produce search branch pruned 
lp solver finds solution exceeds threshold stopped pruning search branch 
lp solver find solution exceeds threshold runs completion branch pruned 
cabob runs lp completion uses integer real solutions lp dual ways 
experiments showed upper bound lp significantly tighter proposed previous combinatorial auction winner determination algorithms sandholm sandholm suri case multiple components determining high revenue component lp return exact solution values solved neighbor components included upper bounds unsolved neighbor components 
time taken solve lp node negligible compared savings search due enhanced pruning 
integer special case lp happens return integer values bid occurs expected cabob bids winning losing 
clearly optimal solution remaining bids 
cabob updates solution better best far 
cabob returns call searching node 
easy show values integer simply accept bids 
simply reject bids 
approach compromise optimality 
lower bounding step cabob calculates lower bound revenue remaining items contribute 
lower bound high allow updated leading pruning search subtree rooted node 
lower bounding technique 
rounding technique 
step cabob solves remaining lp anyway gives acceptance level remaining bid insert bids lower bound solution 
try insert rest bids decreasing order skipping bids share items bids lower bound 
easy prove method gives lower bound 
rounding techniques known provide reasonably lower bounds average planning try lower bounding techniques cabob stochastic local search hoos boutilier exploiting decomposition step cabob runs jej jv time depth dfs bid graph tree depth forest connected component winner determination conducted component independently 
search time superlinear size decomposition leads time savings 
winners determined calling cabob component separately 
experiments show lead drastic speedup 
upper lower bounding components addition regular upper lower bounding somewhat achieve pruning compromising optimality exploiting information independent components 
starting solve component cabob checks component contribute revenue context know bids search path far neighboring components 
specifically determining min value calling cabob component revenue current call cabob produce current min value decremented revenues solved neighbor components lower bounds unsolved neighbor components 
min value allows algorithm correctly single search path may search nodes decomposition occurred interleaved search nodes decomposition occur 
time better global solution updated min values search tree incremented amount improvement bar search useful raised 
cabob handles updates separately traversing tree update occurs 
cabob directly updates min step updates min value parent node recursive call cabob returns 
cabob uses lower bounding components 
search node lower bound includes revenues bids winning path revenues solved neighbor components search nodes path lower bounds unsolved neighbor components search nodes path lower bound revenue unallocated items current search node contribute 
due upper lower bounding components due updating order tackling components potentially difference speed 
cabob currently tackles components order dfs 
plan study elaborate component ordering research 
forcing decomposition articulation bids addition checking decomposition occurred cabob strives decomposition 
bid choice step picks bid leads decomposition bid exists 
bids deletion disconnects called articulation bids 
articulation bids identified jej jv time slightly modified dfs proposed sandholm suri scheme branching articulation bid exists odds price bid ordering schemes discussed 
proved sandholm suri scheme articulation family dominates scheme price family vice versa general 
experiments showed practice pays branch articulation bids exist decomposition reduces search drastically 
bid articulation bid lead decomposition bid assigned losing lead decomposition assigned winning removes bid neighbors 
reason assign bid branch winning assigning losing value ordering 
bid ordering variable ordering give preference articulation bids second preference bids articulate winning branch third preference bids articulate branch price bid ordering 
try identify sets bids articulate bid graph branch bids set 
keep computation linear time size cabob simply gives priority articulation bids uses bid ordering schemes discussed 
articulation bids cabob branches subsequent levels search 
elaborate scheme choosing articulation bids 
complete special case step cabob checks bid graph complete jej gamma remaining bids accepted 
cabob picks bid highest price updates appropriate prunes search path 
edges special case step cabob checks bid graph edges jej 
accepts remaining bids updates appropriate prunes search path 
preprocessing preprocessing techniques proposed search winner determination algorithms sandholm conjunction cabob 
cabob search fast want spend significant time preprocessing dwarf search time 
preprocessing cabob bid arrives cabob discards bid dominates discards bid dominated earlier bid 
bid ordering heuristics step cabob potentially large number bids cabob branch 
developed bid ordering heuristics making choice 
ffl normalized bid price nbp sandholm suri branch bid highest js ff conjectured sandholm suri ff slightly best ff gives best worst case bound greedy algorithm lehmann determined experimentally ff yields fastest performance 
ffl normalized shadow surplus nss problem nbp treats item equally valuable 
modified weight different items differently static prices seller guesses auction 
propose sophisticated method items weighted values remaining subproblem 
shadow price remaining dual problem proxy worth item 
branch bid price gives highest surplus worth items normalized surplus greater bid uses valuable items gamma ff showed experimentally modification normalization leads faster performance gamma log call scheme nss 
corresponds variable ordering 
choosing branch branch corresponds value ordering 
current version cabob try branch 
reason try include bids early find solutions early 
enables pruning upper bounding 
improves anytime performance 
cplex hand uses value ordering tries branch 
research plan experiment option cabob 
ffl bid graph neighbors branch bid largest number neighbors bid graph motivation allow cabob remove largest number bids ffl number items ni branch bid largest number items 
motivation 
ffl bids ob branch bid value lp closest 
idea bid accepted lp competitive 
ffl fractional bids fb branch bid closest 
strategy advocated operations research literature wolsey idea lp sure bids sense resolve uncertainty invest branching bids lp certain 
bids values close tend get closer extreme values search proceeds path lp give integer solution 
bids branched 
choosing bid ordering heuristics dynamically ran experiments distributions discussed heuristics primary heuristic heuristics tie breaker 
tried third heuristic break remaining ties helped 
best composite heuristic ob nss ob broke ties nss 
noticed certain distributions ob nss best distributions bids included large number items nss best 
selective superiority heuristics led idea choosing bid ordering heuristic dynamically characteristics remaining subproblem 
determined distinguishing characteristic distributions lp density density number nonzero coefficients lp number lp rows theta number lp columns ob nss best density nss best 
intuitively lp table sparse lp guessing bids accept 
table dense lp poor guesses bids accepted small extent 
cases price scheme nss uses shadow prices lp better 
search node cabob density computed bid ordering scheme chosen dynamically ob nss density nss 
fundamentally different bid ordering methodology observe stochastic local search approximate algorithm problem come solution fast solution forced left branch branch cabob sure bids nearest root give cabob global form guidance bid ordering 
design philosophy cabob vs cplex benchmarked cabob general purpose integer programming package cplex 
shown andersson cplex faster comparable determining winners combinatorial auctions generation special purpose search algorithms sandholm cplex times faster cplex compare cabob cplex knowledge comparing state art 
fundamental differences cabob cplex want explain put experiments context 
cplex uses best bound search wolsey requires exponential space option force depth search cplex somewhat slower cabob uses depth branch bound runs linear space 
hard problems cplex ran virtual memory 
experiments show cases cplex able run ram 
puts cabob disadvantage comes reaching optimal solution fast allow cabob explore promising leaves search tree 
time believe memory issue unusable problem practice 
cabob cplex uses lp obtain upper bounds 
cplex uses manipulate lp table algebraically wolsey reduce search 
experiments ran cabob 
naturally added cabob preprocessing step 
put equal cplex find optimal solution prove optimality faster expect anytime behavior worse 
experimental setup tested cabob cplex common combinatorial auction benchmarks distributions sandholm cats distributions leyton brown addition tested new distributions 
distributions sandholm ffl random bid pick number items randomly randomly choose items replacement 
pick price 
ffl weighted random pick price number items bid 
ffl uniform draw number randomly chosen items bid 
pick prices 
ffl decay give bid random item 
repeatedly add new random item probability ff item added bid includes items 
pick price number items bid 
tests ff graphs sandholm show setting leads hardest algorithm instances average 
tested algorithms cats distributions paths regions matching scheduling arbitrary 
default parameters cats instance generators varied number bids 
tested algorithms new benchmark distributions ffl bounded bid draw number items randomly lower bound upper bound 
randomly include distinct items bid 
pick price number items bid 
ffl components number independent problems uniform distribution 
generate bids bids set items 
experiments conducted mhz pentium iii pc mb ram 
point plot median run time instances 
cabob cplex lp solver comes cplex 
cabob cplex tested exactly instances 
experimental results random distribution fig left cabob faster cplex difference grows number bids 
preprocessor cabob eliminates large number bids 
cabob resorted search cplex presolve lp solved problem search instances 
weighted random distribution fig bids sandholm random bids items cabob cplex bids sandholm weighted random bids items cabob cplex run times random weighted random distributions 
right performance cabob cplex identical 
achieve differently 
bids cplex presolve lp solves problem time cabob resorts search time 
interestingly decay distribution fig 
left realistic distribution sandholm reported difficult earlier winner determination algorithms algorithms solve problem lp cases 
cplex goes search time cabob resorts search time 
cabob faster cplex mainly cplex uses presolve cabob 
uniform distribution fig 
left algorithms resort search 
speeds comparable cplex faster 
generation winner determination algorithms sandholm instances small numbers items bid harder instances long bids 
cabob cplex complexity invariant number items bid complexity drops significantly bids include items 
lp handle cases short bids terms upper bounding finding integer solutions 
bid contains item lp finds integer solution 
components distribution demonstrates power cabob decomposition technique pruning components 
cabob run time increases linearly number components cplex time exponential 
components cplex ran virtual memory 
performance observed glue bid included items component bids sandholm decay bids items cabob cplex items bid uniform bids items cabob cplex run times decay uniform distributions 
cabob identify bid articulation bid 
number components components bids items items bid cplex cabob run times components distribution 
bounded distribution fig 
realistic version uniform distribution relative performance cabob cplex depended bounds 
short bids cplex somewhat faster relative speed difference decreased number bids 
long bids cabob faster mainly due checking completeness bid graph difference grew dramatically number bids 
bids bounded items bid cplex cabob bids bounded items bid cplex cabob run times bounded distribution 
surprisingly cats distributions easy 
lp solved cases 
interestingly rare cases algorithms resorted search disappeared number bids increased cats arbitrary complexity vary number bids 
fig 
shows cabob faster cplex mainly preprocessor discards large number bids 
difference grows number bids 
bids cats paths cabob cplex bids cats matching cabob cplex run times cats paths matching 
anytime performance expected designs cabob better anytime performance cplex 
fig 
shows run typical sense anytime performance carefully selected cabob cplex take equal time prove optimal solution reached 
cabob dominates cplex finds optimal solution time takes cplex find 
execution time anytime performance cabob cplex solution quality bounded distribution reported algorithm second 
random restarts random restarts widely local search algorithms shown speed tree search algorithms gomes conjectured random restarts combined randomized bid ordering avoid unlucky bid ordering 
see improve cabob random restarts implemented random restarts methods best knowledge improved try capitalize special properties problem 
implemented restart strategies ffl double double execution time restarts 
ffl constant restart ffi backtracks gomes ffl luby sinclair zuckerman luby showed constant scheme optimal ffi tailored run time distribution unfortunately usually known practice 
constructed scheme suffers asymptotically logarithmic time penalty independent run time distribution 
scheme run time power 
time pair runs length executed run time twice length immediately executed 
implemented bid ordering techniques restart strategies ffl random randomly pick remaining bid 
ffl boltzmann pick bid probability value nss bid ordering heuristic objective function value lp 
higher values result randomness 
ffl bound bid value bound highest value equally probable 
tried bid ordering restart strategy varied initial time parameters ffi cabob faster cabob restarts 
turns just facet restart schemes parameters settings 
random restarts tend lead speedup run time distribution heavy tail gomes decided test cabob exhibits heavy tailed run times winner determination problem 
chose distribution cabob runtime varied increase chance finding heavy tail 
uniform distribution items bid 
distribution heavy tail variance usually mean unbounded gomes seen fig 
mean variance bounded constant 
means run time distribution heavy tail 
explains negative results restarts suggests random restarts fruitful avenue improvement setting 
number instances variance mean mean variance cabob search time function number instances sample 
research combinatorial auctions bidders bid bundles items lead economical allocations determining winners np complete 
cabob sophisticated search algorithm problem 
uses decomposition techniques upper lower bounding components host structural observations elaborate dynamically chosen bid ordering heuristics techniques increase speed especially problems different types special structure expect common real combinatorial auctions 
experiments fastest prior algorithm cplex show cabob usually faster drastically slower cases special structure drastically faster 
cabob knowledge currently fastest optimal algorithm problem 
cabob search runs linear space cplex takes exponential space 
cabob significantly better anytime behavior cplex 
uncovered interesting aspects problem 
problems short bids hard generation specialized algorithms easy 
second cats distributions easy easier bids 
third tested number random restart strategies showed random restarts help problem run time distribution heavy tail cabob 
andersson arne andersson fredrik ygge 
integer programming combinatorial auction winner determination 
proceedings fourth international conference multi agent systems icmas pages boston ma 
kevin yoav shoham 
taming computational complexity combinatorial auctions optimal approximate approaches 
proceedings sixteenth international joint conference artificial intelligence ijcai pages stockholm sweden august 
gomes carla gomes bart selman henry kautz 
boosting combinatorial search randomization 
proceedings national conference artificial intelligence aaai madison wi 
hoos boutilier holger hoos craig boutilier 
solving combinatorial auctions stochastic local search 
proceedings national conference artificial intelligence aaai pages austin tx august 
lehmann daniel lehmann ita callaghan yoav shoham 
truth revelation rapid approximately efficient combinatorial auctions 
proceedings acm conference electronic commerce acm ec pages denver november 
leyton brown kevin leyton brown mark pearson yoav shoham 
universal test suite combinatorial auction algorithms 
proceedings acm conference electronic commerce acm ec pages minneapolis mn 
luby michael luby alistair sinclair david zuckerman 
optimal speedup las vegas algorithms 
information processing letters 
rothkopf michael rothkopf ronald 
computationally manageable combinatorial auctions 
management science 
sandholm suri tuomas sandholm subhash suri 
improved algorithms optimal winner determination combinatorial auctions generalizations 
proceedings national conference artificial intelligence aaai pages austin tx 
sandholm tuomas sandholm 
algorithm optimal winner determination combinatorial auctions 
proceedings sixteenth international joint conference artificial intelligence ijcai pages stockholm sweden 
extended version appeared washington univ dept computer science tech report wucs january th 
wolsey laurence wolsey 
integer programming 
john wiley sons 
