spatial data structures hanan samet computer science department institute advanced computer studies center automation research university maryland college park md overview spatial data structures spatial databases 
focus hierarchical data structures including number variants quadtrees sort data respect space occupied 
techniques known spatial indexing methods 
hierarchical data structures principle recursive decomposition 
attractive compact depending nature data save space time facilitate operations search 
examples data structures representation di erent data types regions points rectangles lines volumes 
keywords phrases spatial databases hierarchical spatial data structures points lines rectangles quadtrees octrees tree tree image processing 
supported part national science foundation iri 
appears modern database systems object model interoperability kim ed addison wesley acm press reading ma 
spatial data consists spatial objects points lines regions rectangles surfaces volumes data higher dimension includes time 
examples spatial data include cities rivers roads counties states crop coverages mountain ranges parts cad system examples spatial properties include extent river boundary county desirable attach non spatial attribute information heights city names spatial data 
spatial databases facilitate storage cient processing spatial non spatial information ideally favoring 
databases nding increasing applications environmental monitoring space urban planning resource management geographic information systems gis buchmann gunther schek 
common way deal spatial data store explicitly obtaining reduction point possibly higher dimensional space 
usually quite easy conventional database management system system just collection records record elds 
particular simply add eld elds record deals desired item spatial information 
approach ne just want perform simple retrieval data 
query involves space occupied data records virtue proximity situation straightforward 
case need able retrieve records spatial properties stored explicitly database 
example roads database may wish force user specify explicitly roads intersect roads regions 
problem potential volume information may large cost preprocessing high cost computing may quite reasonable especially spatial data stored appropriate manner 
prefer store data implicitly wide class spatial queries handled 
particular need know types queries priori 
able respond spatial queries exible manner places premium appropriate representation spatial data 
order able deal proximity queries data sorted 
course database management systems sort data 
issue keys sort 
case spatial data sort spatial keys means conventional database management systems sort space occupied data 
techniques known spatial indexing methods 
approach representation spatial data separate structurally nonspatial data maintaining appropriate links aref samet 
leads higher bandwidth retrieval spatial data 
case spatial operations performed directly spatial data structures 
provides freedom choose appropriate spatial structure imposed non spatial structure relational database 
case spatial processor speci cally designed ciently dealing part queries involve proximity relations search relational database management system part queries involve non spatial data 
proper functioning depends existence query optimizer determine appropriate processor part query aref samet 
example type query posed spatial database system consider request nd names roads pass university maryland region 
requires extraction region locations database records region name eld value university maryland build map map intersected road map yield new map selected roads 
create new relation having just attribute relevant road names roads map course approaches answering query 
ciency depends nature data volume 
rest review concentrate data structures spatial processor 
particular focus hierarchical data structures 
principle recursive decomposition similar divide conquer methods 
term quadtree describe elements class data structures 
concentrate primarily region point rectangle line data 
extensive treatment subject see samet samet 
presentation organized follows 
section describes number di erent methods indexing spatial data 
section focusses region data brie reviews historical background origins hierarchical spatial data structures asthe quadtree 
sections describe hierarchical representations point rectangle line data respectively aswell give examples utility 
section contains concluding remarks context geographic information system concepts 
spatial indexing record database management system conceptualized point space 
analogy researchers hinrichs nievergelt jagadish deal spatial data suitable transformations map spatial object henceforth just term object point termed representative point jagadish lower orenstein higher hinrichs nievergelt dimensional spaces 
analogy appropriate spatial data 
problem dimensionality representative point may high orenstein 
solution approximate spatial object reducing dimensionality representative point 
serious problem transformations preserve proximity 
see drawback just mapping spatial data points space consider representation database line segments 
term polygonal map refer line segment database consisting vertices edges regardless line segments connected 
database arise network roads power lines rail lines representative point jagadish line segment represented endpoints means line segment represented tuple items pair coordinate values pair coordinate values 
ect constructed mapping dimensional course mappings similar drawbacks 
shall example rest section 
space space lines drawn dimensional space space containing representative point corresponding line 
mapping ne storage purposes queries involve points comprise line segments including endpoints 
example nding line segments intersect point set points line segment 
queries involve points sets points part line segments transformed higher dimensional space mapping 
answering query involves performing search space lines drawn space mapped 
concrete example shortcoming mapping approach suppose lines near alternatively nd nearest line point line 
di cult dimensional space proximity dimensional space lines drawn necessarily preserved dimensional space lines mapped 
words lines may close euclidean distance representative points may quite large 
need di erent representations spatial data 
way problems data structures spatial occupancy 
spatial occupancy methods decompose space data drawn dimensional space containing lines regions called buckets 
commonly known bucketing methods 
traditionally bucketing methods grid le nievergelt bang le lsd trees buddy trees seeger kriegel applied transformed data representative points 
contrast applying bucketing methods space data drawn dimensions case collection line segments 
principal approaches decomposing space data drawn 
approach buckets data concept minimum bounding enclosing rectangle 
case objects grouped hopefully proximity hierarchies stored structure tree comer 
tree beckmann guttman example approach 
tree variants designed organize collection arbitrary spatial objects notably dimensional rectangles representing dimensional rectangles 
node tree corresponds smallest dimensional rectangle encloses son nodes 
leaf nodes contain pointers actual objects database sons 
objects represented smallest aligned rectangle containing 
nodes correspond disk pages parameters de ning tree chosen small number nodes visited spatial query 
note bounding rectangles corresponding di erent 
object may spatially contained nodes associated node 
means spatial query may require nodes visited ascertaining presence absence particular object 
basic rules formation tree similar tree 
leaf nodes appear level 
entry leaf node tuple form smallest rectangle spatially contains object non leaf node tuple form smallest rectangle spatially contains rectangles child node pointed tree order means node tree exception root contains dm entries 
root node entries leaf node 
example collection line segments grid 
example consider collection line segments shown embedded grid 
andm 
possible tree collection 
shows spatial extent bounding rectangles nodes broken lines denoting rectangles corresponding subtrees rooted non leaf nodes 
note tree unique 
structure depends heavily order individual line segments inserted possibly deleted tree 
ab gh ci ef tree collection line segments spatial extents bounding rectangles 
drawback methods result disjoint decomposition space 
problem object associated bounding rectangle line segment associated rectangle passes 
worst case means wish determine associated particular point containing rectangle rectangle database intersecting line line segment database dimensional space objects drawn mayhave search entire database 
example suppose wish determine identity line segment collection line segments passes point wemust search subtrees 
searching rst nd contained 
searching lead line segment contains portion bounding rectangle 
search ab nd contained 
searching results locating desired line segment 
approaches decomposition space disjoint cells mapped buckets 
common property objects decomposed disjoint subobjects subobjects associated di erent cell 
di er degree regularity imposed underlying decomposition rules way cells aggregated 
price paid disjointness order determine area covered particular object retrieve cells occupies 
price paid want delete object 
fortunately deletion common databases 
related drawback wish determine objects occur particular region retrieve objects 
particularly problematic result operation serves input operation composition functions 
example suppose wish compute perimeter objects region 
clearly perimeter computed 
eliminating duplicates serious issue see aref samet discussion deal problem database line segments 
rst method disjointness partitions objects arbitrary disjoint subobjects groups subobjects structure asa tree 
partition subsequent groupings bounding rectangles disjoint level structure 
tree sellis cell tree gunther examples approach 
di er data deal 
tree deals collections objects bounded rectangles cell tree deals convex polyhedra 
tree extension tree robinson 
tree motivated desire avoid overlap bounding rectangles 
object associated bounding rectangles intersects 
bounding rectangles tree exception bounding rectangles objects leaf nodes non overlapping result may paths starting root object 
may lead increase height tree 
retrieval time sped 
gh hi fi tree collection line segments spatial extents bounding rectangles 
example possible tree collection line segments theoretical viewpoint bounding rectangles objects leaf nodes disjoint 
may impossible objects line segments line segments intersect point 

particular tree order general possible guarantee nodes minimum entries 
particular expected tree performance guarantees valid pages guaranteed full willing perform complicated record insertion deletion procedures 
notice line segments di erent nodes line segment appears di erent nodes 
course variants possible tree unique 
methods tree cell tree tree beckmann drawback decomposition data dependent 
means di cult perform tasks require composition di erent operations data sets set theoretic operations 
contrast remaining methods yielding disjoint decomposition greater degree data independence 
regular decomposition 
space decomposed blocks uniform size uniform grid franklin adapt decomposition distribution data quadtree samet webber 
case blocks size grid 
case widths blocks restricted powers positions restricted 
uniform grid ideal uniformly distributed data quadtree approaches suited arbitrarily distributed data 
case uniformly distributed data quadtree approaches degenerate uniform grid albeit higher overhead 
uniform grid quadtree approaches lend set theoretic operations ideal tasks require composition di erent operations data sets 
general spatial data usually uniformly distributed quadtree regular decomposition approach exible 
drawback quadtree methods sensitivity positioning sense placement objects relative decomposition lines space embedded ects storage costs amount decomposition takes place 
overcome large extent bucketing adaptation decomposes block contains objects 
spatial occupancy methods discussed characterized employing spatial indexing block information stored block occupied object part object 
information usually form pointer descriptor object 
example case collection line segments uniform grid shaded block records fact line segment crosses passes 
part line segment passes block terminates termed edge 
edge block represented record containing endpoints line segment edge part nelson samet 
pointer really spatial index term characterize approach 
information associated shaded block part line edge crosses 
information obtained clipping foley original line segment block 
important precision necessary compute intersection points available 
region data region represented boundary 
section focus representations regions interior boundary discussed section context collections line segments example polygonal maps 
common region representation image array 
case collection picture elements termed pixels 
number elements array quite large interest reducing size aggregating similar homogeneous equal valued pixels 
basic approaches 
rst approach breaks array blocks 
row representation known code 
general approach treats region union maximal square blocks blocks desired shape may possibly overlap 
usually blocks speci ed centers radii 
representation called medial axis transformation mat blum 
maximal blocks required disjoint standard sizes squares sides powers standard locations result halving process directions result known region quadtree 
successive subdivision image array equal size quadrants 
array consist entirely entirely region cover entire array subdivided quadrants blocks obtained possibly blocks consist entirely entirely 
region quadtree characterized variable resolution data structure 
example region quadtree consider region shown represented binary array 
observe correspond pixels region correspond pixels outside region 
resulting blocks array shown 
process represented 
nw ne sw se sample region binary array representation maximal blocks blocks region shaded corresponding quadtree 
tree representation root node corresponds entire array 
son node represents quadrant ne sw se region represented node 
leaf nodes tree correspond blocks subdivision necessary 
leaf node said black white depending corresponding block inside entirely outside represented region 
non leaf nodes said gray 
quadtree representation shown 
course quadtrees represent non binary images 
case merging criteria applied color 
example case map simply merge wheat growing regions likewise corn rice samet 
term quadtree general senses describe class hierarchical data structures common property principle recursive decomposition space 
di erentiated bases 
type data represent 
principle guiding decomposition process 
resolution variable 
currently points rectangles regions curves surfaces volumes see remaining sections details adaptation quadtree 
decomposition may equal parts level termed regular decomposition may input 
resolution decomposition number times decomposition process applied may xed may governed properties input data 
unfortunately term quadtree taken meaning 
region quadtree shown partition space set squares sides long 
similar partition space rectangular quadrants termed point quadtree finkel bentley 
adaptation binary search dimensions easily extended arbitrary number dimensions 
primarily represent multidimensional point data rectangular regions need square 
quadtree confused pyramid tanimoto pavlidis 
pyramid multiresolution representation tapering stack arrays quarter size previous array 
contrast region quadtree variable resolution data structure 
distinction quadtree pyramid important domain spatial databases easily seen considering types spatial queries 
principal types aref samet 
rst location 
case searching nature feature associated particular location proximity 
example feature location nearest city location nearest road location 
second feature 
case probing presence absence feature seeking actual location 
example wheat grow california crops grow california wheat grown california 
location queries easy answer quadtree representation involve descending tree nding object 
nearest neighbor desired search continued neighborhood node containing object 
search achieved unwinding process access node containing object 
hand feature queries di cult 
problem indexing features 
indexing spatial occupancy 
goal process query examining location space 
pyramid useful queries nodes maximum level resolution bottom level contain summary information 
view nodes feature vectors indicate feature higher level resolution 
examining root pyramid node represents entire image quickly tell feature having examine location 
example consider block decomposition non binary image 
truncated pyramid 
values nonleaf node truncated pyramid indicate feature subtrees interest saving space pyramid shown entirety 
sample non binary image corresponding truncated pyramid 
quadtree data structures represent images dimensions higher 
octree hunter meagher data structure dimensional analog quadtree 
constructed manner 
start image form cubical volume recursively subdivide congruent disjoint cubes called blocks obtained uniform color predetermined level decomposition reached 
example simple dimensional object raster octree block decomposition tree representation 
example dimensional object octree block decomposition tree representation 
quadtree particularly useful performing set operations form basis complicated queries 
example nd names roads pass university maryland region need intersect region map line map 
binary image set theoretic operations union intersection quite simple implement hunter steiglitz 
particular intersection quadtrees yields black node corresponding regions quadtrees black 
operation performed simultaneously traversing quadtrees 
rst trees correspond trees intersected third tree represents result operation 
input nodes white result white 
corresponding nodes input trees gray sons recursively processed check white leaf nodes 
worst case execution time algorithm proportional sum number nodes input quadtrees possible intersection algorithm visit fewer nodes sum nodes input quadtrees 
performing set operations image represented region quadtree cient image represented boundary representation vectors global data 
particular cient solution sort boundaries region respect space occupy case region quadtree regions sorted 
motivations development hierarchical data structures asthe quadtree desire save space 
original formulation quadtree encodes tree structure uses pointers 
requires additional overhead encode internal nodes tree 
order reduce space requirements approaches proposed 
rst treats image collection leaf nodes leaf encoded pair numbers 
rst base number termed locational code corresponding sequence directional codes locate leaf path root quadtree 
analogous binary representation coordinates designated pixel block lower left corner interleaving alternating bits coordinate 
second number indicates depth leaf node alternatively size 
second termed df expression represents image form traversal nodes quadtree endo 
compact nodetype encoded bits 
easy random access nodes desired 
static collection nodes cient implementation pointer representation economical locational code representation samet webber 
especially true images higher dimension 
depending particular implementation quadtree may necessarily save space cases binary array representation may economical quadtree 
ects underlying hierarchical aggregation execution time algorithms important 
quadtree algorithms simply preorder traversals quadtree execution time generally linear function number nodes quadtree 
akey analysis execution time quadtree algorithms quadtree complexity theorem hunter states number nodes quadtree region representation image perimeter measured pixel widths 
pathological cases small square unit width centered large image factor negligible number nodes 
quadtree complexity theorem holds dimensional data meagher perimeter replaced surface area objects higher dimensions proportional size dimensional interfaces objects 
quadtree complexity theorem directly impacts analysis execution time algorithms 
particular algorithms execute quadtree representation image array representation execution time proportional number blocks image number pixels 
general case means application quadtree algorithm problem dimensional space executes time proportional analogous array algorithm dimensional space surface original dimensional image 
quadtrees act dimension reducing devices 
point data multidimensional point data 
representation ultimately chosen speci task uenced type operations performed data 
focus dynamic les amount data grow shrink applications involving search 
section brie mentioned point quadtree 
higher dimensions greater preferable tree bentley node degree partitions cycle di erent attributes 
di erent representations point data 
variants bucket methods discussed section 
include grid le described section 
details see samet 
section pr quadtree point region orenstein samet regular decomposition 
adaptation region quadtree point data associates data points need discrete quadrants 
pr quadtree organized way region quadtree 
di erence leaf nodes empty white contain data point black coordinate values 
quadrant contains data point 
example pr quadtree corresponding point data 
denver toronto buffalo denver chicago toronto buffalo atlanta mobile miami mobile chicago atlanta miami pr quadtree 
shape pr quadtree independent order data points inserted 
disadvantage pr quadtree maximum level decomposition depends minimum separation points 
particular points close decomposition deep 
overcome viewing blocks nodes buckets capacity decomposing block contains points 
course bucketing methods tree tree 
pr quadtrees quadtree representations point data especially attractive applications involve search 
atypical query requests determination records speci ed distance record cities miles washington dc 
ciency pr quadtree lies role pruning device amount search required 
records need examined 
example suppose hypothetical database wish nd cities units data point coordinates 
case need search nw ne quadrants root 
restrict search quadrant tree rooted root 
similarly need search nw ne quadrants tree rooted se quadrant 
note search ranges usually orthogonally de ned regions rectangles boxes shapes feasible example demonstrated circle 
rectangle data rectangle data type lies point region data types 
rectangles approximate objects image serve minimum rectilinear enclosing object 
example bounding rectangles cartographic applications approximate objects forests hills case approximation gives indication existence object 
course exact boundaries object stored accessed greater precision needed 
applications number elements collection usually small sizes rectangles order magnitude space drawn 
rectangles vlsi design rule checking model chip components analysis proper placement 
rectangles serve minimum enclosing objects 
application size collection quite large millions components sizes rectangles orders magnitude smaller space drawn 
representation depends heavily problem environment 
environment static frequently solutions plane sweep paradigm preparata shamos usually yields optimal solutions time space 
addition single object database forces re execution algorithm entire database 
primarily interested dynamic problem environments 
data structures chosen collection rectangles di erentiated way rectangle represented 
representation discussed section reduces rectangle point higher dimensional space treats problem collection points hinrichs nievergelt 
rectangle cartesian product dimensional intervals interval represented centroid extent 
particular dimension turn represented grid le nievergelt 
grid le level grid storing multidimensional points 
uses grid directory dimensional array grid blocks dimensional point data disk indicating address bucket page contains data associated grid block 
set linear scales pair dimensional arrays case dimensional data kept core 
linear scales access grid block grid directory disk associated particular point 
grid le guarantees access record disk operations level grid 
rst access grid block second access grid bucket 
linear scales necessary grid lines grid directory arbitrary positions 
contrast tamminen guarantees access record disk operations regular decomposition 
means linear scales necessary 
grid partition results doubling size grid directory 
second representation region sense subdivision space rectangles drawn depends physical extent rectangle just point 
representing collection rectangles turn tree data structure advantage relation depth node tree size rectangle associated 
interestingly regionbased solutions data structures solutions plane sweep paradigm 
types region solutions currently 
rst solutions adapt tree tree discussed section store rectangle data case objects rectangles line segments figures 
third quadtree approach uses mx cif quadtree kedem 
mx cif quadtree rectangle associated quadtree node corresponding smallest block contains entirety 
subdivision ceases node block contains rectangles 
alternatively subdivision cease quadtree block smaller predetermined threshold size 
threshold chosen equal expected size rectangle kedem 
example mx cif quadtree collection rectangles 
note rectangle occupies entire block associated block father 
rectangles associated terminal non terminal nodes 
collection rectangles block decomposition induced mx cif quadtree tree representation binary trees axes passing root tree ne son root tree 
clear rectangle associated enclosing block nd useful able di erentiate 
done manner kedem 
quadtree node centroid cx cy set rectangles associated members organized sets intersection collinearity sides lines passing centroid block members intersect line cx form set members intersect line cy form set 
rectangle intersects lines contains centroid block adopt convention stored set associated line cx 
subsets implemented binary trees really tries actuality dimensional analogs mx cif quadtree 
example illustrate binary trees associated axes passing root ne son root mx cif quadtree respectively 
interestingly cif quadtree dimensional analog interval tree edelsbrunner isa data structure support optimal solutions plane sweep paradigm rectangle problems 
line data section devoted region quadtree approach region representation description region interior 
section focus representation speci es boundaries regions 
simplest representation polygon consisting vectors usually speci ed form lists pairs coordinate values corresponding start points 
vectors usually ordered connectivity 
common representations chain code freeman approximation polygon boundary sequence unit vectors principal directions 
representations random point di cult nd nearest line lines sorted 
vector representation commercial systems arc info marble account compactness 
section concentrate bucketing methods 
number choices see hoel samet empirical comparison 
rst tree tree explained section 
third uses regular decomposition adaptively sort line segments buckets varying size 
correspondence buckets blocks dimensional space line segments drawn 
number approaches problem samet 
di er vertex edge 
implementations basic data structure 
built applying principle repeatedly breaking collection vertices edges making polygonal map groups blocks equal size termed brothers obtaining subset su ciently simple organized data structure 
achieved successively weakening de nition constitutes legal block enabling information stored bucket 
pm quadtree family samet webber vertex 
illustrate pm quadtree 
decomposition rule stipulating partitioning occurs long block contains line segment line segments incident vertex block 
similar representation devised dimensional images 
decomposition criteria node contains face edge vertex faces meet vertex adjacent edge 
representation quite useful space requirements polyhedral objects signi cantly smaller pm quadtree collection line segments 
conventional octree 
pmr quadtree nelson samet nelson samet edge variant ofthe pm quadtree see edge tamminen 
probabilistic splitting rule 
permitted contain variable number line segments 
pmr quadtree constructed inserting initially empty structure consisting block 
line segment inserted blocks intersects occupies entirety 
process occupancy ected block see insertion causes exceed predetermined splitting threshold 
splitting threshold exceeded block split blocks equal size 
rationale avoid splitting node times close lines block 
manner avoid bad cases 
details see nelson samet 
line segment deleted pmr quadtree removing blocks intersects occupies entirety 
process occupancy block siblings ones created predecessor split checked see deletion causes total number line segments splitting threshold 
splitting threshold exceeds occupancy block siblings merged merging process recursively reapplied resulting block siblings 
notice asymmetry splitting merging rules 
pmr quadtree collection line segments 
illustrate snapshots construction process nal pmr quadtree 
example pmr quadtree corresponding set edges labeled inserted increasing order 
observe shape pmr quadtree polygonal map unique depends order lines inserted 
contrast shape pm quadtree unique 
shows steps process building pmr quadtree 
structure assumes splitting threshold value 
part line segment caused subdivision denoted thick line gray regions indicate blocks subdivision taken place 
insertion line segments cause subdivisions parts respectively 
insertion line segment causes blocks subdivided se block quadrant se quadrant sw block quadrant 
nal result shown 
note di erence pm quadtree ne block quadrant decomposed pm quadtree se block quadrant decomposed pm quadtree 
pmr quadtree answering queries nding nearest line point hoel samet 
preferred pm quadtree results far fewer subdivisions 
particular pmr quadtree need subdivide order separate line segments close vertices close case pm quadtree 
important blocks created subdivision step 
subdivision steps occur empty blocks created storage requirements pmr quadtree considerably lower pm quadtree 
generally splitting threshold increased storage requirements pmr quadtree decrease time necessary perform operations increase 
advantage pmr quadtree pm quadtree virtue edge easily deal nonplanar graphs 
observe bucket pmr quadtree contain line segments splitting threshold problem 
fact shown samet maximum number line segments bucket bounded sum splitting threshold depth block number times original space decomposed yield block 
concluding remarks hierarchical data structures spatial databases enables focussing computational resources interesting subsets data 
need expend payo small 
operations performed equally ciently data structures hierarchical data structures attractive conceptual clarity ease implementation 
hierarchical data structures principle regular decomposition added bene spatial index 
features regions points rectangles lines volumes represented maps registration 
means query nding names roads pass university maryland region executed simply overlaying region road maps represent data di erent types 
overlay performs intersection operation common feature area spanned university maryland roads pass spatial join 
fact system known quilt built sha er representing geographic information quadtree variants described 
case quadtree implemented collection leaf nodes leaf node represented locational code spatial index 
collection turn represented tree 
leaf nodes corresponding region point line data 
disadvantage quadtree methods shift sensitive sense space requirements dependent position origin 
complicated images optimal positioning origin usually lead little improvement space requirements 
process obtaining optimal positioning computationally expensive usually worth ort li 
fact digitized space may lead problems 
example rotation operation generally invertible 
particular rotated square usually represented accurately collection rectilinear squares 
rotate rotation invertible 
problem arises uses digitized representation 
common array representation 
assistance erik hoel preparation gures greatly appreciated 
aref samet 
cient processing window queries pyramid data structure 
proceedings th acm sigact sigmod sigart symposium principles database systems pods nashville tn apr pp 

aref samet 
extending dbms spatial operations 
gunther schek eds advances spatial databases pp 

lecture notes computer science 
springer verlag berlin 
aref samet 
optimization strategies spatial query processing 
lohman ed proceedings seventeenth international conference onvery large databases vldb barcelona spain sept pp 

aref samet 
uniquely reporting spatial objects operation comparing spatial data structures 
proceedings fifth international symposium spatial data handling volume charleston sc aug pp 

brunet juan 
object representation means division quadtrees octrees 
acm transactions graphics jan 
beckmann kriegel schneider seeger 
tree cient robust access method points rectangles 
proceedings sigmod conference atlantic city nj june pp 

bentley 
multidimensional binary search trees associative searching 
communications acm sept 
blum 
transformation extracting new descriptors shape 
dunn ed models perception speech visual form pp 

mit press cambridge ma 
buchmann gunther smith wang eds 

design implementation large spatial databases 
lecture notes computer science 
springer verlag berlin 
comer 
ubiquitous tree 
acm computing surveys june 
edelsbrunner 
dynamic rectangle intersection searching 
institute information processing report institute information processing technical university graz graz austria feb 
finkel bentley 
quad trees data structure retrieval composite keys 
acta informatica 
foley van dam feiner hughes 
computer graphics principles practice 
addison wesley reading ma second edition 
franklin 
adaptive grids geometric operations 
summer autumn 
freeman 
computer processing line drawing images 
acm computing surveys mar 

bang le new kind grid le 
proceedings sigmod conference sanfrancisco may pp 


ective way represent quadtrees 
communications acm dec 
gunther 
cient structures geometric data management 
phd thesis electronics research laboratory college engineering university california berkeley berkeley ca 
lecture notes computer science springer verlag berlin 
gunther schek eds 

advances spatial databases 
lecture notes computer science 
springer verlag berlin 
guttman 
trees dynamic index structure spatial searching 
proceedings sigmod conference boston june pp 

widmayer 
lsd tree spatial access multidimensional point non point data 
apers wiederhold eds proceedings fifteenth international conference onvery large databases vldb amsterdam aug pp 

hinrichs nievergelt 
grid le data structure designed support proximity queries spatial objects 
nagl perl eds proceedings wg international workshop graphtheoretic concepts computer science verlag linz austria pp 

hoel samet 
cient processing spatial queries line segment databases 
gunther schek eds advances spatial databases pp 

lecture notes computer science 
springer verlag berlin 
hoel samet 
qualitative comparison study data structures large line segment databases 
proceedings sigmod conference san diego june pp 

hunter 
cient computation data structures graphics 
phd thesis department electrical engineering computer science princeton university princeton nj 
hunter steiglitz 
operations images quad trees 
ieee transactions pattern analysis machine intelligence apr 
jagadish 
indexing line segments 
mcleod sacks davis schek eds proceedings sixteenth international conference onvery large databases vldb brisbane australia aug pp 

endo 
method binary picture representation application data compression 
ieee transactions pattern analysis machine intelligence jan 
kedem 
quad cif tree data structure hierarchical line algorithms 
proceedings nineteenth design automation conference june pp 


patterns search statistics 
ed optimizing methods statistics pp 

academic press new york 
li jain 
normalized quadtrees respect translations 
computer graphics image processing sept 
meagher 
octree encoding new technique representation manipulation display arbitrary objects computer 
technical report ipl tr electrical systems engineering technical report rensselaer polytechnic institute troy ny oct 
meagher 
geometric modeling octree encoding 
computer graphics image processing june 
nelson samet 
consistent hierarchical representation vector data 
computer graphics aug 
proceedings siggraph conference dallas august 
nelson samet 
population analysis hierarchical data structures 
proceedings sigmod conference may pp 

nievergelt hinterberger sevcik 
grid le adaptable symmetric multikey le structure 
acm transactions database systems mar 
orenstein 
multidimensional tries associative searching 
information processing letters june 
orenstein 
redundancy spatial databases 
proceedings sigmod conference portland june pp 

orenstein 
class data structures associative searching 
proceedings third acm sigact sigmod symposium principles database systems waterloo canada apr pp 

marble 
arc info example contemporary geographic information system 
marble eds introductory readings geographic information systems pp 

taylor francis london 
preparata shamos 
computational geometry 
springer verlag new york 
robinson 
tree search structure large multidimensional dynamic indexes 
proceedings sigmod conference ann arbor mi apr pp 


data structures operations digital images 
ed pictorial pattern recognition pp 

thompson book washington dc 
samet 
applications spatial data structures computer graphics image processing gis 
addison wesley reading ma 
samet 
design analysis spatial data structures 
addison wesley reading ma 
samet rosenfeld shaffer webber 
geographic information system quadtrees 
pattern recognition november december 
samet webber 
storing collection polygons quadtrees 
acm transactions graphics july 
proceedings computer vision pattern recognition washington dc june university maryland computer science tr 
samet webber 
comparison space requirements multi dimensional quadtree le structures 
visual computer dec 
university maryland computer science tr 
seeger kriegel 
buddy tree cient robust access method spatial data base systems 
mcleod sacks davis schek eds proceedings sixteenth international conference onvery large databases vldb brisbane australia aug pp 

sellis roussopoulos faloutsos 
tree dynamic index multi dimensional objects 
kent eds proceedings thirteenth international conference onvery large databases vldb brighton england sept pp 

shaffer samet nelson 
quilt geographic information system quadtrees 
international journal geographical information systems april june 
tamminen 
method cient geometric access data 
acta mathematics computer science series helsinki finland 
tanimoto pavlidis 
hierarchical data structure picture processing 
computer graphics image processing june 

