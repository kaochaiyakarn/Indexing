drawing graphs nicely annealing ron davidson david harel weizmann institute science simulated paradigm simulated annealing applied problem drawing graphs nicely 
algorithm deals general undirected graphs straight line edges employs simple criteria aesthetic quality result 
algorithm flexible relative weights criteria changed 
graphs modest size produces results competitive produced methods notably spring method variants 
categories subject descriptors software miscellaneous data neous theory computation miscellaneous general terms algorithms theory additional key words phrases aesthetics graph drawing simulated annealing 
graphs central topic computer science point imagine subjects databases data structures automata theory software engineering 
traditionally graphs drawn manually trying keep picture simple meaningful possible 
especially important drawing intended emphasize internal structure symmetry 
drawing large graphs nicely placing nodes edges form clear pleasing picture easy task 
fact cases attaining optimal solution computationally infeasible see garey johnson 
problem calls automatic support addition simplifying drawing process attempt produce better results heuristic probabilistic means 
years problem addressed 
harel research partially supported israeli ministry science technology foundation basic research fund authors address dept applied mathematics computer science weizmann institute science rehovot israel 
permission digital hard copy part personal classroom granted fee provided copies distributed profit commercial advantage copyright notice title publication date appear notice copying permission acm copy republish post servers redistribute lists requires prior specific permission fee 
acm acm transactions graphics vol 
october pages 
davidson harel large variety graphs difficulty general problem caused researchers limit various special cases trees 
dags planar graphs concentrate special appearances layout hierarchical lattice structures rectilinear grid drawings 
interesting results obtained cases 
attempts solve problem general graphs complicated objects hypergraphs higraphs 
excellent survey literature area 
article address general problem drawing nice looking undirected straight line graphs 
proposed solution problem requires setting general criteria quality picture 
defining criteria apply different types graphs time combined meaningful cost function subjected general optimization methods main objectives 
introduce flexibility user may change relative weights criteria obtain varying solutions reflect preferences 
approach incorporates simple criteria algorithms distributing nodes evenly making edge lengths uniform minimizing edge crossings keeping nodes coming close edges 
mentioned main issues deal combining cost function subjected general optimization method 
chosen base algorithm simulated sa optimization method originating statistical mechanics kirkpatrick metropolis 
sa approach reviewed section adopted years help solve kinds combinatorial optimization problems including vlsi layout 
algorithm described section section contains examples graphs drawn implementation thereof 
program show graph displaying current version certain intermediate stages 
pleasant consequence providing animated illustration simulated annealing scheme action 
feel gives way sa operates difficult get kinds applications offer visually appealing feedback 
appealing ways demonstrating power algorithm test ability match human idea nice 
done asking draw arbitrary graph thinks nice discussing criteria running algorithm randomly layed version 
gathered statistics repeatedly pleased results 
vast majority experiments program run default settings weights various criteria drew version close drawn initially person 
true graphs quite modest size nodes edges 
larger graphs quality output deteriorates rapidly 
simulated annealing acm transactions graphics vol 
october 
drawing graphs nicely known time consuming procedure carries 
time performance implementation quite poor fact shall say section 
section review related addresses problem generality notably spring method eades fruchterman reingold kamada kamada kawai point similarities approach 
section discusses research includes brief description subsequent reported harel 
important originally written 
simulated annealing fine tune rough solution elaborate techniques designed try lay graph manner close possible planar 

quick look simulated annealing simulated annealing sa flexible optimization method suited large scale combinatorial optimization problems 
see hajek johnson van laarhoven aarts surveys method 
simulated annealing originated statistical mechanics metropolis formulated general terms kirkpatrick 
applied successfully classical combinatorial optimization problems traveling salesman problem problems concerning design layout vlsi 
sa differs standard iterative improvement methods allowing uphill moves moves spoil improve temporary solution 
problems sa useful characterized large discrete configuration space large exhaustive search objective cost function minimized maximized 
picking initial configuration iterative methods continue choosing new configuration step evaluating possibly replacing previous 
action repeated termination condition satisfied move reduces objective function 
procedure ends minimum configuration generally local minimum desired global minimum 
sa method tries escape local minima rules derived analogy process liquids cooled crystalline form process called annealing 
known liquid cooled slowly reaches totally ordered form called crystal represents minimum energy state system 
contrast rapid cooling results amorphous structures higher energy representing local minima 
difference lies fact liquid cooled slowly atoms time reach thermal equilibrium temperature 
state system obeys boltzmann distribution kt 
acm transactions graphics vol 
october 
davidson harel specifies probability distribution energy values states function temperature boltzmann constant hand temperature energy nonzero probability system change state higher energy 
hand low temperatures system tends states low energy global minimum achieved temper zero 
sequel shall assume tures artificial anyway 
metropolis devised algorithm simulating annealing procedure series sequential moves 
basic rule probability system changes state energy energy kt 
rule implies energy new candidate state smaller current energy system take move larger state change probabilistic 
kirkpatrick apparently realize procedure general optimization problems 
entities determined sa method applied 
include set configurations states system including initial configuration chosen random 
generation rule new configurations usually obtained defining neighborhood configuration choosing configuration randomly neighborhood current 
target cost function minimized configuration space 
analogue energy 
cooling schedule control parameter including initial values rules change 
analogue temperature decrease 
termination condition usually time values cost function control parameter 
having defined schematic form sa method follows choose initial configuration initial temperature repeat usually fixed number times choose new configuration neighborhood values cost function respectively ife set decrease temperature termination rule satisfied go back step 
acm transactions graphics vol 
october 
drawing graphs nicely clause random stands real number selected randomly 
variations general scheme appeared literature 
motivated theoretical investigations analogy physical phenomenon derived implementation experi ence 
described van laarhoven aarts contains abundance 
sa suitable optimization problem 
basic requirement cost function overly steep width valleys minima points roughly proportional depth 
narrow valley contains desired minimum point low probability 
amenable solution sa problem admit near optimal solutions acceptable 
sa successful finding minima values close global minimum seldom detect global minimum 
important requirement cost function easily calculated new configuration possibly value old 
due fact calculations carried repeatedly constitute major computa tional task implementing sa 
sa method applied successfully problems 
application kirkpatrick traveling salesman prob lem 
problems design testing vlsi including placement problem channel routing folding plas problems image processing coding theory floor planning graph number partitioning graph coloring 

graph drawing algorithm undirected graph simply pair set nodes set edges symmetric subset transforming description graph visual representation leaves issues resolved shapes sizes elements significantly locations 
quite easy draw small graphs manually acceptable way manual drawing large graphs painful task resulting picture unacceptably deformed 
similarly difficult task modify drawing graph adding deleting elements 
carrying manual modification tedious graph necessary reposition nodes edges 
task far difficult considering intricate types graphical objects hypergraphs berge higraphs harel applications system design database theory knowledge repre sentation 
basic obstacle overcome preparation algorithmic solution definition criteria drawing 
criteria come mind considered acm transactions graphics vol 
october 
davidson harel papers written subject see battista including evenly distributed nodes edges close uniform lengths minimal number crossings symmetry possible conformation shape frame say computer screen 
clearly mutually conflicting applied care 
fact section shall see conflicts desire achieve symmetry minimize crossings 
aesthetics subjective issue helpful able provide sufficiently flexible set rules controlling quality drawing parameterized tuned meet personal taste 
input algorithm adjacency list matrix defining edges general graph 
output projected rectangular grid represents monitor resolution 
restricting convention representing edges straight lines output algorithm reduces list locations nodes grid 
discussed previous section annealing scheme requires definition analogues components physical annealing process 
discuss algorithm deals turn 
configurations 
configuration simply candidate drawing assignment unique grid point nodes 
priori information graph visual representation initial configuration chosen random selecting arbitrary grid locations nodes 
implementation allows user draw initial configuration program perform random scattering configuration 
neighborhoods 
spirit physical annealing process neighboring configurations similar sense represent slight perturbation system state 
consequently defined neighborhood configuration contain configurations differ location single node 
generation rule new configurations amounts moving node new location 
furthermore bounded distance consecutive locations node limiting move circle decreasing radius node original location 
radius taken large process constraining choice gets smaller algorithm proceeds 
range limiting sorts better configuration smaller allowed perturbation 
differ applications sa fixed constant rule creating new configurations 
see similar approach 
decision believe accelerates convergence algorithm general affect quality results 
take idea restricting new location lie perimeter circle 
eliminates small perturbations process radius large 
acm transactions graphics vol 
october 
drawing graphs nicely cost function 
important step applying simulated annealing scheme definition energy cost function case captures mean nice looking drawing 
desired features final graphs translated contribution function accordance relative importance 
computational point view great care taken defining energy function repeated calculation heaviest computational task algorithm 
criteria contributions energy function 
point possible generalizations 
node distribution obvious criterion drawing nice graph spread nodes evenly drawing space 
distances nodes need perfectly uniform graph occupy reasonable part drawing space possible nodes 
objectives achieved components energy function 
prevents nodes getting close second deals drawing space 
component sum pairs nodes function inverse proportional distance nodes 
tested functions best results stem applying function analogous electric potential energy pair nodes term 
added energy function euclidean distance andj 
normalizing factor defines relative importance criterion compared 
increasing re tive normalizing factors describe sequel causes algorithm prefer pictures smaller distances nodes 
notice analogue electric charge nodes 
multiplied reflects tion nodes node way terms av nodes large larger algorithm tend shorten corresponding distances 
imagine applications particular nodes spread case electric charge analogue may useful 
implemented option example effect appears section 
physics truly minimizing potential energy result spreading elements indefinitely 
avoid reflect physical limitations output device component added energy function deal drawing space 
examined models 
add dummy nodes spread evenly forbidden move acm transactions graphics 
vol 

october 
davidson harel process see tutte 
rejected idea turns number additional nodes required depends number nodes input graph adding ess required number results real nodes escaping borderline points placed 
hve decided base energy function distance node account sum distances distance closest 
added term energy function mi li ti stand distances node right left top bottom sides respectively 
way nodes prevented getting close stay center drawing space term energy function 
clearly increasing relative pushes nodes center decreasing results drawing space near 
appropriate charge qi associated node multiplicative factor mi 
differentiate nodes respect importance placing near center picture 
nodes large charge placed closer center 
feature imple mented 
edge lengths far discussed nodes 
far edges go naive criterion try shorten necessary minimum causing entire graph tightly packed 
accordingly component energy definition intended penalize long edges 
experimented number functions 
potential function distance nodes multiply ing aforementioned ao additional coefficient eij reflects presence absence edge nodes andj 
direct way add cost length edge square 
possibility appropriate 
edge length dk add term ck energy function appropriate normalizing factor 
similar energy function tutte 
special weight ek associated edge added multiplicative factor 
enable influence algorithm making kth edge longer shorter average edge valuable applications 
acm transactions graphics vol 
october 
drawing graphs nicely simple criteria described far produce fairly nice pictures different graphs 
short edges criterion turned take care positioning nodes unnecessary edge crossings eliminated 
graphs require direct treatment edge crossings 
edge crossings general minimizing number crossings important goal difficult achieve 
obvious special case try eliminate crossings graph planar 
algorithms producing crossing free picture planar graph exist beneficial try minimize crossings retaining drawing 
way reach minimal number crossings crossings remain planar graphs generally producing pleasing picture 
incorporated edge crossings algorithm simply adding cost function constant penalty edges cross 
particular fixed value default perform practice 
course increasing means attributing importance elimination edge crossings results pictures fewer crossings average 
may expense aesthetics 
clearly implement penalty vary say multiplying ff fk weight attributed edge representing importance attach edge intersecting edges 
adjusting constants discussed leads interesting variations algorithm behavior examples section show 
node edge distances previous item discussed penalizes edges cross penalize ones close quite cross 
cases situation taken care implicitly node separation component energy function cover cases 
chosen generalize edge crossing notion considering crossing edges extreme case close edges distance zero 
extending edge crossing notion way advantage 
best energy function applications sa continuous changing smoothly change configurations see van laarhoven aarts 
edge crossing component energy function enjoy property slight change node location change energy 
generalization suggested eliminates problem 
generalize measuring distance node edge just pairs edges 
way calculations simpler cover cases pairs edges 
accordingly define distance node edge minimal distance node point edge 
contribution distance cost function inverse proportional acm transactions graphic vol 
october 
davidson harel square node edge distance gk value gk added cost function 
minimum distance defined distances contribute energy function edge crossing occurs 
edge crossings generalized component introducing node specific edge specific weights qk multiplicative fact rs 
explained criterion default settings main algorithm fine tuning parts 
cooling schedule 
cooling schedule delicate parts annealing algorithm 
applications follow basic geo metric schedule described van laarhoven aarts done 
describe details schedule 
initial temperature initial configuration system chosen random set initial temperature high accept move 
goal shake graph virtually letting configuration possible starting point algorithm 
exact value control parameter representing temperature determined empirically conform rule 
cases initial configuration known resemblance desired final result neighborhood minimal point lower temperature chosen retain partial result 
temperature reduction general sa scheme dictates series moves attempted temperature trials successful configuration possibly changing 
decide change temperature change 
typical applica tions set number trials temperature polynomial length input 
linear number times number nodes sufficient 
particularly difficult examples running algorithm larger number trials temperature yielded marginal improvement 
correct simulation physical process prescribe allowing potentially unlimited number moves temperature assumptions mathematical analysis sa 
linear approximation infinite process yields acceptable results 
acm transactions graphics vol 
october 
drawing graphs nicely studying behavior algorithm changes temperature take place moves equilibrium temperature approached changes rare 
suggests method accelerating execution algorithm implemented adhering number moves fixed advance size graph keep record success rate attempts change configura tions rate low decrease temperature 
upper limit number attempts temperature kept 
cooling rule geometric 
follow researchers apply rule 
tp temperature pth stage temperature stage 
examples achieve relatively rapid cooling 
cooling rapidly results inability escape local minima resulting drawings turn far optimal 
slow cooling improve results expense increasing running time 
termination condition 
set number stages different temperature values constant fixed advance independent size input graph 
running algorithm stages yields better acceptable results 
highly complex examples benefit stages increasing chances escaping local minima 
generally case change occurred stages occur run 
instructed implementation situation arises done 
fine tuning 
algorithm described far finds way valley contains globally lowest points terms energy 
result usually reflects structural aspects graph reasonably 
example nodes connected components quit 
rapidly gather area 
reach truly minimal point valley fashion node moving rule coarse 
course solve problem running algorithm radius circle determines node move single pixel 
terribly time consuming unnecessary 
needed addition annealing scheme described far fine tuning procedure small changes just pixels allowed time uphill moves completely forbid den 
implemented procedure stage repetition carried steps main part algorithm 
numbers changed user 
acm transactions graphics vol 
october 
davidson harel fine tuning iterations energy function enriched adding component deals distances nodes edges 
human eye improvement obtained fine tuning quite striking nodes suddenly jump best positions result stages 
complexity performance 
stand respectively find algorithm runs time 
number iterations external loop bounded constant performing attempts change configuration 
components energy function updated attempt recalculated scratch show take total time 
keep mind new ns generated moving single node 
updating component concerning distances nodes linear distances moved node require recalculation 
goes updating edge lengths nodes adjacent moved 
updating distance moved node border lines takes constant time 
heaviest calculations incurred updating components edge crossings distances nodes edges 
take worst case number pairs edges adjacent node 
algorithm uses max amount memory 
algorithm implemented runs sun sparcstation convex machine 
program lines long half takes care user interface graphics 
convex examples nodes complete annealing iterations seconds 
small graphs nodes terminate seconds largest example fig 
nodes arid edges ran minutes 
times apply run default settings annealing iterations trials iteration 
input graphs parameters set lower running time reduced accordingly 
running time fine tuning iteration higher annealing iteration decision consider distances nodes edges fine tuning phase considered annealing phases default 
choice fine tuning iterations phase adds aforementioned running times 
examples need additional time seconds fine tuning convex 
sparcstation slower approximately 
average sized graph nodes runs seconds annealing stage 
implementation completed late revised number times 
version late 
acm transactions graphics vol 
october drawing graphs nicely emphasize points 
sophisticated cooling schedule incorporated reduce running time algorithm 
simple stopping rules save considerable amount time 
decided terminate stage series unsuccessful attempts move nodes estimate average time stage decrease 
furthermore termination condition entire algorithm reaching stage significant improvement energy function believe running time reduced additional average 
observations supported published material subject indicate effects savings quality final results minor 
second code written test feasibility applying annealing graph drawing problem serve practical efficient implementation 
accordingly particular attention paid ing code 
particular vectorized convex strongest capabilities machine 
confident rewriting parts code translating small portions machine language reduce running time significantly 
necessary changes involve adapting code deals crossings edges distances nodes edges integer arithmetic 
third importantly simulated annealing known relatively time consuming method solving combinatorial optimization problems implementation consistent 
current state program integrated interactive system utility drawing graphs 
portion powerful approach harel discussed section 
program may line produce graphs systems 
ongoing fast growing research implementation acceleration sa scheme widen applicability tool different types computer systems 
see van laarhoven aarts studies parallel implementations 

examples section contains series examples demonstrate various features algorithm 
structure section follows give typical example detailed shows intermediate results 
illustrate various criteria ics series simple graphs 
demonstrate flexibility approach show drawings graph produced different parameters 
run algorithm graphs relevant publications especially discussed detail section 
general results compare favorably 
acm transactions graphics vol 
october 
davidson harel typical input graph output produced algorithm 
implementation accept graphical version input graph drawn user textual adjacency matrix 
case algorithm picks random locations nodes 
specified output graphs appearing article generated default settings parameters aesthetics discussed earlier 
examples demonstrate effects caused changing defaults 
worth noting output planar algorithm priori knowledge planarity look explicitly crossing free version 
contribution edge crossings component energy function significant default values yield crossing free versions planar graphs size 
bearing mind algorithm understand symmetry highly symmetric form taken evidence relevance simple heuristics problem recognizing symmetry 
running algorithm fruchterman reingold graph results nonplanar layout see fruchterman reingold 
example planar graph 
shows input graph random locations nodes 
final output intermediate steps 
lengthy edges appear input graph eliminated iteration appear edge length component energy function takes care 
edge crossings eliminated rounded shape graph discernible 
edge crossings acm transactions graphics vol 

october 
drawing graphs nicely 

represents annealing part algorithm nodes close edges 
taken care fine tuning procedure applied yielding intermediate result final result entire algorithm 
demonstrate isolated effect criteria ics drive uniform node distribution uniform edge lengths 
shows effect node distribution component graph disconnected nodes 
shows typical random distribution acm transactions graphics vol 
october 
davidson harel nodes result algorithm 
simulated annealing driven random relocation nodes results pleasing distribution 
example edges spread drawing space isolates part cost function prefers edges uniform length 
shows disconnected edges randomly drawn shows result applying algorithm 
drawing space uniformly edges essentially length 
shows result applying algorithm graph contains closed cycle nodes 
drawing crossing free occupies drawing space reasons symmetric result circle algorithm nodes close neighbors nodes far away 
prefers graph nodes generally closer uniform way 
similar graph nodes 
algorithm find crossing free solution application simulated annealing trying move single nodes algorithm doesn find way remove crossing single node relocations 
allowed relocation higher cost probably achieve better drawings cases 
explained earlier implementation flexible tuned produce different results varying weights various aesthetics 
examples illustrating 
shows different drawings regular cube 
figures resemble projections dimensional box different angles 
drawings obtained default settings acm transactions graphics vol 
october 
drawing graphs nicely shows different runs produce somewhat different results consequence random nature annealing approach 
note figures crossings regular edge lengths average distance node edge larger 
contrast crossing free versions figures obtained doubling weight edge crossing component 
weight component measures distances nodes edges lowered 
results acm transactions graphics vol 
october 
davidson harel lengthening edges inner square connect inner outer squares shortening distances nodes edges 
interesting note drawing algorithms seen results graph eades fruchterman reingold kamada kawai draw conventional 
depiction 
flexibility choosing parameters algorithm allows produce different drawings reasonable assume flexibility introduced algorithms eades fruchterman reingold kamada kawai 
examples seen far planar graphs crossing free drawing usually pleasing acceptable 
contains known nonplanar graph kss 
depicts standard way drawing able reproduce algorithm 
produced algorithm running default values generated disregarding crossings component 
symmetric fig ure turns worse terms criteria 
eades fruchterman reingold produce different drawings graph different initial configurations similar 
example concerns regular nal faces drawn different interesting ways 
symmetric crossing free picture graph far know generated algorithms aware 
algorithm produces drawing minor distortion shown 
obtained additional interesting drawings graph figures 
obtained default parameters increasing weight uniform edge lengths 
reminiscent dimensional soccer ball 
fruchterman reingold produces layouts similar figures drawn kamada kawai 
produce similar picture acm transactions graphics vol 
october 
drawing graphs nicely crossings drawing inner node circles inside 
shows result applying algorithm lipton dodecahedron 
may viewed example case seeking mainly symmetry yield appealing results 
compare figures 
similar phenomenon demonstrated 
algorithm fails reproduce symmetric crossing free drawing shown 
reason probably rooted variance edge lengths required 
crossing free version far elegant appears 
graph additional runs algorithm yielded figures nonplanar appealing projections dimensional forms 
basic version algorithm distinguish different nodes examples far nodes edges treated equally 
implemented somewhat crude way preferring certain parts graph 
mark nodes graph causing edge length component edges incident marked nodes doubled 
edges shorter typical edges graph 
edge incident marked nodes shorter 
shows example feature 
regular grid generated algorithm markings contrast result marking innermost nodes corners middle square 
example demonstrates main differences algorithm assume knowledge topology input graph algorithms tailored deal specific classes graphs 
virtually tree drawing algorithms discussed earlier draw complete binary tree root top internal nodes arranged uniformly increasingly lower horizontal lines 
algorithm treats trees preference aligning edges knowledge symmetry 
produces complete level binary tree 
simpler trees come looking little symmetric 
trees come looking similar algorithms bernard manning ata lah 
general type specific acm transactions graphics vol 
october 
davidson harel algorithm perform better general purpose algorithm target type graphs 
series examples consider larger graphs 
shows drawing graph containing nodes edges 
graph acm transactions graphics vol 
october 
drawing graphs nicely nonplanar dealt algorithm requires seconds convex time 
large graphs looser nature 
graph example complete tree depth 
contains nodes edges running time produce nearly minutes 
drawing contains crossings topology tree difficult see 

comparison section comment briefly connections ap proach previous problem drawing general undirected straight line graphs 
reader referred excellent annotated bibliography aspects graph drawing 
acm transactions graphics vol 
october davidson harel eades 
popular method laying undirected graphs called spring method proposed eades 
method graph mechanical collection rings nodes connecting springs edges 
connected rings attracted distance proper sa different approach appears lipton involves finding symmetries input graph 
terms underlying ideas incomparable method discussion shall discuss 
acm transactions graphics vol 
october 
drawing graphs nicely ties connecting spring 
state minimal energy springs corresponds nice drawing underlying graph 
criteria aesthetics considered eades desire uniform edge lengths trying display symmetry possible 
acm transactions graphics vol 
october 
ur ll calculations eades carried attraction force log applied nodes connected spring repelling force ka applied disconnected nodes 
constants current distance nodes connected nodes length spring 
initial configuration graph chosen eades random 
iteration forces calculated node nodes moved accordingly 
graphs achieve minimal energy iterations 
algorithm eades reported run quite fast vax graphs nodes 
kamada kawai kamada kamada kawai 
algorithm kamada kamada kawai represents slightly different approach spring method 
pair nodes andj distance algorithm calculates energy kij lj length shortest path graph multiplied constant represents size drawing area 
spring constant defined ko help normalize deviations desired length energy function 
energy entire graph taken sum energy pairs quantity minimized 
finding global minimum difficult local minimum sought repeatedly moving node provides maximal decrease total energy 
iterations maximal improvement fixed algorithm tries exchange pair nodes restarting search local minimum exchange yields decrease energy 
time complexity algorithm kamada kamada kawai expressed function size graph depends initial configuration graph 
examples kamada kamada kawai contain nodes ran seconds vax 
kamada kamada kawai suggest way dealing weighted graphs ones numeric weights edges redefining sum weights shortest path andj 
note tha algorithm usually draws isomorphic acm transactions graphics vol 
october 
graphs roughly way obvious rotations tions means essentially yields heuristic solving graph isomorphism problem 
reingold fruchterman reingold 
spring method fruchterman reingold constitutes enhancement adaptation eades 
eades attraction forces calculated neighboring nodes repelling forces calculated pairs nodes 
attraction force nodes distance repelling force fa optimal distance nodes graph calculated number nodes size drawing area 
process fruchterman reingold carried iteratively 
iteration forces calculated node nodes moved simultaneously 
decisions taken sa approach range allowed movement nodes fruchterman reingold decrease algorithm proceeds 
rate decrease high early stages constant small fine tuning stages 
algorithm fruchterman reingold uses iterations examples drawn seconds sparcstation 
discussion 
approach article similar spring method 
essentially physical systems simple attraction repelling criteria iteratively try find layout content way cost energy minimized algorithm akin kamada kamada kawai eades fruchterman reingold 
kamada kamada kawai energy minimized stages node node sa deterministic way 
attempt escape local minimum carried exchanging locations nodes 
nice property algorithm kamada kamada kawai need expression energy function difference actual distance nodes shortest distance graph 
fruchterman reingold carried independently 
final version written set authors reviewing early versions 
acm transactions graphics vol 
october 
davidson harel terms iterative nature solution algorithm closest fruchterman reingold discussed 
algorithm fruchterman reingold variable controlling iterations temperature continuously limits allowed node movement function temperature set final iterations constant temperature fine tuning special provisions account drawing area 
fruchterman reingold differ kamada kamada kawai approach nodes moved making possible reach configurations necessarily vicinity current local minimum 
interesting note contrast generality cost function approach rigidity optimization method adopted 
simulated annealing integral part method better worse 
hand flexibility construction cost function criteria aesthetics probably added trouble relative weights criteria varied making possible control final appearance graph 
carried detailed evaluation importance various criteria cases suffice evident papers discussed 
exposition mainly test case examples point making absolute judgements comparing approach 
results show sa method competitive terms quality resulting layouts mentioned earlier inherits unattractive running time general framework simulated 
confident serious attempt optimization result better time performance 
large graphs say nodes method perform 
suspect common methods address problem laying general graphs aesthetically significant improvement possible radically different approach incorporating parallel processing 

continuation sa fine tuning 
continuation reported completed ambitious project reported harel graph subjected simulated annealing complex series preprocessing stages 
test planarity method pq trees 
graph planar system finds planar embedding proceeds draw specially tailored drawing algorithm 
fine tunes solution sa algorithm 
graph planar version pq tree algorithm employed try find maximal planar subgraph eliminating acm transactions graphics vol 
october 
drawing graphs nicely edges possible 
embedding planar subgraph planar case reinsert eliminated edges trying minimize number crossings arise 
crossing point dummy node inserted yielding planar graph 
graph drawn algorithm harel fine tuned sa algorithm 
dummy nodes removed edges straightened 
approach achieves significant improvements bare sa algorithm quality resulting layouts size graphs handled time performance 
improvements readily observed planar close planar graphs 
feel 
continuation beneficially exploits research described earlier article simulated annealing graph drawing probably better employed tandem system front contains specific heavy duty tools finding reasonable cut solution 
nonrandom initialization partial changes 
case priori knowledge way graph drawn 
graph may sketched subgraphs may required drawn separate areas 
general prior information start algorithm configuration random 
initial configuration algorithm nonrandom closer final desired result initial temperature set low prevent total randomization 
starting overly high temperature cause initial configuration lost 
slight modification allow part drawing changed 
option useful adding deleting nodes graph 
graph drawn satisfaction need redraw entirety 
case restrict changes marking nodes allowed change place option implemented experimented limiting area changes allowed 
modified version algorithm chooses new possible configurations restrictions run 
option useful correcting imperfect pictures area redrawn marked algorithm rerun high initial temperature restricted area interest 
implemented crude version idea experience shows improves unsatisfactory drawings produced standard run algorithm 
modifying neighborhoods 
definition neighborhoods allows node repositioned time find definition satisfactory relatively small graphs 
examples algorithm stuck bad configuration repositioning general framework approach proposed batini tamassia algorithms details different 
acm transactions graphics vol 
october 
davidson harel single node appears improve 
loop example 
cases moving edge node deliver algorithm local minimum 
uphill moves annealing algorithm po tool escaping minima assure quicker better convergence edges incident allowed repositioned 
believe extension reduce number steps complicate calculations update energy function 
idea may extended allowing arbitrary pairs nodes repositioned allowing connected components change positions 
order retain current shape layout moved component maintained rotation mirror image 
implemented suggestions result unacceptable growth size neighborhoods cost running time worth potential improvement results 
parallelism multilevel methods 
interesting direction try parallel processing expedite sa process coupled multilevel approach entire problem 
results running annealing algorithm parts graph carefully chosen multilevel criteria combined process carried higher level abstraction 
additional criteria aesthetics 
computational price algorithm significantly lower imaginative aesthetics ones adopted considered 
symmetry emerges important attribute picture emphasizing inner structure graph 
natural requirement draw similar subgraphs similar way 
measuring symmetry picture requires quantitative definition efficient methods developed done annealing iterations 
remember obviously relevant problem telling graphs subgraphs isomorphic known solvable polynomial time 
criterion deal relative positions edges 
limited measuring distances nodes edges 
say deeper relationship neighboring edges doubt result nicer 
measure angles adjacent edges able decide example prefer chain edges drawn straight line half 
angles considered influence orientation edges relative 
output conventions 
output graphs drawn straight line edges 
conventions uses literature easier implement framework 
consider grid standard requires nodes positioned coarsely distributed grid points edges composed grid segments 
locations nodes restricted drawing edges immediate 
choice acm transactions graphics vol 
october 
drawing graphs path edge follows degrees freedom introduce choices definition neighborhoods 
problem similar vlsi layout problems successfully treated sa 
relaxation straight line standard allow edge drawn continuous curve 
sa method deal approximation convention break edge bounded number pseudo edges introducing dummy intermediate nodes 
may run basic algorithm modify resulting drawing recombining smooth curves spline method de boor 
hypergraphs higraphs 
nice address complicated graphical objects 
liere preliminary ideas dealing hypergraphs berge higraphs 
hypergraphs appears johnson pollack 
edge hypergraph called hyperedge simply subset nodes restricted size graph 
deal replace hyperedge connecting nodes dummy node binary edges adjacent nodes 
algorithm applied standard graph dummy nodes redrawn particular form adopted hyperedge centers 
simple idea produce reasonable results algorithm tends bring connected nodes close 
nodes adjacent edge hypergraph tend group area picture 
complicated 
involve multilevel blobs intersect enclose euler circles venn diagrams employ partitioning convention representing cartesian products edges hyperedges 
appear useful number applications see nd motivates search automatic drawing procedures 
higraphs pose additional difficulties nice drawings 
set theoretic relationships represented blobs retained final result keeping violated intermediate stages annealing procedure severely restrict usefulness 
new criteria aesthetics defined account acceptable distribution relative sizes shapes avoiding complications arise intersections time trying keep edges short simple looking 
edges probably curved turns 
ideas proceed hope address problem near 
acknowledgments mike atkinson sandeep bhatt jim john hersh berger david johnson joseph manning eli james acm vol 
october 
davidson harel jr steven north roberto tamassia howard trickey bringing attention 
grateful referees helpful comments 

graphs hypergraphs 
north holland amsterdam 

automated drawing graphs 
proceedings rd caribbean conference combinatorics computing 
boor 
practical guide splines 
springer verlag new york 
batini tao ano mas 
computer aided layout relation ship diagrams 
syst 
softw 

dl os ano tolls 
algorithms drawing graphs annotated bibliography 
preprint dept computer science brown univ providence nov appear comput 
geom 
theory appl 
ds 
heuristic graph drawing 
cong 
numer 


graph drawing force directed placement 
softw 
pract 
exper 

gansner north vo 
dag program draws directed graphs 
softw pract 
exper 

garey johnson 
crossing number np complete 
siam alg 
discrete meth 

hajek 
tutorial survey theory applications simulated annealing 
proceedings th conference decision control 
harel 
visual formalisms 
commun 
acm 
harel naamad pnueli sherman 
statemate working environment develop ment complex reactive systems 
ieee trans 
softw 
eng 

hl ano 
randomized graph drawing heavy duty preprocess ing 
visual lang 
cornput 

ano 
incremental drawing algorithm planar graphs 
algorithmica appear 
tygar wing 
mir visual specification security 
ieee trans 
softw 
eng 

johnson mcgeoch 
optimization simulated annealing experimental evaluation part graph partitioning 
oper 
res 

johnson 
optimization simulated annealing experimental evaluation part ii graph coloring number partitioning 
oper 
res 

johnson ano 
hypergraph planarity complexity drawing venn diagrams 
graph theory 

visualizing objects relations 
world scientific see visualization objects relations 
sc 
thesis university tokyo dec 
ic oa ano 
algorithm drawing general undirected graphs 
inf proc 
lett 

kmp jr ano vecchi 
optimization simulated annealing 
science 
van arts 
simulated annealing theory applications reidel dordrecht 
north 
method drawing graphs 
proceedings acm symposium computational geometry 

draw hypergraph 
int 
cornput 
math 

manning atallah 
fast detection display symmetry trees 
cong 
numer 

acm transactions graphics vol october 
drawing graphs nicely metropolis os rosenbluth iv teller teller 

equa tion state calculations fast computing machines 
chem 
phys 

rr ano 
thermodynamic optimization block placement 
ieee 
cornput 
aided des 

ss ano 
automatic graph drawing ity diagrams 
ieee trans 
syst 
man cybern 
smc 
put re 
draw graph 
proceedings london mathematical society 
received 
acm july final revision nov 
acm accepted tog february acm transactions graphics vol 
october 
