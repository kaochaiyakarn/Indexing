highly adaptive distributed routing algorithm mobile wireless networks new distributed routing protocol mobile multihop wireless networks 
protocol family protocols term link reversal algorithms 
protocol reaction structured temporally ordered sequence diffusing computations computation consisting sequence directed link reversals 
protocol highly adaptive efficient scalable best suited large dense mobile networks 
networks protocol reaction link failures typically involves localized single pass distributed algorithm 
capability unique protocols stable face network partitions results protocol high degree adaptivity desirable behavior achieved novel physical logical clock establish temporal order topological change events structure order algorithm reaction topological changes 
refer protocol temporally ordered routing algorithm tora 
consider problem routing mobile wireless network described 
network envisioned collection routers equipped wireless receiver transmitters free move arbitrarily 
status communication links routers time function positions transmission power levels antenna patterns interference levels mobility routers variability connectivity factors result network potentially rapid unpredictably changing topology 
congested links expected characteristic network wireless links inherently significantly lower capacity hardwired links prone congestion 
existing shortest path algorithms adaptive shortest path algorithms particularly wellsuited operation network 
algorithms designed operation static quasi static networks vincent park scott corson naval research laboratory usa university maryland usa ieee hardwired links 
rate topological change network sufficiently high algorithms may able react fast maintain routing flooding recourse 
furthermore algorithms provide path routing source destination pair exacerbates link congestion problem 
link state algorithms provide capability multipath routing time communication overhead associated maintaining full topological knowledge router impractical environment 
existing algorithms developed environment include gafni bertsekas gb algorithms lightweight mobile routing lmr protocol destination sequenced distance vector dsdv routing protocol wireless routing protocol wrp dynamic source routing dsr protocol :10.1.1.113.555
algorithms better suited environment drawbacks 
gb algorithms exhibit instability portions network partitioned destination 
period instability nodes non productively transmit control packets message packets time network reconnected 
results inefficient available bandwidth unacceptable partitioning expected common mobile wireless network 
lmr protocol exhibits unwanted behavior prevalent partitioned portions networks 
protocol result temporary construction invalid routes false reply propagation 
shown invalid routes erased partitioned portion network probability finite bound placed time required 
dsdv limited provides single path routing source destination pair 
furthermore protocol requires selection parameters periodic update interval maximum value settling time destination number update intervals may route considered stale 
difficult assess impact selection parameters performance believe parameter selection may critical 
parameters represent tradeoff latency valid routing information excessive communication overhead 
complicate problem parameter selection dependent networking environment size network rate topological change wrp described providing single path routing nodes maintain sufficient information perform multipath routing 
potentially significant amount overhead associated maintaining shortest path spanning tree reported neighbor reactions failures may far reaching node includes failed link shortest path spanning tree participate failure reaction 
dsr providing single path routing amended support multipath routing 
significantly suffers scalability problem due nature source routing 
network larger control packets collect node addresses node visited message packets contain full source routing information larger 
clearly negative impact due limited available bandwidth 
view routing algorithm suited operation environment possess properties executes provides loop free routes provides multiple routes alleviate congestion establishes routes quickly may topology changes minimizes communication overhead localizing algorithmic reaction topological changes possible conserve available bandwidth increase scalability routing optimality determination shortestpath importance 
necessary desirable maintain routes source destination pair times 
overhead expended establish route source destination pair wasted source require route prior invalidation due topological changes 
developed routing algorithm tailored operation highly dynamic network environment 
algorithm part share undesirable characteristics associated network partitions 
protocol designed minimize reaction topological changes 
key concept design decouples generation potentially far reaching control message propagation rate topological changes 
messaging typically localized small set nodes near change having resort dynamic hierarchical routing solution attendant complexity 
possible enhancement protocol discussed control message propagation protocol secondary mechanism 
propogation occur periodically low rate independent network topology dynamics employed means infrequent route optimization soft state route verification 
algorithm distributed nodes need maintain information adjacent nodes hop knowledge 
guarantees routes loop free typically provides multiple routes source destination pair requires route 
lmr protocol source initiated quickly creates set routes destination desired 
multiple routes typically established topological changes require reaction having single route sufficient 
topological changes require reaction protocol quickly valid routes 
ability initiate react infrequently serves minimize communication overhead 
event network partition protocol detects partition erases invalid routes finite time 
protocol ieee notation assumptions model network graph finite set nodes set initially undirected links 
node assumed unique node identifier id link assumed allow way communication nodes connected link communicate direction 
due mobility nodes set links changing time new links established existing links severed 
perspective neighboring nodes node failure equivalent severing links incident node 
initially undirected link may subsequently assigned states undirected directed node node directed node node link directed node node node said upstream node node said downstream node node define neighbors set nodes subsequent discussion assume existence link level protocol ensures node aware neighbors set logic protocol remains case may arbitrary delay time link status change subsequent protocol notification change 
assume transmitted packets received correctly order transmission 
existing networks type typically employ omnidirectional antennas assumed node transmits packet broadcast neighbors set 
rules protocol described reflect assumption slight modifications rules required networks subset neighbors receive transmission incorporate space division multiple access techniques 
foundation basic structure logically separate version protocol run destination routing required 
presentation focus single version running destination 
protocol separated basic functions creating routes maintaining routes erasing routes 
creating route node destination requires establishment sequence directed links leading node destination 
function initiated node directed links requires route destination 
creating routes essentially corresponds assigning directions links undirected network portion network 
method accomplish adaptation query reply process described builds directed acyclic graph dag rooted destination destination node downstream links 
dag referred dag 
maintaining routes refers reacting topological changes network manner routes destination re established finite time 
mean directed portions return destination oriented dag finite time 
gb algorithms members general class algorithms designed accomplish task 
gb algorithms designed operation connected networks 
due instability exhibited algorithms portions network partitioned destination deemed unacceptable current task 
designed new algorithm general class efficient reacting topological changes capable detecting network partition 
leads third function erasing routes 
detection network partition links portion network partitioned destination undirected erase invalid routes 
protocol accomplishes functions distinct control packets query qry update upd clear clr 
qry packets creating routes upd packets creating maintaining routes clr packets erasing routes 
ieee general class algorithms beneficial point briefly review gb algorithms 
consider connected dag node addition destination downstream links 
shall refer dag destination disoriented excerpts loosely describe algorithms designed transform destination disoriented dag destination oriented dag 
full reversal method iteration node destination outgoing links reverses direction incoming links 
partial reversal method node destination keeps list neighboring nodes reversed direction corresponding links 
iteration node outgoing links reverses directions links appear list empties list 
exists list full node reverses directions incoming links empties list 
algorithms subsequently re stated context generalized numbering scheme summarize detail left 
thorough understanding review original 
essentially value associated node times values totally ordered 
example full reversal method pair associated node unique id node integer 
pairs totally ordered lexicographically 

refer value associated node height denote assume assign initial height node destination disoriented dag node upstream node clear node downstream links measured height local minimum respect neighbors achieve desired behavior full reversal method node select new height local maximum respect neighbors node simply selects new value max broadcasts value neighbors 
partial reversal method viewed conceptually explained easily 
node selects new height local minimum local maximum 
reverse links partial reversal node selects new height higher previous height height neighbors higher neighbors 
details algorithms relevant development discussion protocol 
relevant goes describe general class algorithms generalized numbering scheme 
class algorithms shown loop free terminate finite number iterations destination oriented dag 
furthermore nodes lost downstream paths destination react failure 
properties apply new algorithm member class 
new algorithm similar partial reversal method reverses links 
rules selection new height significantly complex order provide partition detection capability 
rules discussed detail basic idea follows 
node loses downstream link local minimum result link failure node selects new height global maximum defining new level 
design new level defined higher previously defined levels 
action results link reversals may cause nodes lose downstream link 
node executes partial reversal respect neighbors heights associated newest highest level 
manner new level propagated outward point original failure re directing links order re establish routes destination 
propagation extend nodes result initial link failure lost routes destination 
node prior start reaction downstream links may experience link reversals result initial link failure neighbors 
node select new height local maximum 
accomplished defining higher sub level associated new level refer reflected level 
node essentially reflects higher back node originally defined new level 
reflected level propagated back originating node neighbors determined route destination exists 
originating node detected partition process erasing invalid routes 
detailed description time ordered quintuple oid associated node conceptually quintuple associated node represents height node defined parameters level delta respect level 
level represented values quintuple delta represented values 
new level defined ieee time node loses downstream link due link failure 
value representing level time tag set time link failure 
assume nodes synchronized clocks 
accomplished interface external time source global positioning system gps algorithm network time protocol 
discuss section time tag need indicate time relaxation synchronization requirement invalidate protocol 
second value oid originator id unique id node defined new level 
ensures levels totally ordered lexicographically multiple nodes define levels due failures occur simultaneously equal time tags 
third value single bit divide unique levels unique sub levels 
bit distinguish original level corresponding higher reflected level 
distinction required original reflected levels simply referred levels value representing delta integer order nodes respect common level 
value instrumental propagation level 
selected clarified subsequent section 
second value representing delta unique id node 
ensures nodes common level equal values fact nodes totally ordered lexicographically times 
node destination maintains height initially height node network destination set null 
subsequently height node modified accordance rules protocol 
height destination zero destination id unique id destination algorithm running 
addition height node maintains height array entry hn neighbor initially height neighbor set null hn 
destination neighbor node sets height entry destination zero hn 
node destination maintains link state array entry ls link state links determined heights hn directed higher node lower node 
neighbor higher node link marked upstream 
neighbor lower node link marked downstream dn 
neighbors height entry hn null link marked undirected un 
height node null neighbor height null considered lower corresponding link marked downstream dn 
new link established node new neighbor node adds entries new neighbor height link state arrays 
new neighbor destination height entry set zero hn set null hn 
corresponding link state ls set outlined 
nodes need communicate routing information link activation 
creating routes 
creating routes requires qry upd packets 
qry packet consists destination id identifies destination algorithm running 
upd packet consists height node broadcasting packet node destination maintains route required flag rr initially un set 
node destination maintains time upd packet broadcast time link active 
node directed links un set route required flag requires route destination broadcasts qry packet sets route required flag 
node receives qry reacts follows 
receiving node downstream links flag un set re broadcasts qry packet sets route required flag 
receiving node downstream links route required flag set discards qry packet 
receiving node downstream link height null sets height oid hn oid minimum height non null neighbors broadcasts upd packet 
receiving node downstream link height non null compares time upd packet broadcast time link qry packet received active 
upd packet broadcast link active discards qry packet broadcasts upd packet 
node route required flag set new link established broadcasts qry packet 
node receives upd packet neighbor node updates entry hn height array height contained received upd packet reacts follows 
route required flag set implies height node null node sets height oid hn oid minimum height non null neighbors updates entries link state array ls un sets route required flag broadcasts upd packet contains new height 
route required flag set node simply updates entry ls link state array 
section maintaining routes discusses additional reaction occurs results loss downstream link 
example route creation process depicted fig 

respective heights shown adjacent node destination algorithm running marked dest 
circle node indicates route required flag set 
recall value height unique id node lexicographical ordering 
direct links 
note height selected node fig 
reflects arbitrary assumption node received upd packet node prior packet node node selected height response packet node direction link fig 
reversed 
qry node initiates qry upd upd dest upd dest nodes propagate upd node generates upd maintaining routes 
maintaining routes performed nodes height null 
furthermore neighbor height null computations 
node said downstream links hn non null neighbors result possible reactions depending state node preceding event 
node destination downstream links modifies height oid follows 
case generate node downstream links due link failure 
oid time failure ieee qry qry dest nodes propagate qry upd upd upd dest nodes propagate upd qry dest upd nodes propagate qry node generates upd fig 
creating routes qry dest route creation process complete essence node defines new level 
assumes node upstream neighbor 
node upstream neighbors simply sets height null 
algorithm designed operate asynchronously examples depict algorithm executing synchronously transmissions occurring fixed points time 
case propagate node downstream links due link reversal reception upd packet ordered sets rj equal ni 
oid max oid ni oid min max oid essence node propagates level highest neighbor selects height lower neighbors level 
case reflect node downstream links due link reversal reception upd packet ordered sets rj equal rj ni 
oid oid essence level reflected propagated node neighbors 
node reflects back higher sub level setting bit case detect node downstream links due link reversal reception upd packet ordered sets rj equal rj ni node defined level 
ri essence level defined node reflected propagated back higher sub level neighbors 
corresponds detection partition 
node initiate process erasing invalid routes discussed section 
case generate node downstream links due link reversal reception upd packet ordered sets rj equal rj ni node define level 
oid time failure essence node experienced link failure require reaction time propagated level reflected higher sub level returned neighbors 
necessarily indication partition 
node defines new level 
determination new height cases node updates entries link state array ls broadcasts upd packet neighbors upd packet consists new height node broadcasting packet node receives upd packet neighbor node updates entries hn ls height link state arrays 
update causes link reversal results node losing downstream link modifies height outlined cases 
fig 
summarizes cases form decision tree starting time node loses downstream link 
event node loses link downstream link node simply removes entries hn ls height arrays 
case partition detected erase invalid routes case generate new level node originally define level oid 
node loses downstream link link lost due failure 
reflection bit level set 
case generate new level neighbors level 
case reflect back higher sub level case propagate highest neighbor level fig 
maintaining routes decision tree examples illustrate algorithm works 
fig 
provides example reaction required 
network depicted fig 
addition link marked failing 
nodes downstream links failure transmissions required 
significance greater networks highly connected 
node network average degree adjacent links estimate average number downstream links node 
implies node tolerate downstream link failures requiring reaction 
fig 
provides example reaction required 
network depicted fig 
addition link marked failing 
ieee link fails dest dest reaction necessary nodes downstream links fig 
link failure reaction erasing routes 
detection partition case node sets height height entry neighbor null destination neighbor case corresponding height entry set zero updates entries link state array ls broadcast clr packet 
clr packet consists reflected level node oid node receives clr packet neighbor reacts follows 
level clr packet matches level node sets height height entry neighbor null destination neighbor case corresponding height entry set zero updates entries link state array ls broadcasts clr packet 
level clr packet match level node sets height entry neighbor level clr packet null updates corresponding link state array entries 
height node portion network partitioned set null invalid routes erased 
causes node lose downstream link reacts case maintaining routes 
fig 
provides example demonstrates partition detection erasing invalid routes 
link fails upd dest dest node reflects higher sub level clr link fails clr upd dest dest node propagates level dest nodes propagate clr actuality value ri need included reflected level 
upd dest upd dest node defines new level node propagates level upd dest node propagates sub level upd invalid routes erased dest dest clr upd node detects partition dest node defines new level node propagates level dest failure reaction complete fig 
re establishing routes failure downstream link fig 
erasing invalid routes failure partitions network dest ieee network depicted fig 
addition link marked failing 
advantageous define clr packet additional bit field refer query flag 
node normally broadcast clr packet immediately followed qry packet node sets query flag broadcasts clr packet consequently reception clr packet query flag set processed clr packet received qry packet received 
summarize results illustrated examples 
failure causes node lose downstream link node re establish route destination pass set nodes affected failure provided path destination exists 
path destination longer exists node detect partition passes set affected nodes invalid routes erased passes set affected nodes 
effect time tag errors effect clock errors difficult bound analytically determine quantitatively simulation 
general discussion regarding effects clock errors protocol correctness efficiency 
assumption synchronized clocks time tagging levels created time node loses downstream link establishing temporal order events 
algorithmic reactions structured manner refer protocol temporally ordered routing algorithm tora 
time tags created method relative ordering time tags matches temporal order corresponding events algorithm function exactly described far 
example evaluate results link failures occur times matter corresponding time tags results 
excellent analysis ordering events distributed system provided 
details covered suffice say simply establishing order events require physical clocks 
ordering accomplished logical clocks implemented counters actual timing mechanism 
consider effect time tag errors relative ordering time tags associated sequence events agree actual order events occurred 
note time tag errors exclude algorithm general class class properties retained 
lost cases efficiency routes reestablished 
consider applies practical implementation algorithm 
statistics known rate topological change network information determine desired clock synchronization accuracy 
instance average time link failures order minutes achieving clock synchronization order seconds sufficient 
guarantee preservation correct ordering events intuitively events incorrectly ordered 
performance comparitive simulation results available time underway 
comparitive summary worst case protocol complexities augmented discussion basic operation major protocol classes 
complexities tora ideal link state ils algorithm dual family algorithms gb full reversal algorithm lmr protocol dsdv protocol wrp protocol shown table 
borrow complexity computations ils dual reader referred details 
ils protocol assumes network topology change sent node 
dual lowest complexity distance vector shortestpath algorithm known 
table complexity comparison protocol tc cc ils dual link failure cost increase dx dual link addition cost decrease dsdv link failure dx dsdv periodic update wrp link failure cost increase dx wrp link addition cost decrease gb connected gb disconnected lmr connected dx lmr disconnected tora connected dx tora disconnected dx making comparisons assumptions 
assume protocols execute synchronously 
compare time complexity tc defined number steps required perform protocol operation communication complexity cc defined number messages exchanged performing operation 
complexity parameters number network links network diameter number nodes network segment materially affected topological change length longest directed path affected network segment height routing tree maximum nodal degree comparison shows tora worst case complexity generally better algorithms closely related 
cases tora require single pass tc cc dx react link failure improving performance 
additionally gb lmr explicit reaction link additions reducing complexity relative ils dual wrp 
having written refrain placing emphasis worst case complexity comparisons limited value 
unfortunately fuzzy imprecise difficult compare algorithms differing functionality precise fair meaningful fashion 
example number nodes denoted potentially different protocol variables specific protocols 
important protocol average performance obtainable simulation 
feel tora potential perform relative existing approaches reasoning 
existing approaches categorized broad classes discuss 
link state algorithms property changes link status failure propagated nodes network 
example far reaching message propagation mentioned previously 
distance vector approaches entail propagation distance update information potentially large set nodes depending location change distributed shortest path computation 
path finding algorithms characteristics link state distance vector approaches seek combine best aspects hybrid protocol 
depending location change large set nodes may included shortest path computation 
link reversal mechanism tora propagation link state distance information consequently able localize reaction topological changes preceding classes 
operation best suited relatively dense networks nearby nodes typically involved reaction 
effect localization scalability protocol greatly increased 
scalability constrained communication time complexity limited primarily storage complexity grows linearly number nodes network 
ieee proposed highly adaptive distributed routing algorithm suited operation mobile wireless networks 
quickly creates maintains loop free multipath routing destinations routing required minimizing communication overhead 
rapidly adapts topological changes ability detect network partitions erase invalid routes finite time 
mentioned earlier protocol designed decouple greatest extent possible generation far reaching control message propagation dynamics network topology 
consequently distance estimate link state information propagation 
negative effect design choice clear viz 
time link reversal process proceeds dag may optimally directed creation 
route creation subsequent link reversals dag formed fourth element node height essentially contains distance hops destination path traveled upd packet node recall fig 

distance information desired favor routing links shorter distances heavy traffic conditions advocate routing packets single path due congestion enhancing effect single path routing 
links reversed reaction failure distance information lost reversed network portions longer denotes distance destination level zero 
possible enhancement protocol periodically propagate refresh packets outwards destination reception resets level nodes zero restores distance significance usage periodic destination initiated route optimization mentioned possible routing enhancement similar technique developed major mechanism route adaptation :10.1.1.113.555
serving routing enhancement periodic refresh guarantees router state errors resulting undetectable errors packet transmissions sources persist arbitrary lengths time 
router state explicitly refreshed eventually time deleted returned null value 
periodic serves soft state confirmation route validity 
refresh process permits control message propagation protocol fashion independent network topology dynamics 
refresh interval controllable refresh procedure expected occur low rate viewed secondary background mechanism 
refresh overhead grows linearly number destinations network 
ieee corson architectural considerations mobile mesh networking itd nrl navy mil txt 
bertsekas gallager data networks prentice hall 
merlin segall failsafe distributed routing protocol ieee trans 
commun 
september 
jaffe moss responsive distributed routing algorithm computer networks ieee trans 
commun 
july 
adaptive shortest path algorithm ieee trans 
commun 
june 
garcia luna aceves distributed routing labeled distances proc 
ieee infocom florence italy 
garcia luna aceves loop free routing diffusing computations ieee trans 
networking garcia luna aceves murthy loop free path finding algorithm specification verification complexity proc 
ieee infocom boston ma 
garcia luna aceves distributed scalable routing vectors link states ieee journal selected areas commun 
october 
gafni bertsekas distributed algorithms generating loop free routes networks frequently changing topology ieee trans 
commun 
january 
corson ephremides distributed routing algorithm mobile wireless networks wireless networks 
perkins bhagwat highly dynamic distance vector routing dsdv mobile computers acm sigcomm october :10.1.1.113.555
murthy garcia luna aceves efficient routing protocol wireless networks acm mobile networks applications journal special issue routing mobile communication networks 
johnson maltz dynamic source routing ad hoc wireless networks imielinski korth eds mobile computing kluwer academic publ 

gps user equipment mz february 
mills network time protocol specification implementation analysis internet rfc september 
lamport time clocks ordering events distributed system comm 
acm july 
corson ephremides distributed routing algorithm mobile radio networks proc 
milcom boston ma october 
