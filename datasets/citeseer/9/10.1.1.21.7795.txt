basdogan ho srinivasan simulation tissue cutting bleeding laparoscopic surgery auxiliary surfaces proceedings medicine meets virtual reality conference pp 
san francisco ca jan 
simulation tissue cutting bleeding laparoscopic surgery auxiliary surfaces basdogan chih hao ho srinivasan laboratory human machine haptics department mechanical engineering research laboratory electronics massachusetts institute technology cambridge ma 
realistic simulation tissue cutting bleeding important components surgical simulator addressed study 
surgeons number instruments perform dissection tissues minimally invasive surgery 
example hook tear spread tissue surrounds organs scissors dissect cystic duct laparoscopic 
execution procedures bleeding may occur blood flows tissue surfaces 
developed computationally fast algorithms display tissue cutting bleeding virtual environments applications laparoscopic surgery 
cutting soft tissue generates infinitesimally thin slit sides surface separated 
simulation tissue surface modeled steps collisions instrument tissue surface detected simulated cutting tool passes 
vertices cutting path duplicated 
simple elastic tissue model separate vertices reveal cut 
accurate simulation bleeding challenging problem complexities system physics viscous fluid flow 
fluid flow models described literature computationally slow specifically address problem blood flowing soft tissues 
reviewed existing models adapted specific task 
key characteristics blood flow model visually realistic display real time computational performance 
display bleeding virtual environments developed surface flow algorithm 
method simplified form navier stokes equations governing viscous fluid flow 
simplification partial differential equations results wave equation solved efficiently real time finite difference techniques 
solution describes flow blood polyhedral surfaces representing anatomical structures displayed continuous polyhedral surface drawn anatomy 

interest minimally invasive surgical procedures grows gap old new procedures instruments increases 
surgical simulators currently developed research centers companies train doctors residents new surgical devices techniques close gap 
realistic simulation tissue cutting bleeding important components typical surgical simulator remain unsolved 
attempts solve challenging problems past real time update requirements limited computational power complexity tissue separation bleeding models bottlenecks 
major challenges simulating tissue cutting developing physically tissue models estimate interaction forces new positions nodes separated real time accessing updating haptic graphics databases real time handle topological changes geometry result cut 
song reddy suggest interactive finite element template cutting elastic virtual surfaces 
template nodes moves cutting tool moves flat tissue surface 
technique novel extension virtual objects discussed 
suggest tissue cutting technique implemented surfaces require incremental update vertices connectivity arrays texture maps 
approach mapping textures regions virtual tissue surface spreads apart reveal cut provide visually realistic display 
include details haptic rendering synchronization vision haptics force model 
simulation bleeding challenging problem complexities system physics viscous fluid flow 
fluid flow models described fluid mechanics literature computationally slow 
attempts speed calculations computer scientists display flow interactive rates 
stable computationally expensive technique developed kass miller 
method relatively easy implement solution simplified form navier stokes equations known wave equation 
fluid surface represented height field wave equation solved update fluid columns 
brien hodgins extend approach simulate wider range behaviors including fluids 
model runs interactive speeds small size meshes update rate slows mesh finer 
chen describe method real time fluid simulation networked virtual environments 
solved navier stokes equations space mapped surface space corresponding pressures fluid flow field 
model simulate objects moving floating fluids interactive rates 
knowledge attention paid simulation blood flow tissue surfaces 
basdogan suggested separate algorithms simulating blood flow 
represent blood flows surface pools bottom depression implemented surface flow algorithm 
represent bleeding blood moving air designed implemented particle flow model 
propose auxiliary surfaces simulate tissue cutting bleeding 
auxiliary surfaces provide convenient means mapping surface geometry local rectangular mesh reduce dimensionality physics problem consideration cutting bleeding deformation solved efficiently realtime 
solution mapped back original surface display results 
extension earlier study suggests techniques displaying tissue cutting bleeding auxiliary surface approach 

methods set developed proof concept simulation system simulating tissue deformations feeling interaction forces 
hardware components simulation setup include personal computer high graphics card force feedback device phantom technologies 
simulations user manipulates generic stylus force feedback device simulate movements surgical instrument feel interactions computer generated anatomical organs 
integration vision touch software integration visual haptic modalities achieved efficient manner creating hierarchical database geometrical properties objects programming multi threading techniques 
simulations visual haptic servo loops separated achieve faster rendering rates 
displaying visual images known update rate hz appear continuous 
hand create satisfying haptic display update rates sending force commands haptic interface needs hz 
order create satisfies requirements optimally cpu power computer visual haptic servo loops need separated 
run loops time graphic loop updated hz haptic loop updated hz 
loops running time chance conflict occurs accessing shared memory 
example case simulating tissue cutting deformation changes geometry require frequent updates visual haptic databases real time 
cause problem loop writing data memory loop reading 
order avoid situation need synchronize loops 
easiest way synchronize loops create boolean flag 
loop wants access shared data check flag see data accessed loop 
flag indicates shared memory loop access data flag set indicate shared memory currently 
flag indicates data loop loop waits loop done 
loop finishes operations shared memory sets flag back normal loop access data 
order compute collisions simulated instruments objects efficient manner create utilize types hierarchical database 
hierarchical bounding box tree collision detection purposes 
hierarchical tree reduces number collision checks enables find collision point fast manner 
pre processing stage create bounding box tree polyhedral object 
highest level tree bounding box covers polyhedron 
lower levels bounding box parent children 
child parent bounding box covers approximately half number polygons parent 
hierarchical tree branches manner child covers polygon 
simulations check collision surgical tool highest level bounding box 
collision check collision tool bounding boxes branches 
process repeated till lowest level reached 
collision polygon inside lowest level bounding box line segment model surgical instrument checked collision point computed 
second database primitive hierarchy 
separate polyhedron types primitives vertices lines edges polygons 
database primitive pointer neighboring primitives 
primitive hierarchy helps quickly access neighbors collision points necessary 
example cutting instrument contacts primitive object current loop know loop contact primitives close neighborhood contacted primitive 
need check collisions instrument neighboring primitives primitives object 
approach reduces computational time drastically collision detection independent number polygons 
auxiliary surfaces concept auxiliary surfaces easy explain 
equations govern physics surgical interactions particularly tissue cutting bleeding difficult solve arbitrary shaped surfaces 
numerical solutions available real time update rates achieved due limited computational power today computers 
equations solved relative ease space approximations 
example tissue cutting problem solved flat grid fem approach suggested 
similarly height map represent blood surface simplified navier stokes equations solved realtime grid update height value node 
order generate auxiliary surface start rectangular grid points placed region interest 
ray sent node grid geometrical model tissue intersection point ray polygonal surface computed 
depicts process ray tracing describes project grid surface surface 
auxiliary surface projected surface object 
schematic describes auxiliary surface equations govern physics cutting bleeding locally solved rectangular mesh auxiliary surface results computation mapped back surface object 
simulation cutting cutting instrument modeled line segment see grouping instruments described simulations fast detection collisions 
generic stylus force feedback device model selected virtual instrument manipulated user tip tail coordinates simulated instrument updated 
tip tail coordinates detect instrument collided object edge polygon collision 
collisions line segment model instrument edges object edge edge collisions detected determine collision points instrument passes surface 
determine duplicate vertices polyhedron close collision points line cut 
simple polynomial model separate duplicated vertices visually expose cut 
simulate physics involved cutting compute new positions separated vertices auxiliary grid network point masses connected initially stretched springs 
simulate force interactions simulated cutting tool tissue surfaces spring force proportional indentation depth surface normal kx damping force proportional tangential velocity dv implemented 
simple efficient trick update visual database expose cut update haptic database 
simulating force interactions cut reflect interaction forces user change haptic database returning zero force tip simulated instrument enters region reducing stiffness surrounding tissue 
simulation bleeding fluid flow governed set partial differential equations known navier stokes equations 
integration equations time computationally expensive real time simulations possible 
kass miller developed computationally expensive technique solution wave equations 
technique represented fluid surface flat surface grid solved wave equations finite difference scheme update fluid depth node grid 
process starts wave equation gd eq 
represents height tissue surface base location global frame depth fluid location relative base 
additionally gravitational constant time 
computational simplification equation solved fluid depth directions separately 
resulting depth values averaged graphical display subsequent numerical iterations 
surface flow algorithm uses timers control calculations fires interval approximately second 
timer fires database tissues scanned find actively bleeding regions 
exact locations flow rates blood sources calculated updated tissue positions vital signs 
values adjust depth values blood grid 
blood source new blood depth calculated source flow rate depth stored appropriate element blood grid 
second timer fires current values blood depths grid iterated forward time interval equation calculate movement blood time period 
new blood depths displayed graphically described paragraph 
order display flow fluid blood polygonal tissue surfaces followed auxiliary surface approach 
generated large rectangular polyhedral surface colored red represent blood surface initially placed slightly tissue surface hide view 
solving wave equation find depth fluid node rectangular grid raised grid point direction appeared appropriate depth value tissue surface see 
auxiliary surface grid base level tissue surface projected grid base level 
schematic representation surface flow model 
step shown top create grid vertices slightly tissue surface region interest 
grid created projecting parallel rays model surface determining contact points moving points small amount hidden view 
second step shown bottom solve wave equation grid order determine height blood point 
points non zero height displayed elevating grid point appropriate amount blood depth visible tissue model 
initializing grid points projection technique described blood surface completely invisible pending blood depth calculations 
tissue surface region interest altered due surgical actions tissue base coordinates blood grid updated 
done subroutine called surgical instrument interacts model 
contact point instrument tissue sent subroutine computes new tissue base coordinates neighborhood contact point 
propose auxiliary surfaces simulate tissue cutting bleeding 
similar approach simulate instrument tissue interactions including tissue deformation piercing 
current approach simulate cutting require significant changes visual haptic data structures vertices line cut duplicated 
may create zigzag cut direction cutting path changed frequently 
observed implementation topological changes geometry cutting require fast frequent access database updating connectivity information inserting subtracting vertices lines polygons visual haptic databases real time 
changes geometry destroy pre computations associated efficient collision detection haptic display bounding boxes hierarchical trees pre constructed fast collision detection purposes need updated cut 
easy remedy problem keep original haptic database return collision cutting tool inside area 
plan improve database linked lists arrays insert subtract items database handle topological changes efficient manner 
note bleeding model creates artifacts calculations result modeling simplifications appear significant 
numerical solutions quite stable computations fast display results real time 
basdogan loan rosen delp interactive model human lower limb simulation surgical procedures virtual environments winter annual meeting asme bed vol 
pp 
nov atlanta 
basdogan ho srinivasan small dawson force interactions laparoscopic simulations haptic rendering soft tissues proceedings conference pp 
san diego ca january 
chen lobo hughes simulation fluids dis workshop simulation interaction virtual environments sive university iowa iowa city iowa july 
ho basdogan srinivasan efficient haptic rendering technique displaying polygonal objects surface details virtual environments submitted presence teleoperators virtual environments 
kass miller rapid stable fluid dynamics computer graphics computer graphics vol 
pp 

rush spitzer heath real time visually accurate surgical simulation proceedings conference pp 
san diego ca 
brien hodgins 
dynamic simulation fluids proceedings computer animation geneva switzerland april pp 
song reddy tissue cutting virtual environments proceedings conference pp 
san diego ca 
