universit di pisa dipartimento di informatica technical report tr new distributed model control coordinate set autonomous mobile robots corda model giuseppe dipartimento di informatica universit di pisa corso italia pisa italy mail di unipi august address corso italia pisa italy 
tel fax new distributed model control coordinate set autonomous mobile robots corda model giuseppe dipartimento di informatica universit di pisa corso italia pisa italy mail di unipi august past years focus robotic design moving scenario specialized expensive units solve variety tasks scenario general purpose cheap units achieve common goal 
consequently part focus better understand eciently coordinate control set simpler mobile units 
studies di erent disciplines engineering arti cial life shared feature majority studies design algorithms heuristics mainly concerned correctness termination algorithms 
studies focused trying formally model environment constituted mobile units studying kind capabilities order achieve goals words study problem computational point view 
focuses studies model rst introduced 
main features described 
main di erences previous model knowledge analyzes problem coordinating controlling set autonomous mobile units point view highlighted showing novelty approach 
system consisting set totally distributed agents goal generally exploit multiplicity elements system execution certain number predetermined tasks occurs coordinated distributed way 
system preferable just powerful robot reasons advantages arise distributed parallel solution problems faster computation ability perform tasks unable executed single agent increased fault tolerance decreased cost simpler individual robot design 
hand main concern system nd ecient way coordinate control mobile units order exploit utmost presence elements moving independently 
leading research conducted years di erent elds 
engineering area cite cellular robotic system swarm intelligence beni self assembly machine murata 
ai community number remarkable studies social interaction leading group behavior matari sel sh behavior cooperative robots animal societies parker primitive animal behavior pattern formation balch arkin 
shared feature approaches deal formal correctness analyzed empirically 
algorithmic aspects implicitly issue clearly major concern focus study 
contrast want analyze environment populated set autonomous mobile robots aiming identify algorithmic limitations 
words want study problem computational point view 
speci cally model corda coordination control set robots totally distributed asynchronous environment appeared rst time primary objective describe set simple mobile units central control move independently totally asynchronous execute deterministic algorithm order achieve goal 
robots model quite weak simple simplicity allows formally highlight algorithmic computational viewpoint minimal capabilities order accomplish basic tasks produce interesting interactions 
furthermore allows better understand power limitations distributed control environment inhabited mobile agents formally prove achieved weakness assumptions corda described detail see detailed motivations 
investigation algorithmic avor undertaken ai community durfee argues favor limiting knowledge intelligent robot possess order able coordinate behavior 
suzuki yamashita closest study focus rarity mobile robots literature 
gives nice systematic account algorithmics pattern formation robots operating assumptions power individual robot 
model suzuki 
refer sym corda share features di er aspects speci cally way asynchronicity modeled render models quite di erent 
highlight di erences proving algorithms designed sym corda 
shown features render corda di erent sym render realistic opinion better models set autonomous mobile robots behave totally asynchronous environment 
section sym corda described highlighting features render models di erent 
section show algorithms designed sym corda highlighting assumptions corda better re ect totally asynchronous environment populated set mobile units novelty approach 
section draw suggestions study 
sym vs corda models discussed share basic features 
robots modeled units computational capabilities able freely move plane 
rst time model corda 
viewed points equipped sensors observe positions robots plane 
depending observe plane just portion di erent models arise unlimited limited visibility model robot see distance 
robots anonymous meaning priori indistinguishable appearances kind identi ers computation 
asynchronous central control allowed 
robot local view world 
view includes local cartesian coordinate system origin unit length directions coordinate axes identi ed axis axis orientations identi ed positive negative sides axes 
robots necessarily share coordinate system necessarily agree location origin assume loss generality placed current position robot unit distance 
execute deterministic algorithm takes input positions robots plane observed time instant returns destination point executing robot moves 
algorithm oblivious new position determined positions positions observed past called non oblivious 
explicit means communication communication occurs totally implicit manner 
speci cally happens means observing change robots positions plane execute algorithm 
clearly basic features render modeled robots simple weak especially considering current engineering technology 
noted main interest studies done approach problem coordinating controlling set mobile units computational point view 
robots modeled weak robots way possible formally analyze strengths weaknesses distributed control 
furthermore simplicity lead advantages 
example avoiding ability remember computed past gives system nice property self stabilization 
life robot cyclically executes phases observes positions world ii computes destination point iii moves point just computed 
stated robots execute phases asynchronously central control feature models drastically di er 
fact sym phases iii executed atomically assumption dropped corda 
better describe asynchronicity approached models 
atomicity cycle sym section better describe movement robots modeled sym 
authors assume discrete time 
time instant robot active inactive 
robot active time instant robot active nitely unpredictable time instants 
special case robot active time instant case robots synchronized case interesting purpose 
indicate position robot time instant algorithm robot uses 
robots viewed points sym assumed robots refer robots oblivious feature algorithms execute 
occupy position simultaneously collide 
function positions robots time non oblivious case positions robots occupied computation returns new destination point inactive point returned maximum distance move step bounded distance implies robot travel distance minf 
reason constant simulate continuous monitoring world robots 
executes phases iii atomically sense robot active observes reached destination point 
robot takes certain amount time move time elapsed fellow robot see moving alternatively movement instantaneous 
call cycle sequence phases ii iii described call atomicity cycle 
opinion assumptions poorly model way set autonomous mobile asynchronous robots interact coordinate order accomplish task 
asynchronicity step corda rst small di erence models corda possibility robots considered points realize collide 
robot bumps simply stops position robot 
feature model robots seen points introduced renders corda closer model robot dimension real world 
bumping assumption lets easily solve problem suzuki showed solvable oblivious way sym gathering problem robots 
problem robots asked gather xed point plane nite number cycles 
solve problem corda sucient robot having observed simply moves robot sees 
similarly sym robot repeatedly executes phases 
robot initially waiting state wait point time asynchronously independently robots observes environment area visibility observe calculates destination point current locations observed robots compute moves point move goes back waiting state 
phases described formally 

wait robot idle 
robot stay nitely idle 

observe robot observes world snapshot positions robots respect local coordinate system 
robot viewed point position plane coordinates 
addition robot general detect fellow robot observed points included position observing robot say detect multiplicity 
hand robot recognize note non obliviousness feature imply possibility robot nd robot corresponds position stored robots anonymous 
problem called point formation problem suzuki 
fellow positions say detect weak multiplicity 

compute robot performs local computation deterministic oblivious algorithm 
result computation destination point 

move result computation robot move moves curve likes point computed previous phase 
robot moves computed destination unpredictable amount space assumed nite small see assumption 
robot go goal curve know far go current cycle anytime movement 
computational cycle de ned sequence wait observe compute move phases life robot sequence computational cycles 
addition assumptions behavior robot nite sleep robot wait inde nitely 
minimal distance robot arbitrary small constant xed 
represents minimum distance robot travels move phase result computation 
computed destination point closer reach 
clearly robot computation result travels distance min secondary di erence point related way robot moves assumption corda assumption maximum distance robot travel observing apart bound destination point reached sym active robot travels distance step 
assumption corda lower bound distance robot moves moves positive small constant reason constant better model reality realistic allow robots move small distance 
main di erence models stated way asynchronicity regarded 
corda environment totally asynchronous sense common notion time robot observes environment unpredictable time instants 
assumptions cycle time robot time robot elapses execute phase cycle assumed cycle completed nite time distance traveled cycle nite 
robot take time compute move point plane way possible model di erent computational speeds units 
robot seen moving robots observing asynchronicity cycle 
feature renders dicult design algorithm control coordinate robots 
example robot starts move phase possible movement perform coherent observed compute phase robots moved 
sake uniformity assume observe phase unpredictable nite amount time result snapshot robots positions 
hand believe way asynchronicity system constituted set autonomous mobile robots better modeled 
novelty corda section show di erences pointed previous sections particular way asynchronicity modeled render models really di erent oblivious non oblivious case 
oblivious case analyze oblivious case showing algorithms sym corda limited unlimited setting 
problem consider gathering problem robots asked gather pre xed point plane nite number cycles 
problem knowledge solved oblivious algorithm sym 
algorithm said solve problem lets robots gather point initial con guration 
initial con guration set robots positions computation starts position robot position occupied robot 
unlimited visibility setting algorithm solving gathering problem unlimited visibility setting 
idea 
starting distinct initial positions robots moved way eventually exactly position say robots occupy 
situation reached robots move report oblivious algorithm described robots achieve situation determined 
algorithm point formation algorithm sym unlimited visibility setting 
case 
denote positions robots 

collinear middle robots move robot remains stationary 
eventually robots occupy 
form isosceles triangle jp jp jp robot moves foot perpendicular drop current position way robots form equilateral triangle time robots remain stationary 
eventually robots collinear problem reduced part 

lengths sides triangle di erent say jp jp jp robot moves foot perpendicular drop current position robots remain stationary 
eventually robots collinear problem reduced part 
initial situation robots proof theorem 

form equilateral triangle robot moves center triangle 
robots move constant distance step part 
continues hold eventually robots meet center triangle form longer equilateral problem reduced part part 
case 
denotes smallest enclosing circle robots time 
exactly robot interior moves position robot say circumference robots remain stationary 
eventually occupy position 

robots interior robots move center robots remain stationary center remains unchanged 
eventually robots reach center 

robots interior robot moves center robots move constant distance step part continues hold eventually radius 
happens time robot moves say robots occupy center ii exactly robot center robot problem reduced part part cycle passing point intersects points 
clear strategy works robots system ability detect multiplicity 
sym capability mentioned clearly implicitly 
possible prove capability necessary solve problem 
fact theorem 
corda exists deterministic oblivious algorithm solves gathering problem nite number cycles set robots point plane distinguish multiplicity robot 
proof 
deterministic oblivious algorithm solves gathering problem corda assume point plane robots distinguish multiplicity suppose robots black robots lie point plane white robot lies point plane gure case pictured 
black white coloring sake presentation information robots computation 
note robots distinguish multiplicity robot see robot system suppose common knowledge 
robots view world sees exactly robot plane 
suppose observe compute move phases amount time say 
describe adversary adv schedules movements robots way strategy robots gather point 
adversary chooses robot activate start observe phase activate 
note robot activated time time wait phase 
adv decides distance robot travels move phase 
particular adversary follows rules described 
respectively points black robots lie lies 
adv activating black robot compute destination point executing activate black robots move distance see assumption section 
adv adv activate black robots move reach destination point compute adv activated black robots reach destination point time activate move destination point computes adv time activate black robot move destination point computes 
note choosing adv black robots move white robot move deterministic view world black robots sees robot world 
solve problem 
long adversary chooses adv black robots move distance reaching white note moving white robot wait see black ones move 
move reaching deterministic activated ii black robot activated reach position occupied iii black robots share view world lie see robot system white iv observe compute move phases time 
solves problem hypothesis nite number cycles rule adv chosen adversary black robots reach adv chosen rst time black robots activated 
rule chosen black robot activated compute position occupied destination point iii iv time activated black robots reach moving everybody wait seen moving 
adv white robot activated 
view world black robots moved adv 
speci cally white robot sees robot black robot black robots adv saw white 
deterministic compute thing computed black robots adv decide reach robot sees computes destination point 
iv time white robot reaches black robot activated 
view world fellow robots adv computes destination point reaches time 
adv chosen time time black robots went white robot white robot went black robots black white robots simply switched positions situation 
adversary adv choose scheduling robots gather point executing 
leads contradiction 
note proof assumption robot able recognize multiplicity position assume robot distinguish weak multiplicity robot position theorem holds 
fact sucient assume white robots change second rule adversary follows adv adv activate black robots move destination point compute adv activated black robots reach destination point time activate white robots move destination point compute adv time activate black robot move destination point computes 
result proven sym 
corollary 
sym exists deterministic oblivious algorithm solves gathering problem nite time set robots point plane distinguish multiplicity distinguish weak multiplicity 
proof 
assume robots point plane distinguish multiplicity exists deterministic oblivious algorithm solves gathering problem sym 
di erence respect proof theorem upper bound robot travel step see section 
min de ne adversary way adv exists black robot activated compute destination point executing activate black robots move distance 
adv exists black robot activated compute destination point executing distance path activate black robots move distance 
proven exists oblivious algorithm solves problem assumption robots collide 
adv adv activate black robots move reach destination point compute adv activated black robots reach destination point time step activate move destination point computes adv activate black robot move destination point computes 
considering sym cycle atomic explained section proof theorem rst part corollary follows 
prove second part corollary robots supposed distinguish weak multiplicity sucient assume white robots change adv follows adv adv activate black robots move reach destination point computed adv activated black robots reach destination point time step activate white robots move destination point compute adv activate black robot move destination point computes 
ready state main result section 
theorem prove algorithm solve gathering problem corda 
speci cally give initial con guration robots describe possible run algorithm leads having robots system point 
theorem 
algorithm solve gathering problem corda unlimited visibility setting 
proof 
suppose robots circle pictured step 
positions robots indicated 
executing algorithm assuming features corda possible run described 
step robots distinct positions circle enter observe phase wait 
having observed enter compute phase assume robot computationally slow alternatively fast 
decides move center part algorithm stuck compute phase 
starts moving center compute wait 
step inside robots observes second cycle part algorithm decides move robot circle say compute phase rst cycle wait 
observe move wait compute direction movement step step step step step step proof theorem 
dotted circles indicate robots observe phase grey ones robots compute phase circle arrow inside robots moving white circles represent robots wait 
arrows indicate direction movement computed compute phase 
step reaches enters wait third cycle point position plane robots enters rst observe phase looks situation algorithm decides move point plane ore robots 
rst compute wait 
step reaches ends execution algorithm assuming gathering point 
wait rst compute phase starts rst observe phase decides move starts moving 
step way ends rst compute phase 
computation done observed previous observe phase step decides move center part algorithm 
starts moving center passes center moving wait 
step moving opposite directions diameter exactly point corda robot reaching nal destination 
points plane robots 
invariant proven algorithm eventually exactly position robots occupy violated 

note step possibility robot stops reaching destination point computed 
proof works assume reaching respective destination points 
fact assume robots bump proof valid 
assume sym robots simply cross stopping crossing happens point ii enters observe phase exactly crossing happens sees points plane robots know possibility mentioned sym algorithm 
theorem holds 
easy see theorem valid simulate continue monitoring world robots sym introducing maximum distance robot travel move phase 
follows proof previous theorem real di erence models way asynchronicity modeled sym cycle atomic corda phase cycle unpredictable nite amount time asynchronicity cycle 
hypothesis clearly renders analysis design algorithms dicult opinion better models totally asynchronous environment populated set mobile units 
limited visibility setting algorithm solve gathering problem limited visibility setting 
shortly describe denote position robot time instant set fr denotes set robots positions de ne called proximity graph time dist dist denotes euclidean distance points proven proximity graph connected robots gather point form point sym language 
denote set robots distance time set robots visible note 
denotes smallest enclosing circle set fr jr positions robots center denoted 
time robot active algorithm moves certain distance mov speci cally see robot notation slightly di erent 
notation original 
move 
algorithm chooses point segment closest satis es conditions 
dist dist indicates distance points 
condition follows restriction maximum distance robot move phase 
robot lies disk center midpoint radius 
condition ensures visible movement possibly see 
algorithm gathering problem sym limited visibility setting 
algorithm described formally refer 
algorithm point formation algorithm sym limited visibility setting 

fr 

fr 
dist 

cos sin 
limit min fr fl 
goal dist name described section 
step step step step step proof theorem 
symbols robots 
vertical arrows mean robot decided move move 
robot moves center smallest enclosing circle robots see 

move 
point distance mov 
proven executing algorithm robots connected connected 
theorem prove solve gathering problem corda limited visibility setting 
speci cally give initial con guration robots describe possible run algorithm leads partitioning proximity graph robots visible time visible contradicting result proven 
theorem 
algorithm solve gathering problem corda limited visibility setting 
proof 
suppose robots straight line shown 
constant constant introduced section 
visibility situation see see see see see recall robot move center smallest circle enclosing robots see 
executing algorithm assuming features corda possible run described 
step robots assume wait execute rst observe start compute phase 
suppose faster computing 
values compute goal dist limit minf move goal move start moving computing wait 
step move visibility situation 
observe compute follows goal move goal dist limit minf move move rst compute phase rst wait 
step movement previous step visibility situation unchanged proximity graph connected 
enter third observe compute phases 
goal dist limit minf move goal move move 
robots phases previous step 
step proximity graph connected 
observe compute fourth cycle 
goal move goal dist limit minf move enter move phase 
nishes rst compute 
values computes refer situation observed step 
goal dist tau limit move starts moving destination point just computed enters rst move phase 
step distance see anymore breaking proximity graph connectivity step 
invariant robots mutually visible remain distance asserted violated 
theorem follows 
note renders algorithm useless corda substantial di erence asynchronicity modeled 

step algorithm takes account maximum distance robot travel cycle 
move limit mention proof previous theorem similar upper bound corda 
theorem valid assume constant 
fact sucient de ne 
non oblivious case problem characterizing class geometric patterns robots form analyzed 
authors non oblivious algorithm solve problem leaving open problem existence oblivious algorithm 
reiterate oblivious algorithm takes input positions robots computation robot capability remember fellows 
solution propose basic operation broadcast robot wants communicate broadcast direction line privately chooses passes initial position 
order robot keeps moving established direction observes changed positions twice sees distinct positions 
happens compute direction distinct positions observed introduced technique described allows robots determine robots broadcasting direction remember robots anonymous see footnote 
authors broadcast twice communicate initial position discover initial con guration called distribution robots system 
order broadcasts positive direction axis returns straight initial position broadcasts positive direction axis nally returns straight initial position 
robot easily discover initial positions robots 
show technique adopted broadcast initial con guration asynchronicity step assumption corda 
theorem 
non oblivious broadcast technique adopted discover initial distribution robots corda 
proof 
suppose robots enter observe phase 
sees initial positions observe phase robots enter compute phase move phase 
suppose really slow execute cycles rst move 
implies corda robot seen moving see di erent positions start broadcasting respective axes 
enters second observe phase sees robots broadcasting axes thinks broadcasting axes seen change positions twice 
computes wrong initial con guration robots system 
model introduced rst time corda consisting set autonomous anonymous memoryless mobile robots features render robots weak 
analyzed main di erences sym model knowledge focuses problem studying algorithmic problems arise asynchronous environment populated set autonomous anonymous mobile units requested accomplish task 
particular showed di erent way asynchronicity modeled sym corda key feature renders models di erent 
feel asynchronicity cycle modeled corda better describes way set independently moving units operate totally asynchronous environment motivation investigate coordination problems distributed asynchronous environment corda 
purpose study gain better understanding power distributed control algorithmic point view 
speci cally want understand kind goals set robots achieve minimal requirements capabilities order 
pattern formation problem problem extensively studied corda robots required form pattern input 
interesting problems usually studied robotics analyzed corda example problem initial formation robots keep moving destination problem robot follow intruder problem robots environment chase catch robot di erent 
issues merit research regard operating capabilities robots modeled corda 
fact interesting look models robots di erent capabilities 
instance totally non oblivious model unlimited amount memory robot 
alternatively equip robots just bounded amount memory semi obliviousness see added power useful solving problems unsolvable design faster algorithms ect self stability property oblivious algorithms 
features add model inspire study include giving dimension robots adding stationary obstacles environment adding possibility collision robots moving robots obstacles 
furthermore study robots kind direct communication introduce di erent kinds robots move environment intruder problem described 
limited range visibility obstacles limit visibility moving robots avoid push aside robots appear disappear scene clearly suggest algorithmic nature distributed coordination autonomous mobile robots merits investigation 
acknowledgment paola nicola santoro discussions comments helped writing 
ando suzuki yamashita 
distributed memoryless point convergence algorithm mobile robots limited visibility 
ieee trans 
robotics automation 
balch arkin 
behavior formation control multi robot teams 
ieee trans 
robotics automation december 
beni 
coherent swarm motion distributed control 
proc 
pages 
cao fukunaga kahng meng 
cooperative mobile robotics antecedents directions 
int 
conf 
intel 
robots sys pages 
durfee 
ignorance knowing just coordinate 
icmas pages 
santoro widmayer 
hard tasks weak robots role common knowledge pattern formation autonomous mobile robots 
isaac pages 
santoro widmayer 
distributed coordination set autonomous mobile robots 
ivs 
inaba 
fukuda 
principle decision making cellular robotic system 
proc 
ieee conf 
robotics autom pages 
matari interaction intelligent behavior 
phd thesis mit may 
murata 
self assembling machine 
proc 
ieee conf 
robotics autom pages 
parker 
design behavior multi robot teams 
journal advanced robotics 

achievable patterns number autonomous mobile robots 
technical report tr universit di pisa august 
sugihara suzuki 
distributed algorithms formation geometric patterns mobile robots 
journal robotics systems 
suzuki yamashita 
distributed anonymous mobile robots formation geometric patterns 
siam comput 

