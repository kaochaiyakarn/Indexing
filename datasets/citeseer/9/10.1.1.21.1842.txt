harvest information discovery access system mic bowman member technical staff transarc peter danzig assistant professor cs dept southern california darren hardy professional research assist cs dept colorado boulder udi manber professor cs dept arizona michael schwartz associate professor cs dept colorado boulder increasingly difficult effective internet information rapid growth data volume user base data diversity 
introduce harvest system provides scalable customizable architecture gathering indexing caching replicating accessing internet information 

tools gopher www easy publish browse information internet 
making effective information quite hard reasons difficult locate relevant information 
popular information leads network server bottlenecks 
current tools provide little support structured complex data 
harvest addresses problems set customizable tools gathering information diverse repositories building topic specific content indexes flexibly searching indexes widely replicating caching objects retrieved internet 
system mosaic ftp wais gopher information resources 
harvest permits flexible construction information services network information servers efficiently 
configured automatically collect summarize related objects internet large collection collect summarize hand annotate tiny specialized collection 
harvest automates tasks needed integrate information disparate repositories formats 
harvest architecture efficient internet servers network links measurements indicate harvest reduce server load network traffic index space requirements orders magnitude compared previous systems 

demonstration brokers harvest index servers called brokers 
demonstration brokers described 
note current harvest system uses index search engine optimized space efficiency search speed 
near indexers opposite tradeoff available 
networked information discovery retrieval software documents software documents index built cascading separate indexes combined index additional network server load 
indexes underscore scaling advantages topic specific indexing 
example query approximate locate agrep approximate match tool embedded harvest indexing system query general computer science technical reports index locates unrelated papers 
computer science technical reports 
index covers content summaries reports published variety formats ascii postscript dvi html 
content summaries support powerful searches titles abstracts covered previously existing cs technical report indexes offered monash university university indiana university karlsruhe 
current index possible harvest provides efficient distributed indexing architecture 
documents referencing santa fe institute time series competition data 
index demonstrates harvest structured indexing capability index addition supporting usual content summary index sfi time series broker allows users search time series 
generated script attached indexing process matches document content summary approximately regular expressions heuristically determine referenced time series 
pc software 
index demonstrates harvest ability incorporate information variety formats sources including high quality manually generated information sources 
indexed site uses somewhat different format harvest customizable extraction features collect indexing information site specific ways place information uniform format 
result effort quickly able incorporate high quality indexing information publically available pc software distributions 
index provides better search support general purpose software indexes archie contains conceptual descriptions focused collection information 
example searching batch programming language locate rap package archie locate object searched rap 
hav built gatherer translation scripts manually created indexing information formats including linux software map lsm format internet anonymous ftp archives ietf working group format 
broker lsm data data sites format warrant building broker 
world wide web home pages 
harvest recognize index www home pages documents available world wide web 
index content summaries html anchors links index captures content web sites having collect ev ery web document providing useful index lower cost incurred world wide web worm lycos 
browse search list available harvest servers including instances brokers object caches replication managers contacting harvest server registry 

technical overview system current indexing systems place unnecessary load information servers network links expensive object retrieval protocols gather indexing information coordinate information gathering 
harvest provides efficient means gathering distributing indexing information supports easy construction diverse types indexes 
illustrates harvest architecture 
harvest index gathering efficiency derives combination optimized gathering software flexible scheme sharing gathered information indexes need 
harvest gatherer collects indexing information broker provides incrementally indexed query interface gathered information 
brokers arranged various ways achieve flexible efficient network servers gatherer designed run provider site saving great deal server load network traffic 
gatherer access information provider network native ftp gopher protocols 
arrangement primarily useful interoperating systems run harvest software 
experiences server network inefficiencies discussed information shared brokers arrangement 
broker collect information build index widely distributed information 
gatherer feed information brokers saving repeated gathering costs 
brokers retrieve information brokers effect cascading indexed views broker query interface filter refine information broker 
harvest flexibility constructing diverse indexes derives customizable subsystems allow index builders control indexing information extracted indexed searched 
brokers communicate attribute value stream protocol called summary object interchange format delineates streams object summaries 
provide scalable access support harvest replicates indexes caches retrieved objects 
replication subsystem divide gathering process servers letting server index regional network distributing partial updates replicas 
client 
retrieve object access methods 
search query manager broker replication manager storage manager indexer registry object cache collector harvest architecture broker gatherer provider harvest provides top level broker called harvest server registry hsr registers information publicly accessible harvest gatherer broker cache replicator internet 
hsr useful constructing new brokers avoid duplication effort 
looking appropriate broker search time locate caches replicators 

subsystems harvest consists subsystems gatherer broker index search subsystem replicator object cache 
gatherer gatherer provides efficient customizable way collect indexing information 
discuss issue 
current indexing systems generate excessive load remote sites retrieve indexing information gopher ftp require heavyweight operations forking separate processes retrieve object 
current indexing systems cause excess network traffic retrieve entire objects discard information reaches indexing site retaining html anchors index example 
harvest gatherer addresses inefficiencies ways 
provider run harvest gatherer export content summaries public corpus information 
gatherer periodically scans new modified resources adds content summaries local cache 
summary objects retrieved gatherer cache single compressed stream requiring separate requests object 
providing remote access pre filtered incrementally updatable indexing information transmitting information single compressed stream improves efficiency network transmissions 
features reduce server network load orders magnitude building indexes 
gatherer addresses flexibility essence customizable information extraction system 
essence unnest presentation layer encodings compressed tar files constituent files recognize file extract information different ways depending file types 
example find author title lines latex documents symbols object code 
importantly allows users easily customize type recognition presentation unnesting candidate selection information extraction phases particular situations 

broker broker provides indexed query interface gathered information 
brokers retrieve information brokers incrementally update indexes 
broker records unique identifiers time live indexed object garbage collects old information invokes index search subsystem receives update query 
brokers provide facilities identify remove duplicates near duplicates 
broker gather objects directly broker bulk transfer protocol 
supports remote administration interface 

index search subsystem accommodate diverse indexing searching needs harvest defines general broker indexer interface accommodate variety search engines 
principal requirements backend support boolean combinations attribute queries support incremental updates 
variety different backends inside broker wais ingres 
hav developed index search subsystems harvest optimized different uses 
glimpse supports space efficient indexes flexible interactive queries nebula supports fast searches complex standing queries 
glimpse harvest demonstration brokers distributed harvest source distribution 
glimpse uses pointers adjustable sized occurrence blocks achieving space efficient indexes typically size data indexed compared case wais 
supports fast incremental indexing 
supports boolean regular expression approximate queries allowing misspellings 
nebula object represented set attribute value pairs 
separate index possibly separate indexing mechanism attribute tag 
nebula supports view notion involving standing query object database 
allows information filtered query predicates 
easy refine extend predicates time observe changes interactively 

replicator harvest provides weakly consistent replicated wide area file system called mirror top brokers replicated 
mirror layered atop hierarchical flooding group communication subsystem called flood 
mirror instance replication group occasionally floods complete state information immediate neighbors detect updates flood failed deliver possibly due network site failure failure flood process 
mirror implements eventual consistency new updates ceased replicas eventually converge 
flood logically floods objects group member group member graph managed flood 
flood instance measures network bandwidth achievable flood daemons running group member sites 
master site group constructs reliably distributes connected connected low diameter logical topology group members 
flood daemon belong groups making possible construct hierarchies groups independent groups sharing common members 

object cache meet increasing demand network links information servers harvest includes hierarchical object cache 
cache sends query datagrams neighbor parent plus icmp echo object home site chooses fastest responding server retrieve data 
caches gopher ftp objects plus dns name address maps 
runs single event driven process 
disk clients non blocking 
cache returns data clients soon bytes object fault way cache 
ease implementation cache spawns separate process retrieve ftp files retrieves gopher objects 
cache separately manages replacement objects disk objects loaded virtual address space 
keeps meta data cached objects virtual memory eliminate access latency meta data 
cache single threaded non blocking page faults source blocking 
cache uses ttl coherence 
clients request objects proxy interface 
measurements indicate cache runs approximately twice fast cern object cache distribution object retrieval times shorter tail cern cache 
object cache subsystem motivated part simulation study performed nsfnet backbone trace data 

software availability currently soliciting harvest beta test sites purposes running particularly large archive sites running topic specific brokers running caches particularly backbone networks regional networks stub networks campus corporate network 
interested beta test site please send mail cs colorado edu 
version harvest source code publically available middle october 

credits harvest designed built internet research task force research group resource discovery irtf rd 
irtf rd consists mic bowman peter danzig udi manber michael schwartz irtf rd chair 
darren hardy professional research assistant project 
students contributed project william chankhunthod de lucia gopal james allan paul shih hao li cheng che lue dave chuck neerdaels john noble john noll katia obraczka mark peterson kurt worrell 
irtf rd supported primarily advanced research projects agency additional support afosr hughes nsf sun 
information contained document necessarily reflect position policy government sponsors research 
official endorsement inferred 

name call system harvest focus growing crop internet information 
harvest initial focus resource discovery architecture encompasses general issue making effective information 
addition resource discovery includes view customizable information spaces ala nebula broker subsystem scalable access popular data ala harvest object cache object oriented style access information objects ala harvest object protocol reducing confusion information space filtering duplicate information currently progress 

bibliography current closely harvest home page rd cs colorado edu harvest home page continue evolve 
harvest system discussed depth mic bowman peter danzig darren hardy udi manber michael schwartz 
harvest scalable customizable discovery access system 
technical report cu cs department computer science university colorado boulder july 
harvest architectural motivations described mic bowman peter danzig udi manber michael schwartz 
scalable internet resource discovery research problems approaches 
communications acm pp 
august 
harvest gatherer customized information extraction capability supported essence system described darren hardy michael schwartz 
customized information extraction basis resource discovery 
technical report cu cs department computer science university colorado boulder march 
harvest index search subsystems glimpse system described udi manber sun wu 
glimpse tool search entire file systems 
proceedings usenix winter conference pp 
san francisco california january 
harvest index search subsystems nebula typed file system described mic bowman baruah bill 
file system information management 
proceedings conference intelligent information management systems washington dc june 
harvest replication subsystem described peter danzig katia obraczka 
massively replicating services autonomously managed wide area internetworks 
technical report university southern california january 
object cache subsystem motivated part simulation study performed nsfnet backbone trace data 
study described peter danzig richard hall michael schwartz 
case caching file objects inside internetworks 
proceedings sigcomm pp 
san francisco california september 
harvest object protocol described darren hardy allan dave john noble michael schwartz 
integrating complex data access methods mosaic www environment 
second international world wide web conference chicago illinois october 

author biographies mic bowman member technical staff transarc 
received ph computer science university arizona 
assistant professor pennsylvania state university 
research interests include descriptive naming systems local wide area file systems structured file systems resource discovery protocols remote computing 
bowman reached mic transarc com 
peter danzig assistant professor computer science university southern california 
received ph computer science university california berkeley 
current research addresses measurement performance debugging internet services distributed system architectures resource discovery flow admission control packet communication networks 
danzig reached danzig usc edu 
darren hardy professional research assistant computer science department university colorado 
received computer science university colorado boulder 
specializes network resource discovery distributed systems information retrieval 
hardy reached hardy cs colorado edu 
udi manber professor computer science university arizona 
received ph computer science university washington 
research interests include design algorithms pattern matching computer networks software tools 
manber reached udi cs arizona edu 
michael schwartz associate professor computer science university colorado 
received ph computer science university washington 
research focuses international scale networks distributed systems 
schwartz chairs internet research task force research group resource discovery irtf rd built harvest system 
schwartz reached schwartz cs colorado edu 
contact author mike schwartz schwartz cs colorado edu 
