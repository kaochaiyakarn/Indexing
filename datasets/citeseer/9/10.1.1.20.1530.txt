focus context technique hyperbolic geometry visualizing large hierarchies 
new focus context fisheye technique visualizing manipulating large hierarchies 
technique assigns display space portion hierarchy embedding context entire hierarchy 
essence scheme lay hierarchy uniform way hyperbolic plane map plane circular display region 
supports smooth blending focus context continuous redirection focus 
developed effective procedures manipulating focus pointer clicks interactive dragging smoothly animating transitions manipulation 
laboratory experiment comparing hyperbolic browser conventional hierarchy browser conducted 
keywords hierarchy display information visualization fisheye display focus context technique 
years information visualization research explored application interactive graphics animation technology visualizing making sense larger information sets practical 
recurring theme power focus context techniques detailed views particular parts information set blended way view structure set 
new technique called hyperbolic browser visualizing manipulating large hierarchies 
hyperbolic browser illustrated originally inspired escher shown 
salient properties figures components diminish size move outwards second exponential growth number components 
properties fisheye distortion ability uniformly embed exponentially growing structure aspects construction poincar mapping reprinted proceedings acm sigchi conference human factors computing systems denver may acm john lamping ramana rao peter pirolli xerox palo alto research center coyote hill road palo alto ca lamping rao pirolli parc xerox com organization chart 
hyperbolic plane originally attracted attention 
hyperbolic browser initially displays tree root center display smoothly transformed bring nodes focus illustrated 
cases amount space available node falls continuous function distance tree point center 
context includes generations parents siblings children making easier user explore hierarchy getting lost 
hyperbolic browser supports effective interaction larger hierarchies conventional hierarchy viewers complements strengths novel tree browsers 
pixel pixel window standard hierarchy browser typically display nodes character text strings 
hyperbolic browser display nodes nearest focus show original inspiration hyperbolic tree browser 
circle limit iv heaven hell escher art holland 
rights reserved 
printed permission 
changing focus 
dozens characters text 
hyperbolic browser display times nodes providing effective navigation hierarchy 
scale advantage obtained dynamic distortion tree display varying interest levels parts 
approach exploits hyperbolic geometry 
essence approach lay hierarchy hyperbolic plane map plane circular display region 
hyperbolic plane non euclidean geometry parallel lines diverge away 
leads convenient property circumference circle hyperbolic plane grows exponentially radius means exponentially space available increasing distance 
hierarchies tend expand exponentially depth laid hyperbolic space uniform way distance measured hyperbolic geometry parents children siblings approximately hierarchy 
hyperbolic plane mathematical object mapped natural way unit disk provides means displaying ordinary euclidean display 
mapping displays portions plane near origin space portions plane 
remote parts hyperbolic plane get amounts space near edge disk 
translating hierarchy hyperbolic plane provides mechanism controlling portion structure receives space compromising illusion viewing entire hyperbolic plane 
developed effective procedures manipulating focus pointer dragging smoothly animating transitions manipulation 
implemented versions hyperbolic browser run unix 
conducted experiment subjects compare hyperbolic tree browser conventional browser node location task 
statistically significant performance difference identified strong preference hyperbolic tree browser established number design insights gained 
problem related hierarchies organization charts directory structures large display entirety computer screen 
conventional display approach maps hierarchy region larger display uses scrolling move region 
approach problem user see relationship visible portion tree entire structure auxiliary views 
useful able see entire hierarchy focusing particular part relationship parts seen focus moved parts smooth continuous way 
number focus context display techniques introduced fifteen years address needs types information structures :10.1.1.11.9765
focus context techniques including document lens perspective wall sarkar applied browsing trees laid conventional layout techniques 
problem satisfactory conventional layout large tree exponential growth 
leaf nodes adequate spacing nodes near root placed far apart obscuring high level tree structure leaving nice way display context entire tree 
cone tree modifies approach embedding tree dimensional space 
embedding tree joints rotated bring different parts tree focus 
requires currently expensive animation support 
furthermore trees approximately nodes difficult manipulate 
hyperbolic browser dimensional relatively modest computational needs making potentially useful broad variety platforms 
novel tree browsing technique treemaps allocates entire space display area nodes tree dividing space node descendants properties node 
space allocated node filled properties node 
technique utilizes space efficiently look values patterns large collection values hierarchically tends obscure hierarchical structure values provides way focusing part hierarchy losing context 
conventional hierarchy browsers prune filter tree allow selective display portions tree user indicated 
problem context interesting portion tree displayed 
furnas introduced technique nodes tree assigned interest level distance focus node ancestors 
degree interest selectively display nodes interest local context 
technique quite powerful provide solution problem displaying entire tree 
contrast hyperbolic browser underlying geometry allows smooth blending focus context continuous repositioning focus 
bertin illustrates radial layout tree uniform shrinking size nodes distance root 
hyperbolic geometry provides elegant way doing addressing problems navigation 
fractal approach koike offers similar technique laying trees 
particular explored implementation combines fractal layout cone tree technique 
hyperbolic browser benefit focusing node shows node context directions ancestors siblings descendants 
fractal view rigid layout multiscale interfaces context lost viewpoint moved lower levels tree 
number projects visualize hyperbolic geometry including animated video moving hyperbolic space 
emphasis hyperbolic browser particular exploitation hyperbolic space information visualization 
don expect user know care hyperbolic geometry 
hyperbolic browser basics hyperbolic browser replaces conventional approach laying tree euclidean plane doing layout hyperbolic plane mapping unit disk straightforwardly mapped display 
change uniform tree depth branching factor nodes 
focus handled performing rigid transformation moving laid tree process 
layout performed 
space displaying node computed layout automatically transformed change focus 
implementation points transformations hyperbolic plane briefly discussed appendix 
rest section presumes implementation hyperbolic plane discusses higher level issues 
layout laying tree hyperbolic plane easy problem circumference area circle grow exponentially radius 
lots room 
recursive algorithm lays node local information 
node allocated wedge hyperbolic plane put descendants 
places children arc wedge equal distance far children minimum distance apart 
children gets sub wedge descendants 
way parallel lines diverge hyperbolic geometry child typically get wedge spans big angle parent wedge children wedges overlap 
layout routine navigates hyperbolic plane terms operations moving distance turning angle provided hyperbolic plane implementation 
shows layout uniform tree looks 
notice children node span angle near root larger wedge available initially 
get compact layout non uniform trees modify simple algorithm slightly siblings initial layout tree nodes poisson distribution number children 
origin tree center 
lots children get larger wedge siblings don wedge size grows logarithmically 
effect seen example children root get different amounts space 
tends decrease variation distances grandchildren grandparent 
option layout contrast examples far illustrated entire degree circle spreading children root node 
option children root put direction example right conventional layouts 
example option discussed appears 
mapping representation tree laid hyperbolic plane mapped way plane display 
barely imagine hyperbolic plane mention see 
canonical ways mapping hyperbolic plane unit disk 
vicinity hyperbolic plane focus center disk rest hyperbolic plane fades perspective fashion edge disk desire 
conformal mapping poincar model preserves angles distorts lines hyperbolic space arcs unit disk seen figures 
possibility projective mapping klein model takes lines hyperbolic plane lines unit disk distorts angles 
ways 
tried klein model 
points mapped near edge poincar model get mapped right edge klein model 
result nodes link node focus get screen real estate making hard perceive context 
new focus 
change focus user change focus clicking visible point bring focus center dragging visible point interactively position 
case rest display transforms appropriately 
regions approach center magnified regions center shrink moved edge 
shows tree different focus 
root shifted right putting focus nodes left 
changes focus implemented rigid transformations hyperbolic plane desired effect plane mapped display need repeat layout process 
change focus new node example implemented translation hyperbolic plane moves selected node location mapped center disk 
avoid loss floating point precision multiple transformations compose successive transformations single cumulative transformation apply positions determined original layout 
need mapped positions nodes displayed transformation needs computed nodes display size screen pixel 
yields constant bound redisplay computation matter nodes tree 
implementation translation fairly efficient require floating point operations translate point comparable cost rendering node screen 
node information property poincar projection circles hyperbolic plane mapped circles euclidean disk shrink size origin 
exploit property calculating circle display regions nodes 
hyperbolic plane node guaranteed intersect circle node 
circles mapped unit disk provide circular display region node tree display node 
combined uses different representations nodes depending amount real space receive 
shows tree display region node indicated 
preserving orientation orientation presents interesting issue hyperbolic browser things tend get rotated 
example nodes rotate display pure translation 
line doesn rotate farther nodes display line rotate 
seen series frames 
node labeled lowe example children fan upper right top frame ends children right bottom frame 
rotations reasonably intuitive translations origin 
drags near edge disk interpreted translations source destination drag display counter intuitive point dragged 
fundamental property causes problem 
usual euclidean plane graphical object dragged rotated keeps original orientation rotated 
true hyperbolic plane 
series translations forming closed loop preserving orientation line translation general cause rotation 
fact amount proportional area closed loop opposite direction direction loop traversed 
leads counter intuitive behavior user browses hierarchy experience different time putting children right 
revisit node translations 
address problems interpreting user manipulations combination direct translation points user specifies additional rotation point moved manipulations cumulative effects intuitive 
user perspective drags clicks move point user manipulating expect 
additional rotation appears natural designed preserve property user expects 
user need particularly aware rotation added 
promising principles adding rotations 
approach rotations added original root node keeps original orientation display 
particular edges leaving leave original directions 
preserving orientation root node means node currently focus orientation original image 
transformations examples far worked way 
give intuitive behavior individual drags cumulative effect drags 
approach taken explicitly preserve orientation 
node clicked bring focus display rotated children fan canonical direction right 
illustrated animation sequence 
approach aided children root node laid side node illustrated figures children root node fan canonical direction focus 
animated transitions demonstrated information visualizations animated transitions different views structure maintain object constancy help user assimilate animation compromised rendering 
changes views 
smooth continuous nature hyperbolic plane allows performing smooth transitions focus rendering appropriate intermediate views 
animation sequences generated called transition transformation rigid transformation applied times effect original 
successive applications nth root generate intermediate frames 
sequences generated way 
responsive display performance crucial animation interactive dragging 
problem large hierarchies standard hardware 
achieve quick redisplay compromising display quality motion 
compromises provide options system automatically adjusts rendering quality animation information visualizer governor 
fortunately compromises don significantly affect sense motion 
shows animation sequence compromises active intermediate frames 
specifically looked compromises typically go unnoticed motion 
compromise draw fringe 
full quality display routine stops drawing fringe gets pixel resolution 
animation pruning strengthened descendants nodes small border inside edge disk drawn 
tremendously increases display performance vast majority nodes close edge 
doesn significantly degrade perceptual quality moving display nodes occupy small fraction display part user typically focusing 
compromise draw lines arcs expensive display environments 
arcs give pleasing intuitive static display aren important animation 
appears case difference arcs lines isn apparent presence motion user attention motion tends focused near center display arcs straight 
possible compromise drop text animation 
significant distraction 
text display performance bottleneck 
evaluation laboratory experiment conducted contrast hyperbolic browser conventional scrolling browser horizontal tree layout 
subjects preferred hyperbolic browser post experimental survey significant difference browsers performance times task involved finding specific node locations 
study fueled iterative design process highlighted areas evaluation 
browsers study support user operations 
pointing provided feedback node cursor feedback area bottom window 
clicking moved point center 
grabbing visible point allowed interactive dragging tree window 
scrolling browser provides conventional scrollbars 
experiment task locating particular nodes world wide web hierarchies identified urls application intent web browser jump node 
particular task application adequate rough baseline evaluation problematic aspects 
typically task better supported query name alphabetical listing nodes 
furthermore www hierarchy breadth flattening network contained similarly named nodes hierarchy wasn strongly related semantic nesting 
pilot trials added browsers feature rotate names children pointed node feedback area jump current child 
added long text mode nodes allocated space threshold disregard boundaries display characters 
despite overlapping text leads text visible discernible screen see 
experiment subject design subjects tested effects practice 
significant difference time number user actions performing tasks browsers 
significant practice effect practice produced decrease number user actions required perform task hyperbolic browser long text mode world wide web hierarchy utilized laboratory experiment 
browsers practice effect task completion time browser 
practice effects differ significantly browsers 
post experimental survey showed subjects preferred hyperbolic browser getting sense tree structure finding specific nodes titles addition specific survey questions observations identified relative strengths weaknesses hyperbolic browser 
subjects liked ability see nodes mentioned ability see various structural properties better space 
amount text hyperbolic browser displays problem 
experimental task particularly sensitive problem length overlap urls ill structured nature www hierarchy 
long text mode introduced study subjects feature study preferring point parent rapidly rotate children larger feedback area 
problem areas mentioned subject hyperbolic browser provide weaker sense links location node space shapes changed 
layout canonical direction shown addresses problems may worsen second 
particular applications access ancestors root node particularly important layout easy find navigate nodes 
number refinements may increase value browser navigating learning hierarchies 
example landmarks created space utilizing color graphical elements painted gopher ftp links different colors 
possibilities providing visual indication nodes invisible resolution limit ladder multiscale graphical representations node display regions supporting user control trade node display region size number visible nodes packing 
effective variations application task dependent best explored design context 
hyperbolic geometry provides elegant solution problem focus context display large hierarchies 
hyperbolic plane room lay large hierarchies poincar map provides natural continuously graded focus context mapping hyperbolic plane display 
hyperbolic browser handle arbitrarily large hierarchies context includes nodes included approaches modest computational requirements 
evaluation study suggested technique valuable identified issues 
believe offers promising new addition suite available focus context techniques 
reviewers subjects colleagues suggestions prototype 
xerox seeking patent protection technology described 

bertin 
semiology graphics 
university wisconsin press 

coxeter 
non euclidean geometry 
university toronto press 

george furnas 
generalized fisheye views 
proceedings acm sigchi conference human factors computing systems pages 
acm april 

gunn 
visualizing hyperbolic space 
computer graphics mathematics pages 
springer verlag october 

johnson 
tree maps spacefilling approach visualization hierarchical information 
visualization pages 
ieee 

hideki koike 
fractal approaches visualizing huge hierarchies 
proceedings ieee symposium visual languages 
ieee 

leung apperley 
review taxonomy distortion oriented presentation techniques 
acm transactions computer human interaction june 

mackinlay robertson card 
perspective wall detail context smoothly integrated 
proceedings acm sigchi conference human factors computing systems pages 
acm april 


elementary geometry advanced standpoint 
addison wesley 

robertson card mackinlay 
cognitive coprocessor architecture interactive user interfaces 
proceedings acm siggraph symposium user interface software technology pages 
acm press nov 

robertson card mackinlay 
information visualization interactive animation 
communications acm 

robertson mackinlay card 
cone trees animated visualizations hierarchical information 
proceedings acm sigchi conference human factors computing systems pages 
acm april 

george robertson mackinlay 
document lens 
proceedings acm symposium user interface software technology 
acm press nov 

sarkar marc brown 
graphical fisheye views graphs 
proceedings acm sigchi conference human factors computing systems pages 
acm april 

sarkar marc brown 
graphical fisheye views 
communications acm december 

sarkar scott steven reiss 
stretching rubber sheet metaphor visualizing large structure small screen 
proceedings acm symposium user interface software technology 
acm press nov 

steven tang mark linton 
objects 
proceedings acm symposium user interface software technology 
acm press nov 
appendix implementing hyperbolic geometry poincar model underlying implementation hyperbolic plane translation underlying representation screen coordinates trivial 
represent point hyperbolic space corresponding point unit disk represented floating point complex number magnitude 
rigid transformations hyperbolic plane circle preserving transformations unit disk 
transformation expressed complex function form zt pz complex numbers jp complex conjugate transformation indicates rotation origin followed moving origin origin 
composition transformations computed due round error magnitude new may exactly 
accumulated errors magnitude lead large errors transforming points near edge normalize new magnitude 
aside graphics hardware fast support matrix multiplication faster klein model done rigid transformations expressed terms linear operations homogeneous coordinates 
display requires computing poincar mapping points represented klein model just matter recomputing distance origin rp rk 

