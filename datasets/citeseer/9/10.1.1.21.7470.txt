time constraints workflow systems johann eder panagos michael rabinovich labs research park avenue florham park nj eder acm org research att com 
time management critical component workflow process management 
important aspects time management include planning workflow process execution time estimating workflow execution duration avoiding deadline violations satisfying external time constraints fixed date constraints upper lower bounds time intervals activities 
framework computing activity deadlines process deadline met external time constraints satisfied 
dealing time time constraints crucial designing managing business processes 
consequently time management part core management functionality provided workflow systems control lifecycle processes 
build time workflow schemas developed defined workflow modelers need means represent time related aspects business processes activity durations time constraints activities check feasibility timing constraints contradict 
run time workflow instances instantiated executed process managers need pro active mechanisms receiving notifications possible time constraint violations 
workflow participants need information tasks assigned manage personal lists 
time constraint violated workflow system able trigger exception handling regain consistent state workflow instance 
business process re engineers need information actual time consumption workflow executions improve business processes 
controllers quality managers need information activity start times execution durations 
support time management workflow systems limited process simulations identify process bottlenecks analyze activity execution durations assignment activity deadlines triggering process specific exception handling activities called escalations deadlines missed run time 
furthermore research activities workflow time management exist literature 
comparison efforts section 
contributions include formulation richer modeling primitives expressing time constraints development techniques checking leave university klagenfurt austria satisfiability time constraints process build instantiation time enforcing constraints run time 
proposed primitives include upper lower bounds time intervals workflow activities binding activity execution certain fixed dates day month 
technique processing time constraints computes internal activity deadlines way externally deadlines met time constraints violated 
particular build time check workflow schema exists execution schedule violate time constraints 
result timed activity graph includes deadline ranges activity 
process instantiation time modify timed activity graph include deadlines date characteristics workflow started 
run time dynamically recompute timed graph remaining activities monitor satisfiability remaining time constraints activity completion times execution paths taken executed portion workflow instance 
remainder organized follows 
section describes workflow model discusses time constraints 
section presents workflow representation assume 
section presents calculations take place build time 
section shows calculations adjusted process instantiation take account actual date constraints 
section covers run time issues 
section offers comparison related section concludes presentation 
workflow model time constraints workflow collection activities agents dependencies activities 
activities correspond individual steps business process 
agents responsible enactment activities may software systems database application programs humans customer representatives 
dependencies determine execution sequence activities data flow activities 
consequently workflow represented workflow graph nodes correspond activities edges correspond dependencies activities 
assume execution dependencies activities form acyclic directed graph 
note propose new workflow model 
describe generic workflow representation presenting 
particular assume workflows structured 
structured workflow consists sequential activities tm activity primitive activity decomposed composite activity consists parallel conditional unconditional sub activities sub activity may primitive composite 
typically structured workflows generated workflow languages provide usual control structures adhere structured programming style workflow definitions 
addition assume activity duration assigned 
simplicity assume activity durations deterministic 
time expressed basic time units build time relative start workflow run time calendar time 
time constraints follow implicitly control dependencies activity durations workflow schema 
arise fact activity start predecessor activities finished 
call constraints structural time constraints reflect control structure workflow 
addition explicit time constraints specified workflow designers 
constraints derived organizational rules laws commitments 
explicit constraints temporal relations events bindings events certain sets calendar dates 
workflow systems events correspond start activities 
temporal relationships events constraints exist lower bound constraint duration events greater equal ffi 
write lbc ffi express ffi lower bound timeinterval source event destination event upper bound constraint distance events smaller equal ffi 
write ubc ffi express ffi upper bound time interval source event destination event example lower bound constraint includes legal workflow activities serving warning closing business requirement certain time period passes serving warning closing business 
example invitation meeting mailed participants week meeting 
upper bound constraints common 
requirement final patent filing done certain time period preliminary filing time limits responses business letters guaranteed reaction times report hardware malfunction provide typical examples upper bound constraints 
express constraints bind events sets particular calendar dates need provide abstraction generalizes typically infinite set dates monday fifth month 
examples constraints include vacant positions announced wednesday month loans usd approved scheduled meetings board directors inventory checks finished december st 
fixed date type fixed date type data type methods valid returns true arbitrary date valid prev return respectively previous valid dates period returns maximum distance valid dates dist returns maximum distance valid dates period default value 
fixed date constraint event occur certain fixed dates 
write fdc fixed date express fact occur dates valid remainder assume fixed date constraint associated activity 
workflow representation techniques time constraint management notion timed activity graph 
graph essentially workflow graph finish time name activity activity duration earliest latest finish time fig 

activity node timed workflow graph fig 

example timed workflow graph activity node augmented values represent termination time points activity executions earliest point time finish execution 
latest point time finish order meet deadline entire workflow 
shows representation activity node timed workflow graph 
explicit time constraints values computed critical path method cpm known project planning method frequently project management software 
cpm assumes activity durations deterministic 
aware assumption hold workflows workflows technique dealing probability distribution activity durations project evaluation review technique pert appropriate 
chose cpm allows concept clearly math involved probability distributions 
shows timed workflow graph rest 
interpretation values follows 
earliest point time activity activity durations assumed deterministic need represent activity start points 
time points computed subtracting activity durations activity termination times 
terminate time units start workflow 
finished time units start workflow duration entire workflow extended 
activity activity workflow earliest latest completion times 
means entire workflow duration time units 
distance value value activity called buffer time 
example activity buffer time units 
buffer exclusively available activity shared activities 
example buffer shared uses buffer time buffer reduced 
computing timed workflow graph delivers duration entire workflow deadlines activities termination entire workflow delayed 
incorporating explicit time constraints timed activity graph explained detail 
simplicity consider constraints events activities 
shortcut say activity meaning event activity participates constraint 
additional properties representing workflow activities represents activity duration pos represents activity start internal node workflow pred represents predecessors succ successor activities deadline holds externally assigned deadline tt actual termination time activity instance 
upper lowerbound constraint represent source activity destination activity bound ffi 
fixed date constraint write activity posed fixed date 
assume structured workflows remainder assume upper lower bound constraints source node destination node ordering implied workflow graph 
build time calculations build time goal check set time constraints satisfiable possible find workflow execution satisfies timing constraints 
start original workflow graph construct timed workflow graph execution exists satisfies constraints 
initially fixed date constraints transformed lower bound constraints 
values activity nodes timed graph computed activity durations lower bound constraints straightforward modification cpm method 
upper bound constraints incorporated timed graph 
resulting timed graph possibly distinct valid executions 
executions obtained activities complete values activities complete values 
may valid combinations activity completion times ranges 
say timed graph satisfies constraint executions activities complete values valid respect constraint 
fixed date constraints conversion fixed date constraints lower bound constraints done worst case estimates 
build time calendar value start workflow information duration valid time points fixed date object 
process instantiation time information concerning actual delays due fixed date constraints 
consider fixed date constraint fdc 
assume activities start instantaneously predecessors finish 
worst case activity may finish period predecessor activity finishes 
valid dates maximum time interval 
gamma period predecessor activity finish 
time interval events longest finishes just time gamma start immediately finish valid date wait time gamma starting 
case distance ffi gamma period assuming fixed date constraint associated 
fixed date constraint fdc similar reasoning obtain ffi dist dist ffi period 
guarantee satisfiability time constraints build time knowing start date process timed graph allow distance ffi predecessors ffi computed predecessor shown 
consequently fixed date constraint fdc replaced lower bound constraint lbc ffi predecessor activity lower bound constraints construction timed workflow graph includes structural lower bound constraints 
note due way carry computations activities resulting graph satisfy lower bound constraints 
forward calculations activities pos start endfor activities pos start topological order max fb fm ffi lbc ffi endfor backward calculations activities pos endfor activities pos reverse topological order min fs fm ffi lbc ffi endfor fig 

incorporating upper bound constraints upper bound constraints timed workflow graph constructed previous step upper bound constraint ubc ffi violated ffi ffi case buffer times increase value decrease value attempt satisfy constraint 
buffer time availability necessary sufficient condition satisfying upper bound constraint 
example workflow graph shown upper bound constraint ubc satisfied value increased amount necessary condition constraint ubc ffi satisfiable distance ffi 
distance sum durations activities longest path computed forward backward calculations previous section starting node node 
note structured workflows distance change deadline entire workflow relaxed buffer available activity 
consequently extending deadline workflow help satisfying violated upper bound constraints 
show node buffer buffer buffer reduced influencing values values node min buffer gamma buffer buffer gamma buffer 
finding safe value buffer point constraint reduced affecting values point follow constructive approach 
upper bound constraint violated set value source node value gamma ffi 
value greater upper bound constraint violated 
recompute values timed graph starting value change constraint satisfied 
similar way decrease value destination node ffi value recompute values predecessors value change constraint satisfied 
individual upper bound constraints handling multiple upper bound constraints 
shows example demonstrates problem 
shows starting timed graph 
shows timed graph integration ubc 
ubc integrated ubc violated values shown 
shows successful integration constraints 
address problem checking incorporated upper bound constraint violated new upper bound constraints incorporated timed graph 
unoptimized algorithm summarizes procedure 
algorithm re computation timed graph involves forward backward computations previous section 
repeat error false ubc ffi ffi ffi slack ffi recompute timed graph changes error true endif error true endif endif ffi ffi slack ffi recompute timed graph changes error true endif error true endif endif endfor error true changed algorithm incorporation upper bound constraints properties 
termination algorithm terminates 
loop node increased decreased unit 
finite number nodes eand values bound algorithm terminate 

admissibility solution exists timed graph satisfying constraints 
upper bound constraint ffi gamma ffi equal ffi greater equal timed graph satisfying constraints 
set values know algorithm terminates conclude algorithm compute solution exists 

generality algorithm finds general solution exists 
timed graphs differ values 
call general activity condition holds ag ag ag ag discussion admissibility easy see timed graph generated algorithm general timed graph satisfying constraints 

complexity worst case complexity algorithm number upper bound constraints largest buffer number activities 
give upper bound number iterations algorithm follows iteration value increased value decreased unit 
upper bound constraints largest buffer number iterations worst case 
recalculation linear number nodes 
calculations process instantiation time process instantiation time actual calendar order transform time information computed relative start workflow absolute time points 
possible procedure set deadline value activity increase decrease buffers computed build time 
calculations performed build time deadline activity valid greater equal fixed date constraints resolved process instantiation time rely absolute time points 
worst case estimates constraints build time 
computations take place process instantiation time assuming variable start corresponds start time workflow instance 
forward calculations activities pos start start endfor activities pos start topological order max fb fm ffi lbc ffi exists dc fdc dc endif endfor backward calculations activities pos deadline raise exception deadline endfor activities pos reverse topological order min fs fm ffi lbc ffi exists deadline deadline deadline endif exists dc fdc dc prev endif raise exception endif endfor incorporation upper bound constraints incorporate repeat error false ok true ubc ffi ffi ffi ok false exists dc fdc dc endif error true endif endif ffi ffi ok false exists dc fdc dc prev endif error true endif endif endfor ok false error false error recompute endif error true ok true timed graph re computation recompute activities topological order max fb fm ffi lbc ffi exists dc fdc dc endif return false endif endfor activities reverse topological order min fs fm ffi lbc ffi exists dc fdc dc prev endif return false endif endfor return true possibility optimizing re computation procedure starting node value changed 
additional overhead associated 
algorithm incorporating upper bound constraints timed graph properties corresponding section 
time management run time general computations execution workflow instance ensure deadlines missed time constraints attached activities violated 
order achieve may delay execution activities sources upper bound constraints destinations lower bound constraints 
shows workflow segment having upper bound constraints ubc ubc 
example ends ends start upper bound constraint violated 
immediately start execution activity source upper bound constraint advantageous delay enactment remaining activities buffer 
example starts finish buffer activities reduced 
particular buffer available finish values satisfy upper bound constraints 
selecting optimal delay value activity part going 
furthermore existing distributing available buffer slack times activities avoid time exceptions assign deadline corresponds algorithm 
buffer distribution addresses distribution extra buffer time results assignment workflow deadline greater values activities successors 
slack distribution addresses distribution slack time available activities finish values 
fig 

workflow segment ubc ubc algorithm assumes activities finish interval defined values implies termination activity delayed value 
allowing activities finish values subject going 
activity finishes interval may recompute timed graph re incorporate upper bound constraints modifying values ready activities buffer slack distribution algorithm 
addition re computation timed graph values active activities computing values order avoid upper bound constraint violations 
tt tt actual termination time tt tt done false source lower bound constraint recompute incorporate done true endif succ ready execution source upper bound constraint done false recompute incorporate endif assign deadline recompute incorporate done true assign deadline done false endif launch execution endfor invoke escalation process deadline missed endif schedules execution workflow instance procedures requires recomputation timed graph completion activity source lower bound constraint successor source upper bound constraint 
avoid re computations sacrificing flexibility timed graph 
recall timed graph specifies ranges activity completion times exists combination activity completion times satisfies timing constraints completion time range activity 
runtime re computation required completion time finished activities observed completion times ranges remaining activities continue valid 
define schedule restrictive timed graph combination activity completion times ranges satisfies timing constraints 
words schedule violations time constraints occur long activity finishes time interval 
consequently long activities finish ranges timed graph re computation needed 
activity finishes outside range schedule remaining activities recomputed 
follows directly schedule definition upper bound constraint ubc ffi ffi lower bound constraint lbc ffi ffi reverse true timed graph satisfies properties schedule compare property inequalities incorporated timed graph section 
way compute values activities timed workflow graph values qualify schedules 
consequently workflow activity finishes execution value need check time constraint violations 
true activities finish execution values 
development algorithms computing schedules various characteristics subject ongoing research 
related area handling time related issues detecting potential problems build instantiation run time received adequate attention workflow literature 
existing workflow systems offer limited abilities handle time 
example support assignment execution durations deadlines business processes activities monitor deadlines met 
ontology time developed identifying time structures workflow management systems 
propose usage event condition action eca model active database management system dbms represent time aspects workflow environment 
discuss special scheduling aspects basic time failures 
parts definitions basis concept 
authors propose static data escalation costs statistical data average activity execution time probability executing conditional activity run time information agent list length adjust activity deadlines estimate remaining execution time workflow instances 
run time address explicit time constraints 
proposes integration workflow systems project management tools provide functionality necessary time management 
project management tools allow modeling explicit time constraints means resolution 
authors extension net diagram technique pert compute internal activity deadlines presence sequential alternative concurrent executions activities 
technique business analysts provide estimates best worst median execution times activities fi distribution compute activity execution times shortest longest process execution times 
having done time constraints checked build time escalations monitored run time 
extends providing technique handling structural explicit time constraints process build instantiation times enforcing constraints run time 
notion explicit time constraints introduced 
focused formulation time constraints workflow definitions enforcement time constraints monitoring time constraints run time escalation time failures workflow transactions 
follows described extends incorporation explicit time constraints workflow schedules 
dealing time time constraints crucial designing managing business processes 
proposed modeling primitives expressing time constraints activities binding activity executions certain fixed dates day month 
time constraints activities include lower upper bound constraints 
addition techniques checking satisfiability time constraints process build process instantiation time enforcing constraints run time 
techniques compute internal activity deadlines way externally assigned deadlines met time constraints satisfied 
risk missing external deadline recognized early steps avoid time failure taken escalations triggered earlier costs lower 
immediate focuses pert net technique computing internal deadlines express deviations average execution duration activities addressing conditionally repetitive executed activities providing execution probabilities estimate average duration variance workflow executions considering optional activities pruning workflow graph activities eliminated avoid time exceptions addressing different duration values build time best average worst case execution times turn times include time activity spends list time start activity 

bussler 
workflow instance scheduling project management tools 
th workshop database expert systems applications dexa vienna austria 
ieee computer society press 


workflow 
cse systems computer software engineering gmbh klagenfurt austria 

cse systems homepage 
www february 

eder liebhart 
workflow management system 
dogac editor advances workflow management systems interoperability 
springer istanbul turkey august 

eder liebhart 
workflow transactions 
lawrence editor workflow handbook 
john wiley 

johann eder heinz walter liebhart 
timing issues workflow management systems 
technical report institut ur informatik systeme universit klagenfurt 

flow 
collaborative workflow system way people 
box fin helsinki finland 

inconcert 
technical product overview 
division xerox 
avenue palo alto ca 
www com 

heinrich jasper olaf 
bei der modellierung und von workflows 
jablonski liebhart editors und volume proceedings reihe der informatik pages oldenburg 

leymann roller 
business process management flowmark 
proceedings th ieee computer society international conference pages san francisco california february 
www software ibm com workgroup 

panagos rabinovich 
escalations workflow management systems 
dart workshop rockville maryland november 

panagos rabinovich 
predictive workflow management 
proceedings rd international workshop generation information technologies systems ilan israel june 

panagos rabinovich 
reducing escalation related costs wfmss 
dogac editor nato advanced study workflow management systems interoperability 
springer istanbul turkey august 

philipose 
operations research practical approach 
tata mcgraw hill new delhi new york 

eder liebhart 
extending pert workflow management systems 
symposium advances database information systems adbis st petersburg russia sept 

heinz 
von zeit workflow modellierung und integration 
master thesis university klagenfurt 

sap germany 
sap business workflow help 
part sap system 


workflow suite 
business workflow automation 
waters edge dr suite raleigh nc 
www com 
