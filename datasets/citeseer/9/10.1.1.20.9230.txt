optimizing partially ordered transport services multimedia applications paul amer phillip conrad computer information science department university delaware newark de usa email amer cis udel edu introduce transport protocol ers partially ordered service multimedia applications :10.1.1.20.9230
investigates selection linear extension ects system performance partially ordered service 
rst show howto identify better linear extensions partial order determine performance gains linear extensions time transmission 
quantify linear extensions partial order propose new metric pbuf metric derived bu ering probabilities 
pbuf metric complex calculate simpli ed version called metric investigated 
simulation shows certain partial orders linear extension optimized metrics provides delay signi cant bu er utilization improvements non optimal linear extension 
prudent transmission order selection partially ordered service improve system performance 
results show general metric ective metric identifying better linear extensions partial order 
computer networks traditionally er ordered tcp unordered udp transport service 
applications need ordered service tolerate reordering delivery objects 
degree reordering speci limits applications problems result application layer increased complexity increased bu ering loss synchronization 
applications ordered unordered service perfect ordered service insists delivering data sequence results higher delays bu er utilization 
unordered service hand minimizes delay bu er utilization provides order guarantees 
application order constraints uses unordered transport service application programmer burdened task implementing mechanisms object ordering 
achieve better tradeo order quality service qos parameters satisfy minimal order requirements applications partially supported part national science foundation ncr army communication electronics command ft army research ce daah daal department army army research laboratory cooperative agreement daal federated laboratory consortium 
ordered transport service proposed :10.1.1.20.9230
partially ordered service lls gap ordered unordered service allowing multimedia applications specify delivery order objects form partial order 
partially ordered service insist delivering objects sequence provide lower delays bu er utilization ordered service time guaranteeing multimedia application partial order requirements 
analytic results show particular network conditions partially ordered service provides delay bu er utilization bu ering time improvements ordered service 
partially ordered service partial order potentially valid orderings objects linear extension permitted transmission order 
results show actual choice linear extension transmission time ects degree improvement di erent performance statistics delay bu er utilization bu ering probabilities 
general performance improves distance dependent objects sender transmission order increases 
results suggest set network conditions exists optimal set equally optimal linear extension result lowest bu er utilization lowest delay investigates ways identifying optimal near optimal linear extensions ects system performance linear extensions transmission order 
unfortunately current state art determining optimal linear extension requires performing simulation experiment possible linear extension partial order considered 
clearly impractical 
rst investigate identify near optimal linear extensions practical way 
propose new metric pbuf metric means quantifying linear extension goodness 
metric bu ering probabilities derived analytic results 
pbuf metric complex expression propose metric metric simpli ed version pbuf metric easier compute 
optimizing linear extensions metrics investigate way simulation signi cance performance improvements obtained near optimal linear extensions suboptimal ones 
results helpful users partially ordered services deciding worthwhile seek near optimal linear extensions transmission order 
compare performance gains occur linear extension optimized pbuf metric metric 
results helpful deciding metric practice nding linear extensions 
organized follows section motivates partially ordered service example applications 
pbuf metric metric introduced section simulation study section 
section summarizes main results discusses 
partially ordered service 
introduce development motivation partially ordered protocol service including examples :10.1.1.20.9230
completeness summary screen refresh consider application screen refresh workstation screen display containing multiple windows see 
refreshing screen remote source objects icons video images overlap refreshed bottom top optimal redisplay ciency 
objects overlap may order 
way inwhich windows overlap induces partial order 
consider cases 
sender wishes refresh remote display contains active windows objects named 
assume windows transmitted numerical order receiving application refreshes windows soon transport layer delivers 
windows con gured seen ordered service referred fifo channel required 
case ordering permitted destination 
window received window transport layer bu er window deliver window arrives delivered 
extreme windows con gured unordered service su ce 

delivery orderings satisfy application windows refreshed order 
orderings represents linear extension le partial order po 
notation ordered objects written unordered objects written parallel operator jj jj jj means dependency relation objects 
figures demonstrate window con gurations call partial order delivery service 
cases linear extensions respectively permitted destination 
partially ordered service remote document retrieval describes prototype system retrieval display documents remote server partial order connection version partially ordered partially reliable transport protocol providing coarse grained synchronization support 
system multimedia documents temporal characteristics described prototype multimedia speci cation language pm sl 
language gives author ability express synchronization order reliability requirements objects temporal multimedia document 
application serving documents extract order reliability synchronization requirements speci cation communicate transport layer provides necessary support 
simpli es application development document display client need contain complex mechanisms object synchronization reordering 
allows graceful degradation document perfectly network conditions allow perfect acceptable manner network service degrades 
partial order partial reliability ordered reliable unordered unreliable service allows better qos tradeo order reliability parameters delay bu er utilization throughput 
software parses encodes document transmission chooses linear extension partial order transmission order 
choosing linear extension various factors considered including duration individual multimedia objects synchronization relationships impact performance 
development techniques determining relative performance various linear extension alternatives useful development systems 
choice linear extension matter 
partially ordered service transport sender permitted transmit objects order violate partial order 
results show choice linear extension le sender signi cant impact expected performance 
general distance dependent objects increases expected performance improves 
intuitively result partial reliability refers notion individual objects may di erent qos requirements respect loss may require guaranteed loss transport service best ort transport service may su ce 
partially reliable transport service provides middle ground loss tolerance object speci ed individually 
consider partial order partial reliability juxtaposition focus solely partial order :10.1.1.20.9230
explained follows objects partial order po increasing separation expected time bu ered due network loss decrease 
illustrated depicts scenario objects rst transmission fails 
example scenario le bcde po jj bu ers objects longer le po 
notice le improvement provided increasing distance objects simple scenario scenario rst transmission fails easy nd better les 
hand possibility losing objects considered identifying linear extensions importantly optimal linear extensions di cult 
timeout period le sender retransmission receiver buffer partial order deliver deliver buffer deliver buffering time le sender retransmission receiver deliver buffer deliver buffer deliver di erent linear extensions result di erent bu ering times buffering time nd optimal le maximizes system performance 
possible way simulating linear extension choosing best performance 
obviously impractical time needed simulate le po 
small po just objects upto linear extensions 
nd le reasonable time propose new metrics pbuf metric metric designed predict expected performance di erent linear extensions pos 
les po better determined comparing pbuf metric metric values simulation result values 
predictors extremely useful transport sender selecting better transmission order 
metrics bu ering probabilities derived analytic results 
metrics hope identify le po results improved optimal system performance 
metrics consider ects di erent system parameters loss rate bu er sizes quantifying goodness linear extension transmission order 
simulation study section linear extensions optimized metrics 
metric quantifying linear extensions pbuf metric ideal metric nding le minimizes bu ering probabilities function bu ering probabilities 
unfortunately exact expression bu ering probabilities rst metric proposed entitled pbuf metric approximation average bu ering probabilities 
pbuf po le bu ering probability object po le approximated follows po le po pbuf le pbuf le probability object received object constant network delays constant object sizes random bernoulli packet ack losses relatively large receiver bu er size pbuf le computed psb le le buf buf remainder le buf le buf buf le dist le le buf buf le 
le buf buf buf le dist le buf le pbuf le psb le psb le probability transmissions object preceding rst transmission object fail le distance objects linear extension le packet ack loss rates respectively buf sender bu er size 
total number objects po 
proposed pbuf metric de ned follows pbuf metric po le po pbuf le pn pbuf po le pbuf metric approximates average bu ering probabilities le distance objects linear extension le de ned seq seq seq returns assigned sequence number object linear extension le 
linear extension le po transmission order 
characteristic pbuf metric discover le set les po achieves low bu ering probabilities system 
deciding linear extensions po smaller pbuf metric value expect smaller bu ering probabilities possibly performance advantages 
pbuf metric de ne extreme les po pbuf best le po buf linear extension po best minimal pbuf metric value system parameters 
pbuf worst le po buf linear extension po worst maximal pbuf metric value system parameters 
theoretically pbuf best le pbuf worst le considered les expected result lowest highest bu ering probabilities system respectively 
actual practice may case pbuf metric approximation bu ering probabilities limiting assumptions derivation analytic model results constant network layer delay may limit ectiveness metric 
hand pbuf metric derived directly analytic results expect indicator expected performance 
pbuf best le expected near optimal les optimal performance gain le pbuf worst le expected close maximal performance gain possible le 
theorem po am ai partial order pbuf best le po concatenation pbuf best les ais 
theorem useful determining pbuf best les certain types pos 
theorem shows partial order po composed component partial orders chained nd pbuf best le po concatenating pbuf best les component partial order 
proof theorem 
general linear extensions partial order di cult nd pbuf best le po 
number linear extensions po increases general exponentially size po 
harder nd pbuf best le larger partial order 
theorem signi cantly reduces time nd pbuf best le po po composed smaller partial orders chained 
particular theorem useful nding pbuf best les periodic partial orders 
periodic po de ned partial order repeating number times 
periodic pos represented base partial order concatenated times 
notice periodic partial order optimized nding pbuf best le just period 
simulation study section periodic partial orders optimized result theorem 
linear sum concatenation operator pos de ned simpli ed version pbuf metric metric pbuf metric strong indicator expected performance linear extension optimization problematic expression complex 
di cult investigate algorithmic aspects le optimization pbuf metric closed form expression 
secondly time needed computation pbuf metric may signi cant nite summation expression 
consider approximation simpli cation pbuf metric easier compute 
new metric entitled metric de ned follows dist metric po le le po 
metric derived pbuf metric follows buf expression reduces pbuf le dist le see notice network loss computational details 
rate 
buf pbuf metric po le metric 
term expression depend linear extensions les erence include computation deciding le better 
buf metric pbuf metric result best les 
metric provides simpler expression investigating better linear extensions po 
metric de ne types les po best le po linear extension po minimal metric value value 
worst le po linear extension po maximal metric value value 
simulation study section determine ective metric nding linear extensions partial order 
carry study comparing performance best le pbuf best le 
simulation study analytic study expect certain circumstances partially ordered service ordered service provide valuable performance improvements 
additionally circumstances optimal le transmission order maximize expected improvements 
section ways identifying near optimal les proposing pbuf metric quantifying goodness linear extension 
section metric introduced alternative complex pbuf metric 
point important questions answered assuming advantage partially ordered service just additional performance improvement gained optimal near optimal le vs suboptimal le 
metric predicting goodness linear extension metric ective metric 
sec tion try answer questions way simulation 
rst introduce performance statistics partial orders simulation study 
performance statistics partially ordered service table de nition performance statistics throughput rate packets delivered receiving application packet delay tend average packet delay standard deviation packet delay bu ers receiver bu average number bu ers receiver table de nes set performance statistics partially ordered service 
throughput rate receiving application gets data packets 
endto packet delay average time packet reach receiving application sending transport entity 
applications real time audio video lower delay important higher throughput 
standard deviation packet delay 
multimedia applications generally consist di erent streams video audio objects need synchronized 
generally variation delays smaller ner synchronization di erent streams objects achieved 
helps quantify system jitter 
fi nally expected bu ers receiver bu indicates average memory resources utilized receiver 
general desirable higher lower bu partial orders experiments exists large number partial orders experiments 
partial orders chosen classi ed classes chain singleton parallel streams random partial orders 
rst classes derived multimedia applications help evaluate question choosing linear extensions practical situations 
random partial orders suggested real application solely gaining mathematical insight linear extension selection 
random pos generated methods discussed 
figures chain singleton parallel streams pos simulation experiments 
po characterized po value density denoted dens po gures 
density po metrics previously proposed complexity measures di erent partially ordered services :10.1.1.20.9230
po number linear extensions po 
po de ned log po log :10.1.1.20.9230
similarly total number restrictions po total number edges transitively closed precedence graph 
de ne density 
general imagine po 

dens po po dens po po dens po po 

dens po po dens po po dens po po chain singleton pos 


dens po po 
dens po po 
dens po po dens po po 
dens po po 
dens po po 

dens po po 
dens po po parallel streams pos dens po po 
dens po po dens po po 

dens po po dens po po lower density provides better performance po higher density 
similarly apo larger po value expected result better performance lower po value 
shows metrics equally ective quantifying partially ordered services 
simulation study section investigate performance improvements optimal les di erent densities 

chain singleton pos partial orders contain chain set singletons see 
pos represented components composed parallel cm jj chain singleton components respectively 
consider multimedia application opens welcome message concurrently paints screen non overlapping objects 
welcome message represented word sentence separate object 
objects put screen arrive network identi ed singletons antichain 
general application contains audio video stream parallel independent objects displayed represented partial order class 

parallel streams pos partial orders composed multiple streams parallel see 
pos represented jj si sm stream 
multimedia applications contain independent streams parallel represented class partial orders 
addition chain singleton parallel streams pos introduces classes partial orders motivated multimedia applications chain antichain antichain chain pos 
turns les ofa chain antichain antichain chain partial order result identical system performance 
pos best worst le 
reason experiments performed partial orders 
simulation experiments simulation answer questions 
conditions partially ordered service useful pbuf best le provide signi cant performance improvement pbuf worst le 
answer conclude possible near optimal les partial order transmission order 
answer terms system performance matter le transmitter chooses 
section addresses question 

assuming answer rst question close system performance obtained best le pbuf best le 
system performance close conclude metric simpler compute metric identifying near optimal 
section addresses question 
university delaware protocol engineering lab built simulation model investigate questions 
optimize network engineering tools comprehensive engineering system capable simulating large communication networks detailed protocol modeling performance analysis :10.1.1.20.9230
simulation model veri ed detailed code inspection debugging ii comparing results analytic model possible iii designing set experiments hypothesizing expected results running experiments verifying results expected 
simulation model veri cation phase results bu generally analytic model results experiment repeated times objects 
current study simulation experiment repeated times objects 
existed large number independent system parameters loss rates bu er sizes study experiments 
impractical exhaustively simulate millions possible system con gurations 
study focused important parameters partial orders network layer delays loss rates bu er sizes 
parameters tried simulate reasonable range values 
example studying ects network simulated loss levels ranging higher loss rate practical networks 
simulation study involves sets experiments 
base values experiments table 
experiments sender receiver bu er table base values experiments partial order chain singleton po way network layer delay normal loss rate number sender receiver bu ers size refers bu er space store packet 
additionally network layer delays generated normal distribution unit times 
similarly packet ack transmission times normalized unit time 
timeouts retransmissions set mean roundtrip delay rt plus twice standard deviation rt timeout values larger mean rt avoid unnecessary retransmissions packets due late returning acks 
experiments change parameter table study ects performance improvements pbuf best le best le 
parameters studied experiments experiment partial orders pos figures random pos experiment way network layer delay distribution normal experiment loss rates experiment number sender bu ers experiments periodic pos objects periods 
network layer experiments modeled bernoulli process 
additionally constant object sizes 
general po variable object sizes obtain equivalent po constant object size breaking large objects smaller ones chained 
xed object sizes experiments limit ectiveness results 
sets experiments show throughput una ected choice linear extension sender bu ers receiver 
experiments equal bu er sizes sender receiver experiments focus improvements performance statistics packet delay standard deviation packet delay bu er utilization receiver 
throughput results experiment 
important near optimal les pbuf best le vs pbuf worst le 
section determine signi cance performance improvements obtained choosing near optimal les 
carry study comparing performance pbuf best le pbuf worst le experiments 
pbuf best le may optimal comparing pbuf best le pbuf worst le bound potential improvements le 
simulation results graphs figures 
graphs illustrate bu versus system parameters densities pos network layer delays loss rates sender bu er sizes pbuf best le pbuf worst le 
graphs corresponding curves pbuf best le pbuf worst le labeled respectively 
set graphs corresponding table figures summarizes percentage improvements performance statistics 
table vertically divided parts 
left column introduce system parameter studied corresponding experiment 
right columns percentage improvements various performance statistics pbuf best le pbuf worst le corresponding system parameter value simulated 
example consider table 
table introduces percentage improvements parallel streams pos experiment 
entry density interpreted follows application order requirements represented po conditions table packet delay reduced pbuf best le transmission order pbuf worst le 
buffers receiver packets experiment di erent pos average packet delays unit time base density base density standard deviation packet delays base density experiment chain singleton pos po base dens tend tend bu rst set experiments simulate chain singleton pos parallel streams pos random pos 
experiments quantify ects pos performance gains optimal les 
buffers receiver packets average packet delays unit time base density base density standard deviation packet delays base density po base dens tend bu experiment parallel streams pos graphs figures introduce bu vs base den sity curves chain singleton parallel streams random pos respectively 
general order constraints density increase system performs worse 
endto delay increases variable bu er requirements increase 
performance pbuf best le better pbuf worst le signi cantly better 
tables figures highlight corresponding percentage gains pbuf best le pbuf worst le 
chosen les small pbuf metric values provide signi cant bu er utilization improvements poor ones 
bu improvements roughly base density po 
additionally pbuf best le provides improvements pbuf worst le pos having base densities 
general near optimal les provide smaller delay improvements bu er utilization improvements 
intuitively dominant factors packet delay standard deviation network layer delay retransmissions due packet ack losses reduced base density de ned density just period periodic partial order 
better transmission order 
improvement obtainable judicious choice le 
buffers receiver packets average packet delays unit time base density base density experiment random pos standard deviation packet delays base density po base dens tend tend bu generally base density po obtain highest bu er utilization gains chain singleton parallel streams random pos respectively 
similarly base density po pbuf best le provides highest improvements pbuf worst le 
say base density near optimal les provide largest improvements performance statistics studied 
base density increases po converges chain base density decreases po converges antichain near optimal les provide performance improvement 
supported graphs figures chain singleton random pos respectively 
general base density increases performance di erence pbuf best le pbuf worst le rst increases 
point base density performances start converging 
base density po performances overlap 
small negative values pos due statistical error simulation approximate nature pbuf metric 
experiments conclude pbuf best le provides considerable bu er utilization delay improvements pbuf worst le po antichain close 
general choice le important certain classes pos 
experiment di erent network layer delays experiments study network layer delay impacts performance gains near optimal les 
network layer delay sender receiver increases important wisely select transmission order 
investigate question simulating di erent network layer delay values interval 
network layer delay sender bu er size roughly equal delay bandwidth product system 
network layer delay sender bu er size half 
experiments show network layer delays simulated pbuf best le provides roughly improvements pbuf worst le average packet delay standard deviation packet delay receiver bu er utilization respectively 
regardless network delay sender receiver improvements near optimal les remain significant bu er utilization minor packet delay standard deviation 
choice le important network layer delays 
experiment di erent loss rates experiments study ects di erent loss levels le selection simulating loss rates interval 
table introduces percentage improvements performance statistics pbuf best le pbuf worst le graphs illustrate absolute gains 
judging solely percentage improvements conclude choice le important loss levels bu loss lev els low loss rates absolute gains performance statistics appear insigni cant 
consistent fact partially ordered service generally better ordered service low loss rates 
conclude loss rates greater choice le really matters greatest impact receiver bu er utilization 
notice simulated base densities parallel streams pos illustrate behavior 
due space limitations table graphs provided second set experiments 
buffers receiver packets average packet delays unit time loss rate loss rate experiment experiment di erent bu er sizes standard deviation packet delays loss rate loss rate tend tend bu sender bu er size experiments study ects sender bu er size receiver bu er size ratios performance improvements near optimal les 
experiments receiver bu er size buf sender bu er sizes buf simulated 
notice choices bu er sizes investigate range values interesting cases buf buf buf buf experiments throughput results experiment relatively larger sender bu er sizes simulated 
shows general near optimal les provide roughly tend improvements sub optimal les sender bu er sizes simulated 
results show highest bu er utilization pbuf best le obtained buf small 
example buf bu reduced near optimal les 
percentage bu improvement decreases buf increases 
noteworthy sender bu ers buf pbuf best le performs slightly worse pbuf worst le terms bu er utilization 
conclude choice le uence receiver bu er utilization large sender bu er sizes 
experiment shows near optimal les provide put improvement nonoptimal ones buf buf 
buf buf increases average packet delays unit time buffers receiver packets sender buffer size sender buffer size buf tend tend bu standard deviation packet delays throughput objects unit time sender buffer size experiment sender buffer size near optimal les start providing increasingly greater throughput bad ones 
example buf buf throughput pbuf best le roughly greater pbuf worst le 
near optimal les provide throughput improvement sender bu er size larger receiver bu er size 
generally equal sender receiver bu er sizes employed transport layer protocols tcp 
practical cases choice le important respect delay receiver bu er utilization respect throughput 
metric pbuf metric vs metric 
section shows certain conditions pbuf best le provides delay signi cant bu er utilization improvements pbuf worst le 
possible sender near optimal le transmission order 
section determine ective metric distinguishing near optimal les poor ones 
comparing performance pbuf best le best le system parameters experiments 
results experiments show bu best le respectively roughly pbuf best le 
general experiments show tendency les outperform 
simulations best le performs slightly better pbuf best le just opposite 
rst experiments buf buf pbuf metric better metric metric quantifying goodness le 
results experiment slightly favor pbuf metric larger sender 
bu er sizes 
best le performs pbuf best le buf buf hand buf buf increases pbuf best le provides minor performance improvements 
practice equal bu er sizes sender receiver generally conclude practical purposes metric complex pbuf metric evaluating les 
summary previous demonstrates certain network conditions partially ordered service provides better performance ordered service 
partially ordered service investigates careful selection linear extension improve system performance performance improved 
rst show identify near optimal linear extensions partial order simulate performance gains linear extensions time transmission 
quantify linear extensions propose new metric pbuf metric bu ering probabilities derived analytic results 
pbuf metric complex expression propose simpli ed version called metric alternative metric 
metrics act accurate predictors expected performance di erent linear extensions pos sender selecting better transmission order 
simulation study shows certain pos choice near optimal le provide delay considerable bu er utilization improvements non optimal linear extension 
prudent transmission order selection system performance improved 
results show transmission order best le le po optimized metric performs pbuf best le le po optimized pbuf metric 
general say metric ective metric determining near optimal linear extensions partial order 
les easily decide better transmission order comparing pbuf metric metric values 
hand po nding pbuf best le best le di cult 
currently wehave polynomial time algorithm nd les 
investigate algorithmic aspects le optimization pbuf metric complex expression 
authors pursuing algorithms heuristics nding best le 
study better transmission orders partially ordered service expected system behavior 
generalizing possible uncertainties loss object near optimal le determined statically communication starts le communication transmission order 
happens system conditions change 
open problem dynamically determine optimal transmission order actual system behavior communication progress 
system changes sending transport entity dynamically choose object transmitted way optimizes system performance 
method object transmitted unknown just transmitted 
authors pursuing dynamic le optimization 
paul amer thomas connolly phillip conrad diaz :10.1.1.20.9230
partial order transport service multimedia applications 
ieee acm trans networking oct 
nate baxter herman chien andy kathryn marshall steven baraniuk :10.1.1.20.9230
manual 
mil 
thomas connolly paul amer phillip conrad 
rfc extension tcp partial order service 
phillip conrad edward golden paul 
amer 
multimedia document retrieval system partially ordered partially reliable transport service 
multimedia computing networking mmcn sponsored spie san jose ca usa jan 
diaz amer 
partial order connections new concept high speed multimedia services protocols 
annals telecommunications may 
davey priestley 
lattices order 
cambridge university press 
william 
methods generating random partial orders 
operations research letters december 
paul amer phillip conrad 
analytic study partially ordered transport services 
submitted publication 

partially ordered partially reliable transport protocols performance analysis 
phd thesis university delaware progress 

