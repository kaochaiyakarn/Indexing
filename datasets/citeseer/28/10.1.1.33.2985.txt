query language web site management system mary fernandez daniela florescu alon levy dan suciu designed system called strudel applies familiar concepts database management systems process building web sites 
main motivation developing strudel observation current technology creating managing large sites tedious site designer simultaneously perform tasks choosing information available site organizing information individual pages graphs linked pages specifying visual presentation pages html 
furthermore separation physical organization information underlying web site logical view changing restructuring site unwieldy tasks 
strudel web site manager separate logical view information available web site structure information linked pages graphical presentation pages html 
site builder defines independently data available site 
process may require creating integrated view data multiple external sources 
situation similar domain independence issue relational calculus solved considering range restricted queries guaranteed domain independent semantics change artificially change active domain 
currently specifying range restriction rules struql 
expressive power struql regular path expressions lorel unql require graph traversal computation transitive closure 
ability compute transitive closure input graph imply ability compute transitive closure arbitrary binary ary relation 
proven formally unql bdhs :10.1.1.32.3916
surprisingly struql express transitive closure arbitrary relation composition queries example consider tree encoding binary relation attributes shown 
compute nodes reachable struql queries 
constructs graph corresponding relation second uses regular expression find nodes accessible root 
follows result bdhs single query express transitive closure :10.1.1.32.3916
proven formally unql bdhs :10.1.1.32.3916
surprisingly struql express transitive closure arbitrary relation composition queries example consider tree encoding binary relation attributes shown 
compute nodes reachable struql queries 
constructs graph corresponding relation second uses regular expression find nodes accessible root 
follows result bdhs single query express transitive closure :10.1.1.32.3916
input root tup tup create link bogus collect collect result tup tup tup prove struql precisely expressive power order logic extended transitive closure imm fo tc 
considering sorted sorts oid label order vocabulary fe oid label oid edge relation oid oid collections boolean query vocabulary expressible pure struql external predicates expressible fo tc 
related languages languages developed querying restructuring graph semistructured data 
example lorel language qrs developed tsimmis project application data integration 
related languages languages developed querying restructuring graph semistructured data 
example lorel language qrs developed tsimmis project application data integration 
comparison struql lorel equivalent expressive power clause struql lorel struql construct arbitrary new output graph create link clauses 
feature strictly necessary application creating web sites 
unql bdhs query language semistructured data construct arbitrary new graphs :10.1.1.32.3916
explained struql expressive unql compute transitive closure arbitrary ary relation 
theory struql precisely expressive power stratified linear datalog 
translation struql queries stratified linear datalog results cumbersome hard understand queries 
particular struql enables concise representation regular path expressions clearly separates querying creation graph creation 
icdt 
serge abiteboul roy goldman jason mchugh vasilis vassalos yue zhuge 
views semistructured data 
proceedings workshop management semi structured data 
bdhs peter buneman susan davidson gerd hillebrand dan suciu :10.1.1.32.3916
query language optimization techniques unstructured data 
sigmod 
bun peter buneman 
tutorial semistructured data 
