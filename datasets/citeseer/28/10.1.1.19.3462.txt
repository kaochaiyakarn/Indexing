probabilistic roadmaps path planning high dimensional configuration spaces kavraki jean claude latombe mark overmars uu cs august delta utrecht university department computer science box tb utrecht netherlands tel 
robotics laboratory department computer science stanford university stanford ca usa 
department computer science utrecht university box tb utrecht netherlands 
probabilistic roadmaps path planning high dimensional configuration spaces kavraki jean claude latombe mark overmars technical report uu cs august department computer science utrecht university box tb utrecht netherlands issn probabilistic roadmaps path planning high dimensional configuration spaces kavraki jean claude latombe mark overmars new motion planning method robots static workspaces 
method proceeds phases learning phase query phase 
learning phase probabilistic roadmap constructed stored graph nodes correspond collision free configurations edges feasible paths configurations 
authors different teams builds previous separately 
single shot random planner described subsequently expanded learning approach 
papers emphasis robots low number dofs 
similar techniques applied car robots move forward backward symmetrical robots car robots move forward 
independently preprocessing scheme similar learning phase introduced kl planning paths dof robots :10.1.1.39.2749
scheme builds probabilistic roadmap free space focuses case dof robots 
need expand roadmap difficult regions space noted addressed simple techniques 
better expansion techniques introduced kl kl 
combines ideas previous papers extends powerful faster planner 
collision free added discarded 
collision checking requires testing part robot intersects obstacle distinct bodies robot intersect 
done variety existing general techniques 
general implementation considered section test performed analytically optimized routines library 
alternatively iterative collision checker described qui automatically generates successive approximations objects involved collision test :10.1.1.52.9953
workspaces may faster specific collision checker see section 
local planner 
local planner deterministic fast 
requirements strict 
may may allow configurations 
allow case examples considered free space constrained obstacles set self collision configurations 
assume joint limits prevent self collisions adjacent links 
discuss specific techniques local path planning distance computation collision checking apply family robots defined 
techniques applied possibly minor adaptations types articulated robots robots joints multiple kinematic chains see kl articulated robots workspace see kl :10.1.1.39.2749
local path planning 
configurations wish connect local planner 
local planner constructs path follows translates constant relative velocity joints index straight lines workspace connect positions configuration positions configuration motion planner adjusts position joint straightforward inverse kinematic equations point relative follow motion led 
odd position determined rule computed rotating joint constant revolute velocity relative linear velocity point recall subsection local path discretized sequence configurations collision checking 
workspaces situation completely different longer bitmap technique 
experiments workspaces reported kl show higher cost collision checking mainly increases duration learning phase 
query phase collision checking needed connect start goal configurations roadmap 
results kl show duration learning phase remains quite reasonable order minutes obtained simple geometry example robot links line segments 
complicated geometries iterative collision checker qui advantageous :10.1.1.52.9953
collision checker qui considers approximations objects running time average depend geometric complexity scenes :10.1.1.52.9953
rpp planner heavily relies collision checking 
long ran rpp geometrically simple problems automatically animate graphic scenes complex geometry iterative collision checker 
observed dramatic slowdown planner 
experiments workspaces reported kl show higher cost collision checking mainly increases duration learning phase 
query phase collision checking needed connect start goal configurations roadmap 
results kl show duration learning phase remains quite reasonable order minutes obtained simple geometry example robot links line segments 
complicated geometries iterative collision checker qui advantageous :10.1.1.52.9953
collision checker qui considers approximations objects running time average depend geometric complexity scenes :10.1.1.52.9953
rpp planner heavily relies collision checking 
long ran rpp geometrically simple problems automatically animate graphic scenes complex geometry iterative collision checker 
observed dramatic slowdown planner 
challenging research goal extend method dynamic scenes 
randomized preprocessing configuration space fast path planning 
tech 
rep stan cs dept comput 
sci stanford univ stanford ca september 
kl kavraki :10.1.1.39.2749
latombe 
randomized preprocessing configuration space fast path planning 
proc 
ieee int 
random approach motion planning 
tech 
rep dept comput 
sci utrecht univ utrecht netherlands october 
qui quinlan :10.1.1.52.9953
efficient distance computation non convex objects 
proc 
ieee int 
conf 
