incremental interactive sequence mining zaki computer science dept rochester rochester ny computer science dept rensselaer polytechnic inst troy ny discovery frequent sequences temporal databases important data mining problem 
current assumes database static database update requires patterns scanning entire old new database 
propose novel techniques maintaining sequences presence database updates user interaction modifying mining parameters 
challenging task updates invalidate existing sequences introduce new ones 
scenarios avoid re executing algorithm entire dataset reducing execution time 
experimental results confirm approach results execution time improvements orders magnitude practice 
supported part nsf cda ccr ccr ccr ccr int darpa external research digital equipment 
surgery impose soft real time constraints mining process 
domains databases updated regular basis user interactions modify search parameters running discovery program infeasible 
need algorithms maintain valid mined information database updates ii user interactions modifying constraining search space 
incremental interactive mining problem studied association rules done incremental interactive sequential patterns :10.1.1.13.7114
method incremental interactive sequence mining 
goal minimize computation requirements handling incremental updates 
algorithm accomplishes goal maintaining information maximally frequent minimally infrequent sequences 
incremental data arrives incremental part scanned incorporate new information 
generating 
enqueue phase 
item nb fs 
construct suffix class 
nb fs enqueue :10.1.1.13.7114:10.1.1.13.7114


class nb fs 
enumerate frequent seq compute support 
example figures elements supports updated moved negative border frequent set describe phase see 
phase phase nb fs list array hash tables containing elements moved nb fs 
proposition suffix classes need examine 
sequences moved intersect possible frequent sequences 
add frequent sequences queue nb fs processing :10.1.1.13.7114:10.1.1.13.7114
running example figures added fs table :10.1.1.13.7114:10.1.1.13.7114
time evaluated sequences involving frequent placed 
ac bc placed 
step phase starting hash table containing length sequences pick element processed create list frequent sets associated id lists equivalence class 
phase phase nb fs list array hash tables containing elements moved nb fs 
proposition suffix classes need examine 
sequences moved intersect possible frequent sequences 
add frequent sequences queue nb fs processing :10.1.1.13.7114:10.1.1.13.7114
running example figures added fs table :10.1.1.13.7114:10.1.1.13.7114
time evaluated sequences involving frequent placed 
ac bc placed 
step phase starting hash table containing length sequences pick element processed create list frequent sets associated id lists equivalence class 
step pass resulting equivalence class enumerate frequent set adds new frequent sequences new negative border elements associated elements isl 
problem discovering patterns multiple event sequences studied search rule space directly searching sequence space forming rules 
incremental sequence mining addressing incremental mining sequences 
related proposal uses dynamic suffix tree approach incremental mining single long sequence 
dealing sequences different customers multiple sequences sets items opposed single long sequence items 
closest incremental association mining important differences incremental sequence mining difficult problem :10.1.1.13.7114
association rules discover intra transaction patterns itemsets discover patterns sequences 
set frequent sequences unbounded superset set frequent itemsets bounded 
sequence search complex challenging itemset search necessitating fast algorithms 
interactive sequence mining mine examine paradigm interactive exploration associations sequence episodes 
currently investigating methods alleviate problem refining algorithm performing core computation 
aggarwal yu 
online generation associations 
th icde 
cheung han ng wong :10.1.1.13.7114
maintenance discovered association rules large databases incremental updating technique 
th icde 
feldman aumann amir mannila 
efficient algorithms discovering frequent sets incremental databases 
