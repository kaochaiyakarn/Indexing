selecting materializing horizontally partitioned warehouse views ezeife school computer science university ontario canada received may received revised form january accepted april data warehouse views typically store large aggregate tables subset dimension attributes main data warehouse fact table 
aggregate views stored subviews data cube attributes 
methods proposed selecting data cube views materialize order speed query response time accommodate storage space constraint reduce warehouse maintenance cost 
proposes method selecting materializing views selects horizontally fragments view recomputes size stored partitioned view deciding views select 
elsevier science rights reserved 
keywords data warehouse views fragmentation performance bene 
bene selecting view set computed sum bene ts bw descendant views bene descendant view di erence cardinality view smallest view compute di erence negative bw 
gupta extend greedy algorithm select views indexes 
ezeife de nes uniform scheme comprehensive cost model selecting views indexes 
uniform scheme extended handle dimension hierarchies 
ceri ozsu valduriez horizontal fragmentation ideas schemes relational databases simple predicates query access frequencies taken consideration :10.1.1.33.2276:10.1.1.33.2276
horizontal fragmentation view relation partitioning view relation values attributes fragment contains subset tuples view relation 
including expressed need data partitioning schemes data warehouse aggregate materialization problem 
issues concerning maintenance materialized views addressed blakeley colby kotidis roussopoulos fig 

top level view may ect selection views materialized information included greedy algorithm making view selection discussed section 
fragments produced non overlapping complete minimal sense tuple original view needs accounted fragment 
fragmentation scheme uses access frequency selectivity predicate determine importance 
fragmentation view set important predicates user queries 
set predicates complete natural negated forms de ning minterm predicates case predicates employed :10.1.1.33.2276:10.1.1.33.2276
predicates fragmentation required minimal relevant selecting important valued predicates fragmentation purposes guarantees predicates relevant view question fragmentation process 
fragments created complete come complete minimal set predicates 
fragments non overlapping de ned mutually exclusive 
example serves demonstrate created fragments non overlapping complete minimal tuple belongs fragment tuple fragment fragment relevant 
step select important predicates 
current scheme selects highest valued predicates 
step re ned optimized scheme decide produces best outcome 
step generate horizontal fragments view de ning minterm predicates 
minterm predicate conjunction simple predicates natural negated forms :10.1.1.33.2276:10.1.1.33.2276
aggregate view vi set selected simple predicates pri pi queries accessing set minterm predicates mi mi de ned 
mi de ned pri ezeife data knowledge engineering ik fig 

selection partitioning algorithm 
kimball data warehousing tool kit practical techniques building dimensional data warehouses wiley new york 
kotidis roussopoulos dynamat dynamic view management system data warehouses acm sigmod international conference management data philadelphia usa june pp 

divide aggregate designing large warehouses database programming design 
ozsu valduriez principles distributed database systems second ed prentice hall englewood cli nj :10.1.1.33.2276
ramakrishnan database management systems mcgraw hill new york 
sarawagi agrawal gupta computing data cube technical report rj ibm almaden research center san jose california 
chu building cient data warehouses understanding issues data summarization partitioning proceedings st annual sas users group international conference vol 
pp 
