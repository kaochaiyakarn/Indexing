dynamic cpu scheduling imprecise knowledge computation time alan burns department computer science university york 
burns cs york ac uk majority studies conducted scheduling real time transactions concentrate concurrency control protocols cpu primary resource 
consequently various techniques scheduling cpu conventional time critical systems technique adequately designed scheduling resource real time database systems 
construct efficient cpu scheduling scheme minimizes preemption rate order reduce frequency synchronization protocols invoked inherited performance degradation 
addition introduce new timing model newly introduced scheduler rated order utilize system imprecise knowledge computation time estimates 
keywords cpu scheduling lowering preemption timeliness functions imprecise computation estimates 
section concludes research 

motivation previous task model value density vd jensen lock value scheduling scheme known outperform scheduling algorithms overload situations 
manner vd scales task value execution time causes scheduling priority derived task level 
hand dynamic value density dvd burns represents remaining computation time enhances performance vd assigning extremely low priority newly arriving tasks :10.1.1.25.7263
small priority increases correspondence amount time task executes 
consequently scheduling priority derived statically task level derived dynamically individual execution unit 
consequences behavior preemption significantly lowered execution resumption preemption increased 
dvd shown burns better utilize cpu system primary resource :10.1.1.25.7263
hand dynamic value density dvd burns represents remaining computation time enhances performance vd assigning extremely low priority newly arriving tasks :10.1.1.25.7263
small priority increases correspondence amount time task executes 
consequently scheduling priority derived statically task level derived dynamically individual execution unit 
consequences behavior preemption significantly lowered execution resumption preemption increased 
dvd shown burns better utilize cpu system primary resource :10.1.1.25.7263
huang introduced technique known scheduling deadline cdf intended operate environment 
technique stated function priority ss deadline relative function uses transactions significance system relative deadline concerned computation time corresponding transaction 
function relies static attributes derived priorities static fixed instant derived transactions termination termination means commit abort 
cdf subject similar weaknesses limitations vd 
transaction accurate estimate 
consequently transaction timeliness computed min 
transaction aborted minimum remaining required computation time infeasible 
timeliness may computed function 
analysis function reader referred burns :10.1.1.25.7263
min 
aging timeliness imprecise timeliness functions described previous section function utilized account transaction attributes allow scheduler decisions deadline cognizant 
cdf described section better scheme utilized transaction time variant addition wish preference increasing order priorities opposite order huang alter function shown function 
scheduling priority derived transaction level 
observation propose scaling involve certain degree imprecision imprecision utilized considering define weighted aging factor time min defined function mapped function may called aging timeliness cumulative computation owing name parameters involved 
note function utilizes underlying weighting function clearly shows feasibility utilizing information runtime behavior computation time priority assignment schemes transaction model 
function involves sim ple arithmetic utilizes transactions timeliness value respect deadline addition amount computation time consumed remains acquired 
furthermore function accounts amount time transactions wait system concurrency control 
details omitted due space limitation burns :10.1.1.25.7263

simulation model simulator csim process oriented language parameters assumptions 
levels importance randomly assigned transactions uniform distribution may viewed low mid mid high high 
worst case computation time randomly assigned transactions uniform distribution 
transaction artificial delay introduced order simulate overhead context switching 
simulated load controlled exponential distribution transac tions arrival turn controlled average actual computation time transactions divided desired load 
submission rate note exponential distribution allows bursty arrivals may result transactions missing deadlines normal load 
simulation corresponds average behavior transactions simulated load 
performance simulated techniques measured metrics interested reader may refer burns performance metrics :10.1.1.25.7263
cpu total time spent aborted tasks total time spent preemption total time spent transactions 
value sum total value collected total value transactions submitted system 
preemption total number preemption total number transactions submitted system 
restart total number restarted transactions total number transactions submitted system 
