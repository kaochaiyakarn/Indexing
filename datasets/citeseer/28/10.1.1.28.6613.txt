icrafter service framework ubiquitous computing environments shankar brian lee fox pat terry winograd stanford university 
propose icrafter framework services user interfaces class ubiquitous computing environments 
chief objective icrafter users flexibly interact services environment variety modalities input devices 
extend existing service frameworks ways 
services user input devices icrafter provides infrastructure support ui selection generation adaptation 
second icrafter allows uis associated service patterns fly aggregation services 
design goals icrafter stem experiences users iroom prototype interactive workspace stanford serves experimental testbed research 
goals arise fundamental characteristics ubiquitous computing environments heterogeneity presence legacy components incremental evolution 
implemented prototype icrafter framework iroom developed services uis framework 
years seen interest service ui frameworks ubiquitous computing environments 
industry research projects proposed various frameworks jini hodes roman :10.1.1.49.2504
icrafter extends existing important ways 
icrafter places intelligence infrastructure select generate adapt service uis 
helps services appliances advantages extensibility better handling legacy services resource limited appliances 

similarly icrafter provides specifications app developer create uis services 
example create html ui service app developer needs create html template 
html template contains html associating widgets service operations embedded code resolve dynamic information 
examine icrafter framework addresses design goals laid section 
designing adaptability existing approaches hodes approach best handles appliance heterogeneity :10.1.1.49.2504
approach service supply predefined ui suitable appliance appliance side generates suitable ui service description 
appliance resource limited need alternatives appliance side proxies 
apply ideas previous research related domains generalize approach allowing intelligence exist im third party service appliance handle ui selection generation adaptation 
lets resource rich infrastructure im select adapt generate suitable ui requesting appliance 
automatically generate uis interaction styles extremely difficult model speech interactions humans computers generic fashion short full natural language processing 
ui hand written ui designer customized projector service descriptions knowledge speech interactions 
hand designed easier create uis icrafter template framework back code needs written python tcl helper routines provide access context memory service appliance descriptions simplify appliance workspace adaptation 
related concur researchers identification design goals different terminology 
example pima identify design goals challenges addressed researchers ubiquitous computing :10.1.1.160.6637
chosen existing service registry invocation systems corba dcom programmatic interface descriptions type systems suitable ui generation section due greater robustness section 
existing discovery schemes simple mechanism beacons proven sufficient smaller scale 
generic ui modeling languages orthogonal 
appliance independent xml ui language uses style sheets map appliance independent interface description markup languages programming languages 
existing discovery schemes simple mechanism beacons proven sufficient smaller scale 
generic ui modeling languages orthogonal 
appliance independent xml ui language uses style sheets map appliance independent interface description markup languages programming languages 
model techniques designing uis platform independent manner adapt certain types context widely deployed available generic ui languages icrafter writing templates simplifying adaptation 
submitted ubicomp draft distribute permission leveraged design context aware applications general architectures storing context information achieve workspace adaptation icrafter :10.1.1.9.5130
projects easyliving investigating software architectures technology rich spaces explicitly focus service ui frameworks 
related research industry efforts icrafter closely related jini hodes roman :10.1.1.49.2504
jini project allows java ui code registered service attribute lookup service 
clients responsible selecting registered uis toolkits swing ui code needs 
appliance independent xml ui language uses style sheets map appliance independent interface description markup languages programming languages 
model techniques designing uis platform independent manner adapt certain types context widely deployed available generic ui languages icrafter writing templates simplifying adaptation 
submitted ubicomp draft distribute permission leveraged design context aware applications general architectures storing context information achieve workspace adaptation icrafter :10.1.1.9.5130
projects easyliving investigating software architectures technology rich spaces explicitly focus service ui frameworks 
related research industry efforts icrafter closely related jini hodes roman :10.1.1.49.2504
jini project allows java ui code registered service attribute lookup service 
clients responsible selecting registered uis toolkits swing ui code needs 
generalization controlling devices embedded web servers service descriptions include control presentation urls accessed client protocol 
document approach hodes service advertisements include url service documents downloaded 
