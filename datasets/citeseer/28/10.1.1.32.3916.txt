query language optimization techniques unstructured data peter buneman university pennsylvania peter central cis upenn edu susan davidson university pennsylvania susan central cis upenn edu gerd hillebrand university pennsylvania saul cis upenn edu dan suciu research suciu research att com certain database tasks require great flexibility people turning new kind data representation database constrained schema 
component database carries description independent components 
systems acedb popular biologists tsimmis proposal data integration organize data tree structures components equally represent sets tuples 
query language appropriate structures 
propose simple language unql querying data organized rooted edge labeled graph 
model relational data may represented fixed depth trees trees unql equivalent relational algebra 
acedb data model object oriented model think adapting object oriented query language 
need deal problem internal structure instance tree done problem dealing missing data extremely cumbersome queries 
limited query language developed acedb 
allows selections objects pointer traversals restructuring data form projections joins performed 
system uses tree model tsimmis project pgmw proposed heterogeneous data integration :10.1.1.47.5182
idea data describe trying force common global schema databases arisen independently may little structure common 
tsimmis schema type data interpreted user labels structure 
particular difference record set tsimmis structure record node edge labels distinct set node edge labels 
query language proposed tsimmis allows limited forms deep traversal data structures 
situation quite similar bibliographical extension acedb enables projections joins form compositional query language 
internet movie database www edu movies 
deliberately irregular example way reflects details structured useful database 
database cf 
examples pgmw information heterogeneous documents referencing relationship represented graph structure :10.1.1.47.5182
note information resides labels 
express structure information resides nodes acedb tsimmis allow simply migrate information new edge attached node 
note kinds labels tree character strings integers symbols corresponding attribute names 
atomic data values strings integers may occur tree just terminal edges 
object identity equality 
tree markers confused object identities different expressions may describe tree 
example expressions denote tree fa fa fa gg fa fa notion equality adopt bisimulation mil 
graphs bisimilar exists binary relation nodes theta nodes root root edge labeled exists edge labeled vice versa 
bisimulation extends naturally graphs ffl edges bds graphs bisimilar :10.1.1.33.3284
translated oodb terminology means notion equality value consider databases equal possibly infinite databases obtained replacing oid value corresponding object 
tree data model intended object oriented model worthwhile discuss briefly advantages adopting complex notion equality object identifiers 
bisimulation sense observational equality shown reasonably expressive object oriented query language directly observe test equality object identifiers databases bisimilar iff indistinguishable query language 
result bisimulation notion relevant database query languages 
type labeled trees simple description 
label type edge labels type fin describe type finite sets type labeled trees tree satisfies equation tree fin label theta tree 
informally equation says tree set pairs labels trees 
obtain natural form computation type structural recursion 
know bds general structural recursion powerful cyclic structures queries may lead infinite recursion give undefined results :10.1.1.33.3284
languages describe restrictions general structural recursion defined cyclic structures 
development languages important remember dealing just data types label tree 
query language unql describe query language unql 
presenting examples query tree fixed depth 
deep queries 
apparent previous examples need expressive power look data depth tree predetermined schema 
example simplest queries need look arbitrarily deep database find edges certain property 
example find set strings database select flg nl db repeated wildcard matches path sequence edges tree 
construct proposed pgmw :10.1.1.47.5182:10.1.1.47.5182
shall find useful queries need 
shall want specify regular expressions paths shall adopt grep syntax 
may wonder queries containing construct defined cyclic structures number paths structures infinite 
cyclic structures finite number distinct subtrees finite number distinct assignments labels trees variables clause output query finite 
naturally embedded query languages 
biskup hull editors lncs proceedings th international conference database theory berlin germany october pages 
springer verlag october 
available upenn technical report ms cis 
bds peter buneman susan davidson dan suciu :10.1.1.33.3284
programming constructs unstructured data 
technical report ms cis department computer information science university pennsylvania philadelphia pa march 
bls buneman libkin suciu tannen wong 
comprehension syntax 
technical report ms cis department computer information science university pennsylvania 
mil robin milner 
communication concurrency 
prentice hall 
pgmw papakonstantinou garcia molina widom :10.1.1.47.5182
object exchange heterogeneous information sources 
ieee international conference data engineering march 
pt robert paige robert tarjan 
partition refinement algorithms 
