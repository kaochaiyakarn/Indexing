oodb indexing class division sridhar ramaswamy paris kanellakis indexing class hierarchy order efficiently search update objects class range value attribute impacts oodb performance heavily 
indexing problem systems class hierarchy index ch technique implemented trees 
techniques lead improved average case performance involve implementation new data structures :10.1.1.145.2943
special form external dynamic dimensional range searching oodb indexing problem solvable reasonable worst case bounds :10.1.1.156.2115
insight developed technique called indexing class division cd believe practical alternative ch 
optimized implementation experimental validation cd average case performance 
principal motivation development indexing techniques support oodbs efficiently trees support relations 
recall trees variants trees canonical examples relational database physical support unqualified success external dynamic dimensional range searching common problem solved indexing relational databases 
problem oodb indexing attribute class name called class indexing objects organized forest hierarchy classes special case external dynamic dimensional range searching see 
different problem nested object indexing constitutes current repertoire oodb indexing problems 
class indexing examined :10.1.1.145.2943
solutions heuristic poor worst case performance supported experimental performance evaluation 
class hierarchy index ch solution method widely practice 
believe case reasonable approach proposed uses standard data structures trees 
propose practical alternative addition ch 
point query key uniquely identifies tuple key searching 
inserting deleting tuple takes log secondary memory accesses worst case 
average case performance tree improves worst case bounds 
problem external dynamic dimensional range searching relational database attributes generalizes dimensional range searching attributes range searching dimensional intervals 
general data structure problem underlying efficient secondary storage manipulation data models see discussion object oriented spatial constraint models :10.1.1.156.2115
problem dimen range searching main memory secondary memory subject research 
date general solutions approaching worst case performance trees dimensional searching see brief overview 
basic insight generality necessary class indexing 
class indexing problem additional structure tree technology applicable high performance achievable 
prof person student professor label class reduce indexing classes dimensional range search procedure label class node associate node value attribute class object class node number children node node children terminate divide equal parts size recursively call label class child ranges procedure label class 
associate label class algorithm 
labeling involved really pre order traversal class hierarchy 
assume class hierarchy static reduction preprocessing step 
insight show class indexing dynamic query time log log update time log log log pages :10.1.1.156.2115
section optimized implementation idea call class division cd evaluate experimentally 
cd class hierarchy preprocessed select family sets classes 
example includes set classes set subclasses root class scope query root 
tree indexes maintained unions extents classes set 
related class indexing ch method simple implementable trees excellent update performance space utilization practice point query performance 
spite possible range query inefficiencies method choice oodb systems class indexing 
ch method clusters objects key 
approaches problem clustered objects class membership 
experimental studies :10.1.1.145.2943
involve new 
approach tree 
data structure threads trees facilitate simultaneous search 
idea known fractional cascading data structures literature notoriously hard 
algorithms implementing main memory data structures secondary memory 
algorithms large constant factors impractical 
due lack space refer reader surveys 
external searching practical need general support led development large number data structures external dimensional searching 
examples grid file various quad trees orders space filling curves trees hb trees cell trees various trees :10.1.1.131.7887
data structures designed average case behavior common spatial database problems 
somewhat simpler problem class indexing 
correlation key dimensions general techniques degrade 
involve constant overheads far greater trees complex upgrade concurrently 
class appear small number members object just object identity replicas 
updates processed changing replicas 
formally preprocessing solves combinatorial problem name class division maximal replication factor maximal query factor input forest class hierarchy classes positive integers family members sets classes class appears members 
class set subclasses including members exactly covers union members 
clearly class division possible interestingly proof lemma space time tradeoff proof sigmod proposition forest class hierarchy classes possible class dlog ce dlog ce :10.1.1.156.2115
heuristics basic class division procedure provides guarantees proposition 
existence proof reasonable fact small hierarchies solutions class division smaller sought exhaustive searches 
practice solutions basic greatly improved heuristics 
internal nodes binary tree built basic class division matter 
guttman trees dynamic index structure spatial searching proc 
acm sigmod conference management data 
ishikawa evaluation signature files set access facilities oodbs proc 
acm sigmod 
kanellakis ramaswamy vengroff vitter indexing data models constraints classes proc :10.1.1.156.2115
th acm pods invited special issue jcss principles database systems appear 
complete version appears technical report brown university 
kemper access support object bases proc 
acm sigmod 
