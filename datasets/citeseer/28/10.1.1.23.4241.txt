bidding allocation combinatorial auctions nisan april auction multiple items performed desirable allow bids combinations items opposed single items 
auction called combinatorial exponential number possible combinations results computational intractability aspects regarding auction 
considers aspects bidding language allocation algorithm 
consider kinds bids combinations allowed language specified 
basic tradeoff expressibility language versus simplicity 
consider formalize bidding languages compare strengths 
ffl provide mechanism bidders team combine bids 
hopefully able find optimal way 
approaches merely try improve single item auctions far providing general way bid combinations 
researchers started considering providing combinatorial auctions providing algorithms perform allocation 
papers introduced types bidding languages specifically single minded bids call atomic bids bids xor bids xor bids bids dummy items call phantom items restricted classes bids :10.1.1.172.7540:10.1.1.100.1478
papers formally studied power bidding language 
allocation algorithms suggested may classified types ffl provably optimal polynomial time allocation algorithms restricted classes bids 
ffl provably optimal allocations obtained effectively doing exponential search allocation space 
idea papers trim search space possible :10.1.1.172.7540:10.1.1.100.1478
papers introduced types bidding languages specifically single minded bids call atomic bids bids xor bids xor bids bids dummy items call phantom items restricted classes bids :10.1.1.172.7540:10.1.1.100.1478
papers formally studied power bidding language 
allocation algorithms suggested may classified types ffl provably optimal polynomial time allocation algorithms restricted classes bids 
ffl provably optimal allocations obtained effectively doing exponential search allocation space 
idea papers trim search space possible :10.1.1.172.7540:10.1.1.100.1478
suggests existing integer programming software 
ffl heuristics run quickly polynomial time hopefully provide allocations 
known payments combinatorial auction perfect allocation algorithm defined vickrey clarke groves mechanism auction incentive compatible dominant strategy bidder bid true valuation 
longer true allocation algorithm optimal :10.1.1.172.7540
idea papers trim search space possible :10.1.1.172.7540:10.1.1.100.1478
suggests existing integer programming software 
ffl heuristics run quickly polynomial time hopefully provide allocations 
known payments combinatorial auction perfect allocation algorithm defined vickrey clarke groves mechanism auction incentive compatible dominant strategy bidder bid true valuation 
longer true allocation algorithm optimal :10.1.1.172.7540
incentive compatible combinatorial auction computationally efficient optimal allocation algorithm appears 
results obtained analysis bidding languages formally define bidding languages including far know considered literature 
languages bids xor bids xors xor ors bids phantom items called bids 
analyze expressiveness compare relative power 
prices individual items certainly desirable known combinatorial auctions exist cases defined reasonable manner 
bids assumes language completely characterize cases individual item prices exist ffl combinatorial auction admits individual item prices linear program solution integral directly optimizes allocation 
identify host situations prove linear program directly optimize allocation 
cases algorithm provides optimal allocation 
situations include polynomial time algorithm appears literature specifically :10.1.1.56.9425
ffl restrictions apply bids auction optimal allocation obtained hierarchical bids linear order bids single item bids xor bids downward sloping symmetric bids 
optimal allocation obtained direct sum auctions taken bids added auctions 
emphasize restrictions need enforced priori combinatorial auction rules 
just bids happen fall categories optimal solution directly linear program 
clear simple bids represented language easy verify atomic bid represent additive valuation items 
bids bidder submit arbitrary number atomic bids collection pairs subset items maximum price willing pay subset 
implicit willing obtain number disjoint atomic bids sum respective prices 
bid equivalent set separate atomic bids different bidders 
bids :10.1.1.172.7540
semantics bids clear definition reader formality may find section 
valuations represented bid language 
easy verify proposition completely characterizes descriptive power bids proposition bids represent bids don 
particular bids represent single item valuation items 
xor bids bidder submit arbitrary number pairs subset items maximum price willing pay subset 
implicit willing obtain bids 
bid set items contains maximum bids 
easy observe xor bids describe valuations proposition xor bids represent valuations 
term xor bids taken :10.1.1.172.7540
seen xor bids represent represented bids valuations represented bids 
representation may language valuations represented short bids representation xor bids requires exponential size 
definition size bid number atomic bids 
separation left reader proposition additive valuation items represented bids size requires xor bids size xors bids xor bidding languages appealing simplicity strong succinctly represent desirable simple valuations 
natural attempt combine power bids xor bids 
rest section investigate combinations 
xors bids bidder submit arbitrary number xor bids defined 
implicit willing obtain number bids respectively offered price 
xors bids called xor bids :10.1.1.172.7540
xor bids describe valuation 
required size may exponentially smaller cases 
specifically bids generalize particular plain bids seen may exponentially language xor bids 
non obvious example power lemma xors bids express downward sloping symmetric valuation items size proof clause offers single item 
called applet bids java programming language name mobile computer programs 
traditionally called universal turing machine bids 
complete language certainly represent reasonable valuations succinctly hope allocation algorithm aims reasonable allocation bids 
bids phantom items introduce bidding language choice 
language introduced order allow xor bids expressed variant bids :10.1.1.100.1478:10.1.1.100.1478
idea bidding language allow bidders introduce phantom items bidding 
items intrinsic value participants indirectly express constraints 
set items sale bidder set phantom items bid 
bids bidder submit arbitrary number pairs maximum price willing pay subset 
shall start observing bids strong xors bids xor ors bids 
clear intuitive phantom items human users 
appealing user interface may put language allowing users enter atomic bids constraints signify bids mutually exclusive 
constraints simply interpreted phantom item added bids 
lemma implicit valuation represented xors bids size represented bids total size dummy items :10.1.1.100.1478:10.1.1.100.1478
proof xor clause introduce phantom item atomic bid clause add atomic bid fxg bid 
lemma valuation represented xor ors bids size represented bids size phantom items 
proof pair atomic bids xor ors bid different introduce phantom item sq bid add bid fx st jt ranges atomic bids original xor ors bid different clauses 
prove general theorem language simulate general xor formulae theorem valuation represented xor formula size represented bids size phantom items 
web page www com 
andersson fredrik ygge 
integer programming combinatorial auction winner determination 
icmas 
john :10.1.1.100.1478
competitive equilibrium exchange economy 
journal economic theory 
clarke 
pricing public goods 
journal economic theory 
clarke 
pricing public goods 
public choice pages 
fujishima kevin leyton brown yoav shoham :10.1.1.100.1478
taming computational complexity combinatorial auctions optimal approximate approaches 
proceedings ijcai stockholm sweden july 
morgan kaufmann 
groves 
morgan kaufmann 
groves 
incentives teams 
econometrica pages 
harstad rothkopf computationally manageable combinatorial auctions :10.1.1.56.9425
technical report dimacs rutgers university 

progressive second price auction mechanism network resource sharing 
th international symposium dynamic games netherlands july 
paul milgrom 
putting auction theory simultaneous ascending auction 
technical report working dept economics stanford university 
market design web page www market design com 
nisan amir :10.1.1.172.7540
computationally feasible mechanisms 
manuscript 
nisan amir 
algorithmic mechanism design 
mit press 
michael ronald harstad 
computationally manageable combinatorial auctions 
management science 
tuomas sandholm :10.1.1.172.7540
algorithm optimal winner determination combinatorial auctions 
ijcai 
tuomas sandholm 
limitations vickrey auction computational multiagent systems 
