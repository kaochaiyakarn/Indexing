vieille 
database complete proof procedure sld resolution 
intl 
conference logic programming 
vieille 
recursive query processing power logic 
north american conference logic programming october 
przymusinski 
declarative procedural semantics logic programs 
journal automated reasoning 
przymusinski :10.1.1.56.8198
founded semantics coincides valued stable semantics 
fundamenta informaticae 
bancilhon maier sagiv ullman 
magic sets strange ways implement logic programs 
plenum new york 
dietrich warren 
extension tables memo relations logic programming 
technical report department computer science suny stony brook 
gelfond lifschitz :10.1.1.24.6050:10.1.1.24.6050
stable model semantics logic programming 
kowalski bowen editors joint intl 
conference symposium logic programming pages 
implement control strategy needed slg resolution 
programmers knowledge computation rule implementation control floundering write efficient programs 
negative literals may guard conditions determine expensive computation rest rule body evaluated 
slg resolution allows arbitrary strategy selecting transformation apply multiple transformations applicable system 
words definition slg resolution dictate particular strategy 
implementations greedy strategy ffl new answer subgoal created positive return applied rule system selected atom ffl active rule subgoal created selected atom positive return applied existing answer ffl new subgoal encountered initial rules generated new subgoal transformed :10.1.1.48.4048
greedy strategy close top tuple time computation 
stratified programs put sequential order literals lower components solved 
static ordering possible weakly stratified programs level component literal belongs depends variable bindings run time 
full slg resolution needed query evaluation non ground weakly stratified programs 
results section specialized locally stratified programs corresponding perfect herbrand model 
extensions oldt sld developed stratified programs 
restriction slg resolution locally stratified programs differs single system subgoals maintained guarantees subgoal evaluated 
modularly stratified programs ross studied general class programs evaluated subgoal time fashion called modularly stratified programs 
consider known game playing program win move win :10.1.1.24.6050:10.1.1.24.6050
winning position move winning position 
program locally stratified general 
move acyclic program practice efficient incremental algorithms developed detect subgoals completely evaluated possibly involved loops negation constant amount time 
believe freedom choosing arbitrary computation rule choosing arbitrary strategy selecting transformations slg resolution offers maximum flexibility practical implementations 
sequence extended adding resulting rule hc hc rule corresponding ordinal sequence answer 
redundant answer solve selected atom rule 
ffl replacing negative literal rule body undefined valued stable model lpm 
set valued stable models denoted st 
notion valued stable models generalization founded partial model valued stable models :10.1.1.24.6050:10.1.1.24.6050
theorem program wf founded partial model wf smallest valued stable model stable models defined gelfond lifschitz coincide valued stable models :10.1.1.56.8198:10.1.1.56.8198
query evaluation partial deduction partial deduction program transformation technique specializes logic program respect query produce efficient simpler program 
new program equivalent original far query concerned 
uses partial deduction query evaluation respect founded partial model 
redundant answer solve selected atom rule 
ffl replacing negative literal rule body undefined valued stable model lpm 
set valued stable models denoted st 
notion valued stable models generalization founded partial model valued stable models :10.1.1.24.6050:10.1.1.24.6050
theorem program wf founded partial model wf smallest valued stable model stable models defined gelfond lifschitz coincide valued stable models :10.1.1.56.8198:10.1.1.56.8198
query evaluation partial deduction partial deduction program transformation technique specializes logic program respect query produce efficient simpler program 
new program equivalent original far query concerned 
uses partial deduction query evaluation respect founded partial model 
primary motivation partial deduction understand fundamental transformations involved query evaluation separate logical issues procedural ones 
intuitively rule disposed longer contribute derivation 
ffl neg rule head herbrand instantiation false interpretation ground atoms hb false 
powers defined follows gamma successor ordinal ng limit ordinal upper bound operation interpretations respect truth ordering assume special ground atom atom undefined und 
appear rule bodies program 
non negative program multiset rules bodies contain negative literals may contain atom theorem non negative program :10.1.1.56.8198:10.1.1.56.8198
unique valued model denoted lpm 
furthermore fixed point coincides lpm 
interpretation determined specifying os und 
non negative program interpretation define hb ffl os rule herbrand instantiation true ffl und os rule herbrand instantiation true undefined powers defined lemma non negative program interpretation 
non negative program fixpoint coincides lpm 
proof notice os os neg os und 

rest lemma follows theorem 
definition program interpretation quotient modulo denoted non negative program obtained herbrand instantiation ffl deleting rule negative literal body false ffl deleting negative literal rule body true respectively :10.1.1.56.8198
sets uniquely determine viewed set os neg ground literals 
definition programs hb hb interpretation restriction denoted ij interpretation mapping restriction mapping hb definition interpretation program ffl ground atom true os false neg undefined und ffl ground negative literal true neg false os undefined und ffl existential closure literal true denoted ground instance true false ground instances false ffl universal closure literal true denoted ground instance true false ground instance false ffl ground rule true true rule body true rule body false false ffl rule true ground instance true false ground instance false model rule true definition interpretations program natural orderings interpretations truth ordering called fitting ordering information ordering ffl os os neg neg ffl os os neg neg :10.1.1.56.8198
models sense truth ordering called models 
models smallest sense information ordering called smallest models 

rest lemma follows theorem 
definition program interpretation quotient modulo denoted non negative program obtained herbrand instantiation ffl deleting rule negative literal body false ffl deleting negative literal rule body true respectively :10.1.1.56.8198
sets uniquely determine viewed set os neg ground literals 
definition programs hb hb interpretation restriction denoted ij interpretation mapping restriction mapping hb definition interpretation program ffl ground atom true os false neg undefined und ffl ground negative literal true neg false os undefined und ffl existential closure literal true denoted ground instance true false ground instances false ffl universal closure literal true denoted ground instance true false ground instance false ffl ground rule true true rule body true rule body false false ffl rule true ground instance true false ground instance false model rule true definition interpretations program natural orderings interpretations truth ordering called fitting ordering information ordering ffl os os neg neg ffl os os neg neg :10.1.1.56.8198
models sense truth ordering called models 
models smallest sense information ordering called smallest models 
associated program mapping interpretations 
generalization immediate consequence operator 
models sense truth ordering called models 
models smallest sense information ordering called smallest models 
associated program mapping interpretations 
generalization immediate consequence operator 
definition program interpretation interpretation hb ffl os rule herbrand instantiation true ward compatibility existing prolog systems :10.1.1.56.8198
prolog notorious non logical features real value making slg resolution available prolog applications 
implementations slg resolutions carried including prolog meta interpreter partial implementation prolog compiler called xsb partial implementation prolog program transformation prolog interface 
experimental results demonstrated prolog compiler technology adapted efficient implementation slg resolution providing impressive performance memory query evaluation deductive databases 
valued stable models section reviews notion valued stable models logic programs :10.1.1.56.8198
definition program interpretation interpretation hb ffl os rule herbrand instantiation true ward compatibility existing prolog systems :10.1.1.56.8198
prolog notorious non logical features real value making slg resolution available prolog applications 
implementations slg resolutions carried including prolog meta interpreter partial implementation prolog compiler called xsb partial implementation prolog program transformation prolog interface 
experimental results demonstrated prolog compiler technology adapted efficient implementation slg resolution providing impressive performance memory query evaluation deductive databases 
valued stable models section reviews notion valued stable models logic programs :10.1.1.56.8198
basic terminology logic programs assumed 
atom form ary predicate symbol terms 
literal atom negation existential closure literal denoted universal closure denoted 
rule form rule head atom rule body literals 
