dyda dynamic data warehouse maintenance fully concurrent environment xin zhang elke rundensteiner department computer science worcester polytechnic institute worcester ma cs wpi edu september data warehouse emerging technology support high level decision making gathering data distributed information sources repository 
dynamic environments data warehouses maintained order stay consistent underlying sources 
proposed view maintenance algorithms tackle problem data warehouse maintenance concurrent source data updates view synchronization handle non concurrent source schema changes 
concurrency interleaved schema changes data updates remain unexplored problems 
propose solution framework called dyda successfully addresses problem 
dyda framework detects concurrent schema changes broken query scheme con icting concurrent data updates local timestamp scheme 
info 
flightres name age dest reservation 
info 
description iss 
send incremental view maintenance query zgmhw de ned equation flightres perform join :10.1.1.19.5246:10.1.1.19.5246
create view asia customer select name age dest customer name name dest asia select ben age dest ben name dest asia assume cases occur flightres respectively case transfer time query flightres flightres committed data update 
insert ben aa asia 
new tuple captured tuple ben aa asia inserted view 
dw starts processing 
insert ben aa asia 
new tuple captured tuple ben aa asia inserted view 
dw starts processing 
insert ben aa asia tuple inserted view 
duplication anomaly appears observed zgmhw :10.1.1.19.5246:10.1.1.19.5246
case transfer time query flightres flightres schema change attribute flightres age dropped query processed call query broken query due inconsistency schemata speci ed query schema underlying source 
example know concurrency mainly caused autonomy updates may con ict dw maintenance process 
concurrent du may result incorrect query result concurrent sc may result broken query processed iss error message 
solution approach dyda framework general approach called dynamic data warehouse management dyda framework rst complete solution solve problems 
background material data warehouse maintenance processes brie introduce view maintenance vm view synchronization vs view adaptation va important dwms tasks help build basic background dw main 
view maintenance vm view maintenance vm aims incrementally maintain view extent source data updates 
basic idea send maintenance query dus calculate delta change view example 
du 
furthermore quite lot literature zgmhw zgmw aasy addressed con icts maintenance query concurrent data updates see example compensation :10.1.1.19.5246
assume schema relations remains static maintenance process 
view synchronization vs contrast vm view synchronization vs aims rewriting view de nition schema base relation changed 
distinguish primitive types source schema changes scs rename attributes relations iss called scs delete attributes relations called dropsc scs add attributes relations called 
propose rst ect existing view de nition simply ignore 
de nition denote du sc respectively 
say update maintenance concurrent short concurrent update denoted ii received dw answer qr update received dw 
say update maintenance concurrent maintenance concurrent update 
assumptions include attributes conditions selected 
details please refer nr :10.1.1.16.5979
assumptions held view recomputation 
notation meaning information source subscript du data update sequence number sequence number update unique updates iss 
sc schema change sequence number maintenance adaptation query handle update du sc 
sub query sent 
dw space houses extent data warehouse 
receives queries middle space bundled data update data warehouse 
space composed iss corresponding wrappers 
assume transactions local data update schema change reported dwms committed delta changes detected extracted example wrapper 
note dw space setting similar related projects zgmhw aasy :10.1.1.19.5246
dw vm va update message queue umq assign time stamp wrapper wrapper wrapper legend database module con 
control queue data flow dw space middle space subspace query engine subspace query engine qe vs vm architecture dyda framework middle space integrator dyda framework dwms system aims maintain dw source updates 
divided subspaces 
higherlevel subspace called dw management subspace consists general dw management algorithms vs va vm 
low level concurrency control qe subspace mentioned level handles concurrent dus concurrent 
local compensation handle concurrent dus queries data warehouse modules space rst go qe module 
includes incremental view maintenance queries view adaptation queries view recomputation queries 
assumption network communication individual dw fifo 
query types extent related queries query engine local compensation algorithm described aasy side ects concurrent dus assumption able determine concurrent du set :10.1.1.48.4672:10.1.1.48.4672
results concurrent dus transparent modules dw management subspace 
applying local compensation solve concurrency type ii shown table 
name mapping handle concurrent addition functionality feature plugged query engine qe order handle concurrent 
particular employ metadata name mapping table handle 
observation provides intuition costly abort dropsc processing 
study du du processing experiments study system performance various kinds described table 
note dyda system extends system functionality deal concurrent scs 
rst study overhead extended functionality may bring normal system du processing 
clearly extra cost du rename drop du rename drop time ms source updates processing comparison individual update processing come broken query detection scheme dyda applies compensation scheme sweep aasy concurrent dus :10.1.1.48.4672
experiment compare dyda sweep aasy number concurrent data updates distributed sources :10.1.1.48.4672
sweep dyda time ms du processing sweep vs dyda du processing depicts total dw maintenance cost measured milliseconds depicted axis di erent numbers dus depicted axis 
result nd broken query detection cost small number dus 
conclude dyda system imposes little extra cost du processing 
study du du processing experiments study system performance various kinds described table 
note dyda system extends system functionality deal concurrent scs 
rst study overhead extended functionality may bring normal system du processing 
clearly extra cost du rename drop du rename drop time ms source updates processing comparison individual update processing come broken query detection scheme dyda applies compensation scheme sweep aasy concurrent dus :10.1.1.48.4672
experiment compare dyda sweep aasy number concurrent data updates distributed sources :10.1.1.48.4672
sweep dyda time ms du processing sweep vs dyda du processing depicts total dw maintenance cost measured milliseconds depicted axis di erent numbers dus depicted axis 
result nd broken query detection cost small number dus 
conclude dyda system imposes little extra cost du processing 
study sc du processing study concurrency handling type ii sc du concurrency 
sweep dyda time ms du processing sweep vs dyda du processing depicts total dw maintenance cost measured milliseconds depicted axis di erent numbers dus depicted axis 
result nd broken query detection cost small number dus 
conclude dyda system imposes little extra cost du processing 
study sc du processing study concurrency handling type ii sc du concurrency 
note apply compensation scheme sweep aasy concurrent dus :10.1.1.48.4672
exper measure maintenance cost sc processing number concurrent dus 
sc number concurrent dus cost sc ms sc du processing depicts maintenance cost sc measured milliseconds depicted axis di erent numbers concurrent dus depicted axis 
result nd compensation cost number data updates means strategy sc du concurrency handling 
cost broken query recall maintenance query break due existence concurrent scs 
view rewriting caused schema changes iss called view synchronization 
view adaptation va gmr nr incrementally adapts view extent view de nition rede ned 
view self maintenance approach maintain dw extent trying limit access base relations 
proposes optimization multiple view maintenance intermediate views common subexpressions 
approaches need send maintenance queries space concurrency problems arise zgmhw :10.1.1.19.5246:10.1.1.19.5246
introduced eca algorithm incremental view maintenance concurrent data updates restricted single strobe zgmw extend approach handle multiple iss :10.1.1.41.3787
agrawal aasy propose sweep algorithm ensure consistency data warehouse large number cases compared strobe family algorithms :10.1.1.48.4672
improves performance sweep parallelizing sweep :10.1.1.21.1474
proposes materialize delta changes iss views timestamps view able asynchronously refresh extent 
view adaptation va gmr nr incrementally adapts view extent view de nition rede ned 
view self maintenance approach maintain dw extent trying limit access base relations 
proposes optimization multiple view maintenance intermediate views common subexpressions 
approaches need send maintenance queries space concurrency problems arise zgmhw :10.1.1.19.5246:10.1.1.19.5246
introduced eca algorithm incremental view maintenance concurrent data updates restricted single strobe zgmw extend approach handle multiple iss :10.1.1.41.3787
agrawal aasy propose sweep algorithm ensure consistency data warehouse large number cases compared strobe family algorithms :10.1.1.48.4672
improves performance sweep parallelizing sweep :10.1.1.21.1474
proposes materialize delta changes iss views timestamps view able asynchronously refresh extent 
introduce interesting propagation algorithm signi cantly reduce number compensation queries 
view self maintenance approach maintain dw extent trying limit access base relations 
proposes optimization multiple view maintenance intermediate views common subexpressions 
approaches need send maintenance queries space concurrency problems arise zgmhw :10.1.1.19.5246:10.1.1.19.5246
introduced eca algorithm incremental view maintenance concurrent data updates restricted single strobe zgmw extend approach handle multiple iss :10.1.1.41.3787
agrawal aasy propose sweep algorithm ensure consistency data warehouse large number cases compared strobe family algorithms :10.1.1.48.4672
improves performance sweep parallelizing sweep :10.1.1.21.1474
proposes materialize delta changes iss views timestamps view able asynchronously refresh extent 
introduce interesting propagation algorithm signi cantly reduce number compensation queries 
handle source schema change system fail schema change occurs 
proposes optimization multiple view maintenance intermediate views common subexpressions 
approaches need send maintenance queries space concurrency problems arise zgmhw :10.1.1.19.5246:10.1.1.19.5246
introduced eca algorithm incremental view maintenance concurrent data updates restricted single strobe zgmw extend approach handle multiple iss :10.1.1.41.3787
agrawal aasy propose sweep algorithm ensure consistency data warehouse large number cases compared strobe family algorithms :10.1.1.48.4672
improves performance sweep parallelizing sweep :10.1.1.21.1474
proposes materialize delta changes iss views timestamps view able asynchronously refresh extent 
introduce interesting propagation algorithm signi cantly reduce number compensation queries 
handle source schema change system fail schema change occurs 
early zr studies problems dw refresh caused concurrency data updates schema changes :10.1.1.48.149:10.1.1.48.149
improves performance sweep parallelizing sweep :10.1.1.21.1474
proposes materialize delta changes iss views timestamps view able asynchronously refresh extent 
introduce interesting propagation algorithm signi cantly reduce number compensation queries 
handle source schema change system fail schema change occurs 
early zr studies problems dw refresh caused concurrency data updates schema changes :10.1.1.48.149:10.1.1.48.149
assumes reports schema change waits permission dwms commits 
words iss assumed fully cooperative 
drops restricting assumption 
cr employs multiversion concurrency control algorithm handle concurrency problem assuming system resources materialize extra data 
words iss assumed fully cooperative 
drops restricting assumption 
cr employs multiversion concurrency control algorithm handle concurrency problem assuming system resources materialize extra data 
knowledge rst address data warehouse maintenance problem fully concurrent data updates schema changes iss 
dyda overcomes limitation previous approach handling concurrent dus scs dropping restrictive assumption zr releasing protocol dw space space :10.1.1.48.149:10.1.1.48.149
rst identi ed broken query problems dw management concurrent dus scs 
proposed dyda solution framework solves problems layers 
query engine level handles concurrent dus local correction concurrent metadata name mapping 
dw management level generates executable plan concurrent processed newly proposed view adaptation algorithm batch va obviously batch maintenance source updates naturally extended dyda framework 
rst identi ed broken query problems dw management concurrent dus scs 
proposed dyda solution framework solves problems layers 
query engine level handles concurrent dus local correction concurrent metadata name mapping 
dw management level generates executable plan concurrent processed newly proposed view adaptation algorithm batch va obviously batch maintenance source updates naturally extended dyda framework 
aasy agrawal el abbadi singh :10.1.1.48.4672
ecient view maintenance data warehouses 
proceedings sigmod pages 
cgl colby libkin mumick 
algorithms deferred view maintenance 
proceedings international conference extending database technology edbt pages valencia spain march 
nr nica rundensteiner 
containment information view evolution dynamic distributed environments 
proceedings international workshop data warehouse design olap technology vienna austria august 
nr nica rundensteiner :10.1.1.16.5979
view maintenance view synchronization 
international database engineering applications symposium ideas pages august montreal canada 
quass gupta mumick widom 
making views self maintainable data warehousing 
proceedings sigmod pages 
wid widom 
research problems data warehousing 
proceedings international conference information knowledge management pages 
zgmhw zhuge ector garc molina hammer widom :10.1.1.19.5246:10.1.1.19.5246
view maintenance warehousing environment 
proceedings sigmod pages may 
zgmw zhuge ector garc molina wiener :10.1.1.41.3787
strobe algorithms multi source warehouse consistency 
proceedings international conference information knowledge management pages 
zgmhw zhuge ector garc molina hammer widom :10.1.1.19.5246:10.1.1.19.5246
view maintenance warehousing environment 
proceedings sigmod pages may 
zgmw zhuge ector garc molina wiener :10.1.1.41.3787
strobe algorithms multi source warehouse consistency 
international conference parallel distributed information systems pages december 
zr zhang rundensteiner :10.1.1.48.149:10.1.1.48.149
sdcc framework integrating existing algorithms diverse data warehouse maintenance tasks 
proceedings sigmod pages may 
zgmw zhuge ector garc molina wiener :10.1.1.41.3787
strobe algorithms multi source warehouse consistency 
international conference parallel distributed information systems pages december 
zr zhang rundensteiner :10.1.1.48.149:10.1.1.48.149
sdcc framework integrating existing algorithms diverse data warehouse maintenance tasks 
international database engineering application symposium pages montreal canada august 
zr xin zhang elke rundensteiner 
integrating maintenance synchronization data warehouses cooperative framework 
international database engineering application symposium pages montreal canada august 
zr xin zhang elke rundensteiner 
integrating maintenance synchronization data warehouses cooperative framework 
information systems 
xin zhang elke rundensteiner ding :10.1.1.21.1474
pvm parallel view maintenance concurrent data updates distributed sources 
data warehousing knowledge discovery proceedings munich germany september 
appeared 

