updating agents dell lu moniz pereira department information science uppsala university box uppsala sweden pier csd uu se de arti cial departamento de inform de ci universidade nova de lisboa portugal di fct unl pt kowalski sadri propose approach agents ks agents extended logic programming framework 
ks agents hybrid exhibit rational deliberative reactive behaviour 
reasoning core ks agents proof procedure combines forward backward reasoning 
backward reasoning primarily planning problem solving deliberative activities 
forward reasoning primarily reactivity environment possibly including agents 
proof procedure executed observe think act cycle allows agent alert environment react think devise plans 
proof procedure ks agent architecture deal temporal information 
proof procedure iff proof procedure treats inputs environment agents actions abducibles hypotheses 
inputs agents actions treated iff procedure goal level agent knowledge base agent remains unchanged iterations observe think act cycle 
knowledge agent static evolve time 
alferes dynamic logic programming framework allows update knowledge bases represented logic programs :10.1.1.146.2921
order represent negative information logic programs updates new knowledge may contradict old knowledge generalized logic programs allowing default negation premises clauses heads 
suppose set generalized logic programs describing di erent state world 
di erent states may represent di erent time points di erent viewpoints 
consequently logic programs may contain mutually contradictory overlapping information 
suppose set generalized logic programs describing di erent state world 
di erent states may represent di erent time points di erent viewpoints 
consequently logic programs may contain mutually contradictory overlapping information 
role dynamic program update employ mutual relationship existing di erent programs determine program composition stage declarative procedural semantics program resulting combination 
semantic characterization updates generalization stable model semantics normal logic programs :10.1.1.24.6050:10.1.1.30.7276:10.1.1.146.2921
semantics generalized valued case enable update programs founded semantics 
propose combination dynamic logic programming paradigm version ks agents 
resulting framework rational reactive agents dynamically change knowledge bases goals 
particular iteration observe think act cycle agent observations learn new facts new rules environment update knowledge accordingly 
propose combination dynamic logic programming paradigm version ks agents 
resulting framework rational reactive agents dynamically change knowledge bases goals 
particular iteration observe think act cycle agent observations learn new facts new rules environment update knowledge accordingly 
agent receive piece information contrasts knowledge 
solve eventual cases contradiction theory agent techniques contradiction removal preferences sources adopted :10.1.1.13.7065
actions agent modelled means updates inspired approach 
updates logical agents opens number research issues explored 
logic programming framework order represent negative information logic programs need general logic programs allow default negation premises clauses heads call programs generalized logic programs 
atoms names integer called objective atoms atoms called default atoms 
cn set clauses active rules write indicate fc clause qg fr active rule qg state agent fp sg sequence updating programs 
suppose abductive logic program hp ri 
dynamic program update state agent written tuple consists clauses extended language belonging hp ur ir csr max original de nition csr contains axiom axiom needed due dynamic update transformation dual transformation 
note semantics agent inconsistent allow false subscripts current state rules 
may specify semantics agent adapting semantics generalized logic programs techniques removing contradictions arising ax note normal logic program default atoms occur bodies clauses :10.1.1.146.2921
example illustrates dynamic program updates 
example 
conscientious rule update example consider situation healthy 
person speci age 
approach agents reason react environment able update knowledge result new incoming information 
multi agent system agents interact means action rules allow express intention update theory agent 
turn receiving agent decide update knowledge current abductive logic program depending requiring agent 
preferences agents formalized order remove possible contradictory information coming di erent agents 
proposed approach results combination version approach agents ks agents approach updating logic programs :10.1.1.146.2921
contribution twofold 
side presents extension framework updating logic programs cope multiple agents treat active rules 
side proposes starting point agent architecture elaborate ks agents 
simplicity considered propositional generalized logic programs considered time agent cycle 
example agent cycle elaborated order better interrelationship reactive rational part cycle 
may want build agents aware interrelationship able decide reactive rational 
may give agents ability update updating mechanism just de ne cycle level 
furthermore language agents extended take consideration language fully generalized logic programs propositional ones 
aim equip agent form meta level capability way agents reason beliefs beliefs agents communicate lines proposed example :10.1.1.30.7276
addition considering possibility incorporate rational abilities learning approach agents introduce preferences agents choice ability agents 
working implementation updating agents system dynamic program updates 
system running xsb prolog available di fct unl pt jja 
alferes helpful comments previous versions acknowledge support praxis project mental praxis scholarship dell 
