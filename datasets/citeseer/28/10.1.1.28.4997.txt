institut ur informationssysteme 
systeme technische universit wien wien austria tel fax kr tuwien ac www kr tuwien ac institut ur informationssysteme systeme complexity expressive power logic programming georg gottlob thomas eiter andrei voronkov infsys research report february december infsys research report infsys research report february december complexity expressive power logic programming thomas eiter georg gottlob andrei voronkov 
surveys various complexity expressiveness results different forms logic programming 
main focus decidable forms logic programming particular propositional logic programming datalog mention general logic programming function symbols 
classical results plain logic programming pure horn clause programs results various important extensions logic programming surveyed 
include logic programming different forms negation disjunctive logic programming logic programming equality constraint logic programming 
expressive ctl known temporal logics automatic verification 
algorithm computes wfs linear time wide class propositional logic programs contained truszczynski 
full logic programming known 
theorem schlipf logic programming negation wfs complete 
class belongs analytical hierarchy relational form contains relations definable second order formula tuple predicate variables order formula free variables details class context logic programming see schlipf eiter gottlob :10.1.1.21.2628:10.1.1.21.2628
stable model semantics interpretation normal logic program stable model gelfond lifschitz herbrand model general normal logic program may zero multiple stable models 
example non stratified program sleep sleep stable models infsys rr denote sm set stable models meaning st stable model semantics sms st sm note stratified unique stable model stratified stable semantics coincide 
rules increase complexity 
theorem marek truszczynski bidoit froidevaux propositional normal logic program deciding sm np complete 
infsys rr semantics negation free disjunctive logic programs minimal herbrand models unique minimal model exist general 
example consist single clause minimal models fpg fqg 
denote mm set minimal herbrand models generalized closed world assumption gcwa minker negation free amounts meaning fl mm lg 
example consider propositional program describing behavior reviewer reviewing bad happy angry bad smoke happy smoke angry models minimal happy bad angry gcwa gcwa smoke gcwa gcwa 
theorem eiter gottlob eiter propositional negation free disjunctive logic program propositional atom :10.1.1.21.2628
deciding gcwa np complete 
ii deciding gcwa complete 
proof 
hard argue atom gcwa pc pc classical logical consequence relation 
resulting program 
minimal models contain correspond accepting runs seen minimal models contain correspond partial runs initial state state completion run accepting state possible 
implies minimal model containing precisely definition accept input consequently gcwa minimal model accepts input clear program constructed logarithmic space 
consequently deciding gcwa hard 
note problems field nonmonotonic reasoning complete gottlob eiter gottlob eiter gottlob :10.1.1.21.2628
stable negation naturally extends disjunctive logic programs adopting disjunctive stable model disjunctive logic program mm przymusinski gelfond lifschitz 
disjunctive stable model semantics subsumes disjunctive stratified semantics przymusinski 
founded semantics natural extension known semantics brass dix przymusinski appealing attempts direction 
clearly easily computed negation free 
stable negation naturally extends disjunctive logic programs adopting disjunctive stable model disjunctive logic program mm przymusinski gelfond lifschitz 
disjunctive stable model semantics subsumes disjunctive stratified semantics przymusinski 
founded semantics natural extension known semantics brass dix przymusinski appealing attempts direction 
clearly easily computed negation free 
infsys rr theorem eiter gottlob eiter eiter gottlob mannila propositional dlp sms complete :10.1.1.21.2628
disjunctive datalog sms data complete program complete nexptime np result derived utilizing complexity upgrading techniques described section 
sophisticated algorithm computing stable models propositional disjunctive logic programs mirrors complexity problem structure described leone scarcello 
full dlp theorem chomicki subrahmanian dlp gcwa complete 
theorem eiter gottlob full dlp sms complete :10.1.1.21.2628:10.1.1.21.2628
infsys rr theorem eiter gottlob eiter eiter gottlob mannila propositional dlp sms complete :10.1.1.21.2628
disjunctive datalog sms data complete program complete nexptime np result derived utilizing complexity upgrading techniques described section 
sophisticated algorithm computing stable models propositional disjunctive logic programs mirrors complexity problem structure described leone scarcello 
full dlp theorem chomicki subrahmanian dlp gcwa complete 
theorem eiter gottlob full dlp sms complete :10.1.1.21.2628:10.1.1.21.2628
disjunction adds complexity gcwa sms finite herbrand universes np infinite ones 
intuitively explained fact dlp sms corresponds weak fragment recursively translated semantics dlp analyzed 
complexity lower sms example possible worlds possible model semantics chan sakama inoue causal model semantics dix gottlob marek np complete 
higher complexity example regular model semantics maximal partial stable model semantics eiter leone sacca 
higher complexity example regular model semantics maximal partial stable model semantics eiter leone sacca 
typically complete propositional case 
extended disjunctive logic programs default classical negation defined analogously case non disjunctive logic programs gelfond lifschitz 
notion answer set generalized way stable model non disjunctive program disjunctive 
complexity increase disjunctive stable models particular extended disjunctive logic programming complete propositional case eiter gottlob :10.1.1.21.2628
fragments lower complexity known 
important fragment free programs 
informally edlp free distinct atoms mutually depend positive recursion default negation disregarded occur head rule shown ben eliyahu dechter extended disjunctive logic programming free programs np complete polynomial time disjunction free normal logic programming stable model semantics 
generalization allowing default negation head studied inoue sakama 
disjunctive datalog expresses subset queries np express query expresses credulous notion consequence true stable model 
furthermore credulous consequence query nondisjunctive datalog expressible disjunctive datalog inequality predicate recognized 
infsys rr consider full logic programs 
case input databases arbitrary necessarily recursive relations genuine infinite herbrand universe program 
theorem schlipf eiter gottlob logic programming wfs logic programming sms dlp sms captures different function free case adding disjunction increase expressive power normal logic programs :10.1.1.21.2628:10.1.1.21.2628
reason disjunctive logic programs expressed weak fragment class second order logic case infinite herbrand universe coded fragment 
expressiveness results logic programs see schlipf sacca sacca sacca sacca eiter leone sacca cadoli 
particular np captured variant circumscribed datalog cadoli classes polynomial hierarchy captured variants stable models sacca sacca eiter leone sacca sacca modular logic programming eiter gottlob eiter gottlob 
results expressiveness stable model semantics disjunctive databases sets ground clauses facts eiter 
