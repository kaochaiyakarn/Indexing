time responsive indexing schemes moving points pankaj agarwal lars arge jan develop new indexing schemes storing set points dimensions moving linear trajectory range query time answered efficiently 
novel feature indexing schemes number os required answer query depends size data set number points answer difference current time queries close current time answered fast queries far away past may take time 
center geometric computing department computer science duke university durham nc usa 
supported part army research office muri daah sloan fellowship nsf eia eia ccr israeli science foundation 
email pankaj cs duke edu 
center geometric computing department computer science duke university durham nc usa 
email jan math uni de 
efficient indexing schemes support range searching variants central large database system 
relational database systems example dimensional range searching commonly operation 
various dimensional range searching problems crucial support new language features constraint query languages class hierarchies object oriented databases 
spatial databases geographic information systems gis range searching obviously plays pivotal role large number external data structures indexing schemes answering queries developed see :10.1.1.22.3293
need storing processing continuously moving data arises wide range applications including air traffic control digital mobile communication systems 
existing database systems assume data constant explicitly modified suitable representing storing querying continuously moving objects database continuously updated query output obsolete 
better approach represent position moving object function time position changes explicit change database system database needs updated function changes velocity object changes 
extending capabilities existing database systems handle moving object databases mod see :10.1.1.43.7536:10.1.1.44.437
spatial databases geographic information systems gis range searching obviously plays pivotal role large number external data structures indexing schemes answering queries developed see :10.1.1.22.3293
need storing processing continuously moving data arises wide range applications including air traffic control digital mobile communication systems 
existing database systems assume data constant explicitly modified suitable representing storing querying continuously moving objects database continuously updated query output obsolete 
better approach represent position moving object function time position changes explicit change database system database needs updated function changes velocity object changes 
extending capabilities existing database systems handle moving object databases mod see :10.1.1.43.7536:10.1.1.44.437
focus developing efficient indexing schemes storing set moving points dimensional space range queries locations answered quickly 
example spatio temporal query report points lie inside query rectangle minutes 
focus call time responsive indexing schemes fast response time near queries may take time queries far away 
time responsive indexing schemes important applications air traffic control queries near critical queries far away 
sistla proposed data model called moving objects spatio temporal moving objects refined ftl 
models extended incorporate important issues including uncertainty motion communication cost 
spatio temporal models 
number practical methods proposed accessing searching moving objects see require omega gamma os worst case query output size 
proposed provably efficient indexing scheme partition trees queries type :10.1.1.33.4042
structure uses disk blocks answers queries ffl os arbitrarily small constant ffl 
agarwal extended result queries 
scheme answers query optimal log os disk blocks 
indexing schemes time oblivious meaning evolve time 
