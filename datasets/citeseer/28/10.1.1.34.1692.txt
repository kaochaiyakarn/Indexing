organisational abstractions analysis design multi agent systems franco zambonelli dipartimento di scienze dell universit di modena reggio emilia modena italy franco zambonelli unimo nicholas jennings michael wooldridge department electronics computer science university southampton southampton bj united kingdom ecs soton ac uk department computer science university liverpool liverpool zf united kingdom wooldridge csc liv ac uk march architecture multi agent system naturally viewed organised society individuals computational organisation 
reason believe organisational abstractions play central role analysis design systems 
concepts agent roles role models increasingly specify design multi agent systems 
full picture 
introduce additional organisational concepts organisational rules organisational structures organisational patterns believe necessary complete specification computational organisations 
view concepts step comprehensive methodology agent oriented systems 
full picture 
introduce additional organisational concepts organisational rules organisational structures organisational patterns believe necessary complete specification computational organisations 
view concepts step comprehensive methodology agent oriented systems 
submission workshop agent oriented software engineering icse corresponding author franco zambonelli autonomous agents multi agent systems mass rapidly emerging powerful paradigm designing developing complex software systems 
case new software engineering paradigm successful widespread deployment mass requires new models technologies new methodologies support developers engineer systems robust reliable repeatable fashion :10.1.1.17.4453
years attempts develop methodologies 
tuned specific systems agent architectures lacks generality defined extension existing object oriented methodologies exploits abstractions unsuitable modelling agent systems 
background gaia methodology attempts define complete general methodology specifically tailored analysis design mass gaia views process analysing designing multi agent systems constructing computational organisations :10.1.1.10.2242
multi agent systems viewed composed multitude autonomous interacting entities organised society individuals agent plays specific roles 
submission workshop agent oriented software engineering icse corresponding author franco zambonelli autonomous agents multi agent systems mass rapidly emerging powerful paradigm designing developing complex software systems 
case new software engineering paradigm successful widespread deployment mass requires new models technologies new methodologies support developers engineer systems robust reliable repeatable fashion :10.1.1.17.4453
years attempts develop methodologies 
tuned specific systems agent architectures lacks generality defined extension existing object oriented methodologies exploits abstractions unsuitable modelling agent systems 
background gaia methodology attempts define complete general methodology specifically tailored analysis design mass gaia views process analysing designing multi agent systems constructing computational organisations :10.1.1.10.2242
multi agent systems viewed composed multitude autonomous interacting entities organised society individuals agent plays specific roles 
particular gaia agentoriented methodologies suggests defining structure mas terms role model :10.1.1.41.4369
model identifies roles agents play mas interaction protocols different roles involved 
currently stands gaia mass agents cooperative system closed 
years attempts develop methodologies 
tuned specific systems agent architectures lacks generality defined extension existing object oriented methodologies exploits abstractions unsuitable modelling agent systems 
background gaia methodology attempts define complete general methodology specifically tailored analysis design mass gaia views process analysing designing multi agent systems constructing computational organisations :10.1.1.10.2242
multi agent systems viewed composed multitude autonomous interacting entities organised society individuals agent plays specific roles 
particular gaia agentoriented methodologies suggests defining structure mas terms role model :10.1.1.41.4369
model identifies roles agents play mas interaction protocols different roles involved 
currently stands gaia mass agents cooperative system closed 
order deal systems involve self interested agents operating open environment believe additional organisational abstractions necessary 
particular believe organisational rules organisational structures organisational patterns play primary role analysis design mass organisational rules express general global role requirements proper instantiation execution mas :10.1.1.17.4453
particular gaia agentoriented methodologies suggests defining structure mas terms role model :10.1.1.41.4369
model identifies roles agents play mas interaction protocols different roles involved 
currently stands gaia mass agents cooperative system closed 
order deal systems involve self interested agents operating open environment believe additional organisational abstractions necessary 
particular believe organisational rules organisational structures organisational patterns play primary role analysis design mass organisational rules express general global role requirements proper instantiation execution mas :10.1.1.17.4453
organisational structure defines specific class possibilities organisation control regime agents roles conform order mas efficiently specified requirements 
organisational patterns express predefined widely organisational structures re system system manner similar way catalogues object oriented patterns widely exploited design object oriented systems 
show aid application examples adoption organisational abstractions lead methodology applicable wide spectrum agent systems 
believe high level organisational abstractions lead clean manageable re usable mas designs :10.1.1.17.4453
particular believe organisational rules organisational structures organisational patterns play primary role analysis design mass organisational rules express general global role requirements proper instantiation execution mas :10.1.1.17.4453
organisational structure defines specific class possibilities organisation control regime agents roles conform order mas efficiently specified requirements 
organisational patterns express predefined widely organisational structures re system system manner similar way catalogues object oriented patterns widely exploited design object oriented systems 
show aid application examples adoption organisational abstractions lead methodology applicable wide spectrum agent systems 
believe high level organisational abstractions lead clean manageable re usable mas designs :10.1.1.17.4453
specifically organised follows 
section introduces basic concepts underlying agents multi agent systems 
section introduces additional organisational abstractions needed extend gaia open systems motivates adoption 
section briefly sketches organisational abstractions exploited analysis design mass section discusses related area section concludes outlining open issues research directions 
specifically organised follows 
section introduces basic concepts underlying agents multi agent systems 
section introduces additional organisational abstractions needed extend gaia open systems motivates adoption 
section briefly sketches organisational abstractions exploited analysis design mass section discusses related area section concludes outlining open issues research directions 
multi agent systems organisations agents software entities exhibit autonomous proactive goal directed behaviour activities subject global flow control take initiative appropriate reactive changes environment immersed :10.1.1.119.2204
characteristics agents useful stand entities delegated accomplish task behalf user personal digital assistants mail filters simple robots 
majority cases agents exist context multi agent software systems global behaviour derives interaction constituent agents 
cases agents exhibit social behaviour interact cooperate achieve common objective helps interacting agents achieve objectives :10.1.1.17.4453
distinguish main classes multiple agent system distributed problem solving systems component agents explicitly designed cooperatively achieve goal ii open systems agents necessarily designed share common goal dynamically leave enter system 
section briefly sketches organisational abstractions exploited analysis design mass section discusses related area section concludes outlining open issues research directions 
multi agent systems organisations agents software entities exhibit autonomous proactive goal directed behaviour activities subject global flow control take initiative appropriate reactive changes environment immersed :10.1.1.119.2204
characteristics agents useful stand entities delegated accomplish task behalf user personal digital assistants mail filters simple robots 
majority cases agents exist context multi agent software systems global behaviour derives interaction constituent agents 
cases agents exhibit social behaviour interact cooperate achieve common objective helps interacting agents achieve objectives :10.1.1.17.4453
distinguish main classes multiple agent system distributed problem solving systems component agents explicitly designed cooperatively achieve goal ii open systems agents necessarily designed share common goal dynamically leave enter system 
case agents known priori agents supposed benevolent trust interactions :10.1.1.17.4453
case dynamic arrival unknown agents needs taken account possibility self interested behaviour course interactions 
organisational metaphor design parallel distributed applications distributed object systems usually relies architecture derives decomposition functionalities data required system achieve goal definition inter dependencies 
characteristics agents useful stand entities delegated accomplish task behalf user personal digital assistants mail filters simple robots 
majority cases agents exist context multi agent software systems global behaviour derives interaction constituent agents 
cases agents exhibit social behaviour interact cooperate achieve common objective helps interacting agents achieve objectives :10.1.1.17.4453
distinguish main classes multiple agent system distributed problem solving systems component agents explicitly designed cooperatively achieve goal ii open systems agents necessarily designed share common goal dynamically leave enter system 
case agents known priori agents supposed benevolent trust interactions :10.1.1.17.4453
case dynamic arrival unknown agents needs taken account possibility self interested behaviour course interactions 
organisational metaphor design parallel distributed applications distributed object systems usually relies architecture derives decomposition functionalities data required system achieve goal definition inter dependencies 
mass autonomous proactive behaviour constituent agents suggests applications designed mimicking behaviour structure human organisations 
agent assigned specific role system 
agent assigned specific role system 
defined task responsibility context system agent accomplish autonomous fashion centralised control 
model interactions longer merely expression inter dependencies viewed means agent accomplish role organisation 
interactions identified localised definition role help characterise position agent organisation 
organisational perspective design system complex easier manage traditional metaphors concurrent systems :10.1.1.17.4453
firstly agent separate locus control charge accomplishing role fully responsible 
secondly agents typically embed functionality need accomplish role inter dependencies system components reduced 
taken points ease design process lead cleaner separation component level intra agent system level inter agent design dimensions 
final advantage relates fact cases mass intended support control real world organisation 
agent directly associated person behaviour influenced person opportunistic behaviour emerge application 
example author attempt review pc member try deal expected deal 
addition natural environment mas internet due world wide nature conference organisation interactions agents external mas occur 
instance reviewer decide exploit personal agent interact agents organisation relying instance reviewer agent class explicitly designed conference management system 
organisational abstractions organisational role models precisely describe roles constitute computational organisation terms functionalities activities responsibilities terms interaction protocols patterns establish position role organisation role models considered sole organisational abstraction base entire development process :10.1.1.41.4369:10.1.1.17.4453:10.1.1.10.2242
design process defines role model consequently organisation number steps need performed 
firstly analysis phase identify organisation expected 
secondly design phase define kind organisation best fits requirements identified analysis phase 
thirdly needs determined re available components exploited part organisational design 
firstly analysis phase identify organisation expected 
secondly design phase define kind organisation best fits requirements identified analysis phase 
thirdly needs determined re available components exploited part organisational design 
taken requires organisational abstractions organisational rules section organisational structures section organisational patterns section 
organisational rules analysis phase aims collect specifications requirements building mas :10.1.1.17.4453
possible identify basic skills functionalities competences required organisation basic interactions required exploitation skills 
design phase decided organisation appropriate system identified skills interactions aim fully defining roles interactions protocols played system defining complete role model imply earlier commitment specific form organisation 
analysis phase identify absence complete role model constraints actual organisation defined respect 
implementation execution computational organisation respect number constraints identification spread horizontally roles protocols context identified preliminary roles protocols ii express relations constraints roles protocols roles protocols :10.1.1.17.4453
organisational rules analysis phase aims collect specifications requirements building mas :10.1.1.17.4453
possible identify basic skills functionalities competences required organisation basic interactions required exploitation skills 
design phase decided organisation appropriate system identified skills interactions aim fully defining roles interactions protocols played system defining complete role model imply earlier commitment specific form organisation 
analysis phase identify absence complete role model constraints actual organisation defined respect 
implementation execution computational organisation respect number constraints identification spread horizontally roles protocols context identified preliminary roles protocols ii express relations constraints roles protocols roles protocols :10.1.1.17.4453
example case human organisations social conventions define set implicit rules moderate interactions members clerk contradict ignore commands manager ii specific conventions impose constraints different roles played organisations clerk assume role imply member managing staff clerk :10.1.1.17.4453
cases global constraints easily expressed terms individual roles individual interaction protocols 
identification important correct development system taken account designer defining organisation system 
capture type information concept organisational rules 
possible identify basic skills functionalities competences required organisation basic interactions required exploitation skills 
design phase decided organisation appropriate system identified skills interactions aim fully defining roles interactions protocols played system defining complete role model imply earlier commitment specific form organisation 
analysis phase identify absence complete role model constraints actual organisation defined respect 
implementation execution computational organisation respect number constraints identification spread horizontally roles protocols context identified preliminary roles protocols ii express relations constraints roles protocols roles protocols :10.1.1.17.4453
example case human organisations social conventions define set implicit rules moderate interactions members clerk contradict ignore commands manager ii specific conventions impose constraints different roles played organisations clerk assume role imply member managing staff clerk :10.1.1.17.4453
cases global constraints easily expressed terms individual roles individual interaction protocols 
identification important correct development system taken account designer defining organisation system 
capture type information concept organisational rules 
explicit identification organisational rules particular importance context open agent systems 
identification important correct development system taken account designer defining organisation system 
capture type information concept organisational rules 
explicit identification organisational rules particular importance context open agent systems 
arrival new previously unknown possibly self interested agents organisation enforce internal coherency despite dynamic environment 
identification global organisational rules allows system designer explicitly define allow newly arrived possibly unknown agents enter organisation accepted position organisation ii behaviours considered expression self interest prevented organisation :10.1.1.17.4453
context organisational rules may drive designer definition specific organisation eases enforcement organisational rules instance facilitate preventing undesirable behaviours unknown self interested agents :10.1.1.17.4453
manufacturing pipeline example different stages maintain speed flow items pipeline :10.1.1.17.4453
requirement easily expressed terms global organisational rule replicating requirement role organisation 
conference management system number rules drive proper implementation organisation 
capture type information concept organisational rules 
explicit identification organisational rules particular importance context open agent systems 
arrival new previously unknown possibly self interested agents organisation enforce internal coherency despite dynamic environment 
identification global organisational rules allows system designer explicitly define allow newly arrived possibly unknown agents enter organisation accepted position organisation ii behaviours considered expression self interest prevented organisation :10.1.1.17.4453
context organisational rules may drive designer definition specific organisation eases enforcement organisational rules instance facilitate preventing undesirable behaviours unknown self interested agents :10.1.1.17.4453
manufacturing pipeline example different stages maintain speed flow items pipeline :10.1.1.17.4453
requirement easily expressed terms global organisational rule replicating requirement role organisation 
conference management system number rules drive proper implementation organisation 
notable examples agent prevented playing role author reviewer pc members charge collecting reviews papers 
explicit identification organisational rules particular importance context open agent systems 
arrival new previously unknown possibly self interested agents organisation enforce internal coherency despite dynamic environment 
identification global organisational rules allows system designer explicitly define allow newly arrived possibly unknown agents enter organisation accepted position organisation ii behaviours considered expression self interest prevented organisation :10.1.1.17.4453
context organisational rules may drive designer definition specific organisation eases enforcement organisational rules instance facilitate preventing undesirable behaviours unknown self interested agents :10.1.1.17.4453
manufacturing pipeline example different stages maintain speed flow items pipeline :10.1.1.17.4453
requirement easily expressed terms global organisational rule replicating requirement role organisation 
conference management system number rules drive proper implementation organisation 
notable examples agent prevented playing role author reviewer pc members charge collecting reviews papers 
constraints easily expressed terms properties responsibilities associated single roles protocols 
conference management system number rules drive proper implementation organisation 
notable examples agent prevented playing role author reviewer pc members charge collecting reviews papers 
constraints easily expressed terms properties responsibilities associated single roles protocols 
represent global organisational rules 
organisational structures role model describes roles organisation positions organisation :10.1.1.17.4453
role model implicitly defines topology interaction patterns control regime organisation activities organisational structure :10.1.1.17.4453
example role model describing organisation terms master role slave roles charge assigning load balancing activities implicitly defines organisational structure hierarchical topology load partitioning control regime 
exemplar organisational structures include collective peers multi level multi hierarchy modelled term role model :10.1.1.17.4453
conceptually wrong think role model defines organisational structure 
notable examples agent prevented playing role author reviewer pc members charge collecting reviews papers 
constraints easily expressed terms properties responsibilities associated single roles protocols 
represent global organisational rules 
organisational structures role model describes roles organisation positions organisation :10.1.1.17.4453
role model implicitly defines topology interaction patterns control regime organisation activities organisational structure :10.1.1.17.4453
example role model describing organisation terms master role slave roles charge assigning load balancing activities implicitly defines organisational structure hierarchical topology load partitioning control regime 
exemplar organisational structures include collective peers multi level multi hierarchy modelled term role model :10.1.1.17.4453
conceptually wrong think role model defines organisational structure 
design mas design organisation role model derive organisational structure explicitly chosen 
represent global organisational rules 
organisational structures role model describes roles organisation positions organisation :10.1.1.17.4453
role model implicitly defines topology interaction patterns control regime organisation activities organisational structure :10.1.1.17.4453
example role model describing organisation terms master role slave roles charge assigning load balancing activities implicitly defines organisational structure hierarchical topology load partitioning control regime 
exemplar organisational structures include collective peers multi level multi hierarchy modelled term role model :10.1.1.17.4453
conceptually wrong think role model defines organisational structure 
design mas design organisation role model derive organisational structure explicitly chosen 
organisational structures viewed class abstractions design mass definition system organisational structure derive specifications collected analysis phase factors related efficiency simplicity application design organisational theory 
case methodology start analysis phase attempting define complete role model implicitly sets organisational structure 
design mas design organisation role model derive organisational structure explicitly chosen 
organisational structures viewed class abstractions design mass definition system organisational structure derive specifications collected analysis phase factors related efficiency simplicity application design organisational theory 
case methodology start analysis phase attempting define complete role model implicitly sets organisational structure 
definition organisational structure design choice anticipated analysis phase 
fact starting organisational structure know advance committing priori organisational structure may prevent subsequent optimization change cases organisational structure mas directly driven real world system mas supposed support monitor automatically imply organisation software system mimic real organisation :10.1.1.17.4453
mas may better adopting different organisational choice 
reasons happen real world organisation may structured analysis phase highlight shortcomings software may change way working 
mere presence software introduces changes real organisation changes need reflected mas efficiency issues may driven human organisation adoption particular organisational structure may necessarily apply agent organisation 
organisation defined respect organisational rules 
mere presence software introduces changes real organisation changes need reflected mas efficiency issues may driven human organisation adoption particular organisational structure may necessarily apply agent organisation 
organisation defined respect organisational rules 
starting pre defined organisational structure difficult organisational rules respected enforced organisation 
choice organisation follow identification organisational rules possibly driven 
manufacturing pipeline example natural choice organisational structure stages pipeline peers directly interact neighbours needed :10.1.1.17.4453
instance stages stage stage stage stage controlled agents respectively agents directly interact neighbours 
closely mimics structure real world pipeline 
possible choice 
may necessarily best 
instance stages stage stage stage stage controlled agents respectively agents directly interact neighbours 
closely mimics structure real world pipeline 
possible choice 
may necessarily best 
instance due real time nature pipeline control problem may happen problem requires global coordination agents solved due time high coordination costs associated peer systems :10.1.1.17.4453
cases designer adopt different organisational structure example sketched introduce global coordinator agent rc charge controlling mediating interactions agents leading hierarchical organisation :10.1.1.17.4453
conference management example structure organisation generally derived structure conference decided adopt 
case conference varies organisational structure year year depending size conference attitudes 
example small conference usually relies solely pc members review process 
closely mimics structure real world pipeline 
possible choice 
may necessarily best 
instance due real time nature pipeline control problem may happen problem requires global coordination agents solved due time high coordination costs associated peer systems :10.1.1.17.4453
cases designer adopt different organisational structure example sketched introduce global coordinator agent rc charge controlling mediating interactions agents leading hierarchical organisation :10.1.1.17.4453
conference management example structure organisation generally derived structure conference decided adopt 
case conference varies organisational structure year year depending size conference attitudes 
example small conference usually relies solely pc members review process 
contrast big conference usually involve external reviewers 
conference management example structure organisation generally derived structure conference decided adopt 
case conference varies organisational structure year year depending size conference attitudes 
example small conference usually relies solely pc members review process 
contrast big conference usually involve external reviewers 
may turn involve partitioning papers pc members making pc members charge seeking appropriate number reviews assigned partition :10.1.1.17.4453
analysis phase commits system specific organisational structure designer associated mas find difficult adapt system year year changing needs 
analysis phase simply describes system requirements abstracting away specific organisational structure designer re utilise produce new design conference new organisational structure 
organisational relationships obvious means specify organisation inter agent relationships exist 
emphasise universally accepted stage stage stage stage organisations pipeline pipeline organisation stage stage stage stage rc organisations pipeline hierarchical organisation ontology organisational relationships different types organisations entirely different organisational concepts 
organisational relationships obvious means specify organisation inter agent relationships exist 
emphasise universally accepted stage stage stage stage organisations pipeline pipeline organisation stage stage stage stage rc organisations pipeline hierarchical organisation ontology organisational relationships different types organisations entirely different organisational concepts 
example notions command control may widely accepted military organisations tend academic organisations 
pass identify certain types relationships frequently occur human organisations control identify authority structures system peer identify status relationships system benevolence identify agents shared interests dependency identify ways agent may rely peer identify agents equal status ownership delimit organisational boundaries 
note binary relationships exist roles system set roles :10.1.1.17.4453
follows give intuition type relation 
go give precise formal definition semantics relationships 
paradigm example organisational relationship agent controlling 
intuitively role controls role perform service demanded controls far concerned role resource desired 
follows give intuition type relation 
go give precise formal definition semantics relationships 
paradigm example organisational relationship agent controlling 
intuitively role controls role perform service demanded controls far concerned role resource desired 
control relationship satisfy properties reflexive role controls :10.1.1.17.4453
transitive ann controls bob bob controls charles ann controls charles 
anti symmetric ann controls bob bob control ann 
peer relationships capture notion equal status organisations 
example consider professors university different departments 
example ann controls resource example piece information bob requires information satisfy goals bob dependent ann 
fact subclasses dependence relation may exist agents see 
example ann bob may mutually dependent bob may dependent ann ann know may dependent ann know 
dependency relations reflexive transitive need symmetric 
turning ownership relations idea delimit boundaries common ownership agents belonging organisation grouped agents belonging :10.1.1.17.4453
agent required member ownership group may course singleton set 
formally ownership relation equivalence relation 
organisational patterns numerous potential organisational structures terms topology interactions control regimes 
believe comparatively small subset structures time 
case widely patterns composition interaction object oriented systems precisely described terms extent applicability sample implementation case examples 
software designer rely catalogues build applications composing reusing single objects pieces software architecture 
area agent systems envisage similar respect widely organisational structures 
availability catalogues organisational patterns designers recognise mass presence known patterns re definitions catalogue 
addition designers guided catalogue choice appropriate organisational patterns mas :10.1.1.17.4453
course patterns properly exploited organisational structure explicitly identified design phase 
pipeline example pipeline organisation agents expresses organisational pattern re appear applications widely exploited architectural patterns traditional software systems :10.1.1.17.4453
said hierarchical pipeline structure :10.1.1.17.4453
cases catalogue patterns available designer rely help define system structure 
area agent systems envisage similar respect widely organisational structures 
availability catalogues organisational patterns designers recognise mass presence known patterns re definitions catalogue 
addition designers guided catalogue choice appropriate organisational patterns mas :10.1.1.17.4453
course patterns properly exploited organisational structure explicitly identified design phase 
pipeline example pipeline organisation agents expresses organisational pattern re appear applications widely exploited architectural patterns traditional software systems :10.1.1.17.4453
said hierarchical pipeline structure :10.1.1.17.4453
cases catalogue patterns available designer rely help define system structure 
conference management example various organisational structures conferences different sizes tend adopt fairly typical single hierarchies multi level ones :10.1.1.17.4453
case expected methodology explicit organisational patterns ease application design :10.1.1.17.4453
availability catalogues organisational patterns designers recognise mass presence known patterns re definitions catalogue 
addition designers guided catalogue choice appropriate organisational patterns mas :10.1.1.17.4453
course patterns properly exploited organisational structure explicitly identified design phase 
pipeline example pipeline organisation agents expresses organisational pattern re appear applications widely exploited architectural patterns traditional software systems :10.1.1.17.4453
said hierarchical pipeline structure :10.1.1.17.4453
cases catalogue patterns available designer rely help define system structure 
conference management example various organisational structures conferences different sizes tend adopt fairly typical single hierarchies multi level ones :10.1.1.17.4453
case expected methodology explicit organisational patterns ease application design :10.1.1.17.4453
organisation oriented methodology exploitation organisational abstractions introduced naturally promotes methodology analysis design mass analysis phase collecting specifications design computational organisation start :10.1.1.17.4453
course patterns properly exploited organisational structure explicitly identified design phase 
pipeline example pipeline organisation agents expresses organisational pattern re appear applications widely exploited architectural patterns traditional software systems :10.1.1.17.4453
said hierarchical pipeline structure :10.1.1.17.4453
cases catalogue patterns available designer rely help define system structure 
conference management example various organisational structures conferences different sizes tend adopt fairly typical single hierarchies multi level ones :10.1.1.17.4453
case expected methodology explicit organisational patterns ease application design :10.1.1.17.4453
organisation oriented methodology exploitation organisational abstractions introduced naturally promotes methodology analysis design mass analysis phase collecting specifications design computational organisation start :10.1.1.17.4453
includes identification goals organisation expected global behaviour basic skills required organisation basic interactions required ex skills preliminary role model rules organisation respect enforce global behaviour 
expected output analysis phase ple pr pp ol pr preliminary roles system derived identification basic skills pp preliminary protocols discovered necessary preliminary roles ol organisational rules :10.1.1.17.4453
pipeline example pipeline organisation agents expresses organisational pattern re appear applications widely exploited architectural patterns traditional software systems :10.1.1.17.4453
said hierarchical pipeline structure :10.1.1.17.4453
cases catalogue patterns available designer rely help define system structure 
conference management example various organisational structures conferences different sizes tend adopt fairly typical single hierarchies multi level ones :10.1.1.17.4453
case expected methodology explicit organisational patterns ease application design :10.1.1.17.4453
organisation oriented methodology exploitation organisational abstractions introduced naturally promotes methodology analysis design mass analysis phase collecting specifications design computational organisation start :10.1.1.17.4453
includes identification goals organisation expected global behaviour basic skills required organisation basic interactions required ex skills preliminary role model rules organisation respect enforce global behaviour 
expected output analysis phase ple pr pp ol pr preliminary roles system derived identification basic skills pp preliminary protocols discovered necessary preliminary roles ol organisational rules :10.1.1.17.4453
worth noting analysis phase specific organisational structure 
said hierarchical pipeline structure :10.1.1.17.4453
cases catalogue patterns available designer rely help define system structure 
conference management example various organisational structures conferences different sizes tend adopt fairly typical single hierarchies multi level ones :10.1.1.17.4453
case expected methodology explicit organisational patterns ease application design :10.1.1.17.4453
organisation oriented methodology exploitation organisational abstractions introduced naturally promotes methodology analysis design mass analysis phase collecting specifications design computational organisation start :10.1.1.17.4453
includes identification goals organisation expected global behaviour basic skills required organisation basic interactions required ex skills preliminary role model rules organisation respect enforce global behaviour 
expected output analysis phase ple pr pp ol pr preliminary roles system derived identification basic skills pp preliminary protocols discovered necessary preliminary roles ol organisational rules :10.1.1.17.4453
worth noting analysis phase specific organisational structure 
output expressed terms independent specific organisational structure 
conference management example various organisational structures conferences different sizes tend adopt fairly typical single hierarchies multi level ones :10.1.1.17.4453
case expected methodology explicit organisational patterns ease application design :10.1.1.17.4453
organisation oriented methodology exploitation organisational abstractions introduced naturally promotes methodology analysis design mass analysis phase collecting specifications design computational organisation start :10.1.1.17.4453
includes identification goals organisation expected global behaviour basic skills required organisation basic interactions required ex skills preliminary role model rules organisation respect enforce global behaviour 
expected output analysis phase ple pr pp ol pr preliminary roles system derived identification basic skills pp preliminary protocols discovered necessary preliminary roles ol organisational rules :10.1.1.17.4453
worth noting analysis phase specific organisational structure 
output expressed terms independent specific organisational structure 
design phase builds output analysis phase produces complete specification mas 
design phase decomposed phases definition organisational structure choosing topology control regime 
design phase decomposed phases definition organisational structure choosing topology control regime 
involves considering organisational efficiency ii need respect enforce organisational rules iii corresponding real world organisation completion preliminary role model adopted organisational structure keeping separated possible organisational independent aspects detected analysis phase organisational dependent ones deriving adoption specific organisational structure insertion roles protocols exploitation known organisational patterns basis system identified structure 
gaia view output design phase specification picked traditional method object orientation component ware implemented appropriate agent programming framework available 
related traditional analysis design methodologies object oriented ones poorly suited mass fundamental mismatch abstractions provide 
consequently believe efforts attempt simply extend object oriented methodologies mas inevitably fall short :10.1.1.27.9180
traditional compositional methods object oriented software architectures limited applicability definition organisations mass hand defined interaction models static compared dynamic interaction model defined agents :10.1.1.101.1089:10.1.1.17.4453:10.1.1.103.1632
hand functionality oriented modelling interactions system components clashes role oriented perspective mass reasons number specifically agent oriented methodologies proposed years see survey 
attempt exploit idea mas computational organisation 
majority cases works suffer blurring analysis design phases 
involves considering organisational efficiency ii need respect enforce organisational rules iii corresponding real world organisation completion preliminary role model adopted organisational structure keeping separated possible organisational independent aspects detected analysis phase organisational dependent ones deriving adoption specific organisational structure insertion roles protocols exploitation known organisational patterns basis system identified structure 
gaia view output design phase specification picked traditional method object orientation component ware implemented appropriate agent programming framework available 
related traditional analysis design methodologies object oriented ones poorly suited mass fundamental mismatch abstractions provide 
consequently believe efforts attempt simply extend object oriented methodologies mas inevitably fall short :10.1.1.27.9180
traditional compositional methods object oriented software architectures limited applicability definition organisations mass hand defined interaction models static compared dynamic interaction model defined agents :10.1.1.101.1089:10.1.1.17.4453:10.1.1.103.1632
hand functionality oriented modelling interactions system components clashes role oriented perspective mass reasons number specifically agent oriented methodologies proposed years see survey 
attempt exploit idea mas computational organisation 
majority cases works suffer blurring analysis design phases 
addition proposals define organisation collection roles role model introducing higher level organisational abstractions 
hand functionality oriented modelling interactions system components clashes role oriented perspective mass reasons number specifically agent oriented methodologies proposed years see survey 
attempt exploit idea mas computational organisation 
majority cases works suffer blurring analysis design phases 
addition proposals define organisation collection roles role model introducing higher level organisational abstractions 
precisely happens example system group structure simply collection roles compose organisation :10.1.1.41.4369
analogously toolkit approach organisation defined simply set roles compose interaction protocols occur roles 
approaches incorporate notions organisational rules organisational structures reasons outlined limited range agent systems deal 
gaia methodology provide clean separation analysis design phases :10.1.1.10.2242
suffers limitations caused incompleteness organisational abstractions 
addition proposals define organisation collection roles role model introducing higher level organisational abstractions 
precisely happens example system group structure simply collection roles compose organisation :10.1.1.41.4369
analogously toolkit approach organisation defined simply set roles compose interaction protocols occur roles 
approaches incorporate notions organisational rules organisational structures reasons outlined limited range agent systems deal 
gaia methodology provide clean separation analysis design phases :10.1.1.10.2242
suffers limitations caused incompleteness organisational abstractions 
objective gaia analysis phase define fully elaborated role model derived system specification accurate description protocols roles involved 
implicitly assumes organisational structure priori known 
stated case :10.1.1.17.4453
gaia methodology provide clean separation analysis design phases :10.1.1.10.2242
suffers limitations caused incompleteness organisational abstractions 
objective gaia analysis phase define fully elaborated role model derived system specification accurate description protocols roles involved 
implicitly assumes organisational structure priori known 
stated case :10.1.1.17.4453
addition focusing exclusively role model analysis phase fails identify global organisational rules making gaia unsuitable modeling open systems behaviour selfinterested agents 
area coordination models languages explicitly address problem defining global rules coordination laws rule behaviour interaction agent ensembles interactions occur specific coordination media internal behaviour programmed implement specific policies governing agent interactions :10.1.1.17.4453:10.1.1.17.4453:10.1.1.17.4453:10.1.1.17.4453
tends define methodology analysis design systems 
fishmarket system agent mediated auctions recognises need force agents act accordance social conventions rule organisation auction :10.1.1.17.4453
objective gaia analysis phase define fully elaborated role model derived system specification accurate description protocols roles involved 
implicitly assumes organisational structure priori known 
stated case :10.1.1.17.4453
addition focusing exclusively role model analysis phase fails identify global organisational rules making gaia unsuitable modeling open systems behaviour selfinterested agents 
area coordination models languages explicitly address problem defining global rules coordination laws rule behaviour interaction agent ensembles interactions occur specific coordination media internal behaviour programmed implement specific policies governing agent interactions :10.1.1.17.4453:10.1.1.17.4453:10.1.1.17.4453:10.1.1.17.4453
tends define methodology analysis design systems 
fishmarket system agent mediated auctions recognises need force agents act accordance social conventions rule organisation auction :10.1.1.17.4453
system dynamically associates agent auction controller agent agent charge mediating interactions making agents respect auction conventions :10.1.1.17.4453
preliminary catalogues agent patterns 
stated case :10.1.1.17.4453
addition focusing exclusively role model analysis phase fails identify global organisational rules making gaia unsuitable modeling open systems behaviour selfinterested agents 
area coordination models languages explicitly address problem defining global rules coordination laws rule behaviour interaction agent ensembles interactions occur specific coordination media internal behaviour programmed implement specific policies governing agent interactions :10.1.1.17.4453:10.1.1.17.4453:10.1.1.17.4453:10.1.1.17.4453
tends define methodology analysis design systems 
fishmarket system agent mediated auctions recognises need force agents act accordance social conventions rule organisation auction :10.1.1.17.4453
system dynamically associates agent auction controller agent agent charge mediating interactions making agents respect auction conventions :10.1.1.17.4453
preliminary catalogues agent patterns 
cases patterns lack organisation oriented perspective analysis design mass 
definition patterns abstracts away specific methodology mas analysis design encourage facilitate re patterns 
addition focusing exclusively role model analysis phase fails identify global organisational rules making gaia unsuitable modeling open systems behaviour selfinterested agents 
area coordination models languages explicitly address problem defining global rules coordination laws rule behaviour interaction agent ensembles interactions occur specific coordination media internal behaviour programmed implement specific policies governing agent interactions :10.1.1.17.4453:10.1.1.17.4453:10.1.1.17.4453:10.1.1.17.4453
tends define methodology analysis design systems 
fishmarket system agent mediated auctions recognises need force agents act accordance social conventions rule organisation auction :10.1.1.17.4453
system dynamically associates agent auction controller agent agent charge mediating interactions making agents respect auction conventions :10.1.1.17.4453
preliminary catalogues agent patterns 
cases patterns lack organisation oriented perspective analysis design mass 
definition patterns abstracts away specific methodology mas analysis design encourage facilitate re patterns 
analysed number issues related analysis design multi agent systems 
analysed number issues related analysis design multi agent systems 
specifically considered view developing multi agent systems process constructing computational organisations 
date organisational concepts agent roles role models important research area field agent systems 
introduced organisational abstractions organisational rules organisational structures organisational patterns 
concepts neglected current methodologies agent oriented software engineering fundamental importance multi agent systems believe play central role methodology :10.1.1.17.4453
having introduced motivated organisational abstractions sketched general guidelines new methodology analysis design multi agent systems centered organisational abstractions 
needed detail proposed methodology formalising concepts organisation rules organisational structures ii providing suitable notations expressing expected outputs analysis design phases iii identifying guidelines assist designer choice organisational structure may possibly supported analytical methods experimental results 
booch 
object oriented analysis design second edition 
