learning strategy knowledge incrementally manuela veloso daniel borrajo department computer science de inform carnegie mellon university universidad de madrid pittsburgh pa del monte madrid spain veloso cs cmu edu fi es modern industrial processes require advanced computer tools adapt user requirements tasks solved 
strategy learning consists automating acquisition patterns actions solving particular tasks 
current intelligent strategy learning systems acquire operational knowledge improve efficiency particular problem solver 
strategy learning tools provide way achieving low cost solutions user specific criteria 
learning system hamlet integrated planning architecture prodigy acquires control knowledge guide prodigy efficiently produce cost effective plans 
hamlet learns planning episodes explaining correct decisions refines learned strategy knowledge incrementally correct experience 
learning strategy knowledge necessary step application today computer technology real world tasks 
current strategy learning systems eagerly try explain correctly problem solving choices single episode static analysis domain definition 
rely heavily complete axiomatic domain theory provide support generalization explanation episode situations 
requirement explanation effort generally acceptable realworld applications incompletely specified subject dynamic changes 
hamlet incremental inductive strategy learning system acquires control knowledge guiding base level nonlinear planner prodigy efficiently achieve optimal solutions complex problems :10.1.1.17.6382
describes hamlet strategy learning tool context prodigy main characteristics contributions integration general problem solver particular ffl definition problem solving planning decision making process choice points available alternatives clearly identified 
ffl problem solving search episodes space alternatives identify learning opportunities successful failed choices 
ffl learning meta level strategy rules successful choices explaining situations successes expected occur 
generally computationally expensive explanation process limited predefined template 
running times decreased rules significantly 
find empirically learned rules time spent solving problem degraded consider utility problem 
currently developing efficient methods organizing matching learned control rules 
consider organization essential part learning process 
related speedup learning systems applied problem solvers linearity assumption ones applied prolog logic programming problem solvers special purpose problem solvers general purpose linear problem solvers :10.1.1.49.1687
problem solvers known incomplete incapable finding optimal solutions 
remove linearity assumption dealing nonlinear problem solvers 
kind problem solvers needed address real world complex problems 
general learning systems applied nonlinear problem solving 
