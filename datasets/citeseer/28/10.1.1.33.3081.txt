algorithm evaluate quantified boolean formulae experimental evaluation marco cadoli marco schaerf andrea dipartimento di informatica sistemistica universit di roma la sapienza salaria roma italy email dis uniroma march technical report march 
dipartimento di informatica sistemistica universit di roma la sapienza italy 
url www dis uniroma pub ai papers etal ps gz high computational complexity advanced reasoning tasks reasoning knowledge planning calls efficient reliable algorithms reasoning problems harder np 
propose evaluate algorithm evaluating quantified boolean formulae language extends propositional logic way advanced forms propositional reasoning circumscription easily formulated evaluation qbf 
algorithms evaluation qbfs suitable experimental analysis wide range complexity classes property easily formalisms 
evaluate generalization davis putnam procedure sat guaranteed polynomial space 
discuss various options investigated heuristics data structures report main results experimental analysis 
particular evaluate orders magnitude efficient nested backtracking procedure resorts davis putnam algorithm handling innermost set quantifiers 
experiments show randomly generated qbfs exhibit regular patterns phase transition easy hard easy distribution 
show reasoning problems frequent knowledge representation modeled evaluation qbf 
parts appeared preliminary form interest algorithms sat problem constant ai community :10.1.1.33.3081
sat obviously relevant ai prototypical np complete problem challenges ability cope large knowledge bases 
usage algorithms sat reasoning tasks different classical propositional reasoning emphasized literature 
example real world problems planning encoded sat theorem provers modal logic sat solvers black boxes :10.1.1.134.1335:10.1.1.1.8433
anyway optimizing algorithms sat goals knowledge representation kr theoretical analysis showed advanced forms reasoning belief revision non monotonic reasoning reasoning knowledge strips planning computational complexity higher complexity sat cf 
show reasoning problems frequent knowledge representation modeled evaluation qbf 
parts appeared preliminary form interest algorithms sat problem constant ai community :10.1.1.33.3081
sat obviously relevant ai prototypical np complete problem challenges ability cope large knowledge bases 
usage algorithms sat reasoning tasks different classical propositional reasoning emphasized literature 
example real world problems planning encoded sat theorem provers modal logic sat solvers black boxes :10.1.1.134.1335:10.1.1.1.8433
anyway optimizing algorithms sat goals knowledge representation kr theoretical analysis showed advanced forms reasoning belief revision non monotonic reasoning reasoning knowledge strips planning computational complexity higher complexity sat cf 
shows sigma pspace complete reasoning problems :10.1.1.37.2627
calls efficient reliable algorithms reasoning problems harder np 
propose evaluate algorithm evaluating quantified boolean formula qbf 
sat obviously relevant ai prototypical np complete problem challenges ability cope large knowledge bases 
usage algorithms sat reasoning tasks different classical propositional reasoning emphasized literature 
example real world problems planning encoded sat theorem provers modal logic sat solvers black boxes :10.1.1.134.1335:10.1.1.1.8433
anyway optimizing algorithms sat goals knowledge representation kr theoretical analysis showed advanced forms reasoning belief revision non monotonic reasoning reasoning knowledge strips planning computational complexity higher complexity sat cf 
shows sigma pspace complete reasoning problems :10.1.1.37.2627
calls efficient reliable algorithms reasoning problems harder np 
propose evaluate algorithm evaluating quantified boolean formula qbf 
intuitively qbfs extend propositional logic way similar extension second order logic qbfs propositional variables quantified existentially universally 
example means truth assignment exists truth assignment true 
implemented algorithm performed extensive analysis performances evaluation randomly generated qbfs 
analysis reported kind 
particular experiments show evaluate orders magnitude efficient simplest algorithm evaluation nested backtracking procedure resorts dp handling innermost set quantifiers 
able find patterns shift crossover point point half instances evaluate true phase transition sharp differences instances close crossover point instances far easy hard easy distribution 
result generalize shown sat :10.1.1.37.7362
richer structure qbfs raises possibility analyzing experimental behavior parameters counterpart propositional case number quantifier alternations qbf 
structure 
section quickly remind basic notions qbfs prove properties formulae useful design algorithm 
evaluate algorithm shown section basic choices implementation heuristics adopted data structures resulting complexity basic operations discussed section 
number recursions decreased small amount typically qbf cnf case 
fact shown section davis putnam procedure called 
modest case call sat line implementing sufficient condition cf 
lemma 
compromising soundness evaluate check satisfiability guaranteed matrix horn incomplete algorithm gsat :10.1.1.34.6853
idea give positive results impact performance evaluated 
results obtained implementation 
improvement paid terms time implementing lexicographic heuristics needs special data structure general time higher 
data structures choice data structures goals ffl verify conditions applicability lemmata efficiently obviously checking conditions applicability lemmata needs exponential time ffl implement effect lemmata unit propagation efficiently effect lemmata evaluation simplification formula ffl select branching literal various heuristics subsection efficiently 
show various models generations subsection analyze costs benefits various rules shown section subsection 
subsection highlight regular patterns exhibited formulae 
true randomly generated formulae considered section 
models generation tests mainly generated instances fixed clause length fcl model cf 
:10.1.1.37.7362
fcl model qbfs parameters ffl number distinct sets propositional variables formula ffl cardinality jx jx set ffl number clauses ffl number literals clause 
model formula generated clauses contain exactly literals 
set delta delta delta clause produced randomly choosing distinct variables probability 
words fcl model qbf directly extends fcl model sat 
statement lemma increases quickly increases 
instances false decided investigate model called fcl removed replaced 
fcl similar models named investigated difference selection criterion fcl weaker model clauses existential variables sigma disallowed 
considered constant density cd model cf 
parameters fcl model represents case average number literals clause formula :10.1.1.37.7362
model fact clauses formula different lengths produced including variable fixed probability probability 
proved method average number literals clause delta jv easily determine value probability having clauses certain average length 
lastly cd model discarded empty unit clauses presence evaluation process easier 
considered parameters settings ran experiments recorded data truth value randomly generated qbf cpu time evaluation number recursions number tries 
curves show phase transition occurs 
qbf case phase transition steeper steeper number variables increased crossover point moves left 
curves fig 
left intersect qbf case cf 
:10.1.1.49.9940
fig 
right shows median number tries needed function clauses variables set ratio 
curves follow easy hard easy pattern number tries initially increases ratio increased successively settles constant values 
notice correlation hardness evaluating qbf cnf instances crossover point 
notice phase transition crossover point qbf cnf shifted right respect qbf cnf 
fig 
right split number tries considering true false instances separately 
interesting notice case hardest instances false ones result obtained qbf cf 
:10.1.1.37.7362
kind qbf considered hardest instances true ones 
phenomenon explained follows external quantifier universal evaluate running soon finds assignment variables external set formula false 
easiest instances false ones 
contrary odd external quantifier existential case easiest instances true ones evaluate running soon finds assignment variables external set formula true 
cnf crossover point clauses variables set qbf qbf 
anyway move slightly right slightly left odd 
cd model qbf average cnf results 
model applied qbf instances easily evaluated cf 
:10.1.1.37.7362
aim verifying case ran evaluate algorithm qbf randomly generated instances variables set average literals clause tests executed varying number clauses step 
clauses variables set true var true var true var true var clauses variables set tries tries var tries var tries var tries var true instances left number tries right qbf cnf fcl model clauses variables set true instances tries tries results qbf average cnf vars set fig 
reports percentage true instances number tries function clauses variables set ratio 
curve number tries shows easy hard easy pattern peak point associated crossover point 
fact reasoning services knowledge representation formalisms easily efficiently translatable computing truth value qbf 
upper bound computational complexity problems polynomial hierarchy established reduction qbfs reductions translate instances problem checking qbf 
subsections sketch reduce reasoning problems valuation qbf particular non monotonic formalism circumscription mention possible reductions modal description logics 
focus formalisms reasoning problems expressed terms qbfs mention ffl skeptical reasoning default logic reduced evaluating qbf 
ffl planning formalism planning la strips deductive tasks complexity belongs classes polynomial hierarchy expressible terms qbfs see example kautz selman :10.1.1.134.1335
ffl lang introduce notions definability propositional formulae 
easy show problems reduced evaluation qbf 
ffl abduction easily expressed terms qbf 
details complexity abduction refer eiter gottlob :10.1.1.37.2425
ffl planning formalism planning la strips deductive tasks complexity belongs classes polynomial hierarchy expressible terms qbfs see example kautz selman :10.1.1.134.1335
ffl lang introduce notions definability propositional formulae 
easy show problems reduced evaluation qbf 
ffl abduction easily expressed terms qbf 
details complexity abduction refer eiter gottlob :10.1.1.37.2425
circumscription basic form propositional case propositions minimized semantics circumscription described follows 
interpretations models propositional formulae denoted sets variables mapped true 
notation denotes formula occurrence variable replaced variable notation generalized ordered sets denotes formula occurrences variables set simultaneously replaced corresponding elements ordered set variables ordered set variables cardinality 
example formula 
related best knowledge defines algorithm qbfs resolution algorithm 
particular authors define variant resolution called resolution shown sound complete qbfs 
proposed algorithm interesting led implementation took different approach defining algorithm davis putnam procedure 
compare approach authors address reasoning problems harder np 
years proliferation systems decide satisfiability modal formulae concept descriptions example giunchiglia sebastiani :10.1.1.1.8433
algorithms terms sat define algorithms try reduce possible problem instance sat satisfiability test sufficient necessary condition 
approach fine problems considered giunchiglia sebastiani experimental analysis shows instances qbfs evaluated limited number calls satisfiability solver 
algorithms implemented systems developed horrocks :10.1.1.36.3650
shows satisfiability expressive terminological logics complexity higher pspace checked reasonable amount time specialized heuristics 
compare approach authors address reasoning problems harder np 
years proliferation systems decide satisfiability modal formulae concept descriptions example giunchiglia sebastiani :10.1.1.1.8433
algorithms terms sat define algorithms try reduce possible problem instance sat satisfiability test sufficient necessary condition 
approach fine problems considered giunchiglia sebastiani experimental analysis shows instances qbfs evaluated limited number calls satisfiability solver 
algorithms implemented systems developed horrocks :10.1.1.36.3650
shows satisfiability expressive terminological logics complexity higher pspace checked reasonable amount time specialized heuristics 
approach appears promising difficult compare results clear counterpart terminological logics 
anyway set techniques algorithms complementary 
classification optimizations listed algorithms techniques lexical normalization boolean constraint propagation heuristic guided search techniques dependency directed backtracking caching :10.1.1.164.6326
algorithms implemented systems developed horrocks :10.1.1.36.3650
shows satisfiability expressive terminological logics complexity higher pspace checked reasonable amount time specialized heuristics 
approach appears promising difficult compare results clear counterpart terminological logics 
anyway set techniques algorithms complementary 
classification optimizations listed algorithms techniques lexical normalization boolean constraint propagation heuristic guided search techniques dependency directed backtracking caching :10.1.1.164.6326
hand devised set necessary sufficient conditions greatly reduce search space 
currently exploring techniques integrated framework 
conclude section noting qbfs particular experimental advantage kinds logical formulae 
example appears difficult generate random fashion modal formulae sigma complete fixing modal depth integer problem np complete shown halpern 
springer verlag 
marco cadoli andrea marco schaerf 
algorithm evaluate quantified boolean formulae 
proceedings fifteenth national conference artificial intelligence aaai pages 
crawford auton :10.1.1.49.9940
experimental results crossover point random sat 
artificial intelligence 
crawford auton 
experimental results crossover point satisfiability problems 
proceedings eleventh national conference artificial intelligence aaai pages 
de kleer konolige 
eliminating fixed predicates circumscription 
artificial intelligence 
eiter gottlob :10.1.1.37.2627
complexity propositional knowledge base revision updates counterfactuals 
artificial intelligence 
eiter gottlob :10.1.1.37.2425
complexity logic abduction 
artificial intelligence 
eiter gottlob :10.1.1.37.2627
complexity propositional knowledge base revision updates counterfactuals 
artificial intelligence 
eiter gottlob :10.1.1.37.2425
complexity logic abduction 
journal acm 
gent walsh 
np phase transition 
journal acm 
gent walsh 
np phase transition 
technical report july 
giunchiglia sebastiani :10.1.1.1.8433
building decision procedures modal logics propositional decision procedures case study modal proceedings thirteenth international conference automated deduction cade 
lecture notes artificial intelligence 
giunchiglia sebastiani :10.1.1.1.8433
sat decision procedure alc 
technical report july 
giunchiglia sebastiani :10.1.1.1.8433
building decision procedures modal logics propositional decision procedures case study modal proceedings thirteenth international conference automated deduction cade 
lecture notes artificial intelligence 
giunchiglia sebastiani :10.1.1.1.8433
sat decision procedure alc 
proceedings fifth international conference principles knowledge representation reasoning kr pages 
joseph halpern 
effect bounding number primitive propositions depth nesting complexity modal logic 
proceedings fifth international conference principles knowledge representation reasoning kr pages 
joseph halpern 
effect bounding number primitive propositions depth nesting complexity modal logic 
artificial intelligence 
ian horrocks :10.1.1.36.3650
expressive description logic fact fiction 
proceedings sixth international conference principles knowledge representation reasoning kr pages 
ian horrocks peter patel schneider 
optimising propositional modal satisfiability description logic subsumption 
proceedings sixth international conference principles knowledge representation reasoning kr pages 
ian horrocks peter patel schneider 
optimising propositional modal satisfiability description logic subsumption 
proceedings 
kautz selman :10.1.1.134.1335
pushing envelope planning propositional logic stochastic search 
proceedings thirteenth national conference artificial intelligence aaai pages 
ladner 
computational complexity provability systems modal propositional logic 
artificial intelligence 
schild 
correspondence theory terminological logics preliminary report 
proceedings twelfth international joint conference artificial intelligence ijcai pages sydney australia 
selman levesque mitchell :10.1.1.34.6853
new method solving hard satisfiability problems 
proceedings tenth national conference artificial intelligence aaai pages 
selman mitchell levesque :10.1.1.37.7362
generating hard satisfiability problems 
proceedings twelfth international joint conference artificial intelligence ijcai pages sydney australia 
selman levesque mitchell :10.1.1.34.6853
new method solving hard satisfiability problems 
proceedings tenth national conference artificial intelligence aaai pages 
selman mitchell levesque :10.1.1.37.7362
generating hard satisfiability problems 
artificial intelligence 
stockmeyer 
polynomial time hierarchy 
