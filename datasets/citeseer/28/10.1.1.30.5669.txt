general approach bottom computation disjunctive semantics stefan brass jurgen dix univ hannover inst 
informatik lange hannover frg sb informatik uni hannover de univ koblenz inst 
informatik rheinau koblenz frg dix informatik uni koblenz de 
goal derive bottom query evaluation algorithms properties underlying negation semantics 
demonstrate approach disjunctive stable model semantics ideas applicable semantics 
framework helps understand compare proposed query evaluation algorithms 
happen finitely predicates constants build ground atoms occuring conditional facts finitely subsets atoms corresponding head body 
transformation original logic program set derived conditional facts change semantics program theorem phi 
lfp phi sem equivalence transformation 
sem semantics satisfies gppe allows elimination tautologies 
sem phi sem gamma lfp phi delta important non trivial strengthening similar theorem bd :10.1.1.38.3548
intuitively natural gppe phi similar 
phi works bottom gppe works topdown 
fact formal proof quite long see appendix 
earlier proof needed addition possibility eliminate non minimal rules simpler 
sem phi sem phi logic program phi residual program phi 
logic program equivalent original stable wfs semantics 
gained computation rules particular form positive body literals variables second truth value atoms trivially read program atom explicitly unconditional fact appear rule head 
usually small number proper conditional facts remaining various semantics differ 
instance follows results bd founded semantics simply remaining critical atoms undefined :10.1.1.38.3548
optimizations implementation hints section gave theoretical basis computing residual program 
consider implementation issues greater detail 
start trivial naive implementation fixpoint computation gamma gamma fa gamma gamma gamma gamma foreach apply gamma gamma fa cg gamma course aim semi naive evaluation see rss 
distinguish sets conditional facts 

simpler original program ground contains positive body literals usually rules 
truth value literals decided residual program unconditional fact appear 
treat difficult literals conditions remained reductions 
interesting note get semantics properties section theorem bd :10.1.1.38.3548
sem semantics sem phi sem phi logic program phi residual program phi 
sem allows unfolding gppe elimination tautologies non minimal rules positive negative reduction 
note guaranteed model residual program model original program 
model theoretic semantics select certain models residual program instance subset supported models 
algorithm set queue disjunctions treat 
set result comp phi comp phi gamma fag ins dis fag print inserting disjunctive fact set procedure ins dis eliminates non minimal disjunctions shown insert section 
procedure computes immediate consequences disjunctive fact possibly facts procedure foreach foreach comp gamma phi resolve gamma fag gamma fag procedure resolve matches remaining body literals disjunctive facts procedure resolve ins dis fag foreach resolve gamma gamma fag gamma fag delta comparison bottom algorithms claimed approach framework understanding comparing query evaluation algorithms 
consider example algorithm proposed kss computing wfs non disjunctive programs 
founded semantics follows residual program making difficult atoms undefined theorem computation wfs bd :10.1.1.38.3548
founded model non disjunctive program phi derived residual program phi follows 
true phi true founded model 

occur phi false founded model 
bd stefan brass jurgen dix 
stable semantics partial evaluation 
nerode marek truszczy nski editors logic programming non monotonic reasoning proceedings third international conference 
springer lncs appear june 
bd stefan brass jurgen dix :10.1.1.38.3548
disjunctive semantics partial bottom evaluation 
leon sterling editor proceedings th int 
conf 
logic programming tokyo 
