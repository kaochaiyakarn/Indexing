application dynamic slicing program debugging bogdan korel jurgen department computer science illinois institute technology chicago il usa korel charlie iit edu dynamic program slice executable part program behavior identical program input original program respect variable interest execution position 
existing dynamic slicing tools dynamic slices represented textual form dynamic slice displayed programmers form highlighted statements form subprogram 
dynamic slicing narrow size program programmer analyze text dynamic slice identify faulty part program 
textual representation dynamic slice provide guidance program debugging understanding program behavior frequently major factor efficient debugging 
dynamic slice computation different types information computed discarded computation dynamic slice 
propose new dynamic slicing related features exploit information improve process program debugging 
features implemented dynamic slicing tool program debugging 

static program slice consists statements program may affect value variable point 
slicing shown useful program debugging testing program understanding software maintenance :10.1.1.25.6155
originally introduced static slicing involves possible program executions 
debugging practice typically deal particular incorrect execution consequently interested locating cause incorrectness execution 
interested slice preserves program behavior specific program input set inputs 
type slicing referred dynamic slicing 
different techniques computation dynamic slices proposed 
particular program execution account dynamic slicing may significantly reduce size slice compared static slicing 
notion dynamic slicing extended distributed programs 
dynamic program slicing software debugging software maintenance software testing 
research partially supported nsf research initiation award ccr existing dynamic slicing tools dynamic slices represented textual form dynamic slice displayed programmers form highlighted statements form subprogram 
dynamic slicing narrow size program programmer analyze text dynamic slice identify faulty part dynamic slice 
addition textual format dynamic slice provide guidance program debugging understanding program behavior 
understanding program behavior frequently major factor efficient debugging 
dynamic slice computation different types information computed discarded computation dynamic slice 
proposed new dynamic slicing related features exploit information purpose program debugging executable dynamic slices partial dynamic slicing influencing variables contributing nodes 
features implemented dynamic slicing tool improve process program debugging 
dynamic slicing related features evolved experimentation dynamic slicing tool 
preliminary experience shown debugging situations features may helpful programmers fault localization 
section basic concepts 
section overviews existing research dynamic program slicing 
section dynamic slicing related concepts introduced 
section presents dynamic slicing tool supports concepts 
research highlighted 

background program structure represented flow graph consists set nodes set arcs 
node corresponds assignment statement input output statement procedure call statement procedure entry statement goto statement break statement continue statement label statement predicate conditional loop statement case called test node 
arc corresponds potential transfer control node node 
execution trace sequence nodes executed input program execution 
example execution trace program executed input data execution trace detail 
execution trace list sequence elements accessed position 
node position written referred action 
instance action node position 
test action test node 
denote variable position variable execution node tx 
notion execution position introduced presentation purposes programmers identify execution position node terms usually express execution position differently may expressed execution node entry loop execution node iteration loop 
variable action variable referenced 
definition variable action assigns value variable 
defined variables determined program execution capturing memory address defined variable 
program sample var max min integer array integer procedure find max integer var integer correctly procedure find min integer var integer readln readln readln max min find max max find min min write max min 

sample program 
readln readln readln readln readln max min find max max procedure find max integer var integer find min min procedure find min integer var integer writeln max min 
execution trace program input 

dynamic program slicing dynamic slice executable part program behavior identical program input original program respect variable interest execution position slicing criterion program executed program input tuple variable execution position dynamic slice program slicing criterion syntactically correct executable program obtained deleting zero statements executed program input produces execution trace exists corresponding execution position value equals value dynamic slice preserves value program input assumed environment executed assigns initial values variables 
may different dynamic slices slicing criterion goal find slice minimal number statements 
goal may achievable general 
possible determine safe approximation dynamic slice preserve computation values variables interest 
dynamic slice originally defined executable program slice 
different versions original dynamic slice proposed literature cases non executable pieces code 
algorithms proposed dynamic slice computation 
existing methods dynamic slice computation backward analysis execution trace program recorded dynamic slicing algorithm traces backwards execution trace compute dynamic slice 
long program executions forward approach dynamic slice computation proposed 
shown account particular program execution dynamic slicing may significantly reduce size slice compared static slicing 
dynamic program slicing actual program execution different types run time information program collected program execution values array indexes pointers known step program execution 
dynamic slicing derivation methods exploit information order compute precise dynamic slices 
concentrate computation executable dynamic slices originally defined 
forms dynamic slices subsets executable dynamic slices easier compute 
algorithms proposed dynamic slice computation 
algorithms notion data control dependencies compute dynamic program slices 
execution trace program recorded dynamic slice derived recorded execution trace data control dependencies 
data dependence captures situation action node assigns value item data action node uses value 
example execution trace assigns value variable uses value 
dynamic control dependence actions captures dependence test actions actions chosen executed test actions 
instance execution trace execution depended outcome test action dependent outcome dynamic dependencies compute dynamic slice tracing backwards dependencies actions starting action setting actions unmarked visited definition identified marked definition variable execution trace mean action assigns value variable modified positions example definition variable execution trace action step algorithm marked visited action selected set visited 
definitions variables marked step corresponds finding data dependencies actions actions exists control dependence marked 
process selecting marked visited actions continues marked actions visited 
dynamic slice constructed removing nodes statements actions marked actions marked dynamic slicing algorithm referred contributing actions actions marked referred actions 
detailed explanation algorithm 
dynamic slicing algorithm applied variable execution position execution trace algorithm marks actions contribute computation variable position marking contributing actions shown bold 
dynamic slice constructed removal statements original program actions marked dynamic slice computation dynamic slice 
similarly dynamic slice variable max position computed shown 
developed dynamic slicing tool supports dynamic slicing pascal programs 
dynamic slicing tool developed object oriented pascal windows environment 
dynamic slicing tool extension debugging environment 
tool dynamic slicing guide programmers process program debugging 
dynamic slicing tools reported literature :10.1.1.15.231
order compute dynamic slices dynamic slicing tools provide certain functionality conventional debuggers breakpoints step wise execution tool supports features provided conventional debuggers 
sections provide brief overview major functions dynamic slicing tool 
breakpoints setting breakpoint tool done just clicking left mouse button line source code 
line automatically highlighted red color 
breakpoint reached program execution program suspended 
programmer examine various components program state verify correctness values program variables 
shows breakpoint loop current execution position call find max procedure 
removing breakpoints done similar way 
setting removing breakpoints done execute menu shown 
program sample var max min integer array integer procedure find max integer var integer readln readln readln max find max max write max min 
dynamic slice node 
program sample var max min integer array integer readln readln readln max write max min 
dynamic slice max node 

dynamic program slices variables max node 
program execution tool supports modes program execution execution step wise execution 
programmer may execute program step wise mode pressing special key case statement executed 
program execution current execution position highlighted yellow color program text 
executing program done execute menu shown 
finding dynamic slices step compute dynamic slice execute program 
program executed execution suspended point breakpoint programmer specify variable dynamic slice derived 
execution position programmer may request computation dynamic slice selected variable selecting compute slice option slice menu 
tool prompts user enter variable name computes dynamic slice 
programmer view dynamic slice selecting slice show slice menu bar 
shows dynamic slice variable sample program executed input shown 
derived dynamic slice displayed programmer form highlighted statements program text see dynamic slice shown removing original program statements affect value selected variable see 

dynamic slicing related concepts program debugging dynamic slicing originally proposed guide programmers process program debugging narrowing size suspected part incorrect code process program understanding correct programs software maintenance 
debugging programmers interested localization fault caused incorrect output program execution particular program input 
aid program debugging reduce amount detail programmer sees 
program slicing transforms large program smaller contains statements relevant computation incorrect output 
understanding program behavior frequently major factor efficient debugging 
current slicing techniques provide means help understanding program behavior related incorrect output 
typically program performs functions contains outputs 
assume program output represented variable set variables certain program point 
example program outputs variable max statement represents function finding maximal value variable min represents function finding minimal value variable represents function finding sum array elements 
program executed input produces output max min execution trace shown 
expected output max min 
programmer may interested localization fault related incorrect computation sum array elements maximal array element represented variables max respectively 
static slicing may identify parts program potentially contribute computation incorrect output possible programs inputs 
static slicing helpful gain general understanding parts program contribute incorrect output 
static slicing advantages process program debugging static slices frequently large subprograms imprecise computation slices 
dynamic slicing may precisely identify parts program contribute computation incorrect output program execution 
slice static dynamic program usually represented textual form dynamic slice displayed programmers form highlighted statements original program form subprogram removing statements original program affect incorrect output 
dynamic slicing reduce size slice programmer identify suspected part program slice eventually find new places incorrectness lead localization fault 
programs may relatively small decrease size slice significant size software system size slice may large hard comprehend 
traditional program slicing methods programmers may difficulties understand program behavior identify cause incorrect program behavior 
example dynamic slices computed incorrect variables max may limited 
dynamic slice variable big original program may useful size 
hand slice max small localize fault program notice slice contain faulty statement lack influence faulty statement variable max 
situation program slicing limited understanding program behavior major element efficient debugging 
dynamic slices represented textual form may provide limited guidance process debugging understanding program behavior 
important devise methods concentrate programmer attention essential parts program execution relate incorrect output 
traditionally order understand program behavior programmer uses conventional debuggers support breakpoint facilities step wise program execution 
breakpoints allow programmer specify places program execution suspended 
breakpoint reached execution suspended programmer examine various components program state check correctness values variables 
programmers may execute program step wise manner order observe program execution 
conventional debuggers provide means identification contributing program parts program debugged 
debuggers inefficient time consuming approach understanding program behavior especially programmer interested observing parts program behavior relate incorrect output 
programmer may observe large amount unrelated computation frequently impossible distinguish related computations unrelated computations 
order process program debugging efficient important focus programmer attention essential components statements variables program execution 
dynamic slicing techniques provide means prune away unrelated computation 
dynamic slice computation different types information computed related program execution example contributing actions actions 
computation dynamic slice information discarded 
propose take advantage computed information process program debugging 
follows describe concepts executable slices influencing variables contributing nodes partial dynamic slicing extensions executable dynamic slicing 
concepts supported dynamic slicing tool 
discussion assumed dynamic slice slicing criterion computed corresponds incorrect output 
particular assume dynamic slice incorrect variable writeln statement program computed 
shows dynamic slice 
notice dynamic slice variable max small 
executable slice obvious extension dynamic slicing provision executable slices programmers able execute dynamic slices order observe slice execution find new places incorrect program behavior relates computation incorrect output 
clearly programmers able execute dynamic slice suspend execution breakpoints examine values selected variables find new places incorrectness 
approach create dynamic slice subprogram compile execute 
execution dynamic slice values variables may meaningless equal values variables original program corresponding position statements removed original program 
notice dynamic slice computed slicing criterion value variable position preserved 
remaining variables may necessary values 
impossible programmers recognize meaningless values variables execution dynamic slice important slicing tool identify point slice execution variables values slice execution execution original program 
approach may inconvenient need recompilation dynamic slice 
alternative approach execute original program display dynamic slice programmer show parts program execution relate dynamic slice parts execution correspond contributing actions parts execution correspond non contributing actions shown programmer 
approach implemented dynamic slicing tool 
tool uses information contributing non contributing actions display skip display dynamic slicing related computation 
major advantage approach values variables slice original program 
influencing variables observing program slice execution important question arises variables observed order increase chances finding new places incorrect program behavior 
important programs large number variables 
dynamic slicing algorithms allow essential variables identified variables point program execution influence value refer variables influencing variables 
informally variable influencing variable respect value compute value variable contributing actions influencing variable contributes computation value step program execution list influencing variables influence value may displayed programmer 
example dynamic slice variable statement computed dynamic slice shown possible identify execution position variables compute variable node 
contains execution trace influencing variables execution position 
focusing programmer attention influencing variables easier understand influence variables execution trace incorrect output 
reducing number variables observed process debugging may efficient 
observing smaller number variables program execution may easier programmers identify existence lack influence variables incorrect program output 
variables carry incorrect values 
example variable influence final value entry loop execution trace 
observation may lead example early localization fault program 
tool user select analysis influencing variables option menu display influencing variables execution position 
influencing variables listed separate window 
influencing variables listed current execution position statement 
contributing nodes certain parts execution contribute computation incorrect output dynamic slice computed 
situations programmer may interested stepping program execution dynamic slice execution contributes computation incorrect output 
possible action node contributes computation incorrect output different action node execution trace contribute computation output 
impossible programmer distinguish contributing non contributing actions execution trace 
developed simple technique may help programmers better understand contributing computations 
dynamic slice computation contributing non contributing actions identified indicate programmer executions contribute incorrect output skip executions contribute incorrect output 
tool offers different options indicate contributing nodes 
option contributing node highlighted green non contributing node displayed yellow regular displaying current execution position 
programmer may step program execution step wise execution mode execution position displayed green yellow color indicate contributing non contributing parts program execution 
second option tool opens dialog box message indicating node contributing computation variable interest 
options selected analysis menu 
shows statement contributes computation variable writeln statement 
partial dynamic slicing executable dynamic slices allow support notion partial dynamic slicing dynamic slices determined execution subtrace execution trace 
partial dynamic slice part dynamic slice computed slicing criterion affects computation value variable position selected subtrace 
may useful analyzing execution loops procedures 
programmers may interested loop iterations affected computation part procedure affected value current procedure call 
instance dynamic slice variable node computed partial dynamic slices may derived shown 
shows statements partial dynamic slice contributed computation variable node iteration loop shows statements contributed computation variable second iteration loop 
influencing variables execution action readln readln readln readln readln max min max max max max max find max max max procedure find max integer var integer max max find min min procedure find min integer var integer write max min contributing actions shown bold 

execution trace contributing actions dynamic slice influencing variables node 
partial dynamic slicing allows observe dynamics program execution textual form may significantly aid debugging understanding program behavior 
example analyzing partial slice programmer may realize procedure find max influences sum array elements represented iteration loop procedure influence final value observation programmer may analyze procedure iteration loop localize fault procedure 
order compute partial dynamic slice user indicate subtrace interest 
typically relate loop iterations subtrace procedure call 
order indicate subtrace user move execution desired position setting breakpoint step wise execution 
program reaches desired position user selects partial slice partial slice option menu 
indicates subtrace 
user continues execution desired execution position selects partial slice partial slice option indicate subtrace 
tool automatically displays partial slice highlighting corresponding statements 
shows partial slice loop iteration shows partial slice second iteration variable procedure find max integer var integer find max max partial dynamic slice iteration loop 
partial dynamic slice second iteration loop 

partial dynamic program slices respect variables node 

setting breakpoint 

displaying contributing node 

displaying influencing variables 

partial slice loop iteration 
highlighting slice 
slice removed statements 

partial slice second iteration 

displaying dynamic slices 
novel dynamic slicing features guide programmers process debugging 
features proposed executable dynamic slices partial dynamic slicing influencing variables contributing nodes 
dynamic slicing related features evolved experimentation dynamic slicing tool 
preliminary experience shown features may great help programmers process program debugging 
research experimentation needed order better understand advantages limitations features 
far performed experiments programs lines size planning perform experiments larger programs determine usability scalability features trade offs 
dynamic slicing features suitable non executable dynamic slices 
methods dynamic slice computation appropriate purpose program understanding program behavior algorithms produce non executable dynamic slices dynamic information derived dynamic slice computation 
programs long executions forward approach dynamic slice computation proposed 
forward approach dynamic slice computed program execution execution trace recorded 
plan develop methods require major storing execution trace support proposed dynamic slicing features 
planning develop additional dynamic slicing features may useful program debugging experience dynamic slicing tool 
agrawal horgan dynamic program slicing sigplan notices pp 

agrawal demillo spafford debugging dynamic slicing backtracking software practice exp vol 
pp 

cheng slicing concurrent programs proc 
st intern 
workshop automated alg 
debugging pp 

duesterwald gupta soffa distributed slicing partial re execution distributed programs proc 
th workshop lang 
compilers parallel comp pp 

gallagher lyle program slicing software maintenance ieee tran 
software engineering vol 
pp 

gopal dynamic program slicing dependence relations proc 
conf 
software maintenance pp 

gupta harrold soffa approach regression testing slicing conference software maintenance pp 

horwitz reps binkley interprocedural slicing dependence graphs trans 
progr 
lang 
systems vol 
pp 

kamkar interprocedural dynamic slicing applications debugging testing ph 
thesis linkoping university 
kamkar fritzson interprocedural dynamic slicing applied interprocedural data flow testing conference software maintenance pp 

korel laski dynamic program slicing information processing letters vol 
pp 

korel program error locating assistant system ieee trans 
software eng vol 
se pp 

korel laski dynamic slicing computer programs journal systems software vol 
pp 

korel ferguson dynamic slicing distributed programs applied mathematics comp 
science vol 
pp 

korel forward derivation dynamic slices proc 
intern 
symposium software testing analysis pp 

korel computation dynamic slices unstructured programs ieee transactions software engineering vol 
pp 

lyle weiser experiments slicing debugging tools proc 
st conf 
empirical studies programming pp 

venkatesh experimental results dynamic slicing programs trans 
progr 
lang 
systems vol 
pp 

weiser programmers slices debugging cacm vol 
pp 

weiser program slicing ieee trans 
software eng se pp 

white leung regression testability ieee micro april pp 

binkley gallagher program slicing advances computers appear 

