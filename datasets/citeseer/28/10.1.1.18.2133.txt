multi agent architectures organizational structures paolo science department mathematics university trento trento italy manuel ucl ac information systems research unit school management university place des la belgium john mylopoulos jm cs toronto edu department computer science university toronto king college road toronto canada 
multi agent system mas organization coordinated autonomous agents interact order achieve particular possible common goals 
considering real world organizations analogy proposes architectural styles mas adopt concepts organizational theories 
styles modeled framework offers notions actor goal actor dependency specified formal tropos 
evaluated respect set software quality attributes predictability adaptability 
addition conduct comparative study organizational conventional software architectures mobile robot control example software engineering literature 
interested social structures emerge design process 
turn guidance organizational theories organization theory strategic alliances 
organizational styles organization theory describe internal structure design organization strategic alliances model strategic cooperation independent organizational actors pursue agreed goals 
describe styles adapt structure joint venture multi agent architectural design model strategic dependency model propose semi formal specification formal tropos 
research conducted context tropos project developing requirements driven methodology software systems :10.1.1.1.6649
tropos methodology adopts ideas mas technologies define detailed design implementation phase ideas requirements engineering agents actors goals heavily early requirements analysis 
particular adopts eric yu model offers actors agents roles positions goals actor dependencies primitive concepts modelling application early requirements analysis 
key assumption distinguishes tropos methodologies actors goals fundamental concepts analysis design phases software development just requirements analysis 
structured follows 
section presents set software quality attributes styles terms evaluate architectural alternatives 
section proposes fragments classical mobile robot case study software engineering literature illustrates styles compares conventional ones 
section presents framework select architectural styles respect software quality attributes section overviews tropos methodology 
section discusses related research section summarizes contributions points 
working business system development see decided simpler pedagogical example understandability purposes org mas tex :10.1.1.1.6649
structuring organizations origins people designing participating sharing rewards organizations 
early organizations primarily military governmental nature 
art war sun describes need hierarchical structure communications strategy 
politics aristotle wrote governmental administration association culture 
joint manager actor assume roles private interface role coordinate partners alliance public interface role take strategic decisions define policy private interface represents interests partnership respect external stakeholders 
part joint venture style specification role goal role org mas tex 
joint venture style goal softgoal actor partner structural global properties satisfied instance joint manager dep dependency dep depender dep dependee dep depender dep dependee dep type resource resource dependencies partners dep dependency dep dependee dep depender dep type task task dependencies partners joint manager joint manager depender dep dependency dep depender dep dependee dep type goal dep type softgoal goal softgoal dependencies joint manager roles dep dependency dep depender dep dependee dep depender dep dependee dep depender dep dependee partners relationships partners joint manager private interface org mas tex dep dependency dep depender dep dependee dep depender dep dependee dep depender dep dependee joint manager private interface relationships joint manager public interface partners 
software qualities multi agent systems generally software addressed characterized multi agent system architectures predictability 
autonomous components agents high degree autonomy way undertake action communication domains :10.1.1.119.2204
difficult predict individual characteristics part determining behavior distributed open system large 
generally predictability multi agent systems contrast agents capabilities adaptive responsive agents predictable anticipate plan actions responsive adaptive unexpected situations 
security 
agents able identify data knowledge sources may undertake additional actions sources 
problem malicious hosts involves attacks mobile agents malicious hosts intermediaries host execute process process secrets org mas tex host prevent host analyzing program running altered form program 
adaptability 
agents may required adapt modifications environment 
may include changes component communication protocol possibly dynamic new kind component previously unknown manipulations existing agents 
generally adaptability multi agent systems depends capabilities single agents learn predict changes environments act capability diagnosis able detect determine causes fault symptoms :10.1.1.56.7362
successful multi agent systems tend balance degree reactivity predictability single agents capabilities adaptive 

agents particularly useful able coordinate agents see contributions 
multi agent systems coordination generally distribute expertise resources information agents agents may different capabilities specialized knowledge different sources information resources responsibilities limitations charges services solve interdependencies agents actions interdependence occur goal undertaken individual agents related meet global constraints solution developed group agents satisfy certain conditions deemed successful system efficient individuals function independently need coordination information discovered agent sufficient agent agents solve problem twice fast 
agents offer services agents humans see instance fipa standards implicitly explicitly guard interruption offered services 
availability considered sub attribute security 
deal top level software quality attribute due increasing importance multi agent system design 
tolerance 
failure agent broker agents necessarily imply failure system :10.1.1.32.1015
system needs check completeness accuracy data information knowledge transactions flows 
prevent system failure different agents similar replicated capabilities refer component specific behavior 
typically multi agent systems failures agents depends coordination interaction external systems 
instance interfering agents activities increasing number incoming agents different standards adopted 
hand implies constraints inter module communication 

agent components parts agent components 
control composite entity 
control results efficient tasks execution low communication overhead prevents system benefit flexibility :10.1.1.18.3821

architectures mobile robot control case study section presents application structure joint venture styles compares conventional architectures 
illustrate comparison classical mobile robot case study software engineering literature see simplicity pedagogical aspects 
org mas tex mobile robot control systems deal external sensors actuators 
taems extremely useful detailed design modeling sophisticated capabilities alternative methods activity related effects complex interactions suitable architectural design concepts actor goal strategic dependencies needed 
research multi agent systems offers contributions organization concepts agent agency group role goals tasks relationships dependencies model design system architectures 
uses concepts agent group role model organizational structure multi agent systems 
model org mas tex different types organizational behavioral requirement patterns defined formalized 
similarly gaia methodology role interaction models analyzing understanding system structure :10.1.1.10.2242
organization system viewed collection roles stand certain relationship take part systematic patterns interactions roles 
main difference approach gaia organization description includes goals associated agents groups roles goals part organization description 
multi agent organization theory uses components scenario organizational position goals plans membership constraints specify organizational structure 
theory designing multi agent systems principle aim extending organization theory design control multi agent systems 
particular theory allows designer embed design intelligent agents multi agents systems theory organizational design 
research results multi agent organizational design includes self organization design teamwork models 
self organization design idea organization members monitor organizational structure effectiveness directing organizational activities design new organizational structures appropriate new situation evaluate possible organizations select best implement execute new structure network preserving network problem solving activities 
propose predictive model task organization performance task allows generate possible organizations solve problem evaluate organization 
teamwork models joint intentions framework introduced levesque allow design multi agent systems individual agents provided explicit representation team goals plans underlying explicit model team activity :10.1.1.93.5951

working definition collection specific organizational architecture styles designing agent systems 
fundamental concepts agent systems intentional organizational implementation oriented multi agent systems mas viewed organizational structures composed au org mas tex proactive agents interact achieve common private goals 
propose human organizations metaphor suggest set generic styles agent systems preference organizational design theories social emergence theories 
