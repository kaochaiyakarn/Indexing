static analysis techniques predicting behavior active database rules alexander aiken joseph hellerstein jennifer widom computer science division computer sciences department dept computer science university california university wisconsin stanford university berkeley ca madison wi stanford ca aiken cs berkeley edu cs wisc edu widom cs stanford edu gives methods statically analyzing sets active database rules determine rules guaranteed terminate guaranteed produce unique final database state guaranteed produce unique stream observable actions 
analysis determines properties guaranteed isolates rules responsible problem determines criteria satisfied guarantee property 
analysis methods context starburst rule system 
rules active database systems allow specification data manipulation operations executed automatically certain events occur conditions met dw hw 
active database rules provide general powerful mechanism database features including integrity constraint enforcement derived data maintenance triggers authorization checking versioning 
addition active database systems provide convenient platform large efficient knowledge bases expert systems 
termination analysis explored context deductive databases see krs sv 
unfortunately rule processing model deductive databases sufficiently different model active databases analysis techniques deductive databases carry 
cw preliminary methods analyzing termination context deriving rules integrity constraint maintenance methods form basis approach termination 
initial presentation analysis methods appears provide additional intuition refine methods include numerous examples provide proofs lemmas theorems 
bw presents algorithms framework strengthen certain aspects analysis point results bw applicable :10.1.1.49.7452
outline active databases establish basis analysis techniques section give syntax semantics starburst rule language 
section motivates termination confluence observable determinism properties context language 
section provide examples starburst rules illustrating rule sets satisfy termination confluence observable determinism 
section introduce notation definitions needed rule analysis define straightforward preliminary analysis techniques 
ffl observable takes rule indicates action may observable 
starburst rule action may observable iff includes rollback top level select statement 
note definitions simple syntactic properties relatively conservative 
example triggers type operation performed rule action determining rule trigger take account semantic considerations rule conditions conditional components rule actions 
semantic accurate definitions may plugged methods bw :10.1.1.49.7452
execution model define formal model execution time rule processing 
model execution graphs accurately captures semantics rule processing described section 
note execution graphs discuss prove correctness analysis techniques graphs constructed part analysis 
directed execution graph distinguished initial state representing start rule processing processing point zero final states representing termination rule processing 
rule new rank commutes rules sales rank raise new rank access column emp salary column uses new rank rule condition data modification action 
ffl example rules bonus rank sales commutative 
rules bonus rank new rank condition new rank triggers bonus rank 
rules sales new rank commutative 
conditions lemma somewhat conservative refined performing complex analysis rule conditions actions considering variety special cases bw :10.1.1.49.7452
addition allow user declare pairs rules appear lemma commute 
analysis algorithms treat rules commutative 
observation say rules unordered 
similarly say rules ordered execution graph model observation possible states section develop criteria confluence 
level rule applications partitioned groups rules partitions rules different sets tables priority ordering 
rules different partitions processed time execution may interleaved effect 
analysis applied separately partition needs repeated partition rules partition change 
ffl conservative methods discussed assumptions definitions algorithms conservative room refinement 
may include complex analysis sql initial progress appears bw accurate properties execution model suite special cases :10.1.1.49.7452
ffl interaction properties mentioned section may subtle interactions attempting establish set rules confluent observably deterministic 
separate criteria properties 
presumed designer wish establish termination confluence observable determinism order 
potential avenue explore relationships properties combining contrasting analyses feedback user possible 
proceedings acm sigmod international conference management data pages san diego california june 
brownston martin 
programming expert systems ops rule programming 
addison wesley reading massachusetts 
bw baralis widom :10.1.1.49.7452
algebraic approach rule analysis expert database systems 
proceedings twentieth international conference large data bases santiago chile september 
chakravarthy buchmann carey dayal hsu livny mccarthy rosenthal 
hipac research project active time constrained database management 
