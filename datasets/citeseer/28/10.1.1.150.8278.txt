requirements analysis parallel kdd systems william mohammed zaki computer science dept university albany albany ny cs albany edu www cs albany edu computer science dept rensselaer polytechnic institute troy ny zaki cs rpi edu www cs rpi edu zaki 
current generation data mining tools limited capacity performance tools tend sequential 
explores migration path bottleneck considering integrated hardware software approach parallelize data mining 
analysis shows parallel data mining solutions require components parallel data mining algorithms parallel distributed data bases parallel file systems parallel tertiary storage management online data support heterogeneous data representations security quality service pricing metrics 
state art technology areas surveyed eye integration strategy leading complete solution 
knowledge discovery databases kdd employs variety techniques collectively called data mining uncover trends large volumes data 
applications generate acquire data faster analyzed existing kdd tools leading perpetual data archival retrieval analysis 
furthermore analyzing sufficiently large data sets exceed available computational resources existing computers 
order reverse vicious cycle induced problematic trends issues performing kdd faster rate arrival increasing capacity simultaneously dealt 
fortunately novel applications parallel computing techniques assist solving large problems timely fashion 
parallel kdd pkdd techniques currently common algorithmic advances seek address problems freitas zaki zaki ho kargupta chan 
designing implementing large scale parallel kdd systems support mining algorithms entire kdd process including pre processing post processing steps fact posited kdd effort spent steps mining 
picture gets complicated considers persistent data management mined patterns models 
infancy kdd general pkdd particular clear start realize goal building pkdd system handle terabyte sized larger central distributed datasets 
part problem stems fact pkdd draws input diverse areas traditionally studied isolation 
typically kdd process supported hierarchical architecture consisting layers bottom top support file system data base query manager data mining 
current incarnations architecture tend sequential limiting problem size performance 
implement successful pkdd toolkit need borrow adapt enhance research fields super meta heterogeneous computing environments parallel distributed databases parallel distributed file systems parallel mass storage systems mention fields kdd statistics machine learning visualization 
represents step process unifying diverse technologies leveraging pkdd system 
discussing system requirements pkdd extant solutions lack thereof pkdd 
requirements follow basic requirements imposed kdd section current kdd algorithmic techniques section trends commodity hardware design section software requirements section 
difficulty making survey research community jargon try accessible describing common pkdd framework 
pkdd requirements discussing wish list desirable features functional pkdd system guide rest survey 
mainly concentrate aspects received wide attention 
algorithm evaluation algorithmic aspects need attention ability handle high dimensional datasets support terabyte data stores minimize number data scans important research area provide rapid development framework implement conduct performance valuation number competing parallel methods mining task 
currently time consuming process guidelines particular algorithm 
process support toolkit support kdd steps pre processing operations sampling discretization feature subset selection postprocessing operations rule grouping pruning model scoring 
aspects include persistent pattern management operations caching efficient retrieval meta level mining 
location transparency pkdd system able seamlessly access mine datasets regardless location centralized distributed 
data type transparency system able cope heterogeneity different database schemas having materialize join multiple tables 
difficult aspects deal handling unstructured hyper text spreadsheet variety data types 
system transparency refers fact pkdd system able seamlessly access file systems databases data archives 
databases data warehouses represent kind data repositories crucial integrate mining dbms avoid extracting data flat files 
hand huge amount data remains outside databases flat files weblogs pkdd system bridge gap exists today database file systems worlds choudhary kotz 
required database systems today offer little functionality support mining applications agrawal research parallel file systems parallel looked scientific applications data mining operations different workload characteristics 
security qos pricing increasingly networked world constantly needs access proprietary third party remote datasets 
main issues need attention security quality service qos issues data mining 
need prevent unauthorized mining need provide cost sensitive mining guarantee level performance 
issues paramount web mining commerce 
availability fault tolerance mobility distributed parallel systems points failure centralized systems 
furthermore temporary disconnections frequent mobile computing environments users tolerated minimal penalty user 
real world applications tolerate outages presence qos guarantees contracts outages breach agreements providers users 
little done address area 
discussion due space constraints choose concentrate algorithmic hardware trends system transparency issues parallel parallel distributed databases briefly touching aspects detailed forthcoming 
mining methods faster scalable algorithms mining required 
parallel distributed computing ideally placed address big data performance issues 
achieving performance today multiprocessor systems non trivial task 
main challenges include synchronization communication minimization load balancing finding data layout data decomposition disk minimization 
parallel design space spans number systems algorithmic components hardware platform shared vs distributed kind parallelism task vs data load balancing strategy static vs dynamic data layout horizontal vs vertical search procedure complete vs greedy 
algorithmic successful showing benefits parallelism common data mining tasks including association rules agrawal shafer cheung han zaki sequential patterns kitsuregawa zak classification shafer joshi zaki regression williams clustering judd dhillon modha choudhary 
typical trend parallel mining start sequential method pose various parallel formulations implement conduct performance evaluation 
important costly process 
parallel design space vast results parallelization serial method may applicable methods 
result proliferation parallel algorithms standardized benchmarking compare provide guidelines methods better circumstances 
problem worse new improved serial algorithm forced come new parallel formulations 
crucial pkdd system support rapid development testing algorithms facilitate algorithmic performance evaluation 
effort direction discussed skillicorn 
emphasizes importance presents set cost measures applied parallel algorithms predict computation data access communication performance 
measures possible compare parallel implementation strategies data mining techniques benchmarking 
different approach build data mining kernel supports common data mining operations modular design new algorithms primitive components easily added increase functionality 
example anand kernel 
generic set oriented primitive operations proposed freitas classification clustering integrated parallel dbms 
hardware models trends current hardware trends memory disk capacity increasing higher rate speed 
furthermore cpu capacity roughly obeying moore law predicts doubling performance approximately months 
combat bus memory bandwidth limitations caching improve mean access time giving rise non uniform memory access architectures 
accelerate rate computation modern machines frequently increase number processing elements architecture 
logically memory machines kept consistent giving rise shared memory model called symmetric multiprocessing smp architecture community shared database community dewitt gray valduriez 
scalability architectures limited higher degrees parallelism cluster smp nodes 
model called shared database literature preferred architecture parallel databases dewitt gray 
redundant arrays independent inexpensive disks raid chen gained popularity increase bandwidth storage capacity reduce latency optionally support fault tolerance 
systems amount data exceeds stored disk tertiary storage typically consisting removable media devices box swap loaded media 
addition current trends ideas improve memory storage bottlenecks 
active disks riedel intelligent disks keeton proposed means exploit improved processor performance embedded processors disk controllers allow complex operations optimizations reducing amount traffic congested bus 
intelligent ram iram patterson seeks integrate processing elements memory 
active disks iram currently prevalent required hardware systems software commonly available 
software infrastructure goal commodity hardware support desired functionality pushed back software 
section discuss system transparency issues pkdd systems support seamless access databases file systems parallel review selected aspects areas 
common database constructions currently relational databases object oriented databases object relational databases 
data base layer ensures referential integrity provides support queries transactions data set valduriez 
data base layer frequently accessed query language sql 
primarily interested parallel distributed database systems dewitt gray valduriez data sets spanning disks 
primary advantages systems capacity storage improved parallelizing disk access improves bandwidth large reduce latency 
early parallel database research explored special purpose database machines performance hsiao today consensus better available parallel platforms shared paradigm architecture choice 
shared database systems include teradata gamma dewitt tandem tandem performance group bubba boral lorie refer reader dewitt gray valduriez khan excellent survey articles parallel distributed databases 
issues parallel database research relevance pkdd include data partitioning disks methods simple round robin partitioning records distributed evenly disks 
hash partitioning effective applications requiring associative access records partitioned hash function 
range partitioning clusters records similar attributes 
parallel data mining date round robin approach data partitioning 
methods suitable 
exploration efficient multidimensional indexing structures pkdd required gaede gunther 
vast amount parallel relational query operators particularly parallel join algorithms relevance pirahesh 
dbms views valduriez restrict access dbms user subset data provide security kdd systems 
parallel file systems techniques geared handling large data sets distributed memory environment appear better fit distributed file systems managing large data sets kdd applications 
parallel file systems parallel techniques widely studied kotz maintains archive bibliography nice guide stockinger 
parallel file systems necessary raid devices insufficient capacity due scaling limitations contention shared resources buses processors exceeds capacity smp architectures 
scalable initiative sio includes groups including message passing interface mpi forum adopted mpi io api thakur parallel file management 
mpi io layered top local file systems 
mpi uses run time type definition scheme define communication entity types 
library thakur implements mpi io argonne mpich implementation mpi 
automates scheduling aggregated requests uses middleware layer provide portability isolate implementation dependent parts mpio 
pablo sio member group created portable parallel file systems ppfs ii designed support efficient access large data sets scientific applications irregular access patterns 
information parallel distributed file systems appears kotz gibson initiative moyer sunderam kotz seamons winslett 
users pkdd systems interested maximizing performance 
prefetching important performance enhancing technique reduce impact latency overlapping computation cortes patterson iii 
order prefetching effective distributed system uses hints indicate data near 
generation accurate hints surprisingly tends difficult relies predicting program flow control 
hint generation techniques rely traces program access patterns 
surveyed range trace driven techniques prefetching strategies provided performance comparisons 
reed machine learning tools analyze traces ppfs relying artificial neural networks line analysis current trace hidden markov models analyze data obtained profiling 
chang gibson developed generates hints speculative execution 
conjecture pkdd techniques identify patterns provide hint generation address open performance analysis issues reed 
noted earlier integration various systems components effective kdd lagging 
current state kdd tools accurately captured term flat file mining prior mining data extracted flat file mining effectively bypassing database functionality 
mainly traditional databases ill equipped handle optimize complex query structure mining methods 
recognized need integrating database query management data mining layers agrawal shim sarawagi 
agrawal shim postulated better integration query manager database data mining layers provide speedup 
sarawagi confirmed performance improvements attained best performance obtained cache mine caches mines query results local disk 
sql operators mining association rules developed meo 
proposals data mining query language han imielinski mannila imielinski siebes emerged 
note targeted serial environments 
pkdd efforts benefit research optimization problems course different parallel setting 
exceptions include parallel generic primitives proposed freitas data surveyor mining tool uses monet database server parallel classification rule induction 
argue need wider integration parallel distributed databases file systems fully mine available data modest fraction resides databases 
integration pkdd parallel file systems enhance performance improving hint generation prefetching 
integrated pkdd parallel file systems storing managing large data sets distributed file system access point suited mobile clients management query results 
described list desirable design features parallel kdd systems 
requirements motivated brief survey existing algorithmic systems support building large scale mining tools 
focused state art databases parallel techniques 
observe implementing effective pkdd system requires integration diverse sub fields coherent seamless system 
emerging issues pkdd include benchmarking security availability mobility qos motivating fresh research disciplines 
pkdd approaches may tool areas hint generation prefetching parallel resulting bootstrapping approach software development 
agrawal shafer 
parallel mining association rules 
ieee trans 
knowledge data engg december 
agrawal shim 
developing tightly coupled data mining applications relational dbms 
int conf 
knowledge discovery data mining 
agrawal imielinski swami 
database mining performance perspective 
ieee trans 
knowledge data engg december 
anand designing kernel data mining 
ieee expert pages march 
boral prototyping bubba highly parallel database system 
ieee trans 
knowledge data engg march 
parallel file system mpp 
acm operating systems review 
chang gibson 
automatic hint generation speculative execution 
symp 
operating systems design implementation february 
chen raid high performance reliable secondary storage 
acm computing surveys june 
cheung fast distributed algorithm mining association rules 
th int conf 
parallel distributed info 
systems december 
choudhary kotz 
large scale file systems flexibility databases 
acm computing surveys december 
cortes 
high performance cluster computing vol 
chapter software raid parallel file systems pages 
prentice hall 
dewitt gamma database machine project 
ieee trans 
knowledge data engg march 
dewitt gray 
parallel database systems high performance database systems 
communications acm june 
dhillon modha 
clustering algorithm distributed memory machines 
zaki ho 
freitas 
mining large databases parallel processing 
kluwer academic pub 
gaede gunther 
multidimensional access methods 
acm computing surveys 
gibson nasd scalable storage systems 
usenix extreme linux workshop june 
han data mining query language relational databases 
sigmod workshop research issues data mining knowledge discovery june 

han karypis kumar 
scalable parallel data mining association rules 
acm sigmod conf 
management data may 
kersten siebes 
data surveyor searching nuggets parallel 
fayyad piatetsky shapiro smyth uthurusamy editors advances knowledge discovery data mining 
aaai press 
hsiao 
advanced database machine architectures 
prentice hall 
imielinski mannila 
database perspective knowledge discovery 
communications acm november 
imielinski 
application programming interface query language database mining 
int conf 
knowledge discovery data mining august 
scalable initiative 
www caltech edu sio 
california institute technology 
joshi karypis kumar 
parallel classification algorithm mining large datasets 
int parallel processing symposium 
judd mckinley jain 
large scale parallel data clustering 
int conf 
pattern recognition 
kargupta chan editors 
advances distributed data mining 
aaai press 
keeton patterson hellerstein 
case intelligent disks 
sigmod record september 
khan intensive data management parallel systems survey 
distributed parallel databases 
trace driven comparison algorithms parallel prefetching caching 
usenix symp 
operating systems design implementation pages october 
kotz 
parallel archive 
includes pointers parallel bibliography www cs dartmouth edu 
patterson 
new direction computer architecture research 
ieee computer pages november 
lorie adding inter transaction parallelism existing dbms early experience 
ieee data engineering newsletter march 
reed 
exploiting global input output access pattern classification 
proceedings sc 
cdrom 
meo psaila ceri 
new sql operator mining association rules 
int conf 
large databases 
moyer sunderam 
scalable parallel system distributed computing environments 
scalable high performance computing conf 
kotz 
galley parallel file system 
parallel computing june 
valduriez 
principles distributed database systems 
prentice hall 
patterson iii 
informed prefetching caching 
phd thesis carnegie mellon university december 
pirahesh parallelism relational data base systems 
nt symp 
parallel distributed systems july 
reed performance analysis parallel systems approaches open problems 
joint symposium parallel processing june 
riedel gibson faloutsos 
active large scale data mining multimedia 
int conf 
large databases august 
choudhary 
mafia efficient scalable subspace clustering large data sets 
technical report northwestern university june 
sarawagi thomas agrawal 
integrating association rule mining databases alternatives implications 
acm sigmod conf 
management data june 

vienna parallel input output system 
euro par september 
seamons winslett 
multidimensional array panda 
journal supercomputing 
shafer agrawal mehta 
sprint scalable parallel classifier data mining 
int conf 
large databases march 
kitsuregawa 
mining algorithms sequential patterns parallel hash approach 
nd pacific asia conf 
knowledge discovery data mining april 
siebes 
foundations inductive query language 
int conf 
knowledge discovery data mining august 
skillicorn 
strategies parallel data mining 
ieee concurrency october december 
ranka 
parallel divide conquer techniques application classification trees 
int parallel processing symposium april 
stockinger 
dictionary parallel input output 
master thesis dept data engineering university vienna february 
tandem performance group 
benchmark non sql debit credit transaction 
sigmod conference june 
thakur gropp lusk 
implementing mpi io portably high performance 
workshop parallel distributed systems may 
valduriez 
parallel database systems open problems new issues 
distributed parallel databases 
williams integrated delivery large scale data mining data mining project 
zaki ho 
zaki 
ho editors 
large scale parallel data mining lncs vol 

springer verlag 
zaki parallel algorithms fast discovery association rules 
data mining knowledge discovery international journal december 
zaki 
ho agrawal 
parallel classification data mining shared memory multiprocessors 
int conf 
data engineering march 
zaki 
parallel distributed association mining survey 
ieee concurrency 
zaki 
parallel sequence mining smp machines 
zaki ho 
