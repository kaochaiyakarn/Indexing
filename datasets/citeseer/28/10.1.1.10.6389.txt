journal machine learning research submitted revised published bottom relational learning pattern matching rules information extraction mary elaine califf edu department applied computer science illinois state university normal il usa raymond mooney mooney cs utexas edu department computer sciences university texas austin austin tx usa editor david cohn information extraction form shallow text processing locates specified set relevant items natural language document 
systems task require significant domain specific knowledge time consuming difficult build hand making application machine learning 
algorithm rapier uses pairs sample documents filled templates induce pattern match rules directly extract fillers slots template 
rapier bottom learning algorithm incorporates techniques inductive logic programming systems 
implemented algorithm system allows patterns constraints words part speech tags semantic classes filler surrounding text 
encouraging experimental results domains 
information extraction systems promising way deal certain types text documents 
difficulty information extraction systems difficult time consuming build generally contain highly domain specific components making porting new domains time consuming 
efficient means developing information extraction systems desirable 
situation information extraction systems attractive application machine learning 
researchers begun learning methods aid construction information extraction systems soderland riloff kim moldovan huffman :10.1.1.46.6008:10.1.1.21.2755:10.1.1.21.6045
systems learning part larger information extraction system 
system rapier robust automated production information extraction rules learns rules complete information extraction task rules producing desired information pieces mary elaine califf raymond mooney 
califf mooney directly documents prior parsing post processing 
structured relational symbolic representation learning classifiers rules developed general rule templates 
rapier employs relational learning algorithm uses techniques inductive logic programming ilp systems lavrac dzeroski 
techniques appropriate developed rich relational representation order logic clauses 
algorithm incorporates ideas ilp systems consists primarily specific general bottom search 
show learning build useful information extraction rules relational learning effective learning simple features fixed context 
simultaneous rapier development learning systems developed task relational learning freitag soderland :10.1.1.41.5985
approaches problem include hidden markov models hmms freitag mccallum combining boosting learning simpler wrappers freitag kushmerick 
experiments rapier performed different domains 
domains set computer related job postings usenet newsgroups 
utility domain evident success job posting website www com developed 
section suggests directions 
section describes related applying learning information extraction section presents 

background section provides background task information extraction relational learning algorithms immediate predecessors learning algorithm 
information extraction information extraction shallow form natural language understanding useful certain types document processing focus arpa message understanding conferences muc lehnert sundheim darpa :10.1.1.41.9455
useful situations set text documents exist containing information easily human learning information extraction posting newsgroup subject tn software programmer date nov organization com posting service message id software programmer position available software programmer experienced generating software pc voice mail systems 
experienced programming 
familiar communicating controlling voice cards preferable experience natural microsystems okay 
prefer years experience pc voice mail consider little years 
type slot filler may items dates useful consistent format may simply set terms provide consistent values information document necessarily consistently useful way 
limit dealing strings taken directly document question 
information extraction useful variety domains 
various muc focused tasks latin american terrorism domain mentioned joint ventures microelectronics management changes 
information extraction track medical patient records soderland track huffman extract biological information craven ray craven :10.1.1.46.6008:10.1.1.21.2755
researchers applied information extraction formal text genres rental ads soderland web pages freitag hsu dung muslea :10.1.1.33.2396
califf mooney filled template computer science job id com title software programmer salary state tn city country language platform pc dos os unix application area voice mail req years experience desired years experience req degree desired degree post date nov filled template corresponding message shown 
slot fillers strings taken directly document 
slots filled filler 
limit dealing strings taken directly document question 
information extraction useful variety domains 
various muc focused tasks latin american terrorism domain mentioned joint ventures microelectronics management changes 
information extraction track medical patient records soderland track huffman extract biological information craven ray craven :10.1.1.46.6008:10.1.1.21.2755
researchers applied information extraction formal text genres rental ads soderland web pages freitag hsu dung muslea :10.1.1.33.2396
califf mooney filled template computer science job id com title software programmer salary state tn city country language platform pc dos os unix application area voice mail req years experience desired years experience req degree desired degree post date nov filled template corresponding message shown 
slot fillers strings taken directly document 
slots filled filler 
domain appropriate particularly light dealing wealth online information extract information text documents order create easily searchable databases information making wealth text online easily accessible 
contrast relational learning methods birnbaum collins allow induction structured examples include order logical predicates functions unbounded data structures lists trees 
consider learning algorithm relational uses representation examples goes finite feature vectors handle unbounded number entities representation example uses notion relations entities example just single precedes relation token entities allows representing unbounded sequences strings 
particular inductive logic programming ilp lavrac dzeroski muggleton studies induction rules order logic prolog programs 
ilp systems induced variety basic prolog programs append reverse sort potentially useful rule bases important biological problems muggleton srinivasan 
detailed experimental comparisons ilp feature induction demonstrated advantages relational representations language related tasks text categorization cohen generating past tense english verb mooney califf :10.1.1.25.4340
research demonstrated usefulness relational learning classifying web pages slattery craven 
information extraction learning algorithms prior rapier development structured representations kind autoslog riloff crystal soderland artificially limited possible rules learned autoslog learning rules fit particular provided templates crystal drastically limiting examples sentence extracted phrase occurred :10.1.1.46.6008:10.1.1.21.6045
contrast rapier patterns limited ways 
rapier ilp algorithm relational learning algorithm learning structured rule representation algorithm inspired ideas ilp systems 
particular inductive logic programming ilp lavrac dzeroski muggleton studies induction rules order logic prolog programs 
ilp systems induced variety basic prolog programs append reverse sort potentially useful rule bases important biological problems muggleton srinivasan 
detailed experimental comparisons ilp feature induction demonstrated advantages relational representations language related tasks text categorization cohen generating past tense english verb mooney califf :10.1.1.25.4340
research demonstrated usefulness relational learning classifying web pages slattery craven 
information extraction learning algorithms prior rapier development structured representations kind autoslog riloff crystal soderland artificially limited possible rules learned autoslog learning rules fit particular provided templates crystal drastically limiting examples sentence extracted phrase occurred :10.1.1.46.6008:10.1.1.21.6045
contrast rapier patterns limited ways 
rapier ilp algorithm relational learning algorithm learning structured rule representation algorithm inspired ideas ilp systems 
ilp ideas appropriate designed learn rich unbounded representations 
sections discuss general design issues developing ilp rule learning systems briefly describe relevant aspects ilp systems directly influenced rapier learning algorithm golem progol 
systems covering set positive examples 
rule learned positive examples new rule covers removed consideration creation rules 
rule learning ends positive examples covered 
probably common way structure rule learning system 
examples include foil quinlan golem califf mooney muggleton feng progol muggleton claudien de raedt bruynooghe various systems foil focl pazzani mfoil lavrac dzeroski mooney califf :10.1.1.23.1676:10.1.1.122.3371:10.1.1.31.1630
trade offs designs 
primary difference trade efficient search thorough search 
covering systems tend somewhat efficient seek learn rules examples covered 
search thorough compression systems may prefer rules cover remaining examples subsume existing rules 
bottom systems may create overly specialized rules don perform unseen data may fail generalize initial rules sufficiently 
fairly small search space background relations constants top search may efficient 
branching factor top search high ways specialize rule bottom search usually efficient constrains constants considered construction rule example rule 
systems combine bottom top techniques seek take advantage efficiencies 
ilp algorithms mentioned golem muggleton feng uses greedy covering algorithm :10.1.1.23.1676
construction individual clauses bottom construction general generalizations specific clauses plotkin 
order take background knowledge account golem creates relative positive examples respect background knowledge 
golem randomly selects pairs examples computes pairs selects best resulting clause 
additional examples randomly selected generalize clause improvement clause coverage 
step construct lgg input clauses 
lgg cover negative examples refinement necessary 
clause general attempt refine foil mechanism adds literals derivable background previously invented predicates 
resulting clause general passed routine new predicate discriminate positive examples negatives covered 
progol muggleton combines bottom top search :10.1.1.31.1630
foil golem progol uses covering algorithm outer loop 
propositional rule learner aq michalski individual clause construction begins selecting random seed example 
mode declarations provided background predicates predicate learned progol constructs specific clause random seed example called bottom clause 
mode declarations specify argument predicate argument type constant variable bound predicate called variable bound predicate 
constraints disjunctive lists words tags semantic classes document items match words tags classes fulfill constraint 
note part speech tags semantic classes theory source 
rapier operation depend particular tagset tagging method 
practice eric brill tagger trained wall street journal corpus brill 
rule representation require particular type semantic class wordnet synsets semantic classes miller rapier handling semantic classes heavily tied representation :10.1.1.105.1244
pattern sequence possibly length zero case pre post filler patterns pattern elements 
rapier types pattern elements pattern items pattern lists 
pattern item matches exactly word symbol document meets item constraints 
pattern list specifies maximum length matches symbols document limited form kleene closure match list constraints 
rapier assumption strings extracted slot specified strings rule extracts specified template assumed spurious extractions negative examples 
rule evaluated applied document training set 
fillers match fillers slot training templates considered positive examples extracted fillers considered negative examples covered rule 
method determining negative positive examples covered rule rule evaluation metric devised 
rapier simple search technique hill climbing metric information gain quinlan measures proposed new rule improves current rule order pick new rule greatest improvement :10.1.1.122.3371
rule needs inherent value compared rules 
value rule metric information gain quinlan 
log 
measures degree rule separates positive negative examples case identifies valid fillers spurious fillers distinction simple complex rules 
rapier allow coverage spurious fillers 
primary reason human annotators errors especially errors omission 
rapier rejects rule covering large number positives extracts negative examples prevented learning useful patterns failure human annotator notice single filler fits pattern fact extracted 
rapier specialization ends due failure improve best rule iterations best rule extracts spurious examples best rule meets criteria number valid fillers extracted rule number spurious fillers extracted 
equation taken ripper cohen uses pruning rules measuring hold set :10.1.1.25.4340
rapier usually learning relatively small number examples hold set internal cross validation evaluation rules cover spurious fillers uses higher default value cohen uses default rapier default value 
note rapier noise handling involve pruning noise handling 
pruning appropriate top approaches noise handling goal avoid creating rules specialized fit data pure top systems way generalize specific rule sort pruning 
rapier primarily bottomup compression system depend subsequent iterations compression algorithm generalize rules may specific 
generalizing man woman results synset person 
generalizing man rock results physical object 
purposes simplicity figures show possible meanings word indicate directions generalization go individual word 
generalization process common ancestor exists generalized pattern element semantically unconstrained 
noted implementation semantic constraints generalization closely tied wordnet miller semantic hierarchy research :10.1.1.105.1244
code carefully order process substituting alternative source semantic information modifying generalization method allow disjunctions classes relatively easy 
generalizing pattern elements rules generalizing constraints generalization pair pattern elements fairly simple 
generalizations word tag semantic constraints pattern elements computed described 
set generalizations rapier computes combinations word constraint tag constraint semantic constraint creates pattern element combination 
full representation words pos tags assigned brill tagger brill semantic classes taken wordnet 
versions words tags labeled rapier wt tables words labeled rapier 
experiments default values rapier parameters 
results learning information extraction systems 
naive bayes system uses words fixed length window locate slot fillers freitag :10.1.1.33.2396

seminar dataset annotated dayne freitag provided data 
learning information extraction training examples rapier rapier words tags rapier words naive bayes precision job postings systems developed goals similar rapier 
relational learning systems depend syntactic analysis 
seminar dataset annotated dayne freitag provided data 
learning information extraction training examples rapier rapier words tags rapier words naive bayes precision job postings systems developed goals similar rapier 
relational learning systems depend syntactic analysis 
representations algorithms differ significantly rapier 
srv freitag employs top set covering rule learner similar foil quinlan :10.1.1.122.3371
uses pre determined predicates allow express information length fragment position particular token relative positions tokens various user defined token features capitalization digits word length 
second system whisk soderland rapier uses pattern matching employing restricted form regular expressions 
semantic classes results syntactic analysis require 
learning algorithm covering algorithm rule creation begins selection single seed example creates rules top restricting choice terms added rule appearing seed example similar progol 
related closest rapier discussed previous section 
section briefly mention related systems 
previous researchers generally applied machine learning parts information extraction task required human interaction providing texts filled templates 
crystal uses form clustering create dictionary extraction patterns generalizing patterns identified text expert soderland learning information extraction 
autoslog creates dictionary extraction patterns specializing set general syntactic patterns riloff assumes expert filter patterns produces :10.1.1.21.6045
palka learns extraction patterns relying concept hierarchy guide generalization specialization kim moldovan 
systems rely prior detailed sentence analysis identify syntactic elements relationships output requires processing produce final filled templates 
liep learns information extraction patterns huffman requires sentence analyzer identify noun groups verbs subjects assumes relevant information entities identifies interesting :10.1.1.21.2755:10.1.1.21.2755
uses decision trees learn locations slot fillers document bennett 
crystal uses form clustering create dictionary extraction patterns generalizing patterns identified text expert soderland learning information extraction 
autoslog creates dictionary extraction patterns specializing set general syntactic patterns riloff assumes expert filter patterns produces :10.1.1.21.6045
palka learns extraction patterns relying concept hierarchy guide generalization specialization kim moldovan 
systems rely prior detailed sentence analysis identify syntactic elements relationships output requires processing produce final filled templates 
liep learns information extraction patterns huffman requires sentence analyzer identify noun groups verbs subjects assumes relevant information entities identifies interesting :10.1.1.21.2755:10.1.1.21.2755
uses decision trees learn locations slot fillers document bennett 
features available decision trees result pre processing text fixed context 
learns trees identify possible start tokens slot fillers uses matching algorithm pair start tokens identify actual slot fillers 
requiring mention learning information extraction text categorization rules ilp 
