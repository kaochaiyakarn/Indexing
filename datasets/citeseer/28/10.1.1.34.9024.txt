congolog concurrent programming language situation calculus giuseppe de giacomo dipartimento di informatica sistemistica universit di roma la sapienza salaria roma italy dis uniroma yves lesp department computer science york university toronto canada cs ca hector levesque department computer science university toronto toronto canada hector cs toronto edu alternative planning approach high level agent control concurrent program execution considered 
formal definition situation calculus programming language illustrated examples 
language includes facilities prioritizing execution concurrent processes interrupting execution certain conditions true dealing exogenous actions 
language differs procedural formalisms concurrency initial state incompletely specified primitive actions user defined axioms situation calculus 
mathematical properties language proven instance proposed semantics equivalent earlier portion language concurrency 
keywords cognitive robotics reasoning actions situation calculus semantics programs concurrency comes providing high level control robots agents dynamic incompletely known worlds approaches plan synthesis may demanding computationally simple settings 
