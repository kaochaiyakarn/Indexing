optimal external memory interval management lars arge je rey scott vitter department computer science duke university durham nc submitted siam journal computing april external interval tree optimal external memory data structure answering stabbing queries set dynamically maintained intervals 
external interval tree optimal solution dynamic interval management problem central problem object oriented temporal databases constraint logic programming 
part structure uses novel weight balancing technique ecient worstcase manipulation balanced trees independent interest 
external interval tree new balancing technique develop ecient external data structures 
years external memory data structures developed wide range applications including spatial temporal object oriented databases geographic information systems gis 
amount data manipulated applications large main memory data reside disk 
cases input output communication main memory disk bottleneck 
develop optimal space optimal external interval tree data structure answering stabbing queries changing set intervals 
structure central part optimal solution dynamic interval management problem 
memory model previous results working standard model external memory logical disk 
assume external memory access called operation just transmits extended version ieee symposium foundations computer science focs :10.1.1.16.4346
supported part esprit long term research programme eu project number national science foundation career ccr 
part done brics dept computer science university aarhus denmark 
email large cs duke edu supported part national science foundation ccr ccr army research oce daah 
email cs duke edu page elements 
email large cs duke edu supported part national science foundation ccr ccr army research oce daah 
email cs duke edu page elements 
measure eciency algorithm terms number os performs number disk block uses 
dynamic interval management problem problem maintaining set intervals query interval intervals intersecting reported eciently 
discussed problem crucial indexing constraints constraint databases temporal databases :10.1.1.41.7218:10.1.1.156.2115
key component dynamic interval management ability answer stabbing queries :10.1.1.156.2115
set intervals stabbing query point asks intervals containing representing interval point plane stabbing query reduces special case sided dimensional range searching called diagonal corner queries corner line 
problem dimensional range searching subject research 
trees variants ed success supporting dimensional external range searching handling problems :10.1.1.96.6637
email cs duke edu page elements 
measure eciency algorithm terms number os performs number disk block uses 
dynamic interval management problem problem maintaining set intervals query interval intervals intersecting reported eciently 
discussed problem crucial indexing constraints constraint databases temporal databases :10.1.1.41.7218:10.1.1.156.2115
key component dynamic interval management ability answer stabbing queries :10.1.1.156.2115
set intervals stabbing query point asks intervals containing representing interval point plane stabbing query reduces special case sided dimensional range searching called diagonal corner queries corner line 
problem dimensional range searching subject research 
trees variants ed success supporting dimensional external range searching handling problems :10.1.1.96.6637
internal memory worst case ecient structures proposed dimensional higher dimensional range search see survey :10.1.1.38.6261
discussed problem crucial indexing constraints constraint databases temporal databases :10.1.1.41.7218:10.1.1.156.2115
key component dynamic interval management ability answer stabbing queries :10.1.1.156.2115
set intervals stabbing query point asks intervals containing representing interval point plane stabbing query reduces special case sided dimensional range searching called diagonal corner queries corner line 
problem dimensional range searching subject research 
trees variants ed success supporting dimensional external range searching handling problems :10.1.1.96.6637
internal memory worst case ecient structures proposed dimensional higher dimensional range search see survey :10.1.1.38.6261
unfortunately structures ecient mapped external memory 
practical need support led development large number external data structures theoretical worst case update query bounds average case behavior common problems see surveys :10.1.1.137.9369
worst case performance data structures worse optimal bounds achievable dynamic external dimensional range search trees 
key component dynamic interval management ability answer stabbing queries :10.1.1.156.2115
set intervals stabbing query point asks intervals containing representing interval point plane stabbing query reduces special case sided dimensional range searching called diagonal corner queries corner line 
problem dimensional range searching subject research 
trees variants ed success supporting dimensional external range searching handling problems :10.1.1.96.6637
internal memory worst case ecient structures proposed dimensional higher dimensional range search see survey :10.1.1.38.6261
unfortunately structures ecient mapped external memory 
practical need support led development large number external data structures theoretical worst case update query bounds average case behavior common problems see surveys :10.1.1.137.9369
worst case performance data structures worse optimal bounds achievable dynamic external dimensional range search trees 
prior development structure number attempts solving external stabbing query problem 
problem dimensional range searching subject research 
trees variants ed success supporting dimensional external range searching handling problems :10.1.1.96.6637
internal memory worst case ecient structures proposed dimensional higher dimensional range search see survey :10.1.1.38.6261
unfortunately structures ecient mapped external memory 
practical need support led development large number external data structures theoretical worst case update query bounds average case behavior common problems see surveys :10.1.1.137.9369
worst case performance data structures worse optimal bounds achievable dynamic external dimensional range search trees 
prior development structure number attempts solving external stabbing query problem 
kanellakis developed metablock tree answering diagonal corner queries optimal log os optimal blocks external memory :10.1.1.156.2115
denotes number points reported 
unfortunately structures ecient mapped external memory 
practical need support led development large number external data structures theoretical worst case update query bounds average case behavior common problems see surveys :10.1.1.137.9369
worst case performance data structures worse optimal bounds achievable dynamic external dimensional range search trees 
prior development structure number attempts solving external stabbing query problem 
kanellakis developed metablock tree answering diagonal corner queries optimal log os optimal blocks external memory :10.1.1.156.2115
denotes number points reported 
structure supports insertions log log os amortized 
simpler static structure bounds described ramaswamy 
internal memory priority search tree mccreight answer general queries diagonal corner queries sided range queries number attempts structure :10.1.1.35.1453:10.1.1.35.1453
kanellakis developed metablock tree answering diagonal corner queries optimal log os optimal blocks external memory :10.1.1.156.2115
denotes number points reported 
structure supports insertions log log os amortized 
simpler static structure bounds described ramaswamy 
internal memory priority search tree mccreight answer general queries diagonal corner queries sided range queries number attempts structure :10.1.1.35.1453:10.1.1.35.1453
structure uses optimal space answers queries log os 
structure uses optimal space answers queries log os 
papers number non optimal dynamic versions structures developed 
ramaswamy subramanian developed technique called path caching transforming ecient internal memory data structure ecient structure :10.1.1.35.1453:10.1.1.35.1453
internal memory priority search tree mccreight answer general queries diagonal corner queries sided range queries number attempts structure :10.1.1.35.1453:10.1.1.35.1453
structure uses optimal space answers queries log os 
structure uses optimal space answers queries log os 
papers number non optimal dynamic versions structures developed 
ramaswamy subramanian developed technique called path caching transforming ecient internal memory data structure ecient structure :10.1.1.35.1453:10.1.1.35.1453
technique priority search tree results structure answer sided queries general diagonal corner queries general sided queries 
structure answers queries optimal log os supports updates amortized log os uses non optimal log log space 
various external data structures answering sided queries developed :10.1.1.35.1453:10.1.1.35.1453:10.1.1.156.2115
subramanian ramaswamy designed range tree answering sided queries :10.1.1.35.1453
papers number non optimal dynamic versions structures developed 
ramaswamy subramanian developed technique called path caching transforming ecient internal memory data structure ecient structure :10.1.1.35.1453:10.1.1.35.1453
technique priority search tree results structure answer sided queries general diagonal corner queries general sided queries 
structure answers queries optimal log os supports updates amortized log os uses non optimal log log space 
various external data structures answering sided queries developed :10.1.1.35.1453:10.1.1.35.1453:10.1.1.156.2115
subramanian ramaswamy designed range tree answering sided queries :10.1.1.35.1453
structure uses linear space answers queries log il os supports updates log log os amortized 
il 
denotes iterated log function number times log applied get 
ramaswamy subramanian developed technique called path caching transforming ecient internal memory data structure ecient structure :10.1.1.35.1453:10.1.1.35.1453
technique priority search tree results structure answer sided queries general diagonal corner queries general sided queries 
structure answers queries optimal log os supports updates amortized log os uses non optimal log log space 
various external data structures answering sided queries developed :10.1.1.35.1453:10.1.1.35.1453:10.1.1.156.2115
subramanian ramaswamy designed range tree answering sided queries :10.1.1.35.1453
structure uses linear space answers queries log il os supports updates log log os amortized 
il 
denotes iterated log function number times log applied get 
publication extended version results arge developed optimal external priority search tree immediately implying optimal stabbing query structure 
denotes iterated log function number times log applied get 
publication extended version results arge developed optimal external priority search tree immediately implying optimal stabbing query structure 
structures developed general assumed main memory capable holding elements blocks 
structures developed works assumption 
space blocks query bound update bound priority search tree log xp tree log log metablock tree log log log amortized inserts range tree log log log il amortized path caching log log log log amortized result log log comparison data structure stabbing queries data structures :10.1.1.35.1453:10.1.1.35.1453:10.1.1.35.1453:10.1.1.16.4346:10.1.1.156.2115
higher dimensional range searching problem related problems 
see surveys 
overview results main contribution optimal external memory data structure stabbing query problem 
mentioned data structure gives optimal solution interval management problem settles open problem highlighted :10.1.1.35.1453:10.1.1.156.2115
space blocks query bound update bound priority search tree log xp tree log log metablock tree log log log amortized inserts range tree log log log il amortized path caching log log log log amortized result log log comparison data structure stabbing queries data structures :10.1.1.35.1453:10.1.1.35.1453:10.1.1.35.1453:10.1.1.16.4346:10.1.1.156.2115
higher dimensional range searching problem related problems 
see surveys 
overview results main contribution optimal external memory data structure stabbing query problem 
mentioned data structure gives optimal solution interval management problem settles open problem highlighted :10.1.1.35.1453:10.1.1.156.2115
structure uses disk blocks maintain set intervals insertions deletions performed log os stabbing queries answered log os 
compare result previous solutions 
previous non optimal structures update bounds data structure worst case structure works assuming internal memory capable holding elements 
structure signi cantly di erent developed external priority search tree probably greater practical interest uses relatively fewer random os answering query 
possible techniques remove amortization update bound external priority search tree solves general problem external interval tree alternative external interval tree point location structures 
internal interval tree method simpler 
external memory developed optimal external priority search tree numerous structures 
section discuss ideas utilized external interval tree develop external segment tree log space 
improves previously known external segment tree structures log disk blocks :10.1.1.35.1453:10.1.1.35.1453
external memory interval tree xed endpoint set section external interval tree structure assuming endpoints intervals stored structure belong xed set size assume internal memory capable holding blocks 
remove assumptions sections 
preliminaries external interval tree extensively kinds auxiliary structures tree corner structure :10.1.1.96.6637:10.1.1.96.6637:10.1.1.156.2115
trees generally trees search tree structures suitable external memory 
section discuss ideas utilized external interval tree develop external segment tree log space 
improves previously known external segment tree structures log disk blocks :10.1.1.35.1453:10.1.1.35.1453
external memory interval tree xed endpoint set section external interval tree structure assuming endpoints intervals stored structure belong xed set size assume internal memory capable holding blocks 
remove assumptions sections 
preliminaries external interval tree extensively kinds auxiliary structures tree corner structure :10.1.1.96.6637:10.1.1.96.6637:10.1.1.156.2115
trees generally trees search tree structures suitable external memory 
lemma set elements stored tree structure disk blocks updates queries performed log os 
smallest largest elements reported os 
sorted elements tree built os 
trees generally trees search tree structures suitable external memory 
lemma set elements stored tree structure disk blocks updates queries performed log os 
smallest largest elements reported os 
sorted elements tree built os 
corner structure stabbing query data structure ecient number intervals stored :10.1.1.156.2115
lemma kanellakis ramaswamy vitter set intervals stored external data structure disk blocks stabbing query answered os number reported intervals :10.1.1.156.2115
discussed corner structure dynamic :10.1.1.156.2115
updates inserted update block structure rebuilt os updates performed 
rebuilding performed simply loading structure internal memory rebuilding writing back external memory 
lemma set elements stored tree structure disk blocks updates queries performed log os 
smallest largest elements reported os 
sorted elements tree built os 
corner structure stabbing query data structure ecient number intervals stored :10.1.1.156.2115
lemma kanellakis ramaswamy vitter set intervals stored external data structure disk blocks stabbing query answered os number reported intervals :10.1.1.156.2115
discussed corner structure dynamic :10.1.1.156.2115
updates inserted update block structure rebuilt os updates performed 
rebuilding performed simply loading structure internal memory rebuilding writing back external memory 
lemma assuming set intervals stored external data structure disk blocks stabbing query answered os update performed os amortized 
smallest largest elements reported os 
sorted elements tree built os 
corner structure stabbing query data structure ecient number intervals stored :10.1.1.156.2115
lemma kanellakis ramaswamy vitter set intervals stored external data structure disk blocks stabbing query answered os number reported intervals :10.1.1.156.2115
discussed corner structure dynamic :10.1.1.156.2115
updates inserted update block structure rebuilt os updates performed 
rebuilding performed simply loading structure internal memory rebuilding writing back external memory 
lemma assuming set intervals stored external data structure disk blocks stabbing query answered os update performed os amortized 
structure constructed os 
intervals stored structures search tree sorted left endpoints intervals sorted right endpoints 
perform stabbing query report intervals containing recursively report relevant intervals subtree containing contained vr nd intervals containing traversing intervals sorted left endpoints intervals smallest left endpoints ones largest left endpoints meet interval containing intervals interval sorted order contain time report intervals query answered log time total 
order interval tree structure ecient way need increase fanout base tree decrease height log 
creates problems 
main idea successful structure compared previous attempts fan ideas :10.1.1.35.1453
external interval tree set intervals endpoints xed set size de ned follows 
assume loss generality endpoints intervals distinct jej 
base tree perfectly balanced fanout tree endpoints leaf represents consecutive points tree height log log 
internal case internal node associate interval consisting endpoints interval divided subintervals intervals associated children refer 
balanced normal tree operations split fuse nodes time having weight property bb trees 
important feature weight balanced tree ratio largest smallest weight subtree rooted children node small constant factor 
tree ratio exponential height subtrees 
section show weight balanced tree remove xed endpoint assumption external interval tree 
weight balanced trees normal tree leaves level internal node children constant weak trees trees wider range number children allowed :10.1.1.96.6637
de ne weight balanced tree imposing constraints weight subtrees number children 
tree characteristics remain leaves level level rebalancing performed splitting fusing internal nodes 
de nition weight leaf de ned number elements stored 
weight internal node de ned parent 
shown worst case bounds obtained relatively complicated rede nition bb tree 
weight balanced tree branching parameter leaf parameter bb tree immediately obtain worst case bounds large number updates splits node immediately implies amortized bounds bounds easily worst case performing secondary structure rebuilding lazily 
ideas techniques construction similar ones succeeding sections omitted 
lazy rebuilding bb tree solution complicated rebalancing performed rotations means simply continue query update old secondary structure lazily building new ones 
mentioned weight balanced tree development numerous cient internal external data structures :10.1.1.116.7365
order obtain external tree structure suitable interval tree choose obtain 
theorem exists element search tree data structure disk blocks search insertion performed log os worst case 
internal node level structure root children dividing elements sets 
rebalancing insertion performed splitting nodes 
moving relevant segments perform stored updates lazily os accesses 
lazily copy shadow new shadow structures bound 
updates performed copy shadow structure handled way handled updates global rebuilding external interval tree remove delete amortization 
nish phase discarding old secondary structures updated shadow structures shadow secondary structures 
removing amortization corner structure section sketch corner structure lemma discuss amortized update bound worst case :10.1.1.156.2115
time remove assumption corner structure designed store set points plane line diagonal corner queries answered os :10.1.1.156.2115
discussed problem equivalent stabbing query problem 
structure de ned follows divided vertical regions containing points 
points regions stored blocks 
lazily copy shadow new shadow structures bound 
updates performed copy shadow structure handled way handled updates global rebuilding external interval tree remove delete amortization 
nish phase discarding old secondary structures updated shadow structures shadow secondary structures 
removing amortization corner structure section sketch corner structure lemma discuss amortized update bound worst case :10.1.1.156.2115
time remove assumption corner structure designed store set points plane line diagonal corner queries answered os :10.1.1.156.2115
discussed problem equivalent stabbing query problem 
structure de ned follows divided vertical regions containing points 
points regions stored blocks 
set points right boundaries regions intersect line 
answer query corner 

add 

js shown total number blocks store sets :10.1.1.156.2115
corner structure consists block block storing sets shown diagonal corner query answered os representation :10.1.1.156.2115
corner structure easily constructed os case ts main memory 
discussed structure easily dynamic amortized update bound update block global rebuilding :10.1.1.156.2115
show construct structure os incrementally updates block loaded main memory time 

add 

js shown total number blocks store sets :10.1.1.156.2115
corner structure consists block block storing sets shown diagonal corner query answered os representation :10.1.1.156.2115
corner structure easily constructed os case ts main memory 
discussed structure easily dynamic amortized update bound update block global rebuilding :10.1.1.156.2115
show construct structure os incrementally updates block loaded main memory time 
immediately removes assumption 

js shown total number blocks store sets :10.1.1.156.2115
corner structure consists block block storing sets shown diagonal corner query answered os representation :10.1.1.156.2115
corner structure easily constructed os case ts main memory 
discussed structure easily dynamic amortized update bound update block global rebuilding :10.1.1.156.2115
show construct structure os incrementally updates block loaded main memory time 
immediately removes assumption 
result lazy global rebuilding amortized update points 

compute os 
need compute horizontally block points answer query points proceeding line considering point turn 
assume blocked know position lowest coordinate point list points sorted coordinates 
block scan horizontal blocking collecting points coordinates smaller coordinate way obtain points coordinate horizontally blocked sorted coordinates 
collect remaining points horizontally blocked scanning list points sorted coordinates starting altogether js js os compute blocking js js bj os compute blocking corresponding points previously mentioned :10.1.1.156.2115
shown construct corner structure os blocks main memory 
algorithm easily modi ed incremental way modi ed run steps os main memory steps algorithm current state algorithm represented constant number pointers values 
step performed loading current state main memory os perform step os nally os write new state back disk 
total proved 
step performed loading current state main memory os perform step os nally os write new state back disk 
total proved 
lemma set intervals stored external data structure disk blocks stabbing query answered os updates performed os 
structure constructed os 
external segment tree section sketch ideas external interval tree develop external segment tree structure better space bound previously known structures :10.1.1.35.1453:10.1.1.35.1453
internal memory segment tree consists binary base tree intervals stored secondary structures interval nodes interval tree 
interval tree interval stored secondary structures nodes level base tree 
precisely interval stored nodes contains interval associated interval associated parent 
interval tree case structure weight balanced tree theorem base tree 
proc 
annu 
acm sympos 
principles database syst pages 
agarwal erickson :10.1.1.38.6261
geometric range searching relatives 
chazelle goodman pollack editors advances discrete computational geometry volume contemporary mathematics pages 
american mathematical society providence ri 
aggarwal vitter 
external memory algorithms processing line segments geographic information systems 
proc 
annual european symposium algorithms lncs pages 
appear special issues algorithmica geographical information systems 
arge vitter :10.1.1.16.4346
optimal dynamic interval management external memory 
proc 
ieee symp 
foundations comp 
constraint query languages 
proc 
acm symp 
principles database systems pages 
kanellakis ramaswamy vitter :10.1.1.156.2115
indexing data models constraints classes 
journal computer system sciences 
knuth :10.1.1.156.2115
sorting searching volume art computer programming 
principles database systems pages 
kanellakis ramaswamy vitter :10.1.1.156.2115
indexing data models constraints classes 
journal computer system sciences 
knuth :10.1.1.156.2115
sorting searching volume art computer programming 
addisonwesley reading ma second edition 
mccreight 
priority search trees 
international conference database theory lncs pages 
ramaswamy kanellakis 
oodb indexing class division 
series academic press new york 
ramaswamy subramanian :10.1.1.35.1453:10.1.1.35.1453
path caching technique optimal external searching 
proc 
acm symp 
principles database systems pages 
path caching technique optimal external searching 
proc 
acm symp 
principles database systems pages 
subramanian ramaswamy :10.1.1.35.1453
range tree new data structure range searching secondary memory 
proc 
acm siam symp 
discrete algorithms pages 
