design criteria scheduling real time agent control thomas wagner computer science department university maine wagner maine edu design criteria builds custom schedules agents meet hard temporal constraints hard resource constraints soft constraints stemming soft task interactions soft commitments agents 
design criteria designed specifically online application copes exponential combinatorics produce custom schedules resource bounded fashion 
enables agents respond changes problem solving environment arise 
complex autonomous agents operating open dynamic environments able address deadlines resource limitations problem solving 
partly due characteristics environment partly due complexity applications typically handled software agents research 
open environments requests service arrive local agent time making difficult fully plan predict agent workload 
situations schedule failure leads catastrophic system wide failure developed offline variant dtc uses contingency analysis explore evaluate recovery options possible failure points 
organized follows section ms describe role domain independent approach agent control 
section describe dtc reasons agent context control decisions produce resource bounded schedules 
section dtc approximate online solution strategy section discuss limitations open questions 
ms task models ms task analysis environment modeling simulation domain independent task modeling framework describe reason complex problem solving processes :10.1.1.37.4451
ms models multi agent coordination research research projects including cooperative hospital patient scheduling intelligent environments coordination software process :10.1.1.51.9217:10.1.1.51.8006
typically domain independent agent architecture domain specific problem solver planner translates problem solving options ms possibly level abstraction passes ms models agent control problem solvers multi agent coordination modules design criteria scheduler 
control problem solvers decide appropriate course action agent possibly coordinating communicating agents utilize control technologies 
ms models hierarchical abstractions problem solving processes describe alternative ways accomplishing desired goal represent major tasks major decision points interactions tasks resource constraints describe intricate details primitive action 
organized follows section ms describe role domain independent approach agent control 
section describe dtc reasons agent context control decisions produce resource bounded schedules 
section dtc approximate online solution strategy section discuss limitations open questions 
ms task models ms task analysis environment modeling simulation domain independent task modeling framework describe reason complex problem solving processes :10.1.1.37.4451
ms models multi agent coordination research research projects including cooperative hospital patient scheduling intelligent environments coordination software process :10.1.1.51.9217:10.1.1.51.8006
typically domain independent agent architecture domain specific problem solver planner translates problem solving options ms possibly level abstraction passes ms models agent control problem solvers multi agent coordination modules design criteria scheduler 
control problem solvers decide appropriate course action agent possibly coordinating communicating agents utilize control technologies 
ms models hierarchical abstractions problem solving processes describe alternative ways accomplishing desired goal represent major tasks major decision points interactions tasks resource constraints describe intricate details primitive action 
primitive actions ms called methods statistically characterized discrete probability distributions dimensions quality cost duration 
approximation schedule approximations called alternatives provide inexpensive coarse overview schedule solution space 
alternative models way agent achieve top level task 
alternatives contain set unordered actions estimation quality cost duration characteristics result actions sequenced form schedule 
conjunction focusing enables dtc address planning side complexity 
heuristic decision making address scheduling side complexity dtc uses superset techniques design time iterative heuristic process sequencing actions alternative :10.1.1.42.5409
action rating heuristics rate action ratings dtc stratified certain heuristics constraints dominate 
net effect reduction stirling approximation complexity polynomial levels worst case 
heuristic error correction approximation heuristic decision making price possible create schedules suboptimal 
secondary set improvement heuristics act safety net catch errors 
additionally applications specific subsets features afforded ms employed custom schedulers may better job balancing different concerns finding solutions 
terms optimality difficult compare performance dtc optimal exhaustive generation simply feasible generate possible schedules realistic task structures 
members group currently working mdp ms scheduling tool plan measure dtc performance smaller applications tool 
important note dtc takes great produce schedules quickly scheduler hard real time 
performance guarantees problem instance possible produce guarantees classifying similar task structures measuring scheduling performance offline :10.1.1.38.7238
issue constraints arbitrary ms task structure 
certain classes task structures guarantees depth possible 
practice scheduler implemented lines fast capable scheduling task structures primitive actions seconds mhz pentium iii machine running linux 
sampling applications runtimes shown table 
victor lesser bryan horling frank anita raja thomas wagner xq 
zhang 
big agent resource bounded information gathering decision making 
appear aij 
david edmund durfee kang shin :10.1.1.38.7238
circa cooperative intelligent real time control architecture 
ieee trans 
systems man cybernetics 
david james hendler edmund durfee jay paul 
