dynamic window approach avoidance dieter wolfram sebastian 
computer science iii university bonn bonn germany 
computer science carnegie mellon university pittsburgh email cs uni bonn de thrun cs cmu edu describes dynamic reactive collision avoidance mobile robots equipped synchro drives 
approach directly motion dynamics robot particularly suited high speed 
di ers previous approaches thatthe search commands controlling translational rotational velocity ofthe robot carried directly space velocities 
advantage approach correctly incorporates dynamics robot 
done reducing search space dynamic window consists ofthe velocities reachable short timeinterval 
dynamic considers admissible velocities yielding trajectory robot able safely 
velocities combination translational rotational velocity chosen maximizing objective function 
objective function includes measure progress goal location forward velocity ofthe robot distance obstacle trajectory 
extensive experiments approach safely control mobile robot rhino speeds cm sec populated dynamic environments 
ofthe ultimate goals indoor mobile robotics research isto build robots safely carry missions hazardous populated environments 
example service robot assists humans indoor ce environments able react rapidly unforeseen changes perform task wide variety circumstances 
today commercial mobile devices scale poorly dimension 
motion planning relies accurate static models environments seize function humans unpredictable obstacles block path 
build autonomous mobile robots build systems environments react unforeseen circumstances re plan dynamically order achieve missions 
focuses particular aspect design robot reactive avoidance collisions obstacles 
dynamic window approach proposed especially designed deal constraints imposed limited velocities accelerations directly motion dynamics mobile robots 
nutshell approach considers periodically short time interval computing steering command toavoid enormous general motion planning problem 
trajectories interval circular curvatures results dimensional search space translational rotational velocities 
search space reduced admissible velocities allowing robot safely 
due limited accelerations motors restriction imposed velocities robot considers velocities reached timeinterval 
velocities form dynamic window centred current velocities robot velocity space 
velocities dynamic translational rotational 
objective function includes measure progress goal location forward velocity robot distance obstacle trajectory 
combining robot trades desire goal ship obstacles decrease free space 
combination objectives leads robust elegant collision avoidance strategy 

robot rhino rwi 
dynamic window approach implemented tested rhino robot manufactured realworld interface 
see robots 
extensive experimental evaluations ultrasonic proximity sensors construction local world models obstacle line elds method proven avoid collisions reliably speeds cm sec robots indoor environments university bonn carnegie mellon university aaai robot competition ijcai robot exhibition see 
method successfully operated cameras infrared detectors sensory input 
approach di ers previous approaches directly motion dynamics mobile robot takes inertia robot account particularly important robot torque limits travels high speed safely controlled rwi robots cluttered dynamic environments centimeter second 
envision approach particularly useful robots travel higher speeds low cost robots limited motor torques constraints imposed motion dynamics imperative 
remainder organized follows 
discussing related section gives general motion equations synchro drive mobile robots 
ofthe key results trajectories synchro drive robots approximated accurately nitely segments circles 
section describes approach outlined 
experimental results summarized section followed discussion research issues 
related collision avoidance approaches mobile robots roughly divided categories global local 
techniques road map cell decomposition potential eld methods see overview generally assume complete model robot environment isavailable 
advantage global approaches lies fact complete trajectory starting point tothe target point computed line 
global approaches appropriate fast obstacle avoidance 
strength global path planning 
additionally methods proven problematic global world model inaccurate simply available typically indoor environments 
hu brady moravec shown world models sensory input probabilistic representations 
second disadvantage global methods slowness due inherent complexity robot motion planning 
particularly problematic underlying world model changes resulting need repeated adjustments plan 
cases planning ina global model usually expensive done repeatedly 
local reactive approaches hand small fraction world model generate robot control 
comes disadvantage produce optimal solutions 
local approaches easily trapped local minima shaped obstacle con gurations 
key advantage local techniques global ones lies low computational complexity particularly important world model updated frequently sensor information 
example potential eld methods proposed steering direction hypothetically assuming obstacles assert negative forces robot target location asserts positive force 
methods extremely fast typically consider small subset obstacles close robot 
borenstein koren identi ed fail nd trajectories closely spaced obstacles produce oscillatory behavior narrow corridors 
extended version potential eld approach 
modifying potential function motion robot cient erent behaviors tracking achieved 
vector eld histogram approach proposed extends previously developed virtual force eld histogram :10.1.1.22.8555:10.1.1.22.2796
approach uses occupancy grid representation modeling robot environment generated ously ultrasonic proximity sensors 
occupancy information transformed histogram description free space motion direction velocity robot 
noted local methods typically fast quickly adapt unforeseen changes environment 
left wall robot right wall right wall ii target 
example situation local approaches generate motion commands robot separate stages :10.1.1.22.8555:10.1.1.22.2796
rst motion direction determined 
second stage steering commands yielding motion desired direction generated 
strictly speaking justi able nite forces asserted robot 
robots limited accelerations necessary take account impulse robot 
example consider situation suppose robot fast straight motion corridor target point small opening right 
obviously optimal target direction implies turn right 
forces high perform sharp turn robot collide wall right wall ii 
considering admissible velocities dynamic window method detects robot perform sharp turn 
robot stay current straight trajectory collide wall 
motion equations synchro drive robot section describes fundamental motion equations synchro drive mobile robot 
derivation begins correct dynamic laws assuming robot translational rotational velocity controlled independently limited torques 
equations practical derive models velocity asa piecewise constant function time 
assumption robot trajectories consist sequences nitely segments circles 
representations convenient collision checking intersections obstacles circles easy check 
derive bound approximation error 
piecewise circular representation forms basis dynamic window approach avoidance described section 
general motion equations andy denote robot coordinate global coordinate system robot orientation heading direction described 
hx describes kinematic con guration robot 
motion synchro drive robot constrained way translational velocity leads steering direction robot non holonomic constraint 
andx tn denote coordinates robot time tn respectively 
denote translational velocity time velocity 
tn tn expressed function tn tn cos dt sin dt equations depend onthe velocities robot usually set directly 
velocity depends initial translational velocity andthe translational acceleration inthe time interval 
likewise orientation initial orientation initial rotational velocity andthe rotational acceleration 
substituting corresponding initial kinematic con guration accelerations yields expression tn cos dt equations trajectory robot depends exclusively initial dynamic con guration time accelerations notice derivation tn analogous describe derivation coordinate 
controllable mobile robots determining monotonic functions currents owing motors 
limits onthe currents directly correspond 
digital hardware imposes constraints set motor currents set new accelerations 
eq 
simpli ed assuming arbitrary points intime tn robot controlled nitely acceleration commands 
denote number 
accelerations 
kept constant ti ti 
de ned ti interval index discrete form dynamic behavior synchro drive robot expressed equation follows directly eq 
assumption piecewise constant accelerations ti ti cos ti approximate motion equations 
dt eq 
describes general case mobile root control particularly helpful actual steering direction 
trajectories generated equations complex geometric operations intersections expensive perform 
derive practical model simplify eq 
approximating robot velocities constant value 
resulting motion equation eq 
converges eq 
length ofthe time intervals goes zero 
see assumption trajectory robot approximated piecewise circular arcs 
representation suited generating motion control real time described section ti ti su ciently small ti approx arbitrary translational velocity vi ti ti due smoothness robot motion time 
likewise term ti ti 
approximated arbitrary ti 
ti ti 
leads motion equation ti ti cos 
solving integral simpli ed vi sin sin 
cos corresponding equations coordinate vi cos cos 
sin notice 
robot follow straight line 
conversely 
robot trajectory describes circle seen considering sin vi cos ti relation holds shows th trajectory circle mi mi radius assuming piecewise constant velocities approximate trajectory robot sequence circular straight line arcs 
vi notice apart initial conditions equations depend velocities 
controlling robot free set arbitrary velocities dynamic constraints ofthe robot impose bounds maximum deviation velocity values subsequent intervals 
upper bound onthe approximation error obviously derivation approximate assumption velocities piecewise constant time interval 
error bounded linearly time control points fact modeling uncertainty inthe robot position 
consider errors andy coordinate respectively time interval ti ti 
ti ti ti direction axes maximal robot moves straight trajectory parallel axis 
interval arbitrary velocity vi ti ti upper errors th timeinterval governed ei jv ti ti linear ti 
reader notice bound applies internal prediction robot position 
executing control robot measured periodically encoders times second implementation 
completes derivation robot motion 
summarise derived approximate form describes trajectories sequences circular arcs derived linear bound onthe error due assumption inthe derivation piecewise constant velocities 
dynamic window approach dynamic window approach search commands robot carried directly space velocities 
dynamics robot incorporated method reducing search space velocities reachable dynamic constraints 
addition restriction velocities considered safe respect obstacles 
pruning ofthe search space done inthe rst step algorithm 
second step velocity maximizing objective function chosen remaining velocities 
brief outline erent parts algorithm 
current implementation cycle performed seconds 
remainder section situation shown describe di erent aspects ofthe dynamic window approach 
search space circular trajectories section showed possible approximate trajectory robot sequence circular arcs 
remainder refer circles curvatures 
curvature uniquely determined velocity vector vi simply refer velocity 
trajectory goal point time intervals robot determine velocities vi intervals tn 
done premise resulting trajectory intersect 
search space vectors exponential number considered intervals 
optimization feasible dynamic window approach considers exclusively rst timeinterval assumes velocities remaining constant zero accelerations tn 
reduction motivated observations reduced search space dimensional tractable search repeated time interval velocities automatically stay constant commands 
admissible velocities obstacles closer impose restrictions rotational translational velocities 
example maximal admissible speed curvature depends distance obstacle curvature 
assume term dist represents distance obstacle corresponding curvature section describe compute distance circular trajectories 
considered admissible robot able reaches obstacle 
accelerations breakage 

search space search space possible steps circular trajectories dynamic window approach considers circular trajectories curvatures uniquely determined pairs translational rotational velocities 
results ina dimensional velocity search space 
admissible velocities restriction admissible velocities ensures safe trajectories considered 
pair considered admissible robot able reaches closest obstacle corresponding curvature 
dynamic window dynamic window restricts admissible velocities reached time interval limited accelerations robot 

optimization objective function heading dist vel maximized 
respect current position orientation robot function trades aspects target heading heading measure progress goal location 
maximal robot moves directly target 
clearance dist distance closest obstacle trajectory 
smaller distance higher robot desire move 
velocity vel forward velocity ofthe robot supports fast movements 
function smoothes weighted sum ofthe components results side clearance obstacles 
di erent parts ofthe dynamic window approach admissible velocities de ned dist vb dist va set velocities allow robot colliding obstacle 
vs cm sec left wall corridor right wall ii door right wall va deg sec 
velocity space deg sec example consider example 
shows velocities admissible situation accelerations cm sec deg sec 
non admissible velocities denoted dark shaded areas 
example velocities area right wall ii cause sharp turn right cause robot collide right wall example situation 
non admissible areas extracted real world proximity information special case information obtained sonar sensors see section 
dynamic window order take limited accelerations motors search space reduced dynamic window contains velocities reached time interval 
time interval accelerations 
applied va bethe actual velocity 
dynamic window vd de ned 

dynamic window centred actual extensions depend accelerations exerted 
curvatures outside dynamic window reached timeinterval considered avoidance 
example exemplary dynamic window obtained situation shown accelerations cm sec deg sec time interval sec shown 
dotted arrows pointing corners rectangle denote extreme curvatures reached 
vs cm sec dynamic window vd va vr actual velocity deg sec 
dynamic window deg sec resulting search space restrictions imposed search space velocities result inthe area vr dynamic window 
vs space possible velocities area vr de ned intersection restricted areas resulting search space represented white area 
maximizing objective function having determined resulting search space vr selected vr 
order incorporate criteria target heading clearance maximum objective function heading dist velocity computed done discretization resulting search space 
target heading target heading heading measures target direction 
angle target point robot heading direction see 
direction changes di erent velocities computed predicted position robot 
determine predicted position assume robot moves selected velocity time interval 
realistic measurement ofthe target heading wehave consider dynamics rotation 
computed position robot reach target heading predicted position actual position 
angle target rot 
velocity deg sec trans 
velocity cm sec 
evaluation target heading exerting maximal deceleration interval 
yields smooth turning tothe target behavior robot circumvented obstacle 
example shows evaluation target heading di erent velocities example situation 
gure gures values velocities set zero compare figures 
clarity show evaluation velocity space restrict dynamic window 
non linearity function consideration dynamics determination predicted position 
positive rotational velocities yield curvatures right nd best velocities right side velocity space 
optimal velocities leading perfect heading target predicted position 
function declines higher rotational velocities yield turning target 
clearance function dist represents distance closest obstacle intersects curvature 
obstacle curvature value set large constant 
distance velocity rot 
velocity deg sec trans 
velocity cm sec rot 
velocity deg sec trans 
velocity cm sec 
evaluation distances 
evaluation velocities example evaluation distances solely depends proximity information obstacles robot 
plot nd low evaluations curvatures lead walls 
higher translational velocities values fall non admissible areas set zero 
velocity function velocity progress robot corresponding trajectory 
projection translational velocity seen 
smoothing evaluation function smoothed evaluation function rot 
velocity deg sec trans 
velocity cm sec rot 
velocity deg sec trans 
velocity cm sec 
combined evaluation function 
objective function components normalized :10.1.1.22.8555
weighted sum components 
obtained avalue value expected fastest trajectory leading door area gets highest evaluation compare 
smoothing increases side clearance robot 
resulting objective function shown maximal value depicted vertical line 
noticed components ofg target heading clearance velocity necessary 
maximizing solely clearance velocity robot travel free space goal location 
solely maximizing target heading robot quickly get stopped rst obstacle blocks way unable 
combining components robot fast constraints listed making progress reaching 
version approach see search best velocity carried steps 
rst step curvature chosen 
done evaluating target angle called sec rule linear function clearance 
second step velocity curvature maximized 
resulting behavior robot decided single step evaluation objective function 
adopted idea representation :10.1.1.41.1471
role dynamic window previous section introduced objective function smooth goal directed behavior 
illustration purposes showed evaluation velocity space 
mentioned section space reduced admissible velocities dynamic window 
section describe robot respects dynamics restriction 
discuss dependency behavior di erent velocities accelerations 
examples time interval determining dynamic window seconds 
role current velocity example show behavior changes current velocities 
assume accelerations cm sec deg sec shows dynamic windows straight motion translational velocities cm sec respectively 
figures objective function shown dynamic windows 
velocities outside dynamic windows 
vs cm sec vd corridor door va vd deg sec 
velocity space deg sec rst case current velocity cm sec robot moves fast perform sharp turn right necessary open door 
re ected fact velocities resulting right admissible 
velocities dynamic window velocity maximal evaluation yields straight motion denoted vertical line bythe cross mark atthe top 
dynamic window dynamic window rot 
velocity deg sec trans 
velocity cm sec rot 
velocity deg sec trans 
velocity cm sec 
objective function actual velocity 
objective function actual velocity contrast current velocity cm sec dynamic window vd includes curvatures leading door see figures 
due better evaluation angle distance chosen right 
dependency accelerations restricted search space evaluation function dynamic window depend accelerations 
consider space example accelerations cm sec deg sec illustrated 
small accelerations space admissible velocities smaller 
consider velocities cm sec deg sec 
dynamic window straight motion translational velocity cm sec represented white area 
size window depends accelerations 
contains velocity space 
evaluation space restricted velocities dynamic window 
robot fast sharp turn velocity straight motion maximal evaluation compare 
implementation experimental results rhino dynamic window approach implemented tested robot rhino synchro drive robot currently equipped ultrasonic sensors infrared detectors camera system 
main beam width ultrasonic transducer approximately area surrounding robot measured sensors 
complete sonar sweep takes approximately sec 
cm sec corridor door vd deg sec deg sec 
dynamic window low accelerations smoothed evaluation dynamic window rot 
velocity deg sec trans 
velocity cm sec rot 
velocity deg sec trans 
velocity cm sec 
objective function low accelerations 
objective function dynamic window obstacle line field local world model obstacle line eld dimensional description sensory data robot position see 
adjusted sonar sensors erroneous readings indicate long distance 
conservative reading converted line 
sensors produce spurious short readings due cross talk sophisticated sensor interpretation integration models example occupancy probability required 
obstacle line eld centred robot position built data gathered proximity sensors 
contains line reading sonar sensor perpendicular main axis sensor beam measured distance 
length ofthe line breadth ofthe beam distance 
left wall collision point obstacle lines robot trajectory right wall target 
example environment obstacle lines target point 
determination distance obstacle representation obstacles curvatures computed follows radius circular trajectory andlet angle obstacle line robot see 
distance obstacle allow robot react quickly changes environment limit number lines rst rst strategy remove actual lines obstacle line eld 
values allow robot travel safely speeds cm sec simultaneously keeping computational time sec computer 
implementation details additional strategies improved elegance robot motion 
essential approach proposed sketch 
rotate away mode 
rare cases observed robot got stuck minima 
case admissible trajectory allows robot translate 
condition occurs easily detected robot rotates away obstacle able translate 
speed dependent side clearance 
adapt speed robot side clearance obstacles introduced safety margin robot grows linearly robot translational velocity 
robot travel high speed corridors decelerate driving narrow doors 
simultaneously possible deviations coming approximation error described section respected 
experimental results dynamic window approach avoidance rhino operated safely various environments years 
constrained hardware approximately cm sec 
rhino reaches velocity large openings hallways obstacles block 
block slower velocities selected collisions avoided selecting appropriate trajectories 
example moving doors rhino typically approximately cm second 
remainder section give experimental results generated dynamic window approach 
gures environment drawn hand 
diagram actual shown trajectories extracted real position data 
show complete path particular goal point tests operator 
day goal points set automatically global path planner described :10.1.1.153.3743
parameter settings performance obstacle avoidance depends weighting parameters slight values 
tuning ofthese parameters values give results 
alignment target point determined ratio parameters 
low values target heading weight give robot freedom moving obstacles 
may robot reaching target points narrow openings sensors low angular resolution ultrasonic sensors 
robot turns away opening sensors able detect 
extreme high heading weight forces robot approach objects closely turning away prohibits smooth obstacles 
choosing di erent values global knowledge environment transfered local obstacle avoidance 
higher values produce results narrow environments smaller values appropriate hallways 
role dynamic window rst uence dynamic window onthe behavior robot 
paths examples typical behavior robot di erent dynamics constraints velocities accelerations values section 
crucial point ofthe path taken dark shaded decision area 
area robot detects opening turn 
decision strongly depends dynamics robot 
actual velocity andthe possible accelerations allow turn right robot directly moves target point 
trajectory denoted line 
cases robot decides pass moves parallel wall evaluation target heading angle small 
cm sec cm sec deg sec cm sec cm sec deg sec cm sec cm sec deg sec decision area 
trajectories chosen di erent dynamic parameters notice considering dynamic constraints attempt turn right certainly resulted collision 
fact initial experiments ignored ofthe dynamic ects experienced type collisions frequently 
straight motion corridors human 
trajectory corridor shows example traveling obstacle middle hallway 
inthis case rhino rst orients target point 
obstacle detected robot chooses smooth trajectory avoiding obstacle 
rhino slows cm sec passing obstacle average speed experiment approximately cm sec 
noted having driven round obstacle rhino follows straight lines possible oscillate case approaches 
fast motion cluttered environment humans 
trajectory cluttered corridor third experiment involves traveling cluttered corridor 
humans corridor smoothly circumvented speed cm sec 
notice robot cm sec passing narrow passage cm wide fourth person open door maintains average speed cm sec 
aaai mobile robot competition trajectory generated arena ofthe aaai mobile robot competition 
shows plot occupancy map arena andthe trajectory robot 
robot moved free collisions arti cial indoor environment exploration run 
target points collision avoidance generated global planning algorithm 
doors approximately cm wide 
generally di compare results obtained researchers mainly robots vary sizes small changes enormous impact di 
example con guration similar ones shown figures borenstein report robot traveled speed cm sec cluttered environment :10.1.1.22.8555:10.1.1.22.2796
far judged single example isavailable results compare favorably :10.1.1.22.8555:10.1.1.22.2796
discussion describes approach avoidance mobile robots equipped synchro drives 
exact motion equations robots derives approximate version models robot trajectories nite sequences circular arcs 
dynamic window approach rst prunes search space considering steering command 
results dimensional search space circular trajectories 
search space reduced velocities allowing robot start robot 
run atthe aaai mobile robot competition safely colliding 
dynamic window restricts admissible velocities reached short timeinterval limited accelerations robot 
way sure dynamic constraints taken account 
robot constantly picks trajectory maximize translational velocity andthe distance obstacles minimize angle goal relative heading direction 
done objective function 
combination objectives leads avery robust elegant collision avoidance strategy safely operates robot rhino speeds cm sec 
rhino mobile robot frequently operates university building human supervision 
approach described part architecture 
example approaches building occupancy maps global path planning computer vision surveyed 
principle approach proposed assumes geometric information relative location obstacles 
suited proximity sensors ultrasonic transducers experiments reported laser range 
preliminary tests camera infrared sensors detection obstacles 
knowing geometry robot angle camera pixel information converted proximity information 
resulting proximity estimate touches oor 
obstacles di distance cause robot collide 
stereo vision potentially overcome problem 
result infrared detectors su ered fact rhino detectors small range view cm 
moving high speed robot may collide 
combining sensor systems ultrasonic measurements consistently improved smoothness robot trajectories 
acknowledgment authors thomas hofmann members rhino team insightful discussion help advice 
author sponsored part national science foundation award iri bythe wright laboratory aeronautical systems center air force materiel command usaf defense advanced research projects agency darpa number 
views contained document author interpreted necessarily representing cial policies endorsements expressed implied nsf wright laboratory united states government 
borenstein koren :10.1.1.22.8555
real time obstacle avoidance fast mobile robots cluttered environments 
proc 
ieee int 
conf 
robotics automation volume ch pages 
borenstein koren :10.1.1.22.2796
vector eld histogram fast obstacle avoidance mobile robots 
ieee transactions robotics automation 
buhmann burgard cremers fox hofmann schneider thrun 
mobile robot rhino 
ai magazine 
feng borenstein everett 
am 
sensors methods autonomous mobile robot positioning 
technical report um university michigan december 
hu brady 
bayesian approach real time obstacle avoidance mobile robot 
autonomous robots volume pages 
kluwer academic publishers boston 
jones flynn 
mobile robots inspiration implementation 
ak peters 
isbn 
khatib chatila 
extended potential eld approach mobile robot sensor motions 
proc 
international conference intelligent autonomous systems ias 
khatib 
real time obstacle avoidance robot manipulator mobile robots 
international journal robotics research 
koren borenstein 
potential eld methods inherent limitations mobile robot navigation 
proc 
ieee int 
conf 
robotics automation april 
latombe 
robot motion planning 
kluwer academic publishers boston ma 
isbn 
moravec 
sensor fusion certainty grids mobile robots 
ai magazine pages summer 
schwartz hopcroft 
planning geometry complexity robot motion 
ablex publishing norwood nj 
simmons :10.1.1.41.1471
curvature velocity method local obstacle avoidance 
proc 
ieee int 
conf 
robotics automation 
thrun 
exploration model building mobile robot domains 
proceedings icnn pages san francisco ca 
ieee neural network council 
thrun anda 
integrating grid topological maps mobile robot navigation 
proceedings thirteenth national conference onarti cial intelligence aaai 
thrun burgard fox hofmann 
map learning high speed navigation rhino 
kortenkamp bonasso murphy editors ai mobile robots case studies successful robot systems 
mit press cambridge ma appear 

