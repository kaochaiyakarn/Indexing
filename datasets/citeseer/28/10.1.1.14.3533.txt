optimizing queries multimedia repositories surajit chaudhuri microsoft research microsoft com luis gravano stanford university gravano cs stanford edu multimedia repositories applications retrieve multimedia information increasingly popular 
study problem selecting objects multimedia repositories show problem relates processing optimization selection queries contexts selection conditions expensive user defined predicates 
find problem unique characteristics lead interesting new research questions results 
article presents overview results :10.1.1.55.2172:10.1.1.14.3533
expanded version preparation 
query model section describe model querying multimedia repositories 
permission reprint republish material advertising promotional purposes creating new collective works resale redistribution servers lists reuse copyrighted component works obtained ieee 
bulletin ieee computer society technical committee data engineering done authors hewlett packard laboratories palo alto ca 
color histograms 
second rarely user expect multimedia object match attribute value exactly 
users interested grade match objects match attribute values :10.1.1.55.2172
object attribute attr constant value associated grade match grade attr value real number expresses attr matches value 
atomic filter condition necessarily exact equality condition values color histogram color histogram oid color hist object inequality involving grade match values target grade 
example grade color hist oid atomic filter condition satisfied objects color histogram matches color histogram grade match higher 
traditional selection queries ask tuples match selection condition ordered values column user defined function 
atomic filter condition necessarily exact equality condition values color histogram color histogram oid color hist object inequality involving grade match values target grade 
example grade color hist oid atomic filter condition satisfied objects color histogram matches color histogram grade match higher 
traditional selection queries ask tuples match selection condition ordered values column user defined function 
process querying browsing multimedia repository interactive users tend ask best matches ranking criterion 
query model contains ranking expression addition filter condition described :10.1.1.55.2172
ranking expression query assigns order object repository satisfies filter condition query 
particular ranking expression comparison assigns grade object 
grades sort objects users ask top objects repository rank example 
ranking expressions atomic grade color hist oid complex 
example consider multimedia repository information 
record person file consists textual description profile scanned fingerprint recording voice sample target fingerprint voice sample example asks records fingerprint matches grade higher profile matches string grade higher voice sample matches grade higher 
ranking expression ranks acceptable records maximum grade match voice sample fingerprint answer contains top acceptable records 
simplicity omitted parameter oid atomic conditions 
select oid repository grade grade grade order max grade grade interesting expressivity question need filter condition ranking condition words know embed filter condition new ranking expression top objects top objects satisfy show possible :10.1.1.129.5879:10.1.1.55.2172:10.1.1.14.3533:10.1.1.14.3533
words query model expressive filter conditions 
related query models relational query models support ranking grades match sense section 
hand extensible architectures universal servers exploited support proposed query model extent 
example exploit extensible architecture chabot image server postgres :10.1.1.131.7887
select oid repository grade grade grade order max grade grade interesting expressivity question need filter condition ranking condition words know embed filter condition new ranking expression top objects top objects satisfy show possible :10.1.1.129.5879:10.1.1.55.2172:10.1.1.14.3533:10.1.1.14.3533
words query model expressive filter conditions 
related query models relational query models support ranking grades match sense section 
hand extensible architectures universal servers exploited support proposed query model extent 
example exploit extensible architecture chabot image server postgres :10.1.1.131.7887
chabot indirectly manages non exact matches say color histograms user defined predicate 
color histogram criterion red predicate red holds histogram sufficiently red hard coded specification 
unfortunately chabot approach inflexible explicit user defined predicate created handle ranking expressions involve attributes combine grades match involving image color histogram text multimedia object 
interesting open question study extent exploit capabilities extensible architecture postgres implement proposed query model 
general solution needed context multimedia selection queries 
simplicity considering execution space optimization conjunctive filter condition filter condition conjunction set atomic conditions 
way determine objects satisfy filter condition scan list object ids evaluate atomic condition object probe interface 
best plan determined viewing problem ordering set expensive selection conditions 
optimal order ascending order rank gammas condition cost evaluating atomic condition object selectivity condition :10.1.1.20.9548
plans require executing probe condition object chance final result 
large repository step prohibitively expensive 
conditions support search interface indexed search 
example condition evaluate rest conditions objects selected probe 
algorithm picks condition provides cost condition 
happens filter condition conjunction atomic conditions condition atomic conditions connected ors ands 
view filter condition tree tree structure reflects nesting propositional operators 
case conjunctive queries scan list object ids evaluate atomic conditions determine answer query 
unfortunately case conjunctive queries problem ordering evaluation atomic conditions arbitrary propositional condition intractable need rely known heuristics cf :10.1.1.129.5879:10.1.1.133.2288

exploit search interface repositories processing arbitrary filter conditions 
case conjunctive queries sufficient atomic condition avoid scanning objects 
problem identifying search minimal condition sets arises 
search minimal execution filter condition searches repository search minimal condition set executes steps 
assume independence atomic conditions filter condition 
ffl determine optimal search minimal condition set ffl condition search obtain set objects probe object residual condition obtain filtered set objects satisfy ffl return union new challenges limited context search minimal execution space filter condition search condition residual predicate object retrieved search satisfy answer set 
determine optimal search minimal condition set 
provides polynomial time algorithms answer questions broad assumptions cost models :10.1.1.14.3533
illustrate step determining residual predicates example 
algorithm determine optimal search minimal condition set independent filter condition :10.1.1.55.2172:10.1.1.14.3533
intuitively algorithm traverses condition tree bottom fashion 
node takes optimal search minimal condition set subtrees minimal cost node takes union search minimal condition sets subtrees 
ffl determine optimal search minimal condition set ffl condition search obtain set objects probe object residual condition obtain filtered set objects satisfy ffl return union new challenges limited context search minimal execution space filter condition search condition residual predicate object retrieved search satisfy answer set 
determine optimal search minimal condition set 
provides polynomial time algorithms answer questions broad assumptions cost models :10.1.1.14.3533
illustrate step determining residual predicates example 
algorithm determine optimal search minimal condition set independent filter condition :10.1.1.55.2172:10.1.1.14.3533
intuitively algorithm traverses condition tree bottom fashion 
node takes optimal search minimal condition set subtrees minimal cost node takes union search minimal condition sets subtrees 
example consider filter condition 
residue atomic condition example object satisfies satisfies satisfies entire condition observe fa fa fa search minimal condition set 
need best objects retrieve object evaluate ranking expression object sort objects accordingly 
words interested top objects unable take advantage query processing 
show map ranking expression filter condition process ranking expression filter condition 
result possible take advantage parameter query processing central processing queries ranking expressions techniques section filter conditions 
fagin novel approach take advantage processing query consisting ranking expression min independent atomic expressions :10.1.1.55.2172
fagin proved important result algorithm retrieve top objects expression min independent atomic expressions asymptotically optimal arbitrarily high probability terms number objects retrieved 
fagin strategy helps reduce number objects need retrieved process ranking expression treat ranking expression selection condition point view query processing determine search minimal condition set 
key contribution take advantage fagin view ranking expression filter expression query processing cost optimization queries uniform irrespective presence ranking expressions 
query contains filter condition ranking expression asks top objects ranking expression satisfy results section translate query problem optimizing filter condition filter condition associated describe determined 
algorithm assign grade atomic expression filter condition structure expected retrieve top objects 
search minimal execution retrieves expected number objects larger expected number objects fagin algorithm retrieve example consider ranking expression min grade grade attribute constant value 
want objects top grades suppose find grade higher better objects grade higher expression retrieve objects grade higher simply order grades return top result query 
words process processing associated filter condition followed sorting step answer set grade grade processing strategies section obtain objects grade higher obtain objects grade higher ranking expression objects set objects know retrieved top objects need answer query ranking expression similarly process ranking expression max grade grade filter condition grade grade grade example shows process ranking expression filter condition followed sorting step 
key point mapping ranking problem modified filtering problem finding grade algorithm grade rank number objects desired ranking expression selectivity statistics produces grade filter condition approach allows translate ranking expressions filter conditions processing strategy section :10.1.1.55.2172:10.1.1.14.3533
objects expected satisfy run time find fewer objects satisfy lower grade investigate strategies lower part 
natural ask algorithm compares fagin terms retrieval efficiency 
show process ranking expression associated number objects requested filter condition grade determined algorithm grade rank expect retrieve objects fagin algorithm assumptions repositories :10.1.1.55.2172:10.1.1.14.3533
furthermore experiments show approach outlined section desirable assumptions repository hold strictly 
words process processing associated filter condition followed sorting step answer set grade grade processing strategies section obtain objects grade higher obtain objects grade higher ranking expression objects set objects know retrieved top objects need answer query ranking expression similarly process ranking expression max grade grade filter condition grade grade grade example shows process ranking expression filter condition followed sorting step 
key point mapping ranking problem modified filtering problem finding grade algorithm grade rank number objects desired ranking expression selectivity statistics produces grade filter condition approach allows translate ranking expressions filter conditions processing strategy section :10.1.1.55.2172:10.1.1.14.3533
objects expected satisfy run time find fewer objects satisfy lower grade investigate strategies lower part 
natural ask algorithm compares fagin terms retrieval efficiency 
show process ranking expression associated number objects requested filter condition grade determined algorithm grade rank expect retrieve objects fagin algorithm assumptions repositories :10.1.1.55.2172:10.1.1.14.3533
furthermore experiments show approach outlined section desirable assumptions repository hold strictly 
section showed process ranking expression filter condition semantics filter condition ranking expression remain distinct 
see section processing ranking expression filter condition compute grade retrieved objects ranking expression sort returning answer query 
putting results perspective consider queries ranking expression 
search minimal execution space restrictive way analogous index processing traditional selection condition 
eliminating restriction executions search minimal opens interesting directions explore 
ranking expressions built min max operators 
interesting question explore process ranking expressions operators weighted sum example deciding operators useful allow ranking expressions 
surajit chaudhuri luis gravano :10.1.1.55.2172:10.1.1.14.3533
optimizing queries multimedia repositories 
proceedings acm sigmod conference management data pages montreal june 
surajit chaudhuri luis gravano 
optimizing queries multimedia repositories 
surajit chaudhuri luis gravano 
optimizing queries multimedia repositories 
technical report 
preparation 
ronald fagin :10.1.1.55.2172
combining fuzzy information multiple systems 
th acm symposium principles database systems june 
available ibm almaden research center technical report rj 
jim gray data cube relation aggregation operator generalizing group cross tab sub totals 
data mining knowledge discovery 

retrieval multimedia documents imprecise query specification 
proceedings edbt venice march 
virginia ogle michael stonebraker :10.1.1.131.7887
chabot retrieval relational database images 
ieee computer september 
gerard salton 
automatic text processing transformation analysis retrieval information computer 
ieee computer september 
gerard salton 
automatic text processing transformation analysis retrieval information computer 
addison wesley 
hellerstein stonebraker :10.1.1.20.9548
predicate migration optimizing queries expensive predicates 
proceedings acm sigmod conference management data washington may 
:10.1.1.133.2288
conversion limited entry decision tables optimal computer programs minimum average processing time 
addison wesley 
hellerstein stonebraker :10.1.1.20.9548
predicate migration optimizing queries expensive predicates 
proceedings acm sigmod conference management data washington may 
:10.1.1.133.2288
conversion limited entry decision tables optimal computer programs minimum average processing time 
journal acm 
kemper moerkotte steinbrunn :10.1.1.129.5879
optimizing boolean expressions object bases 
proceedings acm sigmod conference management data washington may 
:10.1.1.133.2288
conversion limited entry decision tables optimal computer programs minimum average processing time 
journal acm 
kemper moerkotte steinbrunn :10.1.1.129.5879
optimizing boolean expressions object bases 
proceedings th vldb conference vancouver august 
kemper moerkotte steinbrunn 
optimizing disjunctive queries expensive predicates 
