text categorization prototypes alexander august basic thought language sense similarity sorting things kinds 
foremost de rijke guidance ort keep going consistent support far reaches expected 
encouraging words sharing knowledge 
van dick de accepting new won friends 
benjamin subset friends including discussion groups 
moving amsterdam 
approach standard field text categorization included numerous experiments basis comparison main reason far better performing algorithm 
knn takes arbitrary input document ranks nearest neighbour training documents similarity score 
adapts category similar document documents denotes number included evaluation 
documents category assigned try number ways selecting categories knn 
perfect research shown knn best performing system diverse sets :10.1.1.109.2516:10.1.1.104.1209
practice knn compares ranks categorized documents document categorized 
leads mitchell points undesirable amount computational costs 
rocchio reduce demand processing cost implement centroid classifier called rocchio classifier 
focus known information retrieval algorithm developed rocchio early originally optimize queries relevance feedback :10.1.1.21.7950:10.1.1.42.7943
perfect research shown knn best performing system diverse sets :10.1.1.109.2516:10.1.1.104.1209
practice knn compares ranks categorized documents document categorized 
leads mitchell points undesirable amount computational costs 
rocchio reduce demand processing cost implement centroid classifier called rocchio classifier 
focus known information retrieval algorithm developed rocchio early originally optimize queries relevance feedback :10.1.1.21.7950:10.1.1.42.7943
approach centroid document category ranks categories similarity scores compares feature category centroid document features test document 
processing costs reduced potentially lower knn 
higher number documents categorized bigger di erence processing costs 
defined point system masses coordinates weighted mean coordinates dimension point system weights determined density function system 
approach centroid document category ranks categories similarity scores compares feature category centroid document features test document 
processing costs reduced potentially lower knn 
higher number documents categorized bigger di erence processing costs 
defined point system masses coordinates weighted mean coordinates dimension point system weights determined density function system 
problems intentions centroid prototype category performance quite poor see :10.1.1.109.2516
proposal discussion far indicate basic dichotomy text categorization having knn low processing costs rocchio 
try reconcile forces developing centroid prefer call prototype algorithms look similarities dissimilarities 
basic idea measure distance objects closeness 
general algorithms consist phases 
final chapter thesis devoted discussion thoughts develop systems onwards 
chapter known methods text categorization chapter briefly describe known methods text categorization nearest neighbour classification rocchio 
methods compare proposals 
nearest neighbour classification nearest neighbour knn algorithm known approach text categorization 
early stages tc research best performing methods field :10.1.1.109.2516
basic idea knn approach tc easily explained calculate similarity score new document categorized documents data representation model 
thesis adopt called vector space model document words occurring represented point dimensional term space 
document represented vector weighted word counts weights relative occurrences words documents 
documents categorized ranked descending document highest similarity score document classified 
computational concerns shortly outline computational pitfall mentioned approach poses knn approach classifies intersection documents checks weights occurring unclassified document classified documents 
compares test documents documents training set 
bigger training set higher computational cost 
argue detail case 
earlier research shown prototype category remedy cost :10.1.1.21.7950:10.1.1.54.683:10.1.1.48.5566
rocchio considering similarity unclassified document docs category natural alternative take single representative document category called prototype compare unclassified document di erent category prototypes 
intuitively bound save computation compared knn approach previous section 
say prototypes chapter discuss best known prototype approaches text categorization rocchio algorithm 
originally rocchio algorithm designed relevance feedback information retrieval :10.1.1.21.7950:10.1.1.54.683
earlier research shown prototype category remedy cost :10.1.1.21.7950:10.1.1.54.683:10.1.1.48.5566
rocchio considering similarity unclassified document docs category natural alternative take single representative document category called prototype compare unclassified document di erent category prototypes 
intuitively bound save computation compared knn approach previous section 
say prototypes chapter discuss best known prototype approaches text categorization rocchio algorithm 
originally rocchio algorithm designed relevance feedback information retrieval :10.1.1.21.7950:10.1.1.54.683
retrieving useful documents user query challenging problem field information retrieval 
optimized retrieval correct documents categorization 
rocchio algorithm adapted information retrieval field text categorization 
basic idea applying rocchio approach text categorization construct prototype vector category 
category prototype vector category representative vector documents assigned particular category 
number different approaches considered optimal prototype vector rocchio prototype suggested 
weight prototype vector computed averaging occurring weights documents category subtracting average occurring weights documents occur category 
result cient method relatively easy implement 
original rocchio algorithm vector space model method relevance feedback algorithm document routing filtering information retrieval consists heuristic components er wide variety possible implementations :10.1.1.21.7950
prototype category calculated weighted di erence sum positive negative training examples 
things formal 
able express formally need notation definition learning rocchio prototype vector represented achieved combining document vector category set documents category calculating score occurring weights dividing number documents category 
subtracting average score weights document vectors category gives prototype vector :10.1.1.21.7950:10.1.1.48.5566
original rocchio algorithm vector space model method relevance feedback algorithm document routing filtering information retrieval consists heuristic components er wide variety possible implementations :10.1.1.21.7950
prototype category calculated weighted di erence sum positive negative training examples 
things formal 
able express formally need notation definition learning rocchio prototype vector represented achieved combining document vector category set documents category calculating score occurring weights dividing number documents category 
subtracting average score weights document vectors category gives prototype vector :10.1.1.21.7950:10.1.1.48.5566
ik ik 
number documents category 
instance prototype vector value set 
parameters adjust relative impact positive negative training examples 
avoid preference larger prototypes implement called cosine similarity documents 
definition cosine similarity similarity score sim vectors ij ik sim ij ik occurring weights vectors compared 
denoted defined ij ik 
sim ij ik unclassified document vector denoted ij prototype vector denoted ik turn attention look similarities normalize vector length 
cosine similarity cos vectors ij ik defined cos ij ik ij ik ij ik ij ik ij ik similarity score called cosine similarity score reduces relative impact similarity score larger prototypes :10.1.1.27.7690:10.1.1.27.7690:10.1.1.115.8143
combination steps just explained generating prototypes computing similarity prototypes rocchio approach flexible workable algorithm 
document categorized calculation document necessary comparison prototype vectors available categories 
assigning new document particular category prototype category recalculated 
advantages rocchio approach little need preprocessing data 
combination steps just explained generating prototypes computing similarity prototypes rocchio approach flexible workable algorithm 
document categorized calculation document necessary comparison prototype vectors available categories 
assigning new document particular category prototype category recalculated 
advantages rocchio approach little need preprocessing data 
computationally attractive compared approaches :10.1.1.42.7943
knn vs rocchio reasons text categorization approaches prototypes computationally attractive knn algorithm easily imagined working large set documents 
comparing new document document categorized compare new documents median document category 
database documents normally contain documents amount documents increase demand processing knn increase proportionally 
leads extremely expensive computation 
comparing new document document categorized compare new documents median document category 
database documents normally contain documents amount documents increase demand processing knn increase proportionally 
leads extremely expensive computation 
reasonable small sets data noticeable di erence knn rocchio respect average computation time 
modest computational demands rocchio algorithm come price rocchio approach perform knn approach see chapter :10.1.1.109.2516
relatively poor categorization performance attractiveness computation explore remainder thesis 
aim remainder thesis try combine computational behavior intuitive character prototype approaches text categorization rocchio algorithm categorization results methods knn algorithm 
step road take closer look prototypes look alternative methods comparing unclassified documents prototypes 
chapter prototypes dissimilarities chapter describe proposal text categorization ort combine prototype ideas encountered rocchio approach novel ways prototypes classification process dissimilarity similarity 
factors pieces system just basic algorithm 
empirical testing compare di erent systems tune system parameters modify performance 
show sort inputs system handles sort inputs system handles poorly 
chapter outline testing methodology 
able test evaluate results need utilize set texts desired format modified format divided set training systems set testing systems performance contains documents reliable assumption judgement performance system categorized relatively enable earlier results basis judging correctness tests contextual information meaning easily extract useful information behaviour system reuters collection evaluation test di erent categorizing approaches widely acknowledged distributed corpus originally information retrieval purposes :10.1.1.104.1209
reuters collection 
years collection modified fit text categorization purposes 
documents reuters collection appeared reuters newswire stories 
documents indexed manually available information retrieval research purposes 
occurrences er quarter incr table example dictionary 
stage dictionary means calculating relative importance occurrence words documents 
dictionary created individual document vectors generated 
vector space model represent documents vectors weights dimensional space fact constitutes data representation model 
method needs little preprocessing data benefit going process large amounts data definition term frequency denoted tf ij number times term occurs document inverse document frequency relative occurrence term training set denoted idf log number documents training set number documents training set term occurs :10.1.1.54.683
determine weight ij term document ij tf ij idf vector document consists set weight earlier research shows sophisticated methods representing data intuitively appealing performed worse especially noun phrases words 
result weighting scheme term important occurs frequently document lower frequency documents 
hand occurs frequently documents weight low due low inverse document frequency 
inverse document frequency useful feature helps lower relative importance word word common term training documents 
seen systems categorize document category 
performance measures conclude chapter discuss performance measures experiments 
computing similarities dissimilarities need method measuring correctness findings 
primary goal find categories originally assigned test documents include categories assigned test documents originally 
able reliably measure performance di erent systems widely accepted methods measuring precision recall score explained shortly :10.1.1.109.2516
document look categories assign called category ranking 
classification algorithms returns test documents test set ranked list categories recall precision computed threshold ranked list 
classify categories threshold ways 
binary classifiers ways contingency table category evaluate assignments 
score indicates lot correct categories picked 
indicates examine recall somewhat misleading 
recall precision scores usually exhibit trade classifier adjusting parameter internally 
find score gives score precision recall score 
interpolated break point average precision recall score reflect true behaviour classifier :10.1.1.109.2516
precision recall score far apart example think reasonable performance system 
find single numbered measure accurately reflects think correct turn van rijsbergen score :10.1.1.109.2516
score recall precision example give score reasonable performance indicator system picked categories 
illustration note recall score basically meant sacrifice precision extent getting score get score 
recall precision scores usually exhibit trade classifier adjusting parameter internally 
find score gives score precision recall score 
interpolated break point average precision recall score reflect true behaviour classifier :10.1.1.109.2516
precision recall score far apart example think reasonable performance system 
find single numbered measure accurately reflects think correct turn van rijsbergen score :10.1.1.109.2516
score recall precision example give score reasonable performance indicator system picked categories 
illustration note recall score basically meant sacrifice precision extent getting score get score 
chapter results chapter experimental results 
start setting baseline scores looking knn rocchio classifiers 
number cat flat cat knn graph cats 
percent table normalized rocchio similarities 
normalized set evaluated 
mentioned slight improvement performance categories holding documents 
note earlier research indicated comparison smaller sets di erent kind document representation better performance percent rec prec score table normalized rocchio similarities :10.1.1.21.7950
large set 
large category mean documents 
reservation lies incomparable results test showed computes accuracy computing precision recall 
computing accuracy pitfalls sets number categories large number documents category low 
give impression preferring categories fewer weights categories 
probably due nature normalization documents unit length 
outperforms cosine normalized version ref 

looking cosine normalized sets noticeable version outperformed :10.1.1.27.7690
mentioned marginal score 
see sets cosine normalized far marginally calculated 
checking categories top score ref 
including averaged categories dissimilarity scores 
develop environment choose system basis corpus ahead 
implies knn small sets larger set naturally choose assign categories mean prototypical vector dissimilarity scores 
wise include tests di erent methods selecting weights vector 
strict include weights low value probably save computation 
di erent methods currently available today :10.1.1.11.9565:10.1.1.41.8517:10.1.1.104.1209
re consideration development current weight encoding system incorporated suggested solutions current problems 
problems contextual terms equal word stems di erent meanings di erent contexts problems synonyms 
think huge potential looking able find reminder increase score correct categories 
experiments reuters collection 
technical report dept cs university minnesota 
hand 
discrimination classification 
wiley series probability mathematical statistics 
de mitchell :10.1.1.54.683
improving learning accuracy information filtering 
technical report carnegie mellon university school computer science pittsburg usa delft university technology faculty technical informatics delft netherlands 
thorsten joachims :10.1.1.21.7950
probabilistic analysis rocchio algorithm tfidf text categorization 
wiley series probability mathematical statistics 
de mitchell :10.1.1.54.683
improving learning accuracy information filtering 
technical report carnegie mellon university school computer science pittsburg usa delft university technology faculty technical informatics delft netherlands 
thorsten joachims :10.1.1.21.7950
probabilistic analysis rocchio algorithm tfidf text categorization 
logic 
ho lam 
generalized set automatic text categorization 
technical report delle italy 
sebastiani 
tutorial automated text categorization 
technical report instituto di dell informazione delle pisa italy 
karypis shankar :10.1.1.42.7943
weight adjustment schemes centroid classifier 
technical report dept computer science university minnesota 
buckley singhal mitra 
learning routing queries query zone 
adaptive approach text categorization understanding 
technical report dept computer information science linkoping 
yiming yang 
expert network ective cient learning human decisions text categorization retrieval 
yiming yang :10.1.1.109.2516
evaluation statistical approaches text categorization 
logic 
yiming yang xin liu 
re examination text categorization methods 
