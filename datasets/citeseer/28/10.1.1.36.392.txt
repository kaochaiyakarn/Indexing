annals mathematics artificial intelligence 
tabling non monotonic programming swift department computer science suny stony brook stony brook ny mail cs edu non monotonic extensions add power logic programs 
main logic programming language prolog widely recognized inadequate implement extensions due weak termination complexity properties 
extending prolog sld resolution tabling prolog improved ways 
tabling allow logic programming system compute founded semantics programs bounded term depth polynomial data complexity 
exploiting properties tabling allows variety nonmonotonic extensions efficiently implemented solve practical problems 
