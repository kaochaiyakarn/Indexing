mobile ambients luca cardelli digital equipment systems research center andrew gordon university cambridge computer laboratory introduce calculus describing movement processes devices including movement administrative domains 
keywords agents process calculi mobility wide area computation 
distinct areas mobility mobile computing concerning computation carried mobile devices laptops personal digital assistants mobile computation concerning mobile code moves devices applets agents 
aim describe aspects mobility single framework encompasses mobile agents ambients agents interact mobility ambients 
inspiration comes potential mobile computation world wide web 
geographic distribution web naturally calls mobility computation way flexibly managing latency bandwidth 
hennessy propose versions calculus extended primitives allow computations migrate named locations 
emphasis developing type systems mobile computation existing type systems calculus 
hennessy type system regulates usage channel names permissions represented types 
type system differentiates local remote channels sake efficient implementation communication 
join calculus reformulation calculus explicit notion places interaction greatly helps building distributed implementations channel mechanisms :10.1.1.53.1757
distributed join calculus adds notion named locations essentially aims notion distributed failure 
locations distributed join calculus form tree subtrees migrate part tree 
significant difference ambients movement may happen directly active location known location 
thursday february pm formalization linda process calculi techniques 
encoding calculus benchmarks expressiveness ability encode asynchronous calculus 
thursday february pm encoding moderately easy primitives 
discuss represent named channels key idea full translation 
channel simply represented ambient name channel name ambient 
similar spirit join calculus channels rooted location :10.1.1.53.1757
communication channel represented local communication inside ambient 
basic technique variation objective moves 
conventional name io transport input output requests channel 
channel opens requests lets interact 
proc 

lecture notes computer science springer verlag 

reflexive join calculus :10.1.1.53.1757
proc 
rd annual acm symposium principles programming languages 


