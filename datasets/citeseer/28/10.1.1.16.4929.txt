dynamic replica selection algorithm tolerating timing faults krishnamurthy william sanders michel center reliable high performance computing university illinois urbana champaign urbana illinois mail uiuc edu server replication commonly improve fault tolerance response time distributed services 
important problem executing time critical applications replicated environment preventing timing failures dynamically selecting replicas satisfy client timing requirement quality service degraded due replica failures excess load server 
describe approach solve problem aqua corba middleware transparently replicates objects local area network 
approach estimates replica response time distribution performance measurements regularly broadcast replica 
online model uses measurements predict probability replica prevent timing failure client 
selection algorithm uses prediction choose subset replicas meet client timing constraints probability requested client 
replica selection algorithms formulated objective choosing replica deliver lowest possible response time 
algorithms target clients stateless distributed services world wide web servers maintain records ongoing client transactions 
algorithms choose nearest replica distance metric choose replica best historical average response time 
predict time propagate message different replicas regression analysis previously collected data pick replica lowest propagation time 
actively monitor replica load network delays estimate response times replicas select replica smallest estimated response time :10.1.1.56.1422
efforts assign single replica client consider case replica may fail servicing request 
responsibility client request failure receive response 
simple retransmission strategy may suitable clients specific time constraints 
contrast targets clients specific response time requirements require met dependability manager aqua gateway aqua client request path perceived client server aqua server aqua gateway protocol handlers protocol handlers timing passive passive active passive active fault ensemble ensemble ensemble local area network communication active handler aqua gateway intercepted path timing fault 
modifying information repository classify performance data method interfaces 
selection algorithm performance information appropriate method invoked 
second system middleware knowledge application request semantics selection algorithm extended distinguish requests server arguments passed clients 
infrastructure currently support feature 
extended active probes replica performance information obsolete :10.1.1.56.1422
acknowledgments anonymous reviewers careful feedback helped improve 
rest aqua team contributions aqua project 
grateful jenny helping improve readability 
birman 
ieee symposium reliable distributed systems pages october 
moore 
scalable networked information processing environment 
netlib cs edu people papers html 
:10.1.1.56.1422
novel server selection technique improving response time replicated service 
proceedings march 
schiper 
replicating corba objects marriage active passive replication 
