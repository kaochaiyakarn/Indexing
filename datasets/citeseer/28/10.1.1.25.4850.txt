standardizing agent communication yannis labrou department computer science electrical engineering university maryland baltimore county baltimore maryland umbc edu 
agent communication language acl collection speech act message types agreed semantics facilitate knowledge information exchange software agents 
knowledge query manipulation language kqml fipa acl acl development systems communicating agents simultaneously subject intensive standardization efforts 
standardization goal usability 
result initial focus acl establishing semantics acl variety usability related questions entered picture standardizing communication agents 
article questions addresses alongside historical evolution acl semantics results standardization 
period term agents came usage refer software design paradigm ai artifacts 
result integrating implementing kqml primarily object oriented code major issue 
changes resulted shift focus content knowledge agent virtual knowledge base kse vocabulary represents attitudes content conveyed old view inevitably emphasizes proper semantics communication primitives act communication considerations transport concurrency networking architectural assumptions 
older earlier framework emphasis semantics acl message types semantics properly define attitudes suggested message types acl exactly language attitudes content 
trend manifested majority earlier acls :10.1.1.29.6467
framework emphasizes software development focuses attitudes communicated pieces software agents populate network new focus syntax encoding pragmatic considerations software integration 
discussing standardization agent communication languages trace historic origins kqml believe kqml context knowledge sharing effort help reader better understand evolution acl ideas concepts 
briefly kqml introduce concepts necessary discussing agent communication languages semantics kqml single important issue early debates acls include brief overview arguments 
second acl discuss fipa acl 
design criteria kqml produce language support wide variety interesting agent architectures 
kqml introduces small number performatives agents describe capabilities introduces special class agents called communication facilitators ordinary kqml speaking agents capable processing aforementioned set performatives 
facilitator agent performs various useful communication services maintaining registry service names forwarding messages named services routing messages con tent matchmaking information providers clients providing mediation translation services 
semantics years kqml existed informal semantic description 
critics identified shortcomings :10.1.1.29.6467
past years researchers put forth efforts provide formal semantics 
works labrou finin provide semantics kqml terms preconditions postconditions completion conditions performative 
assuming sender receiver preconditions indicate necessary states agent send performative pre receiver accept successfully process pre 
preconditions hold response performatives error sorry 
semantic models mental attitudes bel want know int provided language describe agents states severely restricts ways mental attitudes combined compose agents states 
shows example semantics sender receiver framework 
semantics tell suggests agent offer unsolicited information agent 
easily introducing performative call proactive tell semantic description tell pre bel empty pre 
semantic approach builds earlier defining rational agency :10.1.1.29.6467
suggested approach views language reserved message types attempts communication 
attempts involve rational agents temporarily form teams engage operative communication 
approach strongly links acl semantics agent theory assumed agents involved acl exchange 
tell states believes content true 
