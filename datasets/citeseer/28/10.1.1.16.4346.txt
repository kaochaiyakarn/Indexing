optimal dynamic interval management external memory extended lars arge jeffrey scott vitter department computer science duke university durham nc space optimal external memory data structure answering stabbing queries set dynamically maintained intervals 
data structure settles open problem databases algorithms providing optimal external memory solution dynamic interval management problem special case dimensional range searching central problem object oriented temporal databases constraint logic programming 
data structure simultaneously uses optimal linear space blocks disk space achieves optimal log query bound log update bound block size number elements answer query 
structure optimal external data structure dimensional range searching problem worst case opposed amortized update bounds 
part data structure uses novel balancing technique efficient worst case manipulation balanced trees independent interest 


years effort developing efficient external memory data structures range searching fundamental primitive large scale applications including spatial databases geographic information systems gis graphics supported part army research office daah 
part done brics department computer science university aarhus denmark supported part esprit long term research programme eu project number 
email large cs duke edu supported part national science foundation ccr army research office daah daah 
email cs duke edu indexing object oriented temporal databases constraint logic programming :10.1.1.41.7218:10.1.1.156.2115
amount data manipulated applications large fit main memory reside disk cases input output communication bottleneck 
nasa eos project gis system example application expected manipulate thousands terabytes millions gigabytes data 
effect bottleneck getting pronounced internal computation gets faster especially parallel computing gains popularity 
currently technological advances increasing cpu speeds annual rate disk transfer rates increasing 
amount data manipulated applications large fit main memory reside disk cases input output communication bottleneck 
nasa eos project gis system example application expected manipulate thousands terabytes millions gigabytes data 
effect bottleneck getting pronounced internal computation gets faster especially parallel computing gains popularity 
currently technological advances increasing cpu speeds annual rate disk transfer rates increasing 
consider special case external dimensional range searching called dynamic interval management highlighted important special cases external range searching applications object oriented databases constraint logic programming :10.1.1.35.1453:10.1.1.41.7218:10.1.1.156.2115
problem developing space time optimal external data structure problem mentioned major theoretical open problems area called elegant open question :10.1.1.35.1453:10.1.1.35.1453:10.1.1.156.2115:10.1.1.156.2115
develop optimal structure 

memory model previous results working standard model external memory logical disk 
nasa eos project gis system example application expected manipulate thousands terabytes millions gigabytes data 
effect bottleneck getting pronounced internal computation gets faster especially parallel computing gains popularity 
currently technological advances increasing cpu speeds annual rate disk transfer rates increasing 
consider special case external dimensional range searching called dynamic interval management highlighted important special cases external range searching applications object oriented databases constraint logic programming :10.1.1.35.1453:10.1.1.41.7218:10.1.1.156.2115
problem developing space time optimal external data structure problem mentioned major theoretical open problems area called elegant open question :10.1.1.35.1453:10.1.1.35.1453:10.1.1.156.2115:10.1.1.156.2115
develop optimal structure 

memory model previous results working standard model external memory logical disk 
assume operation external memory access transmits page units data 
elegant data structures range tree priority search tree segment tree interval tree proposed main memory dimensional range searching special cases see detailed survey 
structures efficient mapped external memory 
practical need support led development large number external data structures theoretical worst case update query bounds average case behavior common problems 
methods include grid file various quadtrees orders space filling curves hb trees cell trees various trees 
worst case performance data structures worse optimal bounds achievable dynamic external dimensional range searching trees see complete field :10.1.1.156.2115
progress construction external dimensional range searching structures provably performance 
dynamic interval management problem considered intervals inserted deleted query interval current intervals intersect query interval reported :10.1.1.156.2115
problem crucial indexing constraints constraint databases temporal databases :10.1.1.156.2115
key component external dynamic interval management answering stabbing queries 
practical need support led development large number external data structures theoretical worst case update query bounds average case behavior common problems 
methods include grid file various quadtrees orders space filling curves hb trees cell trees various trees 
worst case performance data structures worse optimal bounds achievable dynamic external dimensional range searching trees see complete field :10.1.1.156.2115
progress construction external dimensional range searching structures provably performance 
dynamic interval management problem considered intervals inserted deleted query interval current intervals intersect query interval reported :10.1.1.156.2115
problem crucial indexing constraints constraint databases temporal databases :10.1.1.156.2115
key component external dynamic interval management answering stabbing queries 
set intervals answer stabbing query point report intervals contain regarding interval point plane stabbing query reduces special case sided dimensional range searching called diagonal corner queries corner line shown 
metablock tree developed answers diagonal corner queries optimal log os optimal blocks external memory denotes number points reported :10.1.1.156.2115
methods include grid file various quadtrees orders space filling curves hb trees cell trees various trees 
worst case performance data structures worse optimal bounds achievable dynamic external dimensional range searching trees see complete field :10.1.1.156.2115
progress construction external dimensional range searching structures provably performance 
dynamic interval management problem considered intervals inserted deleted query interval current intervals intersect query interval reported :10.1.1.156.2115
problem crucial indexing constraints constraint databases temporal databases :10.1.1.156.2115
key component external dynamic interval management answering stabbing queries 
set intervals answer stabbing query point report intervals contain regarding interval point plane stabbing query reduces special case sided dimensional range searching called diagonal corner queries corner line shown 
metablock tree developed answers diagonal corner queries optimal log os optimal blocks external memory denotes number points reported :10.1.1.156.2115
structure fairly involved supports insertions deletions log log os amortized 
dynamic interval management problem considered intervals inserted deleted query interval current intervals intersect query interval reported :10.1.1.156.2115
problem crucial indexing constraints constraint databases temporal databases :10.1.1.156.2115
key component external dynamic interval management answering stabbing queries 
set intervals answer stabbing query point report intervals contain regarding interval point plane stabbing query reduces special case sided dimensional range searching called diagonal corner queries corner line shown 
metablock tree developed answers diagonal corner queries optimal log os optimal blocks external memory denotes number points reported :10.1.1.156.2115
structure fairly involved supports insertions deletions log log os amortized 
mentioned number elegant internal memory solutions exist dimensional range searching 
priority search tree example answer slightly general queries diagonal corner queries sided range queries optimal query update time optimal space 
number attempts structure including non optimal :10.1.1.35.1453
metablock tree developed answers diagonal corner queries optimal log os optimal blocks external memory denotes number points reported :10.1.1.156.2115
structure fairly involved supports insertions deletions log log os amortized 
mentioned number elegant internal memory solutions exist dimensional range searching 
priority search tree example answer slightly general queries diagonal corner queries sided range queries optimal query update time optimal space 
number attempts structure including non optimal :10.1.1.35.1453
structure uses optimal space answers queries log os 
structure uses optimal space answers queries log os 
papers number non optimal dynamic versions structures developed 
technique called path caching transforming efficient internal memory data structure efficient developed :10.1.1.35.1453
number attempts structure including non optimal :10.1.1.35.1453
structure uses optimal space answers queries log os 
structure uses optimal space answers queries log os 
papers number non optimal dynamic versions structures developed 
technique called path caching transforming efficient internal memory data structure efficient developed :10.1.1.35.1453
technique priority search tree results structure answer sided queries slightly general diagonal corner queries slightly general sided queries see 
structure answers queries optimal log os supports updates amortized log os uses slightly non optimal log log space 
various external data structures answering sided queries developed :10.1.1.35.1453:10.1.1.156.2115
attempt designing structure answering sided queries dynamic structure called range tree developed 
papers number non optimal dynamic versions structures developed 
technique called path caching transforming efficient internal memory data structure efficient developed :10.1.1.35.1453
technique priority search tree results structure answer sided queries slightly general diagonal corner queries slightly general sided queries see 
structure answers queries optimal log os supports updates amortized log os uses slightly non optimal log log space 
various external data structures answering sided queries developed :10.1.1.35.1453:10.1.1.156.2115
attempt designing structure answering sided queries dynamic structure called range tree developed 
structure uses linear space answers queries log il os supports updates log log os amortized 
symbol il denotes iterated log function number times apply log get 
mentioned range tree extended answer general dimensional queries static structure dimensional queries developed 
structure uses linear space answers queries log il os supports updates log log os amortized 
symbol il denotes iterated log function number times apply log get 
mentioned range tree extended answer general dimensional queries static structure dimensional queries developed 
segment tree solve stabbing query problem internal memory uses linear space 
attempts space blocks query bound update bound priority search tree log xp tree log metablock tree log log log amortized inserts range tree log il log log amortized path caching log log log log amortized result log log :10.1.1.35.1453:10.1.1.156.2115
comparison data structure stabbing queries previous data structures 
structure log blocks external memory 
best static answers queries optimal log os :10.1.1.35.1453

segment tree solve stabbing query problem internal memory uses linear space 
attempts space blocks query bound update bound priority search tree log xp tree log metablock tree log log log amortized inserts range tree log il log log amortized path caching log log log log amortized result log log :10.1.1.35.1453:10.1.1.156.2115
comparison data structure stabbing queries previous data structures 
structure log blocks external memory 
best static answers queries optimal log os :10.1.1.35.1453

overview results main results optimal data structure stabbing query problem 
mentioned result leads known optimal solution interval management problem settles open problem highlighted :10.1.1.35.1453
data structure uses blocks external memory maintain set intervals insertions deletions performed log os stabbing queries answered log os 
structure log blocks external memory 
best static answers queries optimal log os :10.1.1.35.1453

overview results main results optimal data structure stabbing query problem 
mentioned result leads known optimal solution interval management problem settles open problem highlighted :10.1.1.35.1453
data structure uses blocks external memory maintain set intervals insertions deletions performed log os stabbing queries answered log os 
compare result previous solutions 
note previous non optimal solutions problem update bounds data structure worst case 
previously external data structure worst case update bounds known dimensional range searching problem 

external memory interval tree fixed endpoint set external memory interval tree kinds secondary structures tree corner structure 
trees generally trees search tree structures suitable external memory lemma set elements stored tree structure blocks external memory updates queries performed log os 
tree sorted elements built os smallest largest elements reported os 
corner structure static external stabbing query data structure efficient number segments stored shown structure dynamic amortized update bounds basically loading structure internal memory rebuilding outputting updates done :10.1.1.156.2115
assumption internal memory capable holding items 
full show rebuild structure incrementally updates way remove assumption size internal memory update bound worst case 
lemma set segments represented blocks external memory stabbing query answered os update performed os 
structure constructed os 
constraint query languages 
proc 
acm symp 
principles database systems pages 
kanellakis ramaswamy vengroff vitter :10.1.1.156.2115
indexing data models constraints classes 
proc 
acm symp 
principles database systems 
guest editor ieee computer 
ramaswamy kanellakis 
indexing class division 
series academic press new york 
ramaswamy subramanian :10.1.1.35.1453
path caching technique optimal external searching 
proc 
acm symp 
principles database systems 
