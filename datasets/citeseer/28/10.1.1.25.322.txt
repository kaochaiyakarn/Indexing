handbook software engineering knowledge engineering vol 
world scientific publishing agent oriented software engineering michael wooldridge dept computer science university liverpool liverpool zf uk paolo ciancarini dipartimento di scienze dell informazione university bologna bologna italy software knowledge engineers continually strive develop tools techniques manage complexity inherent systems build 
article argue intelligent agents agent systems offer novel opportunities developing effective tools techniques 
discussion classic subject software complex introduce intelligent agents software structures capable making rational decisions 
rational decision makers suited construction certain types software mainstream software engineering little success 
go examine number prototype techniques proposed engineering agent systems including formal specification verification methods agent systems techniques implementing agent specifications 
go examine number prototype techniques proposed engineering agent systems including formal specification verification methods agent systems techniques implementing agent specifications 
keywords autonomous agents multi agent systems 

past decades software engineers derived progressively better understanding characteristics complexity software 
widely recognised interaction probably important single characteristic complex software see :10.1.1.85.2760
software architectures contain network aware dynamically interacting components thread control engaging complex coordination protocols get offer plethora services components typically orders magnitude complex correctly efficiently engineer simply compute function input single thread control 
unfortunately turns real world applications precisely characteristics 
consequence major research topic computer science past decades development tools techniques model understand implement systems interaction norm 
advent global computing platforms internet world wide web increased requirement designing systems including complex interactions 
section describe agent oriented specification techniques focussing particular requirements agent oriented specification framework 
section discuss specifications implemented directly executing automatically executable systems specifications 
section discusses implemented systems may verified determine satisfy specifications 
section conclude comments issues agent oriented software engineering 
note sections include material fuller examination particular specification implementation verification agent systems may :10.1.1.25.322

agent systems agent system mean key abstraction agent 
agent mean abstraction enjoys properties pp autonomy agents encapsulate state accessible agents decisions state direct intervention humans reactivity agents situated environment may physical world user graphical user interface collection agents internet combined able perceive environment potentially imperfect sensors able respond timely fashion changes occur pro activeness agents simply act response environment able exhibit goal directed behaviour initiative social ability agents interact agents possibly humans kind agent communication language typically ability engage social activities cooperative problem solving negotiation order achieve goals 
multi agent system system composed number agents typically interact order satisfy goals 
adept system current example agent business process management system 
adept business organisation modelled society negotiating service providing agents 
adept currently tested british telecom bt business process involves departments different tasks 
industrial systems management 
largest probably best known european multi agent system development project date archon :10.1.1.119.2204
project developed deployed multi agent technology industrial domains 
significant domains power distribution system installed currently operational northern spain 
agents archon main parts domain component realises domain specific functionality agent wrapper component provides agent functionality enabling system plan actions represent communicate agents 
archon technology subsequently deployed domains including particle accelerator control 

specification section consider problem specifying agent system 
requirements agent specification framework 
sort properties capable representing 
predominant approach specifying agents involved treating intentional systems may understood attributing mental states beliefs desires intentions see detailed justification idea :10.1.1.119.2204
idea number approaches formally specifying agents developed capable representing aspects agent system beliefs agents information environment may incomplete incorrect goals agents try achieve actions agents perform effects actions ongoing interaction agents agents interact environment time 
term agent theory refer theory explains aspects agency interact generate behaviour agent 
successful approach formal agent theory appears temporal modal logic space restrictions prevent detailed technical discussion logics see extensive :10.1.1.119.2204
best known logical frameworks cohen levesque theory intention rao georgeff belief model :10.1.1.37.7970
sort properties capable representing 
predominant approach specifying agents involved treating intentional systems may understood attributing mental states beliefs desires intentions see detailed justification idea :10.1.1.119.2204
idea number approaches formally specifying agents developed capable representing aspects agent system beliefs agents information environment may incomplete incorrect goals agents try achieve actions agents perform effects actions ongoing interaction agents agents interact environment time 
term agent theory refer theory explains aspects agency interact generate behaviour agent 
successful approach formal agent theory appears temporal modal logic space restrictions prevent detailed technical discussion logics see extensive :10.1.1.119.2204
best known logical frameworks cohen levesque theory intention rao georgeff belief model :10.1.1.37.7970
cohen levesque model takes primitive just attitudes beliefs goals 
attitudes particular notion intention built 
contrast rao georgeff take intentions primitives addition beliefs goals 
predominant approach specifying agents involved treating intentional systems may understood attributing mental states beliefs desires intentions see detailed justification idea :10.1.1.119.2204
idea number approaches formally specifying agents developed capable representing aspects agent system beliefs agents information environment may incomplete incorrect goals agents try achieve actions agents perform effects actions ongoing interaction agents agents interact environment time 
term agent theory refer theory explains aspects agency interact generate behaviour agent 
successful approach formal agent theory appears temporal modal logic space restrictions prevent detailed technical discussion logics see extensive :10.1.1.119.2204
best known logical frameworks cohen levesque theory intention rao georgeff belief model :10.1.1.37.7970
cohen levesque model takes primitive just attitudes beliefs goals 
attitudes particular notion intention built 
contrast rao georgeff take intentions primitives addition beliefs goals 
key technical problem faced agent theorists developing formal model gives account interrelationships various attitudes comprise agents internal state 
language agents programmed giving temporal logic specification behaviour intended exhibit specification directly executed generate agent behaviour 
models temporal logic concurrent metatem agents specified linear discrete sequences states executing concurrent metatem agent specification process constructing sequence states 
state sequences viewed histories traced programs execute temporal logic concurrent metatem computational interpretation actual execution algorithm described 
note executing concurrent metatem agent specifications possible primarily models concurrent metatem temporal logic comparatively simple obvious intuitive computational interpretation 
agent specification languages general bdi formalisms rao georgeff considerably complex logics :10.1.1.37.7970
particular usually semantic framework known possible worlds 
technical details somewhat involved purposes article main point general possible worlds semantics computational interpretation way concurrent metatem semantics 
clear executing logic semantics mean 
response number researchers attempted develop executable agent specification languages simplified semantic basis computational interpretation 
particular usually semantic framework known possible worlds 
technical details somewhat involved purposes article main point general possible worlds semantics computational interpretation way concurrent metatem semantics 
clear executing logic semantics mean 
response number researchers attempted develop executable agent specification languages simplified semantic basis computational interpretation 
example rao agentspeak language essentially bdi system simple computational semantics :10.1.1.5.1612

compiling agent specifications alternative direct execution compilation 
scheme take specification transform concrete computational model automatic synthesis process 
main perceived advantages compilation direct execution run time efficiency 
reasoning done line compile time execution compiled system done little run time symbolic reasoning 
compilation approaches usually depend close relationship models temporal modal logic typically labeled graphs kind automata finite state machines 
example pnueli reactive systems branching temporal logic specifications 
similar techniques develop concurrent system skeletons temporal logic specifications 
best known example approach agent development situated automata paradigm rosenschein kaelbling :10.1.1.48.1685
epistemic logic logic knowledge specify perception component intelligent agent systems 
technique constructive proof directly automata specifications 
general approach automatic synthesis theoretically appealing limited number important respects 
agent specification language expressive offline reasoning expensive carry 
axiomatization systematically derive theory program program text 
specification program theory encoded temporal logic handbook software engineering knowledge engineering verification proof problem temporal logic 
comparatively little carried agent systems community axiomatizing multi agent environments 
shall review just approach 
axiomatic approach verification multi agent systems proposed :10.1.1.34.6293
essentially idea temporal belief logic axiomatize properties multi agent programming languages 
axiomatization program theory representing properties system systematically derived way indicated 
temporal belief logic reasons 
temporal component required observed need capture ongoing behaviour multi agent system 
temporal component required observed need capture ongoing behaviour multi agent system 
belief component agents wish verify symbolic ai systems right 
agent symbolic reasoning system includes representation environment desired behaviour 
belief component logic allows capture symbolic representations agent 
multi agent programming languages axiomatized temporal belief logic shoham agent fisher concurrent metatem see :10.1.1.37.7970
note approach relies operation agents sufficiently simple properties axiomatized logic 
works shoham agent fisher concurrent metatem largely languages simple semantics closely related rule systems turn simple logical semantics 
complex agents axiomatization straightforward 
capturing semantics concurrent execution agents easy course area ongoing research computer science generally 
