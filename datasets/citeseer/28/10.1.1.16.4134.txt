survey agent oriented software engineering idi ntnu norwegian university science technology may agent oriented software engineering contributions field software engineering 
benefits compared existing development approaches particular ability agents represent high level abstractions active entities software system 
gives overview research industrial applications general high level methodologies specific design methodologies industry strength software engineering 
keywords intelligent agents software engineering uml design patterns components agent oriented software engineering described new paradigm research field software engineering 
order new paradigm software industry robust easy methodologies tools developed 
explain agent agent called software agent intelligent agent piece autonomous software words intelligent agent describe characteristic features 
terminology relatively new research field agent software engineering currently set closely related terms research papers try clarify explain terms relations 
agent oriented programming aop seen improvement extension objectoriented programming 
word programming attached means concepts close programming language implementation level 
term agent oriented programming introduced shoham 
ntnu may www org agent oriented development extension object oriented development :10.1.1.10.2242
word development interpreted programming hand frequently interpreted include full development process covers requirement specification design addition programming 
software engineering agents agentbased software engineering multi agent systems engineering mase agent oriented software engineering aose semantically equivalent terms mase refers particular methodology aose widely term :10.1.1.21.1414:10.1.1.21.626
difference aose aose covers issues re maintenance agent system addition development system 
safe side omit term easily pointed earlier due different interpretations 
word programming attached means concepts close programming language implementation level 
term agent oriented programming introduced shoham 
ntnu may www org agent oriented development extension object oriented development :10.1.1.10.2242
word development interpreted programming hand frequently interpreted include full development process covers requirement specification design addition programming 
software engineering agents agentbased software engineering multi agent systems engineering mase agent oriented software engineering aose semantically equivalent terms mase refers particular methodology aose widely term :10.1.1.21.1414:10.1.1.21.626
difference aose aose covers issues re maintenance agent system addition development system 
safe side omit term easily pointed earlier due different interpretations 
term agent computing applied describe issues related agent oriented software engineering covers issues regarding agents compute :10.1.1.63.7631
scope limitations topical overview advances methodologies development agent systems 
word development interpreted programming hand frequently interpreted include full development process covers requirement specification design addition programming 
software engineering agents agentbased software engineering multi agent systems engineering mase agent oriented software engineering aose semantically equivalent terms mase refers particular methodology aose widely term :10.1.1.21.1414:10.1.1.21.626
difference aose aose covers issues re maintenance agent system addition development system 
safe side omit term easily pointed earlier due different interpretations 
term agent computing applied describe issues related agent oriented software engineering covers issues regarding agents compute :10.1.1.63.7631
scope limitations topical overview advances methodologies development agent systems 
focus general high level methodologies specific design methodologies related software engineering 
means specialized agent methodologies improve coordination cooperation communication artificial intelligence agents agent systems outside scope 
suggested readings give overviews aspects agent research field jennings nwana 
main entity object 
object logical combination data structures corresponding methods functions 
objects successfully abstractions passive entities house real world agents regarded possible successor objects improve abstractions active entities 
agents similar objects support structures representing mental components beliefs commitments 
addition agents support high level interaction agent communication languages agents speech act theory opposed ad hoc messages frequently objects examples languages fipa acl kqml :10.1.1.35.6806
important difference aop objects controlled outside control opposed agents autonomous behavior directly controllable outside blackbox control 
words agents right say agents solve software problems 
new rapidly growing filed danger researchers overly optimistic regarding abilities agent oriented software engineering 
wooldridge jennings discuss potential pitfalls agent oriented software engineering 
political pitfalls occur concept agents sought applied universal solution 
conceptual pitfalls may ntnu may www org occur developer agents software fact multithreaded software 
analysis design pitfalls may occur developer ignores related technology software engineering methodologies 
agent level pitfalls may occur developer tries little artificial intelligence agent system 
society level pitfalls occur developer sees agents applies agents agent system problem aware failing promises closely related field artificial intelligence jennings prominent researcher agent field points failure keeping promises offer media perfectly happen field agent research :10.1.1.63.7631
high level methodologies section describes methodologies provide top iterative approach modeling developing agent systems 
gaia methodology wooldridge jennings kinny gaia methodology agent oriented analysis design :10.1.1.10.2242
gaia general methodology supports micro level agent structure macro level agent society organization structure agent development silver bullet approach requires inter agent relationships organization agent abilities static run time 
motivation gaia existing methodologies fail represent autonomous problem solving nature agents fail model agents ways performing interactions creating organizations 
analysis design pitfalls may occur developer ignores related technology software engineering methodologies 
agent level pitfalls may occur developer tries little artificial intelligence agent system 
society level pitfalls occur developer sees agents applies agents agent system problem aware failing promises closely related field artificial intelligence jennings prominent researcher agent field points failure keeping promises offer media perfectly happen field agent research :10.1.1.63.7631
high level methodologies section describes methodologies provide top iterative approach modeling developing agent systems 
gaia methodology wooldridge jennings kinny gaia methodology agent oriented analysis design :10.1.1.10.2242
gaia general methodology supports micro level agent structure macro level agent society organization structure agent development silver bullet approach requires inter agent relationships organization agent abilities static run time 
motivation gaia existing methodologies fail represent autonomous problem solving nature agents fail model agents ways performing interactions creating organizations 
gaia software designers systematically develop implementation ready design system requirements 
step gaia analysis process find roles system second model interactions roles 
gaia design process step map roles agent types create right number agent instances type 
second step determine services model needed fulfill role agents final step create acquaintance model representation communication agents 
due mentioned restrictions gaia value open unpredictable domain internet applications hand proven approach developing closed domain agent systems 
result domain restrictions gaia method zambonelli jennings proposes extensions improvements purpose supporting development internet applications 
sources discussion micro macro aspects agent modeling include chaib draa multiagent systems engineering methodology wood deloach suggest multiagent systems engineering methodology mase :10.1.1.21.626
mase similar gaia respect generality application domain supported addition mase goes regarding support automatic code creation mase tool 
motivation mase current lack proven methodology industrial strength toolkits creating agent systems 
goal mase lead designer initial system specification implemented agent system 
domain restrictions mase similar gaia addition requires agent interactions multicast 
example agent database information system 
design methods section describes methodologies mainly inspired methodologies standards object oriented software engineering field 
uml universal modeling language uml graphical representation language originally developed standardize design object classes 
greatly extended support designing sequences components fact parts object oriented information system design 
suggest architecture centric design method multi agent systems :10.1.1.120.1954
method standard extensions uml object constraints language ocl supports transformation agent oriented modeling problems object oriented modeling problems 
transformation process relations agents transformed design patterns patterns relations object classes contrast commonly applied relation types object classes inheritance 
result method designers developers able existing uml tools addition knowledge experience developing object oriented systems 
odell parunak bauer suggested representation agent interaction protocols aip 
transformation process relations agents transformed design patterns patterns relations object classes contrast commonly applied relation types object classes inheritance 
result method designers developers able existing uml tools addition knowledge experience developing object oriented systems 
odell parunak bauer suggested representation agent interaction protocols aip 
aip defined patterns representing message communication agents corresponding constraints content messages 
contrast uml architecture odell approach requires changes uml visual language expressed semantics :10.1.1.120.1954
representation requires changes uml ntnu may www org packages templates sequence diagrams collaboration diagrams activity diagrams statecharts 
layer communication protocol type interaction represented reusable manner applying uml packages templates 
second layer represents interactions type agents communicate agents sequence collaboration activity diagrams statecharts 
third layer internal agent processing agent acts represented activity diagrams statecharts 
suggestion uml include richer role specification requires modification uml sequence diagram format 
able represent agents operations interface points uml package definition modified 
agents ability mobile sense move different agent systems autonomously 
order represent uml deployment diagram definition changed 
poggi suggest application agent oriented uml diagrams highest abstraction level agent oriented software engineering agent level :10.1.1.21.1414
similar approach sense required changes uml standard 
ontology diagram model world relations entities uml static class diagram format 
second architecture diagram modeling configuration multi agent system applying uml deployment format 
diagram protocol diagram represent language interaction uml collaboration diagram format 
proc 
agent oriented information systems aois workshop th national conference artificial intelligence aaai 
odell parunak bauer representing agent interaction protocols uml 
international workshop agent oriented software engineering aose 
poggi exploiting uml design multi agent systems :10.1.1.21.1414
proc 
ecoop workshop engineering societies agents world pages 
jennings agent computing promise :10.1.1.63.7631
proc 
international workshop agent oriented software engineering aose 
poggi exploiting uml design multi agent systems :10.1.1.21.1414
proc 
ecoop workshop engineering societies agents world pages 
jennings agent computing promise :10.1.1.63.7631
proc 
th int 
joint conf 
artificial intelligence ijcai pages 
wooldridge jennings intelligent agents theory practice 
knowledge engineering review 
wooldridge jennings software engineering agents pitfalls 
ieee internet computing may june 
cho park architecture centric object oriented design method multi agent systems :10.1.1.120.1954
proc 
fourth international conference multiagent systems icmas 
zambonelli jennings omicini wooldridge coordination internet agents models technologies applications chapter 
springer verlag 
