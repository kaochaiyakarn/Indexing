proc 
vldb multi dimensional regression analysis time series data streams lambda chen dong jiawei han benjamin wah wang university illinois urbana champaign wright state university real time production systems dynamic environments generate tremendous potentially infinite amount stream data volume data huge stored disks scanned multiple times 
perform line multi dimensional analysis data mining data alert people dramatic changes situations initiate timely high quality responses 
challenging task 
investigate methods online multi dimensional regression analysis time series stream data contributions analysis shows small number compressed regression measures complete stream data need registered multi dimensional linear regression analysis facilitate line stream data analysis partially materialized data cube model regression measure tilt time frame time dimension proposed minimize amount data retained memory stored disks exception guided drilling approach developed line multi dimensional regression analysis 
design algorithms proposed efficient analysis time series data streams 
performance study compares proposed algorithms identifies memory time efficient lambda supported part national science foundation university illinois microsoft research 
permission copy fee part material granted provided copies distributed direct commercial advantage vldb copyright notice title publication date appear notice copying permission large data base endowment 
copy republish requires fee special permission endowment 
proceedings th vldb conference hong kong china multi dimensional stream data analysis 
years research development data warehouse olap technology large number data warehouses data cubes successfully constructed deployed applications data cube essential component data warehouse systems extended relational database systems playing increasingly important role data analysis intelligent decision support 
data warehouse olap technology integration consolidation data multidimensional space facilitate powerful fast online data analysis 
data aggregated completely partially multiple dimensions multiple levels stored form relations multi dimensional arrays :10.1.1.50.6608
dimensions data cube categorical data products region time measures numerical data representing various kinds aggregates sum average variance sales profits success olap technology naturally leads possible extension analysis static historical data current dynamically changing data including time series data scientific engineering data data produced dynamic environments power supply network traffic stock exchange tele communication data flow web click streams weather environment monitoring fundamental difference analysis dynamic environment static dynamic relies heavily regression trend analysis simple static aggregates 
current data cube technology computing static summarizing aggregates designed regression trend analysis 
extend data cube technology construct special kind data cubes regression trend analysis performed efficiently multi dimensional space 
task study 
examine special kind dynamic data called stream data time series representative 
stream data generated continuously dynamic environment huge volume infinite flow fast changing behavior 
collected data low level consisting various kinds detailed temporal features 
find interesting unusual patterns essential perform regression analysis certain meaningful abstraction level discover critical changes data drill detailed levels depth analysis needed 
examine example 
example power supply station collects infinite streams power usage data lowest granularity individual user location minute 
large number users realistic analyze fluctuation power usage certain high levels city district hour making timely power supply adjustments handling unusual situations 
conceptually multi dimensional analysis view stream data virtual data cube consisting measure regression set dimensions including time dimension standard dimensions location user category practice impossible materialize data cube materialization requires huge amount data computed stored 
efficient methods developed systematic analysis data 
xi study take example typical scenario study perform efficient effective multi dimensional regression analysis stream data contributions 

study shows linear multiple linear regression analysis small number regression measures complete stream data need 
holds regression time dimension standard dimensions 
takes smaller amount space time handle regression measures multi dimensional space handling stream data preferable construct regression measured cubes computing regression measures 

line stream data analysis space time critical 
order avoid imposing unrealistic demand space time computing fully materialized regression cube suggest compute partially materialized data cube regression measure tilt time frame time dimension 
tilt time frame time cube may contain measures total power usage 
measures analyzed thoroughly include discussion 
registered different levels granularity 
time registered finest granularity distant time registered coarser granularity level coarseness depends application requirements old time point model sufficient analysis tasks time ensures total amount data retain memory small 

due limited memory space stream data analysis costly store precomputed regression cube tilt time frame 
propose compute store critical layers essentially cuboids cube observation layer called layer layer analyst system checks decisions signaling exceptions drilling exception cells lower layers find corresponding exception supporters minimal interesting layer called layer minimal layer analyst study cost effective practically interesting examine minute detail stream data 
example ex 
assume layer city hour layer quarter hour 

storing regression cube critical layers leaves lot room approaches computing cuboids layers 
propose alternative methods handling cuboids computing cuboids layer layer retaining computed exception cells call method cubing method rolling cuboids layer layer popular drilling path computing exception cells computed cuboids path call method popular path cubing method 
performance study shows methods require reasonable amount memory quick aggregation time exception detection time 
analysis compares strength weakness methods 
rest organized follows 
section define basic concepts introduce research problem 
section theoretic foundation computing multiple linear regression models data cubes 
section concepts tilt time frame critical layers introduced regression analysis stream data cuboid computation methods cubing popular path cubing strength weakness analyzed compared 
experiments performance study methods section 
related possible extensions model discussed section study concluded section 
problem definition section introduce basic concepts related linear regression analysis time series data cubes define problem research 
data cubes relational table called base table cube 
set attributes partitioned subsets dimensional attributes dim measure attributes dim dim 
measure attributes functionally depend dimensional attributes defined context data cube typical aggregate functions count sum avg regression related measures studied 
tuple schema multi dimensional space context data cube called cell 
distinct cells ancestor descendant iff dimensional attribute share value value generalized value dimension concept hierarchy 
sibling iff identical values dimensions dimension parent dimension domain hierarchy 
cell non values called cell 
lambda indicate highest level dimension 
tuple called base cell 
base cell descendant 
cell aggregated cell iff ancestor base cell 
aggregated cell values measure attributes derived complete set descendant base cells time series data cubes time series sequence function maps time point numerical value time series associated time interval tb te tb starting time te time 
consider discrete time tb te represents sequence integers starting tb te 
example sequence time series time interval time points 
diagram time series 
xi time series analysis user usually interested finding dominant trends comparing time series find similar dissimilar curves 
basic technique popularly analyses linear regression 
shows linear regression time series captures main trend time series 
time series involved 
restrict simple type time series 
time series linear regression curve linear regression time series linear regression previous research considered compute linear regression time series 
best knowledge prior considers linear regression time series structured environment data cube huge number inter related cells may form huge number analyzable time series 
multi dimensional analysis stream data study consider stream data huge volume infinite flow time series data 
data collected detailed level multi dimensional space 
direct regression data detailed level may generate large number regression lines tell general trends contained data 
task perform high level line multidimensional analysis data streams order find unusual exceptional changes trends users interest multi dimensional linear regression analysis 
foundations computing linear regression data cubes reviewing basics linear regression introduce compact representation time series data linear regression analysis data cube environment establish aggregation formulae computing linear regression models time series cells selected materialized cells enables obtain compact representation aggregated cell descendant cells provides theoretic foundation warehousing linear regression models time series 
sake simplicity discuss linear regression time series 
full consider general case multiple linear regression general stream data regression variable irregular time ticks 
proof sketches provided detailed proofs included full 
linear regression time series briefly review fundamentals linear regression case involving just time series 
linear fit time series tb te linear estimation function jt estimated value base slope parameters 
difference gamma residual time definition square error lse linear fit time series linear fit chosen minimize residual sum squares rss pte tb gamma jt 
lemma parameters lse linear fit obtained follows tex tb gamma sv gamma tex tb gamma sv gamma sv denotes sum variance squares sv pte tb gamma pte tb gamma pte tb te gamma tb pte tb te gamma tb tb te compact representations far linear regression analysis concerned time series data cube cell represented compressed representations ffl isb representation time series consists tb te tb te interval time series slope base linear fit time series 
ffl intval representation time series consists tb te zb ze tb te interval time series zb ze values linear fit time tb te respectively 
representations equivalent sense derived 
isb representation 
show storing isb representation base cells cube compute linear regression models cells 
enables aggregate data cuboids retrieving original time series data loss precision 
theorem materializing isb representation base cells cube compute isb representation cells cube 
materialization minimal materializing proper subset isb representation obtain linear regression models cells 
proof 
prove sections 
suffices show obtain linear regressions base cells proper subset isb representation linear regressions base cells 
suffices show components isb representation independent 
proper subset isb representation linear regressions realized time series identical values subset different values components isb representation 
show tb excluded consider time series linear regressions agree te tb :10.1.1.40.4034
similarly te removed 
consider tb te 
consider tb te 
xi theorem imply isb representation minimum necessary 
theoretical problem compact representation fewer numbers isb open 
aggregation standard dimensions section consider derive isb representation aggregated cells data cube isb representations relevant descendant base cells 
consider case aggregated cells obtained aggregation roll standard dimension 
ca cell aggregated standard dimension number descendant cells 
ck 
time series ca defined summation time series descendant cells 
pk zi tb te denotes time series ca zi tb te denotes ci 
gives example 
theorem shows derive isb representation linear regression ca isb representations descendant cells 
theorem tab tae ja denotes isb representation ca jk denote isb representations ck respectively 
theorem aggregations standard dimensions 
aggregations standard dimension isb representation aggregated cell derived descendant cells base cells disjoint sets descendant base cells ensure correctness aggregation 
lse fitting curve lse fitting curve lse fitting curve example aggregation standard dimension descendant cells 
isb representation 
satisfy theorem 
descendant cells follows tab tae ja pk ji pk proof 
statement obvious 
na te gamma tb za pte tb na zi pte tb zi na pte tb na statement holds ja pte tb gamma tb gamma gamma za pte tb gamma tb gamma pk zi gamma pk zi pk pte tb gamma tb gamma zi gamma zi pk ji statement holds za gamma ja pki zi gamma pki ji pk zi gamma ji pk xi regressions illustrate theorem 
aggregation time dimension section consider derive isb representation aggregated cells data cube isb representations relevant descendant cells case aggregated cells obtained aggregation roll time dimension 
ca aggregated cell ck descendant cells 
cells related follows time intervals delta delta delta ck form partition time interval tb te ca 
tb te denote time series ca 
tib tie time series ci 
loss generality assume tib ti gives example tb te 
similar notations section write tab tae ja isb representation ca tib tie ji ci 
introduce variables na te gamma tb ni tie gamma tib time intervals aggregated interval example aggregation time dimension time intervals 
isb representations 
satisfy theorem 
sa pte tb si tib za denote average tb te zi tib tie ta tb te ti tib tie 
variables computed ci 
ti lambda tib tie ta lambda zi ji ti equation si ni lambda zi sa pk si za sa na variables expressing isb ca 
theorem aggregations time dimension 
aggregations time dimension isb representation aggregated cell derived descendant cells follows tb te ja pk gamma ni gamma na ji pk pi gamma nj ni gamma na gamma na gamma na za gamma ja ta za ta derived discussed ja derived 
prove theorem need lemma 
lemma integers pi gamma pi gamma gamma gamma ff denote pi gamma gamma independent lemma 
proof sketch thm 
obvious 
lemmas ja pte tb gamma ff na gamma pk tib gamma ff na gamma 
tib gamma ff na gamma tib gamma ti ff na gamma tib ti gamma ff na gamma prove including lemma tib gamma ti ff na gamma gamma ni gamma na ji tib ti gamma ff na gamma lambda pi gamma nj ni gamma na gamma na gamma na proven 
discussion theorem know variables right hand side za gamma ja ta expressed terms ci 
xi stream data analysis regression cubes representing stream data regression parameters points may substantially reduce data stored aggregated costly space time fully compute materialize regression points multi dimensional space due limitations resources response time line stream data analysis 
propose ways reduce cost tilt time frame notion critical layers layer observation layer layer minimal interesting layer exception computation drilling 
algorithms performing computation 
tilt time frame stream data analysis people interested changes fine scale long term changes coarse scale 
naturally register time different levels granularity 
time registered finest granularity distant time registered coarser granularity level coarseness depends application requirements 
months days hours time tilt time frame model example ex 
tilt time frame constructed shown time frame structured multiple granularities quarters minutes hours days months 
model compute regressions hour precision quarter hour day precision hour year precision month 
model registers units time theta theta units saving times acceptable trade grain granularity distant time 
xi notion critical layers tilt time frame model costly dynamically compute store full regression cube cube may quite align time axis natural calendar time 
granularity level tilt time frame partial interval full unit level 
standard dimensions containing multiple levels distinct values 
stream data analysis limited memory space requires fast response time suggested compute store mission critical cuboids cube 
design critical cuboids identified due conceptual computational importance stream data analysis 
call cuboids layers suggest compute store dynamically 
layer called layer minimally interesting layer analyst study 
necessary layer cost effective practically interesting examine minute detail stream data 
second layer called layer observation layer analyst automated system check decisions signaling exceptions drilling exception cells lower layers find lower level exceptional descendants 
individual user street address minute user group street block quarter primitive stream data layer layer observation layer minimal interest city hour critical layers regression cube example assume virtual cuboid individual user street address minute forms primitive layer input stream data ex 

tilt time frame shown critical layers power supply analysis layer user group street block quarter layer lambda city hour shown 
design cuboids lower layer need computed minimal interest users 
minimal regression cells base cuboid needs computed stored aggregate cells computed grouping user group street block quarter 
done aggregations regressions section standard dimensions user location rolling individual user user group street address street block respectively time dimension rolling minute quarter 
similarly cuboids layer computed dynamically tilt time frame model 
layer analyst takes observation deck watching changes current stream data examining regression lines curves layer decisions 
layer obtained rolling cube standard dimensions lambda means user category city respectively time dimension hour 
unusual observed analyst drill exceptional cells examine low level details 
xi framework exception analysis materializing regression cube critical layers leaves lot room approaches computing cuboids 
cuboids precomputed fully partially exception cells leave fly computation 
may large number cuboids layers may contain cells costly space time fully materialize cuboids 
user may interested certain exception cells cuboids 
desirable compute exception cells 
regression line exceptional slope exception threshold exception threshold defined user expert cuboid dimension level cube depending applications 
regression line may refer regression represented cell cuboid points represented current cell current quarter vs previous quarter current hour vs general regression computed certain points tilt time frame users interest application 
discussion propose framework computation 
framework exception driven analysis task computing regression time series cube compute critical layers cuboids layer minimal interest layer ii layer observation layer cuboids layers compute exception cells cells pass exception threshold exception parent cell 
xi framework covering full search space realistic huge search space cube user rarely time examine normal cells layer lower observation layer natural follow exceptional cells drill check exceptional descendants order find cause problem 
framework needs compute store small number exception cells satisfy condition 
cost reduction possible olap regression exploration cubes stream data analysis 
algorithms exception regression cube computation discussion algorithm design efficient computation exception regression cubes 
tilt time frame time dimension regression data computed tilt time frame 
determination exception threshold points regression lines dependent particular application 
second discussed layer layer aggregated directly stream data 
third compact data structure needs designed space taken computation aggregations minimized 
data structure called tree hyper linked tree structure introduced revised adopted ensure compact structure maintained memory efficient computation multi dimensional multi level aggregations 
ideas example 
example suppose stream data analyzed contains dimensions levels abstraction excluding highest level abstraction lambda ordering lambda forms low hierarchy 
minimal interesting layer layer layer lambda 
layer bottom cuboid layer top cuboid computed total theta theta cuboids shown 
cube structure layer layer assume cardinality number distinct values level relationship card card card card card card 
path tree root leaf ordered ha 
ordering tree compact sharings higher level nodes 
tuple expanded include ancestor values dimension value inserted tree path nodes attribute value pairs order 
example tree shown fig 
leaf node path ha store relevant regression information cells layer 
upper level regressions computed tree associated links header tables 
header table constructed subset level tree entries containing appropriate statistics cells 
lambda lambda bottom level fig linked list nodes contributing cells 
xi 
header table header table 
root reg 
info link reg 
info link tree structure cube computation focus compute layer exception cells layers 
interesting methods outlined follows 

cubing starting layer cubing performed aggregating regression cells upto efficient cubing method multiway array aggregation buc cubing 
implementation cubing performed tree constructed 
exception cells retained corresponding layer computation layer cells retained observation 

popular path cubing starting layer aggregation regression cells upto layer performed popular drilling path efficient cubing method cubing 
cuboids layers children cells exception cell computed cuboid need computed newly computed exception cells retained 
computation may utilize precomputed cuboids popular path 
algorithms 
algorithm cubing cubing computing regressions layers 
input 
multi dimensional time series stream data plus layer specifications exception threshold possibly level cuboid 
output 
regression cells layers exception cells layers 
method 

aggregate stream data layer theorems construct tree scanning stream data performing aggregation corresponding leaf nodes tree 

compute aggregation starting layer layer cubing method described 
leaf level header table corresponding cells building header table level corresponding cells 
local header computation finished output exception cells 
notice cubing proceeds leaf nodes level level computing combination distinct values particular dimension level combination traversing node links performing aggregation regression 
example traversing links node local header table hb hold aggregated value traversing links local header table space reused header hb space usage minimized 
exception cells local header tables combination output 
analysis 
step needs scan stream data perform aggregation corresponding leaves theorems correctness proved 
step needs local header table level usually small number levels 
exception cells take additional space 
space usage small 
cubing algorithm fast study 
xi algorithm popular path compute regressions layers popular path 
input output algorithm popular drilling path popular path shown dark line path 
method 
subtle differences cubing described previous cubing handle multiple levels dimension attribute 
lack space addressed 
notice algorithm computes exception cells algorithm necessary computes exception cells required cuboid computes recursively exception cells exception children starting layer 

step algorithm tree constructed order popular path 

compute aggregation rolling layer layer path aggregated regression points stored nonleaf nodes tree output exception cells 

starting layer drill exception cells current cuboid cuboids compute aggregation rolling computed cuboid residing closest lower level 
output exception cells derived current computation 
process proceeds recursively reaches layer 
analysis 
tree ordering step drilling path facilitates computation storage cuboids path 
step computes aggregates drilling path layer layer 
step drilling done exception cells takes advantage closest low level computed cuboids aggregation 
cells computed related exception cells cuboids associated tree costs minimal space overhead 
xi comparison algorithms algorithms see need scan stream data 
regarding space needs tree regression points saved leaf set local header tables need local headers needs store regression points leaf nonleaf nodes 
regarding computation needs compute cells exception cells retained uses precomputed results quite effectively 
comparison computes cells cuboids path computes exception cells lower level may lead computation may intermediate computation results effectively 
analysis see algorithms quite competitive space computation time performance study needed show relative strength 
making algorithms line simplicity far discussed algorithms deal grow nature timeseries stream data line continuously growing manner 
discuss issue 
process essentially incremental computation method illustrated tilt time frame 
assuming memory contains previously computed layers plus cuboids popular path case popular path algorithm stream data arrive minute 
new stream data accumulated regression aggregation corresponding tree leaf nodes 
time granularity quarter aggregated data trigger cube computation minutes rolls leaf higher level cuboids 
reaching cuboid time granularity hour rolled regression information isb remains corresponding quarter slot reaches full hour quarters rolls levels 
notice process regression data time interval cuboid accumulated promoted corresponding coarser time granularity accumulated data reaches corresponding time boundary 
example regression information quarters aggregated hour promoted hour slot mean time quarter slots retain sufficient information quarter regression analysis 
design ensures stream data flows regression keeps granularity time unit layer 
performance study evaluate effectiveness efficiency proposed algorithms performed extensive performance study synthetic datasets 
limited space section report results synthetic datasets merged data streams consisting varied number dimensions levels 
results consistent data sets 
datasets generated data generator similar spirit ibm data generator designed testing data mining algorithms 
convention data sets follows means dimensions dimension contains levels layer layer inclusive node fan factor cardinality children node total merged layer tuples 
experiments performed mhz amd pc megabytes main memory running microsoft windows server 
methods implemented microsoft visual 
compare performance algorithms follows 
design framework obvious performance advantages alternatives aspects 
consequently conduct experimental performance study aspects comparing clear winners obvious losers 
regression analysis time series data cubes novel subject existing methods problem compare algorithms previous methods 
seeking industry time series data sets study real data sets 
aspects include tilt time frame vs full time frame minimal interesting layer vs examining stream data raw data layer computing cube apex layer vs computing observation layer 
data analyst needs fast line response space time critical processing examine time space consumption performance study 
examined factors performance study time space exception threshold percentage aggregated cells belong exception cells time space size number tuples layer time space varied number dimensions levels 
performance results reported fig 
runtime seconds exception popular cubing time vs exception memory usage bytes exception popular cubing space vs exception processing time memory usage vs percentage exception data set shows processing time memory usage vs percentage exception data set fixed 
cubing computes cells layer way layer despite rate exception total processing time just slightly higher high exception rate cells exceptional ones low exception 
memory usage change lot exception rate grows exception cells retained memory algorithm 
hand popular path computes popular path plus drilling exception cells exception rate low computation cost low exception rate grows costs computation time explore sharing processing nicely cubing 
space usage stable low exception rate take space store cells popular path exception rate low 
shows processing time memory usage vs size layer cube structure exception rate data sets varied sizes appropriate subsets data set 
data size grows popular path scalable cubing running time cubing runtime seconds size bytes popular cubing time vs layer size memory usage bytes size bytes popular cubing space vs layer size processing time memory usage vs size layer cube structure exception rate computes cells critical layers popular path computes cells popular path plus relatively small number exception cells 
popular path takes memory space cubing cells popular path needs retained memory computation exception cells cuboids 
runtime seconds number levels popular cubing time vs levels memory usage bytes number levels popular cubing space vs levels processing time space vs levels layers cube structure exception rate shows processing time space usage vs number levels layers cube structure exception rate 
algorithms growth number levels data cube processing time space usage grow exponentially 
expected exponential growth serious number dimension grows 
verification curse dimensionality 
fortunately practical applications time series analysis power consumption analysis may involve small number dimensions 
method derived practically applicable 
study see cubing popular path efficient practically interesting algorithms computing multi dimensional regressions time series stream data 
choice dependent expected exception ratio total main memory size desired re sponse time computing exception cells fixed path fits needs application 
note performance study deals computing cubes set available stream data tuples 
stream data applications just need incrementally compute newly generated stream data 
case computation time substantially shorter shown total memory usage may reduce due need store data critical layers popular path retaining exception cells 
discussion section compare study related discuss possible extensions 
related related mathematical foundations tools time series analysis similarity search data mining time series data line analytical processing mining data cubes research management mining stream data 
briefly review previous research areas point differences 
statistical time series analysis studied mature field commercial statistical tools capable time series analysis available including sas splus matlab 
common assumption studies tools users responsible choose time series analyzed including scope object time series level granularity 
studies tools including longitudinal studies provide capabilities relating time series associated multi dimensional multi level characteristics provide adequate support online analytical processing mining time series 
contrast framework established provides efficient support help users form select analyze mine time series multi dimensional multi level manner 
similarity search efficient retrieval time series major focus time series related research database community :10.1.1.40.4034
previous data mining research paid attention time series data including shape patterns representative trends periodicity time warping data mining 
relate multi dimensional multi level characteristics time series seriously consider aggregation time series 
data warehousing olap progress efficient support standard ad www cs ucr edu eamonn bib html fairly comprehensive time series data mining bibliography 
olap queries data cubes including selective cube materialization iceberg cubing cube gradients analysis exception intelligent roll 
measures studied olap systems usually single values previous studies consider support regression time series 
contrast considers complex measures form time series studies olap mining time series data cubes 
research papers published management querying stream data data mining classification clustering stream data 
works consider regression analysis stream data 
study sets new direction extending data cube technology multi dimensional regression analysis especially analysis stream data 
promising direction applications 
possible extensions far considered types aggregation time series data cubes aggregation standard dimension time dimension merging small time intervals larger ones 
note third type aggregation needed time series data cube aggregation time dimension obtained folding small time intervals lower level time hierarchy higher level 
example starting time series daily level months year may want combine year monthly level 
folds daily values monthly values 
different sql aggregation functions folding sum avg min max stock closing value 
minor extension methods time dimension handled efficiently 
study focused multiple dimensional analysis stream data 
framework constructed including tilt time dimension monitoring change patterns large data cube layer layer paying special attentions exception cells applicable analysis time series data 
results study generalized multiple linear regression situations needs consider regression variable example spatial variables addition temporal variable 
need multiple linear regression multiple regression variable applications 
example environmental monitoring weather forecast frequently networks sensors placed different geographic locations 
sensors collect measurements fixed time intervals 
may wish regression time dimension spatial dimensions 
generally may include variables human characteristics regression variables 
worth noting developed general theory direction full 
theory applicable regression analysis nonlinear functions log function polynomial functions exponential functions 
investigated issues line multi dimensional regression analysis time series stream data discovered interesting mathematical properties regression aggregation small number numerical values complete stream data need registered multi dimensional analysis 
properties multi dimensional line analysis framework proposed uses tilt time frame explores minimal interesting observation layers adopts exception computation method 
framework leads efficient cubing methods efficiency effectiveness demonstrated experiments 
believe study explores line multi dimensional regression analysis timeseries stream data 
lot issues explored 
example implemented studied cubing algorithm computing regression data cubes 
interesting explore cubing techniques multiway array aggregation buc regression cubing developing efficient algorithms driven computation algorithms 
believe important direction develop data cube technology cover additional sophisticated statistical analysis operations may bring new computation power user flexibility line multi dimensional statistical analysis 
agarwal agrawal deshpande gupta naughton ramakrishnan sarawagi 
computation multidimensional aggregates 
vldb 
agrawal 
lin sawhney shim 
fast similarity search presence noise scaling translation time series databases 
vldb 
agrawal psaila wimmers zait 
querying shapes histories 
vldb 
agrawal srikant 
mining sequential patterns 
icde 
beyer ramakrishnan 
bottom computation sparse iceberg cubes 
sigmod 
babu widom 
continuous queries data streams 
sigmod record 
chaudhuri dayal 
overview data warehousing olap technology 
sigmod record 
cook 
applied regression including computing graphics 
john wiley 
dong han lam pei wang 
mining multi dimensional constrained gradients data cubes 
vldb 
diggle liang zeger 
analysis longitudinal data 
oxford science publications 
faloutsos ranganathan manolopoulos 
fast subsequence matching time series databases 
sigmod 
gray chaudhuri bosworth layman pirahesh 
data cube relational aggregation operator generalizing group cross tab sub totals 
data mining knowledge discovery 
greenwald khanna 
space efficient online computation quantile summaries 
sigmod 
gilbert kotidis muthukrishnan strauss 
surfing wavelets streams pass summaries approximate aggregate queries 
vldb 
gehrke korn srivastava 
computing correlated aggregates continuous data streams 
sigmod 
guha mishra motwani callaghan 
clustering data streams 
focs 
han dong yin 
efficient mining partial periodic patterns time series database 
icde 
han pei dong wang 
efficient computation iceberg cubes complex measures 
sigmod 
harinarayan rajaraman ullman 
implementing data cubes efficiently 
sigmod 
hulten spencer domingos 
mining data streams 
kdd 
imielinski khachiyan 
generalizing association rules 
rutgers university aug 
indyk koudas muthukrishnan 
identifying representative trends massive time series data sets sketches 
vldb 
keogh pazzani 
scaling dynamic time warping massive dataset 
pkdd 
singh 
variable length queries time series data 
icde 

moon 
whang 
loh 
subsequence matching time series databases 
icde 
sarawagi agrawal megiddo 
exploration olap data cubes 
edbt 
sarawagi 
intelligent multidimensional olap data 
vldb 
zhao deshpande naughton 
array algorithm simultaneous multidimensional aggregates 
sigmod 
