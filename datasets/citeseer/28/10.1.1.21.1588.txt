detection heterogeneities multiple text database environment weiyi meng clement yu king lup liu dept computer science dept eecs suny binghamton university illinois chicago binghamton ny chicago il meng cs binghamton edu eecs edu number text retrieval systems search engines grows rapidly world wide web increasing need build search brokers metasearch engines top 
task building effective efficient metasearch engine hindered heterogeneities underlying local search engines 
analyze impact various heterogeneities building metasearch engine 
techniques detect prominent heterogeneities multiple search engines 
applications utilizing detected heterogeneities building better metasearch engines provided 
keywords metasearch engine heterogeneities distributed document collection knowledge discovery 
sophisticated metasearch engine may maintain information contents underlying search engines provide better service 
metasearch engine receives user query passes query necessary appropriate local search engines collects results local search engines 
clearly metasearch engine user task drastically simplified 
substantial body research addressing different aspects building effective efficient metasearch engine accumulated years 
main challenges database selec tion problem identify user query local search engines contain useful documents query :10.1.1.21.3137:10.1.1.31.1173:10.1.1.50.4709:10.1.1.36.5847:10.1.1.28.1932:10.1.1.103.1339
objective performing database selection improve efficiency metasearch engine send query potentially useful search engines cutting network traffic cost searching useless databases 
document selection problem determine documents retrieved search engine invoked :10.1.1.45.165
avoid retrieving excessive number useless documents local databases retrieving documents may negative effects higher local cost higher communication cost shipping documents higher cost merge 
result merging problem combine documents returned multiple search engines single ranked list :10.1.1.21.3137:10.1.1.28.1932
clearly metasearch engine user task drastically simplified 
substantial body research addressing different aspects building effective efficient metasearch engine accumulated years 
main challenges database selec tion problem identify user query local search engines contain useful documents query :10.1.1.21.3137:10.1.1.31.1173:10.1.1.50.4709:10.1.1.36.5847:10.1.1.28.1932:10.1.1.103.1339
objective performing database selection improve efficiency metasearch engine send query potentially useful search engines cutting network traffic cost searching useless databases 
document selection problem determine documents retrieved search engine invoked :10.1.1.45.165
avoid retrieving excessive number useless documents local databases retrieving documents may negative effects higher local cost higher communication cost shipping documents higher cost merge 
result merging problem combine documents returned multiple search engines single ranked list :10.1.1.21.3137:10.1.1.28.1932
metasearch engine retrieval effectiveness close documents single database minimizing access cost 
search engines internet usually designed implemented independently 
main challenges database selec tion problem identify user query local search engines contain useful documents query :10.1.1.21.3137:10.1.1.31.1173:10.1.1.50.4709:10.1.1.36.5847:10.1.1.28.1932:10.1.1.103.1339
objective performing database selection improve efficiency metasearch engine send query potentially useful search engines cutting network traffic cost searching useless databases 
document selection problem determine documents retrieved search engine invoked :10.1.1.45.165
avoid retrieving excessive number useless documents local databases retrieving documents may negative effects higher local cost higher communication cost shipping documents higher cost merge 
result merging problem combine documents returned multiple search engines single ranked list :10.1.1.21.3137:10.1.1.28.1932
metasearch engine retrieval effectiveness close documents single database minimizing access cost 
search engines internet usually designed implemented independently 
consequence substantial heterogeneities exist search engines 
example different similarity functions ranking algorithms may different search engines 
techniques carefully designed probe queries retrieve documents analyzing retrieval results search engines 
main contributions 
identify major heterogeneities may exist local search engines analyze impact heterogeneities effective efficient retrieval documents metasearch engine environment 
heterogeneities traditional database systems relational object oriented 
impact building multidatabase systems studied extensively see example relatively studies text database systems :10.1.1.118.6768
second techniques detect specific heterogeneities multiple text retrieval systems 
applying probe queries discover knowledge search engine new research area 
authors probe queries discover terms local database statistical information terms 
rest organized follows 
indexing method different search engines may different ways determine terms index represent document 
example may consider terms document full text indexing may subset terms partial text indexing 
lycos example employs partial text indexing 
order save storage space scalable 
search engines web anchor terms web page index referenced web page search engines :10.1.1.109.4049:10.1.1.101.7869
examples different indexing techniques involve remove stopwords non content words perform stemming transform words stem mountain 
furthermore different stopword lists stemming algorithms different search engines 
document term weighting scheme importance term representing identifying document represented numeric value called weight 
different methods exist determining weight 
number documents database contain term 
intuitively fewer documents term term useful differentiating documents documents 
weight term document decreasing function document frequency term 
number variations incorporating document frequency term computation weight term see section 
systems distinguish different occurrences term different fonts term :10.1.1.109.4049:10.1.1.101.7869:10.1.1.41.9172
example occurrence term appearing title web page may considered important occurrence term appearing title distinction altavista hotbot yahoo webor 
query term weighting scheme vector model text retrieval query considered special document short document typically 
possible term appear multiple times query 
different query term weighting schemes may utilize frequency term query differently computing weight term query 
search engines provide similarities returned documents 
impacts analyze impact heterogeneities different search engines local system autonomy development effective efficient metasearch engines 
particular discuss impact implementation database selection document selection result merging strategies 
impacts database selection database selection determine databases searched respect query 
determination usually estimating usefulness search engine query usefulness ranking score number potentially useful documents similarities queries sufficiently high search engine :10.1.1.31.1173:10.1.1.31.1173
order estimate usefulness database query metasearch engine needs know information database characterizes contents documents database 
call characteristic information database representative database 
depending database selection methods required database representative may contain detailed statistical information terms database document frequency term sum average weights term maximum weight term :10.1.1.31.1173:10.1.1.50.4709
database selection affected autonomy local search engines heterogeneities 
impacts database selection database selection determine databases searched respect query 
determination usually estimating usefulness search engine query usefulness ranking score number potentially useful documents similarities queries sufficiently high search engine :10.1.1.31.1173:10.1.1.31.1173
order estimate usefulness database query metasearch engine needs know information database characterizes contents documents database 
call characteristic information database representative database 
depending database selection methods required database representative may contain detailed statistical information terms database document frequency term sum average weights term maximum weight term :10.1.1.31.1173:10.1.1.50.4709
database selection affected autonomy local search engines heterogeneities 

need database selection largely due fact heterogeneous document databases 
databases local search engines domain query useful documents databases need database selection diminished 
due autonomy local search engine may unwilling provide representative database 
case metasearch engine may forced send user query search engine search engine selected 
possible solutions problem 
keep track past retrieval experiences search engine experiences predict usefulness search engine queries 
savvysearch metasearch engine uses solution :10.1.1.21.3137
second solution submit probe queries search engine extract database representative retrieved documents 

due autonomy heterogeneity different types database representatives different search engines may available metasearch engine 
may representatives extracted past experiences retrieved documents search engines want provide database representatives 
question ensure globally similar documents retrieved local search engines time minimize retrieval useless documents 
retrieval excessive number useless documents local search engines incur higher local processing cost retrieving documents higher communication cost returning documents metasearch engine higher global cost finding globally similar documents documents 
solution problem follows 
global threshold gt estimated total number documents search engines global similarities greater gt local search engine determine local threshold lt documents search engine global similarities higher gt local similarities higher lt words set documents local similarities greater lt local search engine contains documents search engine global similarities higher gt clearly order minimize number useless documents retrieved local search engine need find largest lt local search engine 
problem determining lt gt studied :10.1.1.45.165
different local search engines different ways compute local similarities different methods may needed determine lt different local search engines 
impacts result merging provide local system transparency global users results returned local search engines combined single result 
ideally documents merged result ranked descending order global similarities 
ideal merge hard achieve due heterogeneities local systems 
means method estimate usefulness databases respect query 
effects document selection mentioned section interesting issue document selection documents different local global similarities retrieve potentially useful documents minimize retrieval useless documents 
suppose query metasearch engine sets global threshold gt uses global similarity function document satisfies gt retrieved document potentially useful problem determine proper local threshold lt local search engine potentially useful documents local search engine retrieved local similarity function gt lt note order guarantee potentially useful documents retrieved local system unwanted documents may retrieved local system 
challenge minimize number documents retrieve local system guarantee potentially useful documents retrieved 
words query local database desirable determine tightest largest local threshold lt gt lt techniques proposed tackle problem :10.1.1.45.165
solutions require know similarities computed local search engine 
means discovery similarity functions formulas local search engines help solve document selection problem 
effects result merging discussed section difficulty merging returned documents single ranked list local similarities may incomparable documents may indexed differently similarities may computed different methods term weighting schemes similarity functions 
know specific document indexing similarity computation methods different local search engines better position local similarities reasonably comparable adjust local similarities comparable compute new comparable similarities 

boyan freitag joachims 
machine learning architecture optimizing web search engines 
aaai workshop information systems portland oregon 
brin page :10.1.1.109.4049
anatomy largescale hypertextual web search engine 
www conference 
broglio callan croft 
document retrieval routing inquery system 

cutler shih meng 
structures html documents improve retrieval 
usenix symposium internet technologies systems monterey california 
dreilinger howe :10.1.1.21.3137
experiences selecting search engines metasearch 
acm tois july pp 

dumais 
