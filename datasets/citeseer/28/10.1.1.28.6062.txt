architecture mobile bdi agents paolo ramamohanarao department computer science university melbourne australia email paolo cs mu oz au rao cs mu oz au keywords concurrent language bdi agent multi agent system nested transaction bdi belief desire intention mature commonly adopted architecture intelligent agents 
bdi agents autonomous entities able teams react changing environmental conditions 
current computational model adopted bdi problems limitations prevent development mobile agents 
discuss architecture tomas transaction oriented multi agent system addresses issues combining bdi distributed nested transaction paradigms 
algorithm enable agents tomas mobile 
intelligent agents active area ai research :10.1.1.119.2204
mobile multi agent bdi systems advantages 
instance able ffl perform tasks closer sources data ffl leave join teams ffl balance load network computers 
current computational model adopted bdi problems concerning concurrency control general limitations prevent development mobile bdi agents 
propose architecture tomas transaction oriented multi agent system addresses issues 
tomas inspired previous combines computational aspects bdi distributed nested transactions :10.1.1.44.7600
section overview intelligent agents bdi particular 
situations mobile intelligent agents advantageous section 
section discusses prevents current bdi agents mobile 
sections extensible bdi toolkit written java prototype tomas built toolkit 
bdi approach study mental attitudes tackles problems arising trying traditional planning situations requiring realtime reactivity see instance discussion 
extracted shows basic components typical bdi agent 
beliefs represent informational state bdi agent knows world 
database beliefs environment sensors effectors ka library plans monitor interpreter reasoner intention structure goals generator command procedural reasoning system prs system structure desires goals motivational state agent trying achieve 
typical bdi agent called procedural knowledge constituted set plans define sequences actions tests steps performed achieve certain goal react specific situation :10.1.1.5.1612
intentions represent deliberative state agent plans agent chosen eventual execution 
agent reacts events generated modifications beliefs additions new goals messages arriving external world 
event may invoke trigger plans agent commits execute intentions 
intentions executed step time 
theory problem writing context specific meta level policies 
addition impractical writing meta plans discover handle race conditions real time challenging task 
problems concurrency perceived implementations clever choices system designers 
instance spite inherent parallelism bdi agents usually described implemented sequential machines executing exactly step active intentions time 
order know step perform set intentions forms partial ordering intentions appearing earlier ordering pursued :10.1.1.44.7600
justification choices allow analysis agents behaviour chaotic 
furthermore agents reactive behaviour perform short fast plans 
combining steps ordering intentions short plans result intentions run atomic units avoiding concurrency problems 
important feature missing bdi architecture exception handling mechanism 
research supported australian research council key centre knowledge systems cooperative research centre intelligent decision systems 
supported australian award scholarship 
mobile agent facility request proposal draft 
object management group omg framingham ma usa june 
bailey georgeff kemp kinny active databases agent systems comparison :10.1.1.44.7600
sellis editor proceedings second international workshop rules database systems athens greece lncs pages eindhoven netherlands september 
springer verlag 

dome distributed object migration environment 
