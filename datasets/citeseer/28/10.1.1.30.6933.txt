logical transactions serializability carl alexander burkhard freitag universitat passau fur mathematik und informatik passau germany mail uni passau de tel fax concept logic databases serve clear expressive foundation various information systems 
classical logic language refers single database state modern information systems necessary take dynamics account 
purpose update languages proposed allow specify complex transitions database state :10.1.1.34.4057:10.1.1.44.2390
evaluation point view complex state transition considered transaction 
isolation property transactions poorly addressed context logic update languages important problem classical sequential transactions see instance 
investigate serializability logical transactions supported means implementation transaction manager 
purpose update languages proposed allow specify complex transitions database state :10.1.1.34.4057:10.1.1.44.2390
evaluation point view complex state transition considered transaction 
isolation property transactions poorly addressed context logic update languages important problem classical sequential transactions see instance 
investigate serializability logical transactions supported means implementation transaction manager 
motivation propose update concept deferred updates :10.1.1.44.2390
semantics update goal fixed database state defined terms update request sets contain insertion deletion requests ground edb tuples 
prototype system ultra implemented top deductive database system uses phase transaction processing method 
evaluation phase sets basic update requests computed potentially cause transition current database state new state 
evaluation done logical semantics 
execution updates new physical database state materialized 
update request sets better combined different database extensions concept turns suited representation bulk updates provides concurrent conjunction compositional semantics concurrent conjunction defined terms semantics subformulae 
compositionality important modularization avoids known problems interleaving parallelism various programming languages 
resulting form parallelism support transaction isolation suitable handle concurrent transactions 
slightly modify logical semantics way evaluation phase read operations recorded update request sets :10.1.1.44.2390
materialization started additional logging information analyzed detect read write conflicts transactions evaluated state materialized 
conflicts materialization current transaction take place transaction aborted recomputed new physical database state 
examination update request sets corresponds read lock certification non blocking optimistic transaction protocols odl 
materialization phase completely independent evaluation phase relevant information passed update request sets 
note standard database systems oracle read locks base relations serializability ensured 
attempt embed transaction processing logical framework 
update programs adopt single transaction view known database systems 
define logical semantics single transactions supports local logging read update operations suitable basis sensible operational semantics 
rest organized follows describing syntax semantics update language sketching main theorems adapted sections aim finding syntactical condition terms update request sets guarantee isolated execution concurrent transactions :10.1.1.44.2390
approach formalized shown correct section 
possible derive optimistic transaction processing methods 
extension prototypical architecture outlined section summary section 
due space limitations consider bulk updates 
relation idb set edb idb predicates defines edges dependency graph idb note consider dependencies update predicates result update program 
relation idb refers retrieval part edb idb predicates 
set edb predicates predicate depends detect read write conflicts transactions 
definition idb idb program edb idb predicate 
define idb fr edb predicate idb rg idb denotes reflexive transitive closure relation idb semantics formulae programs section semantics extends semantics defined :10.1.1.44.2390
due space limitations consider bulk updates 
accommodated way shown :10.1.1.44.2390
semantics concept deferred updates 
essentially means updates immediately executed encountered query evaluation 
set edb predicates predicate depends detect read write conflicts transactions 
definition idb idb program edb idb predicate 
define idb fr edb predicate idb rg idb denotes reflexive transitive closure relation idb semantics formulae programs section semantics extends semantics defined :10.1.1.44.2390
due space limitations consider bulk updates 
accommodated way shown :10.1.1.44.2390
semantics concept deferred updates 
essentially means updates immediately executed encountered query evaluation 
update goal determines potential updates derived affecting database state may may materialized applied extensional database 
earlier materialization time potential update cause transition current database state new state 
characterize database state db db update request set delta lead db applied db logical framework update request sets physically applied db call state physical edb instance db hypothetical represent terms corresponding delta 
particular current database state represented update request set delta implementation level delta considered redo log 
note database state comprises contents edb idb changes hypothetical physical applied edb 
different semantics normal programs 
presently commonly accepted semantics subsumed founded model semantics assume semantics idb :10.1.1.121.6788
union phi db idb edb instance db set idb rules idb wfm phi denote founded model able deal valued models assume wfm phi represented set true false ground atoms prefix referring false atom 
definition execution hypothetical execution db phi delta consistent update request set delta edb instance db defined db phi delta fr db gammar delta deltag definition semantics db literals db physical edb instance idb idb program 
define db interpretation db assigns delta founded model db delta wfm idb db phi delta recall terms interpreted usual herbrand pre interpretation 
interpretation mapping set ground update formulae power set theta theta ground formula 
extended deductive database database program idb pup db physical edb instance 
characterize minimal models update program pup stated definition interpretation idb literals wellfounded semantics idb db just find interpretation update atoms respects intended semantics pup recall setting interpretation update formulae completely determined identify corresponding write arbitrary ground update formulae 
definition models update program interpretation update formulae model set update rules pup iff rule pup theta holds 
recall rules denote universally closed implications 
interpretation model update program pup iff holds ground instance rule pup informally speaking means rule head allows state transitions specified corresponding rule body see detailed explanation notion model update program :10.1.1.44.2390
definition interpretation ordering ordering relation interpretations defined bdu intuitively holds allows state transitions definable update atom may restrictive 
definition minimal model model minimal iff holds model theorem existence unique minimal model pup update program 
pup unique minimal model 
proof analogy proof :10.1.1.44.2390
interpretation model update program pup iff holds ground instance rule pup informally speaking means rule head allows state transitions specified corresponding rule body see detailed explanation notion model update program :10.1.1.44.2390
definition interpretation ordering ordering relation interpretations defined bdu intuitively holds allows state transitions definable update atom may restrictive 
definition minimal model model minimal iff holds model theorem existence unique minimal model pup update program 
pup unique minimal model 
proof analogy proof :10.1.1.44.2390
definition idb pup database program db materialized edb instance 
db denotes unique minimal model pup fixed db interpretation determined db idb example recall setting example 
update program pup consist single update rule test reset del model pup del test reset holds 
minimal model pup db pup db test reset gammaon ong gammaon gammaon gammaon holds :10.1.1.44.2390
proof analogy proof :10.1.1.44.2390
definition idb pup database program db materialized edb instance 
db denotes unique minimal model pup fixed db interpretation determined db idb example recall setting example 
update program pup consist single update rule test reset del model pup del test reset holds 
minimal model pup db pup db test reset gammaon ong gammaon gammaon gammaon holds :10.1.1.44.2390
recall minimality refers number state transitions delta delta interpretation definable update atom test reset 
noted kind minimality implicitly enforced inductive definition interpretation update formulae ensures update request sets delta second component tuples small possible 
provide inductive fixpoint characterization unique minimal model update program helpful proving properties minimal model 
definition set interpretations bdu denoted define bdu 
definition forms complete lattice 
bottom element top element constant mappings respectively 
proof assertions follow similar properties power set lattice 
definition immediate consequence operator pup update program 
define immediate consequence operator pup set interpretations follows pup delta delta theta exists ground instance rule pup delta delta lemma immediate consequence operator definition continuous :10.1.1.44.2390
proof proof essentially resembles proof analogous assertion definite programs 
see 
lemma pup update program arbitrary update interpretation 
holds model pup iff pup holds iff pre fixpoint pup proof assertion easily shown definitions 
look correlation sequential materialization composition update request sets 
proposition algebraic properties db edb instance delta delta update request sets 
db phi delta phi delta db phi delta phi delta holds 
delta delta write compatible db phi delta phi delta db phi delta delta db phi delta phi delta holds 
proof proof uses definitions phi phi see details :10.1.1.44.2390
recall setting theorem 
proposition offers alternative ways deal update request sets 
materializing delta delta serial fashion compute materialize final update request set delta delta phi delta delta delta write compatible concurrent composition allowed apply update requests transactions simultaneously interleaved fashion 
computation delta interpreted merging local logs global log 
idb read access multiple threads check isolation materialization edb materialize processes updates architecture ultra system additional write compatibility allows perform update materialization flexible way 
mentioned checking read isolation counterpart read lock certification optimistic transaction protocols odl 
external database system provides persistence materialized updates possible construct logic database system processes transactions independent phases evaluation materialization guarantees acid properties 
formal criterion checking serializability transactions evaluated simultaneously referring database state 
distinguishes approach taken concurrent transaction logic question left open isolated transactions executed parallel :10.1.1.34.4057
topic take finer grained read information account 
sophisticated version update request sets hypothetical states investigated 
note semantics presently represent hypothetical state update request set delta fixed state db emphasize hypothetical character intermediate states logging idea possibility forthcoming implementation idb partially materialized db intermediate edb instances 
abiteboul hull vianu 
addison wesley publishing 
bonner kifer 
overview transaction logic 
theoretical computer science 
bonner kifer :10.1.1.34.4057
concurrency communication transaction logic 
proc 
joint int 
conf 
manchanda warren 
logic language database updates 
minker editor foundations deductive databases logic programming pages 
morgan kaufmann publishers san mateo ca 
van gelder ross schlipf :10.1.1.121.6788
founded semantics general logic programs 
journal acm 
freitag :10.1.1.44.2390
capturing database dynamics deferred updates 
morgan kaufmann publishers san mateo ca 
van gelder ross schlipf :10.1.1.121.6788
founded semantics general logic programs 
journal acm 
freitag :10.1.1.44.2390
capturing database dynamics deferred updates 
proc 
int 
conf 
proc 
int 
conf 
logic programming iclp leuven belgium pages 
freitag :10.1.1.44.2390
capturing database dynamics deferred updates 
technical report mip universitat passau 
available www www uni passau de freitag 
freitag 
nop delta phi delta delta nop delta delta delta nop basic update atom delta phi delta delta ins delta delta delta ins similar equivalences hold basic update atom del 
update atom equivalence holds precondition 
induction step induction hypothesis holds direct proper subformula composite formulae 
implication delta phi delta delta delta phi delta delta delta phi delta delta delta phi delta delta delta phi delta delta delta delta delta delta ih delta delta delta delta delta delta universal quantification delta phi delta delta ground term tuples delta phi delta delta holds ground term tuples delta delta holds ih delta delta concurrent conjunction delta phi delta delta exist delta delta delta phi delta delta delta phi delta delta delta delta delta exist delta delta ih delta delta delta delta delta delta delta delta delta delta delta read isolated delta delta read isolated delta contains exactly read tags delta delta induction hypothesis applicable 
sequential conjunction delta phi delta delta exist delta delta delta phi delta delta delta phi delta phi delta delta delta delta phi delta exist delta delta assoc delta phi delta delta delta phi delta phi delta delta delta delta phi delta exist delta delta ih delta delta delta phi delta delta delta delta phi delta delta delta induction hypothesis applicable previous case delta delta read isolated delta see associativity phi :10.1.1.44.2390
definition ordinal powers immediate consequence operator update program pup defined follows 
pup pup ff pup pup ff successor ordinal ff pup fi lub pup fl fl fi limit ordinal fi lemma unique minimal model update program pup satisfies property fixed update request set delta ground update formula 
proof sufficient prove assertion definable update atoms 
assertion arbitrary update formulae follows lemma 
