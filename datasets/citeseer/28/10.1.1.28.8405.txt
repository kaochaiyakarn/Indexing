efficient domain independent algorithm detecting approximately duplicate database records monge charles elkan department computer science engineering university california san diego la jolla california cs ucsd edu detecting database records approximate duplicates exact duplicates important task 
databases may contain duplicate records concerning realworld entity data entry errors abbreviations differences detailed schemas records multiple databases reasons 
efficient algorithm recognizing clusters approximately duplicate records 
key ideas distinguish algorithm 
version smith waterman algorithm computing minimum edit distance domainindependent method recognize pairs approximately duplicate records 
second union find algorithm keep track clusters duplicate records incrementally pairwise duplicate relationships discovered 
previous duplicate detection algorithms standard method detecting exact duplicates table sort table check neighboring tuples identical bd 
approach extended detect approximate duplicates 
idea sorting achieve preliminary clustering pairwise comparisons nearby records 
sorting typically application specific key chosen duplicate records appear near 
hs compare nearby records sliding window fixed size sorted database :10.1.1.55.2700
window size record compared records gamma gamma records gamma 
number comparisons performed tw total number records database 
order improve accuracy results passes duplicate detection combined ka 
typically combining results passes database small window sizes yields better accuracy cost pass database large window size 
window size record compared records gamma gamma records gamma 
number comparisons performed tw total number records database 
order improve accuracy results passes duplicate detection combined ka 
typically combining results passes database small window sizes yields better accuracy cost pass database large window size 
hs combine results multiple passes explicitly computing transitive closure discovered pairwise duplicate relationships :10.1.1.55.2700
record duplicate record record duplicate record transitivity duplicate record uses different expensive method preliminary grouping records 
record considered separately source record query remaining records order create group potentially matching records 
record group compared source record pairwise matching procedure 
pairwise record matching algorithms duplicate detection method proposed date including requires algorithm detecting duplicate relationships pairs records 
record group compared source record pairwise matching procedure 
pairwise record matching algorithms duplicate detection method proposed date including requires algorithm detecting duplicate relationships pairs records 
typically algorithm relatively expensive computationally grouping methods described previous section reduce number times applied 
pairwise record matching algorithms previous application specific 
example hs production rules domainspecific knowledge written ops translated hand studied record matching algorithms evaluated performance real world datasets :10.1.1.55.2700
algorithms proposed edit distance algorithm variant known smith waterman algorithm originally developed finding evolutionary relationships biological protein dna sequences 
domainindependent algorithm detect duplicate records 
call record matching algorithm domain independent modifications range applications 
definition smith waterman algorithm domain independent certain assumptions records high level schema alphanumeric characters 
creates duplicate record generator introduces errors noise record 
possible errors range small typographical complete name address changes 
generator introduces typographical errors frequencies known previous research spelling correction algorithms 
edit distance algorithms designed detect errors introduced algorithm developed knowledge particular error probabilities database generator 
pairwise record matching algorithm hs special rules entire words complete changes names zip codes social security number omissions smith waterman algorithm variant :10.1.1.55.2700
table contains example pairs records chosen especially instructive pairwise scores assigned smith waterman algorithm 
pair correctly detected duplicates rules hs :10.1.1.55.2700
smith waterman algorithm classifies duplicate threshold 
equational theory detect second pair duplicates 
generator introduces typographical errors frequencies known previous research spelling correction algorithms 
edit distance algorithms designed detect errors introduced algorithm developed knowledge particular error probabilities database generator 
pairwise record matching algorithm hs special rules entire words complete changes names zip codes social security number omissions smith waterman algorithm variant :10.1.1.55.2700
table contains example pairs records chosen especially instructive pairwise scores assigned smith waterman algorithm 
pair correctly detected duplicates rules hs :10.1.1.55.2700
smith waterman algorithm classifies duplicate threshold 
equational theory detect second pair duplicates 
smith waterman algorithm performs correctly pair duplicate detection threshold set lower 
equational theory falsely finds third fourth pairs duplicates 
case refer impure clusters 
detection algorithm detected clusters pure impure 
sections follow provide results experiments performed study 
figures show number pure impure clusters detected algorithm 
show number true clusters database number clusters detected method hs :10.1.1.55.2700
unfortunately merge purge engine software distinguish pure impure clusters results reported slightly accuracy 
varying number duplicates record duplicate detection algorithm unaffected changes number duplicates record 
study effect increasing number varied number duplicates record zipf distribution 
zipf distributions give high probability small numbers duplicates give non trivial probability large numbers duplicates 
databases created different value parameter set 
maximum number duplicates original record kept constant 
noise level maintained constant 
sizes databases ranged total records 
experiments merge purge engine run fixed window size experiments performed hs :10.1.1.55.2700
duplicate detection algorithm priority queue containing sets records 
number chosen accuracy equational smith waterman soc 
sec 
name address city state theory score number zip code true missing th st apt 
proceedings asis annual meeting page 
mauricio hern andez 
generalization band joins merge purge problem 
ph thesis columbia university 
hs hern andez stolfo :10.1.1.55.2700
merge purge problem large databases 
proceedings acm sigmod international conference management data pages may 
jeremy 
identifying merging related bibliographic records 
