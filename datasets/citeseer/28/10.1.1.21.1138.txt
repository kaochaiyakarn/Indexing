answering queries views survey alon levy department computer science engineering university washington seattle wa alon cs washington edu problem answering queries views nd ecient methods answering query set previously materialized views database accessing database relations 
problem received signi cant attention relevance wide variety data management problems 
query optimization nding rewriting query set materialized views yield ecient query execution plan 
support separation logical physical views data storage schema described views logical schema 
result nding query execution plan accesses storage amounts solving problem answering queries views 
problem arises data integration systems data sources described precomputed views 
access views database relations cheapest query execution plan answering 
rst class applications encounter problem answering queries views query optimization database design 
context query optimization computing query previously materialized views speed query processing part computation necessary query may done computing views 
savings especially signi cant decision support applications views queries contain grouping aggregation 
furthermore cases certain indices modeled precomputed views join indices val deciding indices requires solution query rewriting problem :10.1.1.105.5626
context database design view de nitions provide mechanism supporting independence physical view data logical view 
strictly speaking model join indices need extend logical model refer row ids 
independence enables modify storage schema data physical view changing logical schema model complex types indices 
authors describe storage schema set views logical schema yl tsi 
finding rewriting query views evaluating rewriting views clearly candidate algorithm 
rewriting equivalent query guaranteed nd possible answers 
see section maximally contained rewriting query set views provide possible answers obtained views 
intuitively reason rewriting maximally contained speci query language may query expressive language may provide answers 
problem nding answers query set views formalized notion certain answers originally introduced ad :10.1.1.54.9534:10.1.1.54.9534:10.1.1.54.9534
de nition distinguish case view extensions assumed complete closed world assumption case views may partial open world 
de nition certain answers query vm set view de nitions database schema sets tuples extensions views vm respectively 
tuple certain answer query closed world assumption databases tuple certain answer query open world assumption databases intuition de nition certain answers 
extensions set views de ne unique extension database relations 
addition view de nitions contain complex predicates goal express ne grained distinctions contents di erent data sources 
shown section able nd equivalent rewriting query source views best nd maximally contained rewriting query 
furthermore context data integration assumed views complete may contain subset tuples satisfying de nition 
section describe algorithms answering queries views developed speci cally context data integration 
algorithms bucket algorithm developed context information manifold system lro studied gm inverse rules algorithm qia implemented infomaster system dg minicon algorithm pl :10.1.1.51.3293:10.1.1.116.2567
noted algorithms described previous section output algorithms query execution plan query referring view relations 
datalog notation section necessary revert datalog notation terminology 
provide brief reminder datalog notation conjunctive queries ull ahv 
conjunctive queries able express select project join queries conjunctive query form predicate names 
uninterpreted 
note may values database cause tuple dept number join major registered matters exists value 
general create function symbol existential variable appears view de nitions 
function symbols heads inverse rules 
rewriting query set views datalog program includes inverse rules query shown dg inverse rules algorithm returns maximally contained rewriting fact algorithm returns maximally contained query arbitrary recursive datalog program :10.1.1.57.1452
example suppose query asks departments students course dept major student dept registered student view includes tuples cs ee cs inverse rules compute tuples registered cs cs ee ee cs cs major cs ee cs applying query extensions yield answers cs ee 
example showed functional terms generated part evaluation inverse rules 
resulting rewriting rewritten way functional terms appear dg :10.1.1.57.1452
interesting similarities di erences bucket inverse rules algorithms worth noting 
function symbols heads inverse rules 
rewriting query set views datalog program includes inverse rules query shown dg inverse rules algorithm returns maximally contained rewriting fact algorithm returns maximally contained query arbitrary recursive datalog program :10.1.1.57.1452
example suppose query asks departments students course dept major student dept registered student view includes tuples cs ee cs inverse rules compute tuples registered cs cs ee ee cs cs major cs ee cs applying query extensions yield answers cs ee 
example showed functional terms generated part evaluation inverse rules 
resulting rewriting rewritten way functional terms appear dg :10.1.1.57.1452
interesting similarities di erences bucket inverse rules algorithms worth noting 
particular step computing buckets similar spirit computing inverse rules compute views relevant single atoms database relations 
di erence bucket algorithm computes relevant views consideration context atom appears query inverse rules algorithm 
predicates view de nition entail view provide tuples relevant query mutually unsatis able predicates query view bucket 
doing lose fact view computed join query requesting 
computational advantage exploiting materialized view lost 
order obtain ecient rewriting inverse rules unfold inverse rules remove redundant subgoals unfolded rules 
unfolding rules turns similar slightly better second phase bucket algorithm consider cartesian product buckets 
minicon algorithm minicon algorithm pl addresses limitations previous algorithms :10.1.1.116.2567
key idea underlying algorithm change perspective building rewritings combining rewritings query subgoal database relation consider variables query interact available views 
result second phase minicon algorithm needs consider drastically fewer combinations views 
example illustrates key idea minicon 
consider query major registered advises views dept major student dept registered student quarter 
example algorithm determine create mcd apply join predicates query 
considered mcd contain subgoal advises prof student 
considered mcd include query subgoals 
key advantage minicon algorithm second phase algorithm considers fewer combinations mcds compared cartesian product buckets compared number unfoldings inverse rules 
pl describes detailed set experiments shows minicon signi cantly outperforms inverse rules algorithm turn outperforms bucket algorithm :10.1.1.116.2567
shows exactly savings obtained second phase algorithm 
furthermore experiments show algorithm scales hundreds views commonly occurring shapes chain star complete queries see mga description query shapes 
theory answering queries views previous sections discussed speci algorithms answering queries views 
consider fundamental issues cut algorithms discussed far studied theoretical perspective literature 
conditions essentially guarantee algorithm searches rewritings size bounded size query 
important emphasize rewriting query produces ecient plan answering query may conjuncts original query 
bound lmss guarantees bucket algorithm guaranteed nd maximally contained rewriting query query contain arithmetic comparison predicates views may consider unions conjunctive queries language rewriting 
lmss shown problem nding rewriting np hard independent reasons number possible ways map single view query number ways combine mappings di erent views query 
rsu authors extend bound size rewriting case views contain access pattern limitations discussed detail section :10.1.1.49.3156
cr authors exploit close connection containment rewriting problems show note checking correctness rewriting np complete guess rewriting extended guess containment mappings showing equivalence rewriting query 
polynomial time cases rewriting problems corresponding analogous cases problem query containment 
need recursive rewritings noted earlier cases nd equivalent rewriting query set views consider problem nding maximally contained rewritings 
hope apply maximally contained rewriting extensions views obtain set certain answers query de nition 
need recursive rewritings noted earlier cases nd equivalent rewriting query set views consider problem nding maximally contained rewritings 
hope apply maximally contained rewriting extensions views obtain set certain answers query de nition 
interestingly contexts order achieve goal need consider recursive datalog rewritings query 
recall datalog rewriting datalog program base edb predicates view relations additional intermediate idb relations 
obvious case query recursive dg cases include presence functional dependencies database relations access pattern limitations extensions views dl see section detailed discussion views contain unions recursion case additional semantic information class hierarchies objects expressed description logics :10.1.1.57.1452
illustrate case functional dependencies 
example illustrate need recursive rewritings presence functional dependencies temporarily venture domain airline 
suppose database relation schedule airline flight date pilot aircraft stores tuples describing pilot scheduled certain ight aircraft ight 
assume functional dependencies relations mediated schema pilot airline aircraft airline expressing constraints pilots airline joint ownership airlines 
particular means produce certain answers possible database 
recall answer certain extensions views answer database give rise view extensions 
maximally contained rewriting views may produce subset answers state database 
de ned possible rewritings particular query language consider question remains nd certain answers applying rewritten query views algorithm 
question nding certain answers considered detail ad gm :10.1.1.51.3293:10.1.1.54.9534:10.1.1.54.9534
analysis distinguish case open world assumption closed world assumption 
closed world assumption extensions views assumed contain tuples result applying view de nition database 
open world assumption extensions views may missing tuples may incorrect tuples 
open world assumption especially appropriate data integration applications views describe sources may incomplete see lev dus treatments complete sources 
closed world assumption extensions views assumed contain tuples result applying view de nition database 
open world assumption extensions views may missing tuples may incorrect tuples 
open world assumption especially appropriate data integration applications views describe sources may incomplete see lev dus treatments complete sources 
closed world assumption appropriate context query optimization maintaining physical data independence views computed existing database relations 
open world assumption ad show practical cases nding certain answers done polynomial time :10.1.1.54.9534:10.1.1.54.9534:10.1.1.54.9534
problem np hard soon allow union language de ning views allow predicate language de ning query 
closed world assumption situation worse 
views query de ned conjunctive queries comparison predicates problem nding certain answers np hard 
example crux proof np hardness result ad :10.1.1.54.9534:10.1.1.54.9534:10.1.1.54.9534
open world assumption ad show practical cases nding certain answers done polynomial time :10.1.1.54.9534:10.1.1.54.9534:10.1.1.54.9534
problem np hard soon allow union language de ning views allow predicate language de ning query 
closed world assumption situation worse 
views query de ned conjunctive queries comparison predicates problem nding certain answers np hard 
example crux proof np hardness result ad :10.1.1.54.9534:10.1.1.54.9534:10.1.1.54.9534
example example shows reduction problem graph colorability problem nding certain answers 
suppose relation edge encodes edges graph relation color encodes color attached nodes graph 
consider views color color edge extension set nodes graph extension set fred green extension set edges graph 
consider query edge color color ad shown certain answer graph encoded edge colorable :10.1.1.54.9534:10.1.1.54.9534:10.1.1.54.9534
example crux proof np hardness result ad :10.1.1.54.9534:10.1.1.54.9534:10.1.1.54.9534
example example shows reduction problem graph colorability problem nding certain answers 
suppose relation edge encodes edges graph relation color encodes color attached nodes graph 
consider views color color edge extension set nodes graph extension set fred green extension set edges graph 
consider query edge color color ad shown certain answer graph encoded edge colorable :10.1.1.54.9534:10.1.1.54.9534:10.1.1.54.9534
show problem nding certain answers np hard 
hardness nding certain answers provides interesting perspective formalisms data integration 
intuitively result entails views describe contents data sources conjunctive queries describe sources complexity nding answers query set sources np hard 
contrast formalism relations mediated schema described views source relations complexity nding answers polynomial 
hardness nding certain answers provides interesting perspective formalisms data integration 
intuitively result entails views describe contents data sources conjunctive queries describe sources complexity nding answers query set sources np hard 
contrast formalism relations mediated schema described views source relations complexity nding answers polynomial 
result hints formalism greater expressive power formalism data integration 
interesting note connection established ad problem nding certain answers computation conditional tables il :10.1.1.54.9534:10.1.1.54.9534:10.1.1.54.9534
authors show partial information database available set views encoded conditional table formalism studied il 
gm considers case views may incomplete complete contain incorrect tuples :10.1.1.51.3293
shown comparison predicates views query views complete may contain incorrect tuples nding certain answers done polynomial time size view extensions 
cases problem np hard 
contrast formalism relations mediated schema described views source relations complexity nding answers polynomial 
result hints formalism greater expressive power formalism data integration 
interesting note connection established ad problem nding certain answers computation conditional tables il :10.1.1.54.9534:10.1.1.54.9534:10.1.1.54.9534
authors show partial information database available set views encoded conditional table formalism studied il 
gm considers case views may incomplete complete contain incorrect tuples :10.1.1.51.3293
shown comparison predicates views query views complete may contain incorrect tuples nding certain answers done polynomial time size view extensions 
cases problem np hard 
considers problem relative query containment set certain answers query contained set certain answers query shows conjunctive queries views comparison predicates problem complete problem decidable presence access pattern limitations 
extensions query language section survey algorithms answering queries views context important extensions query languages considered far 
model limited access paths attaching set adornments data source 
source modeled view attributes adornment consists string length composed letters meaning letter adornment source values attribute position 
meaning letter adornment source doesn value attribute position 
example adornment bf view means tuples obtained providing values attributes works considered problem answering queries views views associated adornments describing limited access patterns 
rsu shown bound lmss length possible rewriting hold anymore :10.1.1.49.3156
illustrate consider example binary relation cites stores pairs papers cites suppose views associated adornments bf cites cites suppose query asking papers citing cites bound lmss require exists rewriting atom size query 
possible rewriting case 
rsu shows presence access pattern limitations sucient consider slightly larger bound size rewriting number subgoals query number variables query :10.1.1.49.3156
problem nding equivalent rewriting query set views np complete 
example adornment bf view means tuples obtained providing values attributes works considered problem answering queries views views associated adornments describing limited access patterns 
rsu shown bound lmss length possible rewriting hold anymore :10.1.1.49.3156
illustrate consider example binary relation cites stores pairs papers cites suppose views associated adornments bf cites cites suppose query asking papers citing cites bound lmss require exists rewriting atom size query 
possible rewriting case 
rsu shows presence access pattern limitations sucient consider slightly larger bound size rewriting number subgoals query number variables query :10.1.1.49.3156
problem nding equivalent rewriting query set views np complete 
situation complicated consider maximally contained rewritings 
example kw shows may bound size rewriting 
example relation denotes set papers database eld relation stores papers received awards databases eld 
particular note case set views source answer described nite unfoldings datalog program 
description logics description logics family logics modeling complex hierarchical structures 
description logic enables de ne sets objects specifying properties reason relationship sets subsumption disjointness 
description logic enables reasoning individual objects membership di erent sets 
reasons description logics useful data management ability describe complex models domain reason interschema relationships cl :10.1.1.45.6987
reason description logics data integration systems lro 
borgida bor surveys description logics data management 
works considered problem answering queries views description logics model domain 
shown general answering queries views context may np hard presents cases obtain maximallycontained rewriting query recursive datalog 
query caching optimization distributed mediator systems 
proc 
acm sigmod conf 
management data montreal canada 
ad abiteboul duschka :10.1.1.54.9534:10.1.1.54.9534:10.1.1.54.9534
complexity answering queries materialized views 
proc 
acm sigact sigmod sigart symposium principles database systems pods seattle wa 
afrati th 
proc 
int 
conf 
data engineering icde taipei taiwan 
cl catarci lenzerini :10.1.1.45.6987
representing interschema knowledge cooperative information systems 
journal intelligent cooperative information systems 
cm chandra merlin 
optimal implementation conjunctive queries relational databases 
storing semi structured data stored 
proc 
acm sigmod conf 
management data pages 
dg oliver duschka michael genesereth :10.1.1.57.1452
answering recursive queries views 
proc 
acm sigact sigmod sigart symposium principles database systems pods tucson arizona 
dg oliver duschka michael genesereth 
proc 
int 
conf 
data engineering icde pages 
gm grahne alberto mendelzon :10.1.1.51.3293
tableau techniques querying information sources global schemas 
proc 
int 
conf 
chase far 
proc 
acm sigmod conf 
management data 
pl alon levy :10.1.1.116.2567
scalable algorithm answering queries views 
proc 
int 
conf 
proc 
int 
conf 
data engineering icde pages new orleans la 
rsu anand rajaraman yehoshua sagiv je rey ullman :10.1.1.49.3156
answering queries templates binding patterns 
proc 
acm sigact sigmod sigart symposium principles database systems pods san jose ca 
sac selinger astrahan chamberlin lorie price 
proc 
int 
conf 
database theory icdt delphi greece 
val patrick valduriez :10.1.1.105.5626
join indices 
acm transactions database systems 
vp vasilis vassalos yannis papakonstantinou 
describing query capabilities heterogeneous sources 
