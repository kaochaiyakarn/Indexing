summary cache scalable wide area web cache sharing protocol li fan pei cao almeida department computer science university wisconsin madison cao cs wisc edu andrei broder systems research center digital equipment broder pa dec com sharing caches web proxies important technique reduce web tra alleviate network bottlenecks 
widely deployed due overhead existing protocols 
propose new protocol called summary cache proxy keeps summary urls cached documents participating proxy checks summaries potential hits sending queries 
factors contribute low overhead summaries updated periodically summary representations economical low bits entry 
trace driven simulations prototype implementation show compared existing internet cache protocol icp summary cache reduces number inter cache messages factor reduces bandwidth consumption eliminates cpu overhead time maintaining hit ratio icp 
summary cache enables cache sharing large number proxies 
caching recognized important techniques reduce internet bandwidth consumption caused tremendous growth world wide web 
particular caching web proxies shown ective 
gain full bene ts caching proxy caches side common bottleneck link cooperate serve misses process call web cache sharing 
web cache sharing rst proposed context harvest project 
harvest group designed internet cache protocol icp supports discovery retrieval documents neighboring caches 
today institutions countries established hierarchies proxy caches cooperate icp reduce tra internet 
wide cache sharing currently hindered overhead icp protocol 
icp discovers cache hits proxies having proxy multicast query message proxies cache occurs 
number proxies increases communication processing overhead increase quadratically 
alternatives proposed address problem example cache array routing protocol partitions url space proxies 
solutions appropriate wide area cache sharing limited network bandwidth proxies non uniform network distances proxies users 
address issue scalable protocols wide area web cache sharing 
rst quantify overhead icp protocol running set proxy benchmarks 
results show number cooperating proxies low icp increases inter proxy tra factor increases packets received proxy increases cpu overhead 
absence inter proxy cache hits remote cache hits overhead increase average user latency 
propose new cache sharing protocol called summary cache 
protocol proxy keeps compact summary cache directory list urls cached documents proxy 
cache occurs proxy rst probes summaries see request cache hit proxies sends query messages proxies summaries show promising results 
summaries need accurate times 
request cache hit summary indicates false hit query message 
request cache hit summary indicates false penalty higher ratio 
examine key questions design protocol frequency summary updates representation summary 
trace driven simulations show update summaries delayed xed percentage example cached documents new total cache hit ratio degrade proportionally choice degradation depending traces 
reduce memory requirements store summary bloom lter 
computationally cient hash probabilistic scheme represent set keys case collections urls cached documents minimal memory requirements answering membership queries zero probability false negatives low probability false positives 
trace driven simulations show typical proxy con gurations cached documents represented just bytes percentage false positives 
fact memory reduced cost increased false positive ratio 
describe bloom lters detail 
results design summary cache enhanced icp protocol implement prototype squid proxy 
trace driven simulations experiments benchmarks show new protocol reduces number inter proxy messages factor reduces network bandwidth consumption terms bytes transferred eliminates cpu overhead 
compared cache sharing experiments show protocol incurs little network tra increases cpu time depending remote cache hit ratio 
protocol achieves total cache hit ratio similar icp protocol time 
results indicate summary cache enhanced icp protocol scale large number proxies 
protocol potential signi cantly increase deployment web cache sharing reduce web tra internet 
implementation publicly available 
addition approach called cache digest beta test national cache hierarchy 
traces simulations study collected sets traces requests details see digital equipment web proxy server traces dec traces requests university california berkeley dial ip service ucb traces requests users computer science department university pisa italy logs get requests seen parent proxies regional network australia day log requests major parent proxies bo pb sd uc national web cache hierarchy national lab applied network research nlanr :10.1.1.153.5656:10.1.1.146.2304:10.1.1.1.2034
table lists various information traces including duration trace number requests number clients 
nite cache size total size bytes unique documents trace 
simulate cache sharing partition clients dec ucb groups assuming group proxy simulate cache sharing proxies 
roughly corresponds scenario branch department university proxy cache caches collaborate 
set number groups dec ucb traces respectively 
client put group mod group size equals group id traces contain get requests coming child proxies regional network 
assume requests going child proxies child proxies send cache misses parent proxy simulate cache sharing child proxies 
nlanr traces contain actual requests going major proxies simulate cache sharing 
simulation results reported assume cache size nite cache size 
results cache sizes similar 
simulations lru cache replacement algorithm restriction documents larger kb cached 
policy similar actual proxies 
simulate expiring documents age time live 
traces come modi ed time size document request request hits document modi ed time size changed count cache words assume traces dec ucb nlanr time jan march requests nite cache size max 
hit ratio max 
byte hit ratio client population client groups hit ratio cache sharing hit ratio cache sharing table statistics traces 
maximum cache hit ratio byte hit ratio achieved nite cache 
hit ratios calculated assuming cache size nite cache 
cache consistency mechanism perfect 
practice variety protocols web cache consistency 
bene ts cache sharing traces studied bene ts cache sharing 
results show sharing cache contents proxies signi cantly reduces tra internet 
table lists cache hit ratios cache sharing cache sharing assuming cache size nite cache size 
results show cases icp style simple cache sharing su ces tightly coordinated schemes global replacement necessary 
details :10.1.1.153.5656:10.1.1.146.2304
overhead icp internet cache protocol icp successful encouraging web cache sharing world scalable protocol 
relies query messages nd remote cache hits 
time proxy cache receives processes query message 
number collaborating proxies increases overhead quickly prohibitive 
measure overhead icp impact proxy performance run experiments wisconsin proxy benchmark 
benchmark designed submitted spec candidate industry standard benchmark 
consists collection client processes issue requests patterns observed real traces including request size distribution temporal locality collection server processes delay replies emulate internet latencies 
experiments performed sun sparc workstations connected mb ethernet 
workstations act proxy systems running squid mb cache space 
workstations run client processes processes 
client processes connect proxies 
client processes issue requests thinking time document sizes follow pareto distribution :10.1.1.146.2304
workstations act servers servers listening di erent ports 
server forks new process handling request process waits second sending reply simulate network latency 
experiment di erent cache hit ratios overhead icp varies cache ratio proxy 
benchmark allows cache hit ratio adjusted 
experiment client process issues requests total requests 
compare con gurations icp proxies collaborate icp proxies collaborate icp 
interested overhead requests issued clients overlap remote cache hit proxies 
worst case scenario icp results measure overhead protocol 
seeds random number generators icp icp experiments ensure comparable results heavy tailed document size distribution lead high variance 
relative di erences icp icp di erent settings seeds 
results set experiments 
measure hit ratio caches average latency seen clients user system cpu times consumed squid proxy network tra netstat collect number udp datagrams sent received tcp packets sent received total handled ethernet network interface 
third number roughly sum rst 
udp tra incurred icp query reply messages 
tcp include tra proxy servers proxy clients 
results shown table 
results show icp incurs considerable overhead number cooperating proxies low 
number udp messages increased factor 
due increase udp exp hit ratio client latency user cpu system cpu udp msgs tcp msgs total packets icp icp overhead sc icp overhead exp hit ratio client latency user cpu system cpu udp msgs tcp msgs total packets icp icp overhead sc icp overhead table overhead icp proxy case 
sc icp protocol introduced section explained 
experiments run times variance measurement listed parenthesis 
overhead row lists increase percentage icp measurement 
note synthetic experiments inter proxy cache hit 
messages total network tra seen proxies increased 
protocol processing increases user cpu time udp processing increases system cpu time 
clients average latency request increased 
degradations occur despite fact experiments performed high speed local area network 
results highlight dilemma faced cache administrators clear bene ts cache sharing shown table overhead icp high 
furthermore ort spent processing icp proportional total misses experienced proxies proportional number actual remote cache hits 
address problem propose new scalable protocol summary cache 
summary cache summary cache scheme proxy stores summary urls documents cached proxy 
user request misses local cache proxy checks stored summaries see requested document stored proxies 
appears proxy sends requests relevant proxies fetch document 
proxy sends request directly web server 
key scalability scheme summaries date accurate 
summary time cache directory changed update occur regular time intervals certain percentage cached documents re ected summary 
summary needs inclusive depicting superset documents stored cache avoid ecting total cache hit ratio 
kinds errors tolerated false misses document requested cached proxy summary fact 
case remote cache hit lost total hit ratio collection caches reduced 
false hits document requested cached proxy summary indicates proxy send query message proxy noti ed document cached 
case query message wasted 
errors ect total cache hit ratio tra ect correctness caching scheme 
example false hit result wrong document served 
general strive low false misses false misses increase tra internet goal cache sharing reduce tra internet 
third kind error remote stale hits occurs summary cache icp 
remote stale hit document cached proxy cached copy stale 
remote stale hits necessarily wasted orts delta compressions transfer new document :10.1.1.31.5701
contribute inter proxy communication 
factors limit scalability summary cache network overhead inter proxy tra memory required store summaries performance reasons summaries stored dram disk 
network overhead determined frequency summary updates number false hits remote hits 
memory requirement determined size individual summaries number cooperating proxies 
memory grows linearly number proxies important individual summaries small 
rst address update frequencies discuss various summary representations 
impact update delays investigate delaying update summaries percentage cached documents new re ected summaries reaches threshold 
threshold criteria chosen number false misses degradation total hit ratio tends proportional number documents re ected summary 
alternative update summaries regular time intervals 
false ratio approach derived converting intervals thresholds 
request rate typical cache ratio calculate new documents enter cache time interval percentage cached documents 
various traces simulate total cache hit ratio threshold cached documents 
ignore issue summary representations assume summary copy cache directory list document urls 
results shown 
top line gure hit ratio update delay 
second line shows hit ratio update delay increases 
di erence lines false ratio 
bottom curves show ratio remote stale hits ratio false hits delay introduce false hits documents deleted cache may summary 
results show nlanr trace data degradation total cache hit ratio increases linearly update threshold 
threshold relative reductions hit ratio ucb dec 
remote stale hit ratio hardly ected update delay 
false hit ratio small increase linearly threshold 
nlanr trace appears clients simultaneously sending requests exact document bo proxy collection 
simulate proxies results similar traces 
bo included simulate delay user requests hit ratio drops respectively 
hit ratio threshold roughly corresponds user requests 
believe sharp drop hit ratio due anomaly nlanr trace 
results demonstrate practice delay threshold updating summaries results tolerable degradation cache hit ratios 
traces threshold values translate roughly user requests updates average update frequency roughly minutes hour 
bandwidth consumption updates low 
summary representations second issue ecting scalability size summary 
summaries need stored main memory memory lookups faster disk arms typically bottlenecks proxy caches 
dram prices continue drop need careful design memory requirement grows linearly summaries take dram away memory cache hot documents 
rst investigate naive summary representations exact directory server name 
approach summary essentially list urls cached documents url represented byte md signature 
approach summary collection web server names urls cached documents 
average ratio di erent urls di erent web server names observed traces server name approach cut memory requirement factor 
simulate approaches traces nd satisfactory 
results summary representation discussed detail section 
exact directory approach consumes memory 
practice proxies typically gb gb cache space 
assume proxies gb average le size kb exact directory summary consume gb kb mb main memory proxy 
server name approach consuming memory generates false hits signi cantly increase network tra requirements ideal summary representation small size low false hit ratio 
tries solution old technique called bloom lters 
bloom filters math bloom lter method representing set fa ang elements called keys support membership queries 
invented burton bloom proposed web context marais bharat mechanism identifying pages associated comments stored server 
stale hit exact dir icp false hit hit ratio threshold threshold threshold threshold threshold graph dec graph ucb graph nlanr graph graph impact summary update delays total cache hit ratio remote stale hit ratio false hit ratio 
cache size nite cache size 
element bit vector positive situation kn kn bits bloom filter hash functions 
idea illustrated allocate vector bits initially set choose independent hash functions hk range mg 
element bits positions hk inv set 
particular bit multiple times 
query check bits positions hk 
certainly set conjecture set certain probability wrong 
called false positive 
parameters chosen probability false positive false hit acceptable 
salient feature bloom lters clear tradeo probability false positive 
observe inserting keys table size probability particular bit exactly kn probability false right hand side minimized ln case optimal probability false positive reduces exponentially increases 
practice integer chose value optimal reduce computational overhead 
graph shows probability false positive function number bits allocated entry ratio curve case hash functions 
curve optimum number hash functions 
scale logarithmic straight line observed corresponds exponential decrease 
clear bloom lters require little storage key slight risk false positives 
instance bit array times larger probability ofa false positive hash functions optimum case hash functions 
probability false positives easily decreased allocating memory 
context proxy maintains local bloom lter represent cached documents changes set supported 
done maintaining location bit array count number times bit set number elements hashed hash functions 
counts initially 
key case url document inserted deleted counts hk incremented decremented accordingly 
count changes corresponding bits entry probability false positives log scale 
top curve hash functions 
bottom curve optimum integral number hash functions 
bit turned 
count changes corresponding bit turned local bloom lter re ects correctly current directory 
practice allocating bits count amply su cient analysis see :10.1.1.153.5656:10.1.1.146.2304
bloom filters summaries bloom lters provide straightforward mechanism build summaries 
proxy builds bloom lter list urls cached documents sends bit array plus speci cation hash functions proxies 
updating summary proxy specify bits bit array send array whichever smaller 
advantage bloom lters provide tradeo memory requirement false positive ratio induces false hits 
proxies want memory summaries slight increase inter proxy tra experiment con gurations bloom lter summaries number bits times average number documents cache ratio called load factor 
average number documents calculated dividing cache size average document size 
con gurations hash functions number hash functions optimal choice con guration su ces demonstrate performance bloom lters 
hash functions built rst calculating md signature url yields bits groups bits 
md cryptographic message digest algorithm hashes arbitrary length strings bits 
select known properties relatively fast implementation 
performance summary representations exact directory server name shown figures 
show total cache hit ratios show false hit ratios 
note axis log scale 
bloom lter summaries virtually cache hit ratio exact directory approach slightly higher false hit ratio bit array small 
higher false hit ratio 
higher cache hit ratio probably false hits help avoid false misses 
shows total number inter proxy network messages including number summary updates number query messages includes remote cache hits false hits remote stale hits 
note axis 
comparison list number messages incurred icp trace 
messages assumed uni cast messages 
gure normalizes number messages number requests trace 
exact directory bloom lter summaries perform server name icp generate messages 
bloom lters tradeo bit array size number messages expected 
false hit ratio small false hits longer dominant contributor inter proxy messages 
remote cache hits remote stale hits dominant 
di erence terms network messages load factor load factor small 
compared icp bloom lter summaries reduce number messages factor 
shows estimated total size inter proxy network messages bytes 
estimate size update messages tend larger query messages 
average size query messages icp approaches assumed bytes header bytes average url 
size summary updates exact directory server name assumed bytes header bytes change 
size summary updates bloom ter summaries estimated bytes header see section plus bytes bit ip 
results show terms message bytes bloom lter summaries improve icp 
words summary cache uses occasional bursts large messages avoid continuous stream small messages 
looking cpu overhead network interface packets tables sc icp stands summary cache approach see tradeo table shows memory requirement proxy summary representations terms percentage proxy cache size dec proxies nlanr proxies 
data available :10.1.1.153.5656:10.1.1.146.2304
exact dir bloom filter bloom filter bloom filter server hit ratio threshold threshold threshold threshold threshold graph dec graph ucb graph nlanr graph graph total hit ratio di erent summary representations 
exact dir bloom filter bloom filter bloom filter server ratio threshold threshold threshold threshold threshold graph dec graph ucb graph nlanr graph graph ratio false hits di erent summary representations 
note axis log scale 
approach dec nlanr exact dir server name bloom lter bloom lter bloom lter table storage requirement terms percentage proxy cache size summary representations 
bloom lter con gurations consume memory exact directory perform similarly aspects 
bloom lter summary load factor similar smaller memory requirement server name approach fewer false hits network messages 
table shows approaches memory requirement grows linearly number proxies 
considering results see bloom lter summaries provide best performance terms low network overhead low memory requirements 
recommend con guration summary cache approach 
update threshold avoid signi cant reduction total cache hit ratio 
time update approach chosen time interval chosen percentage new documents icp bloom filter exact dir bloom filter bloom filter server msgs request threshold threshold threshold threshold threshold graph dec graph ucb graph nlanr graph graph messages user request di erent summary forms 
note axis log scale 
msgs size request icp threshold bloom filter threshold exact dir bloom filter threshold bloom filter threshold server threshold graph dec graph ucb graph nlanr graph graph bytes network messages user request di erent summary forms 

proxy broadcast changes entire bit array smaller proxies fetch updates 
summary form bloom lter 
load factor works proxies lower raise depending memory network tra concerns 
load factor hash functions 
data provided making decisions :10.1.1.153.5656:10.1.1.146.2304
hash functions recommend disjoint groups bits bit md signature url 
bits needed calculate md signature url concatenated 
practice computational overhead md negligible compared user system cpu overhead incurred caching documents see section 
scalability simulations done proxies easily extrapolate results 
example assume proxies gb cache cooperate 
proxy stores average web pages 
bloom lter memory needed represent pages mb load factor 
proxy needs mb represent summaries plus mb represent counters 
messages consist update messages false hits remote cache hits remote stale hits 
threshold corresponds requests updates update consisting messages number update messages request 
false hit ratios load factor hash functions 
probability false positive summary 
counting messages introduced remote cache hits remote stale hits relatively stable number proxies overhead introduced protocol messages request proxies 
messages update message large order hundreds kb 
fortunately update messages transferred non reliable multicast scheme 
simulations predict keeping overhead low scheme reduces total hit ratio compared theoretical hit ratio icp 
traces large enable meaningful simulation proxies formed simulations larger number proxies results verify back envelope calculations 
con dent summary cache scales 
implementation experiments simulation results propose summary cache enhanced internet cache protocol optimization icp 
protocol implemented prototype built top squid prototype publicly available 
approach implemented squid 
summary cache enhanced icp implementation assumes small delay thresholds updates summaries sending di erences 
add new opcode icp version icp op stands directory update messages 
update message additional header follows regular icp header consists bits function num bits function bits bits bitarray size bits number updates 
header completely speci es hash functions lter 
function num hashing functions 
functions calculated rst bits md signature url function bits modulo bits bitarray size 
bits bits generated computing md signature url concatenated 
header followed list bit integers 
signi cant bit integer speci es bit set rest bits specify index bit needs changed 
design due concern message speci es bits loss previous update messages cascading ects 
design enables messages sent unreliable multicast protocol 
furthermore update message carries header enabling receivers verify various information 
modify squid implement protocol 
default load factor implementation default number hash functions 
additional bit array added data structure neighbor 
array rst summary update message received neighbor 
proxy allocates array counters maintaining local copy bloom lter integer array remember lter changes 
update messages sent outgoing icp connection neighbors 
icp uses udp order message ip packet deviate recommendation section sending updates changes ll ip packet 
implementation leverages squid built support detect failure recovery neighbor proxies failed neighbor bit array recovers 
performance experiments run experiments prototype 
rst experiment repeats test section results included table section title sc icp 
improved protocol reduces udp tra network tra cpu times client latencies similar icp 
second experiment replays rst requests trace 
collection client processes running workstations client process emulate set real life clients issuing web requests 
client processes workstation connect proxy server 
request url carries size request trace le server replies speci ed number bytes 
rest con guration similar experiments section 
di erent synthetic benchmark trace contains noticeable number remote hits 
results listed table 
results show enhanced icp protocol reduces network tra cpu overhead signi cantly slightly decreasing total hit ratio 
enhanced icp protocol lowers client latency slightly compared icp case increases cpu time 
reduction client latency due remote cache hits 
separate experiments show cpu time increase due servicing remote hits cpu time increase due md calculation 
experimented ways replaying trace results similar :10.1.1.153.5656:10.1.1.146.2304
exp hit ratio client latency user cpu system cpu udp tra tcp tra total packets icp icp overhead sc icp overhead table performance icp summary cache trace 
results indicate summary cache enhanced icp solves overhead problem icp requires minimal changes enables scalable web cache sharing wide area network 
related web caching active research area 
studies web client access characteristics web caching algorithms web cache consistency :10.1.1.31.5709
study address caching algorithms cache consistency maintenance leverages existing results 
new proposals web cache sharing protocols 
cache array routing protocol divides url space array loosely coupled proxy servers lets proxy cache documents urls hashed 
advantage approach eliminates duplicate copies documents 
clear performs wide area cache sharing proxies may distributed regional network 
project suggests local directories facilitate nding documents caches updating directories asynchronously 
existing publications project address issues update frequency memory consumption 
proxies built top tightly coupled cluster workstations various hashing partitioning schemes utilize memory disks cluster relevant methods appropriate wide area networks :10.1.1.1.2034
study partially motivated existing proposal called directory server 
approach uses central server keep track cache directories proxies lets proxies query server cache hits proxies 
drawback approach central server easily bottleneck 
advantage little communication needed sibling proxies 
studies focus web cache hierarchies cache sharing 
hierarchical web caching rst proposed harvest project 
adaptive web caching proposed ers adaptive caching infrastructure document dissemination web 
address issue summary cache easily applied cache hierarchies 
mechanism communicate contents parent caches child proxies eliminate icp queries parent caches 
inspection traces shows child parent icp queries signi cant portion messages parent proxy process 
applying summary cache result signi cant reduction queries associated overheads 
propose summary cache enhanced icp scalable wide area web cache sharing protocol 
simulations measurements demonstrate bene ts web proxy cache sharing illustrate overhead current cache sharing protocols show summary cache approach substantially reduces overhead 
study key aspects approach ects delayed updates succinct representation summaries 
solution bloom lter summaries update delay thresholds low demand memory bandwidth achieves hit ratio similar original icp protocol 
particular trace driven simulations show compared icp new protocol reduces number inter proxy protocol messages factor reduces bandwidth consumption incurring degradation cache hit ratios 
simulation analysis demonstrate scalability protocol 
prototype implementation squid 
synthetic trace replay experiments show addition network tra reduction new protocol reduces cpu overhead improves client latency 
prototype implementation publicly available 
remains 
plan investigate impact protocol parent child proxy cooperations optimal hierarchy con guration workload 
plan study application summary cache various web cache consistency protocols 
summary cache individual proxy implementation speed cache lookup quantify ect modifying proxy implementation 
luigi rizzo provided traces study possible 
indebted wisconsin wind tunnel research group providing resources simulation 
research bene ted discussions je mogul monika henzinger bart miller 
anonymous referees provided valuable comments greatly improved 
almeida pei cao 
wisconsin proxy benchmark 
www cs wisc edu cao html 
kirby beck 
tennessee cache box project 
nd web caching workshop boulder colorado june 
ircache nlanr net cache workshop 
burton bloom 
space time trade hash coding allowable errors 
communications acm pages july 
pei cao sandy irani 
cost aware www proxy caching algorithms 
proceedings usenix symposium internet technology systems december 
crovella bestavros :10.1.1.146.2304
self wide web tra evidence possible causes 
proc sigmetrics conference modeling computer systems philadelphia may 
danzig hall schwartz 
case caching le objects inside internetworks 
proceedings sigcomm pages 
bradley david michael feeley 
measured access characteristics world wide web client proxy caches 
proceedings usenix symposium internet technology systems december 
li fan pei cao almeida 
prototype implementation summary cache enhanced icp squid 
www cs wisc edu cao sc icp html february 
li fan pei cao almeida andrei broder :10.1.1.153.5656:10.1.1.146.2304
summary cache scalable wide area web cache sharing protocol 
technical report technical report computer science department university wisconsin madison february 
url www cs wisc edu cao papers html 
armando fox steven gribble chawathe eric brewer paul gauthier :10.1.1.1.2034
cluster scalable network service 
proceedings sosp october 
gadde rabinovich chase 
reduce reuse recycle approach building large internet caches 
proceedings sixth workshop hot topics operating systems hotos vi may 
available www research att com 
steven gribble eric brewer 
ucb home ip traces 
available www cs berkeley edu gribble traces index html june 
christian grimm 
dfn cache service win 
nd web caching workshop boulder colorado june 
www cache dfn de 
harvest group 
harvest information discovery access system 
excalibur usc edu 
group 
cooperative caches worldwide web 
www sor inria fr projects 
james gwertzman margo seltzer :10.1.1.153.5656
world wide web cache consistency 
proceedings usenix technical conference san diego ca january 
van jacobson 
kill internet 
sig comm middleware workshop august 
url ftp ftp ee gov talks vj web ame ps 
nation wide caching project korea 
nd web caching workshop boulder colorado june 
ircache nlanr net cache workshop 
balachander krishnamurthy craig ellis 
study piggyback cache validation proxy caches world wide web 
proceedings usenix symposium internet technology systems december 
kroeger mogul :10.1.1.1.2034
digital web proxy traces 
available url ftp ftp digital com pub dec traces proxy html august 
thomas kroeger darrell long je rey mogul 
exploring bounds web latency reduction caching prefetching 
proceedings usenix symposium internet technology systems december 
liu pei cao 
maintaining strong cache consistency world wide web 
th international conference distributed computing systems may 
rizzo vicisano 
replacement policies proxy cache 
technical report universita di pisa italy october 
url www iet unipi luigi caching ps gz 
carlos kathy richardson dirk grunwald 
performance issues enterprise level web proxies 
proceedings acm sigmetrics international conference measurement modelling computer systems pages june 
marais bharat 
supporting cooperative personal sur ng desktop assistant 
proceedings acm uist october 
available line ftp ftp digital com pub dec src publications marais uist pdf 
alfred menezes paul van oorschot scott vanstone 
handbook applied cryptography 
crc press 
je rey mogul fred douglis anja feldmann balachander krishnamurthy :10.1.1.31.5701
potential bene ts delta encoding data compression 
proceedings acm sigcomm august 
available www research att com douglis 
national lab applied network research 
sanitized access log 
available ftp ircache nlanr net traces july 
con guration les proxies ircache nlanr net cache con guration 
alex 
cache digest 
squid nlanr net squid april 
vinod keith ross 
cache array routing protocol 
ircache nlanr net cache icp carp txt 
duane wessels kim cla internet cache protocol icp version 
ds internic net rfc rfc txt 
williams abrams abdulla fox 
removal policies network caches worldwide web documents 
proceedings acm sig comm august 
url ei cs vt edu succeed sigcomm 
lixia zhang sally floyd van jacobson 
adaptive web caching 
nd web caching workshop boulder colorado june 
ircache nlanr net cache workshop papers floyd ps 
