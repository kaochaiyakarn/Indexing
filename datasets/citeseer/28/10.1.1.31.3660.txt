open agent architecture building distributed software systems david martin adam cheyer douglas moran arti cial intelligence center sri international avenue menlo park ca usa cheyer ai sri com abbreviated title open agent architecture open agent architecture oaa developed years sri international possible software services provided operative orts distributed collections autonomous agents 
communication cooperation agents brokered facilitators sible matching requests users agents descriptions capabilities agents 
generally required user agent know iden locations number agents involved satisfying request 
oaa structured minimize ort involved creating new agents wrapping legacy applications written various languages operating various platforms encourage reuse existing agents allow dynamism exibility makeup agent communities 
distinguishing features oaa compared related include extreme exibility facilitator delegation complex goals triggers data management requests agent provision multimodal user interfaces built support including user privileged member agent community 
explains structure elements agent systems constructed oaa 
advantage disadvantage programmer need refer speci process computation framework provide programmatic control doing cases practical 
agent software engineering research communities approached distributed computing casting problem modeling communication cooperation autonomous entities 
ective communication independent actors requires components transport mechanism carrying messages asynchronous fashion interaction protocol de ning various types communication interchange social implications instance response expected question content language permitting expression interpretation utterances agreed set shared vocabulary meaning concepts called ontology 
mechanisms permit richer style interaction participants expressed distributed object rpc model blackboard architecture centralized exchange approach 
widely foundation technology agent software engineering knowledge query manipulation language kqml labrou finin finin :10.1.1.38.7779:10.1.1.125.3310
kqml speci es interaction protocol conjunction knowledge interchange format kif genesereth fikes content language ad hoc formalized ontologies 
kqml introduced symbolic performatives capture information purpose communication place conversation 
creating standardized representation conversational interactions important aspect multiagent cooperation kqml limited reliance xed core set atomic performatives inevitable di culty arriving just right set capable expressing kind interaction service request 
uential approach stronger assumptions knowledge processing individual agents structuring agents activities concepts belief desire intention bdi rao george 
agents record data changes disk read log le replicate changes shared environment 
domain speci code interpreting travel planning dialog cleanly separated speech natural language pen recognition database map user interface agents 
components reused modi cation add multimodal map capabilities applications activities crisis management multi robot control tools video analyst 
related agent systems shown promise exible fault tolerant distributed problem solving 
foundational agent technology focused interagent communication protocols finin patterns conversation agent interactions fipa basic facilitation capabilities including agent name servers types registry services brokers matchmakers sycara :10.1.1.125.3310
insu cient space cover gamut agent architectures restrict mentioning projects helped evolve notion facilitation 
genesereth emphasized role facilitator genesereth singh genesereth genesereth singh describes facilitator logical reasoning 
facilitator shares emphasis content routing synthesis complex delegation plans go far oaa allowing service requester uence strategies facilitator 
similarly infosleuth system nodine unruh employs matchmaking agents having ability reason deductively expressions requirements requesters match advertised capabilities service providers 
insu cient space cover gamut agent architectures restrict mentioning projects helped evolve notion facilitation 
genesereth emphasized role facilitator genesereth singh genesereth genesereth singh describes facilitator logical reasoning 
facilitator shares emphasis content routing synthesis complex delegation plans go far oaa allowing service requester uence strategies facilitator 
similarly infosleuth system nodine unruh employs matchmaking agents having ability reason deductively expressions requirements requesters match advertised capabilities service providers 
kqml labrou finin finin provides capability de nition performatives facilitation performatives broker :10.1.1.38.7779:10.1.1.125.3310:10.1.1.125.3310
performatives may suitable structuring basic interactions players facilitated system noted provide communication protocol 
speci strategies employed facilitator means advising facilitator selecting strategy scope kqml speci cations 
sycara delineate concepts matchmaking brokering facilitation useful way explore tradeo inherent approaches 
nd brokered facilitated system exhibit dramatically better performance matchmaking 
