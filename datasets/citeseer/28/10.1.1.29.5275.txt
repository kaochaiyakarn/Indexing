characterizations disjunctive founded semantics confluent calculi iterated gcwa stefan brass universitat hannover institut fur informatik lange hannover germany mail sb informatik uni hannover de jurgen dix universitat koblenz institut fur informatik rheinau koblenz germany mail dix informatik uni koblenz de 
brass dix introduced semantics wfs general disjunctive logic programs 
interesting feature approach semantically proof theoretically founded 
program phi associated normalform res phi called residual program non trivial bottom construction fixpoints monotonic operators 
show original calculus consisting simple transformations strong appealing property confluent terminating 
means transformations applied order arrive irreducible program transformation applicable program uniquely determined 
key words logic programming non monotonic reasoning disjunctive semantics 
cr codes 
success prolog major programming languages artificial intelligence suggests extensions horn clauses general clauses negation disjunction useful knowledge representation reasoning 
years done logic programming extend semantics different stefan brass jurgen dix forms negation failure non disjunctive disjunctive semantics 
interrelationships non monotonic logics default logic dl circumscription circ autoepistemic logic ael semantics logic programs discovered years :10.1.1.50.5907
eiter gottlob shown disjunctive semantics strictly expressive non disjunctive semantics may better suited knowledge representation tasks see semantics kr :10.1.1.13.4506
main problems today quite understanding non disjunctive semantics knowledge disjunctive semantics quite limited 
main competing approaches wellfounded semantics wfs weak stable semantics stable strong exist extensions wfs approximate stable 
unfortunately semantics stable straightforward extension disjunctive programs wfs exist canonical disjunctive version 
cr codes 
success prolog major programming languages artificial intelligence suggests extensions horn clauses general clauses negation disjunction useful knowledge representation reasoning 
years done logic programming extend semantics different stefan brass jurgen dix forms negation failure non disjunctive disjunctive semantics 
interrelationships non monotonic logics default logic dl circumscription circ autoepistemic logic ael semantics logic programs discovered years :10.1.1.50.5907
eiter gottlob shown disjunctive semantics strictly expressive non disjunctive semantics may better suited knowledge representation tasks see semantics kr :10.1.1.13.4506
main problems today quite understanding non disjunctive semantics knowledge disjunctive semantics quite limited 
main competing approaches wellfounded semantics wfs weak stable semantics stable strong exist extensions wfs approximate stable 
unfortunately semantics stable straightforward extension disjunctive programs wfs exist canonical disjunctive version 
claim wfs counterpart wfs 
main problems today quite understanding non disjunctive semantics knowledge disjunctive semantics quite limited 
main competing approaches wellfounded semantics wfs weak stable semantics stable strong exist extensions wfs approximate stable 
unfortunately semantics stable straightforward extension disjunctive programs wfs exist canonical disjunctive version 
claim wfs counterpart wfs 
novelty approach exclusively declarative przymusinski stationary static approach exclusively procedural approaches minker group :10.1.1.31.3555
introduced calculus program transformations :10.1.1.36.5106
declarative express precise semantical properties partial evaluation 
procedural applied program transform 
defined particular bottom procedure operators enabled associate normalform res phi program phi 
main competing approaches wellfounded semantics wfs weak stable semantics stable strong exist extensions wfs approximate stable 
unfortunately semantics stable straightforward extension disjunctive programs wfs exist canonical disjunctive version 
claim wfs counterpart wfs 
novelty approach exclusively declarative przymusinski stationary static approach exclusively procedural approaches minker group :10.1.1.31.3555
introduced calculus program transformations :10.1.1.36.5106
declarative express precise semantical properties partial evaluation 
procedural applied program transform 
defined particular bottom procedure operators enabled associate normalform res phi program phi 
show construction avoided normalform obtained just applying transformations directly constitute confluent calculus 
completeness result constructive procedure hold propositional case modify construction normalform res phi departing constructive methods 
interested reader referred extend ideas order case introducing constraint disjunctive programs 
structured follows 
introduce notation terminology section 
section repeat definition semantics wfs weakest semantics satisfying certain conditions :10.1.1.36.5106
section prove main theorems strong result set transformations confluent terminating 
proof trivial uses heavily previous results particular normalform program introduced earlier 
section consider semantics appropriate calculi 
particular consider stable semantics stable semantics defined restricted classes programs wfs nondisjunctive gcwa positive disjunctive programs 
definition positive negative reduction 
semantics satisfies positive resp 
negative reduction iff invariant transformations replace rule phi 
delete rule rule true example apply positive reduction obtain phi negative reduction apply twice obtain phi phi phi call semantics weaker semantics iff phi phi implies phi 
shown exists weakest semantics invariant natural transformations discussed section :10.1.1.36.5106
confluence tex stefan brass jurgen dix theorem wfs 
exists weakest semantics invariant natural transformations introduced section 
words exists weakest semantics satisfies properties gppe elimination tautologies non minimal rules positive negative reduction 
semantics consistent derive literal negation closed logical consequences set consisting pure disjunctions 
help particular normalform res phi program phi 
definition normalform somewhat complicated refer reader detailed exposition 
complete definition proof main theorem 
fact prove calculus confluent construction obsolete proof theorem 
state definition res phi main theorem definition residual program :10.1.1.30.5669
residual program datalog program phi res phi phi 
theorem computation wfs wrt phi 
res phi 
phi true res phi res phi theorem especially important 
confluence calculus certainly strongest property 
worth mentioning implementation confluence calculus efficient simply certain ordering transformations fixed advance 
currently experimenting comparing fixed bottom implementation confluence calculus 
equivalence semantics construction minimal model reasoning interesting opens way apply methods area efficient implementations 
particular niemela suggested efficient methods computing minimal models positive disjunctive programs :10.1.1.41.3465
characterization methods immediately implement wfs note need consider positive disjunctive programs definition 
course open questions left research 
important property approach applicability semantics stronger wfs 
transformation phi 
confluence tex stefan brass jurgen dix table overview semantics properties 
properties logic programming semantics semantics domain taut 
gppe non min 
clark comp norm 
ffl ffl wfs norm :10.1.1.121.6788
ffl ffl ffl wfs norm 
ffl ffl gcwa pos 
ffl ffl triv 
ffl wgcwa pos 
ffl ffl triv 
ffl wgcwa pos 
ffl triv 
dis 
ffl ffl stable dis :10.1.1.49.9332
ffl ffl ffl ffl strong wfs dis :10.1.1.31.3555
stationary dis :10.1.1.31.3555
ffl ffl ffl static dis :10.1.1.31.3555
ffl ffl ffl wfs dis 
ffl wgcwa pos 
ffl triv 
dis 
ffl ffl stable dis :10.1.1.49.9332
ffl ffl ffl ffl strong wfs dis :10.1.1.31.3555
stationary dis :10.1.1.31.3555
ffl ffl ffl static dis :10.1.1.31.3555
ffl ffl ffl wfs dis 
ffl ffl ffl reg sem dis 
ffl triv 
dis 
ffl ffl stable dis :10.1.1.49.9332
ffl ffl ffl ffl strong wfs dis :10.1.1.31.3555
stationary dis :10.1.1.31.3555
ffl ffl ffl static dis :10.1.1.31.3555
ffl ffl ffl wfs dis 
ffl ffl ffl reg sem dis 
ffl ffl ffl decide queries fully computing semantics 
dis 
ffl ffl stable dis :10.1.1.49.9332
ffl ffl ffl ffl strong wfs dis :10.1.1.31.3555
stationary dis :10.1.1.31.3555
ffl ffl ffl static dis :10.1.1.31.3555
ffl ffl ffl wfs dis 
ffl ffl ffl reg sem dis 
ffl ffl ffl decide queries fully computing semantics 
putting top res phi possible obtain stronger semantics obtain implement stable 
