online reconfiguration replicated databases group communication kemme school computer science mcgill university montreal kemme cs mcgill ca alberto di universit di univ department computer science university bologna cs unibo years replica control protocols developed take advantage ordering reliability semantics group communication primitives simplify database system design improve performance 
current solutions able mask site failures effectively unable cope recovery failed sites merging partitions joining new sites 
addresses important issue 
proposes efficient solutions online system reconfiguration providing new sites current state database interrupting transaction processing rest system 
furthermore analyzes impact cascading argues handled elegant way extended forms group communication 

replica control mechanisms classified eager updates coordinated transactions commit lazy updates propagated transactions commit 
eager replication easily guarantee fault tolerant straightforward way believe fair say eager solutions limited practical impact 
database designers believe eager replication complex poor performance scale 
commercial database systems primarily lazy strategies favoring performance correctness solutions guarantee data consistency fault tolerance 
motivated gap theory practice proposals replicated databases propose new approaches exploit rich semantics group communication systems implement eager style replica control :10.1.1.21.6038:10.1.1.128.9931:10.1.1.56.3906:10.1.1.37.5
solutions propagate updates transactions total order multicast delivers messages sites order 
database uses order pattern follow case conflicts conflicting updates serialized order group communication system delivered 
simulation studies real implementation proven superior performance approach compared traditional eager replica control mechanisms :10.1.1.56.3906:10.1.1.37.5
proposed solutions able handle effectively site communication failures 
commercial database systems primarily lazy strategies favoring performance correctness solutions guarantee data consistency fault tolerance 
motivated gap theory practice proposals replicated databases propose new approaches exploit rich semantics group communication systems implement eager style replica control :10.1.1.21.6038:10.1.1.128.9931:10.1.1.56.3906:10.1.1.37.5
solutions propagate updates transactions total order multicast delivers messages sites order 
database uses order pattern follow case conflicts conflicting updates serialized order group communication system delivered 
simulation studies real implementation proven superior performance approach compared traditional eager replica control mechanisms :10.1.1.56.3906:10.1.1.37.5
proposed solutions able handle effectively site communication failures 
accomplished primarily virtual synchrony properties underlying group communication system notifies failures way surviving sites receive exactly set messages informed failure 
missing various proposals failed sites rejoin system recovery partitions merge repairs new sites added running system 
reconfiguration necessary number sites increases far complex task necessary number sites decreases 
replica control protocols section total order multicast sites deliver multicast messages deliver order 
furthermore shall assume uniform reliable multicast guarantee 
consecutive primary views sites installed member crashes installs non primary view view delivers message delivers installing words messages delivered constitute subset delivered note specify messages delivered minority views 
discuss section members minority views behave failed ignoring delivered messages executing transactions 
adaptation uniformity partitionable systems happens suffice replica control protocols section easily implemented minimal changes existing group communication systems :10.1.1.110.3165

replica control replicated database system consists set sites 
site runs instance database management system maintains copy database 
site group member 
transaction sequence read write operations objects 
replication read write strategy transaction performs read operations local copy write operations applied copies 
concurrent transactions conflicting operations accessing object write isolated 
copy serializability correctness criteria sites execute conflicting operations order exists serial execution transactions order conflicting operations 
various protocols group communication primitives proposed :10.1.1.21.6038:10.1.1.128.9931:10.1.1.56.3906:10.1.1.37.5
vary number messages transaction ordering mechanisms fifo order total order concurrency control 
simplicity describe reconfiguration context protocols 
chosen protocol simple describe exist various protocols follow similar execution communication patterns message transaction total order multicast protocols shown performance :10.1.1.37.5
reconfiguration associated replica concurrency control schemes similar 
copy serializability correctness criteria sites execute conflicting operations order exists serial execution transactions order conflicting operations 
various protocols group communication primitives proposed :10.1.1.21.6038:10.1.1.128.9931:10.1.1.56.3906:10.1.1.37.5
vary number messages transaction ordering mechanisms fifo order total order concurrency control 
simplicity describe reconfiguration context protocols 
chosen protocol simple describe exist various protocols follow similar execution communication patterns message transaction total order multicast protocols shown performance :10.1.1.37.5
reconfiguration associated replica concurrency control schemes similar 
replica control protocol consider described 
assume objects tagged version numbers 
transaction submitted site system executed phases 
regard data transfer propose protocols depict main alternatives database supported data transfer important issues consider determining data transferred exploiting information available database version numbers log maintaining additional information recovery allowing high concurrency provide final statement data transfer solutions choose 
specific characteristics underlying database system 
features provided implemented integrated database system 
difficult pay 
efficiency solutions depends parameters size database percentage data items updated recovering site failed planning explore issues real implementation postgres :10.1.1.37.5
making data transfer task database introduces problems regard fault tolerance 
reconfiguration atomic operation simple virtual synchrony reflect sufficiently state different sites system 
evs contrast promotes programming style notion date member depends membership primary subview primary view 
evs able encapsulate reconfiguration process database system receives realistic picture happening system 
madison wisconsin 
kemme 
database replication clusters workstations 
phd thesis eth zurich 
kemme alonso :10.1.1.37.5
don lazy consistent postgres new way implement database replication 
proc 
vldb cairo egypt 
kemme alonso 
pedone guerraoui schiper 
exploiting atomic broadcast replicated databases 
proc 
euro par southampton england 
powell :10.1.1.37.5
group communication special issue 
communications acm april 
pu 
replica control distributed systems asynchronous approach 
