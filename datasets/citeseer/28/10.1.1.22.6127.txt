proceedings th international workshop logic programming manchester uk june pp 

logical semantics language databases partial complete tuples sets extended mengchi liu department computer science university regina regina saskatchewan canada email cs uregina ca discuss semantics complex object databases partial complete tuples sets 
redefine notion database reflect existence partial complete tuples sets study integrate partial information tuples sets spread database check consistency 
deductive language rlog ii complex objects null unknown inconsistent values relationlog 
main novel feature language supports null extended nested relational algebra operations directly importantly recursively 
deductive language rlog ii complex objects null unknown inconsistent values relationlog 
main novel feature language supports null extended nested relational algebra operations directly importantly recursively 
provides firm logical foundation nested relational complex object databases partial complete tuples sets solves open problem supporting recursion generic null unknown inconsistent values deductive databases 
complex object databases nested tuples sets represent real world objects 
relation set tuples database tuple relations :10.1.1.99.3180
various reasons information real world objects database may incomplete 
tuples sets partial incomplete complete complex object databases 
understood tuple partial null unknown attribute values 
complete 
applications may want generic null specific ones 
fact commercial dbmss support generic null 
purpose twofold 
target general problem combining partial complete tuples partial sets partial complete sets complete tuples uniform framework study define semantics database allow partial complete tuples sets 
key feature notions equivalence equality special values :10.1.1.21.4143
null unknown 
inconsistent introduced 
second propose deductive language complex objects null unknown 
inconsistent 
second propose deductive language complex objects null unknown 
inconsistent 
values called rlog ii relationlog 
ii means proposed language successor relationlog added 
supports null extended nested relational algebra operations defined directly importantly recursively powerful logic languages bancilhon calculus lps hilog col ldl relationlog :10.1.1.21.4143
stratification spirit researchers 
define intended semantics stratified program minimal supported model program computed bottom finite sequence fixpoints 
provides firm logical foundation nested relational complex object databases partial complete tuples sets solves open problem supporting recursion generic null unknown inconsistent values deductive databases 
see example 
example bob parent pat child null unknown database bob parent happens pat child 
words nulls general different considered equal 
equivalent terms information carry 
distinction turns powerful 
enables represent null extended nested relational algebra operations defined directly importantly recursively problem discussed :10.1.1.21.4143
discuss issue section 
study integrate partial information real world objects complete information 
objects 
compatible tuples single valued attribute compatible 
querying database partial complete tuples sets equivalent querying compaction 
rlog ii deductive language section introduce deductive language rlog ii complex objects partial complete tuple set information 
generalizes extends relationlog introducing 
complex object oriented relationlog predicate oriented 
supports null extended nested relational algebra operations defined directly importantly recursively :10.1.1.21.4143
assume existence set variables variables examples 
introduce syntax rlog ii language 
terms defined recursively follows constant atomic term atomic term partial set term tuple term depending context variable atomic term complete set term tuple term depending context 
distinct terms ht partial set term distinct terms partial set terms constructed partial set terms ft complete set term terms distinct attribute names tuple term 
literal positive negative literal 
rule form head atom body conjunction literals 
program finite set rules 
example database example equivalent program name sam age degrees hm sci name bob age degrees fb sc ph dg name ann age degrees fm name age degrees di name age variables 
example shows nested relations special objects defined extended relational algebra operations unnest nest gamma relations taken :10.1.1.21.4143
rlog ii rules represent operations 
nesting hx unnesting hx union hx hx hx hx intersection hx hx hx difference hx hx hx join class children days class hx children days program shows support recursion generic null unknown inconsistent values rlog ii 


proceedings international conference large data bases pages los angeles california usa 
morgan kaufmann publishers kuper 
logic programming sets 
computer system sciences 
mark levene george :10.1.1.21.4143
semantics null extended nested relations 
acm tods 
libkin 
relational algebra complex objects partial information 
