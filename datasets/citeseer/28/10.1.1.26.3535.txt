relating defeasible normal logic programming transformation properties carlos urgen dix frieder stolzenburg simari informatik universit koblenz landau institut ur informatik rheinau koblenz mail uni koblenz de www www uni koblenz de fb relating defeasible normal logic programming transformation properties carlos iv cs edu ar urgen dix dix uni koblenz de frieder stolzenburg uni koblenz de ricardo simari grs cs edu ar univ del sur av 
universitat koblenz landau rheinau koblenz germany relates defeasible logic programming delp framework semantics sem delp classical logic programming frameworks 
delp distinguish different sorts rules strict defeasible rules 
negative literals rules considered represent classical negation 
contrast normal logic programming nlp kind rules meaning negative literals nota different represent kind negation failure introduce 
various semantics defined nlp notably founded semantics wfs stable semantics stable 
transformation properties delp stated want analyze transformations nlp ones described hold delp program 
analysis complicated class delp sorts rules strict defeasible rules different kinds negation adapting transformation rules section class programs nontrivial task 
fact defining semantics general programs delp highly nontrivial subject ongoing research 
analysis focus delp neg delp strict negation 
transformations bd defined respect nlp setting adapt accordingly :10.1.1.29.8513
extend previous terminology applied delp neg program head stand heads rules distinguishing strict rules defeasible rules needed 
section consider delp delp default negation 
case similar analysis performed 
propositions provide ways determining dlp programs semantics 
knowledge representation extended logic programs 
gabbay editors handbook philosophical logic nd edition volume methodologies chapter 
reidel publ 
shortened version appeared dix pereira przymusinski eds logic programming knowledge representation springer lnai pages 
stefan brass dix burkhard freitag ulrich :10.1.1.29.8513
transformation bottom computation founded model 
theory practice logic programming 
appear 
dung kowalski toni 
