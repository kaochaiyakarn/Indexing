research america optimizing recursive information gathering plans eric kambhampati department computer science engineering arizona state university az corresponding author email rao asu edu describe optimization techniques specially tailored information gathering 
greedy minimization algorithm minimizes information gathering plan removing redundant overlapping information sources loss completeness 
discuss set heuristics guide greedy minimization algorithm remove information sources 
contrast previous approach handle recursive query plans arise commonly practice 
second method ordering access sources reduce execution cost 
sources internet variety access limitations execution cost information gathering affected network traffic connection setup costs 
steps taken development theory gatherers database artificial intelligence communities 
information gathering problem typically modeled building virtual global schema information user interested describing accessible information sources materialized views global schema 
user query posed terms relations global schema 
global schema virtual extensions stored explicitly computing query requires rewriting folding query edb predicates rewrite correspond materialized view predicates represent information sources 
researchers addressed rewriting problem :10.1.1.36.3224:10.1.1.38.7636
research duschka workers subsumes provides clean methodology constructing information gathering plans user queries posed terms global schema plans produced methodology maximally contained plan answering query contained :10.1.1.57.1452
generating source complete plans step efficient information gathering 
crucial step focus query plan optimization 
maximally contained plans produced duschka methodology conservative essence wind calling information source may remotely relevant query 
information gathering problem typically modeled building virtual global schema information user interested describing accessible information sources materialized views global schema 
user query posed terms relations global schema 
global schema virtual extensions stored explicitly computing query requires rewriting folding query edb predicates rewrite correspond materialized view predicates represent information sources 
researchers addressed rewriting problem :10.1.1.36.3224:10.1.1.38.7636
research duschka workers subsumes provides clean methodology constructing information gathering plans user queries posed terms global schema plans produced methodology maximally contained plan answering query contained :10.1.1.57.1452
generating source complete plans step efficient information gathering 
crucial step focus query plan optimization 
maximally contained plans produced duschka methodology conservative essence wind calling information source may remotely relevant query 
autonomous decentralized nature internet sources tend significantly overlapping contents mirror sources varying access costs premium vs non premium sources high traffic vs low traffic sources 
see tutorial 
words executing maximally contained plan guarantees return tuple satisfying query returned executing query plan 
html gatherer wrapper wrapper db cgi user information gatherer acts intermediary user information sources internet 
tion maximally contained plans generate relevant sources prohibitively costly terms network traffic response time access costs case premium sources charge access 
able directly apply rich body query optimization databases :10.1.1.137.3356
unfortunately assumptions traditional database query optimization hold information gathering scenarios 
traditional databases redundancy overlap different sources major issue crucial issue information gathering 
similarly traditional query optimization methods depend elaborate statistical models histograms selectivity indices underlying databases 
statistical models easily available sources internet 
contrast global database information gathering virtual accessible information resides materialized views statistical models easily available 
reasons generally recognized query optimization information gathering important open problem 
describe query optimization techniques developed context prototype information gathering system development 
provides schematic illustration query planning optimization process 
start generating query plan source inversion techniques described duschka :10.1.1.57.1452
polynomial time process gives maximally contained query plan course interesting try learn source statistics judicious probing 
see technique context multi databases 
build query plan logical optimizations execution optimizations execute query plan full process query planning serves input optimization methods 
traditional databases optimization phase involves steps logical optimization execution optimization 
contributions logical optimization technique operates recursive plans generated duschka algorithm greedily minimizes remove access costly redundant information sources affecting completeness plan 
purpose called localized closed world statements characterize completeness contents source relative global virtual database schema sources 
techniques adaptation sagiv method minimizing datalog programs uniform equivalence 
exists previous research minimizing information gathering plans statements applicable minimization information gathering plans containing recursion 
ability handle recursion significant recursion appears virtually information gathering plans due functional dependencies binding constraints information sources recursive user queries :10.1.1.57.1452
additionally contrast existing methods pairwise redundancy checks source accesses approach capable exploiting cases access information source rendered redundant access combination sources 
large performance improvements prototype information gatherer cost effectiveness minimization approach 
ultimately plan execution context boils doing joins sources efficiently 
gathering information internet typically instruct sources join 
exist research efforts address source redundancy elimination optimization presence sources limited capabilities consider issues redundancy elimination optimization recursive information gathering plans 
system system consider source access costs traffic costs doing optimization 
organization rest organized follows 
section review integrating diverse information sources modeling materialized views virtual database 
pay special attention duschka forms basis :10.1.1.57.1452:10.1.1.57.1452
section briefly reviews statements sagiv algorithm datalog program minimization uniform equivalence 
section presents greedy minimization algorithm adapts sagiv algorithm check source redundancy context statements 
explain inter source subsumption relations exploited addition statements section 
discuss complexity minimization section heuristics biasing greedy minimization strategy section 
section describes architecture prototype information gatherer presents empirical evaluation effectiveness optimization techniques 
section discusses related 
section presents outlines current research directions 
building query plans background suppose global schema contains world relation advisor advisor suppose information source tuple returned advisor represented materialized view global schema follows advisor suppose want retrieve students advised weld 
represent goal query advisor weld show generate information gathering plan maximally contained returns query satisfying tuple stored accessible information sources :10.1.1.57.1452:10.1.1.57.1452
method works inverting source materialized view definitions adding query 
inverse materialized view definition head xm set logic rules body new rule head original view head new rule relation body original view 
invert definition get advisor rule added original effectively create datalog program execution produces tuples satisfying query 
constrained sources recursion materialized view inversion algorithm modified order model databases binding pattern requirements 
note rule recursive plan recursive original query source description non recursive 
constrained sources internet important know handle recursive information gathering plans 
things get bit complicated variables body view appear head 
inversion variable replaced new function term fn xm 
function symbols eliminated flattening procedure recursion eventual plan resulting datalog program :10.1.1.57.1452
page plan minimization preliminaries accesses different advisor databases answer query 
useful try cut redundant accesses improve execution cost plan 
need information sources 
materialized view characterizations sources explicate world relations respected tuple returned source guarantee tuples satisfying properties going returned source 
suppose datalog rules materialized view predicates body statements wish determine rule subsumes 
obvious way checking subsumption replace source predicates rule bodies view description statements source predicates second rule bodies statements corresponding predicates 
transformed rule providing liberal bound tuples returned rule transformed second rule gives conservative bound 
conservative bound subsumes liberal bound transformed second rule contains entails transformed rule know second rule subsumes rule 
duschka shows check sufficient nec condition subsumption :10.1.1.57.1452
proposes modified version involves replacing source predicate rule second rule view description conjunction statements transformation second rule contains rule subsumed 
minimization uniform equivalence pair wise rule subsumption checks detect redundancy non recursive plans inadequate minimizing recursive plans 
specifically recursive plans correspond infinite union conjunctive queries checking particular rule recursive plan redundant involve trying see part subsumed infinite conjuncts pp 

traffic processing costs closely correlated 
cost model assume access cost dominates terms 
reasonable assumption large connection setup delays involved accessing sources internet 
traffic costs significant offset extent fact data sources internet tend smaller tables 
source call ordering problem similar join ordering phase traditional database optimization algorithms reasons traditional distributed database techniques suitable join ordering algorithms assume sources relational databases :10.1.1.137.3356:10.1.1.137.3356
sources internet rarely fully relational tend support limited types queries 
limitations need represented respected join ordering algorithm 
join ordering algorithms distributed databases typically assume cost query execution dominated number tuples transferred execution 
called bound easier assumption sense 
internet information gathering scenario cost accessing sources tends dominate execution cost 
rely solely bound easier assumption need consider number source calls 
typically join ordering algorithms statistics sizes various predicates compute optimal order joining 
techniques applicable predicates correspond source relations typically complete statistics 
fact source latencies significant portion cost execution argues parallel bushy join trees left linear join trees considered conventional algorithms :10.1.1.137.3356:10.1.1.137.3356
representing source access capabilities mentioned information gathering domain assumption information sources fully relational databases valid 
information source may wrapped web page form interfaced database fully large tables regulate data output tuples sending small quanta tuples satisfying query avoid network congestion users needed certain percentage tuples satisfying query 
relational database 
wrapped web page www document interfaced wrapper program appear relational database 
internally split parts query planner plan executor 
default planner uses algorithms discussed replaced alternate planners 
plan executor likewise replaced current implementation attempts execute information gathering plan parallel transforming relational operator graph 
query planner accepts parses datalog rules materialized view definitions sources statements sources 
query query planner builds source complete information gathering plan method attempts minimize minimization algorithm section :10.1.1.57.1452
optimized plan passed plan executor transforms plan relational operator graph 
plan executor adornments determine order access information source join multiple sources described 
plan executed traversing relational operator graph 
union node encountered traversal new threads execution created traverse children node parallel 
costs access costs network traffic costs factored minimization useful plans minimized contain recursion 
time writing process completing set experiments realistic data sources 
specifically experimenting set sources derived dblp bibliography data 
experiments evaluate redundancy elimination algorithm source call ordering algorithm 
related early optimizing information gathering plans combined phases query plan generation optimization posed thing problem search space different executable plans :10.1.1.36.3224:10.1.1.62.360
starting duschka gives maximally contained plan polynomial time optimizing clean separation generation optimization phases :10.1.1.57.1452
friedman weld offer efficient algorithm minimizing non recursive query plan page time plan execute query ms minimization vs minimization recursion depth delay duplicate information sources minimization minimization recursion depth time plan execute query ms minimization vs minimization recursion depth delay duplicate information sources minimization minimization recursion depth time plan execute query ms minimization vs minimization recursion depth delay duplicate information sources minimization minimization recursion depth results characterizing effect moderate recursion depth limit utility minimization 
set patience limit minutes msec aborted runs 
statements 
time writing process completing set experiments realistic data sources 
specifically experimenting set sources derived dblp bibliography data 
experiments evaluate redundancy elimination algorithm source call ordering algorithm 
related early optimizing information gathering plans combined phases query plan generation optimization posed thing problem search space different executable plans :10.1.1.36.3224:10.1.1.62.360
starting duschka gives maximally contained plan polynomial time optimizing clean separation generation optimization phases :10.1.1.57.1452
friedman weld offer efficient algorithm minimizing non recursive query plan page time plan execute query ms minimization vs minimization recursion depth delay duplicate information sources minimization minimization recursion depth time plan execute query ms minimization vs minimization recursion depth delay duplicate information sources minimization minimization recursion depth time plan execute query ms minimization vs minimization recursion depth delay duplicate information sources minimization minimization recursion depth results characterizing effect moderate recursion depth limit utility minimization 
set patience limit minutes msec aborted runs 
statements 
algorithm pair wise subsumption checks conjunctive rules 
set patience limit minutes msec aborted runs 
statements 
algorithm pair wise subsumption checks conjunctive rules 
recursive rules correspond infinite unions conjunctive queries trying prove subsumption pair wise conjunctive rule containment checks decidable 
approach duschka suffers similar problems idea conjunctive un foldings query terms source relations :10.1.1.57.1452
case recursive queries sources binding restrictions number foldings infinite 
contrast minimization algorithm notion uniform containment recursive datalog programs 
approach check sets rules subsume single rule 
minimize greater range plans 
source access ordering technique assumes statistics regarding source relations easily available traditional join ordering strategies applicable 
interesting alternative try learn source statistics experience 
zhu larson describe techniques developing regression cost models multidatabase systems selective querying 
adali discuss keeping track rudimentary access statistics help doing cost optimizations 
concurrent research efforts considered issue optimizing queries presence sources limited query capabilities :10.1.1.1.7398:10.1.1.103.4491
contrast approach annotations represent query capabilities sources tsimmis system lists legal binding patterns source garlic system provides query processing capabilities sources form set rules 
elaborate languages representing source access capabilities proposed 
systems provide rigorous optimality guarantees greedy approach primary focus optimization tive query plans :10.1.1.1.7398
address recursive query plans issue source redundancy 
adali discuss keeping track rudimentary access statistics help doing cost optimizations 
concurrent research efforts considered issue optimizing queries presence sources limited query capabilities :10.1.1.1.7398:10.1.1.103.4491
contrast approach annotations represent query capabilities sources tsimmis system lists legal binding patterns source garlic system provides query processing capabilities sources form set rules 
elaborate languages representing source access capabilities proposed 
systems provide rigorous optimality guarantees greedy approach primary focus optimization tive query plans :10.1.1.1.7398
address recursive query plans issue source redundancy 
knowledge systems consider source access costs traffic costs doing optimization 
considered query optimization problem information gathering plans novel techniques 
technique statements information sources prune unnecessary information sources plan 
optimizing queries materialized views 
proceedings eleventh international conference data engineering ieee comput 
soc 
press pages los alamitos ca 
oliver duschka :10.1.1.57.1452
query optimization local completeness 
proceedings fourteenth national conference artificial intelligence aaai pages providence ri july 
oliver duschka michael genesereth :10.1.1.57.1452
answering recursive queries views 
press pages los alamitos ca 
oliver duschka :10.1.1.57.1452
query optimization local completeness 
proceedings fourteenth national conference artificial intelligence aaai pages providence ri july 
oliver duschka michael genesereth :10.1.1.57.1452
answering recursive queries views 
proceedings sixteenth acm sigact sigmod sigart symposium principles database systems pods pages tucson az may 
oliver duschka alon levy 
recursive plans information gathering 
