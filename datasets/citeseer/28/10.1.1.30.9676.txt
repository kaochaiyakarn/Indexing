advances neural information processing systems morgan kaufmann 
learning order things william cohen robert schapire yoram singer labs park ave florham park nj schapire research att com applications desirable order classify instances 
consider problem learning order feedback form preference judgments statements effect instance ranked ahead 
outline stage approach learns conventional means preference function form pref indicates advisable rank new instances ordered maximize agreements learned preference function 
show problem finding ordering agrees best preference function np complete restrictive assumptions 
describe simple greedy algorithm guaranteed find approximation 
see appropriate feature set learning preference function reduced fairly conventional classification learning problem 
hand finding total order agrees best preference function np complete 
show efficient greedy algorithm finds approximation best ordering 
presenting results complexity ordering instances preference function describe specific algorithm learning preference function 
algorithm line weight allocation algorithm weighted majority algorithm winnow directly freund schapire hedge algorithm :10.1.1.130.9013:10.1.1.37.1595
experimental results algorithm combine results search experts domain specific query expansion strategy www search engine 
preliminaries set instances possibly infinite 
preference function pref binary function pref theta :10.1.1.108.4092
value pref close interpreted strong recommendation ranked value close interpreted making recommendation 
presenting results complexity ordering instances preference function describe specific algorithm learning preference function 
algorithm line weight allocation algorithm weighted majority algorithm winnow directly freund schapire hedge algorithm :10.1.1.130.9013:10.1.1.37.1595
experimental results algorithm combine results search experts domain specific query expansion strategy www search engine 
preliminaries set instances possibly infinite 
preference function pref binary function pref theta :10.1.1.108.4092
value pref close interpreted strong recommendation ranked value close interpreted making recommendation 
noted hypothesis learning system preference function new instances ranked agree possible preferences predicted hypothesis 
standard classification learning hypothesis constructed combining primitive features 
similarly preference function combination preference functions 
general optimization problem little interest practice constraints imposed learning instance pref restricted class functions generally combination relatively behaved preference functions interesting question problem remains hard constraints 
theorem gives result showing problem np complete pref restricted linear combination rank orderings 
holds rank orderings map set elements may may oe 
clearly consists elements problem hard 
theorem decision problem np complete input rational number set set jsj collection ordering functions preference function pref defined pref wn weight vector :10.1.1.108.4092
question exist total order ae agree ae pref proof omitted reduction cyclic ordering 
problem hard jsj tractable linear combinations rank orderings set size 
brief suppose pref theorem save element set assume loss generality 
define ae 
learner may computer preference functions pairs producing final ordering ae learner receives feedback environment 
assume feedback arbitrary set assertions form preferred 
formally regard feedback th round set pairs indicating preferences 
algorithm propose problem weighted majority algorithm directly hedge algorithm 
define loss preference function allocate weights ranking experts parameters fi initial weight vector ranking experts number rounds :10.1.1.108.4092
receive set elements preference functions 
algorithm order preferences compute ordering function ae approximates pref 

order ae 
viewed randomized prediction algorithm predicts precede probability loss probability feedback pair chosen uniformly random hedge algorithm verbatim shown 
algorithm maintains positive weight vector value time denoted 
prior knowledge ranking experts set initial weights equal weight vector combine preference functions different experts obtain preference function pref turn converted ordering ae current set elements method described section 
receiving feedback loss preference function loss evaluated eq 
weight vector updated multiplicative rule delta fi loss fi parameter normalization constant chosen weights sum update :10.1.1.108.4092
feedback weights ranking experts adjusted experts producing preference functions relatively large agreement feedback promoted 
briefly sketch theoretical rationale algorithm 
freund schapire prove general results hedge applied directly loss function 
results imply immediately bound cumulative loss preference function pref terms loss best ranking expert specifically loss pref fi min loss fi ln fi ln fi gamma fi fi gamma fi 
