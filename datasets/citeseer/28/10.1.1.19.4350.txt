emediator generation electronic commerce server tuomas sandholm computer science department carnegie mellon university forbes avenue pittsburgh pa sandholm cs cmu edu may presents emediator electronic commerce server prototype demonstrates ways algorithmic support game theoretic incentive engineering jointly improve efficiency ecommerce 
eauctionhouse configurable auction server includes variety generalized combinatorial auctions exchanges pricing schemes bidding languages mobile agents user support choosing auction type 
introduce new logical bidding languages combinatorial markets xor bidding language xors bidding language 
traditional bidding language fully expressive 
enable clarke groves pricing mechanism motivating bidders bid truthfully 
eauctionhouse supports supply demand curve bidding 
early versions appeared international conference autonomous agents agents pp 
barcelona spain aaai workshop ai electronic commerce orlando fl pp 
washington university st louis dept computer science technical report wu cs jan 
eauctionhouse configurable auction services emediator provides free internet auction exchange prototype called eauctionhouse 
successful commercial internet auction sites exist ebay yahoo interesting academic auction houses appeared internet :10.1.1.8.1094:10.1.1.161.6807
motivation developing auction server prototype novel generation features test feasibility computationally terms user comfort 
eauctionhouse allows users internet buy sell goods set markets 
third party site sellers buyers trust executes market mechanisms stated 
implemented java computationally intensive algorithms 
eauctionhouse operation web december knowledge internet auction support combinatorial auctions bidding graphically drawn price quantity graphs mobile agents 
eauctionhouse offers wide range market types chosen supports user choosing appropriate market type setting hand 
features discussed order 
combinatorial auctions sequential auction items auctioned time 
bidder preferences bundles combinations items case example electricity markets trading bandwidth auctions transportation exchanges bidding auctions difficult :10.1.1.2.7819
determine valuation item bidder needs guess items receive auctions 
requires speculation bid affects items receive 
furthermore bid depends believe bid counterspeculation introduces computational cost wasteful overhead 
auctions reasonable number items lookahead game tree intractable known way bid rationally 
change speed improvement winner determination algorithms 
fcc planning hold combinatorial spectrum auction summer 
auction server supports variety combinatorial auctions 
subsections discuss main variants 
bidding language combinatorial auction setting commonly discussed bidder bid combinations indivisible items bids implicitly joined non exclusive meaning number bids accepted :10.1.1.56.9425
winner determination case problem deciding bids win maximize sum bid prices constraint item allocated bid 
done general polynomial time size input np problem npcomplete analogous weighted set packing np complete :10.1.1.56.9425
proved approximate winner determination hard interested worst case guarantees 
specifically polynomial time algorithm guarantee allocation bound optimum np :10.1.1.172.7540
auction server supports variety combinatorial auctions 
subsections discuss main variants 
bidding language combinatorial auction setting commonly discussed bidder bid combinations indivisible items bids implicitly joined non exclusive meaning number bids accepted :10.1.1.56.9425
winner determination case problem deciding bids win maximize sum bid prices constraint item allocated bid 
done general polynomial time size input np problem npcomplete analogous weighted set packing np complete :10.1.1.56.9425
proved approximate winner determination hard interested worst case guarantees 
specifically polynomial time algorithm guarantee allocation bound optimum np :10.1.1.172.7540
bids exhibit special structure better approximations achieved polynomial time guarantees far optimum irrelevant auctions practice :10.1.1.145.5863:10.1.1.44.5060:10.1.1.172.7540
polynomial time winner determination achieved restricting combinations agents allowed bid :10.1.1.56.9425
bidding language combinatorial auction setting commonly discussed bidder bid combinations indivisible items bids implicitly joined non exclusive meaning number bids accepted :10.1.1.56.9425
winner determination case problem deciding bids win maximize sum bid prices constraint item allocated bid 
done general polynomial time size input np problem npcomplete analogous weighted set packing np complete :10.1.1.56.9425
proved approximate winner determination hard interested worst case guarantees 
specifically polynomial time algorithm guarantee allocation bound optimum np :10.1.1.172.7540
bids exhibit special structure better approximations achieved polynomial time guarantees far optimum irrelevant auctions practice :10.1.1.145.5863:10.1.1.44.5060:10.1.1.172.7540
polynomial time winner determination achieved restricting combinations agents allowed bid :10.1.1.56.9425
agents may able bid combinations want similar economic inefficiencies prevail auctions 
generated approach optimal winner determination 
winner determination case problem deciding bids win maximize sum bid prices constraint item allocated bid 
done general polynomial time size input np problem npcomplete analogous weighted set packing np complete :10.1.1.56.9425
proved approximate winner determination hard interested worst case guarantees 
specifically polynomial time algorithm guarantee allocation bound optimum np :10.1.1.172.7540
bids exhibit special structure better approximations achieved polynomial time guarantees far optimum irrelevant auctions practice :10.1.1.145.5863:10.1.1.44.5060:10.1.1.172.7540
polynomial time winner determination achieved restricting combinations agents allowed bid :10.1.1.56.9425
agents may able bid combinations want similar economic inefficiencies prevail auctions 
generated approach optimal winner determination 
motivation allow bidding combinations 
done general polynomial time size input np problem npcomplete analogous weighted set packing np complete :10.1.1.56.9425
proved approximate winner determination hard interested worst case guarantees 
specifically polynomial time algorithm guarantee allocation bound optimum np :10.1.1.172.7540
bids exhibit special structure better approximations achieved polynomial time guarantees far optimum irrelevant auctions practice :10.1.1.145.5863:10.1.1.44.5060:10.1.1.172.7540
polynomial time winner determination achieved restricting combinations agents allowed bid :10.1.1.56.9425
agents may able bid combinations want similar economic inefficiencies prevail auctions 
generated approach optimal winner determination 
motivation allow bidding combinations 
strive optimal allocation 
worst case complexity exponential number items sale polynomial number bids 
desirable auctioneer control number items sale combinatorial auction usually restrict number bids submitted 
algorithm scales practice 
details experimental results see 
algorithm refined designed completely different search algorithm promised drastically faster :10.1.1.100.1478:10.1.1.172.7540
developed faster algorithm cabob problem 
experimental results show currently fastest algorithm optimal winner determination scaling hundreds items thousands tens thousands bids 
xor bidding language bidding language implicitly assumes bids superadditive bi bi bi bi bid agent combination happen proved approximation preserving polynomial reduction maximum clique known 
agent bid bidders 
auctioneer allocate items agent separately agent bid combination value 
bidding language focuses settings combinatorial bids introduced capture complementarities items 
hand real world settings local substitutability occur 
example bidding landing slot plane bidder willing take host slots want 
address introduced xor bidding language popular :10.1.1.172.7540
language bidder submit xor disjunct bidder submit multiple bids bid including set items price bid bidder accepted 
eauctionhouse supports xor bidding language 
allows bidders express general preferences positive negative complementarities 
words language expressive represent mapping combinations items prices 
incentive compatibility lost winner determination price determination done approximately 
xors bidding language addition full expressiveness convenience combinatorial auctions important issue 
xor bidding language fully expressive worst case expressing preferences requires submit bid bundles items number items 
shorter representation preferences loss expressive power possible allowing richer input language 
introduced shows bidder interested bundle incentive compatibility guaranteed approximate winner determination :10.1.1.33.2180
idea direction early 
allowed bidder place combinatorial bids state maximal number bids accepted bidder 
xor bidding language viewed special case number 
xors bidding language 
furthermore supports combinatorial exchanges combinatorial double auctions multiple buyers multiple sellers 
buyers may sellers 
single bid bidder buy items selling 
illustrates table bidding interface multi unit combinatorial exchange uses xors bidding language number units specified cell table 
research focused developing faster winner determination algorithms multi unit combinatorial auctions single multi unit combinatorial exchanges :10.1.1.172.7540
bidding price quantity graphs markets item sale multiple indistinguishable units eauctionhouse supports price quantity graphs supply curves demand curves bidders express continuous preferences see 
example bidder buys larger quantity accept lower unit price 
naturally bidder accepts curve automatically colored region get quantity curve lower price 
similarly seller accept curve 
information revealed bidders clearing bids winning bids 
nomad mobile proxy agents auction house supports mobile agents user agent actively participating auction disconnected 
example user launch agent phone airplane laptop disconnect 
mobile agents execute agent dock near host machine auction server reduce network latency issue key importance time critical bidding 
michigan internet auctionbot provides tcp ip level message protocol agents participate auction :10.1.1.161.6807
auction server differs provide support mobile agents 
auction server uses commercial concordia agent dock mitsubishi provide mobile agents safe execution platform observe auctions bid set auctions move hosts user full flexibility java programming disposal designing mobile agent 
provide easy html interface non programmers user specify wants agent system automatically generates java code corresponding mobile agent launches 
mobile agent templates currently available 
contract obligations contingent events 
games increases expected payoff parties compared full commitment contract 
contingency contracts impractical space combinations events may large unknown 
events mutually observable observing agent lie 
leveled commitment contracts method events :10.1.1.34.2787:10.1.1.34.2787
conditioning contract events mechanism built contract allows unilateral decommitting 
achieved specifying contract level commitment decommitment penalties agent 
agent wants decommit freed contract obligations simply paying decommitment penalty party 
method requires explicit conditioning events agent conditioning dynamically 
achieved specifying contract level commitment decommitment penalties agent 
agent wants decommit freed contract obligations simply paying decommitment penalty party 
method requires explicit conditioning events agent conditioning dynamically 
event verification mechanism lying required 
decommitment possibility increases agent expected payoff general assumptions :10.1.1.34.2787:10.1.1.34.2787
emediator includes optimizer leveled commitment contracts 
call ecommitter 
analyze contracting situations perspective risk neutral agents attempts maximize expected payoff contractor pays get task done contractee gets paid handling task 
framework interpreted modeling types settings task allocation example general allocation rights obligations agents costs gains rights obligations may change 
similarly contractee options contract contractor wait agents full commitment contract price 
alternatively leveled commitment contract specified contract price contractor decommitment penalty contractee decommitment penalty restrict attention contracts agents get paid decommitting 
contractor decide decommitting knows outside offer know contractee outside offer similarly contractee decide decommitting knows outside offer know contractor realistic practical contracting perspective 
nash equilibria contract concern rational self interested agent reluctant decommitting chance party decommit case agent gets freed contract pay penalty collects penalty 
sandholm lesser showed despite decommitting leveled commitment feature increases contract party expected payoff enables contracts settings full commitment contract beneficial parties :10.1.1.34.2787:10.1.1.34.2787
contractor decommits gets low outside offer get task handled low cost 
denote decommitting threshold decommitting probability pa da contractee decommits gets high outside offer gets paid handling task 
denote decommitting threshold decommitting probability pb db sequential decommitting mechanisms sequential decommitting mechanism agent reveal decommitting decision knowing party decommits 
implementation analyzes orders decommitting discuss setting contractee decide 
ecommitter presents equilibria associated expected payoffs user 
solving equation group complex general user input piecewise linear allows problem decomposed rectangles corresponding piece linear rectangle 
case equation group easily solved constant time 
optimizer solves problem way rectangle separately 
details see :10.1.1.104.2897
ecommitter find optimal contracts addition determining agents play leveled commitment contract ecommitter determines optimal leveled commitment contracts 
user inputs distributions graphically textually 
user input contract price decommitment penalties 
ecommitter determines values way maximizes sum contract parties expected payoffs :10.1.1.104.2897:10.1.1.104.2897
details see :10.1.1.104.2897
ecommitter find optimal contracts addition determining agents play leveled commitment contract ecommitter determines optimal leveled commitment contracts 
user inputs distributions graphically textually 
user input contract price decommitment penalties 
ecommitter determines values way maximizes sum contract parties expected payoffs :10.1.1.104.2897:10.1.1.104.2897
optimization algorithm takes account agents decommit nash equilibrium equations 
expected benefit contract sum agents expected payoffs contract minus sum agents expected payoffs status quo contract 
contract optimized separately decommitting mechanisms vary reveal decommitting decision simultaneous mechanisms considered agents pay penalties decommit 
optimal contracts mechanism user 
exchange divided chunks party delivers small amount time exchange proceeds alternation 
method targets settings dividing goods chunks relatively inexpensive case example information goods computational services 
sequence called safe party motivated follow exchange step anticipation profit rest exchange vanishing party delivered far 
specifically safe sequence executed subgame perfect nash equilibrium 
allow safe sequence expected benefit maximized dividing benefit way long party gets nonnegative portion benefit :10.1.1.104.2897
words integrative bargaining increasing expected benefit hinder distributive bargaining dividing expected benefit 
independence holds decommitment penalties tailored chosen contract price 
:10.1.1.72.5760
similarly sequences delivering chunks safe 
specifically safe sequence executed subgame perfect nash equilibrium 
allow safe sequence expected benefit maximized dividing benefit way long party gets nonnegative portion benefit :10.1.1.104.2897
words integrative bargaining increasing expected benefit hinder distributive bargaining dividing expected benefit 
independence holds decommitment penalties tailored chosen contract price 
:10.1.1.72.5760
similarly sequences delivering chunks safe 
part emediator built safe exchange planner called 
input planner takes information contract price seller cost function delivered far transaction buyer valuation function received transaction gain seller willing avoid possible reputation costs defecting exchange costs associated risk getting caught defecting gain buyer willing reasons 
form cost valuation accrual information depends setting 
th annual siam acm symposium discrete algorithms soda pages jan 
clarke 
pricing public goods 
public choice 
fujishima leyton brown shoham :10.1.1.100.1478
taming computational complexity combinatorial auctions optimal approximate approaches 
proceedings sixteenth international joint conference artificial intelligence ijcai pages stockholm sweden aug 
groves 
incentives teams 
karp 
reducibility combinatorial problems 
miller thatcher editors complexity computer computations pages 
plenum press ny 
lehmann shoham :10.1.1.33.2180
truth revelation rapid approximately efficient combinatorial auctions 
proceedings acm conference electronic commerce acm ec pages denver nov 
leyton brown tennenholtz shoham 
algorithm multi unit combinatorial auctions 
survey conducted opinion research 
nisan 
bidding allocation combinatorial auctions 
proceedings acm conference electronic commerce acm ec pages minneapolis mn 
ungar :10.1.1.172.7540
iterative combinatorial auctions theory practice 
proceedings national conference artificial intelligence aaai pages austin tx aug 
penn tennenholtz 
constrained multi object auctions matching 
bell economics 
rodriguez noriega sierra 
fm java electronic auction house 
proceedings second international conference practical application intelligent agents multi agent technology paam 
rothkopf harstad :10.1.1.56.9425
computationally manageable combinatorial auctions 
management science 
sandholm 
implementation contract net protocol marginal cost calculations 
proceedings fourth international conference multi agent systems icmas pages boston ma july 
sandholm lesser 
equilibrium analysis possibilities unenforced exchange multiagent systems 
proceedings fourteenth international joint conference artificial intelligence ijcai pages montreal canada aug 
sandholm lesser :10.1.1.34.2787
leveled commitment contracts strategic breach 
games economic behavior 
special issue ai economics 
early versions appeared advantages leveled commitment contracting protocol proceedings national conference artificial intelligence aaai pp 
games economic behavior 
special issue ai economics 
early versions appeared advantages leveled commitment contracting protocol proceedings national conference artificial intelligence aaai pp 
portland university massachusetts amherst computer science department technical report 
sandholm :10.1.1.104.2897
algorithms optimizing leveled commitment contracts 
proceedings sixteenth international joint conference artificial intelligence ijcai pages stockholm sweden 
extended version washington university department computer science technical report 
sandholm suri :10.1.1.172.7540
sandholm :10.1.1.104.2897
algorithms optimizing leveled commitment contracts 
proceedings sixteenth international joint conference artificial intelligence ijcai pages stockholm sweden 
extended version washington university department computer science technical report 
sandholm suri :10.1.1.172.7540
improved algorithms optimal winner determination combinatorial auctions generalizations 
proceedings national conference artificial intelligence aaai pages austin tx 
sandholm suri 
market 
