tuple spaces tuple centres enrico denti andrea omicini deis universita di bologna viale bologna italy tuple centre linda tuple space behaviour programmed means transactional reactions standard communication events 
de nes notion tuple centre shows impact adoption coordination medium distributed multi agent system system design system ciency 
key words distributed computing software engineering software design implementation coordination multi agent systems multi component software systems dominating application paradigm internet era role coordination enabling possibly heterogeneous distributed mobile components merging separate activities ensemble particularly relevant 
issue coordination models crucial engineering complex software applications implicitly recognised interest internet community coordination technology particularly tuple coordination sun javaspaces ibm spaces grounded 
tuple coordination models originate linda initially exploited eld parallel programming 
features carried nancial support italian murst project design methodologies tools high performance systems distributed applications 
features carried nancial support italian murst project design methodologies tools high performance systems distributed applications 
corresponding author 
email deis unibo 
email deis unibo 
preprint submitted elsevier preprint february suited coordination open distributed heterogeneous systems motivate interest di erent research groups tuple coordination internet agents :10.1.1.55.907
models software agents interact exchanging tuples ordered collections possibly heterogeneous information items 
agents communicate cooperate tuple spaces storing reading consuming tuples associative way 
main bene ts tuple models neat separation computation coordination ii generative communication iii associative access interaction space 
rst feature promotes cleaner agent design keeping computation coordination clearly distinct 
second choice solves deadlock problem introduces new ensure coherent representation domain guaranteed instance chops taken chops chops longer available 
correspondingly way express coordination policies directly supported standard tuple space mechanisms embed coordination medium 
load coordination generally charged coordinated entities coordination aware 
means agents coordination details embed code interaction protocols required implement coordination policies required 
result computation coordination issues merged agent design making unnecessarily complex :10.1.1.34.3462
dining philosophers example instance avoiding deadlock represented singly requires philosopher agents agree tuple space locking protocol unique semaphore tuple token taken tuple space asking released just see 
apart need global agreement agents approach communication load grow tuples added removed 
furthermore means ensure philosopher adhere required locking protocol way enforce laws coordination 
tuple centre idea keeping information representation perception clearly separate allows limits overcome 
