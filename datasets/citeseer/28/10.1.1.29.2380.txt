soda societies infrastructures analysis design agent systems andrea omicini dipartimento di informatica sistemistica universit di bologna viale bologna italy deis unibo 
notion society play central role agent oriented software engineering class abstraction complex systems designed built multi agent systems 
argue effective agentoriented methodology account inter agent aspects providing engineers specific abstractions tools analysis design agent societies agent environments 
outline soda agent oriented methodology analysis design internet systems 
core notion task soda promotes separation individual social issues focuses social aspects agent oriented software engineering 
particular soda allow agent environment explicitly modelled mapped suitably defined agent infrastructures 
approaches implicitly promote methodologies engineering multi agent systems systems built sum separately engineered agent components put exploiting technology infrastructure interoperability acl mediation services brokers 
research trends relevant aspects agent systems social ones 
agents simple software components built combined goal driven individuals assume live interact individuals society 
way human ones agent societies exhibit global behaviours reduced mere sum behaviours individual components 
result societies considered class components multi agent systems specific models abstractions languages methodologies provided engineering :10.1.1.20.7072:10.1.1.34.1692
agent environment space agents live interact neutral respect system design development 
building mas open distributed decentralised heterogeneous dynamic unpredictable environment obviously affects way system conceived deployed 
peculiar example think open system resources available explorer agents coming unknown sources buyer agents instance 
engineering system simply amount designing agent environment terms available resources services deploying suitably configured infrastructure possibly writing single line agent code 
soda concerned intra agent issues designing multi agent system soda leads define agents terms required observable behaviour role multi agent system 
whichever methodology may choose define agent structure inner functionality easily conjunction soda 
soda concentrates inter agent issues engineering societies infrastructures multi agent systems 
conceptually covers interactions agent system design phase soda deeply relies notion coordination model 
particular discussed coordination models languages taken sources abstractions mechanisms required engineer agent societies social rules designed coordination laws embedded coordination media social infrastructures built coordination systems :10.1.1.17.4453
analysis analysis phase application domain studied modelled available computational resources technological constraints listed fundamental application goals targets pointed 
result analysis phase typically expressed terms high level abstractions mutual relationships providing designers formal semi formal description intended application structure organisation 
definition agents goals pursue pro actively agent oriented analysis rely agent responsibility carry tasks 
furthermore agents live environment may distributed heterogeneous dynamic unpredictable 
