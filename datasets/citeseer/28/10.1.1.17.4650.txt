generic schema matching cupid philip bernstein university washington microsoft university leipzig cs washington edu microsoft com informatik uni leipzig de schema matching critical step applications xml message mapping data warehouse loading schema integration 
investigate algorithms generic schema matching outside particular data model application 
taxonomy past solutions showing rich range techniques available 
propose new algorithm cupid discovers mappings schema elements names data types constraints schema structure broader set techniques past approaches 
innovations integrated linguistic structural matching context dependent matching shared types bias leaf structure schema content resides 
describing algorithm experimental results compare cupid schema matching systems 
describing algorithm experimental results compare cupid schema matching systems 
match schema manipulation operation takes schemas input returns mapping identifies corresponding elements schemas 
schema matching critical step applications help map messages different xml formats data warehouses map data sources warehouse schemas mediators identify points integration heterogeneous databases 
schema matching primarily studied piece applications 
example schema integration uses matching find similar structures heterogeneous schemas integration points :10.1.1.49.4923
data translation uses matching find simple data transformations :10.1.1.122.4181
importance xml message mapping expect see match solutions appear context 
schema matching challenging reasons 
importantly schemas identical concepts may structural naming differences 
match schema manipulation operation takes schemas input returns mapping identifies corresponding elements schemas 
schema matching critical step applications help map messages different xml formats data warehouses map data sources warehouse schemas mediators identify points integration heterogeneous databases 
schema matching primarily studied piece applications 
example schema integration uses matching find similar structures heterogeneous schemas integration points :10.1.1.49.4923
data translation uses matching find simple data transformations :10.1.1.122.4181
importance xml message mapping expect see match solutions appear context 
schema matching challenging reasons 
importantly schemas identical concepts may structural naming differences 
schemas may model similar non identical content 
schema matching inherently subjective 
schemas may completely capture semantics data describe may plausible mappings schemas making concept single best mapping ill defined 
subjectivity valuable user input guide match essential user validation result 
guidance may come initial mapping dictionary thesaurus library known mappings goal schema matching input schemas data model optionally auxiliary information input mapping compute mapping schema elements input schemas passes user validation 
taxonomy matching techniques schema characterized orthogonal criteria longer survey taxonomy appears schema vs instance schema consider schema information instance data :10.1.1.49.4923
schema information includes names descriptions relationships constraints instance meta data statistics collected data instances annotate schema directly find correlated schema elements machine learning 
element vs structure granularity element level matcher computes mapping individual schema elements attribute matcher 
structure level matcher compares combinations elements appear schema classes tables attribute sets match approximately 
linguistic linguistic matcher uses names schema elements textual descriptions 
produce mappings maps combination source schema target 
auxiliary information schema differ auxiliary information sources dictionaries thesauri input match mismatch information 
reusing past match information help example compute mapping composition mappings performed earlier 
individual vs combinational individual matcher uses single algorithm perform match 
combinational types hybrid multiple criteria perform matching :10.1.1.49.4923
multiple run independent match algorithms schemas combine results 
look published implementations light taxonomy 
system instance matcher associates attributes schemas match signatures 
consist constraint content criteria derived instance values normalized interval attribute point dimensional space 
lsd multi strategy instance matcher 
prototype implements schema matching rule approach 
rules formulated order logic express match mismatch relationships methods defined derive new matches 
supports name matching simple structural matches hierarchies 
prototype uses schema matching drive data translation :10.1.1.122.4181
schema translated internal graph representation 
multiple handcrafted matching rules applied order node 
matching done top rules higher level nodes typically requiring matching descendants 
top approach performs toplevel structures schemas quite similar 
leaves consider immediate descendants elements compared 
leaves measuring structural similarity identifies matches alternative scheme 
addition leaves ensures schemas moderately different sub structure nesting elements essentially data content similar leaves correctly matched 
post order traversal results bottom matching schemas 
approach expensive top matching :10.1.1.122.4181
bottom approach conservative able match moderately varied schema structures 
top approach optimistic perform poorly schemas differ considerably top level 
mappings output schema matching set mapping elements described section 
mapping elements generated computed linguistic structural similarities 
