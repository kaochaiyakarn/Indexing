new direction computer architecture research david patterson computer science division university california berkeley berkeley ca suggest different computing environment worthy new direction computer architecture research personal mobile computing portable devices visual computing personal communications tasks 
device supports integrated fashion functions provided today portable computer cellular phone digital camera video game 
requirements placed processor environment energy efficiency high performance multimedia dsp functions area efficient scalable designs 
examine architectures proposed transistor microprocessors 
promising stationary desktop server workloads discover unable meet challenges new environment provide necessary enhancements multimedia applications running portable devices 
conclude vector iram initial example microprocessor architecture implementation matches new environment 
advances integrated circuits technology soon provide capability integrate transistors single chip 
exciting opportunity presents computer architects designers challenging problem proposing microprocessor organizations able utilize huge transistor budget efficiently meet requirements applications 
address challenge ieee computer magazine hosted special issue transistor architectures september 
articles issue discussed problems trends affect processor design articles authors contacted email cs berkeley edu 
academic research groups proposed microprocessor architectures implementations transistor chips 
proposals covered wide architecture space ranging order designs reconfigurable systems 
addition academic proposals intel hewlett packard basic characteristics generation ia architecture expected dominate high performance processor market years 
surprise focus proposals computing domain shaped processor architecture past decade uniprocessor desktop running technical scientific applications multiprocessor server transaction processing file system workloads 
start review proposals qualitative evaluation concerns classic computing environment 
second part introduce new computing domain expect play significant role driving technology millennium personal mobile computing 
paradigm basic personal computing communication devices portable battery operated support multimedia functions speech recognition video sporadically interconnected wireless infrastructure 
different set requirements microprocessor real time response dsp support energy efficiency arise environment 
examine proposed organizations respect environment discover limited support requirements 
vector iram effort microprocessor architecture design matches requirements new environment 
vector iram combines vector processing architecture merged logic dram technology order provide scalable cost efficient design portable multimedia devices 
reflects opinion expectations authors 
believe order design successful processor architectures need explore applications computing try match requirements scalable architecture source key idea transistors memory advanced wide issue superscalar processor speculative superscalar execution multilevel chip caches wide issue superscalar processor aggressive data architecture control speculation multilevel chip caches trace processor multiple distinct cores speculatively execute program traces multilevel chip caches simultaneous wide superscalar support aggressive sharing multithreaded smt multiple threads multilevel chip caches chip multiprocessor symmetric multiprocessor system shared cmp second level cache ia vliw architecture support predicated execution long instruction bundling raw multiple processing tiles reconfigurable logic memory interconnected reconfigurable network table transistor microprocessors number transistors memory cells 
assume transistor implementation trace ia architecture 
cost efficient way 
goal point potential change applications motivate architecture research direction 
overview transistor processors table summarizes basic features transistor implementations proposed architectures corresponding 
case trace processor ia descriptions transistor implementations certain features speculated 
architectures advanced superscalar architecture similar characteristics 
basic idea wide superscalar organization multiple execution units functional cores uses multi level caching aggressive prediction data control sequences instructions traces utilize available instruction level parallelism ilp 
due similarity group call wide superscalar processors rest 
trace processor consists multiple superscalar processing cores executing trace issued shared instruction issue unit 
employs trace data prediction shared caches 
numbers include transistors main memory caches tags 
calculated information referenced papers 
note cmp uses considerably transistors transistors half budget 
numbers trace processor ia lower limit expectations fact predecessors spent half transistor budget caches 
simultaneous multithreaded smt processor uses multithreading granularity issue slot maximize utilization wide issue order superscalar processor cost additional complexity issue control logic 
chip multiprocessor cmp uses transistor budget placing symmetric multiprocessor single die 
uniprocessors chip similar current order processors separate level caches share large second level cache main memory interface 
ia considered commercial vliw architecture renamed explicitly parallel instruction computer 
major innovations announced far support bundling multiple long instructions instruction dependence information attached attack problem scaling code density older vliw machines 
includes hardware checks hazards interlocks binary compatibility maintained generations chips 
supports predicated execution general purpose predication registers reduce control hazards 
raw machine probably revolutionary architecture proposed supporting case reconfigurable logic general purpose computing 
processor consists tiles processing core small level caches backed larger amount dynamic memory kbytes main memory reconfigurable functional unit 
tiles interconnected reconfigurable network matrix fashion 
emphasis placed software infrastructure compiler dynamic event support handles partitioning mapping programs wide trace simultaneous chip ia raw superscalar processor multithreading multiprocessor spec int desktop ffi ffi spec fp desktop ffi tpc server ffi ffi ffi software effort ffi ffi ffi physical design complexity ffi ffi ffi table evaluation transistor processors desktop server domain 
wide superscalar processors includes advanced superscalar processors 
tiles configuration selection data routing scheduling 
table reports number transistors caches main memory transistor processors 
varies half budget 
interesting notice budget part main system memory transistor budget spent build caches order tolerate high latency low bandwidth problem external memory 
words conventional vision computers spend transistor budget redundant local copies data normally system 
redundancy really best idea transistors applications 
desktop server computing domain current processors computer systems optimized desktop server domain spec tpc popular benchmarks 
computing domain significant transistor chips available similar benchmark suites 
call spec technical scientific applications tpc line transaction processing oltp workloads 
table presents prediction performance processors domain grading system strength ffi neutrality weakness 
desktop environment wide superscalar trace simultaneous multithreading processors expected deliver highest performance integer die area linear function transistor number memory transistors placed densely logic transistors redundancy enables repair failed rows columns die cost non linear function die area 
transistors expensive 
spec order advanced prediction techniques utilize available ilp single sequential program 
ia perform slightly worse vliw compilers mature outperform advanced hardware ilp techniques exploit run time information 
cmp raw inferior performance desktop applications shown highly parallelizable 
cmp benefit order features cores 
floating point applications hand parallelism high memory bandwidth important order execution smt cmp additional advantage 
server domain cmp smt provide best performance due ability utilize coarse grain parallelism single chip 
wide superscalar trace processor ia systems perform worse current evidence order execution provides little benefit database applications 
raw architecture difficult predict potential success software map parallelism databases reconfigurable logic software controlled caches 
new architecture widely accepted able run significant body software 
effort needed port existing software develop new software important 
wide superscalar trace processors edge run existing executables 
holds smt cmp case high performance delivered applications written multithreaded parallel fashion 
past decade taught parallel programming high performance easy automated 
ia significant amount required enhance vliw compilers 
raw machine relies challenging software development 
apart requirements sophisticated routing mapping run time scheduling tools need development compilers libraries design usable 
issue physical design complexity includes effort design verification testing 
currently development advanced microprocessor takes years engineers 
functional electrical verification testing complexity steadily growing accounts majority processor development effort 
wide superscalar multithreading processors exacerbate problems complex techniques aggressive data control prediction order execution multithreading having non modular designs multiple blocks individually designed 
chip multiprocessor carries complexity current outof order designs support cache coherency multiprocessor communication 
ia architecture basic challenge design verification forwarding logic multiple functional units chip 
trace processor raw machine modular designs 
trace processor employs replication processing elements reduce complexity 
trace prediction issue involves intra trace dependence check register remapping intra element forwarding includes significant portion complexity wide superscalar design 
raw processor single tile network switch need designed replicated 
verification reconfigurable organization trivial terms circuits verification mapping software required 
table proposed transistor processors optimized computing environment promise impressive performance 
concern design complexity organizations 
new target computers personal mobile computing years experienced significant change technology drivers 
high systems direct evolution computing current technology driven low systems due large volume 
environment important trends evolved change shape computing 
new trend multimedia applications 
improvements circuits technology innovations software development enabled real time media data types video speech animation music 
dynamic datatypes greatly improve usability quality productivity enjoyment personal computers 
functions graphics video visual imaging included popular applications personal mobile devices integrate functions current portable devices pdas video games digital cameras cellular phones 
common knowledge influence computing increase ffl desktop cycles spent media applications ffl multimedia workloads continue increase importance ffl users outstanding graphics multimedia ffl image handwriting speech recognition major challenges time portable computing communication devices gained large popularity 
inexpensive gadgets small fit pocket personal digital assistants pda palmtop computers digital cameras added list portable devices notebook computers cellular phones pagers video games 
functions supported devices constantly expanded multiple devices converging single 
leads natural increase demand computing power time size weight power consumption remain constant 
example typical pda inches inches big weighs twelve mbytes memory rom ram expected run set batteries period days weeks 
notice large software operating system networking infrastructure developed devices wireless modems infra red communications windows ce palmpilot development environment prime examples 
expectation trends lead new application domain market near 
environment single personal computation communication device small carry time 
device include functions pager cellular phone laptop computer pda digital camera video game combined important feature device interface interaction user voice image input output speech voice recognition key functions type notes scan documents check surrounding specific objects 
wireless infrastructure sporadic connectivity services networking www email telephony global positioning system gps device fully functional absence network connectivity 
potentially device person may need perform tasks ranging keeping notes making line presentation browsing web programming vcr 
numerous uses devices potential large volume lead expect computing domain soon significant desktop computing today 
microprocessor needed computing devices merged general purpose processor digital signal processor dsp power budget 
major requirements high performance multimedia functions energy power efficiency small size low design complexity 
basic characteristics media centric applications processor needs support utilize order provide high performance specified issue ieee computer ffl real time response maximum peak performance sufficient worst case guaranteed performance needed real time qualitative perception applications video 
ffl continuous media data types media functions typically processing continuous stream input discarded old continuously send results display speaker 
temporal locality data memory accesses assumption years innovation conventional memory systems longer holds 
remarkably data caches may obstacle high performance continuous media data types 
data narrow pixel images sound samples bits wide bit bit data desktop machines 
ability perform multiple operations types single wide datapath desirable 
ffl fine grained parallelism functions image voice signal processing operation performed sequences data vector simd fashion 
ffl coarse grained parallelism media applications single stream data processed pipeline functions produce result 
ffl high instruction locality media functions usually small kernels loops dominate processing time demonstrate high temporal spatial locality instructions 
ffl high memory bandwidth applications graphics require huge memory bandwidth large data sets limited locality 
ffl high network bandwidth streaming data video images external sources requires high network bandwidth 
budget watts device processor designed power target watt able provide high performance functions speech recognition 
power budgets close current highperformance microprocessors tens watts unacceptable 
energy efficiency multimedia support third main requirement personal mobile computers small size weight 
desktop assumption chips external cache main memory infeasible pdas integrated solutions reduce chip count highly desirable 
related matter code size pdas limited memory keep costs size size program representations important 
final concern design complexity desktop domain scalability 
architecture scale efficiently terms performance terms physical design 
long interconnects chip communication expected limiting factor processors small region chip accessible single clock cycle avoided 
processor evaluation mobile multimedia applications table summarizes evaluation transistor architectures respect personal mobile computing 
support multimedia applications limited architectures 
order techniques caches delivered performance quite unpredictable guaranteed real time response hardware controlled caches complicate support data types 
fine grained parallelism exploited wide trace simultaneous chip multi ia raw superscalar processor multithreading processor real time ffi ffi ffi ffi response unpredictability order branch prediction caching techniques continuous ffi ffi ffi ffi ffi ffi data types caches efficiently support data streams little locality fine grained ffi ffi ffi ffi ffi parallelism mmx extensions efficient full vector support reconfigurable logic unit coarse grained ffi ffi ffi parallelism code size ffi ffi ffi ffi ffi potential loop unrolling software vliw hardware pipelining higher ilp instr 
configuration memory ffi ffi ffi ffi ffi ffi bandwidth cache designs energy ffi ffi power power penalty order schemes complex issue logic forwarding efficiency reconfigurable logic physical design ffi ffi ffi complexity design ffi ffi ffi ffi scalability long wires forwarding data reconfigurable interconnect table evaluation transistor processors personal mobile computing domain 
mmx reconfigurable execution units 
mmx extensions expose data alignment issues software restrict number vector simd elements operations instruction limiting way usability scalability 
coarse grained parallelism hand best simultaneous multithreading chip multiprocessor raw architectures 
instruction locality traditionally exploited large instruction caches 
designers portable system prefer reductions code size suggested bit instruction versions mips arm 
code size weakness ia architecture relies heavily loop unrolling performance surely larger bit risc machines 
raw may code size problems program reconfigurable portion datapath 
code size penalty designs depend exploit loop unrolling line procedures expose parallelism high performance 
memory bandwidth limited resource cache architectures especially presence multiple data sequences little locality streamed system 
potential streaming buffers cache bypassing help sequential bandwidth address scattered random accesses 
addition embarrassing rely cache bypassing transistors dedicated caches 
energy power efficiency issue despite importance portable desktop domains addressed designs 
redundant computation order models complex issue dependence analysis logic fetching large number instructions single loop forwarding long wires typically power hungry reconfigurable logic increase energy consumption single task power processor 
physical design scalability forwarding results large chips communication multiple core tiles main problem designs 
communication requires multiple cycles highperformance order designs 
simple pipelining long interconnects sufficient solution exposes timing forwarding communication scheduling logic software increases complexity 
table proposed processors fail meet requirements new computing model 
indicates need modifications architectures designs proposal different approaches 
desktop server computing personal mobile computing spec int desktop real time response spec fp desktop continuous data types tpc server ffi fine grained parallelism software effort ffi coarse grained parallelism ffi physical design complexity ffi code size memory bandwidth energy efficiency design scalability ffi table evaluation computing environments 
grades medians assigned reviewers 
vector iram vector iram architecture proposed research group authors effort processor architecture design matches requirements mobile personal environment 
main ideas vector processing integration logic dram single chip 
addresses demands multimedia processing addresses energy efficiency size weight demands pdas 
believe word computer architecture research mobile multimedia applications hope proves promising step 
processor described ieee special issue consists order dual issue superscalar processor level caches tightly integrated vector execution unit multiple pipelines 
pipeline support parallel operations multiple media types dsp functions multiply accumulate saturated logic 
memory system consists mbytes dram main memory 
organized hierarchical fashion banks sub banks bank connected scalar vector unit crossbar 
provides sufficient sequential random bandwidth demanding applications 
external brought directly onchip memory high speed serial lines operating range gbit parallel buses 
programming point view seen vector simd microprocessor 
table presents grades computing environments 
median grades reviewers including architects transistor architectures 
obviously competitive desktop server domain weakness conventional computing probably main reason skeptical importance merged logic dram technology 
case integer spec benefit expected vector processing integer applications 
floating point intensive applications hand shown highly vectorizable 
applications benefit low memory latency high memory bandwidth 
server domain expected perform poorly due limited chip memory 
potentially different evaluation server domain arise examine decision support dss oltp workloads 
case small code loops highly data parallel operations dominate execution time architectures raw perform significantly better oltp workloads 
terms software effort vectorizing compilers developed commercial environments years 
additional required tune compilers multimedia workloads 
design complexity highly modular design 
necessary building blocks inorder scalar core vector pipeline replicated times basic memory array tile 
due lack dependencies forwarding vector model order paradigm verification effort expected low 
open question case complications merging high speed logic dram cost yield testing 
dram companies investing merged logic dram fabrication lines companies exploring products area 
project submitting test chip summer key circuits merged logic dram process 
expect answer open question clearer year 
proposals challenge implementation technology microarchitectural design 
mentioned match personal mobile computing model 
design main cpu attractive servers radical approach servers places simm module disk communicate high speed serial lines crossbar switches 
order rely caches making delivered performance highly predictable 
vector model superior mmx solutions provides explicit support length simd instructions expose data packing alignment software scalable 
media processing functions algorithms working vectors pixels samples surprising highest performance delivered vector unit 
code size small compared architectures loops specified single vector instruction 
memory bandwidth sequential random available chip hierarchical dram 
expected high energy efficiency 
vector model dependencies limited forwarding pipeline needed chaining vector machines require chaining occur single clock cycle 
performance comes multiple vector pipelines working parallel vector operation highfrequency operation allowing performance lower clock rate lower voltage long functional units expanded 
energy goes square voltage cmos logic tradeoffs dramatically improve energy efficiency 
addition execution model strictly order 
logic kept simple power efficient 
dram traditionally optimized low power hierarchical structure provides ability activate just sub banks containing necessary data 
physical design scalability crossbar place long wires 
vector model tolerate latency sufficient fine grain parallelism available deep pipelining viable solution hardware software complications environment 
decades architecture research focussed desktop server machines 
result attention today microprocessors times faster 
designing processors heavy bias past 
example programs spec suite originally written years ago main drivers papers special issue transistor processors 
major point article believe time successful community investigate architectures heavy bias 
historic concentration processor research stationary computing environments matched consolidation processor industry 
years class machines microprocessors single architecture single 
time declare victory explore computer applications architectures 
years major computing devices shifted non engineering areas 
personal computing mainstream market portable devices computation communication entertainment popular multimedia functions drive application market 
expect combination lead personal mobile computing domain portability energy efficiency efficient interfaces media types voice images key features 
advantage new target architecture community need improvements terms mips watt demanding applications speech input longer battery life desired pdas 
clear desktop computers really need orders magnitude performance run ms office 
question asked proposed new architectures meet challenges new computing domain 
unfortunately answer negative form 
limited ad hoc support multimedia dsp functions provided power serious issue unlimited complexity design verification justified slightly higher peak performance 
providing necessary support personal mobile computing requires significant shift way design processors 
key requirements processor designers address energy efficiency allow battery operated devices focus worst case performance peak real time applications multimedia dsp support enable visual computing simple scalable designs reduced development verification cycles 
new benchmarks suites representative new types workloads requirements necessary 
believe personal mobile computing offers vision richer exciting set architecture research challenges extrapolations current desktop architectures benchmarks 
approach direction 
put way problem improving performance pcs running fpppp making speech input practical pdas 
acknowledgments ideas opinions result discussions iram group berkeley 
addition want people useful feedback comments criticism earlier drafts grades anant agarwal jean baer gordon bell pradeep lance hammond wang wen john hennessy mark hill john kubiatowicz corinna lee henry levy doug olukotun jim smith sohi 
research supported darpa dabt california state micro program nsf cda research lg hitachi intel microsoft sgi cray sun microsystems texas instruments 
semiconductor industry association 
national technology roadmap semiconductors 

burger goodman 
transistor architectures guest editors 
ieee computer september 
crawford huck 
motivations design approach ia bit instruction set architecture 
proceedings microprocessor forum october 
patt patel friendly stark 
transistors uniprocessor chip 
ieee computer september 
lipasti shen 
microarchitecture ad 
ieee computer september 
smith 
trace processors moving fourth generation microarchitectures 
ieee computer september 
eggers emer lo tullsen 
simultaneous multithreading platform generation processors 
ieee micro october 
hammond olukotun 
single chip multiprocessor 
ieee computer september 
taylor sarkar lee lee kim frank finch barua babb amarasinghe agarwal 
software raw machines 
ieee computer september 
hennessy patterson 
computer architecture quantitative approach second edition 
morgan kaufmann 
keeton patterson baker performance characterization quad pentium pro smp oltp workloads 
proceedings international symposium computer architecture appear june 

challenges trends processor design complexity 
ieee computer january 
rubinfeld 
challenges trends processor design managing problems high speed 
ieee computer january 

challenges trends processor design maintaining leading position 
ieee computer january 
killian 
challenges trends processor design challenges 
ieee computer january 

multimedia workloads change processor design 
ieee computer september 
dally 
tomorrow computing engines 
keynote speech fourth international symposium high performance computer architecture february 
lewis 
information appliances gadget 
ieee computer january 
cerf 
years networking 
acm conference proceedings march 
bell gray 
calculation years computing chapter revolution happen 
springer verlag february 

physical scalability sabotage performance gains 
ieee computer september 

thumb reducing cost bit risc performance portable consumer applications 
digest papers compcon february 
mudge 
strategic directions computer architecture 
acm computing surveys december 
patterson anderson cardwell keeton thomas yelick 
scalable processors transistor era iram 
ieee computer september 

holy grail embedded dram challenged 
ee times 
pey zhang torrellas 
memory performance dss commercial workloads shared memory multiprocessors 
proceeding third international symposium high performance computer architecture january 
keeton arpaci dusseau patterson 
iram overcoming bus bottleneck 
workshop mixing logic dram chips compute remember th annual international symposium computer architecture june 
keeton patterson hellerstein 
intelligent disk revolutionary approach database computing infrastructure 
submitted publication march 

