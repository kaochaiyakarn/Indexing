executing query packs ilp blockeel luc dehaspe bart jan ramon blockeel luc dehaspe bart jan ramon cs kuleuven ac katholieke universiteit leuven department computer science leuven belgium 
inductive logic programming systems usually send large numbers queries database 
lattice structure queries typically selected causes queries highly similar 
consequence independent execution queries may involve lot redundant computation 
propose mechanism executing hierarchically structured set queries query pack lot redundancy computation removed 
incorporated query pack execution mechanism ilp systems tilde warmr implementing new prolog engine provides support pack execution lower level 
evaluate set examples pack key leaf add report success right conjunction leaf increment evaluate pack compile load example key evaluate pack fig 

query packs compute result set tem interested result set provide report success predicate avoid overhead explicitly building result set 
note algorithm follows strategy running queries single example moving example called examples outer loop strategy opposed queries outer loop strategy ilp systems 
examples outer loop strategy important advantages processing large data sets see :10.1.1.42.5335
computational complexity lower upper bounds speedup factor achieved executing pack separate queries obtained follows 
pack containing queries time needed compute answer substitution obtain failure 
part spent part spent max representing total time needed executing queries separately respectively executing pack 
introducing possible show min 
