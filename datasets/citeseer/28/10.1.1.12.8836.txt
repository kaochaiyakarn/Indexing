exploratory mining pruning optimizations constrained associations rules raymond ng university british columbia rng cs ubc ca laks lakshmanan concordia university laks cs concordia ca alex pang university british columbia cs ubc ca jiawei simon fraser university han cs sfu ca standpoint supporting human centered discovery knowledge day model mining association rules suffers serious ings lack user exploration control ii lack focus iii rigid notion relationships 
effect model functions black box admitting little user interaction 
propose architecture opens black box supports human centered exploratory mining associations 
foundation architecture rich set con straint constructs including domain class ql style aggregate constraints enable users clearly specify associations mined 
propose constrained association queries means specifying constraints satisfied antecedent consequent mined association 
mainly focus technical challenges guaranteeing level performance rate selectivities constraints associ ation query 
describe mining algorithm called cap achieves maximized degree pruning categories constraints 
experimental results indicate cap run faster cases times basic algorithms 
demonstrates important succinctness anti monotonicity properties delivering performance guarantee 
problem mining association rules large databases subject numerous studies 
studies cover broad spectrum topics including fast algorithms apriori framework partitioning sampling ii incremental updating parallel algorithms iii mining generalized multi level rules iv mining quantitative rules mining multidimensional rules vi mining rules item constraints vii association rule query languages :10.1.1.13.7114:10.1.1.103.5437:10.1.1.117.5699:10.1.1.42.342:10.1.1.50.1686:10.1.1.144.4956:10.1.1.40.6757:10.1.1.41.407:10.1.1.41.407:10.1.1.12.6495:10.1.1.64.1356:10.1.1.40.8600
standpoint user interaction system process association mining summarized follows 
user specifies part database mined 
user specifies minimum thresholds measures support confidence 
system executes fast mining algorithms 
day model mining treats mining process black box allowing user set thresholds showing user associations satisfying thresholds 
user sets wrong thresholds simply wants change 
user wants focus generation rules specific small subset candidates properties data 
black box model tolerable time computation small seconds 
despite development efficient algorithms association mining remains process typically hours complete :10.1.1.13.7114:10.1.1.103.5437:10.1.1.117.5699:10.1.1.42.342:10.1.1.50.1686:10.1.1.40.6757
new invocation black box user allowed preempt process needs wait hours 
furthermore typically small fraction computed rules user looking 
user incurs high computational cost user wants gets 
suggested principle open black box establish clear breakpoints allow user feedback 
phase ii user instructs system find associations selected candidates 
problem lack focus user may certain broad phenomena mind focus mining 
example user may want find associations sets items types overlap associations item sets total price items sets average price verify ing purchases cheap items occur expensive ones 
interface expressing focus offered day model extremely impoverished allows thresholds support confidence specified 
note stud ies moving direction constraint query association mining works reviewed :10.1.1.41.407
suggested principle provide user opportunities express focus 
focus ensure system amount computation proportional user gets 
step ad hoc mining associations 
contributions architecture section provides rich interface user express focus 
section analyzes characterizes constraints anti monotonicity sec tion characterizes constraints succinctness 
sec tion develops algorithms mining associations constraints 
algorithms called cap incorporates earlier analyses anti monotonicity succinctness support maximized degree pruning 
experimental results shown section indicate cap run times faster algorithms classical apriori framework 
srikant consider association mining item constraints :10.1.1.41.407
consider essentially membership con straints context item taxonomy correspond small subclass categories constraints see section studied 
focus conjunctions negations constraints arbitrary boolean combinations constraints form type permit implicit forms disjunction 
spirit principle similar principle suggested hellerstein online aggregation user final say amount information wanted charged cost computation deemed unnecessary user 
consider domain sol style tion constraints far trivial cf 
spirit principle similar principle suggested hellerstein online aggregation user final say amount information wanted charged cost computation deemed unnecessary user 
consider domain sol style tion constraints far trivial cf 
importantly study focuses sis pruning properties substantial naturally useful class constraints 
classification constraints anti monotonicity succinctness fundamentally new 
algorithm cap provides highly effective pruning larger classes constraints algorithms :10.1.1.41.407
propose language association mining conditions 
focus sophisticated ways grouping tuples consider pruning optimizations effected conditions 
tsur propose interesting notion called query flocks describing parameterized query filter condition applied result query :10.1.1.117.5699
filter confined lower bound constraints num ber tuples returned query 
classification constraints anti monotonicity succinctness fundamentally new 
algorithm cap provides highly effective pruning larger classes constraints algorithms :10.1.1.41.407
propose language association mining conditions 
focus sophisticated ways grouping tuples consider pruning optimizations effected conditions 
tsur propose interesting notion called query flocks describing parameterized query filter condition applied result query :10.1.1.117.5699
filter confined lower bound constraints num ber tuples returned query 
general notion constraints classification role optimization association mining fundamentally new studied 
problem rigid notion relationship day model restricts notion associations rules support confidence exceed thresholds 
associations useful notions relationships may useful 
general notion constraints classification role optimization association mining fundamentally new studied 
problem rigid notion relationship day model restricts notion associations rules support confidence exceed thresholds 
associations useful notions relationships may useful 
exist significance metrics confidence equally meaningful 
example brin argue correlation useful circumstances :10.1.1.33.4036
second may separate criteria selecting candidates antecedent consequent rule 
example user may want find associations sets items sets types 
rule instance association meaning customers buy item item type 
coming different domains antecedent consequent may call different support thresholds requirements 
coming different domains antecedent consequent may call different support thresholds requirements 
suggested principle allow user flexibility choose significance metrics criteria satisfied relationships mined 
contributions phase architecture section provides flexibility 
prior entering phase ii user specify desired significance metric give different conditions satisfied antecedent consequent relationships formed 
proposals literature notion associations rigid :10.1.1.33.4036:10.1.1.144.4956:10.1.1.12.6495:10.1.1.64.1356
proposing 
proposing architecture allows alternative notions exist permits user choose appropriate application 
architecture shows phase architecture exploratory association mining 
user initially specifies called constrained association query includes set constraints including support thresholds antecedent consequent 
second column table identifies var constraints anti monotone 
third column succinctness discussed section 
domain constraints involving set op anti monotone 
similarly constraints involving rain anti monotone min shows min anti monotone 
mannila refer property monotonicity :10.1.1.42.342
prefer term anti monotone reason mentioned 
min superset may satisfy min minimum set may decrease elements added set 
rain equivalent rain rain sense 
hand violates rain violates rain superset violates rain case rain anti monotone 
algorithms computing constrained frequent sets section develop algorithms computing sets frequent satisfy constraints 
section experimental results comparing 
pseudo code algorithm hybrid algorithm apriori denote set constraints set items satisfy frequency constraint denoted fq 
illustrated computation classical fre sets tq provides pruning cf property section 
algorithm apriori shown straightforward extension classical apriori algorithm :10.1.1.40.6757
computes frequent sets steps verified remaining con straints step 
aris consists sets satisfy constraints algorithm hybrid algorithm apriori bad frequency constraint selective remaining ones tq 
converse true conceivable check ing tq followed verifying fq better 
algorithm hybrid shown set gives sequence executions 
constraint 
induce weaker constraints apply strategy iv 
depicted algorithm cap constrained apriori incorporates strategy handling multiple cap 
ern speedup vs selectivity speedup vs support performance comparison succinct anti monotone constraints constraints shows various strategies applied apriori framework pushing constraints deep inside mining process 
experimental evaluation evaluate relative efficiency various algorithms section implemented program developed ibm almaden research center generate transactional databases :10.1.1.40.6757
experimented various databases results cited database records domain items 
page size kbytes 
exper run environment 
set experiments compare gorithms succinct anti monotone constraint max price different values correspond different selectivities constraint 
sigmod pp 
agrawal 
parallel mining tion rules design implementation experience 
ieee tkde pp dec 
agrawal srikant :10.1.1.40.6757
fast algorithms mining association rules 
vldb pp 
baralis 
designing templates min ing association rules 
vldb pp 
baralis 
designing templates min ing association rules 
journal intelligent information systems pp 
brin motwani silverstein :10.1.1.33.4036
mar basket generalizing association rules correlations 
sigmod pp 
cheung ng wong 
main discovered association rules large databases incremental updating technique 
communications acm pp 
chiang 
guided mining multi dimensional association rules data cubes 
kdd pp 
klemettinen mannila toivonen verkamo :10.1.1.42.342
finding interesting rules large sets discovered association rules 
cikm pp 
lent swami widom 
clustering association rules 
vldb pp 
srikant agrawal 
mining quantitative tion rules large relational tables 
sigmod pp 
srikant vu agrawal :10.1.1.41.407
mining association rules item constraints 
kdd pp 
toivonen :10.1.1.117.5699:10.1.1.41.407
sampling large databases association rules 
sigmod pp 
srikant vu agrawal :10.1.1.41.407
mining association rules item constraints 
kdd pp 
toivonen :10.1.1.117.5699:10.1.1.41.407
sampling large databases association rules 
vldb pp 
tsur ullman clifton motwani nestorov :10.1.1.117.5699
query flocks generalization association rule mining 
kdd pp 
toivonen :10.1.1.117.5699:10.1.1.41.407
sampling large databases association rules 
vldb pp 
tsur ullman clifton motwani nestorov :10.1.1.117.5699
query flocks generalization association rule mining 
sta edu pub ps oct 
