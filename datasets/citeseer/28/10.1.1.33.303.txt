learning mobile robot theory simulation practice john hallam university edinburgh department artificial intelligence dai ed ac uk 
presents implementation sins multi strategy learning controller mobile robot navigation 
controller uses low level reactive control modulated line learning system case reasoning reinforcement learning 
case reasoning part captures regularities environment 
reinforcement learning part gradually improves acquired knowledge 
evaluation controller real simulated mobile robot 
low level behaviours fast reflexes 
learning mobile robot controllers advantageous burden exhaustive specificity 
learning help continually updated representations environment optimise low level behaviours 
robot controllers learn flexible prone succeed task meant 
solution object discussion self improving navigation system sins learning architecture ram santamaria ram santamaria ram :10.1.1.125.8033
case learning system top reactive system stands see pfeifer discussion 
blend reactive learning strategies 
appeals designer knowledge put system reactive behaviours plastic controlled line learning scheme allowing quite complex behaviour learned bias designer relatively low effort program 
apply time real robot original developed computer simulation 
behaviours configurable parameters adds degree plasticity 
section description sins architecture 
section describes testing methodology purpose results obtained 
section results obtained 
sins architecture sins self improving navigation system ram santamaria ram learning controller architecture reactive control case reasoning reinforcement learning :10.1.1.125.8033
devised developed tested computer simulation 
composed modules ffl reactive control module ffl line adaptation learning module modules free access sensory information robot run concurrently 
module collection reactive behaviours account immediate responsiveness system 
second case reinforcement learning system learns sets numerical functions time cases outlined output control parameters low level behaviours module 
noise persistence just described gains behaviours move avoid obstacles gain noise gain 
parameters take analogue values bounded range 
set parameters determines moment composite behaviour robot assumes allowing behaviour influence total behaviour robot take value maximal value zero 
indicators implementation sins ffl obstacle density reflects free space immediate vicinity robot ffl motion goal reflects robot progressing away goal ffl relative motion reflects robot moving motor activity ffl absolute motion reflects efficient motion robot low robot moving back forth 
sins khepera world sins described far ram santamaria required modifications order able run khepera mobile robot simulator michel cartesian computer simulation :10.1.1.125.8033
changes imperative architecture required global world information 
case cartesian movement relative motion absolute motion 
list changes followed brief description 
ffl relative absolute motion indicators dead reckoning left right encoders global coordinates 
ffl bump sensor programmed triggered distance sensors saturates 
physical bump sensor khepera 
ffl reinforcement function changed function bumps low absolute motion function rewards motion goal 
cluttered environment maze environment practical setup lego maze environment khepera robot light goal experiments sets experiments addressing specific problem 
new implementation vs original implementation experimenting khepera simulator cluttered environment comparing results ram santamaria :10.1.1.125.8033
effect maze environment navigation opposed cluttered environment navigation see 
effect running real robot comparing khepera simulator results maze environment real khepera performance equivalent real maze environment 
comparison results estimators evaluate performance 
percentage runs solved 
average steps world 
average distance travelled world 
average travelled optimal distance world 
average collisions world number runs const sins sins random random average steps run number runs random sins constant number runs random sins constant average actual optimal distance run number runs random sins number runs random sins constant khepera simulator results cluttered environment de light 
estimators ram santamaria provide direct way comparing results :10.1.1.125.8033
types controllers test efficiency line learning adaptation module ffl sins case reasoning reinforcement learning line learning adaptation module ffl constant yields constant behaviour parameters 
behaviours parameters move goal gain noise gain noise persistence avoid set range parameters 
ffl random continually sets behavioural parameters randomly 
performance evaluation concept run 
limit steps run set reached means run solved 
optimal distance distance measured straight line starting point run goal 
functions graphs running means 
controller runs steps distance travelled optimal distance collisions solved run run run run sins sins sins ratio constant constant ratio random random random ratio table khepera simulator results cluttered environment de light 
results ram santamaria :10.1.1.125.8033
new implementation vs original implementation experiments reported ram santamaria replicated khepera simulator :10.1.1.125.8033
cluttered world light de seen long distance 
allows gradient light felt part arena original implementation goal seen 
comparative study faithful 
optimal distance distance measured straight line starting point run goal 
functions graphs running means 
controller runs steps distance travelled optimal distance collisions solved run run run run sins sins sins ratio constant constant ratio random random random ratio table khepera simulator results cluttered environment de light 
results ram santamaria :10.1.1.125.8033
new implementation vs original implementation experiments reported ram santamaria replicated khepera simulator :10.1.1.125.8033
cluttered world light de seen long distance 
allows gradient light felt part arena original implementation goal seen 
comparative study faithful 
table shows performance different controllers new original implementation 
