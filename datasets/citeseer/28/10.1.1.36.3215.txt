persistent cache improving oid indexing temporal object oriented database systems department computer information science norwegian university science technology norway idi ntnu temporal oodb oid index oidx needed map oid physical location object 
transaction time temporal oodb oidx index object versions 
case index entries call object descriptors od include commit timestamp transaction created object version 
oidx non temporal oodb needs updated object created temporal oodb oidx updated time object updated 
previous study shown potential bottleneck report persistent cache pcache novel approach reduces index update lookup costs temporal oodbs 
report develop cost model pcache show pcache reduce average access cost fraction cost pcache 
technical report idi norwegian university science technology norway important feature oodbs object uniquely identified object identifier oid object accessed oid 
oid physical means disk page object directly oid logical means oid index oidx needed map logical oid physical location object 
toodb logical oids reasonable alternative objects frequently moved oidx necessary anyway index object versions 
entries oidx call object descriptors od contain administrative information including information mapping logical oid physical address commit timestamp 
oidx quite large non temporal oodbs typical size order size database :10.1.1.29.5597
means general small part oid index fits main memory oid index retrieval bottleneck efficient access buffering strategies applied 
important difference oidx management non temporal version object non temporal oidx needs updated object created 
done efficient append operation focus optimizing oidx lookups 
toodb oidx updated time object updated 
index pages general low locality unique part oid usually integer assigned monotonic increasing values result index updates serious bottleneck toodb 
reduce disk index operations index pages kept index page buffer 
oidx pages general low locality increase probability finding certain od needed mapping oid physical address possible keep index entries ods separate od cache done shore oodb 
low locality index pages separate od cache utilizes memory better space wasted large pages small parts 
od cache reduces index lookup costs considerably extended reduce index update costs :10.1.1.107.3052
writable od cache oidx updates costly 
report approach reduce oidx update costs 
noting main reason bottleneck oidx low locality entries oidx tree nodes intermediate disk resident buffer main memory buffer oidx 
call persistent cache pcache 
section describe object index management 
section describe pcache 
section develop oid access cost model section cost model study different pcache sizes memory sizes index sizes access patterns affect performance 
section conclude report outline issues research 
related temporal database systems general technology case transaction time aware prototype temporal oid indexing post :10.1.1.48.7333
performance result post relatively small databases index fits main memory expect larger number objects oidx bottleneck 
pcache similarities lham hierarchy indexes :10.1.1.104.100
important differences pcache lham lham entries level regularly moved lru management lham helps improving write efficiency read efficiency 
cost models report previous modeling non temporal oodbs temporal oodbs models extended include aspects pcache :10.1.1.107.3052
section develop oid access cost model section cost model study different pcache sizes memory sizes index sizes access patterns affect performance 
section conclude report outline issues research 
related temporal database systems general technology case transaction time aware prototype temporal oid indexing post :10.1.1.48.7333
performance result post relatively small databases index fits main memory expect larger number objects oidx bottleneck 
pcache similarities lham hierarchy indexes :10.1.1.104.100
important differences pcache lham lham entries level regularly moved lru management lham helps improving write efficiency read efficiency 
cost models report previous modeling non temporal oodbs temporal oodbs models extended include aspects pcache :10.1.1.107.3052
buffer tree models support versioning exists oodbs temporal management indexing operations 
compared simulation results detailed results simulations different index sizes buffer sizes index page fanout access patterns :10.1.1.48.7333
related temporal database systems general technology case transaction time aware prototype temporal oid indexing post :10.1.1.48.7333
performance result post relatively small databases index fits main memory expect larger number objects oidx bottleneck 
pcache similarities lham hierarchy indexes :10.1.1.104.100
important differences pcache lham lham entries level regularly moved lru management lham helps improving write efficiency read efficiency 
cost models report previous modeling non temporal oodbs temporal oodbs models extended include aspects pcache :10.1.1.107.3052
buffer tree models support versioning exists oodbs temporal management indexing operations 
compared simulation results detailed results simulations different index sizes buffer sizes index page fanout access patterns :10.1.1.48.7333
described report part toodb project :10.1.1.107.3052
toodb object index management start description oid indexing version management done toodb 
pcache similarities lham hierarchy indexes :10.1.1.104.100
important differences pcache lham lham entries level regularly moved lru management lham helps improving write efficiency read efficiency 
cost models report previous modeling non temporal oodbs temporal oodbs models extended include aspects pcache :10.1.1.107.3052
buffer tree models support versioning exists oodbs temporal management indexing operations 
compared simulation results detailed results simulations different index sizes buffer sizes index page fanout access patterns :10.1.1.48.7333
described report part toodb project :10.1.1.107.3052
toodb object index management start description oid indexing version management done toodb 
brief outline existing system design close possible integrate current oodbs desired basis oid indexing toodb 
temporal oid indexing traditional oodb oidx usually realized hash file tree ods entries oid key 
important differences pcache lham lham entries level regularly moved lru management lham helps improving write efficiency read efficiency 
cost models report previous modeling non temporal oodbs temporal oodbs models extended include aspects pcache :10.1.1.107.3052
buffer tree models support versioning exists oodbs temporal management indexing operations 
compared simulation results detailed results simulations different index sizes buffer sizes index page fanout access patterns :10.1.1.48.7333
described report part toodb project :10.1.1.107.3052
toodb object index management start description oid indexing version management done toodb 
brief outline existing system design close possible integrate current oodbs desired basis oid indexing toodb 
temporal oid indexing traditional oodb oidx usually realized hash file tree ods entries oid key 
toodb version objects need able access current old versions efficiently 
second approach linked list versions object 
accesses type get versions object oid efficient alternative linked list versions object 
access particular version valid time costly approach traverse object chain 
approach indexing index structure containing ods current previous versions 
efficient multiversion access methods exist tsb tree lham suitable purpose :10.1.1.104.100
search consecutive range oids oid search perfect match assumed current version 
tsb trees provides flexibility needed combined key range time range search implies extra cost lham high lookup cost current version searched 
report assume od object version stored tree 
include commit time time od concatenation oid time index key 
applying model object entries data granules probability od cache hit ocache buf ocache pi 
general index buffer model bdd lru buffer model models independent non hierarchical access 
modeling buffer hierarchical access complicated 
searches leaf page considered random independent nodes accessed traversal tree independent 
extended original model able analyze buffer performance case hierarchical index accesses :10.1.1.48.7333
observation level tree accessed probability assuming traversal root leaf search 
tree levels initially partitions 
partitions size tree tree number index pages level tree 
access probability partition 
index page access model noted assume low locality index pages 
way oids generated entries certain partition clustered index 
illustrated leaf node containing index entries contains unrelated entries different partitions 
means access pattern leaf nodes different access pattern database logical view 
described initial od partitioning od access pattern pi basis deriving leaf node access partitioning pi pcache hit rate denote probability certain od pcache note actual pcache page memory disk :10.1.1.48.7333
number ods pcache node sp od total spc nodes number ods fit pcache spc sp od probability certain od pcache nodes approximated buf pi pcache tidx buffer model pcache tidx shares page buffer model reflect 
access probabilities tidx nodes pcache nodes different result lru managed buffer hit rate different 
buffer model partitioning illustrated 
pcache partition level tree partition leaf node partition divided partitions reflecting existence hot spot nodes nodes belonging leaf node partitions need physically adjacent 
need gamma buf tidx disk accesses 
average cost tidx lookup lookup tidx gamma buf tidx probability ocache oid entry requested od cache gamma ocache requests access pcache 
probability pc entry pcache 
tidx accessed 
average cost retrieve entry interesting note approach things log structured file system philosophy parallel toodb :10.1.1.107.3052
lookup gamma ocache lookup pc gamma lookup tidx oidx update cost need update pcache index pages tidx immediately update done 
done background postponed increasing probability updates done index page written back 
calculate average index update cost total index update costs interval divided number updates 
context define checkpoint interval number objects written checkpoints 
proceedings ninth international conference data engineering 
effelsberg haerder 
principles database buffer management 
acm transactions database systems 
kossmann :10.1.1.29.5597
performance evaluation oid mapping techniques 
proceedings st vldb conference 
elmasri wuu 
time index monotonic tree 
prentice hall 

storage management methods object database systems 
phd thesis university wisconsin madison 
muth neil pick weikum :10.1.1.104.100
design implementation performance lham history data access method 
proceedings th vldb conference 
bratbergsengen :10.1.1.107.3052
log temporal object storage 
phd thesis university wisconsin madison 
muth neil pick weikum :10.1.1.104.100
design implementation performance lham history data access method 
proceedings th vldb conference 
bratbergsengen :10.1.1.107.3052
log temporal object storage 
proceedings th international workshop database expert systems applications dexa 
bratbergsengen 
analytical study object identifier indexing 
proceedings th international workshop database expert systems applications dexa 
bratbergsengen 
analytical study object identifier indexing 
proceedings th international conference database expert systems applications dexa 
bratbergsengen :10.1.1.107.3052
optimizing oid indexing cost temporal object oriented database systems 
proceedings th international conference foundations data organization 
bratbergsengen :10.1.1.48.7333
analytical study object identifier indexing 
proceedings th international conference database expert systems applications dexa 
bratbergsengen :10.1.1.107.3052
optimizing oid indexing cost temporal object oriented database systems 
proceedings th international conference foundations data organization 
bratbergsengen :10.1.1.48.7333
analytical study object identifier indexing 
technical report idi norwegian university science technology 
available www idi ntnu db 
suzuki :10.1.1.48.7333
bratbergsengen :10.1.1.48.7333
analytical study object identifier indexing 
technical report idi norwegian university science technology 
available www idi ntnu db 
suzuki :10.1.1.48.7333
development performance analysis temporal persistent object store post 
proceedings th australasian database conference 
ullman 
principles database knowledgebase systems 
