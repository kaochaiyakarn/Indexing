semantic query optimization abduction constraint handling gerhard wetzel logic systems lab department computer science college ny usa gw sci cuny edu sci cuny edu gw toni department computing imperial college london sw bz uk ft doc ic ac uk doc ic ac uk staff ft ft html 
integrity constraints perform semantic query optimization sqo deductive databases formalized way similar integrity constraints abductive logic programming alp constraint handling rules constraint logic programming clp 
observation similar role played respectively extensional abducible constraint predicates sqo alp clp unified framework variants sqo alp clp obtained special instances 
framework relies proof procedure combines backward reasoning logic programming clauses forward reasoning integrity constraints 
semantic query optimization sqo deductive databases uses implicit knowledge coded integrity constraints ics transform queries new queries easier evaluate ideally contain atoms extensional predicates 
sqo allows unsatisfiable queries rejected accessing database 
sqo uses ic show query answers accessing edb 
prolog process query look employee fact 
ics optimize queries adds standard checking maintaining consistency dynamically changing databases 
role semantics integrity constraints deductive databases general sqo particular see 
ics similar way abductive logic programming alp check maintain consistency dynamically generated explanations observations :10.1.1.13.7065
alp predicates ordinary processed backward reasoning clauses logic program abducible undefined program 
explanations consist atoms abducible predicates 
formally abductive logic program consists logic program set ics set candidate abducible predicates 
delta explanation observation delta consists atoms abducible predicates delta entails delta satisfies ics notions entailment ic satisfaction defined numerous ways 
sqo optimization query means ics may introduce new atoms extensional predicates query 
analogously alp ics may introduce abducibles explanations 
ics sqo alp similar extensional respectively intensional predicates sqo role abducible respectively ordinary predicates alp 
similarity noticed kakas 
constraint logic programming clp considers kinds predicates ordinary predicates processed backward reasoning clauses logic program constraint predicates simplified checked satisfiability built constraint solver :10.1.1.25.8566
goal solved reduced set constraints simplified 
ics form constraint handling rules chrs explicitly user define constraint solver :10.1.1.40.4255
example 
clp goal ics false 
ics sqo alp similar extensional respectively intensional predicates sqo role abducible respectively ordinary predicates alp 
similarity noticed kakas 
constraint logic programming clp considers kinds predicates ordinary predicates processed backward reasoning clauses logic program constraint predicates simplified checked satisfiability built constraint solver :10.1.1.25.8566
goal solved reduced set constraints simplified 
ics form constraint handling rules chrs explicitly user define constraint solver :10.1.1.40.4255
example 
clp goal ics false 
clp system employing built constraint solver working finite integer domain cc fd domain real numbers clp need explicit ics constraint solver recognizes constraints goal unsatisfiable respective domains 
built constraint solver ics chrs determine unsatisfiability goal ic transitivity adds goal second ic applicable generates false 
