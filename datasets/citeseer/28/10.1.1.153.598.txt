evolving cooperation strategies thomas haynes roger wainwright sandip sen department computer sciences university mail haynes sandip euler mcs edu identi cation design implementation strategies cooperation central research issue eld distributed arti cial intelligence dai 
propose novel approach tothe construction cooperation strategies group problem solvers genetic programming gp paradigm 
gps class adaptive algorithms evolve solution structures optimize evaluation criterion 
approach designing representation cooperation strategies manipulated gps 
results experiments predator prey domain extensively studied easy describe di cult solve cooperation problem domain 
key aspect approach isthe domain knowledge human intervention construction cooperation strategies 
promising comparison results systems lend credence approach 
topic areas evolutionary computation cooperation strategies researchers eld dai invested considerable time ande ort identifying domains multiple autonomous agents share goals resources need mutually acceptable sharing strategies accomplish common goals 
research partially supported ar sun microsystems operation strategies share problem environment agents working understood uncertain 
current approaches developing cooperation strategies line mechanisms extensive domain knowledge design scratch appropriate cooperation strategy cases strategy chosen reasonable impossible prove existence identify best cooperation strategy 
propose new approach cooperation strategies multi agent problem solving situations 
approach di erent existing techniques constructing cooperation strategies ways strategies cooperation incrementally constructed repeatedly solving problems domain cooperation strategies constructed line 
method strategy formulation modi cation relies little domain details human expertise problem solving performance randomly generated problems domain 
approach proposed completely domain independent paradigm develop repeated problem solving increasingly cient cooperation strategies 
gps populations structures evaluated evaluation criterion 
structures stored lisp symbolic expressions expressions manipulated better better structures evolved propagating parts structures fare measured evaluation criterion compared structures population 
gps shoot genetic algorithms share motivations propagating structures representation language 
cooperation strategies nd encoding strategies expressions choose evaluation criterion strategy corresponding arbitrary expression 
mapping strategies expressions vice versa done literals representing primitive actions domain application 
evaluations structures appropriately strategies represented structures done agents execute particular strategies application domain measure ciency ectiveness criteria relevant tothe domain 
test hypothesis useful cooperation strategies evolved non trivial problems decided predator prey pursuit game domain test new approaches developing cooperation schemes 
wide variety study domain multiple predator agents try capture prey agent surrounding 
organized follows section describes pursuit game presents brief summaries results ofthe solving problem section presents brief gp paradigm followed discussion encoding strategies pursuit problem form expressions manipulated section presents results experiments cooperation strategies predator prey pursuit domain section presents conjectures applicability approach cooperation strategies di erent problem domains 
pursuit problem predator prey pursuit problem common domain distributed arti cial intelligence dai research toevaluate techniques developing cooperation strategies 
original version problem introduced benda consisted blue predator agents trying capture red prey agent surrounding directions gridworld 
agent limited vertical step time unit 
movement red agent random chose neighboring location occupied blue agent randomly multiple predators allowed occupy location 
goal show ectiveness organizational structures varying degrees agent cooperation control ciency blue agents capture red agent 
approach undertaken gasser predators con guration predator occupying di erent quadrant quadrant ned diagonals intersecting atthe prey prey 
study aswell study singh group intentions agent coordination lacks experimental results allow comparison problem 
stephens merx performed series experiments relative ectiveness di erent control strategies local control predator broadcasts occupies neighboring location prey concentrate occupying locations neighboring prey distributed control predators broadcast positions step get choose target preys neighboring location centralized control single predator directs predators subregions lieb con guration mentioned 
experimented random initial positions predators prey centralized control mechanism resulted capture con gurations 
distributed control mechanism worked robust performance local control mechanism considerably worse 
reason high success rate predator prey agents took turns moves 
realistic scenario agents actions concurrently signi cant uncertainty problem 
levy rosenschein results game theory cooperative cooperative games choose optimal moves predators 
method minimizes communication agents computationally intensive provide comparable capture rate 
assumes predator see locations predators 
korf claims discretization continuous world allows horizontal vertical movements calls orthogonal game poor approximation provides greedy solutions problems predators allowed move diagonally diagonal game move rectangular grid hexagonal game 
design step brings nearest predator 
max norm distance metric distance locations solve games predator captured random con gurations games 
max norm distance metric suitable diagonal hexagonal game di cult justify orthogonal game 
ciency capture steps taken capture adds aterm evaluation moves enforces predators move away prey converging onthe prey eliminating escape routes 
measure succeeds diagonal hexagonal games orthogonal 
korf replaces randomly moving prey prey chooses move puts predator ties broken randomly 
claims problem considerably di cult believe predators turns moving experiments 
grid initial con guration consisting ofthe prey center predators placed random non overlapping positions smaller grid shown 
experiments agents choose action simultaneously world accordingly updated may need con ict resolution agents choose action updated world state 
allow agents occupy 
move simultaneously bumped back prior positions 
predator push predator prey decided move 
prey moves away nearest predator stay ectively predators travel speed compared prey 
shape games orthogonal form 
predator see prey predators possess explicit communication skills predators resolve con icts capture strategy 
genetic programming holland adaptive systems produced class biologically inspired algorithms known genetic algorithms gas solutions optimization learning types problems 
order gas bee ective solution represented ary strings shown gas adapted manipulate real valued features 
gas guaranteed solutions simulated annealing algorithms possess properties optimal allocation trials substrings evaluating exponential number schemas linear number string evaluations useful number practical applications 
koza programming motivated representational constraint traditional gas 
koza claims large number apparently dissimilar problems arti cial intelligence symbolic processing optimal control automatic programming empirical discovery machine learning reformulated search program produces correct input output mapping domains 
uses traditional ga operators selection recombination individuals population structures applies structures represented expressive language traditional gas 
representation language gps computer programs represented lisp expressions 
gps possess nice theoretical properties traditional gas period time attracted tremendous number researchers wide range applicability ofthis paradigm easily interpretable form solutions produced algorithms 
described follows 
randomly generate programs terminals problem 

repeat termination condition satis ed assign population executing domain problems performance solving problems 
create anew generation programs applying tness proportionate selection operation followed genetic recombination operators follows select programs replacement current population probability distribution 
create new population programs pairing individuals swapping random sub parts programs 

best program generations static domains best program example grid prey predators numbered 
run dynamic domains solution produced algorithm 
experiments gp algorithm put tothe task evolving program choose moves 
predators 
program population represented strategy implicit cooperation capture prey 
discussion evolution programs section 
terminal type purpose boolean true false bi agent 
prey agent prey 
tack random tack inthe range north west 
table terminal set encoding strategies gp generated programs expressions represented corresponding parse trees 
leaf nodes trees occupied element terminal set nodes occupied elements ofthe function set 
terminal function sets determined domain application choice sets problem table table 
domain root node parse trees enforced tack returns number corresponding choices agent predator north east west south 
evaluation cooperation strategies evolve cooperation strategies gps need rate ectiveness cooperation strategies represented programs expressions 
chose evaluate strategies putting randomly generated pursuit scenarios 
scenario program run time steps moves agent comprises simulation 
percentage capture tness comparing strategies 
initial population strategies randomly generated strategies produce capture need additional terms tness function di evaluate bad strategies 
key aspect gps gas particular structure ective may contain useful sub parts combined useful subparts produce highly ective structure 
evaluation tness function designed useful sub structures assigned due credit 
analysis mind designed evaluation function contain terms move tothe strategy predator tness grid width distance predator prey added tness program representing strategy 
brings predators function return arguments purpose return cell agent get cell tack ifthenelse type boolean generic 
type 
boolean length true length false 
md length cell manhattan distance 
table function set prey longer stay higher tness strategy 
term favors programs produce capture number moves 
simulation ends predator occupying adjacent tothe prey anumber equal number moves allowed grid width added tness program 
term differentially evaluates situations predators surround prey 
ends capture position additional amount number moves allowed grid width added tness program 
term strongly biases evolutionary search programs enables predators maintain positions succeed capturing 
distance agents manhattan distance sum sets locations 
generate general solutions ones dependent predator prey con guration training cases run population generation 
tness measure average training cases 
training cases generations randomly generated generation 
experimental results research extension md prey bi md prey bi md prey bi md bi prey md bi prey md prey bi md bi prey program best program generated gp 
graphical reporting system created windows tcl blt extension system modi cation 
expected initial randomly generated programs extremely poor strategies 
gp successful evolving increasingly ective strategies bythe improvement maximum tness structures population see 
fluctuations tness occur entire run random initial con gurations change successive generations 
generation best program contains nodes tness program structure shown see program 
strategy see program various relative positions predator respect prey graphically represented 
interesting agents converge prey usingthe policy 
signi cantly stable captured allows prey escape opposed korf max norm metric solution orthogonal game 
gure shows corresponding action choices predators version korf algorithms max norm manhattan distance metrics respectively 
korf version program pruned size loss functionality call true condition returns part structure 
construct replaced part change program 
decided actual structure bythe gp 
best fitness generation example tness curve 
ties broken randomly gure ties broken deterministically order word case tie north east moves north hard tell fare better average just looking gures 
gp produced plausible strategy little domain information 
furthermore approach agents assumed cognizant location prey ofthe predators 
program developed gp movements usingthe max norm mn manhattan distance md metrics run steps test cases set randomly generated con gurations average number captures table 
running experiments larger number steps raise capture rate algorithms expect relative performance change 
generated con gurations experiments run types prey move directions stay chose step away nearest predator prey action choice prey moved rst followed predator agents chose moves synchronously 
agents choose moves randomly random prey ties broken randomly data inthe table averaged runs test cases runs test cases 
table contains data experiments korf original algorithms predators see followed predator sequence max norm manhattan distance cases labeled mno mdo respectively 
table general trends exceptions 
observations fromthe table max norm metric algorithms mn mno prey captured escape 
algorithms prey capture position run prey captured run call shadow capture 
numbers discussion rating di erent strategies 
manhattan distance metric algorithm beats max norm metric algorithm mno beats random prey moves asthe predators 
prey capture prey moving predators move md case prey moving apparently uncommon number averaging sothat wilcoxon matched pair test test signi cance results 
example pursuit paths stgp mn md away nearest predator 
explain trend consider 
prey moves rst escape 
agents move simultaneously rand may decide move location get bounced back tothe current locations 
sequence repeated prey randomly decides stay time captured move location 
randomly moving prey captured frequently prey nearest predator md mdo prey moves rst 
analyzing average number steps taken capture prey data shown table prey captured quickly mno gp mdo prey moves time 
korf claimed random prey easier capture moves away nearest predator 
emphasize prey decides stay signi cant frequency 
korf experiments prey stood time frequency staying moves choosing stay randomly choices rest moves 
performed additional experiments onthe test cases prey randomly chose move adjacent open positions performance algorithms deteriorated noticeable decrease moving time 
implementations korf algorithms signi outperforms corresponding original formulations korf mn outperforms mno md outperforms mdo 
view improvement tohave additional signi cance mn md require predators see predators take turns moving required mno mdo 
improvement due fact allow agents try move location contained agent 
explains leads permanent capture mn mno 
shows assumption predators able push stationary predators allow predators md algorithm escape situations experienced predators mdo algorithm 
addition allows cient pursuit prey 
agents mdo strategy stand grounds move south ectively increasing distance predators 
agents follow md strategy move south means move south push stationary south prey set moves 
averaged scenarios test cases ranking ofthe algorithms decreasing order actual capture rates follows md gp mdo mn mno average shadow captures mno greater average actual capture rate 
cooperation strategies predators capture prey moving stephen test cases random test cases prey random prey prey random prey prey rst synch 
prey rst synch 
prey rst synch 
prey rst synch 
gp mn md mno mdo table average number captures di erent runs standard deviations parentheses 
md agent mno equal probability chooses stay moves shown allowing prey escape time 
mno mn stay move east west allowing prey escape 
mdo md stay maintaining capture position 
mdo retain current location 
md prey move south east chosen conducive situation capture produced 
grid world 
implemented improved versions greedy heuristic strategies capturing prey 
improvement changing assumptions environment 
korf claim simple solution exists predator prey problem challenged experimental results table 
particular observe signi cantly high capture rates 
korf original algorithms max norm manhattan distance metrics mno mdo outperformed modi ed algorithms mn md program evolved gp results test cases previous study additional randomly generated test cases show solution evolved competitive handcoded algorithm looses md algorithm 
analyzing reason di erence performance pictorial representations strategies see provides little clue explain ect 
results suggest predator prey domain closed shut case 
provides interesting challenges experiment multi agent ordination techniques 
impact agent capabilities sensing noise handling communication simultaneous actions studied varying di erent parameters domain 
risking stigma blocks world problem dai describe di cult solve domain testbed comparing di erent coordination mechanisms 
shown gp paradigm apparently complex cooperation strategies deep domain knowledge 
evolved strategies fared extremely compared ofthe best manually constructed strategies 
believe approach developing coordination schemes holds promise domains designer understanding coordination strategy 
place strategy prey plan perform experiments predators prey evolved 
expect number sur terms types attack evasion strategies discovered trigger 
current provided manhattan distance measure function gp program 
instructive see gp evolve necessary functionality fromthe elementary function terminal sets 
coord agent tack 
coord agent tack 

benda jagannathan 
optimal cooperation knowledge sources 
technical report bcs boeing boeing computer services wa august 
lawrence davis editor 
handbook genetic algorithms van nostrand reinhold new york ny 
les gasser nicolas randall hill john lieb 
representing organizational knowledge dai systems 
les gasser michael huhns editors distributed articial intelligence volume notes arti cial intelligence pages 
pitman 
thomas haynes roger wainwright 
simulation adaptive agents environment 
proceedings acm symposium applied computing pages 
acm press 
john koza 
genetic programming ii automatic discovery reusable programs 
mit press 
ran levy je rey rosenschein 
gametheoretic approach tothe pursuit problem 
working papers th international workshop distributed arti cial intelligence pages february 
martin martin 
graphs blt 
gp ftp archives 
david montana 
strongly typed genetic programming 
technical report bolt beranek newman march 
john ousterhout 
tcl tk toolkit 
addison wesley reading ma 
sachs 
applied statistics handbook techniques 
springer verlag 
munindar singh 
ect agent control strategy performance dai pursuit problem 
working papers th international workshop distributed arti cial intelligence october 
larry stephens matthias merx 
agent organization ector dai system performance 
working papers th international workshop distributed arti cial intelligence september 
larry stephens matthias merx 
ect strategy performance dai pursuit problem 
proceedings distributed ai workshop october 
john holland 
natural articial systems 
university michigan press ann arbor mi 
kenneth kinnear jr editor 
advances genetic programming 
mit press cambridge ma 
richard korf 
simple solution pursuit games 
working papers th international workshop distributed arti cial intelligence pages february 
john koza 
genetic programming programming computers means natural selection 
mit press 

