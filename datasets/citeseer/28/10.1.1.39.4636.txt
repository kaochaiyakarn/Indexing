architecture secure service discovery service steven ben zhao todd hodes anthony joseph randy katz computer science division university california berkeley hodes randy cs berkeley edu widespread deployment inexpensive communications technology computational resources networking infrastructure network enabled devices poses interesting problem users locate particular network service device hundreds thousands accessible services devices 
presents architecture implementation secure service discovery service sds 
service providers sds advertise complex descriptions available running services clients sds compose complex queries locating services 
service descriptions queries extensible markup language xml encode factors cost performance location device service specific capabilities 
sds provides fault tolerant incrementally scalable service locating services wide area 
security core component sds necessary communications encrypted authenticated 
performing operations updates occur leaves called description aggregation performing function iterating tree called query routing cases service descriptions stored servers periodically refreshed summaries sent tree 
sds far difficult problem systems build application level routing infrastructure 
due allowance multi criteria selection arbitrary attribute value pairs queries 
novelty sds attacking wide area discovery problem case queries hierarchical structure embedded 
multiple systems solved wide area scaling non hierarchical queries independently know succeeded addressing :10.1.1.50.8150
look approach lossy aggregation query routing 
approach hashing hash summarization bloom filtering 
hashing summarizes data creating unique mapping data short fixed length bitstring arbitrarily long 
unfortunately sds queries contain subsets tags exact matches just computing hash service description sufficient possible matching query values hashes called subset hashes computed 
knob depth cross product number tag combinations hashed 
aggregation bloom filter tables 
solution computation problem remains second problem space 
service tens hundreds hashes hashes stored locally hashes propagated hierarchy index 
approach solving problem bloom filters :10.1.1.153.5656
bloom filter summarization method uses bit vector bits set positions corresponding set hash values data 
key property bloom filters provide hashed summarization set data collapse data fixed size table trading increased probability false positives index size exactly knob need address issue long hash lists 
approach causes false misses maintaining correctness lossy aggregation function 
basic probability false positives independent limiting number tag cross products hashed reduced hash functions longer bit vectors numbers sized root node sized acceptable false positive rate root knows service hashes shouldn just full ones summarize ideas applied sds sds server applies multiple hash functions keyed md groups bits single md various subsets tags service announcements uses results set bits bit vector 
