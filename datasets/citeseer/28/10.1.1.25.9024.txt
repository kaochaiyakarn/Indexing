representative objects concise representations semistructured hierarchical data nestorov jeffrey ullman janet wiener sudarshan chawathe department computer science stanford university stanford ca usa ullman wiener db stanford edu www db stanford edu introduce representative object inherent schema semistructured hierarchical data sources provides concise description structure data 
semistructured data data stored typical relational object oriented databases fixed schema known advance stored separately data 
rapid growth world wide web semistructured hierarchical data sources widely available casual user 
lack external schema information currently browsing querying data sources inefficient best impossible worst 
show representative objects schema discovery efficient facilitate generation meaningful queries data 

sections alternative approaches building ro graph approach automaton approach 
section presents outlines 

preliminaries section describe data model 
object exchange model oem designed specifically representing semistructured data representative objects applicable useful :10.1.1.45.8397
oem described modification original oem introduced :10.1.1.45.8397
define terms related structure objects oem 
define functions form basis representative object definitions 

section presents outlines 

preliminaries section describe data model 
object exchange model oem designed specifically representing semistructured data representative objects applicable useful :10.1.1.45.8397
oem described modification original oem introduced :10.1.1.45.8397
define terms related structure objects oem 
define functions form basis representative object definitions 

object exchange model data model oem simple self describing object model nesting identity 
displaying part fro object 
path queries interesting queries semistructured data necessarily involve wild cards schema data known advance may change 
answer efficiently queries finding simple path expressions instance data paths object match wild card pattern query 
illustrate point example 
wild card pattern syntax example described path expressions expressible called general path expressions :10.1.1.45.8397:10.1.1.45.8397
example denotes optional label matches number characters 
example consider pattern gpe club player na object 
words looking simple path expressions instance data paths object start club followed player label na 
ffl find continuation ffl 
looking complicated conditions help graph approach ros 
ffl updating minimal oem 
object changes minimal fro oem change 
construction minimal fro scratch expensive need way updating old minimal fro accordingly 
abiteboul quass mchugh widom wiener :10.1.1.45.8397
lorel query language semistructured data 
technical report dept computer science stanford university 
available anonymous ftp db stanford edu 
hopcroft 
