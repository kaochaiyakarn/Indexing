copyright anton manolescu micro workflow workflow architecture supporting compositional object oriented software development anton manolescu diploma de nr 
diploma de university illinois thesis submitted partial fulfillment requirements degree doctor philosophy computer science graduate college university illinois urbana champaign urbana illinois micro workflow workflow architecture supporting compositional object oriented software development anton manolescu ph department computer science university illinois urbana champaign ralph johnson advisor workflow technology process support lies center modern information systems architectures 
despite large number commercial workflow systems object oriented developers implement business scientific manufacturing processes home workflow solutions 
current workflow architectures requirements assumptions don hold context object oriented software development 
dissertation proposes micro workflow new workflow architecture bridges gap type functionality provided current workflow systems type workflow functionality required object oriented applications 
micro workflow provides better solution focus customizing workflow features integrating systems 
workflow technology workflow technology decades 
hammer colleagues focused procedures office information systems 
time ellis nutt recognized importance developing models office procedures working ex office information system xerox parc 
research placed emphasis process models 
winograd flores proposed speech act model ellis nutt worked petri net models :10.1.1.151.3701
workflow expanded fields office automation document imaging 
technology didn meet expectations business users 
rigid workflow solutions time environments situated offered restrictive alternative captured momentum 
researchers realized success workflow technology limited narrow perspective 
model flow tier contains process logic tier corresponds basic process activities 
flow tier controls automates coordination tier 
workflow management provides environment definition enactment process logic 
process technology ubiquitous 
example people combine activities realize objective value customer deal business processes :10.1.1.151.3701
people distribute coordinate activities workers information system resources deal infor mation processes 
people manufacturing relate activities concerned production physical products deal material processes 
scientists focusing activities part scientific experiments deal scientific processes 
workflow users design optimize processes high level process descriptions flow tier 
products take approach 
absence common standard discussed chapter hard prob lem 
proprietary interfaces difficult applications workflow system 
example provides interfaces workflow objects api api forms control api security api launch process specifications server side dll database specifications 
accord ing alonso colleagues number order hundreds case :10.1.1.50.3212
application supports workflow products implement able number apis 
colleagues studied problems associated applications workflow management system apis 
study concludes case studies survey integration legacy systems critical success factor project 
considerable efforts necessary integrate different systems workflow application 
minimal responsibilities workflow system 
workflow management system enable users define execute workflows 
focal point architecture micro workflow core provides functionality 
approach yields lightweight workflow system 
muth colleagues observe doing research new workflow architecture tradeoff simple kernel architecture limited functionality benefit sharing functionality rich kernel challenge lies defining kernel functionality interfaces keeping lightweight enabling software developers selectively add features typical monolithic workflow architectures :10.1.1.47.3595
defining workflows software developers micro workflow architecture define workflows activity process model 
process model consists key process abstractions relationships 
activity process models activity nodes control flow 
capture coordinate process activ focus modeling done 
clarity shows field offices 
problems solutions described unusable real setting bility availability issues shouldn ignored 
problems stem fact workflow cor responding followup case comprises entire process executes centralized manner 
researchers identified centralized model typical current workflow architectures limitations 
example analysis contemporary workflow systems alonso colleagues conclude architecture centralized server vulnerable server failures offers limited scalability due potential performance bottlenecks caused centralized servers :10.1.1.50.3212
technical problems previous solutions administrative problems 
centralized flow execution may concerns belong different realms 
case followup process mixing lab field office procedures causes administrative conflicts sites belong organization 
thorny problem processes distributed tional boundaries 
workflow architecture centralized execution technical administrative problems distributed processes 
type architecture deal type process 
developers avoid problems centralized execution breaking workflow separate pieces executes different locations 
effect corresponds distributing workflow ex sites common goal 
alonso colleagues identified distributed execution workflow processes interesting research area enhance flow systems :10.1.1.50.3212:10.1.1.50.3212
subsequent workflow research refers type cooperation different workflow systems federated workflow 
federated workflow involves integration workflow management systems global workflow 
survey current workflow products finds existing systems totally :10.1.1.50.3212
consequently workflow interoperability context federations heterogeneous workflow systems hard problem 
effect corresponds distributing workflow ex sites common goal 
alonso colleagues identified distributed execution workflow processes interesting research area enhance flow systems :10.1.1.50.3212:10.1.1.50.3212
subsequent workflow research refers type cooperation different workflow systems federated workflow 
federated workflow involves integration workflow management systems global workflow 
survey current workflow products finds existing systems totally :10.1.1.50.3212
consequently workflow interoperability context federations heterogeneous workflow systems hard problem 
issue represents main barriers way federated workflow 
current research efforts focus finding architectural solutions solve problem 
federated workflow involves sharing information participating workflows 
history component logs 
likewise workflow monitor application gui display current state workflow trigger actions 
characteristic case study interesting research viewpoint requires workflow functionality integrates application objects provide interfaces human workers 
section shown micro workflow supports incremental integration workflow tech applications 
muth colleagues identify characteristic requirements new generation workflow architectures extending workflow management system functionality application needs worklist history management possible :10.1.1.47.3595
particular incremental integration process limited amount workflow manage ment system functionality exploited workflow application 
primitiveprocedure sends proposals reviewers supervisor 
primitiveprocedure sends reviewer supervisor result 
primitiveprocedure sends assignments reviewer 
developers undo semantic compensation mechanisms depending type processing carried domain object 
persistence component framework database independent 
developers choose type database build application existing database schema 
worklist component provides full control worklist handling enables developers specialized directory services staff resolution 
various studies identified absence support manual intervention shortcomings current workflow systems feature :10.1.1.50.3212
strep throat treat ment process described section implemented workflow system supports manual intervention 
solution built traditional workflow architecture doesn update update primitiveprocedure sends patient nurse 
update strep throat workflow updating records 
examination test update examination self 
micro workflow shares ideas non monolithic workflow architecture ad task model consists task task controllers 
features separate components 
focuses extending core composition customizing architecture techniques familiar object oriented developers 
discussed solution detail 
dynamic changes studies identified poor support dynamic changes referred adaptive workflow ad hoc workflow flexible workflow major shortcomings current workflow products :10.1.1.50.3212
consequently support dynamic changes subject extensive research 
research reported thesis specifically target issue shares characteristics projects aim supporting dynamic changes 
mobile goals mobile project university erlangen provide flexible workflow management system 
better understand problem project proposes classification scheme flexibility workflow management applications 
workflow monitor procedure workflowsession workflowsession context procedureactivation context procedureactivation procedure workflow workflow mapper procedureactivation procedureactivation procedureactivation string workflow workflow context context context string context uses uses container micro workflow federated workflow component 
agha 
actors model concurrent computation distributed systems 
mit press cambridge massachusetts 
alonso agrawal el abbadi mohan :10.1.1.50.3212
functionality limitations current workflow management systems 
available web www almaden ibm com cs ps 
alonso agrawal el abbadi mohan nth kamath 
persistent message architecture distributed workflow management 
