view maintenance warehousing environment yue zhuge hector garcia molina joachim hammer jennifer widom repository integrated information drawn remote data sources 
warehouse ectively implements materialized views maintain views data sources updated 
view maintenance problem di ers traditional view de nition base data decoupled 
show decoupling result anomalies traditional algorithms applied 
introduce new algorithm eca eager compensating algorithm eliminates anomalies 
eca previous incremental view maintenance algorithms extra compensating queries eliminate anomalies 
see variety levels correctness may di erent applications 
sections new algorithms number examples 
section compare performance eca algorithm view recomputation approach 
section conclude discuss directions 
additional details additional examples proofs analyses lengthy intricate included body zgmhw available anonymous ftp host db stanford edu :10.1.1.19.5246:10.1.1.19.5246
related research incremental view maintenance algorithms developed 
designed traditional centralized database environment assumed view maintenance performed system full control knowledge view definition base relations updated tuples view hd qw si 
algorithms di er somewhat view de nitions handle 
example blt considers select project join spj views algorithms gms handle views de ned sql datalog expression 
avoid invalid view states eca collects intermediate answers temporary relation called collect updates view answers pending queries received uqs 
algorithm eca collect 
source events behave exactly algorithm 
warehouse upi receive ui qi qj uqs send qi source trigger event qui source ansi receive ai collect collect ai uqs mv mv collect collect algorithm example example illustrates eca handling insertions di erent base relations 
number additional eca examples zgmhw :10.1.1.19.5246:10.1.1.19.5246
example eca consider source relations view de nition suppose events occur 
initially materialized view warehouse empty collect initialized empty 
brevity omit source events listing events occurring warehouse 
assume updates occur source queries answered 
warehouse sends hu hu hu 
warehouse receives collect uqs fq 
warehouse receives collect uqs fq 
warehouse receives collect uqs warehouse updates view mv collect correct 
complete proof showing algorithm strongly consistent zgmhw :10.1.1.19.5246:10.1.1.19.5246
notice eca complete 
recalling section completeness requires source state re ected view state 
clearly source states may missed eca algorithm collects query answers 
modify eca obtain complete algorithm call lazy compensating algorithm lca 
incorrect ways contains extra tuple produced evaluated insert 
missing tuple evaluated delete 
problems resolved warehouse extra tuple identi ed duplicate received 
missing tuple deleted 
details sketch eca correctness proof appear zgmhw :10.1.1.19.5246:10.1.1.19.5246
eca local algorithm original eca uses compensating queries avoid anomalies may occur queries sent source 
eca relies key properties avoid compensating queries furthermore eca introduces concept local updates deletions case eca handled warehouse sending queries source 
algorithm discuss eca local algorithm eca combines compensating queries eca local updates eca produce algorithm applies general views 
eca update handled locally 
note comprehensive analysis number parameters fully studied ranging number relations exact sequence timing updates way queries optimized source 
selected representative scenario serves illustrate performance tradeo analysis focus separate cost factors number messages sent source warehouse number bytes transferred source warehouse io thenumber performed source 
rv eca identical update noti cation messages sent costs included calculations 
section listed table shown default values 
rv algorithm described informally section formal speci cation provided zgmhw :10.1.1.19.5246:10.1.1.19.5246
variable description default number messages sent total transferred io number cardinality relation size projected attributes bytes selection factor join factor updates source table list variables 
performance number messages assume sequence updates 
rv assume warehouse sends query message source asking recompute view updates counting query answer messages total number messages mrv ke 
rv generates messages view recomputed messages view recomputed update 
eca best case compensating queries needed updates su ciently spaced query processed update occurs source 
note case eca performs ciently original incremental algorithm algorithm 
worst case eca updates occur rst query arrives source 
intuitively di erence best worst cases eca represents compensation cost 
calculations analyzing algorithms complex omitted complete derivations zgmhw :10.1.1.19.5246:10.1.1.19.5246
particular expressions derived zgmhw number bytes transferred cj cj shows number bytes transferred function cardinality :10.1.1.19.5246:10.1.1.19.5246
graphs parameters default values table indicated 
best worst cases shown algorithms 
algorithm actual performance best worst case curves depending timing update arrivals eca frequency view recomputation rv 
note case eca performs ciently original incremental algorithm algorithm 
worst case eca updates occur rst query arrives source 
intuitively di erence best worst cases eca represents compensation cost 
calculations analyzing algorithms complex omitted complete derivations zgmhw :10.1.1.19.5246:10.1.1.19.5246
particular expressions derived zgmhw number bytes transferred cj cj shows number bytes transferred function cardinality :10.1.1.19.5246:10.1.1.19.5246
graphs parameters default values table indicated 
best worst cases shown algorithms 
algorithm actual performance best worst case curves depending timing update arrivals eca frequency view recomputation rv 
versus see spite compensating queries eca cient rv terms data transferred relations involved extremely small approximately tuples 
algorithm actual performance best worst case curves depending timing update arrivals eca frequency view recomputation rv 
versus see spite compensating queries eca cient rv terms data transferred relations involved extremely small approximately tuples 
result continues hold wide ranges join selectivity small see equations 
reasons eca appears perform considering updates amount compensation limited 
zgmhw extend analysis arbitrary number updates obtain equations cj ks cj ks ks shows number bytes transferred function :10.1.1.19.5246:10.1.1.19.5246
expected crossover point recomputing view rv best case superior best case versus eca 
example crossover updates 
eca worst case updates occur source queries arrive warehouse query compensate preceding update 
behavior results eca transmitting additional data quadratic number updates 
notice relatively small relations larger cardinalities crossover points larger number updates 
note rv best case comparing assumes view recomputed matter updates occur 
rv recomputes view frequently number updates cost substantially higher 
particular expensive substantially worst performance estimating number performed source similar estimating number bytes transferred 
details estimation discussed zgmhw :10.1.1.19.5246:10.1.1.19.5246
consider extreme scenarios indexing ample memory available memory limited indexes 
studying extremes lets discover conditions favorable algorithms consider 
due space limitations graph illustrate type results obtained 
gives number function number updates second scenario studied limited memory indexes 
ieee transactions knowledge data engineering june 
tb tompa blakeley 
maintaining materialized views accessing base data 
information systems 
zgmhw zhuge garcia molina hammer widom :10.1.1.19.5246
view maintenance warehousing environment 
technical report stanford university october 
available anonymous ftp host db stanford edu pub zhuge anomaly full ps 
