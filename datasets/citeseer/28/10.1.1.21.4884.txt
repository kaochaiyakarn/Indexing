structure performance decision support algorithms active disks acharya joel saltz dept computer science dept computer science dept computer science university maryland university california university maryland college park santa barbara college park growth usage trends large decision support databases indicate need archi scale processing power dataset grows 
trends indicate processing demand large decision support databases growing faster improvement performance commodity processors 
meet need researchers proposed active disk idisk architectures integrate substantial processing power memory disk units 
examine utility active disks decision support databases 
try answer questions 
possible restructure algorithms common decision support tasks utilize ac tive disks 
results winter large database surveys document growth decision support databases 
example decision support database grew tb tb 
usage trends indicate change user expectations regarding large databases primarily archival storage frequent entirety 
patterson quote observation greg processors doubling performance months customers doubling data storage twelve months mine data shape business practices 
meet need researchers proposed active disk idisk architectures integrate substantial processing power memory disk units :10.1.1.160.4322
architectures allow application speci code downloaded executed data read written disk 
utilize active disks application partitioned host resident component disk resident component 
key idea bulk processing disk resident processors host processor primarily coordination scheduling combination results individual disks 
active disks promising architectural direction reasons 
second performance active disks compare traditional servers algorithms 
active disks integrated software architecture decision support databases 
address questions ways 
active disk algorithms suite common decision support tasks select aggregation group datacube operation external sort project join queries datamining association rules retail transaction data materialized views 
derived algorithms known cient algorithms literature :10.1.1.126.1870:10.1.1.108.3178
second compare performance active disks shared memory multiprocessor servers tasks 
shared memory multiprocessors widely relational databases estimate machines sold handling relational databases 
show stream programming model proposed active disks meshes software architecture relational databases 
background active disks section provide brief active disks 
smp algorithm processor dynamically selects kb chunks input relation directly writes results destination bu er block transfer 
select aggregate perform little computation byte 
sql group group operation computes dimensional vector aggregates indexed list attributes 
partitions relation disjoint sets tuples value index attribute computes aggregate value set tuples 
graefe shows hashing techniques outperform sort nested loop techniques implementing group operation :10.1.1.108.3178
accordingly hashing algorithm starting point algorithms :10.1.1.108.3178
active disk algorithm performs group steps 
rst step disk performs local group bys long number aggregates computed ts memory 
runs space disk ships partial results front memory 
select aggregate perform little computation byte 
sql group group operation computes dimensional vector aggregates indexed list attributes 
partitions relation disjoint sets tuples value index attribute computes aggregate value set tuples 
graefe shows hashing techniques outperform sort nested loop techniques implementing group operation :10.1.1.108.3178
accordingly hashing algorithm starting point algorithms :10.1.1.108.3178
active disk algorithm performs group steps 
rst step disk performs local group bys long number aggregates computed ts memory 
runs space disk ships partial results front memory 
front accumulates partial results 
associated weight re ects estimated size group 
pipehash determines set group bys perform computing minimum spanning tree lattice see example 
schedules group bys sequence pipelines group bys pipeline computed part single scan disk resident data 
results pipeline stored back disk input pipelines see examples pipelines 
individual group bys pipehash uses hashing technique :10.1.1.108.3178
active disk algorithm partitions available memory disk proportion estimated size group bys performed pipeline 
nal combination operation group partitions range values attribute grouped disks disk responsible combining results peers range values 
disk performs local group bys long number aggregates computed ts memory 
runs space partitions partial results ships partition disk responsible corresponding range values 
optimized processor able perform remaining computation single scan partition 
external sort sort merge join algorithm fraction input dataset exact fraction depends parameters algorithm run 
algorithm originally described shared memory multiprocessors 
adapted active disks count distribution rst passes 
original smp algorithm performed ne create view foo select store manager sale sale id item item id item item name store sale item line store store id sale sale id sale sale id line sale id line item id item item id store state ca sale year example select project join view :10.1.1.126.1870
grained updates modi ed batch updates counters associated itemsets 
original algorithm built large triangular array counters second pass 
noticed large fraction elements zero experiments optimized memory consumption sparse array 
note needs communicate counters rst passes signi cantly reduced version input data third pass 
communication requirements smaller sort join datacube 
maintaining materialized views view derived relation de ned terms base relations stored database 
materialized views pre computed views speedup queries decision support databases ect materialized views cached versions views 
incremental view maintenance keeps cached views consistent base relations base relations modi ed 
mumick proposed cient algorithms maintaining select project join views see example views :10.1.1.126.1870
borrowed ideas deferred maintenance self maintainable views algorithms 
rst describe core algorithm parallel maintenance select project join views 
describe active disk smp versions 
relation partitioned disks join attribute partitioning attribute 
rst describe core algorithm parallel maintenance select project join views 
describe active disk smp versions 
relation partitioned disks join attribute partitioning attribute 
view de ned relations store sale line item partitioned attributes store id sale id item id item id respectively 
auxiliary view created base relation applying appropriate select project operations :10.1.1.126.1870
auxiliary view corresponding relation partitioned way relation kept sorted 
updates base relations allowed proceed immediately 
allows base relations consistent times 
updates auxiliary views deferred adding tuples unsorted deltas 
discussion section discuss issues 
discuss integration active disks software archi tecture decision support databases 
second give indication cost comparable con gurations active disks shared memory multiprocessors 
relational databases long demand driven data ow architectures 
graefe model operator implementation scheduling resembles closely sys tems system sql ds db ingres informix oracle experimental systems programming language genesis starburst :10.1.1.108.3178
opera tors implemented model called iterators streams synchronous pipelines row sources similar names commercial systems 
barclay relational databases ideally suited data ow approach database community adopted data ow approach describe implement parallel algorithms 
stream programming model proposed active disks closely resembles operator iterator model relational databases 
corresponding open close operations iterator stream model operations 
stream programming model proposed active disks closely resembles operator iterator model relational databases 
corresponding open close operations iterator stream model operations 
disklets attached stream perform operations corresponding iterator function 
scratch space disklet corresponds state record iterator 
graefe type state records di erent iterator contains iterator speci arguments local variables state iterator suspended currently active invocations operator procedure :10.1.1.108.3178
exactly purpose scratch space disklets 
close correspondence models expect stream programming model active disks integrated software architecture decision support databases relative ease 
remains question database vendors choose integrate active disks software 
indicate initial reactions active disks mixed industrial database experts suggesting active disks succeed require existing database software 
simulation environment version manual technical report cse tr dept electrical engineering computer science feb 
graefe 
encapsulation parallelism volcano query processing system 
sigmod record 
graefe :10.1.1.108.3178
query evaluation techniques large databases 
acm computing surveys jun 
gray 
put storage device 
computer architecture quantitative approach 
morgan kaufman nd edition 
ibm quest data mining project 
quest retail transaction data generator 
quass gupta mumick widom :10.1.1.126.1870
making views self maintainable data warehousing 
proc 
pdis 
richardson carey 
