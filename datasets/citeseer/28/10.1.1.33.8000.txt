multi plane state machine agent model ol dan computer sciences department purdue university west lafayette september contents agent systems models component architecture agents lifecycle agent creating starting agent 
running external control 
soft checkpointing restart 
migration 
agent surgery 
termination state disposal 
organization lends elegant implementations remote control collaboration checkpointing mobility de ning features agent system 
supports techniques agent surgery dicult reproduce approaches 
implementation model bond agent system distributed open source license downloaded bond cs purdue edu 
eld agents convergence researchers elds 
see agents natural extension object oriented programming paradigm :10.1.1.27.9180
popular books arti cial intelligence eld terms agents 
contemporary theory behavior provides foundations theoretical models agents :10.1.1.28.7820
interface agents considered evolutionary step development visual interfaces 
eld robotics agents model behavior artifacts 
implementation model bond agent system distributed open source license downloaded bond cs purdue edu 
eld agents convergence researchers elds 
see agents natural extension object oriented programming paradigm :10.1.1.27.9180
popular books arti cial intelligence eld terms agents 
contemporary theory behavior provides foundations theoretical models agents :10.1.1.28.7820
interface agents considered evolutionary step development visual interfaces 
eld robotics agents model behavior artifacts 
diversity views wide range applications agents leads numerous programming paradigms languages communication methods design concepts agent system implementation 
far design methodology emerged clear winner applicable majority situations 
agent systems models number agent systems developed universities research laboratories reach commercial product stage 
section overview agent systems agent models uenced ideas position design implementation context existing systems 
elements speci design model implementation bond context systems justify important design decisions 
consider rst relationship theoretical models 
currently elaborated rigorous model agency currently belief desire intention model :10.1.1.28.7820
bdi powerful model complexity reliance notation mathematical logic preclude wide spread implementing agent systems 
currently lacking tools map easily model object oriented languages java 
java agent systems rely explicitly theoretical model agents 
exceptions example jack agent system extension java language implement bdi model 
