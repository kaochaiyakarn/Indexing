retsina mas infrastructure katia sycara katia cs cmu edu cs cmu edu martin van cs cmu edu joseph cs cmu edu carnegie mellon university robotics institute forbes ave pittsburgh pa usa 
retsina implemented multi agent system infrastructure developed years applied domains ranging nancial portfolio management logistic planning 
experience developing mass clearly de ne generic mas infrastructure domain independent reusable supports agents social interactions 
addition show mas infrastructure imposes requirements individual agent agent member mas take advantage various components mas infrastructure 
agents expected enter mas seamlessly interact agents mas infrastructure current state art demands agents programmed knowledge infrastructure utilize various fallback recovery mechanisms infrastructure provides 
providing mas infrastructure model concrete implemented instance model retsina contribute development principles practice mas infrastructure invisible ubiquitous interacting agents keywords mas multi agent system infrastructure agent architecture 
various labs companies developing agent toolkits reused building agents multiagent systems see section 
coherent account constitutes mas infrastructure functionality supports characteristics enable various value added abilities possible relation requirements may impose design structure single agents 

intelligent agents group carnegie mellon university long history researching various issues mas mas stability thomas mas learning arai mas coordination 
addition building experimenting mas sycara decker :10.1.1.36.7025
experience years account constitutes mas infrastructure speci cally characteristics abilities di erent parameters infrastructure ord 
de nition treatment mas infrastructure encompassing proposed gasser 
concerned mainly technology development applications involving scienti educational mas activities account mas infrastructure resulted vision computational world soon populated multiagent societies heterogeneous agent structure multiagent organization functionality 
thinking mas infrastructure guided desire enable exible design building operation societies 
mapping capabilities agents general mas support open closed agent world 
open systems allow agents enter exit system dynamically unpredictably closed systems employ xed set agents known priori 
open mas set agents known priori infrastructure provide ways agents locate name functionality capability 
locating agents capability solved employing set infrastructure agents called middle agents decker 
examples middle agents reported literature include oaa facilitator martin retsina matchmaker sycara closed mas agent knows name location capability :10.1.1.31.3660
agent interactions statically prede ned 
agent design construction simple mas brittle extensible 
aamas tex sycara van infosleuth broker perry 
middle agents maintain date registry agents known mas community services agent provides 
discovery useful agents running mobile platforms 
agents mobile suri may move just platform running moved 
discovery new place agent re orient nd local components infrastructure 

acl infrastructure acl retsina mas kqml finin :10.1.1.125.3310
messages exchanged agents components speci cation content message envelope speci es information sender receiver performative thread conversation ontology language content part 
retsina infrastructure dictates format envelope deliver message assumption content message 
content long agent receives message understand 
speci cation language guarantee agents understand 
middle agents agents enter mas exchange services agents retsina open system agent sure services available mas time provides 
task infrastructure provide registry services available system allow agents search registry 
retsina solves service location problem set middle agents called matchmakers distributed mas jha 
matchmaker records mapping agents system services provide 
matchmaker uses types data advertisements services provided requests agents need service expressed larks sycara language :10.1.1.36.7025
task matchmaker nd advertisements match requests 
accomplish task retsina matchmaker uses larks matching engine performs syntactic semantic analysis advertisements requests nd exact partial matches 
retsina matchmakers di er middle agents oaa facilitator martin infosleuth broker perry stay middle interaction providers requesters :10.1.1.31.3660
requester agent gets matchmaker contact information relevant providers asks directly perform service 
matchmaker records mapping agents system services provide 
matchmaker uses types data advertisements services provided requests agents need service expressed larks sycara language :10.1.1.36.7025
task matchmaker nd advertisements match requests 
accomplish task retsina matchmaker uses larks matching engine performs syntactic semantic analysis advertisements requests nd exact partial matches 
retsina matchmakers di er middle agents oaa facilitator martin infosleuth broker perry stay middle interaction providers requesters :10.1.1.31.3660
requester agent gets matchmaker contact information relevant providers asks directly perform service 
crucial di erence aamas tex sycara van 
interoperator agent mediates retsina mas left oaa mas right retsina matchmakers single point failure requester list providers continue transactions directly matchmaker 
addition requester cache providers contact information reuse resorting matchmaker time 
section discuss functionalities implemented di erent mas 
previously refer layer architecture 

acl infrastructure de nition communication language essential part creating community agents 
implemented research mass example retsina decaf graham decker infosleuth nodine jade jade kqml finin fipa acl fipa communicate :10.1.1.125.3310
oaa agents exchange messages form prolog predicates 
key di erence acl oaa kqml fipa oaa acl performatives solve query agents solved answer query 
way express performative equivalent assertions tell kqml 
consequence oaa agents forced maintain precise history message exchange infer kind message received message 
mapping agents capabilities locations retsina decaf implement matchmakers lookup services matchmaker maps capabilities agents ans maps agents locations 
oaa infosleuth nodine implement brokers map capabilities agents locations 
rst di erence approaches matchmaker manage interaction agents oaa facilitator infosleuth broker 
distribution services implemented retsina decaf increases reliability system 
furthermore advertisements retsina sycara decaf represent functionalities agent specifying types inputs requires types outputs generates :10.1.1.36.7025
contrast advertisement oaa agent just predicates representing sample query specify information agent requires compute answer information returns 
advertisement infosleuth db schema data provided agent agent capabilities 

mass just set agents gathered system extension single agents distributed fashion 
