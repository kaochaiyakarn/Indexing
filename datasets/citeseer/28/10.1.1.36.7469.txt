logical update queries open nested transactions alfred carl alexander burkhard freitag universit passau mathematik und informatik passau germany freitag uni passau de 
rule update language ultra designed specification complex database updates modular fashion 
logical semantics update goals update request sets correspond deferred basic updates database 
declarative character logical semantics leaves freedom various evaluation strategies top resolution naturally mapped system nested transactions 
extend operational model follows basic operations performed committed independently toplevel transaction complex operations defined update rules 
leads open nested transaction hierarchy allows exploit semantical properties complex operations gain concurrency 
meta information data compatibility conflict complex operations data complex operation compensated essential practical system received attention 
compatibility information usually assumed exist form compatibility relation details relation obtained taken consideration rarely addressed 
applies compensation little said internal structure compensating actions pass parameters sketch method declare compatibility information show actual compatibility test 
discuss central issues concerning compensation framework 
literature various logic rule update languages chen approach che transaction logic bk bk datalog :10.1.1.53.2469
approaches mainly deal specification updates execution logical update queries open nested transactions main scope investigation 
apply results database theory ultra representative update languages 
provide mapping complex operations specified logical rules nested transactions nested transactions backtracking increase concurrency 
furthermore allow high level compensation operations specified logic language 
consequently sequential conjunction associative commutative 
general form sequential rules ultra language qn yn qi yi basic update atom introduced 
update program set rules specify collection complex operations modular fashion 
analogy datalog recursive update programs allowed defined interpretation 
detailed description ultra syntax semantics wff :10.1.1.30.6933
top tuple oriented operational semantics referred restrict sequentially connected subgoals rules form shown extension full language including concurrent conjunction especially bulk quantifier specification set oriented updates subject research cf 
section 
example bank transfer 
restate standard example specify transfer money bank account 
note characterization possible transitions update query depend particular evaluation strategy 
transaction invoked query committed possible transitions materialized update requests executed committed persistent edb 
logical semantics restrict choice possible transition time materialization way 
example bank transfer cont 
recall example consider query trans er unique possible transition encoded update request set assuming accounts balance respectively account account account account due space limitations describe detail possible transitions constructed ultra semantics refer reader wf :10.1.1.44.2390
note update request sets express evaluation subtransactions 
just express resulting changes accounts 
operational model ultra concept execution transaction consists types processing evaluation query binding variables computing update requests application selected update requests edb 
architecture described wff execution strictly divided subsequent phases doing exclusively evaluation application respectively :10.1.1.30.6933
recall example consider query trans er unique possible transition encoded update request set assuming accounts balance respectively account account account account due space limitations describe detail possible transitions constructed ultra semantics refer reader wf :10.1.1.44.2390
note update request sets express evaluation subtransactions 
just express resulting changes accounts 
operational model ultra concept execution transaction consists types processing evaluation query binding variables computing update requests application selected update requests edb 
architecture described wff execution strictly divided subsequent phases doing exclusively evaluation application respectively :10.1.1.30.6933
phase possible transitions transaction goal computed changing physical edb instance second phase possible transition materialized 
corresponds logical semantics described section 
operational semantics completely deferred updates drawbacks see wff detailed discussion need hypothetical reasoning referring intermediate states operations leading intermediate state known carried effects state visible computed reasoning component 
axiomatization observable effects necessary enable freitag hypothetical reasoning 
operational model performing transactions specified ultra language 
model open nested transactions features exploitation compatibility information compensation levels basic operations may enhance performance complex distributed information systems 
far see literature innovative attempt bring logical specification languages results field transaction theory 
assume clear semantics logical languages operational aspects transactions create firm basis useful transaction programming environment 
current includes extension ideas full ul tra concept wff including concurrent conjunction bulk updates investigation theoretical level :10.1.1.30.6933
addition ultra semantics extended arbitrary basic operations 
scheduler transaction model provide desired flexibility requires non trivial generalizations semantical level ultra 
parallel semantics investigate specify reason meta information essential deal extended transaction model 
objective provide tools assist user composition needed declarations 
execute ultra transactions 
proc 
th workshop logic programming october vienna austria pages 
full version available technical report mip university passau uni passau de publications 
wff carl alexander burkhard freitag alfred :10.1.1.30.6933
logical transactions serializability 
freitag decker kifer voronkov editors transactions change logic databases volume lncs 
springer verlag berlin germany 
full version available technical report mip university passau de publications 
