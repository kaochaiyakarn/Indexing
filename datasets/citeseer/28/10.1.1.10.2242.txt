methodology agent oriented analysis design michael wooldridge nicholas jennings david kinny department electronic engineering department computer science queen mary westfield college university melbourne london ns uk australia fm wooldridge qmw ac uk cs mu oz au presents methodology agent oriented analysis design 
methodology general applicable wide range multi agent systems comprehensive deals macro level societal micro level agent aspects systems 
methodology founded view system computational organisation consisting various interacting roles 
illustrate methodology case study agent business process management system 
progress software engineering past decades primarily development increasingly powerful natural abstractions model develop complex systems 
procedural abstraction data types objects examples abstractions 
remainder structured follows 
sub section discussing characteristics applications believe analysis design methodology appropriate 
section gives overview main concepts methodology 
agent analysis discussed section design section 
methodology demonstrated means case study section show applied design real world agent system business process management :10.1.1.36.6686
related discussed section section 
domain characteristics proceeding worth commenting scope particular characteristics domains believe methodology appropriate 
intended methodology appropriate development systems adept archon :10.1.1.36.6686
large scale real world applications main characteristics agents coarse grained computational systems making significant computational resources think agent having resources unix process 
agent analysis discussed section design section 
methodology demonstrated means case study section show applied design real world agent system business process management :10.1.1.36.6686
related discussed section section 
domain characteristics proceeding worth commenting scope particular characteristics domains believe methodology appropriate 
intended methodology appropriate development systems adept archon :10.1.1.36.6686
large scale real world applications main characteristics agents coarse grained computational systems making significant computational resources think agent having resources unix process 
assumed goal obtain system maximises global quality measure may suboptimal point view system components 
methodology intended systems admit possibility true conflict 
agents heterogeneous different agents may implemented different programming languages techniques 
examples liveness responsibilities role coffee empty fill fresh coffee sure workers know 
followed xj occurs occurs times occurs times occurs infinitely optional interleaved table operators liveness expressions model agent liveness properties specified liveness expression defines life cycle role 
liveness expressions similar life cycle expression fusion turn essentially regular expressions 
liveness properties additional operator infinite repetition see table details 
resemble regular expressions known suitable representing properties infinite computations :10.1.1.25.322:10.1.1.36.6686
liveness expressions define potential execution trajectories various activities interactions protocols associated role 
general form liveness expression expression name role liveness properties defined expression liveness expression defining liveness properties 
atomic components liveness expression protocols define protocols 
illustrate liveness expressions consider abovementioned responsibilities role fill expression says consists executing protocol fill followed protocol followed protocols 

develop services model examining protocols safety liveness properties roles 

develop acquaintance model interaction model agent model 
case study business process management section briefly illustrates methodology applied case study analysis design agent system managing british telecom business process see details :10.1.1.36.6686
reasons brevity omit details aim give general flavour analysis design 
particular application providing customers quote installing network deliver particular type telecommunications service 
activity involves departments customer service division csd design division dd legal division ld various organisations provide service vetting customers 
process initiated customer contacting csd set requirements 
illustrates implemented system contains agent types roles aggregated agent type 
acquaintance model domain defined 
omit services model interests brevity 
qm cv select cv award contract qm cv ask vetting customer cv qm perform vetting return credit rating definition protocol roles qm cv customer agent model business process management related result development application robust agent technologies surge interest agent oriented methodologies modelling techniques years 
approaches take existing oo modelling techniques methodologies basis seeking extend adapt models define methodology directly extend applicability oo methodologies techniques design patterns design agent systems :10.1.1.27.9180
approaches build extend methodologies modelling techniques software knowledge engineering provide formal compositional modelling languages suitable verification system structure function :10.1.1.19.3327
valuable survey :10.1.1.53.3254
approaches usually attempt unify analysis design mas design implementation particular agent technology 
regard output analysis design process specification traditional lower level design methodologies may applied proposed allow architectural commitment analysis design fall short full elaboration design chosen framework 
acquaintance model domain defined 
omit services model interests brevity 
qm cv select cv award contract qm cv ask vetting customer cv qm perform vetting return credit rating definition protocol roles qm cv customer agent model business process management related result development application robust agent technologies surge interest agent oriented methodologies modelling techniques years 
approaches take existing oo modelling techniques methodologies basis seeking extend adapt models define methodology directly extend applicability oo methodologies techniques design patterns design agent systems :10.1.1.27.9180
approaches build extend methodologies modelling techniques software knowledge engineering provide formal compositional modelling languages suitable verification system structure function :10.1.1.19.3327
valuable survey :10.1.1.53.3254
approaches usually attempt unify analysis design mas design implementation particular agent technology 
regard output analysis design process specification traditional lower level design methodologies may applied proposed allow architectural commitment analysis design fall short full elaboration design chosen framework 
approaches mentioned approach strong commitment particular agent architecture proposes design elaboration refinement process leads directly executable agent specifications :10.1.1.27.9180:10.1.1.13.5956
omit services model interests brevity 
qm cv select cv award contract qm cv ask vetting customer cv qm perform vetting return credit rating definition protocol roles qm cv customer agent model business process management related result development application robust agent technologies surge interest agent oriented methodologies modelling techniques years 
approaches take existing oo modelling techniques methodologies basis seeking extend adapt models define methodology directly extend applicability oo methodologies techniques design patterns design agent systems :10.1.1.27.9180
approaches build extend methodologies modelling techniques software knowledge engineering provide formal compositional modelling languages suitable verification system structure function :10.1.1.19.3327
valuable survey :10.1.1.53.3254
approaches usually attempt unify analysis design mas design implementation particular agent technology 
regard output analysis design process specification traditional lower level design methodologies may applied proposed allow architectural commitment analysis design fall short full elaboration design chosen framework 
approaches mentioned approach strong commitment particular agent architecture proposes design elaboration refinement process leads directly executable agent specifications :10.1.1.27.9180:10.1.1.13.5956
proliferation available agent technologies clearly advantages role schema qm description protocols permissions responsibilities liveness safety responsible quote process 
approaches build extend methodologies modelling techniques software knowledge engineering provide formal compositional modelling languages suitable verification system structure function :10.1.1.19.3327
valuable survey :10.1.1.53.3254
approaches usually attempt unify analysis design mas design implementation particular agent technology 
regard output analysis design process specification traditional lower level design methodologies may applied proposed allow architectural commitment analysis design fall short full elaboration design chosen framework 
approaches mentioned approach strong commitment particular agent architecture proposes design elaboration refinement process leads directly executable agent specifications :10.1.1.27.9180:10.1.1.13.5956
proliferation available agent technologies clearly advantages role schema qm description protocols permissions responsibilities liveness safety responsible quote process 
generates quote returns nil customer inappropriate service illegal reads supplied customer contact information detailed service requirements customer credit rating boolean bespoke requests generates quote completed quote nil bad quote nil false quote nil acquaintance model business process management general approach proposed 
disadvantage may need iteration entire process lower level design process reveal issues best resolved agent oriented level 
despite difference scope similarities approach proposed 
proliferation available agent technologies clearly advantages role schema qm description protocols permissions responsibilities liveness safety responsible quote process 
generates quote returns nil customer inappropriate service illegal reads supplied customer contact information detailed service requirements customer credit rating boolean bespoke requests generates quote completed quote nil bad quote nil false quote nil acquaintance model business process management general approach proposed 
disadvantage may need iteration entire process lower level design process reveal issues best resolved agent oriented level 
despite difference scope similarities approach proposed 
developed fulfill need principled approach specification complex multi agent systems belief bdi technology procedural reasoning system prs distributed multi agent reasoning system dmars :10.1.1.26.1679
methodology takes starting point object oriented modelling techniques exemplified adapts extends agent concepts 
methodology aimed construction set models fully elaborated define agent system specification 
main separation models developed external internal models 
external models system level view main components visible models agents primarily concerned agent relationships interactions including inheritance aggregation relationships allow abstraction agent structure 
seen similarities external models models proposed 
notion responsibility models quite informal safety liveness requirements explicit level lack notion permissions capture resource usage captured implicitly belief structure individual agents 
contrast protocols define permitted interactions agents may developed greater degree detail approach example protocols employed generic descriptions behaviour may involve entities modelled agents coffee machine 
significant difference inheritance agent classes permitted methodology proposed limited value specific architectural commitment 
definition various notions role responsibility interaction team society organization particular methods agent oriented analysis design inherited adapted general uses concepts multi agent systems including organization focussed approaches sociological approaches :10.1.1.41.4369
scope compare definition concepts heritage 
described methodology developed analysis design agent systems 
key concepts methodology roles associated responsibilities permissions protocols 
roles interact certain ways defined protocols respective roles 
typical developer need aware existence semantics essential precise understanding concepts terms methodology mean 
booch 
object oriented analysis design second edition 
addison wesley reading ma 
brazier dunin keplicz jennings treur :10.1.1.19.3327
formal specification multi agent systems real world case 
proceedings international conference multi agent systems icmas pages san francisco ca june 
burmeister 
models methodologies agent oriented analysis design 
gasser hermann 
mace flexible testbed distributed ai research 
huhns editor distributed artificial intelligence pages 
pitman publishing london morgan kaufmann san mateo ca 
iglesias garijo gonzalez :10.1.1.53.3254
survey agentoriented methodologies 
ller singh rao editors intelligent agents proceedings fifth international workshop agent theories architectures languages atal lecture notes artificial intelligence 
springer verlag heidelberg 
toru ishida les gasser makoto yokoo 
ieee transactions knowledge data engineering april 
jennings corera laresgoiti mamdani varga 
archon develop real world dai applications electricity transportation management particle acceleration control 
ieee expert december 
jennings faratin johnson norman brien wiegand :10.1.1.36.6686
agent business process management 
international journal cooperative information systems 
kinny 
agent interaction model 
elsevier science publishers amsterdam netherlands 
james rumbaugh michael william frederick eddy william 
object oriented modeling design 
prentice hall englewood nj 
wooldridge :10.1.1.36.6686
agent software engineering 
iee proceedings software engineering february 
wooldridge jennings 
intelligent agents theory practice 
