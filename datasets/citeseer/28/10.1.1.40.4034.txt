fast similarity search presence noise scaling translation time series databases rakesh agrawal king ip lin sawhney shim introduce new model similarity time sequences captures intuitive notion sequences considered similar non overlapping time ordered pairs subsequences similar 
model allows amplitude sequences scaled suitable amount set adjusted appropriately 
subsequences considered similar enclosed envelope speci ed width drawn 
model allows non matching gaps matching subsequences 
matching subsequences need aligned time axis 
model similarity fast search techniques discovering similar sequences set sequences 
model similarity fast search techniques discovering similar sequences set sequences 
techniques nd sub sequences similar sequence 
applied matching system mutual funds data discovered interesting matches 
time series databases naturally arise business scienti decision support applications 
capability nd time sequences subsequences similar sequence able nd pairs similar sequences applications including current address department computer science university maryland college park maryland :10.1.1.128.6559:10.1.1.45.9405
permission copy fee part material granted provided copies distributed direct commercial advantage vldb copyright notice title publication date appear notice copying permission large data base endowment 
copy republish special permission endowment 
proceedings st vldb conference zurich switzerland ibm almaden research center harry road san jose ca identify companies similar pattern growth 
determine products similar selling patterns 
able nd similar subsequences match sequence 
user able vary runtime various similarity parameters width envelope tolerance outliers maintaining ciency matching 
matching system consists main parts atomic subsequence matching ii long subsequence matching iii sequence matching 
basic idea create fast indexable data structure small atomic subsequences represents sequences amplitude scaling set 
chosen tree family structures representation arbitrary precision maintained sequence values allowing similarities de ned respect ned distance norm atomic subsequences :10.1.1.131.7887:10.1.1.131.7887:10.1.1.131.7887:10.1.1.131.7887
atomic subsequences matches distance ciently computed 
second stage employs fast algorithm atomic matches form long subsequence matches allowing non matching gaps exist atomic matches 
third stage linearly orders subsequence matches second stage determine similar pieces exist sequences 
stage system allows exibility user system de ned dynamic parameters sacri cing ciency 
number hash table entries large making hash table unmanageable 
considered grid index structure grid le decided 
points typically high dimension growth size structure 
methods partition space adjacent regions doing self join non zero value distance joins adjacent grids performed 
nally settled tree family multi dimensional structures tend resilient higher dimensionalities :10.1.1.131.7887:10.1.1.131.7887:10.1.1.131.7887
tree methods store dead space regions larger separation 
result fewer pages joined speeding join time 
speci cally implemented tree variants tree tree specialized better problem :10.1.1.141.6518
discuss emphasizing customizations implementation 
methods partition space adjacent regions doing self join non zero value distance joins adjacent grids performed 
nally settled tree family multi dimensional structures tend resilient higher dimensionalities :10.1.1.131.7887:10.1.1.131.7887:10.1.1.131.7887
tree methods store dead space regions larger separation 
result fewer pages joined speeding join time 
speci cally implemented tree variants tree tree specialized better problem :10.1.1.141.6518
discuss emphasizing customizations implementation 
tree tree enhanced original tree major ways 
added perimeter bounding regions important factor heuristics node splitting 
second introduced notion forced reinsert shape tree dependent order insertion 
added perimeter bounding regions important factor heuristics node splitting 
second introduced notion forced reinsert shape tree dependent order insertion 
node full immediately portion node top level 
de nition window data points lying lower dimension hyperplanes hyperplanes zero volume dimension 
tree implementation de ned new measure deciding branch insertion tree viewed extension tree multi dimensions :10.1.1.131.7887:10.1.1.131.7887
tree balanced tree node represents region space 
parent child pair tree children regions parent 
tree achieves balance splitting propagating split upwards 
determining splits 
determining splits 
measure takes account volumes lower dimension hyper surfaces 
dimensional region tree measure region de ned dimensional vector values dimension volume sum dimensional regions volume sum dimensional regions volume perimeter lexicographical ordering order measures 
components measure computed needed basis 
tree tree imposes constraint bounding regions non leaf node overlap :10.1.1.141.6518
boundary surfaces path leaf region reduce search join costs 
drawback splitting internal node split axis may completely divides bounding regions non overlapping regions causing split propagated downwards upwards 
minimum space utilization guaranteed split certain coordinate leading uneven distribution 
turn leads lled internal leaf nodes tree grows faster 
robust measure allows non matching gaps amplitude scaling set translation 
similarity model fast search techniques discovering similar sequences set sequences 
techniques nd sub sequences similar sequence 
matching system price price international investor fund time fidelity selective precious metal mineral fund time similar mutual funds di erent fund groups consists main parts atomic subsequence matching ii long subsequence matching iii sequence matching 
rtree family structures speci cally tree create fast indexable data structure small atomic subsequences represents sequences amplitude scaling set :10.1.1.131.7887:10.1.1.131.7887:10.1.1.131.7887:10.1.1.131.7887
atomic subsequence matches user speci ed distance ciently computed doing self join structure 
second stage employs graph algorithm atomic matches form long subsequence matches allowing non matching gaps exist atomic matches 
third stage linearly orders subsequence matches second stage determine similar pieces exist sequences 
applied matching techniques mutual funds data discovered interesting matches 
proc 
rd intl 
conf 
computer vision pages 
guttman :10.1.1.131.7887
trees dynamic index structure spatial searching 
proc 
acm sigmod pages boston mass june 
hinrichs nievergelt 
