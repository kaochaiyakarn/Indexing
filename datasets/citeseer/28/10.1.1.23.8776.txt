web log data warehousing mining intelligent web caching pedreschi cnr institute italian nat 
research council dipartimento di informatica universit di pisa introduce intelligent web caching algorithms employ predictive models web requests general idea extend lru policy web proxy servers making sensible web access models extracted web log data data mining techniques 
approaches studied particular frequent patterns decision trees 
experimental results new algorithms show substantial improvement existing lru caching techniques terms hit rate 
designed developed prototypical system supports data warehousing web log data extraction data mining models simulation web caching algorithms 
key words web caching log data warehousing data mining frequent patterns association rules decision trees data mining aimed discovering regularities patterns hidden data emerging area web mining aimed discovering regularities patterns structure content web resources way web resources accessed 
introduce ways construct intelligent web caching algorithms employ predictive models web requests 
goal algorithms maximize called hit rate percentage requested web entities retrieved directly cache requesting back origin server 
general idea motivated observation 
lru policy drop cache entities assumption requests occurred past occur near 
assumption true practice explains lru ective particular requests characterized temporal locality case web requests :10.1.1.36.6661
information extract history requests informed cache replacement strategies devised 
clear indication mine web log data access models may employed purpose 
compared alternatives variations lru caching literature approach unique feature changes usage patterns natural web 
due fact proposed caching strategies parametric data mining models recomputed periodically order keep track past 
closer client nd browser caches perform caching user basis local le system 
shared help single user activity 
web server caching provides interface single web server users 
reduces number requests server handle helps load balancing scalability availability 
cases recognized deploying caching world wide web improve net trac ways including reduction bandwidth consumption network latency server load :10.1.1.26.3109:10.1.1.36.6661
web caching poses issues risk reduce applicability ectiveness 
mention issues cache consistency cached copies may stale dynamic objects web resources personalized client security legal issues 
order evaluate quality web caching system measures applied depending resource focusing usually bottleneck system consideration 
commonly criteria basically hit rate ratio requests ful lled cache handled origin servers 
note identify users ip addresses 
assumption heuristics 
fails case ip corresponds proxies dynamic ips computers shared users 
correct identi cation users possible presence form authentication login cookies 
characterization workloads experiments extensive literature understanding statistical characteristics workloads web proxy servers impact caching policies :10.1.1.36.6661
section introduce workloads experimentation show statistical distributions re ect typical characteristics reported literature particular cumulative frequency requests berkeley number requests page delay secs berkeley fig 

distribution requests williamson 
populated data mart data web servers days log data leading italian portal web server total requests total gb transmitted 
