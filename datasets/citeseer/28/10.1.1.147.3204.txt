webwatcher tour guide world wide web thorsten joachims universitat dortmund informatik ls str 
dortmund germany dayne freitag carnegie mellon university school computer science forbes avenue pittsburgh pa usa tom mitchell carnegie mellon university school computer science forbes avenue pittsburgh pa usa explore notion tour guide software agent assisting users browsing world wide web 
web tour guide agent provides assistance similar provided tour guide museum guides user appropriate path collection knowledge user interests location relevance various items collection way interacted collection past 
describes simple operational tour guide called web watcher tours people browsing cmu school computer science web pages 
webwatcher accompanies users page page suggests appropriate hyperlinks learns experience improve advice giving skills 
describe learning algorithms webwatcher experimental results showing ectiveness lessons learned case study web tour guide agents 
browsing world wide web visiting museum 
museum visitor general areas interest wants see relevant artifacts 
visitors nd di cult locate relevant material initially know contents museum 
cases initial interests poorly de ned clear explore 
museum user rely tour guide familiar museum people interact 
visitor describe initial interests tour guide accompany user point items interest suggest directions turn 
tour visitor communicate guide express interest certain artifacts ask answer questions explore re ne interests 
people browsing collections web pages behave museum 
example visitor cmu computer science web home page general interest experimental research intelligent agents 
speci knowledge contents collection user may nd di cult locate relevant information 
aware cmu conducts signi cant robotics example may think mention learning robots describing general interest intelligent agents 
report research software agents act tour guides web 
general form metaphor web agent tour guide broad suggesting systems carry general natural language dialogs users possess detailed knowledge semantic content pages cover learn experience 
describe rst experiment restricted operational tour guide 
particular describe webwatcher armstrong system accompanies user browses web 
tour guide webwatcher interactively suggests go 
user communicate system give feedback 
apprentice mitchell observing learning users actions 
time webwatcher learns acquire greater expertise parts world wide web visited past types topics previous visitors interest 
webwatcher di ers key respects keyword search engines lycos altavista 
search engines require user describe interest terms speci words match target web page 
contrast webwatcher learn term machine learning matches hyperlink neural networks avrim blum phrases share words common 
furthermore current search engines take account documents designed hypertext 
cases sequence pages knowledge relate satisfy user information need 
design webwatcher experimental results obtained tours webwatcher various visitors front door page webwatcher additions 
web 
describe webwatcher learns improve quality advice experimental results comparing di erent learning methods 
lessons perspectives gained rst experiments tour guide agent web 
trace webwatcher webwatcher operation august february 
typical webwatcher tour proceeded follows 
enter cmu school computer science web front door page 
page instance webwatcher invoked clicking hyperlink webwatcher tour guide 
clicking hyperlink leads page asked short description current interest 
example enter phrase intelligent agents interest 
webwatcher returns initial page prepared guide tour gure 
longer browsing accompanied sequence hyperlinks follow point forward 
tell webwatcher accompanies additions original page 
page augmented webwatcher additions shown gure 
include list webwatcher commands inserted original page 
user invoke commands communicate webwatcher browses page page 
selected hyperlinks original page highlighted webwatcher suggest directions relevant browsing interests 
web watcher highlights hyperlinks inserting eyeball icons shown projects link gure recall example user expressed interest intelligent agents 
advice webwatcher fashion knowledge learned previous tours 
follow webwatcher suggestion gure reach page containing long list research project pages 
webwatcher inserts command list top page suggests hyperlinks judges relevant interest intelligent agents 
general user may recommended 
time user selects hyperlink webwatcher accompanies user page logs hyperlink selection training example learning improve advice 
addition highlighting hyperlinks webwatcher provides forms assistance 
particular provides keyword search variant lycos search engine applied set pages previously visited webwatcher 
provides user command show similar pages command list causes webwatcher display list pages similar metric derived hypertext structure joachims 
clicking command link asks webwatcher display hyperlink number previous visitors took link 
command email page changes tells webwatcher periodically monitor current page send user email changes 
webwatcher accompanies user hyperlink world wide web 
tour user clicks options command list exit goal reached exit goal 
exit provides user way giving nal feedback webwatcher 
accompanying user webwatcher implemented server separate workstation network acts 
returning page user modi cations 
webwatcher command list added top page 

hyperlink url original page replaced new url points back server 

webwatcher nds page strongly recommended search control knowledge highlights promising links order suggest user 
user 
user 
user request page menubar advice replaced urls webwatcher request page world wide web webwatcher interface agent user world wide web 
welcome dean admission information graduate studies studying cmu projects speech recognition machine learning interface agents waits user step prefetches web pages just recommended user minimize network delays 
depicts cycle user interaction 
user clicks new hyperlink webwatcher updates log search retrieves page prefetched performs similar substitutions returns copy user 
process continues user elects dismiss agent 
learning webwatcher form knowledge required web watcher 
general task suggest appropriate link interest web page 
words requires knowledge target function page interest link value interpreted probability user select link current page interest 
approaches learning target function experience 
rst approach uses previously tours source information augment internal representation selected hyperlink 
second approach reinforcement learning 
idea nd tours web amount relevant information encountered trajectory maximized 
third approach method includes rst approaches 
learning previous tours rst approach learning accomplished annotating hyperlink interests users took hyperlink previous tours 
user follows hyperlink description hyperlink augmented adding keywords user typed tour 
initial description underlined text 
illustrates keywords accumulated hyperlinks way uence subsequent advice 
intelligent agents interest new user intelligent agents matches projects hyperlink better welcome dean hyperlink keywords accumulated hyperlink previous tours 
suggest hyperlinks tour webwatcher compares current user interest descriptions hyperlinks current page 
webwatcher suggests hyperlinks description su ciently similar user interest 
metric compute similarity user stated interest hyperlink description technique information retrieval salton 
interests hyperlink descriptions represented high dimensional feature vectors dimension representing particular word english language 
elements called word weights vector calculated tfidf heuristic salton 
vector representation similarity calculated cosine vectors 
algorithm webwatcher uses suggest hyperlinks considers hyperlinks current page 
hyperlink list associated keywords including original underlined words calculate similarity current user interest 
value hyperlink estimated average similarity usually highest ranked keyword sets associated hyperlink 
hyperlink suggested value threshold 
maximum suggested page 
learning hypertext structure previous section describes learning method augments hyperlink stated interests earlier users selected 
section describe second learning method hyperlink words encountered pages downstream 
approach reinforcement learning 
example state space 
objective nd paths web maximize amount relevant information encountered 
reinforcement learning reinforcement learning allows agents learn control strategies select optimal actions certain settings 
consider agent navigating state state performing actions 
agent receives certain reward 
goodness action expressed terms evaluation function de ned possible state action pairs 
value discounted sum rewards obtained agent performs action state subsequently chooses optimal actions 
agent learn function know state 
precisely st st st state agent time discount factor determines severely discount value rewards received 
certain conditions function iteratively approximated updating estimate repeatedly follows see watkins qn max actions qn state resulting performing action state isknown optimal control strategy agent repeatedly pick action maximizes current states 
gives example 
boxes represent possible states agent 
edges represent actions bring agent state 
edges annotated values function 
rightmost state agent receives reward 
reward states 
agent follows action highest value get reward state smallest number steps maximize discounted reward receives 
reinforcement learning hypertext imagine web agent looking pages intelligent occurs 
agent states correspond web pages actions correspond hyperlinks 
case de ne reward intelligent particular page tfidf value intelligent agent learn intelligent function value page hyperlink sum discounted tfidf values intelligent optimal tour function choose best link step tour 
webwatcher uses separate reward function learns distinct function word system recommends hyperlinks sum user interest description highest 
additional reward interest matches underlined text hyperlink 
webwatcher expect users stick pages seen core question implementing approach learn general approximation functions qw applies unseen states pages actions hyperlinks 
chose distance weighted nearest neighbor function approximator mitchell purpose features needed describe pages hyperlinks certain theoretical advantages gordon 
described tfidf vector representation underlined anchor text pages analogously title 
dene similarity hyperlink page hyperlink page distance plus heuristically twice distance 
distance vectors de ned cosine angle vectors keeping standard similarity measure information retrieval 
experimental setup experiments section conducted traces starting scs page webwatcher collected august march 
tours user typed interest tour steps long 
di erent test training splits pages hyperlinks traces training 
addition reinforcement learning learning method annotate section results methods 
ran dom suggests hyperlinks random current page 
popularity suggests hyperlinks followed frequently past ignoring information current user interest 
match suggests hyperlinks tfidf cosine similarity underlined text user interest 
combine method combines predictions rl popularity annotate accuracy random popularity match annotate rl combine results averaged di erent test training splits standard error 
match logistic regression 
available training data regression 
experimental results results gure provide comparison learning methods 
example test set learner allowed choose hyperlinks corresponding page 
accuracy measures percentage examples user followed chosen hyperlinks 
required learning algorithm prediction regardless con dent itwas 
method webwatcher accessible public annotate 
accuracy experiment approximately matches fraction times users followed webwatcher advice actual system 
reinforcement learning performs signi cantly better basic methods 
combination methods achieves highest accuracy outperforming individual methods 
conjecture due diversity methods sources information combined 
popularity uses frequency information derived user behavior particular page match uses underlined text hyperlinks annotate uses interest descriptions previous user traces rl hypertext structure downstream hyperlink question 
comparison human experts get better feel nature task suggesting hyperlinks evaluate webwatcher performance conducted experiment humans perform webwatcher task 
experiment tractable focused page earlier version scs front door page shown gure 
training examples available page took random subsets examples people page locale 
example stated interest user asked suggest hyperlinks user follow hyperlinks page 
gure summarizes humans achieved accuracy predicting hyperlink user follow 
learning method annotate achieved accuracy conditions 
accuracy random annotate human comparison human performance scs front door page 
random prediction provides baseline 
results suggest predicting hyperlink user going follow fairly di cult task general setting 
comparison human performance learning approach reasonably 
related letizia lieberman similar webwatcher sense system accompanies user browsing 
di erence letizia located single user machine learns current interest 
doing lookahead search letizia recommend nearby pages 
syskill webert pazzani ers restricted way browsing webwatcher letizia 
starting manually constructed index page particular topic user rate hyperlinks page 
system uses ratings learn user speci topic pro le suggest unexplored hyperlinks page 
syskill webert search engines lycos retrieve pages turning topic pro le query 
lira balabanovic shoham works setting 
general model user interest learned asking user rate pages 
lira uses model browse web ine returns set pages match user interest 
summary research webwatcher provides case study tour guide agent world wide web 
tour guide agent mean accompanies users page page providing assistance partial understanding user interests content ofthe web pages 
months operation web watcher served thousands people browsing cmu school computer science web pages 
system properties webwatcher provides types assistance importantly highlights interesting hyperlinks accompanies user 
webwatcher learns experience 
multi strategy approach ective learning method 
webwatcher runs centralized server assist web user running type web browser combine training data thousands di erent users 
experience webwatcher led believe self improving tour guide agents play role web 
webwatcher demonstrates possible agent helpful advice users possible automatically learn thousands users interacts 
popular web sites typically visited users content changes frequently appears machine learning play crucial role tour guide agents 
experience webwatcher shown despite ability help users highlighted hyperlinks match followed users cases 
interestingly assigned expert humans task better 
examining speci tours webwatcher nd partial explanation level accuracy 
users tend fairly short attention span distracted stated interest 
furthermore great diversity users browsing cmu scs front door thousands tours uncommon user express interest webwatcher encountered 
factors suggest webwatcher achieve higher accuracy web locale cover narrower focused scope 
generally experience webwatcher suggests number topics research personalized webwatcher 
webwatcher learns specialize speci web locale develop tour guide agents learn specialize particular user 
agent learn model longer term interests users observing pages visit 
begun experiments personalized webwatcher mladenic 
combining user speci web locale speci learning 
time webwatcher learns model particular user retain capability annotate hyperlinks tours users 
context explore variety methods combining bene ts single user modeling learning simultaneously multiple users 
richer dialogs users 
major shortcoming current user express keywords tour 
exible approach involve ongoing dialog user visitor witha human guide 
new machine learning algorithms classifying hyperlinks 
learning methods web watcher succeed improving performance time 
large space possible learning methods problem remains unexplored combination linguistic analysis statistical techniques described 
intelligent distributed hyperlinks 
webwatcher learns associating new information hyperlinks experience 
note learning performed distributed fashion hyperlink separately building model making recommendations user 
research supported rotary international fellowship nsf graduate fellowship arpa number 
armstrong armstrong freitag joachims mitchell 
webwatcher learning apprentice world wide web 
aaai spring symposium information gathering heterogeneous distributed environments march 
balabanovic shoham balabanovic shoham 
learning information retrieval agents experiments automated web browsing 
aaai spring symposium information gathering heterogeneous distributed environments 
gordon gordon 
stable function approximation dynamic programming 
international conference machine learning 
joachims joachims mitchell freitag armstrong 
webwatcher machine learning hypertext 
morik herrmann editors gi en lernen 
university august 
lieberman lieberman 
letizia assists web browsing 
international joint conference onarti cial intelligence montreal august 
mitchell mitchell caruana freitag mcdermott zabowski 
experience learning personal 
communications acm july 
mitchell mitchell 
machine learning 
mcgraw hill 
mladenic mladenic 
personal webwatcher implementation design 
technical report stefan institute ljubljana slovenia 
pazzani pazzani muramatsu billsus 
syskill webert identifying interesting web sites 
aaai conference portland 
salton salton 
developments automatic text retrieval 
science 
watkins watkins 
learning delayed rewards 
technical report king college cambridge england 
