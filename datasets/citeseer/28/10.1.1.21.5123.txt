guaranteeing interaction functional dependencies tree inclusion dependencies mark levene department computer science university college london street london wc bt email cs ucl ac uk george department computer science college street london wc hx email george dcs ac uk functional dependencies fds inclusion dependencies inds fundamental integrity constraints arise practice relational databases 
set fds interact set inds logical implication fd determined solely set fds logical implication ind determined solely set inds 
set tree inds constitutes useful subclass inds implication problem polynomial time decidable 
exhibit necessary sufficient condition set fds tree inds interact condition tested polynomial time 
keywords relation database logical implication functional dependency inclusion dependency implication problem fds inds problem deciding set fds inds logically implies fd ind implication problem central data dependency theory utilised process database design test sets dependencies equivalent detect dependency set redundant 
implication problem fds inds known undecidable general case mit cv decided exponential time inds restricted noncircular ck proper circular 
exhibit necessary sufficient condition set fds tree inds interact condition tested polynomial time 
keywords relation database logical implication functional dependency inclusion dependency implication problem fds inds problem deciding set fds inds logically implies fd ind implication problem central data dependency theory utilised process database design test sets dependencies equivalent detect dependency set redundant 
implication problem fds inds known undecidable general case mit cv decided exponential time inds restricted noncircular ck proper circular 
hand implication problem fds known decidable linear time bb implication problem noncircular proper circular inds known np complete inds may circular implication problem pspace complete cfp 
set fds inds fd ind desirable set fds set inds interact sense implication problem logically implies decided fd ind interact algorithms database design logical implication implemented efficiently case see lv :10.1.1.105.5080
impact lack interaction greatest implication problem subclass inds consideration polynomial time decidable 
long standing open problem relational database theory characterise useful subclasses fds inds interact 
partially solve open problem exhibiting necessary sufficient condition interaction set fds set inds tree 
condition tested polynomial time 
