complexity generating optimal plans cross products extended wolfgang guido moerkotte universitat fur informatik iii germany pi informatik uni de modern advanced database systems optimizer faced problem finding optimal evaluation strategies queries involving large number joins 
examples queries generated deductive database systems path expressions object oriented database systems 
best plan large search space bushy trees plans allowed contain cross products 
general question arises sub problems expect find polynomial algorithms generating best plan 
attack question ends spectrum 
show expect find polynomial algorithm subproblem long optimal bushy trees generated 
show expect find polynomial algorithm subproblem long optimal bushy trees generated 
specifically show problem np hard independent query graph 
second restricted class chain queries efficient algorithms problem generating left deep trees possibly containing cross products 
relational database systems optimization multiway joins challenging problem 
despite huge research efforts query optimization exceptions efficient exact algorithms developed far :10.1.1.76.1079
little known structure problem general optimization methods dynamic programming probabilistic algorithms overview see applicable :10.1.1.129.5879
years problem gained fresh impetus due relevance modern advanced database systems deductive object oriented database systems 
object oriented database systems path expression corresponds linear sequence joins extensions involved types 
research supported german research council dfg contract mo 
specifically show problem np hard independent query graph 
second restricted class chain queries efficient algorithms problem generating left deep trees possibly containing cross products 
relational database systems optimization multiway joins challenging problem 
despite huge research efforts query optimization exceptions efficient exact algorithms developed far :10.1.1.76.1079
little known structure problem general optimization methods dynamic programming probabilistic algorithms overview see applicable :10.1.1.129.5879
years problem gained fresh impetus due relevance modern advanced database systems deductive object oriented database systems 
object oriented database systems path expression corresponds linear sequence joins extensions involved types 
research supported german research council dfg contract mo 
introduce basic notions 
processing tree bushy tree restriction form 
notion quite unfortunate years query optimization community 
introduced distinguish general processing trees traditionally considered left deep processing trees 
processing tree called right sons internal nodes restricted base relations 
processing trees traditionally restricted left deep reasons :10.1.1.129.5879
lately larger search space bushy trees considered 
exist restrictions processing trees literature 
trees son inner node base relation 
concentrate frequent cases left deep bushy trees 
concentrate frequent cases left deep bushy trees 
vast majority query optimization papers considers connected query graphs 
connected query graphs need introduce cross products processing trees 
cross products considered expensive processing trees considered query containing cross products 
heuristic introduced order restrict search space :10.1.1.129.5879
traditionally search space explored query query graph restricted left deep processing trees containing cross products :10.1.1.129.5879
restricted search space results known 
restriction query graph problem np hard 
query graph acyclic polynomial algorithms exist cost functions reflecting different implementations join operator 
vast majority query optimization papers considers connected query graphs 
connected query graphs need introduce cross products processing trees 
cross products considered expensive processing trees considered query containing cross products 
heuristic introduced order restrict search space :10.1.1.129.5879
traditionally search space explored query query graph restricted left deep processing trees containing cross products :10.1.1.129.5879
restricted search space results known 
restriction query graph problem np hard 
query graph acyclic polynomial algorithms exist cost functions reflecting different implementations join operator 
algorithm deals nested loop join 
cost function denoted cout reasonable assumes intermediate results written disk costs accessing disk clearly surpass cpu costs checking join predicate 
discussion relevance cout see 
noted dynamic programming approach considers gamma gamma alternatives left deep processing trees cross products independently query graph cost function 
question arises possible lower complexity case simple chain queries type cost function 
known approach computing optimal left deep trees cross products acyclic queries asi property cost functions introduced :10.1.1.76.1079
cost functions asi property authors decompose problem polynomially subproblems subject precedence constraints 
precedence constraints ensure cost functions subproblems asi property 
remaining problem optimize constrained subproblems simpler cost function 
unfortunately approach case decomposition exist 
cost functions asi property authors decompose problem polynomially subproblems subject precedence constraints 
precedence constraints ensure cost functions subproblems asi property 
remaining problem optimize constrained subproblems simpler cost function 
unfortunately approach case decomposition exist 
order extend approach problem generalize rank function rank :10.1.1.76.1079
start cost function 
costs sequence relative sequence defined cu ffl cu ffl cu ur ffl cu cu tu tu ffl tu usr true appears usual empty products evaluate 
couple things noted 
cu holds connection relations second ffl jr ffl jsj 
theorem algorithm runs polynomial time second algorithm correct 
conjecture true algorithms produce optimal left deep processing trees polynomial time 
prove conjecture consider algorithm backtracking second algorithm merely heuristic algorithms 
due lack hard facts ran experiments random queries sizes relations fewer experiments random queries relations compare results algorithms 
additionally compared results standard dynamic programming algorithm :10.1.1.47.4202
results experiments summarized follows 
ffl algorithms yielded identical results 
ffl backtracking led exactly sequence contradictory chains 
ffl overwhelming majority cases algorithm proved faster second algorithm 
proc 
int 
conf 
large data bases vldb pages 
selinger astrahan chamberlin lorie price :10.1.1.129.5879
access path selection relational database management system 
proc 
acm sigmod conf 
management data pages 
