agent infrastructure build evaluate multi agent systems java agent framework multi agent system simulator vincent bryan horling victor lesser dept computer science university massachusetts amherst ma usa cs umass edu 
describe agent framework address issues encountered designing suitable environmental space evaluating coordination adaptive qualities multi agent systems 
research direction develop framework allowing build di erent type agents rapidly facilitate addition new technology 
underlying technology java agent framework jaf uses component design 
reasons design choices build complete system evaluate coordination adaptive qualities multi agent systems 
abbreviation jaf java agent framework mass multi agent system simulator agent technology form gradually nding way mainstream computing potential improve performance wide range computing tasks 
scheduling component derived implement specialized needs technology communication component directly 
interact maximizing code reuse speeding development process 
respect fact researchers require exibility construction software general solution serves simple sca leaving implementation developer api conventions 
generality available existing jaf components derived common powerful domain independent representation agents satisfy di erent goals 
representation called ms allows complex interactions phrased common language allowing individual components interact having direct knowledge components function :10.1.1.35.6511
implemented components jaf designed operate relative autonomy 
reasonable analogy jaf agent internal organization multi agent system degree limited form autonomy capable interacting components variety ways 
sophisticated agents agent individual components provide speci discrete functionality may xed dynamic goals try achieve 
functionality requested components direct method invocation may performed automatically response messages events occurring agent 
ms task structure dishwasher agent multi agent system simulator mass advanced incarnation ms simulator created decker lesser 
provides realistic environment adding support resources resource interactions sophisticated communication model mixed real simulated activity 
adds scripting language richer event model graph notion locations connectors agents move rooms doorways towns roads 
new mass simulator completely domain independent domain knowledge obtained con guration les data received agents working environment 
agents running mass environment ms domain independent hierarchical representation agent goals capabilities see represent knowledge :10.1.1.54.5977
ms task analysis environmental modeling simulation language quantitatively describe alternative ways goal achieved 
ms task structure essentially annotated task decomposition tree 
highest level nodes tree called task groups represent goals agent may try achieve 
goal structure shown gure wash 
