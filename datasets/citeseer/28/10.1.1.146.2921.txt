linkoping electronic articles computer information science vol 
nr dynamic logic programming jose julio alferes jo ao lu moniz pereira przymusinska teodor przymusinski linkoping university electronic press linkoping sweden www ep liu se ea cis published linkoping university electronic press linkoping sweden linkoping electronic articles computer information science issn series editor erik sandewall alferes pereira przymusinska przymusinski authors latex formatted style recommended citation authors 
title 
linkoping electronic articles computer information science vol 
nr 
www ep liu se ea cis 
investigate updates knowledge bases represented logic programs 
order represent negative information generalized logic programs allow default negation bodies heads 
particular needed order specify atoms false deleted 
logic program updates allow mere insertion deletion facts 
authors addressed issue updates logic programs called interpretation update approach originally proposed :10.1.1.146.2921
approach knowledge base db considered update knowledge base db set models coincides set individually updated models db 
approach allows reduce issue knowledge base updates issue nding updates individual interpretations models 
order determine update interpretation change status literals ected updating rules keeping literals intact inertia see 
approach may justi ed extensional part knowledge base individual facts updated example shows leads strongly counterintuitive results intensional part database program rules undergoes change 
short show update program process iterated 
generalized logic programs stable models order allow programs updating programs negative information logic programs allow default negation premises clauses heads 
call programs generalized logic programs 
class di ers class programs called classical strong negation 
section describes notation extends stable model semantics normal programs generalized logic programs order syntactically represent generalized logic programs propositional theories propositional languages include propositional variables atoms form suppose arbitrary set propositional symbols names propositional language generated set mean language set propositional variables consists fa kg fnot kg atoms called objective atoms atoms called default atoms :10.1.1.24.6050:10.1.1.24.6050
de nition follows sets disjoint 
suppose arbitrary set propositional symbols language generated valued interpretation mean set atoms satis es condition precisely atoms belongs de ne forthcoming extend results valued partial models logic programs particular founded models 
fa mg fnot mg mg generalized logic program language mean nite nite set propositional horn clauses form ln li atoms atoms appearing heads clauses objective atoms logic program normal 
consequently syntactic standpoint logic program simply viewed propositional horn theory 
semantics signi cantly di ers semantics classical propositional theories determined class stable models de ned 
de nition stable models generalized logic programs say interpretation lk stable model generalized logic program model horn theory equivalently fl atom lg example consider program assume fa 
program precisely stable model fa dg 
see stable simply observe fnot dg interpretation fnot dg stable model fnot ag proposition easily follows de nition stable models 
proposition class stable models generalized logic programs extends class stable models normal programs :10.1.1.24.6050
program updates suppose arbitrary set propositional variables generalized logic programs language denote superset bk fa kg kg kg de nition assumes original set propositional variables contain newly added symbols form disjoint sets symbols 
ap au contains symbols renamed expansion takes place 
extension language lk generated de nition program updates generalized programs language lp call original program updating program 
update mean generalized logic program consists clauses extended language rp rewritten original program clauses clause ap bm bm bm cn respectively clause bm cn original program 
modules seen viewpoints di erent agents truth read true agent situation knowledge visible agent results approach generalized valued case update programs founded semantics 
implementation valued case top querying approach programming updating grown research non monotonic reasoning logic programming 
envisage enriching dynamic programming features near abduction contradiction removal 
applications intend study include modelling productions systems reasoning actions temporal databases 
alferes pereira :10.1.1.146.2921
update programs update programs 
dix pereira przymusinski editors selected papers iclp ws vol 
lnai pages 
springer verlag 
alferes pereira przymusinski 
strong explicit negation non monotonic reasoning logic programming 
alferes pereira orlowska editors jelia volume lnai pages 
springer verlag 
gelfond lifschitz :10.1.1.24.6050
stable model semantics logic programming 
kowalski bowen 
editors 
th int 
przymusinski turner 
update means inference rules 
marek nerode truszczynski editors lp nmr volume lnai pages 
springer verlag 
winslett :10.1.1.146.2921
reasoning action possible models approach 
proceeding aaai pages 

