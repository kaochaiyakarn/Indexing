algorithmica algorithmica springer verlag new york constraint processing multiway spatial joins papadias mamoulis theodoridis 
multiway spatial join combines information spatial relations respect spatial predicates 
motivated close correspondence constraint satisfaction problems csps show multiway spatial joins processed systematic search algorithms traditionally csps 
describes different strategies window reduction synchronous traversal take advantage underlying spatial indexes prune search space effectively 
addition provide cost models optimization methods combine strategies compute efficient execution plans 
evaluate efficiency proposed techniques accuracy cost models extensive experimentation query data combinations 


spatial dbmss store large amounts multidimensional data points lines polygons 
popular indexing methods relational databases trees directly applicable spatial data due fact total ordering objects space preserves proximity 
result number multidimensional access methods successfully employed domains including medical information systems time series databases :10.1.1.137.9369
predominant access method multidimensional data tree variations currently commercial systems informix :10.1.1.131.7887
trees applied processing types spatial selections window relation nearest neighbor queries :10.1.1.131.7887
addition effective pairwise spatial joins :10.1.1.72.4514
deals processing optimization multiway spatial joins trees 

spatial dbmss store large amounts multidimensional data points lines polygons 
popular indexing methods relational databases trees directly applicable spatial data due fact total ordering objects space preserves proximity 
result number multidimensional access methods successfully employed domains including medical information systems time series databases :10.1.1.137.9369
predominant access method multidimensional data tree variations currently commercial systems informix :10.1.1.131.7887
trees applied processing types spatial selections window relation nearest neighbor queries :10.1.1.131.7887
addition effective pairwise spatial joins :10.1.1.72.4514
deals processing optimization multiway spatial joins trees 
multiway spatial join defined follows set spatial relations ri rj rn ri ui ui set binary ni spatial predicates cij find tuples ui ul un cij ui ul 
spatial dbmss store large amounts multidimensional data points lines polygons 
popular indexing methods relational databases trees directly applicable spatial data due fact total ordering objects space preserves proximity 
result number multidimensional access methods successfully employed domains including medical information systems time series databases :10.1.1.137.9369
predominant access method multidimensional data tree variations currently commercial systems informix :10.1.1.131.7887
trees applied processing types spatial selections window relation nearest neighbor queries :10.1.1.131.7887
addition effective pairwise spatial joins :10.1.1.72.4514
deals processing optimization multiway spatial joins trees 
multiway spatial join defined follows set spatial relations ri rj rn ri ui ui set binary ni spatial predicates cij find tuples ui ul un cij ui ul 
cases spatial predicate overlap intersect crosses alternatively predicate near meet 
popular indexing methods relational databases trees directly applicable spatial data due fact total ordering objects space preserves proximity 
result number multidimensional access methods successfully employed domains including medical information systems time series databases :10.1.1.137.9369
predominant access method multidimensional data tree variations currently commercial systems informix :10.1.1.131.7887
trees applied processing types spatial selections window relation nearest neighbor queries :10.1.1.131.7887
addition effective pairwise spatial joins :10.1.1.72.4514
deals processing optimization multiway spatial joins trees 
multiway spatial join defined follows set spatial relations ri rj rn ri ui ui set binary ni spatial predicates cij find tuples ui ul un cij ui ul 
cases spatial predicate overlap intersect crosses alternatively predicate near meet 
short version appears proceedings acm sigact sigmod sigart symposium principles database systems pods philadelphia pa pp 
section describes optimization algorithms exhaustive local search space alternative execution plans 
section evaluates proposed techniques extensive experimentation various datasets join graph topologies section concludes 

overview spatial query processing trees 
tree data structure height balanced tree consists intermediate leaf nodes corresponding disk pages secondary memory trees extensions trees dimensions :10.1.1.96.6637
root level height tree leaf nodes level 
minimum bounding rectangles mbrs data objects stored leaf nodes intermediate nodes built grouping mbrs lower level 
distinction tree node entries sk correspond mbrs included sk ref points corresponding node lower level 
tree node root contain number entries called minimum tree node utilization 
minimum bounding rectangles mbrs data objects stored leaf nodes intermediate nodes built grouping mbrs lower level 
distinction tree node entries sk correspond mbrs included sk ref points corresponding node lower level 
tree node root contain number entries called minimum tree node utilization 
illustrates relations covering workspace corresponding trees assuming maximum node capacity rectangles real dimensional applications normally depending page size 
trees trees improved versions original method proposed address problem performance degradation caused overlapping regions excessive dead space :10.1.1.129.3731:10.1.1.141.6518
selection join queries fundamental operations dbms 
section briefly techniques employed query processors support spatial selections joins trees describe related analytical models 
constraint processing multiway spatial joins fig 

tree ri height ri window average extent dimension selectivity fig 

window query wq algorithm 
papadias mamoulis theodoridis ri entries ri level defined ratio expected number entries overlapping total number probability random entry intersects 
theodoridis sellis provide formula selectivity ri sri sri average extent dimension entry sri tree ri level formula assumes unit workspace ii square node rectangles desirable property efficient trees iii uniformly distributed centers node rectangles called uniformity assumption iv independent dimensions :10.1.1.178.5499:10.1.1.25.6779:10.1.1.25.6779:10.1.1.25.6779:10.1.1.129.3731
assumptions hold analytical formulas 
number na ri node accesses retrieving entries level equals number entries intersected upper level total number entries level denoted times probability entry intersects selectivity na ri ri sri 
previous examples rivers intersecting city number node accesses depends root entries second tree intersect number river mbrs 
total cost window query sum node accesses level number entries intersect intermediate levels plus access root ri na ri sri formula performance analysis 
assumptions hold analytical formulas 
number na ri node accesses retrieving entries level equals number entries intersected upper level total number entries level denoted times probability entry intersects selectivity na ri ri sri 
previous examples rivers intersecting city number node accesses depends root entries second tree intersect number river mbrs 
total cost window query sum node accesses level number entries intersect intermediate levels plus access root ri na ri sri formula performance analysis 
theodoridis sellis define tree properties ri sri involved functions cardinality density dataset computing na ri ri data properties extracting information underlying tree structure :10.1.1.25.6779:10.1.1.25.6779:10.1.1.25.6779
pagel argue window queries representative range queries general 
papadias show formulas applied spatial predicate including topological inside meets direction north distance relations 

spatial joins 
inputs methods partition space regularly distribute data objects buckets defined partitions 
spatial join performed relational hash join fashion 
method applies external sorting files uses adaptable plane sweep algorithm considering cases horizon sweep line fit main memory 
methods second category applicable relations joined indexed spatial attributes 
influential technique category tree join rj presupposes existence trees relations :10.1.1.72.4514
rj enclosure property intermediate tree nodes intersect mbrs intersect 
assume want retrieve pairs overlapping cities rivers 
algorithm starts roots trees joined finds pairs overlapping entries inside 
pairs may lead solutions instance exist ai bj ai bj ai bj solution overlap 
symbol definition number dimensions ri height tree ri number data mbrs indexed ri number entries ri level sri sri average extent data rectangles indexed ri average extent entries ri level sri sri average extent query window ri selectivity query window entries ri level ri number node accesses window query ri ri rj number node accesses spatial join trees ri rj trees complete graphs cliques 
illustrates query graphs joining datasets solution tuples sr sr sr sri object ri 
corresponds chain query find cities crossed river crosses industrial area corresponds clique industrial area intersect city 
relational database methodology multiway spatial joins processed integration pairwise join algorithms 
solutions queries obtained computing result pairwise join rivers crossing industrial areas corresponding trees appropriate pairwise spatial join algorithm joining resulting rivers relation cities employing method applicable tree cities available :10.1.1.72.4514
efficient execution plan determined cost models pairwise spatial joins optimization methods relational queries 
follows different direction discusses processing multiway spatial joins systematic search algorithms traditionally constraint satisfaction problems 

multiway spatial joins constraint satisfaction problems 
calculation combinations qualifying nodes level expensive number high node capacity 
finding subset node combinations consistent input query treated local csp level order avoid exhaustive search 
similarly wr st applied variety search algorithms optimization techniques 
employ forward checking fc backtracking algorithm prunes domain variables current instantiations 
studies shown performs variety csps :10.1.1.45.5884
furthermore combine fc space restriction ordering heuristic minimizes number intersection checks 
dimensional array keeps versions variable domains instantiation step stores potential values variable vj vi instantiated 
initially domain variable vj consists entries node root corresponding tree 
variation space restriction heuristic applied execution fc reduce size domains 
initially domain variable vj consists entries node root corresponding tree 
variation space restriction heuristic applied execution fc reduce size domains 
entry intersect mbr node true pruned domain 
example consider solution query top level 
domains call st consist entries nodes :10.1.1.45.5884:10.1.1.45.5884:10.1.1.129.3731
space restriction remove intersect mbr intersect mbr :10.1.1.45.5884:10.1.1.129.3731
remaining entries variable domains sorted respect lower coordinate mbr low sorting 
application space restriction fc retrieves solutions current level 
variable vi assigned values 
variation space restriction heuristic applied execution fc reduce size domains 
entry intersect mbr node true pruned domain 
example consider solution query top level 
domains call st consist entries nodes :10.1.1.45.5884:10.1.1.45.5884:10.1.1.129.3731
space restriction remove intersect mbr intersect mbr :10.1.1.45.5884:10.1.1.129.3731
remaining entries variable domains sorted respect lower coordinate mbr low sorting 
application space restriction fc retrieves solutions current level 
variable vi assigned values 
exhausted algorithm backtrack previous variable lines 
order mbrs generated space restriction avoid redundant checks entry sm sm low encountered searching domain aborted exist subsequent entries intersect 
check forward domain variable contains values consistent current instantiations 
domain eliminated completely check forward return false signaling lead solution 
domain elimination variable vj happens exists join condition value vj intersects 
continuing previous example space restriction domains :10.1.1.45.5884:10.1.1.45.5884:10.1.1.129.3731
instantiation check forward remove empty :10.1.1.45.5884
lead solution papadias mamoulis theodoridis assigned value 
dimensional structure domain array stack mechanism simplify domain restoration procedure vi unassigned value re initialized variables 
application st wr cases variables domain image similarity retrieval applications straightforward 
check forward domain variable contains values consistent current instantiations 
domain eliminated completely check forward return false signaling lead solution 
domain elimination variable vj happens exists join condition value vj intersects 
continuing previous example space restriction domains :10.1.1.45.5884:10.1.1.45.5884:10.1.1.129.3731
instantiation check forward remove empty :10.1.1.45.5884
lead solution papadias mamoulis theodoridis assigned value 
dimensional structure domain array stack mechanism simplify domain restoration procedure vi unassigned value re initialized variables 
application st wr cases variables domain image similarity retrieval applications straightforward 
furthermore algorithms effectively employed subset solutions needs retrieved 
query instance rj retrieve pairs overlapping cities rivers pair wr called find qualifying industrial areas 
illustrates alternative plans query joins processed st shown rectangles 
plans correspond wr leftmost variable instantiated 
obviously technique applied number variables query involving relations may processed st variables wr instantiate rest 
combination st wr multiway spatial join processing results plans certain left deep form different left deep trees relational join processing sense leftmost deepest leaf nodes synchronously traversed plans necessarily binary trees :10.1.1.108.3178:10.1.1.108.3178
order determine optimal plan need analytical formulas selectivity multiway spatial joins cost algorithms 

selectivity multiway spatial joins 
case spatial selections pairwise joins expected number solutions determines cost crucial optimization multiway spatial joins 
general level solutions qx node accesses 
total cost st qx solutions qx 
note algorithms applicable queries containing arbitrary cycles optimization queries bounds number solutions accurate 
vk vk vn plan variables instantiated st rest wr order qx subgraph containing variables total cost processing cost qk qx 
known database csp communities choice appropriate plan order variables get instantiated significant effect performance :10.1.1.45.5884:10.1.1.45.5884:10.1.1.108.3178
follows provide optimization algorithms determine subset variables instantiated st optimal order remaining variables instantiated wr 

query optimization 
function returns number plans legal subgraph nodes function returns number legal decompositions 
finite amount time algorithm terminates local minimum 
second method implements simulated annealing sa 
sa performs random walks just iterative improvement addition downhill accepts moves papadias mamoulis theodoridis certain probability trying avoid local minima 
initially probability relatively high value gradually reduced 
detailed descriptions simulated annealing :10.1.1.123.7607
running sa various conditions chose set control parameters current problem initial probability accepting move temperature reduce factor equilibrium condition similar values obtained optimization relational joins 
implemented versions heuristics called ii respectively random initial plan choose seed applying heuristic fact join cost depends data density cardinality sort variables respect product variables smallest value processed decreasing probability size intermediate results large 
keeping order fixed test possible values set initial plan gives minimum cost 
experiments section suggest hill climbing algorithms combined heuristic provide nearly optimal plans 
evaluation optimization 
set experiments shows accuracy cost models studies data query density affect optimal value number variables instantiated st 
run tree clique queries involving variables datasets various densities 
cardinality datasets fixed uniformly distributed rectangles 
page size set kb resulting trees node capacity height :10.1.1.129.3731
data density potential values 
total data density times graph topology experimental settings 
setting value ranges pure wr pure st run corresponds best plan value cases cost optimization cost processing optimal plan 
illustrates actual na estimated node accesses cpu time setting 
results similar acyclic topologies include special cases chains stars behavior queries derived general diagrams trees 
estimation constraint processing multiway spatial joins fig 

actual estimated node accesses cpu time various combinations data query densities 
node extents sri statistical information tree analytical formulas provide higher accuracy :10.1.1.25.6779:10.1.1.25.6779
observations results estimated node accesses close actual number 
worst case relative error average difference na 
diagrams cpu time similar ones node accesses cheapest plan terms cpu time fewest accesses 
confirms fact models section measure cost multiway spatial joins 
instance tuple returned st plan vk vk vn may preferable check tuple corresponds actual solution refinement proceeding wr 
furthermore cost models algorithms elaborated capture page accesses presence lru buffers replacement policies 
efficient multidimensional information processing increasingly important availability information various forms satellite images digital video multimedia documents complexity related applications increase continuously 
large systems handle massive volumes multidimensional data answer line queries numerous users 
systems dbms satellite images query languages gis query sketch multimedia databases visualseek provide ways expressing content queries processed multiway spatial joins :10.1.1.45.884
proposed techniques wide range potential applications 
acknowledgments 
sophie useful comments 
constraint processing multiway spatial joins arge ramaswamy vitter scalable sweeping spatial join 
constraint processing multiway spatial joins arge ramaswamy vitter scalable sweeping spatial join 
proc 
vldb pp 

bacchus van run dynamic variable ordering csps :10.1.1.45.5884
principles practice constraint programming pp 

lncs springer verlag berlin 
beckmann kriegel schneider seeger tree efficient robust access method points rectangles :10.1.1.129.3731
bacchus van run dynamic variable ordering csps :10.1.1.45.5884
principles practice constraint programming pp 

lncs springer verlag berlin 
beckmann kriegel schneider seeger tree efficient robust access method points rectangles :10.1.1.129.3731
proc 
acm sigmod pp 

castelli li 

castelli li 
progressive content retrieval satellite image archives 
lib magazine october mirrored ac uk journals dlib dlib dlib october ibm li html 
brinkhoff kriegel seeger efficient processing spatial joins trees :10.1.1.72.4514
proc 
acm sigmod pp 

approach travelling salesman problem efficient simulation algorithm 
faloutsos ranganathan manolopoulos fast subsequence matching time series databases 
proc 
acm sigmod pp 

gaede multidimensional access methods :10.1.1.137.9369
acm computing surveys 
graefe query evaluation techniques large databases 
acm computing surveys 
gudivada raghavan design evaluation algorithms image retrieval spatial similarity 
graefe query evaluation techniques large databases 
acm computing surveys 
gudivada raghavan design evaluation algorithms image retrieval spatial similarity 
acm tois 
guttman trees dynamic index structure spatial searching :10.1.1.131.7887
proc 
acm sigmod pp 

gyssens cohen decomposing constraint satisfaction problems database techniques 
kamel faloutsos packing trees 
proc 
acm cikm pp 

kirkpatrick vecchi optimization simulated annealing :10.1.1.123.7607
science 
sevcik size separation spatial join 
proc 
acm sigmod pp 
vldb pp 

silberschatz korth sudarshan database system concepts 
mcgraw hill new york 
smith chang :10.1.1.45.884
visualseek fully automated content image query system 
proc 
acm multimedia pp 

swami gupta optimization large join queries 
proc 
acm sigmod pp 

theodoridis sellis model prediction tree performance :10.1.1.25.6779
proc 
acm pods pp 

theodoridis sellis cost models join queries spatial databases 
