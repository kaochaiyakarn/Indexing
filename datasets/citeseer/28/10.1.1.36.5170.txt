pattern approach interaction design create successful interactive systems user interface designers need cooperate developers application domain experts interdisciplinary team 
groups usually common terminology exchange ideas opinions values 
presents approach uses pattern languages capture knowledge software development hci application domain 
formal domain independent definition design patterns allows computer support sacrificing readability pattern integrated usability engineering life cycle 
example experience building award winning interactive music exhibit turned pattern language inform follow projects support hci education 
categories subject descriptors information interfaces presentation hci user interfaces style guides theory methods training help documentation user centered design information interfaces presentation hci sound music computing modeling systems software engineering design tools techniques user interfaces general terms design human factors documentation keywords pattern languages design methodologies interdisciplinary design music exhibits education 
showed ideas adopting pattern concept hci varied little attention pattern languages interaction design 
patterns reported workshop necessarily strictly design patterns activity patterns describing observed behaviour conference judging represented bad solutions 
similarly utrecht curriculum designers identified temporal dimension making interaction design quite different architectural design 
workshop stressed underestimated fact patterns large extent represent values author qualities author considers important artefacts designs 
subsequent workshops interact chi confirmed growing interest pattern languages hci community helped precisely shape notion hci design patterns :10.1.1.20.7928
preliminary definition hci design patterns suggestions structuring hci design pattern languages sample format hci pattern interact workshop 
chi workshop refined findings definitions pattern idea linked related concepts usability engineering claims 
number concrete pattern collections interaction design suggested 
language example covers substantial field user interface design issues 
re patterns describe business domains processes tasks aid early system definition conceptual design 
authors note interdisciplinary value patterns communications medium ability patterns capture knowledge previous projects 
reason experience methods values application domain expressed pattern form long activity application domain includes form design creative problem solving 
brought author idea hci professionals software engineers application domain experts express respective experience guidelines values form pattern languages 
history pattern languages architecture software engineering especially hci described detail :10.1.1.36.5170

pattern languages design sections give general model pattern languages show integrate pattern languages usability engineering process 
formal hypertext model pattern language formal description patterns ambiguous parties involved decide pattern supposed look terms structure content 
possible design computer tools help authors writing readers understanding patterns 
show musical concepts identified address exhibit describe user interface patterns specific scenario software design solutions system 
describe patterns full detail typically require pages pattern 
show network patterns identified far look detail main issues context problem solution examples small representative selection 
actual patterns written detailed textual form explicit labels context problem implicit typographical structuring clearly show components pattern 
complete pattern languages :10.1.1.36.5170
musical design patterns describing musical concepts guidelines compose improvise music 
point process considered design activity feasible structure rules values design process patterns 
level consider useful certain style music chosen 
exhibit features various musical styles different parts system restrict presentation blues style 
apple balloon help windows identified 
software design patterns gamma suggested domain specific software design patterns important supplement general ones 
general software patterns identified system concentrate patterns relate specifically software design music exhibits 
describe patterns 
details patterns :10.1.1.36.5170
metric transformer context musical performance adds subtle variations representation written score harmonic rhythmic dimensions 
model variations system follow transformer chain pattern sequence transformations applied incoming stream musical data 
due dimensional nature rhythmic dimension especially accessible computer modeling 
problem incoming stream musical events needs modified timing events need delayed short period 
finished projects similar domain house music vienna including system conduct vienna able reuse refine patterns identified improved project 
pattern education hci patterns author teach user interface design year computer science undergraduate students 
students received pattern collection refer design projects surprising see quickly discovered patterns applicable current design situation proven solutions project context vocabulary patterns quickly discuss options solutions design groups 
ad hoc poll term students able recall patterns name average patterns short period course judged usefulness absolutely reuse absolutely reuse 
findings study described detail :10.1.1.36.5170

re search communication interdisciplinary design teams major problem hci practitioners 
suggested team members especially hci people software engineers experts application domain formulate experience methods values form pattern languages originally introduced urban architecture 
uniform representation computer support proposed formal representation patterns relations 
results promising indicate patterns help people outside respective discipline understand findings 
proven useful create subsequent exhibits similar background hci patterns served hci course 
currently extending refining language identifying additional patterns relations 
steps undertaken designing pattern editing tool pet system support creating reviewing browsing pattern languages 
complete version hci pattern languages interactive exhibits similar systems description pet :10.1.1.36.5170
applying pattern technique entirely new application domains strengthen argument structuring patterns generally valid approach intensive hci patterns user interface design courses hopefully give detailed findings usefulness education 

author colleagues distributed systems group darmstadt university technology research group university linz distributed systems group university ulm particularly max user darmstadt help working projects created necessary basis 
portions article adapted published full pattern approach interaction design author published john wiley sons october 
workshop 
borchers 
interaction design patterns twelve theses 
position workshop pattern languages interaction design building momentum chi hague netherlands april 
borchers :10.1.1.36.5170
pattern approach interaction design 
john wiley sons october 
borchers 
virtual conduct vienna 
