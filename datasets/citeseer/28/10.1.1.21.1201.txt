proceedings th annual ieee conference computational complexity ccc ulm germany june pp 

complexity expressive power logic programming thomas eiter georg gottlob andrei voronkov surveys various complexity results different forms logic programming 
main focus decidable forms logic programming particular propositional logic programming datalog mention general logic programming function symbols 
classical results plain logic programming pure horn clause programs results various important extensions logic programming surveyed 
include logic programming different forms negation disjunctive logic programming logic programming equality constraint logic programming 
classical results plain logic programming pure horn clause programs results various important extensions logic programming surveyed 
include logic programming different forms negation disjunctive logic programming logic programming equality constraint logic programming 
complexity unification problem addressed 

logic programming lp known declarative method knowledge representation programming idea language order logic suited representing data describing desired outputs :10.1.1.64.9246
lp developed early automated theorem proving particular robinson resolution principle 
pure logic program consists set rules called definite horn clauses 
rule form head body head logical atom body conjunction logical atoms 
logical semantics rule implication body head precise account see section 
broad survey pointers literature 
second fundamental topics explained greater detail particular basic results plain lp section mental issues related descriptive complexity section 
sections written tutorial style contain proofs sections written succinct survey style 
note consist listing published complexity results logic programming subjective choice results 
interesting results mention space reasons results may surveys :10.1.1.47.4330
example results abductive logic programming intuitionistic logic programming prolog 
organized follows 
section short lp 
introduce datalog distinguish notions data complexity program complexity combined complexity classes datalog programs 
section deals lp extended equality 
section deals complexity constraint logic programming expressive power logic programming complex values 

preliminaries section introduce basic concepts logic programming 
due space reasons presentation necessarily succinct detailed treatment see :10.1.1.20.6815
letters predicate symbols variables function symbols constants bold face version letter denotes list symbols respective type 

syntax logic programs logic programs formulated language predicates functions nonnegative arity ary functions constants 
language function free contains function symbols arity greater 
circuit simulated straightforward datalog rules 
gate input gates described rule gate described rules 
desired program comprises rules boolean circuits rules meta interpreter adapted binary encoding domain ud database binary tuples arity dlog ju je 
construction feasible logspace hard program complexity datalog follows 
see details :10.1.1.21.2628

complexity lp functions see happens allow function symbols logic programs 
case entailment atom longer decidable 
prove example reduce hilbert tenth problem query answering full lp 
logic program produced dtm encoding non recursive 
theorem implicit non recursive propositional lp complete 
non recursive datalog uniform ac data complexity program complete pspace 

founded negation roughly founded semantics wfs assigns value unknown atom defined negation :10.1.1.121.6788
briefly wfs defined follows 
fp operator fp fp anti monotone monotone greatest fixpoint denoted respectively 
meaning program wfs notice stratified programs wfs stratified semantics coincide 
theorem implicit lp wfs complete :10.1.1.131.8077
founded negation roughly founded semantics wfs assigns value unknown atom defined negation :10.1.1.121.6788
briefly wfs defined follows 
fp operator fp fp anti monotone monotone greatest fixpoint denoted respectively 
meaning program wfs notice stratified programs wfs stratified semantics coincide 
theorem implicit lp wfs complete :10.1.1.131.8077
datalog wfs data complete program complete 
deciding wfs done linear time open 
full lp known 
theorem full lp wfs pi complete 
semantics negation number interesting semantics partial maximal stable models regular models perfect models valued completion semantics fixpoint models remain see details complexity results 

disjunctive logic programming informally disjunctive logic programming dlp extends lp adding disjunction rule heads order allow suitable knowledge representation increase expressiveness 
male female person naturally represents person male female 
disjunctive general logic program set clauses delta delta delta lm background see :10.1.1.124.9986
semantics free disjunctive logic programs minimal herbrand models unique minimal model exist general 
example fp minimal models fpg fqg 
denote mm set minimal herbrand models generalized closed world assumption gcwa negation free amounts meaning fl mm lg 
example consider program describing behavior reviewer reviewing bad happy angry bad smoke happy smoke angry models minimal happy bad angry gcwa gcwa smoke gcwa gcwa theorem deciding gcwa np complete ii deciding gcwa pi complete 
notice problems field nonmonotonic reasoning pi complete 
stable negation naturally extends disjunctive logic programs adopting stable model disjunctive logic program iff mm subsumes disjunctive stratified semantics 
founded semantics natural extension known 
clearly easily computed negation free 
theorem dlp sms pi complete :10.1.1.21.2628
disjunctive datalog sms data complete pi program complete nexptime np result derived utilizing complexity upgrading techniques described section 
case functions theorem full dlp gcwa pi complete 
theorem full dlp sms pi complete 
disjunction adds complexity gcwa sms finite herbrand universes np pi infinite ones 
disjunctive datalog sms data complete pi program complete nexptime np result derived utilizing complexity upgrading techniques described section 
case functions theorem full dlp gcwa pi complete 
theorem full dlp sms pi complete 
disjunction adds complexity gcwa sms finite herbrand universes np pi infinite ones 
intuitively explained fact dlp sms corresponds weak fragment pi recursively translated pi semantics dlp analyzed having lower complexity sms possible model semantics causal model semantics higher regular model semantics :10.1.1.30.5041
typically pi complete propositional case 
cf 


negation fixpoint computer system sciences 

complexity algorithm 
jacm 
kowalski :10.1.1.64.9246
predicate logic programming language 
information processing pp 

amsterdam 
theoretical computer science 
lloyd 
foundations logic programming nd edition 
springer verlag 
lobo minker rajasekar :10.1.1.124.9986
foundations disjunctive logic programming 
mit press 

problem solvability equations free 
