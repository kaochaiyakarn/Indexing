engineering executable agents multi context systems sierra iiia artificial intelligence research institute csic spanish council scientific research campus spain 
mail sierra iiia csic es simon parsons department computer science university liverpool building liverpool zf uk 
mail parsons csc liv ac uk nicholas jennings department electronics computer science university southampton southampton bj uk 
mail ecs soton ac uk area agent computing proposals specific system architectures number proposals general approaches building agents 
comparatively attempts relate fewer attempts provide methodologies relate designs architectures executable agents 
provides attempt address shortcoming 
engineering executable agents multi context systems multi context systems easy directly execute agent specifications specifications deal modal notions 
illustrated 
final advantage related 
agents reason beliefs confronted problem modelling beliefs agents hard especially agents reason beliefs different way instance different logic 
multi context systems provide neat solution problem :10.1.1.23.6723
software engineering logical modelling perspectives combined seen multi context approach offers clear path specification implementation 
providing clear set mappings concept design design implementation multi context approach offers way tackling gap currently exists theory practice agent systems 
described falls way short bridging gap show way bridge built 
extent advantages multi context systems explored 
nested beliefs agents may lead tree structures units called belief contexts 
structures solve problems wise men 
case nested beliefs typically included single unit module 
provide comprehensive formalization autonomous agent additionally show capabilities reasoning beliefs incorporated architecture 
proposed general approach defining agent architectures extends idea modules result links approach strongly software engineering tradition :10.1.1.26.6231
approach provides means structuring logical specifications agents way directly executable described implementation carry execution 
approach number advantages defining agent architectures 
bridges gap specification agents programs implement specifications 
secondly modularity approach easier build agents capable carrying complex tasks distributed planning 
