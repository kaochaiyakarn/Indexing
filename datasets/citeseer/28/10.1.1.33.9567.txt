automated discovery concise predictive rules intrusion detection guy helmer wong vasant honavar les miller department computer science hall iowa state university ames ia wong honavar cs iastate edu november details essential component multi agent distributed knowledge network system intrusion detection :10.1.1.46.2976
describe distributed intrusion detection architecture complete data warehouse mobile stationary agents distributed problem solving facilitate building monitoring analyzing global spatio temporal views intrusions large distributed systems 
agent intrusion detection system uses machine learning approach automated discovery concise rules system call traces described 
feature vector representation describe system calls executed privileged processes 
feature vectors labeled bad depending executed observed attack 
rule learning algorithm induce rules monitor system detect potential intrusions 
feature vectors labeled bad depending executed observed attack 
rule learning algorithm induce rules monitor system detect potential intrusions 
study performance rule learning algorithm task feature subset selection genetic algorithm 
feature subset selection shown signi cantly reduce number features improving accuracy predictions 
keywords intrusion detection machine learning feature subset selection de nition intrusion set actions attempt compromise integrity con dentiality availability resource :10.1.1.26.6055:10.1.1.46.2976
detecting intrusions distributed computing systems di cult problem 
manually detecting intrusions distributed system requires tremendous amount ort prone error 
automating process detecting intrusions topic research groups including 
intrusion detection system concept distributed knowledge networks data warehouse techniques :10.1.1.26.6055
keywords intrusion detection machine learning feature subset selection de nition intrusion set actions attempt compromise integrity con dentiality availability resource :10.1.1.26.6055:10.1.1.46.2976
detecting intrusions distributed computing systems di cult problem 
manually detecting intrusions distributed system requires tremendous amount ort prone error 
automating process detecting intrusions topic research groups including 
intrusion detection system concept distributed knowledge networks data warehouse techniques :10.1.1.26.6055
distributed knowledge networks agents information retrieval extraction data transformation knowledge discovery 
data warehouse technologies data knowledge organization assimilation heterogeneous physically distributed data knowledge sources 
approach provides modular extensible approach building complex adaptive information systems knowledge intensive applications 
distributed knowledge networks er natural framework design implementation systems monitoring distributed systems intrusions including intrusions spread space time initiation suitable countermeasures 
distributed knowledge networks er natural framework design implementation systems monitoring distributed systems intrusions including intrusions spread space time initiation suitable countermeasures 
current implementation includes mobile stationary data gathering agents collect system logs audit data render common format low level agents monitor classify ongoing activities classify events pass information higher level agents data mining agents machine learning acquire predictive rules intrusion detection system logs audit data 
higher level agents provide high level intrusion detector able analyze intrusions system execute countermeasures support system administration pursuit attackers 
data warehouse knowledge provided system agents help systems management sta learn misuse patterns understand intrusions support ensive defensive actions 
intrusion detection system implemented java objectspace voyager mobile agent facility :10.1.1.39.640:10.1.1.46.2976
sketch design distributed intrusion detection system provide background explains system call intrusion detector ts larger system 
explain research application arti cial intelligence problem identifying misuse privileged programs 
computer project java agents meta learning project explored system call traces privileged programs detect intrusions :10.1.1.26.6055:10.1.1.134.4855:10.1.1.134.4855
feature vector approach describe system calls executed privileged program 
data warehouse knowledge provided system agents help systems management sta learn misuse patterns understand intrusions support ensive defensive actions 
intrusion detection system implemented java objectspace voyager mobile agent facility :10.1.1.39.640:10.1.1.46.2976
sketch design distributed intrusion detection system provide background explains system call intrusion detector ts larger system 
explain research application arti cial intelligence problem identifying misuse privileged programs 
computer project java agents meta learning project explored system call traces privileged programs detect intrusions :10.1.1.26.6055:10.1.1.134.4855:10.1.1.134.4855
feature vector approach describe system calls executed privileged program 
show feature vector representation works automated knowledge discovery rule learning 
employ feature subset selection genetic algorithm reduce number features necessary feature vector improve accuracy results eliminating extraneous features 
related projects closely related intrusion detection project include computer jam aafid :10.1.1.46.2976
computer project java agents meta learning project explored system call traces privileged programs detect intrusions :10.1.1.26.6055:10.1.1.134.4855:10.1.1.134.4855
feature vector approach describe system calls executed privileged program 
show feature vector representation works automated knowledge discovery rule learning 
employ feature subset selection genetic algorithm reduce number features necessary feature vector improve accuracy results eliminating extraneous features 
related projects closely related intrusion detection project include computer jam aafid :10.1.1.46.2976
common intrusion detection framework resembles project architecture :10.1.1.39.640:10.1.1.46.2976
standard proposed group including information technology ce defense advanced research projects agency university california davis information sciences institute odyssey research 
bottom layer reconnaissance agents correspond data gathering agents 
middle analysis agents correspond low level agents 
feature vector approach describe system calls executed privileged program 
show feature vector representation works automated knowledge discovery rule learning 
employ feature subset selection genetic algorithm reduce number features necessary feature vector improve accuracy results eliminating extraneous features 
related projects closely related intrusion detection project include computer jam aafid :10.1.1.46.2976
common intrusion detection framework resembles project architecture :10.1.1.39.640:10.1.1.46.2976
standard proposed group including information technology ce defense advanced research projects agency university california davis information sciences institute odyssey research 
bottom layer reconnaissance agents correspond data gathering agents 
middle analysis agents correspond low level agents 
top layer decision response agents correspond high level agents 
bottom layer reconnaissance agents correspond data gathering agents 
middle analysis agents correspond low level agents 
top layer decision response agents correspond high level agents 
similarity prototype system model exibility language lend integration compatible systems need arises 
distributed intrusion detection system university california davis uses combination host monitors local area network monitors monitor system network activities :10.1.1.39.640:10.1.1.46.2976
centralized director aggregates information monitors detect intrusions 
similar agent system intrusion detection countermeasures uses multiple monitors arti cial intelligence algorithms determine severity events 
di ers system intelligence purely centralized agent technology 
computer project university new mexico explored designs intrusion detection systems animal immune systems 
similar agent system intrusion detection countermeasures uses multiple monitors arti cial intelligence algorithms determine severity events 
di ers system intelligence purely centralized agent technology 
computer project university new mexico explored designs intrusion detection systems animal immune systems 
portion project developed sense self security related computer programs creating database normal system call traces instances execution programs 
sense self detect intrusions comparing execution traces processes database system call traces :10.1.1.46.2976
variety approaches detect intrusions system call traces di erent privileged programs :10.1.1.39.640:10.1.1.46.2976:10.1.1.46.2976
general computer project di ers project focusing individual agents sharing data agents feeding data data warehouse 
speci application intrusion detection system calls attempt develop sense self concentrate developing rules check particular program execution trace anomalies 
assume knowledge identify program traced apply rule set learned particular program 
di ers system intelligence purely centralized agent technology 
computer project university new mexico explored designs intrusion detection systems animal immune systems 
portion project developed sense self security related computer programs creating database normal system call traces instances execution programs 
sense self detect intrusions comparing execution traces processes database system call traces :10.1.1.46.2976
variety approaches detect intrusions system call traces di erent privileged programs :10.1.1.39.640:10.1.1.46.2976:10.1.1.46.2976
general computer project di ers project focusing individual agents sharing data agents feeding data data warehouse 
speci application intrusion detection system calls attempt develop sense self concentrate developing rules check particular program execution trace anomalies 
assume knowledge identify program traced apply rule set learned particular program 
java agents meta learning jam project columbia university similar agent system intrusion detection countermeasures :10.1.1.44.5728:10.1.1.39.640:10.1.1.46.2976
variety approaches detect intrusions system call traces di erent privileged programs :10.1.1.39.640:10.1.1.46.2976:10.1.1.46.2976
general computer project di ers project focusing individual agents sharing data agents feeding data data warehouse 
speci application intrusion detection system calls attempt develop sense self concentrate developing rules check particular program execution trace anomalies 
assume knowledge identify program traced apply rule set learned particular program 
java agents meta learning jam project columbia university similar agent system intrusion detection countermeasures :10.1.1.44.5728:10.1.1.39.640:10.1.1.46.2976
jam uses intelligent distributed java agents data mining learn models fraud intrusive behavior 
jam project expanded done forrest group detect intrusions privileged programs 
jam project apply data mining approach intrusion detection di erent data representation provides single signature process 
project di ers jam concentrating data mining organization 
project di ers jam concentrating data mining organization 
jam project focus data mining multiple organizations 
project looking countermeasures combat intrusions 
aafid group purdue coast project prototyped agent intrusion detection system 
analyzes agent approach intrusion detection mentions prototype done aafid :10.1.1.26.6055
project di ers aafid data mining detect intrusions multiple components emphasizing learning algorithms intrusion detection mobile agents 
aafid implemented perl system implemented java 
design agent system system intelligent agents collaborative information mobile agent technologies developed implement intrusion detection system :10.1.1.39.640:10.1.1.100.7162:10.1.1.46.2976
goals system design learn detect intrusions hosts networks individual agents targeted particular subsystems mobile agent technologies intelligently process audit data sources agents collaborate share information suspicious events determine relaxed apply data mining techniques heterogeneous data knowledge sources identify react coordinated intrusions multiple subsystems 
aafid group purdue coast project prototyped agent intrusion detection system 
analyzes agent approach intrusion detection mentions prototype done aafid :10.1.1.26.6055
project di ers aafid data mining detect intrusions multiple components emphasizing learning algorithms intrusion detection mobile agents 
aafid implemented perl system implemented java 
design agent system system intelligent agents collaborative information mobile agent technologies developed implement intrusion detection system :10.1.1.39.640:10.1.1.100.7162:10.1.1.46.2976
goals system design learn detect intrusions hosts networks individual agents targeted particular subsystems mobile agent technologies intelligently process audit data sources agents collaborate share information suspicious events determine relaxed apply data mining techniques heterogeneous data knowledge sources identify react coordinated intrusions multiple subsystems 
notable feature intrusion detection system data mining support ers gathering operating data knowledge sources entire observed system 
system identify sources multistage intrusions initiate countermeasures response intrusion provide supporting documentation system administrators help procedural legal action taken attacker 
example intrusion involving subsystem combined nfs intrusion 
goals system design learn detect intrusions hosts networks individual agents targeted particular subsystems mobile agent technologies intelligently process audit data sources agents collaborate share information suspicious events determine relaxed apply data mining techniques heterogeneous data knowledge sources identify react coordinated intrusions multiple subsystems 
notable feature intrusion detection system data mining support ers gathering operating data knowledge sources entire observed system 
system identify sources multistage intrusions initiate countermeasures response intrusion provide supporting documentation system administrators help procedural legal action taken attacker 
example intrusion involving subsystem combined nfs intrusion 
rst step attacker determine nfs le hosts equiv assuming appropriate exported unix system :10.1.1.39.640:10.1.1.46.2976
nfs attacker re write le give login privileges attacked host 
low level agent system calls data cleaner system calls high level agents data mining low level agent logins low level agent failed logins low level agent functions low level agent tcp connections mobile agents travel monitored component stationary agents monitored component data cleaner tcp connections data cleaner functions data cleaner failed logins data cleaner logins router network events high level agents data fusion high level agents mediators user high level agents functions select system data router log messages data sources system error messages data sources authentication messages data sources application messages data sources messages interface agent database architecture intrusion detection system untrusted host attacker able login account attacked host attacked host mistakenly trusts attacker 
point attacker may able compromise system 
intrusion detection system data mining able correlate intrusions help identify origin intrusion support system management responding intrusion 
information routers provide data distributed data cleaning agents registered interest particular data 
data cleaning agents process data obtained log les network protocol monitors system activity monitors homogeneous formats 
mobile agents just data cleaning agents system architecture form rst level intrusion detection 
mobile agents travel associated data cleaning agents gather information classify data determine suspicious activity occurring 
jam system low level agents may variety classi cation algorithms :10.1.1.44.5728:10.1.1.39.640:10.1.1.46.2976
jam system agents level collaborate set suspicion level determine cooperatively suspicious action interesting presence suspicious activity 
top level high level agents maintain data warehouse combining knowledge data low level agents 
high level agents apply data mining algorithms discover associations patterns 
data warehouse provides global temporal view knowledge activity monitored distributed system system help train system administrators spot defend intrusions 
interface agent agent intrusion detection system directs operation agents system maintains status reported mobile agents 
interface agent provides access data warehouse features 
project current state data cleaning low level agents implemented 
discusses agent monitors privileged programs machine learning techniques 
progress includes integration data driven knowledge discovery agents distributed knowledge system call sequences label normal normal normal abnormal abnormal table sample system call windows training labels network monitoring distributed computing systems :10.1.1.46.2976
general interested machine learning approaches discovering patterns coordinated intrusions system individual intrusions spread space time 
rule learning system call traces programs provide network services distributed computing systems execute special privileges 
example popular sendmail mail transfer agent operates privileges unix systems 
privileged programs sendmail target intrusions 
general interested machine learning approaches discovering patterns coordinated intrusions system individual intrusions spread space time 
rule learning system call traces programs provide network services distributed computing systems execute special privileges 
example popular sendmail mail transfer agent operates privileges unix systems 
privileged programs sendmail target intrusions 
trace system calls executed program identify intrusion mounted program :10.1.1.134.4855:10.1.1.134.4855
forrest project university new mexico developed databases system calls normal anomalous uses privileged programs sendmail 
forrest system call data set les consisting lines giving process id number pid system call number 
les partitioned show behavior normal anomalous privileged sendmail program running sunos 
forrest organized system call traces sequence windows provide context 
forrest organized system call traces sequence windows provide context 
forrest showed database known sequence windows developed reasonably sized set non intrusive sendmail executions 
forrest showed intrusive behavior determined nding percentage system call sequences match known sequences 
data sets forrest project available electronic form web site 
data set enable comparison techniques related papers :10.1.1.26.6055:10.1.1.134.4855:10.1.1.46.2976:10.1.1.46.2976
feature vector technique improves forrest technique depend threshold percentage abnormal sequences 
feature vector technique compactly summarizes vast data obtained process enabling longer term storage data analysis 
respect rule learning techniques technique induces compact rule set easily carried lightweight agents 
technique may mine knowledge data way analyzed experts 
feature vector technique improves forrest technique depend threshold percentage abnormal sequences 
feature vector technique compactly summarizes vast data obtained process enabling longer term storage data analysis 
respect rule learning techniques technique induces compact rule set easily carried lightweight agents 
technique may mine knowledge data way analyzed experts 
lee portion data forrest project show ripper learning algorithm learn rules system call sequence windows :10.1.1.26.6055:10.1.1.134.4855:10.1.1.134.4855
lee empirically sequences length gave best results experiments :10.1.1.26.6055:10.1.1.134.4855:10.1.1.134.4855
training window assigned label normal matches windows obtained proper operations sendmail window labeled abnormal 
example system call windows labels shown table 
ripper trained learned rule set applied testing data generate classi cations sequence window 
feature vector technique compactly summarizes vast data obtained process enabling longer term storage data analysis 
respect rule learning techniques technique induces compact rule set easily carried lightweight agents 
technique may mine knowledge data way analyzed experts 
lee portion data forrest project show ripper learning algorithm learn rules system call sequence windows :10.1.1.26.6055:10.1.1.134.4855:10.1.1.134.4855
lee empirically sequences length gave best results experiments :10.1.1.26.6055:10.1.1.134.4855:10.1.1.134.4855
training window assigned label normal matches windows obtained proper operations sendmail window labeled abnormal 
example system call windows labels shown table 
ripper trained learned rule set applied testing data generate classi cations sequence window 
lee uses window classi cations length step size window group labels :10.1.1.26.6055:10.1.1.134.4855:10.1.1.134.4855:10.1.1.46.2976
lee empirically sequences length gave best results experiments :10.1.1.26.6055:10.1.1.134.4855:10.1.1.134.4855
training window assigned label normal matches windows obtained proper operations sendmail window labeled abnormal 
example system call windows labels shown table 
ripper trained learned rule set applied testing data generate classi cations sequence window 
lee uses window classi cations length step size window group labels :10.1.1.26.6055:10.1.1.134.4855:10.1.1.134.4855:10.1.1.46.2976
number abnormal labels window exceeds window considered abnormal 
example single window classi cations shown table :10.1.1.46.2976
window scheme lters isolated noise due occasional prediction errors 
intrusion takes place cluster system call sequences usually classi ed abnormal 
example system call windows labels shown table 
ripper trained learned rule set applied testing data generate classi cations sequence window 
lee uses window classi cations length step size window group labels :10.1.1.26.6055:10.1.1.134.4855:10.1.1.134.4855:10.1.1.46.2976
number abnormal labels window exceeds window considered abnormal 
example single window classi cations shown table :10.1.1.46.2976
window scheme lters isolated noise due occasional prediction errors 
intrusion takes place cluster system call sequences usually classi ed abnormal 
table ripper classi cation system call sequences actual label normal normal normal normal abnormal normal abnormal abnormal abnormal abnormal table sample system call windows classi cations abnormal classi cations normal window entire window labeled anomalous :10.1.1.46.2976
lee empirically values worked best identifying intrusions :10.1.1.26.6055:10.1.1.134.4855:10.1.1.134.4855
number abnormal labels window exceeds window considered abnormal 
example single window classi cations shown table :10.1.1.46.2976
window scheme lters isolated noise due occasional prediction errors 
intrusion takes place cluster system call sequences usually classi ed abnormal 
table ripper classi cation system call sequences actual label normal normal normal normal abnormal normal abnormal abnormal abnormal abnormal table sample system call windows classi cations abnormal classi cations normal window entire window labeled anomalous :10.1.1.46.2976
lee empirically values worked best identifying intrusions :10.1.1.26.6055:10.1.1.134.4855:10.1.1.134.4855
window passed classi cations percentage abnormal regions obtained dividing number anomalous windows total number windows 
lee uses percentage empirically derive threshold separates normal processes anomalous processes 
uses similar technique locality frame count counts number mismatches group considers group anomalous count exceeds threshold :10.1.1.39.640:10.1.1.46.2976:10.1.1.46.2976
example single window classi cations shown table :10.1.1.46.2976
window scheme lters isolated noise due occasional prediction errors 
intrusion takes place cluster system call sequences usually classi ed abnormal 
table ripper classi cation system call sequences actual label normal normal normal normal abnormal normal abnormal abnormal abnormal abnormal table sample system call windows classi cations abnormal classi cations normal window entire window labeled anomalous :10.1.1.46.2976
lee empirically values worked best identifying intrusions :10.1.1.26.6055:10.1.1.134.4855:10.1.1.134.4855
window passed classi cations percentage abnormal regions obtained dividing number anomalous windows total number windows 
lee uses percentage empirically derive threshold separates normal processes anomalous processes 
uses similar technique locality frame count counts number mismatches group considers group anomalous count exceeds threshold :10.1.1.39.640:10.1.1.46.2976:10.1.1.46.2976
technique allows intrusion detection long running daemons intrusion masked large number normal windows lee technique 
table ripper classi cation system call sequences actual label normal normal normal normal abnormal normal abnormal abnormal abnormal abnormal table sample system call windows classi cations abnormal classi cations normal window entire window labeled anomalous :10.1.1.46.2976
lee empirically values worked best identifying intrusions :10.1.1.26.6055:10.1.1.134.4855:10.1.1.134.4855
window passed classi cations percentage abnormal regions obtained dividing number anomalous windows total number windows 
lee uses percentage empirically derive threshold separates normal processes anomalous processes 
uses similar technique locality frame count counts number mismatches group considers group anomalous count exceeds threshold :10.1.1.39.640:10.1.1.46.2976:10.1.1.46.2976
technique allows intrusion detection long running daemons intrusion masked large number normal windows lee technique 
lee developed alternate technique predicts system calls sequence :10.1.1.26.6055:10.1.1.134.4855:10.1.1.134.4855
alternate technique allows learning normal behavior absence anomalous data 
technique suitable require anomalous data training 
window passed classi cations percentage abnormal regions obtained dividing number anomalous windows total number windows 
lee uses percentage empirically derive threshold separates normal processes anomalous processes 
uses similar technique locality frame count counts number mismatches group considers group anomalous count exceeds threshold :10.1.1.39.640:10.1.1.46.2976:10.1.1.46.2976
technique allows intrusion detection long running daemons intrusion masked large number normal windows lee technique 
lee developed alternate technique predicts system calls sequence :10.1.1.26.6055:10.1.1.134.4855:10.1.1.134.4855
alternate technique allows learning normal behavior absence anomalous data 
technique suitable require anomalous data training 
representing system call traces feature vectors goals automated discovery predictive rules intrusion detection extract relevant knowledge form lends analysis human experts 
natural question raised examination rules learned ripper experiments essentially performance achieved alternative approach induced smaller number simpler rules :10.1.1.26.6055:10.1.1.134.4855:10.1.1.134.4855
lee developed alternate technique predicts system calls sequence :10.1.1.26.6055:10.1.1.134.4855:10.1.1.134.4855
alternate technique allows learning normal behavior absence anomalous data 
technique suitable require anomalous data training 
representing system call traces feature vectors goals automated discovery predictive rules intrusion detection extract relevant knowledge form lends analysis human experts 
natural question raised examination rules learned ripper experiments essentially performance achieved alternative approach induced smaller number simpler rules :10.1.1.26.6055:10.1.1.134.4855:10.1.1.134.4855
explore question designed alternative representation scheme data 
representation inspired success bag words representation documents successfully groups train text classi cation systems :10.1.1.39.640:10.1.1.46.2976
representation document represented vector elements correspond words vocabulary 
simplest case vectors binary bit value indicates corresponding word appears document question bit value denotes absence word 
technique suitable require anomalous data training 
representing system call traces feature vectors goals automated discovery predictive rules intrusion detection extract relevant knowledge form lends analysis human experts 
natural question raised examination rules learned ripper experiments essentially performance achieved alternative approach induced smaller number simpler rules :10.1.1.26.6055:10.1.1.134.4855:10.1.1.134.4855
explore question designed alternative representation scheme data 
representation inspired success bag words representation documents successfully groups train text classi cation systems :10.1.1.39.640:10.1.1.46.2976
representation document represented vector elements correspond words vocabulary 
simplest case vectors binary bit value indicates corresponding word appears document question bit value denotes absence word 
experiment data encoded binary valued bits feature vectors 
bit vector indicate known system call sequence appeared execution process 
experiment data encoded binary valued bits feature vectors 
bit vector indicate known system call sequence appeared execution process 
encoding similar spirit bag words encoding represent text documents 
feature vectors computed process basis sendmail system call traces 
ideas previous sequence windows size evaluated feature vector approach :10.1.1.134.4855:10.1.1.134.4855:10.1.1.46.2976
sequence windows size selected performance learning accuracy relatively small dictionary size 
training data composed feature vectors randomly selected normal traces feature vectors selected abnormal traces 
compare results jam project speci anomalous traces selected training 
di erent selections anomalous traces tested ensure arbitrarily selecting anomalous traces signi cantly ect results 
sequence windows size selected performance learning accuracy relatively small dictionary size 
training data composed feature vectors randomly selected normal traces feature vectors selected abnormal traces 
compare results jam project speci anomalous traces selected training 
di erent selections anomalous traces tested ensure arbitrarily selecting anomalous traces signi cantly ect results 
number abnormal records training data quite small records proportion set normal training data records :10.1.1.46.2976
balance weightings abnormal training data duplicated times abnormal records training data 
lee explains rationale balancing data obtain desired results ripper :10.1.1.26.6055:10.1.1.134.4855:10.1.1.134.4855
feature vectors built sequences length ripper ciently learned rule set containing simple rules bad size set rules compares favorably set rules ripper learned lee system call window approach :10.1.1.46.2976
feature vector approach information entire process history execution 
compare results jam project speci anomalous traces selected training 
di erent selections anomalous traces tested ensure arbitrarily selecting anomalous traces signi cantly ect results 
number abnormal records training data quite small records proportion set normal training data records :10.1.1.46.2976
balance weightings abnormal training data duplicated times abnormal records training data 
lee explains rationale balancing data obtain desired results ripper :10.1.1.26.6055:10.1.1.134.4855:10.1.1.134.4855
feature vectors built sequences length ripper ciently learned rule set containing simple rules bad size set rules compares favorably set rules ripper learned lee system call window approach :10.1.1.46.2976
feature vector approach information entire process history execution 
feature vectors may easier learning algorithms aggregating information entire execution process looking individual sequences 
applying learned rule set produced results shown table 
di erent selections anomalous traces tested ensure arbitrarily selecting anomalous traces signi cantly ect results 
number abnormal records training data quite small records proportion set normal training data records :10.1.1.46.2976
balance weightings abnormal training data duplicated times abnormal records training data 
lee explains rationale balancing data obtain desired results ripper :10.1.1.26.6055:10.1.1.134.4855:10.1.1.134.4855
feature vectors built sequences length ripper ciently learned rule set containing simple rules bad size set rules compares favorably set rules ripper learned lee system call window approach :10.1.1.46.2976
feature vector approach information entire process history execution 
feature vectors may easier learning algorithms aggregating information entire execution process looking individual sequences 
applying learned rule set produced results shown table 
traces normal sendmail anomalous 
attacks result successful intrusions 
intrusion detection system identify attacks intrusive activity merits investigation ids 
attacker attempt single exploit give fails 
data mining portion intrusion detection system correlate multiple successful unsuccessful attacks 
anomalous traces clearly identi ed experiment exception minor intrusions fwd loops :10.1.1.46.2976
fwd loop attacks denial service attacks sendmail process spends time repeatedly forwarding message 
feature vector technique may need adjusted simple binary values statistical measures identify class attack 
bene feature vector approach simplicity learned rules 
training takes place line due amount time need learn rule set 
list system calls executed process enormous 
storing information entirety infeasible 
representing data relatively short xed length string helps solve problems transmitting storing data 
technique realizes mobile agent architecture goal reducing summarizing data point generation 
trace name total feature vectors vectors predicted abnormal attack detected decode decode fwd loops fwd loops fwd loops fwd loops fwd loops recursive sm sm local local remote remote normal sendmail training table results learning rules feature vectors feature subset selection genetic algorithms learning algorithm performance terms learning time classi cation accuracy test data comprehensibility learned rules depends features attributes represent examples :10.1.1.46.2976
feature subset selection shown improve performance learning algorithm reduce ort amount data required machine learning broad range problems :10.1.1.26.6055
discussion alternative approaches feature subset selection :10.1.1.26.6055:10.1.1.30.3875
bene ts ects feature subset selection include feature subset selection ects accuracy learning algorithm features data set represent language 
language expressive accuracy learning algorithm adversely ected 
storing information entirety infeasible 
representing data relatively short xed length string helps solve problems transmitting storing data 
technique realizes mobile agent architecture goal reducing summarizing data point generation 
trace name total feature vectors vectors predicted abnormal attack detected decode decode fwd loops fwd loops fwd loops fwd loops fwd loops recursive sm sm local local remote remote normal sendmail training table results learning rules feature vectors feature subset selection genetic algorithms learning algorithm performance terms learning time classi cation accuracy test data comprehensibility learned rules depends features attributes represent examples :10.1.1.46.2976
feature subset selection shown improve performance learning algorithm reduce ort amount data required machine learning broad range problems :10.1.1.26.6055
discussion alternative approaches feature subset selection :10.1.1.26.6055:10.1.1.30.3875
bene ts ects feature subset selection include feature subset selection ects accuracy learning algorithm features data set represent language 
language expressive accuracy learning algorithm adversely ected 
feature subset selection reduces computational ort required learning algorithm 
representing data relatively short xed length string helps solve problems transmitting storing data 
technique realizes mobile agent architecture goal reducing summarizing data point generation 
trace name total feature vectors vectors predicted abnormal attack detected decode decode fwd loops fwd loops fwd loops fwd loops fwd loops recursive sm sm local local remote remote normal sendmail training table results learning rules feature vectors feature subset selection genetic algorithms learning algorithm performance terms learning time classi cation accuracy test data comprehensibility learned rules depends features attributes represent examples :10.1.1.46.2976
feature subset selection shown improve performance learning algorithm reduce ort amount data required machine learning broad range problems :10.1.1.26.6055
discussion alternative approaches feature subset selection :10.1.1.26.6055:10.1.1.30.3875
bene ts ects feature subset selection include feature subset selection ects accuracy learning algorithm features data set represent language 
language expressive accuracy learning algorithm adversely ected 
feature subset selection reduces computational ort required learning algorithm 
size search space depends features reducing feature set exclude irrelevant features reduces size search space reduces learning ort 
bene ts ects feature subset selection include feature subset selection ects accuracy learning algorithm features data set represent language 
language expressive accuracy learning algorithm adversely ected 
feature subset selection reduces computational ort required learning algorithm 
size search space depends features reducing feature set exclude irrelevant features reduces size search space reduces learning ort 
number examples required learn classi cation function depends number features :10.1.1.26.6055:10.1.1.46.2976
features require examples learn classi cation function desired accuracy 
feature subset selection result lower cost classi cation cost obtaining feature values measurement simply computation overhead processing features 
background natural consider feature subset selection possible means improving performance machine learning algorithms intrusion detection :10.1.1.26.6055
genetic algorithms related approaches er attractive alternative exhaustive search infeasible cases due computational complexity :10.1.1.26.6055:10.1.1.46.2976
size search space depends features reducing feature set exclude irrelevant features reduces size search space reduces learning ort 
number examples required learn classi cation function depends number features :10.1.1.26.6055:10.1.1.46.2976
features require examples learn classi cation function desired accuracy 
feature subset selection result lower cost classi cation cost obtaining feature values measurement simply computation overhead processing features 
background natural consider feature subset selection possible means improving performance machine learning algorithms intrusion detection :10.1.1.26.6055
genetic algorithms related approaches er attractive alternative exhaustive search infeasible cases due computational complexity :10.1.1.26.6055:10.1.1.46.2976
advantage commonly heuristic search algorithms rely monotonicity assumption addition features classi cation accuracy violated practice 
genetic algorithm feature subset selection starts randomly generated population individuals individual corresponds candidate feature subset 
individual encoded string 
number examples required learn classi cation function depends number features :10.1.1.26.6055:10.1.1.46.2976
features require examples learn classi cation function desired accuracy 
feature subset selection result lower cost classi cation cost obtaining feature values measurement simply computation overhead processing features 
background natural consider feature subset selection possible means improving performance machine learning algorithms intrusion detection :10.1.1.26.6055
genetic algorithms related approaches er attractive alternative exhaustive search infeasible cases due computational complexity :10.1.1.26.6055:10.1.1.46.2976
advantage commonly heuristic search algorithms rely monotonicity assumption addition features classi cation accuracy violated practice 
genetic algorithm feature subset selection starts randomly generated population individuals individual corresponds candidate feature subset 
individual encoded string 
number bits string equal total number features 
learned rule set applied test examples determined accuracy returned feature subset selection routine 
tness individual calculated accuracy learned hypothesis accuracy number attributes cost learning complexity learned hypothesis complexity weights accuracy cost complexity parameter fitness accuracy accuracy cost cost complexity complexity tness rank individuals selection 
methods computing tness possible discussed yang 
primary goal feature subset selection intrusion detection problem improve accuracy 
high percentage intrusion detection alerts reported current intrusion detection systems false trial training accuracy best individual attributes best individual table feature subset selection results constant parameters alarms :10.1.1.46.2976
system needs highly reliable keep false alarms minimum 
secondary goal reduce amount data obtained running processes classi ed 
reduce overhead intrusion detection approach monitored system 
feature subset selection results genetic algorithm standard mutation crossover operators probability mutation probability crossover rank selection :10.1.1.26.6055
high percentage intrusion detection alerts reported current intrusion detection systems false trial training accuracy best individual attributes best individual table feature subset selection results constant parameters alarms :10.1.1.46.2976
system needs highly reliable keep false alarms minimum 
secondary goal reduce amount data obtained running processes classi ed 
reduce overhead intrusion detection approach monitored system 
feature subset selection results genetic algorithm standard mutation crossover operators probability mutation probability crossover rank selection :10.1.1.26.6055
probability selecting best individual 
population size run went generations 
started training data previous feature vector experiment feature vectors 
added additional copy unique feature vector training data feature vectors ensure rare potentially important cases reasonable probability sampled training testing phases :10.1.1.46.2976
feature subset selection results genetic algorithm standard mutation crossover operators probability mutation probability crossover rank selection :10.1.1.26.6055
probability selecting best individual 
population size run went generations 
started training data previous feature vector experiment feature vectors 
added additional copy unique feature vector training data feature vectors ensure rare potentially important cases reasonable probability sampled training testing phases :10.1.1.46.2976
gave total feature vectors input genetic algorithm :10.1.1.46.2976
show general ectiveness genetic feature selection problem table shows results separate runs genetic algorithm ripper identical parameters run 
number attributes signi cantly reduced accuracy maintained 
table shows results rules best individuals genetic feature selection runs compares results original results learned features 
probability selecting best individual 
population size run went generations 
started training data previous feature vector experiment feature vectors 
added additional copy unique feature vector training data feature vectors ensure rare potentially important cases reasonable probability sampled training testing phases :10.1.1.46.2976
gave total feature vectors input genetic algorithm :10.1.1.46.2976
show general ectiveness genetic feature selection problem table shows results separate runs genetic algorithm ripper identical parameters run 
number attributes signi cantly reduced accuracy maintained 
table shows results rules best individuals genetic feature selection runs compares results original results learned features 
traces normal sendmail intrusions 
analysis comparison ectiveness ripper problem di erent data representations genetic feature selection algorithm follows 
table illustrates advantages feature vector representation system call windows learning problem 
feature vector representation allows learning algorithm learn hypothesis faster comparable accuracy normal test data complexity hypothesis smaller 
genetic feature selection feature vectors time consuming improves learned hypothesis reduces set attributes learning 
rules learned ripper example set rules learned rst trial ripper genetic feature subset selection shown trace attributes trial trial trial trial trial decode decode fwd loops fwd loops fwd loops fwd loops fwd loops recursive sm sm local local remote remote normal sendmail table results rules learned genetic feature selection measure sequence windows feature vectors genetic algorithm feature selection learning ort moderate minutes minute intensive approx :10.1.1.46.2976
hours accuracy learned hypothesis false positive false positive false positive complexity learned hypothesis poor avg 
rules rules tests avg :10.1.1.46.2976
rules tests number attributes system calls window avg :10.1.1.46.2976
classi cation ort moderate large rule set small trivial rule set smaller trivial rule set fewer features table ectiveness di erent learning techniques bad set contains individual rules composed tests correspond pseudocode close close open seen write close rename seen seen close close link socket seen accept wait wait wait wait accept fork seen accept fork close seen close open seen accept wait wait accept close seen bad rule sets genetic algorithm trials contains rules rule sets :10.1.1.46.2976
feature vector representation allows learning algorithm learn hypothesis faster comparable accuracy normal test data complexity hypothesis smaller 
genetic feature selection feature vectors time consuming improves learned hypothesis reduces set attributes learning 
rules learned ripper example set rules learned rst trial ripper genetic feature subset selection shown trace attributes trial trial trial trial trial decode decode fwd loops fwd loops fwd loops fwd loops fwd loops recursive sm sm local local remote remote normal sendmail table results rules learned genetic feature selection measure sequence windows feature vectors genetic algorithm feature selection learning ort moderate minutes minute intensive approx :10.1.1.46.2976
hours accuracy learned hypothesis false positive false positive false positive complexity learned hypothesis poor avg 
rules rules tests avg :10.1.1.46.2976
rules tests number attributes system calls window avg :10.1.1.46.2976
classi cation ort moderate large rule set small trivial rule set smaller trivial rule set fewer features table ectiveness di erent learning techniques bad set contains individual rules composed tests correspond pseudocode close close open seen write close rename seen seen close close link socket seen accept wait wait wait wait accept fork seen accept fork close seen close open seen accept wait wait accept close seen bad rule sets genetic algorithm trials contains rules rule sets :10.1.1.46.2976
third fourth trials contain unique rules runs contain majority rules duplicated rule sets 
similarities rules runs indicates strength particular sequences identifying normal behavior 
genetic feature selection feature vectors time consuming improves learned hypothesis reduces set attributes learning 
rules learned ripper example set rules learned rst trial ripper genetic feature subset selection shown trace attributes trial trial trial trial trial decode decode fwd loops fwd loops fwd loops fwd loops fwd loops recursive sm sm local local remote remote normal sendmail table results rules learned genetic feature selection measure sequence windows feature vectors genetic algorithm feature selection learning ort moderate minutes minute intensive approx :10.1.1.46.2976
hours accuracy learned hypothesis false positive false positive false positive complexity learned hypothesis poor avg 
rules rules tests avg :10.1.1.46.2976
rules tests number attributes system calls window avg :10.1.1.46.2976
classi cation ort moderate large rule set small trivial rule set smaller trivial rule set fewer features table ectiveness di erent learning techniques bad set contains individual rules composed tests correspond pseudocode close close open seen write close rename seen seen close close link socket seen accept wait wait wait wait accept fork seen accept fork close seen close open seen accept wait wait accept close seen bad rule sets genetic algorithm trials contains rules rule sets :10.1.1.46.2976
third fourth trials contain unique rules runs contain majority rules duplicated rule sets 
similarities rules runs indicates strength particular sequences identifying normal behavior 
rule sets identify normal processes consider abnormal rules identi es particular abnormal system call sequences 
rules learned ripper example set rules learned rst trial ripper genetic feature subset selection shown trace attributes trial trial trial trial trial decode decode fwd loops fwd loops fwd loops fwd loops fwd loops recursive sm sm local local remote remote normal sendmail table results rules learned genetic feature selection measure sequence windows feature vectors genetic algorithm feature selection learning ort moderate minutes minute intensive approx :10.1.1.46.2976
hours accuracy learned hypothesis false positive false positive false positive complexity learned hypothesis poor avg 
rules rules tests avg :10.1.1.46.2976
rules tests number attributes system calls window avg :10.1.1.46.2976
classi cation ort moderate large rule set small trivial rule set smaller trivial rule set fewer features table ectiveness di erent learning techniques bad set contains individual rules composed tests correspond pseudocode close close open seen write close rename seen seen close close link socket seen accept wait wait wait wait accept fork seen accept fork close seen close open seen accept wait wait accept close seen bad rule sets genetic algorithm trials contains rules rule sets :10.1.1.46.2976
third fourth trials contain unique rules runs contain majority rules duplicated rule sets 
similarities rules runs indicates strength particular sequences identifying normal behavior 
rule sets identify normal processes consider abnormal rules identi es particular abnormal system call sequences 
consequently rules identify system call sequences directly signal intrusion 
investigated classi cation system call traces intrusion detection technique describing process feature vector 
feature vector representation ripper learned small concise set rules successful classifying intrusions 
comparison techniques feature vector representation depend thresholds separate normal anomalous 
concerned establishing arbitrary threshold di cult require tuning practice balance false alarms false positives missed intrusions false negatives 
rule sets learned feature vector representation order magnitude simpler obtained approaches reported literature :10.1.1.26.6055:10.1.1.134.4855:10.1.1.134.4855
especially noteworthy fact experiments question rule learning algorithm 
conjecture feature vector representation experiments primarily responsible di erences rule sets learned 
feature vectors information entire execution process compared ne grained detail individual sequences 
scope information contained feature vectors may easier learning algorithms learn simple rules 
especially noteworthy fact experiments question rule learning algorithm 
conjecture feature vector representation experiments primarily responsible di erences rule sets learned 
feature vectors information entire execution process compared ne grained detail individual sequences 
scope information contained feature vectors may easier learning algorithms learn simple rules 
shown feature subset selection reduced number features data resulted data ort required training due smaller search space :10.1.1.46.2976
feature selection gave equivalent accuracy smaller set features 
integrated learned rules mobile agent running distributed system consisting pentium ii systems running freebsd 
laboratory network connected department computer science network may operate intrusion detection system controlled environment 
operation ids voyager server started host monitored distributed system 
fortunately rule sets discovered ripper small mobile agents ought able carry multiple rule sets overly heavy 
issue technique applied real time 
feature subset selection computationally expensive training re ning agent done real time 
agent trained technique determine process intruder process nished provides near real time detection 
lee techniques allow anomaly detection real time execution process :10.1.1.39.640:10.1.1.134.4855:10.1.1.46.2976:10.1.1.46.2976
technique re ned determine likelihood process intrusive process execution giving real time detection 
re nement necessary long lived daemons servers 
know technique applies privileged programs sendmail 
worked distinct privileged programs identi ed cases di erent thresholds di erent algorithms worked better di erent programs :10.1.1.39.640:10.1.1.46.2976:10.1.1.46.2976
lee techniques allow anomaly detection real time execution process :10.1.1.39.640:10.1.1.134.4855:10.1.1.46.2976:10.1.1.46.2976
technique re ned determine likelihood process intrusive process execution giving real time detection 
re nement necessary long lived daemons servers 
know technique applies privileged programs sendmail 
worked distinct privileged programs identi ed cases di erent thresholds di erent algorithms worked better di erent programs :10.1.1.39.640:10.1.1.46.2976:10.1.1.46.2976
expect technique successful programs just sendmail 
progress intrusion detection aimed integration data driven knowledge discovery agents distributed knowledge network monitoring protection distributed computing systems information infrastructures 
investigation machine learning approaches discover patterns coordinated intrusions system individual intrusions spread space time particular interest context 
supported department defense 
progress intrusion detection aimed integration data driven knowledge discovery agents distributed knowledge network monitoring protection distributed computing systems information infrastructures 
investigation machine learning approaches discover patterns coordinated intrusions system individual intrusions spread space time particular interest context 
supported department defense 
computer immune system project university new mexico computer science department sendmail system call data 
jai jose garcia fernandez david spa ord diego :10.1.1.26.6055
architecture intrusion detection autonomous agents 
technical report coast tr purdue university department computer sciences 
bradshaw editor :10.1.1.39.640:10.1.1.46.2976
software agents 
computer immune system project university new mexico computer science department sendmail system call data 
jai jose garcia fernandez david spa ord diego :10.1.1.26.6055
architecture intrusion detection autonomous agents 
technical report coast tr purdue university department computer sciences 
bradshaw editor :10.1.1.39.640:10.1.1.46.2976
software agents 
mit press cambridge ma 
peter pablo rolf stadler alessandro 
discovering data mining concept implementation 
discovering data mining concept implementation 
prentice hall ptr upper saddle river nj 
william cohen 
fast ective rule induction 
proceedings th international conference machine learning lake tahoe ca :10.1.1.46.2976
morgan kaufmann 
denning 
intrusion detection model 
ieee transactions software engineering se february :10.1.1.46.2976
proceedings th international conference machine learning lake tahoe ca :10.1.1.46.2976
morgan kaufmann 
denning 
intrusion detection model 
ieee transactions software engineering se february :10.1.1.46.2976
rich cli kahn phil porras dan stuart staniford chen brian 
common intrusion speci cation language 
online 
www isi edu projects crisis current txt 
computer 
communications acm october 
stephanie forrest steven hofmeyr anil thomas 
sense self unix processes 
proceedings ieee symposium security privacy pages los alamitos ca :10.1.1.46.2976
ieee computer society press 
jeremy frank :10.1.1.26.6055
arti cial intelligence intrusion detection current directions 
proceedings th national computer security conference 
stephanie forrest steven hofmeyr anil thomas 
sense self unix processes 
proceedings ieee symposium security privacy pages los alamitos ca :10.1.1.46.2976
ieee computer society press 
jeremy frank :10.1.1.26.6055
arti cial intelligence intrusion detection current directions 
proceedings th national computer security conference 
goldberg :10.1.1.26.6055
genetic algorithms search optimization machine learning 
ieee computer society press 
jeremy frank :10.1.1.26.6055
arti cial intelligence intrusion detection current directions 
proceedings th national computer security conference 
goldberg :10.1.1.26.6055
genetic algorithms search optimization machine learning 
addison wesley new york 
richard george arthur mark :10.1.1.26.6055:10.1.1.46.2976
architecture network level intrusion detection system 
proceedings th national computer security conference 
goldberg :10.1.1.26.6055
genetic algorithms search optimization machine learning 
addison wesley new york 
richard george arthur mark :10.1.1.26.6055:10.1.1.46.2976
architecture network level intrusion detection system 
technical report cs department computer science university new mexico august :10.1.1.46.2976
guy helmer wong vasant honavar les miller :10.1.1.26.6055
intelligent agents intrusion detection 
genetic algorithms search optimization machine learning 
addison wesley new york 
richard george arthur mark :10.1.1.26.6055:10.1.1.46.2976
architecture network level intrusion detection system 
technical report cs department computer science university new mexico august :10.1.1.46.2976
guy helmer wong vasant honavar les miller :10.1.1.26.6055
intelligent agents intrusion detection 
proceedings ieee information technology conference pages syracuse ny september :10.1.1.46.2976
vasant honavar les miller wong :10.1.1.26.6055
addison wesley new york 
richard george arthur mark :10.1.1.26.6055:10.1.1.46.2976
architecture network level intrusion detection system 
technical report cs department computer science university new mexico august :10.1.1.46.2976
guy helmer wong vasant honavar les miller :10.1.1.26.6055
intelligent agents intrusion detection 
proceedings ieee information technology conference pages syracuse ny september :10.1.1.46.2976
vasant honavar les miller wong :10.1.1.26.6055
distributed knowledge networks 
architecture network level intrusion detection system 
technical report cs department computer science university new mexico august :10.1.1.46.2976
guy helmer wong vasant honavar les miller :10.1.1.26.6055
intelligent agents intrusion detection 
proceedings ieee information technology conference pages syracuse ny september :10.1.1.46.2976
vasant honavar les miller wong :10.1.1.26.6055
distributed knowledge networks 
proceedings ieee information technology conference pages syracuse ny september 
john kohavi :10.1.1.26.6055
technical report cs department computer science university new mexico august :10.1.1.46.2976
guy helmer wong vasant honavar les miller :10.1.1.26.6055
intelligent agents intrusion detection 
proceedings ieee information technology conference pages syracuse ny september :10.1.1.46.2976
vasant honavar les miller wong :10.1.1.26.6055
distributed knowledge networks 
proceedings ieee information technology conference pages syracuse ny september 
john kohavi :10.1.1.26.6055
irrelevant features subset selection problem 
proceedings ieee information technology conference pages syracuse ny september :10.1.1.46.2976
vasant honavar les miller wong :10.1.1.26.6055
distributed knowledge networks 
proceedings ieee information technology conference pages syracuse ny september 
john kohavi :10.1.1.26.6055
irrelevant features subset selection problem 
proceedings th international conference machine learning pages new brunswick nj :10.1.1.46.2976
morgan kaufmann 
koza :10.1.1.26.6055
distributed knowledge networks 
proceedings ieee information technology conference pages syracuse ny september 
john kohavi :10.1.1.26.6055
irrelevant features subset selection problem 
proceedings th international conference machine learning pages new brunswick nj :10.1.1.46.2976
morgan kaufmann 
koza :10.1.1.26.6055
genetic programming 
mit press boston ma :10.1.1.46.2976
john kohavi :10.1.1.26.6055
irrelevant features subset selection problem 
proceedings th international conference machine learning pages new brunswick nj :10.1.1.46.2976
morgan kaufmann 
koza :10.1.1.26.6055
genetic programming 
mit press boston ma :10.1.1.46.2976
langley :10.1.1.26.6055
elements machine learning 
proceedings th international conference machine learning pages new brunswick nj :10.1.1.46.2976
morgan kaufmann 
koza :10.1.1.26.6055
genetic programming 
mit press boston ma :10.1.1.46.2976
langley :10.1.1.26.6055
elements machine learning 
morgan kaufmann palo alto ca 
lee stolfo :10.1.1.26.6055:10.1.1.134.4855:10.1.1.134.4855
morgan kaufmann 
koza :10.1.1.26.6055
genetic programming 
mit press boston ma :10.1.1.46.2976
langley :10.1.1.26.6055
elements machine learning 
morgan kaufmann palo alto ca 
lee stolfo :10.1.1.26.6055:10.1.1.134.4855:10.1.1.134.4855
data mining approaches intrusion detection 
mit press boston ma :10.1.1.46.2976
langley :10.1.1.26.6055
elements machine learning 
morgan kaufmann palo alto ca 
lee stolfo :10.1.1.26.6055:10.1.1.134.4855:10.1.1.134.4855
data mining approaches intrusion detection 
proceedings th usenix security symposium 
usenix 
liu hiroshi editors :10.1.1.26.6055
lee stolfo :10.1.1.26.6055:10.1.1.134.4855:10.1.1.134.4855
data mining approaches intrusion detection 
proceedings th usenix security symposium 
usenix 
liu hiroshi editors :10.1.1.26.6055
feature extraction construction selection data mining perspective 
kluwer academic publishers boston ma 
michalewicz :10.1.1.39.640:10.1.1.46.2976
genetic algorithms data structures evolution programs 
usenix 
liu hiroshi editors :10.1.1.26.6055
feature extraction construction selection data mining perspective 
kluwer academic publishers boston ma 
michalewicz :10.1.1.39.640:10.1.1.46.2976
genetic algorithms data structures evolution programs 
springer verlag new york third edition 
tom mitchell :10.1.1.39.640:10.1.1.46.2976
machine learning 
kluwer academic publishers boston ma 
michalewicz :10.1.1.39.640:10.1.1.46.2976
genetic algorithms data structures evolution programs 
springer verlag new york third edition 
tom mitchell :10.1.1.39.640:10.1.1.46.2976
machine learning 
mcgraw hill new york 
mukherjee todd karl levitt :10.1.1.39.640:10.1.1.46.2976
network intrusion detection 
springer verlag new york third edition 
tom mitchell :10.1.1.39.640:10.1.1.46.2976
machine learning 
mcgraw hill new york 
mukherjee todd karl levitt :10.1.1.39.640:10.1.1.46.2976
network intrusion detection 
ieee network may june :10.1.1.46.2976
nwana :10.1.1.39.640:10.1.1.100.7162:10.1.1.46.2976
software agents overview 
machine learning 
mcgraw hill new york 
mukherjee todd karl levitt :10.1.1.39.640:10.1.1.46.2976
network intrusion detection 
ieee network may june :10.1.1.46.2976
nwana :10.1.1.39.640:10.1.1.100.7162:10.1.1.46.2976
software agents overview 
knowledge engineering review october november :10.1.1.46.2976
objectspace dallas tx :10.1.1.39.640:10.1.1.46.2976
mcgraw hill new york 
mukherjee todd karl levitt :10.1.1.39.640:10.1.1.46.2976
network intrusion detection 
ieee network may june :10.1.1.46.2976
nwana :10.1.1.39.640:10.1.1.100.7162:10.1.1.46.2976
software agents overview 
knowledge engineering review october november :10.1.1.46.2976
objectspace dallas tx :10.1.1.39.640:10.1.1.46.2976
objectspace voyager core technology user guide 
network intrusion detection 
ieee network may june :10.1.1.46.2976
nwana :10.1.1.39.640:10.1.1.100.7162:10.1.1.46.2976
software agents overview 
knowledge engineering review october november :10.1.1.46.2976
objectspace dallas tx :10.1.1.39.640:10.1.1.46.2976
objectspace voyager core technology user guide 
version 
mark reilly :10.1.1.39.640:10.1.1.46.2976
ieee network may june :10.1.1.46.2976
nwana :10.1.1.39.640:10.1.1.100.7162:10.1.1.46.2976
software agents overview 
knowledge engineering review october november :10.1.1.46.2976
objectspace dallas tx :10.1.1.39.640:10.1.1.46.2976
objectspace voyager core technology user guide 
version 
mark reilly :10.1.1.39.640:10.1.1.46.2976
open infrastructure scalable intrusion detection 
knowledge engineering review october november :10.1.1.46.2976
objectspace dallas tx :10.1.1.39.640:10.1.1.46.2976
objectspace voyager core technology user guide 
version 
mark reilly :10.1.1.39.640:10.1.1.46.2976
open infrastructure scalable intrusion detection 
proceedings ieee information technology conference pages syracuse ny :10.1.1.46.2976
ieee press 
salton :10.1.1.39.640:10.1.1.46.2976
objectspace voyager core technology user guide 
version 
mark reilly :10.1.1.39.640:10.1.1.46.2976
open infrastructure scalable intrusion detection 
proceedings ieee information technology conference pages syracuse ny :10.1.1.46.2976
ieee press 
salton :10.1.1.39.640:10.1.1.46.2976
automated text processing 
prentice hall new york 
mark reilly :10.1.1.39.640:10.1.1.46.2976
open infrastructure scalable intrusion detection 
proceedings ieee information technology conference pages syracuse ny :10.1.1.46.2976
ieee press 
salton :10.1.1.39.640:10.1.1.46.2976
automated text processing 
prentice hall new york 
stolfo prodromidis lee fan chan :10.1.1.44.5728:10.1.1.39.640:10.1.1.46.2976
jam java agents meta learning distributed databases 
ieee press 
salton :10.1.1.39.640:10.1.1.46.2976
automated text processing 
prentice hall new york 
stolfo prodromidis lee fan chan :10.1.1.44.5728:10.1.1.39.640:10.1.1.46.2976
jam java agents meta learning distributed databases 
proceedings kdd workshop ai methods fraud risk management 
van :10.1.1.39.640:10.1.1.46.2976
online 
prentice hall new york 
stolfo prodromidis lee fan chan :10.1.1.44.5728:10.1.1.39.640:10.1.1.46.2976
jam java agents meta learning distributed databases 
proceedings kdd workshop ai methods fraud risk management 
van :10.1.1.39.640:10.1.1.46.2976
online 
ftp ftp cs vu nl pub 
stephanie forrest :10.1.1.39.640:10.1.1.46.2976:10.1.1.46.2976
detecting intrusions system calls alternative data models 
proceedings kdd workshop ai methods fraud risk management 
van :10.1.1.39.640:10.1.1.46.2976
online 
ftp ftp cs vu nl pub 
stephanie forrest :10.1.1.39.640:10.1.1.46.2976:10.1.1.46.2976
detecting intrusions system calls alternative data models 
proceedings ieee symposium security privacy 
ieee press 
yang vasant honavar 
