kea practical automatic keyphrase extraction ian witten gordon paynter eibe frank carl gutwin craig nevill manning dept computer science university waikato hamilton new zealand 
eibe cs waikato ac nz dept computer science university saskatchewan canada gutwin cs ca google new york ny usa google com keyphrases provide semantic metadata summarize characterize documents 
describes kea algorithm automatically extracting keyphrases text 
kea identifies candidate keyphrases lexical methods calculates feature values candidate uses machine learning algorithm predict candidates keyphrases 
machine learning scheme builds prediction model training documents known keyphrases uses model find keyphrases new documents 
large test corpus evaluate kea effectiveness terms author assigned keyphrases correctly identified 
system simple robust available gnu general public license gives instructions 
keyphrases provide brief summary document contents 
large document collections digital libraries widespread value summary information increases 
keywords keyphrases particularly useful interpreted individually independently 
information retrieval systems descriptions documents returned query basis search indexes way browsing collection document clustering technique 
addition keyphrases help users get feel content collection provide sensible entry points show queries extended facilitate document skimming visually document term subsume protocols secure atomic transaction execution electronic commerce neural multigrid gauge theories disordered systems proof nets garbage computations anonymity atomicity auction electronic commerce privacy atomicity auction customer electronic commerce intruder disordered systems gauge fields multigrid neural multigrid neural networks disordered gauge gauge fields interpolation kernels length scale cut elimination linear logic proof nets sharing graphs typed lambdacalculus cut cut elimination garbage proof net weakening real time merchant multigrid security protocol smooth transaction security third party transaction table titles author machine assigned keyphrases papers emphasizing important phrases offer powerful means measuring document similarity gutwin witten 
keyphrases usually chosen manually 
academic contexts authors assign keyphrases documents written 
professional indexers choose phrases predefined controlled vocabulary relevant domain hand 
great majority documents come keyphrases assigning manually tedious process requires knowledge subject matter 
automatic extraction techniques potentially great benefit 
fundamentally different approaches problem automatically generating keyphrases document keyphrase assignment keyphrase extraction 
machine learning methods require training purposes set documents keyphrases attached 
keyphrase assignment seeks select phrases controlled vocabulary best describe document 
training data associates set documents phrase vocabulary builds classifier phrase 
new document processed classifier assigned keyphrase model classifies positively dumais :10.1.1.161.6020
keyphrases assigned ones seen training data 
oder 
zur rung zur rung rung als auf 
eine analyse bei deutschen und mit dem multivariate regression nder und das problem einer integration nder table author machine assigned keyphrases abstracts german keyphrase extraction approach controlled vocabulary chooses keyphrases text 
employs lexical information retrieval techniques extract phrases document text characterize turney 
approach training data tune parameters extraction algorithm 
describes kea keyphrase extraction algorithm 
simple effective performs current state art frank :10.1.1.148.3598
uses na bayes machine learning algorithm training keyphrase extraction 
implementation available new zealand digital library project www nzdl org 
kea builds turney treat problem problem supervised learning examples 
previously heuristics extract keyphrases document krulwich methods neural networks munoz mutual information heuristic belew discover large list word phrases 
great deal related research generating extracting summary information text johnson kupiec general attempts extract complete sentences keywords keyphrases 
kea output illustrated table shows titles research articles sets keyphrases article 
set gives keyphrases assigned author determined automatically article full text 
phrases common sets italicized 
case author keyphrases automatically extracted keyphrases quite similar difficult guess phrases author kea addition choosing keyphrases chooses authors example gauge smooth especially garbage 
despite anomalies automatically extracted lists provide reasonable description papers 
case author specified keyphrases available kea choices valuable resource encountering articles time 
kea algorithm language independent stemmer stopword list depend language 
table shows example german language 
case documents abstracts papers german sociology journal 
list pair gives author keyphrases second gives kea phrases common stem italicized 
authors phrases single words relative lack multiword phases probably characteristic german languages compound words serve role phrases english 
example abstracts available full articles extracted keyphrases somewhat lower correspondence authors ones seen table 
goal kea provide useful metadata existed 
evaluate kea performance comparing author keyphrases expect equal 
extract reasonable summaries text documents give valuable tool designers users digital libraries 
remainder describes kea 
section details design algorithm 
give example prediction model generated kea show assess candidate keyphrase 
report experiments designed test kea effectiveness explore effects varying parameters extraction process 
appendix describes download run kea system 
kea algorithm kea extraction algorithm stages 
training create model identifying keyphrases training documents author keyphrases known 

extraction choose keyphrases new document model 
process outlined 
stages choose set candidate phrases input documents calculate values certain attributes called features candidate 
describe steps outline training extraction stages detail 
candidate phrases kea chooses candidate phrases steps 
cleans input text identifies candidates stems case folds phrases 
input cleaning ascii input files filtered regularize text determine initial phrase boundaries 
input stream split tokens sequences letters digits internal periods modifications punctuation marks brackets numbers replaced phrase boundaries removed hyphenated words split remaining non token characters deleted tokens contain letters 
result set lines sequence tokens containing letter 
acronyms containing periods retained single tokens 
phrase identification kea considers subsequences line determines suitable candidate phrases 
investigated methods determining suitability looking noun phrases rules simple effective 
candidate phrases limited certain maximum length usually words 
training training documents candidate phrase identification re calculation learning model global corpus candidate phrase identification phrase document cy calculation df extraction test documents candidate phrase identification re generation keyword ranking training extraction processes 
candidate phrases proper names single words appear initial capital 

candidate phrases stopword 
stopword list contains words syntactic classes conjunctions articles particles prepositions pronouns anomalous verbs adjectives adverbs 
classes words listed line dictionary added list 
adjectives adverbs introduced subclasses words subclasses added overlapped common words brown corpus kucera francis 
furthermore added frequently occurring words subclasses 
contiguous sequences words input line tested rules yielding set candidate phrases 
note subphrases candidates 
example line reads programming demonstration method generate programming demonstration method programming demonstration demonstration method programming demonstration method candidate phrases stopword list 
case folding stemming final step determining candidate phrases case fold words stem iterated lovins method 
involves classic lovins stemmer discard suffix repeating process stem remains change 
example phrase cut elimination cut elim 
stemming case folding allow treat different variations phrase thing 
example proof net proof nets essentially stemming treated different phrases 
addition stemmed versions compare kea output author keyphrases 
consider author specified keyphrase successfully identified stemmed machine generated keyphrase stemmed 
table phrases cut elimination cut elimination proof nets proof net considered equivalent 
retain unstemmed words phrase original capitalization presentation user case phrase turn keyphrase 
different occur frequent version chosen 
feature calculation features calculated candidate phrase training extraction 
tf idf measure phrase frequency document compared rarity general occurrence distance document phrase appearance 
tf idf feature compares frequency phrase particular document frequency phrase general 
general usage represented document frequency number documents containing phrase large corpus 
phrase document frequency indicates common rarer phrases keyphrases 
kea builds document frequency file purpose corpus documents 
stemmed candidate phrases generated documents corpus method described 
document frequency file stores phrase count number documents appears 
german stemmer described 
file hand tf idf phrase document tf idf freq size log df 
freq number times occurs 
size number words 
df number documents containing global corpus 
size global corpus 
second term equation log probability phrase appears document corpus negated probability 
document part global corpus df incremented term evaluated simulate appearance corpus 
occurrence second feature occurrence calculated number words precede phrase appearance divided number words document 
result number represents document precedes phrase appearance 
discretization features real numbers convert nominal data machine learning scheme 
training process discretization table feature derived training data 
table gives set numeric ranges feature values replaced range value falls 
discretization accomplished supervised discretization method described fayyad irani 
training building model training stage uses set training documents author keyphrases known 
training document candidate phrases identified feature values calculated described 
reduce size training set discard phrase occurs document 
phrase marked keyphrase actual keyphrases document 
binary feature class feature machine learning scheme 
scheme generates model predicts class values features 
experimented number different machine learning schemes kea uses na bayes technique domingos pazzani simple yields results 
scheme learns sets numeric weights discretized feature values set applying positive keyphrase examples negative keyphrase instances 
example model described section 
extraction new keyphrases select keyphrases new document kea determines candidate phrases feature values applies model built training 
model determines probability candidate keyphrase post processing operation selects best set keyphrases 
na bayes model candidate phrase feature values tf idf distance quantities computed ptf idf similar expression number positive instances training files author identified keyphrases number negative instances candidate phrases keyphrases 
laplace estimator avoid zero probabilities 
simply replaces probability candidate phrase keyphrase calculated candidate phrases ranked value post process steps carried 
tf idf pre discretized form tie breaker phrases equal probability common discretization 
second remove list phrase subphrase higher ranking phrase 
remaining ranked list phrases returned number keyphrases requested 
discretization table feature discretization ranges tf idf distance class probabilities feature values discretization ranges tf idf tf idf tf idf distance distance distance prior probabilities class training instances prior probability table particular learned model keyphrase identification keyphrase extraction example illustrate na bayes modeling method exhibit model keyphrase extraction learned experiment show application particular phrase 
sample model table shows model 
training set tf idf discretized fixed levels occurrence levels 
discretization boundaries top table 
discretization feature weights positive examples negative ones 
example ptf idf proportion positive examples discretized tf idf value 
values learned weights shown middle table 
final component learned model number positive negative instances training set shown bottom table 
determine prior probability candidate phrase keyphrase absence information 
application model example keyphrase assignment phrase cut elimination stem cut elim appears times third table 
size words phrase appears word 
documents global corpus cut elim appears just global corpus counts incremented 
gives cut elim feature values tf idf distance 
discretization 
posteriori likelihoods phrase classes calculated equation probability keyphrase calculated equation 
fifth candidate phrase probability ordered list returned keyphrase provided requested 
individual words cut elim candidate phrases 
cut probability cut elimination ranked higher tf idf value greater appear keyphrase 
hand elim chosen keyphrase matter sought probability lower 
evaluation carried empirical evaluation kea documents new zealand digital library 
goals assess kea effectiveness investigate effects varying parameters extraction process 
measured keyphrase quality counting number matches kea output keyphrases originally chosen document author 
sections outline experimental methodology report results 
methodology procedure kea evaluated computer science technical reports cstr collection nzdl 
documents corpus chose author supplied keyphrases 
randomly chose test set documents leaving pool select training documents 
large test set reduces measurement error results closely approximate expected values particular document 
set documents chosen random remainder cstr global corpus build document frequency file 
carried experiments determine kea effectiveness effect changing size source global corpus effect changing number training documents kea performance abstracts full text results experiments describe quality measures discuss advantages disadvantages author specified keyphrases standard 
measures assess kea effectiveness counting keyphrases chosen document author fixed number keyphrases extracted 
measure common information retrieval metrics precision recall reasons 
single value easily interpreted values 
second precision recall misleading easy maximize precision expense recall returning single promising candidate phrase recall expense precision returning candidates 
third measure fits expected behaviour users ask certain number keyphrases document 
required precision calculated dividing measure number phrases retrieved 
chose measure kea choices document author reasons method evaluation simple carried automatically allows comparison different extraction schemes 
disadvantages author keyphrases standard primarily authors choose keyphrases best describe content 
authors choose phrases slant certain way maximize chance noticed particular searchers 
keyphrases chosen just document finalized 
argue authors case poorly qualified choose phrases describe 
problem raises issues 
variance author choices difficult automatic extraction scheme perform 
second kea incorrect choices match author choice necessarily poor keyphrases 
revealing approach human judges independently assess quality kea phrases original author choices jones paynter 
number correct keyphrases assigned author appearing text appearing candidate phrases assigned kea number phrases output performance keyphrases average matches extracted author keyphrases table performance results effectiveness experiment assessed kea effectiveness extracting keyphrases test document 
experiment training documents standard document test set global corpus documents 
selected results shown table illustrated 
lowest line shows average number correct identifications 
upper lines show limits possible performance 
shows keyphrases author assigned clearly possible algorithm better measure success 
asymptote shows test set average author assigned keyphrases document 
second line top indicates number keyphrases appear document text 
method keyphrase extraction opposed assignment possibly identify keyphrases appear text 
third gives number keyphrases appearing candidate phrases see section 
illustrates kea loses ground 
difference middle lines represents keyphrases selected candidate selection process 
number correct keyphrases phrases output phrases output number documents document frequency file effect number documents calculating tf idf number correct keyphrases phrases output phrases output number training documents performance number training files difference bottom lines represents better machine learning scheme conceivably finding authors keyphrases candidates 
error bars lowest line small barely visible represent variance due choice training documents 
considers population training sets size chance population mean lies error bar 
training sets documents represents realistic situation documents available known keyphrases 
results training set differ sure accurately portrays expected result different training sets 
effect size source global corpus carried series tests determine size source global corpus affect performance 
described section global corpus build document frequency file tf idf calculations 
interested corpus size larger global corpus closely approximate phrase true frequency general 
interested source global corpus documents particular similarity documents test documents affect performance 
test effect source built different global corpuses independent set similar documents training set training test sets test set set documents containing different kind material 
trials global corpus significantly outperformed 
number correct keyphrases assigned author appearing text appearing candidate phrases assigned kea documents corpus number keyphrases number correct keyphrases number phrases extracted average matches extracted average matches extracted 
table effect varying global corpus size test effect global corpus size tested kea corpuses different sizes 
trials training set documents standard document test set 
global corpuses formed randomly cstr documents author assigned keyphrases 
shown table little gained increasing size global corpus documents documents improvement 
document frequency file crucial results performance drops dramatically 
plots number keyphrases matched size global corpus 
error bars give confidence intervals number correct keyphrases extracted test document particular training set 
training documents average matches extracted average matches extracted table effect varying training set size document length average matches extracted average matches extracted full text abstracts table effect varying document length effect training set size third experiment investigated number training documents keyphrases identified affects performance 
interested practical problem training documents necessary results 
experiment standard global corpus cstr documents standard test set 
varied size training set documents tested kea performance set 
results table show performance improves steadily training set documents smaller gains training set holds documents 
plots number correctly identified keyphrases phrases extracted number documents training 
error bars show confidence limits 
results indicate extraction performance relatively small set training documents 
real world situation collection keyphrases processed human experts need read assign keyphrases documents order extract keyphrases rest collection 
effect document length final experiment considered kea performance suffers uses abstracts documents extract keyphrases compares performance full text 
experiment standard training testing global corpus sets documents ignored leaving training documents testing documents 
table shows number correct keyphrases extracted short full documents 
expected kea extracts fewer keyphrases abstracts full document text 
plots curves short document trial 
solid lines top bottom indicate number keyphrases assigned author number appearing shortened document number appear candidate list number correctly identified kea 
dashed line number correct keyphrases identified full document text 
main reason reduced performance abstracts surprisingly far fewer author keyphrases appear entire document 
described evaluated algorithm automatically extracting keyphrases text 
results show kea average match keyphrases chosen average author collection 
consider performance 
kea finds half author phrases choose thousands candidates highly human select set phrases original author 
kea performance sufficient applications designed providing support summarizing browsing searching clustering cases manual keyphrase assignment infeasible 
greatly assist designers users large document collections 
acknowledgments peter turney sharing datasets discoveries experiences 
rau 
automatic condensation electronic publications sentence selection information processing management 

fast simple stemming algorithm german words technical report center systeme freie universit berlin 
domingos pazzani 
optimality simple bayesian classifier zero loss machine learning 
dumais platt heckerman sahami 

inductive learning algorithms representations text categorization proceedings acm cik international conference information knowledge management pp fayyad irani 
multi interval discretization continuous valued attributes classification learning proc ijcai 
frank paynter witten gutwin nevill manning 
domainspecific keyphrase extraction proc 
sixteenth international joint conference artificial intelligence morgan kaufmann publishers san francisco ca pp 

gutwin paynter witten nevill manning frank 
improving browsing digital libraries keyphrase indexes decision support systems vol 
nov pp 

johnson paice black neal 
application linguistic processing automatic generation documentation text management 
jones paynter 
automatic extraction document keyphrases digital libraries evaluation applications 
journal american society information science technology jasist 
krulwich 
learning user information interests extraction semantically significant phrases aaai spring symposium machine learning information access stanford ca march 
kucera francis 
computational analysis day american english 
brown university press providence 
kupiec pedersen chen 
trainable document summarizer proc sigir acm press 
lovins 
development stemming algorithm mechanical translation computational linguistics 
munoz 
compound key word generation document databases hierarchical clustering art model intelligent data analysis 
belew 
exporting phrases statistical analysis topical language proc symposium document analysis information retrieval 
turney 
learning algorithms keyphrase extraction information retrieval 
witten 
browsing digital library proc 
australasian computer science conference auckland new zealand 
witten frank 
data mining practical machine learning tools techniques java implementations 
morgan kaufmann san francisco 
appendix kea latest version kea kea java implementation basically follows ideas 
differs slightly version described pre processing step candidate keyphrases generated 
global frequencies training data separate corpus 
online documentation gives detailed information 
kea distributed gnu general public license downloaded www nzdl org kea 
includes cut version weka witten frank widely machine learning workbench full form available www cs waikato ac nz ml weka gnu general public license 
installation install kea download archive file jar utility included standard java distribution expand 
creates directory called kea 
kea implemented set java classes 
run tell java virtual machine look classes 
way doing add kea directory containing kea code classpath environment variable java virtual machine 
linux set kea 
add classpath environment variable 
line documentation generated automatically source code located directory called doc 
documentation handy bookmark doc packages html web browser 
getting started building keyphrase extraction model extract keyphrases new documents build keyphrase extraction model set documents author assigned keyphrases 
preferably documents domain intend extract keyphrases 
create directory containing documents train kea 
option meaning rename document files directory suffix txt 
delete author assigned keyphrases documents put separate key files 
example document file called doc txt move keyphrases new file called doc key 
keyphrase separate line 
build keyphrase extraction model running java name directory name model uses documents name directory build keyphrase extraction model saves name model 
options shown table run arguments see list 
directory name specifies name directory model name specifies name model encoding specifies encoding turns debugging mode keyphrase frequency statistic disallow internal periods length sets maximum phrase length default length sets minimum phrase length default number minimum number times phrase needs occur default name stopwords class list stopwords default name stemmer class stemmer default check proper nouns table options option meaning directory name specifies name directory model name specifies name model encoding specifies encoding specifies number phrases output default turns debugging mode write stemmed phrase score key file table options option specifies different character encoding supported java 
example extract keyphrases chinese documents encoded specify 
option generates output shows progress model builder 
set keyphrase frequency attribute model frank :10.1.1.148.3598
improve accuracy training test documents come domain 
example extract keyphrases papers radiology training documents radiology option 
set kea consider phrases internal periods candidate keyphrases 
important full followed white space documents 
options allow kea adapted different languages changing list stopwords stemmer policy capitalized words keywords 
extracting keyphrases extract keyphrases place documents empty directory rename suffix txt 
previously built keyphrase extraction model applied new documents java name directory name model document directory creates key file containing extracted keyphrases 
existing key files overwritten 
keyphrases file evaluate extraction model 
compares stemmed extracted phrases stemmed versions phrases key file reports number hits total number extracted phrases documents associated key files 
table shows options 
get results input text kea clean possible 
example html tags input documents deleted model built keyphrases extracted new documents 
examples kea archive file contains small example collections split train test directories 
note collections included show system applied actual documents 
due lack data accuracy low examples 
collection collection abstracts computer science technical reports 
build model training data java cstr abstracts train cstr abstracts model evaluate model test data java cstr abstracts test cstr abstracts model collection small collection chinese documents encoding 
build model training data java chinese train chinese model evaluate model test data java chinese test chinese model 
