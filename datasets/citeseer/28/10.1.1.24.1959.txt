description logics information integration diego calvanese giuseppe de giacomo maurizio lenzerini dipartimento di informatica sistemistica universit di roma la sapienza salaria roma italy lastname dis uniroma www dis uniroma lastname 
information integration problem combining data residing di erent heterogeneous sources providing user uni ed view data called mediated schema 
mediated schema reconciled view information queried user 
task system free user knowledge data data structured sources 
chapter discuss data integration general describe logic approach data integration 
logic description logics family model information managed integration system formulate queries posed system perform types automated reasoning supporting modeling query answering process 
clear approach favors extensibility integration system provides appropriate setting maintenance 
example adding new source system requires provide de nition source necessarily involve changes mediated schema 
contrary global view approach adding new source typically requires changing de nition concepts mediated schema 
reason rest adopt local view approach 
comparison approaches reported :10.1.1.127.3070
problem refers fact local view global view approach may happen source presents limitations types accesses supports 
typical example web source accessible form elds necessarily lled user 
situation modeled specifying source relation supporting queries selection column 
suitable notations proposed situations consequences access limitations query processing integration systems investigated papers :10.1.1.49.3156
comparison approaches reported :10.1.1.127.3070
problem refers fact local view global view approach may happen source presents limitations types accesses supports 
typical example web source accessible form elds necessarily lled user 
situation modeled specifying source relation supporting queries selection column 
suitable notations proposed situations consequences access limitations query processing integration systems investigated papers :10.1.1.49.3156
problem deals criterion take account design data integration system 
particular respect data explicitely managed system follow di erent approaches called materialized virtual 
materialized approach system computes extensions concepts mediated schema replicating data sources 
virtual approach data residing sources accessed query processing replicated integration system 
reformulation process crucial step deciding decompose query mediated schema set subqueries sources meaning sources terms concepts mediated schema 
computed subqueries shipped sources results assembled nal answer 
rest concentrate problem query processing data integration system speci ed means local view approach contributions rst provide logical formalization problem 
particular illustrate general architecture data integration system comprising mediated schema set views query 
query processing setting formally de ned problem answering queries views compute answer query basis extension set views :10.1.1.51.3293:10.1.1.54.9534:10.1.1.54.9534
observe data integration problem relevant elds including data warehousing query optimization supporting physical data independence instantiate general framework case schemas views queries expressed making particular logical language :10.1.1.54.9534
particular mediated schema expressed terms knowledge base constituted general inclusion assertions membership assertions formulated expressive description logic :10.1.1.25.3065
queries views expressed non recursive datalog programs predicates body concepts relations appear knowledge base 
view speci ed provided extension sound complete exact respect view de nition :10.1.1.54.9534:10.1.1.54.9534:10.1.1.177.1647
computed subqueries shipped sources results assembled nal answer 
rest concentrate problem query processing data integration system speci ed means local view approach contributions rst provide logical formalization problem 
particular illustrate general architecture data integration system comprising mediated schema set views query 
query processing setting formally de ned problem answering queries views compute answer query basis extension set views :10.1.1.51.3293:10.1.1.54.9534:10.1.1.54.9534
observe data integration problem relevant elds including data warehousing query optimization supporting physical data independence instantiate general framework case schemas views queries expressed making particular logical language :10.1.1.54.9534
particular mediated schema expressed terms knowledge base constituted general inclusion assertions membership assertions formulated expressive description logic :10.1.1.25.3065
queries views expressed non recursive datalog programs predicates body concepts relations appear knowledge base 
view speci ed provided extension sound complete exact respect view de nition :10.1.1.54.9534:10.1.1.54.9534:10.1.1.177.1647
assumptions data integration meaning 
rest concentrate problem query processing data integration system speci ed means local view approach contributions rst provide logical formalization problem 
particular illustrate general architecture data integration system comprising mediated schema set views query 
query processing setting formally de ned problem answering queries views compute answer query basis extension set views :10.1.1.51.3293:10.1.1.54.9534:10.1.1.54.9534
observe data integration problem relevant elds including data warehousing query optimization supporting physical data independence instantiate general framework case schemas views queries expressed making particular logical language :10.1.1.54.9534
particular mediated schema expressed terms knowledge base constituted general inclusion assertions membership assertions formulated expressive description logic :10.1.1.25.3065
queries views expressed non recursive datalog programs predicates body concepts relations appear knowledge base 
view speci ed provided extension sound complete exact respect view de nition :10.1.1.54.9534:10.1.1.54.9534:10.1.1.177.1647
assumptions data integration meaning 
sound view corresponds information source known produce necessarily answers associated query 
query processing setting formally de ned problem answering queries views compute answer query basis extension set views :10.1.1.51.3293:10.1.1.54.9534:10.1.1.54.9534
observe data integration problem relevant elds including data warehousing query optimization supporting physical data independence instantiate general framework case schemas views queries expressed making particular logical language :10.1.1.54.9534
particular mediated schema expressed terms knowledge base constituted general inclusion assertions membership assertions formulated expressive description logic :10.1.1.25.3065
queries views expressed non recursive datalog programs predicates body concepts relations appear knowledge base 
view speci ed provided extension sound complete exact respect view de nition :10.1.1.54.9534:10.1.1.54.9534:10.1.1.177.1647
assumptions data integration meaning 
sound view corresponds information source known produce necessarily answers associated query 
complete view models source known produce answers associated query 
exact view known produce exactly answers associated query 
sources modeled terms set views fv vm mediated schema 
associated view de nition def terms query db expressed language lv alphabet arity determines arity view set ext tuples constants provides information extension content sources 
arity tuple speci cation assumption adopt view interpret content source ext respect actual set tuples db satisfy describe various possibilities consider 
query expressed language lq alphabet intended provide speci cation data extract virtual database represented integration system 
general query db database denote ans db set tuples db satisfy speci cation determines accurate knowledge pairs satisfying views accurate source respect speci cation def pointed papers assumptions relevant data integration system sound views :10.1.1.51.3293:10.1.1.54.9534:10.1.1.54.9534:10.1.1.54.9534:10.1.1.177.1647:10.1.1.177.1647
view sound denoted sound extension provides subset tuples satisfying corresponding de nition 
words fact tuple ext conclude satis es view fact tuple ext conclude satisfy view 
formally database db coherent sound view ext ans def db 
papers example di erent assumptions domain database taken account :10.1.1.54.9534
general query db database denote ans db set tuples db satisfy speci cation determines accurate knowledge pairs satisfying views accurate source respect speci cation def pointed papers assumptions relevant data integration system sound views :10.1.1.51.3293:10.1.1.54.9534:10.1.1.54.9534:10.1.1.54.9534:10.1.1.177.1647:10.1.1.177.1647
view sound denoted sound extension provides subset tuples satisfying corresponding de nition 
words fact tuple ext conclude satis es view fact tuple ext conclude satisfy view 
formally database db coherent sound view ext ans def db 
papers example di erent assumptions domain database taken account :10.1.1.54.9534
complete views 
view complete denoted complete extension provides superset tuples satisfying corresponding de nition 
words fact tuple ext conclude tuple satis es view 
hand fact tuple ext conclude tuple satisfy view 
precisely problem extracting information data integration system reduces problem answering queries views 
schema set views fv vm de nition def extension ext speci cation sound complete exact query arity tuple dn constants problem consists deciding ans deciding dn ans db db db satis es schema db coherent vm de nition easy see answering queries views essentially extended form reasoning presence incomplete information 
answer query basis views know extensions views provides partial information database 
query language may admit various forms incomplete information due union instance general possible databases coherent views 
example example :10.1.1.54.9534
example 
consider relational alphabet containing symbols binary predicate couple constants ann bill 
consider views female male respectively de nitions female couple male couple extensions ext female ext male assume constraints imposed schema 
views sound know couple ann female component bill male component 
views sound know couple ann female component bill male component 
query couple asking couples return empty answer ans 
views exact conclude couples ann female component bill male component ann bill couple ans ann bill 
specifying content data integration system propose architecture data integration coherent framework described section description logics 
architecture specify mediated schemas views queries description logic dlr :10.1.1.25.3065
rst introduce dlr illustrate logic specify components data integration system 
description logic dlr description logics dls introduced early attempt provide formal ground semantic networks frames 
evolved knowledge representation languages able capture virtually class representation formalisms arti cial intelligence software engineering databases 
distinguishing features logics detailed computational complexity analysis associated reasoning algorithms logical implication problem algorithms supposed solve 
evolved knowledge representation languages able capture virtually class representation formalisms arti cial intelligence software engineering databases 
distinguishing features logics detailed computational complexity analysis associated reasoning algorithms logical implication problem algorithms supposed solve 
virtue analysis logics optimal reasoning algorithms practical systems implementing algorithms projects 
dls domain interest modeled means concepts relations denote classes objects relationships respectively 
focus attention dl dlr :10.1.1.25.3065
basic elements dlr concepts unary relations ary relations 
assume deal alphabet constituted nite set atomic relations atomic concepts constants denoted respectively 
denote arbitrary relations arity nmax denote arbitrary concepts respectively built syntax denotes component relation integer nmax denotes arity relation integer nmax denotes nonnegative integer 
abbreviations see dl kr org home page description logics 
assigns constant element 
unique name assumption concept subset 
relation arity subset 
conditions satis ed 
observe constructor relations express di erence relations complement :10.1.1.25.3065:10.1.1.25.3065
mediated schema views queries remind reader mediated schema constituted nite set constraints expressed schema language ls setting schema language ls dl dlr 
particular constraint formulated assertion forms dlr relations arity dlr concepts 
said database db set relations predicate symbol alphabet denote db relation db corresponding predicate symbol atomic concept atomic relation 
note database seen interpretation dlr domain coincides set constants alphabet say database db satis es assertion resp db db resp db db 
query simply query expression de ned 
example 
consider example dlr schema expressing doctor relative surgeon doctor american relative doctor surgeon doctor sound views respectively de nitions relative surgeon american extensions ext ext query qw asking constant ans qw ann 
add exact view de nition extension ext containing bill constraints information views conclude bill american 
discussion observe dlr able capture great variety data models forms constraints :10.1.1.54.9534
example dlr capable capture formally conceptual data models typically databases model :10.1.1.54.9534
setting query answering views done constraints imposed conceptual data model 
interest dlr con ned expressiveness provides specifying data schemas 
equipped ective reasoning techniques sound complete respect semantics 
example 
consider example dlr schema expressing doctor relative surgeon doctor american relative doctor surgeon doctor sound views respectively de nitions relative surgeon american extensions ext ext query qw asking constant ans qw ann 
add exact view de nition extension ext containing bill constraints information views conclude bill american 
discussion observe dlr able capture great variety data models forms constraints :10.1.1.54.9534
example dlr capable capture formally conceptual data models typically databases model :10.1.1.54.9534
setting query answering views done constraints imposed conceptual data model 
interest dlr con ned expressiveness provides specifying data schemas 
equipped ective reasoning techniques sound complete respect semantics 
particular checking assertion logically follows set assertions dlr assuming numbers encoded unary query containment checking query contained model set assertions exptime hard solvable exptime :10.1.1.25.3065
example dlr capable capture formally conceptual data models typically databases model :10.1.1.54.9534
setting query answering views done constraints imposed conceptual data model 
interest dlr con ned expressiveness provides specifying data schemas 
equipped ective reasoning techniques sound complete respect semantics 
particular checking assertion logically follows set assertions dlr assuming numbers encoded unary query containment checking query contained model set assertions exptime hard solvable exptime :10.1.1.25.3065
query answering section study problem query answering views setting just de ned schema expressed dlr knowledge base queries view de nitions dlr query expressions 
call resulting problem answering query views dlr 
technical results regarding answering query views dlr illustrated section taken 
rst thing observe schema expressed dlr set views fv vm query tuple dn constants verifying ans essentially form logical implication 
speci cally atom concept term constant variable translated rei ed counterpart object name corresponding re exive transitive closure roles inverse roles introduced rei cation 
atom relation arity tuple terms translated conjunction concepts rei ed counterpart object name corresponding 
fn concept translations atoms combined 
translate universally quanti ed assertions corresponding complete views query sucient deal assertions form 
conj construct conj special graph called tuple graph re ects dependencies variables :10.1.1.25.3065
speci cally tuple graph detect cyclic dependencies 
general tuple graph composed connected components 
th connected component build ciq concept :10.1.1.25.3065
concept contains newly introduced concepts treat variables occur cycle tuple graph di erently outside cycles 
translate universally quanti ed assertions corresponding complete views query sucient deal assertions form 
conj construct conj special graph called tuple graph re ects dependencies variables :10.1.1.25.3065
speci cally tuple graph detect cyclic dependencies 
general tuple graph composed connected components 
th connected component build ciq concept :10.1.1.25.3065
concept contains newly introduced concepts treat variables occur cycle tuple graph di erently outside cycles 
resp denote variables resp occur cycle resp occur cycles 
rst de ne concept concept obtained 
follows variable resp concept resp replaced resp variable concept replaced 
particular verifying certain tuple belongs query gives rise line reasoning may depend tuple consideration may vary substantially tuple 
simple languages may avoid considering tuples individually shown query answering dl aln cyclic tbox assertions 
observe dl reasoning objects polynomial data expression complexity require sophisticated forms inference 
query answering views investigated years context simpli ed frameworks 
problem studied case conjunctive queries arithmetic comparisons disjunctive views queries aggregates recursive queries nonrecursive views variants regular path queries :10.1.1.54.9534:10.1.1.54.6954
comprehensive frameworks view query answering interesting results various query languages 
query answering views tightly related query rewriting :10.1.1.127.3070
particular studies rewriting conjunctive queries conjunctive views atoms dl concepts roles dl expressive dlr 
general rewriting query respect set views function extensions views returns set tuples contained answer set query respect views 
observe dl reasoning objects polynomial data expression complexity require sophisticated forms inference 
query answering views investigated years context simpli ed frameworks 
problem studied case conjunctive queries arithmetic comparisons disjunctive views queries aggregates recursive queries nonrecursive views variants regular path queries :10.1.1.54.9534:10.1.1.54.6954
comprehensive frameworks view query answering interesting results various query languages 
query answering views tightly related query rewriting :10.1.1.127.3070
particular studies rewriting conjunctive queries conjunctive views atoms dl concepts roles dl expressive dlr 
general rewriting query respect set views function extensions views returns set tuples contained answer set query respect views 
usually xes priori language express rewritings unions conjunctive queries looks best possible rewriting expressible language 
hand may call perfect rewriting returns exactly answer set query respect views independently language expressed 
particular studies rewriting conjunctive queries conjunctive views atoms dl concepts roles dl expressive dlr 
general rewriting query respect set views function extensions views returns set tuples contained answer set query respect views 
usually xes priori language express rewritings unions conjunctive queries looks best possible rewriting expressible language 
hand may call perfect rewriting returns exactly answer set query respect views independently language expressed 
algorithm answering queries views exists viewed perfect rewriting :10.1.1.54.9534
results show existence perfect maximal rewritings setting mediated schema views query expressed dlr 
illustrated logic framework data integration particular problem query answering views data integration system 
addressed problem case non recursive datalog queries posed mediated schema expressed dlr 
considered different assumptions view extensions sound complete exact technique solves problem exptime worst case computational complexity 
addressed problem case non recursive datalog queries posed mediated schema expressed dlr 
considered different assumptions view extensions sound complete exact technique solves problem exptime worst case computational complexity 
seen previous section algorithm answering queries views fact perfect rewriting 
setting remains open nd perfect rewritings expressed declarative query language 
interest nd maximal rewritings belonging behaved query languages particular languages polynomial data complexity know rewritings perfect :10.1.1.54.9534
acknowledgments partly supported esprit project dwq foundations data warehouse quality murst data integration 
wish members projects 
daniele nardi rosati moshe vardi contributed ideas illustrated chapter 

