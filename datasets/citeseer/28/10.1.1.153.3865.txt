progressive meshes hugues hoppe microsoft research highly detailed geometric models rapidly commonplace computer graphics 
models represented complex triangle meshes challenge rendering performance transmission bandwidth storage capacities 
introduces progressive mesh pm representation new scheme storing transmitting arbitrary triangle meshes 
efficient lossless continuous resolution representation addresses practical problems graphics smooth level detail approximations progressive transmission mesh compression selective refinement 
addition new mesh simplification procedure constructing pm representation arbitrary mesh 
goal optimization procedure preserve just geometry original mesh importantly appearance defined discrete scalar appearance attributes material identifiers color values normals texture coordinates 
demonstrate construction pm representation applications practical models 
cr categories subject descriptors computer graphics computational geometry object modeling surfaces object representations 
additional keywords mesh simplification level detail shape interpolation progressive transmission geometry compression 
highly detailed geometric models necessary satisfy growing expectation realism computer graphics 
traditional modeling systems detailed models created applying versatile modeling operations extrusion constructive solid geometry freeform deformations vast array geometric primitives 
efficient display models usually tessellated polygonal approximations meshes 
detailed meshes obtained scanning physical objects range scanning systems 
case resulting complex meshes expensive store transmit render motivating number practical problems email microsoft com web www research microsoft com research graphics hoppe mesh simplification meshes created modeling scanning systems seldom optimized rendering efficiency frequently replaced nearly indistinguishable approximations far fewer faces 
process requires significant user intervention 
mesh simplification tools hope automate painstaking task permit porting single model platforms varying performance 
level detail lod approximation improve rendering performance common define versions model various levels detail 
detailed mesh object close viewer coarser approximations substituted object 
instantaneous switching lod meshes may lead perceptible popping construct smooth visual transitions geomorphs meshes different resolutions 
progressive transmission mesh transmitted communication line show progressively better approximations model data incrementally received 
approach transmit successive lod approximations requires additional transmission time 
mesh compression problem minimizing storage space model addressed orthogonal ways 
mesh simplification reduce number faces 
mesh compression minimizing space taken store particular mesh 
selective refinement mesh lod representation captures model uniform view independent level detail 
desirable adapt level refinement selected regions 
instance user flies terrain terrain mesh need fully detailed near viewer field view 
addressing problems major contributions 
introduces progressive mesh pm representation 
pm form arbitrary mesh stored coarser mesh sequence detail records indicate incrementally refine exactly back original mesh records stores information associated vertex split elementary mesh transformation adds additional vertex mesh 
pm representation defines continuous sequence meshes increasing accuracy lod approximations desired complexity efficiently retrieved 
geomorphs efficiently constructed meshes 
addition show pm representation naturally supports progressive transmission offers concise encoding permits selective refinement 
short progressive meshes offer efficient lossless continuous resolution representation 
contribution new simplification procedure constructing pm representation mesh previous simplification methods procedure seeks preserve just geometry mesh surface importantly appearance defined discrete scalar attributes associated surface 
meshes computer graphics models computer graphics represented triangle meshes 
geometrically triangle mesh piecewise linear surface consisting triangular faces pasted edges 
described mesh geometry denoted tuple simplicial complex specifying connectivity mesh simplices adjacency vertices edges faces fv set vertex positions defining shape mesh precisely cf 
construct parametric domain jkj identifying vertex canonical basis vector define mesh image jkj linear map 
surface appearance attributes geometry associated mesh 
attributes categorized types discrete attributes scalar attributes 
discrete attributes usually associated faces mesh 
common discrete attribute material identifier determines shader function rendering face mesh 
instance trivial shader function may involve simple look specified texture map 
scalar attributes associated mesh including diffuse color normal nx ny nz texture coordinates 
generally attributes specify local parameters shader functions defined mesh faces 
simple cases scalar attributes associated vertices mesh 
represent discontinuities scalar fields adjacent faces may different shading functions common associate scalar attributes vertices corners mesh 
corner defined vertex face tuple 
scalar attributes corner specify shading parameters face vertex example crease curve surface normal field continuous vertex distinct normals associated corners side crease 
express mesh tuple specifies geometry set discrete attributes df associated faces fj lg set scalar attributes associated corners ofk 
attributes give rise discontinuities visual appearance mesh 
edge mesh said sharp boundary edge adjacent faces dfr fl fr different discrete attributes dfl adjacent corners different scalar attributes vj fl vj fr vk fl vk fr 
set sharp edges define set discontinuity curves mesh yellow curves 
progressive mesh representation overview hoppe describe method mesh optimization approximate initial mesh simpler 
optimization algorithm reviewed section traverses space possible meshes successively applying set mesh transformations edge collapse edge split edge swap 
discovered fact single transformations edge collapse sufficient effectively simplifying meshes 
shown edge collapse transformation ecol fvs assume general meshes containing sided faces faces holes converted triangle meshes triangulation 
pm representation generalized handle general meshes directly expense complex data structures 
ecol vsplit illustration edge collapse transformation 
ecol ecol sequence edge collapses resulting vertex correspondence 
unifies adjacent vertices vs vt single vertex vs vertex vt adjacent faces fvs vt vs vanish process 
position vs specified new unified vertex 
initial mesh simplified coarser mesh applying sequence successive edge collapse transformations ecol 
ecol 
particular sequence edge collapse transformations chosen carefully determines quality approximating meshes scheme choosing edge collapses section 
number vertices label vertices mesh fv vm ig edge vm collapsed ecoli shown 
vertices may different positions different meshes denote position vj key observation edge collapse transformation invertible 
call inverse transformation vertex split shown vsplit 
vertex split transformation vsplit adds near vertex vs new vertex vt new faces fvs vt vs 
edge fvs boundary edge vr face added 
transformation updates attributes mesh neighborhood transformation 
attribute information denoted includes positions vs vt affected vertices discrete attributes vt lg vs new faces scalar attributes affected corners vs vt vl fvs vt vr vs 
edge collapse transformations invertible represent arbitrary triangle mesh simple mesh sequence vsplit records vsplit 
vsplit 

record parametrized si li ri ai 
call mesh pm representation example mesh faces simplified coarse mesh faces edge collapse transformations 
pm representation consists sequence vsplit records 
pm representation extract approximating meshes desired number faces applying prefix vsplit sequence 
example shows approximating meshes faces 
geomorphs nice property vertex split transformation inverse edge collapse smooth visual transition geomorph created meshes 
moment assume meshes contain attributes vertex positions 
assumption vertex split record encoded si li ri ai si vi 
construct geomorph blend parameter looks looks fact defining mesh connectivity vertex positions linearly interpolate vsi split vertices vsi vm si fsi fsi geomorphs application smoothly transition mesh meshes visible snapping meshes 
individual ecol transformations transitioned smoothly composition sequence 
geomorphs constructed meshes pm representation 
finer mesh coarser mesh exists natural correspondence vertices vertex related unique ancestor vertex surjective map obtained composing sequence ecol transformations 
precisely vertex vj corresponds vertex va sj practice ancestor information gathered forward fashion mesh refined 
correspondence allows define geomorph looks equals simply define connectivity vertex positions vc far outlined construction geomorphs pm meshes containing position attributes 
fact construct geomorphs meshes containing discrete scalar attributes 
discrete attributes nature smoothly interpolated 
fortunately discrete attributes associated faces mesh geometric geomorphs described smoothly introduce faces 
particular observe faces proper subset faces faces missing invisible collapsed degenerate zero area triangles 
schemes define behaved invertible parametrizations meshes different levels detail permit construction geomorphs meshes different discrete attributes 
scalar attributes defined corners smoothly interpolated vertex positions 
slight complication corner mesh naturally associated ancestor corner coarser mesh face attempt infer attribute value follows 
examine mesh introduced locate neighboring corner inm attribute value recursively backtrack corner neighboring corner identical attribute value corner equivalent keep attribute value constant geomorph 
interpolating function scalar attributes need linear instance normals best interpolated unit sphere colors may interpolated color space rgb 
demonstrates geomorph meshes faces faces retrieved pm representation mesh 
progressive transmission progressive meshes natural representation progressive transmission 
compact mesh transmitted conventional uni resolution format followed stream records 
receiving process incrementally rebuilds records arrive animates changing mesh 
changes mesh avoid visual discontinuities 
original mesh recovered exactly records received pm lossless representation 
computation receiving process balanced reconstruction interactive display 
slow communication line simple strategy display current mesh input buffer empty 
fast communication line find strategy display meshes complexities increase exponentially 
similar issues arise display images transmitted progressive jpeg 
mesh compression pm representation encodes continuous family approximations surprisingly space efficient reasons 
locations vertex split transformations encoded concisely 
storing vertex indices si li ri need store si approximately bits select remaining vertices adjacent vsi 
second vertex split local effect expect significant coherence mesh attributes transformation 
instance vertex si positions si vi split vi si vi predict delta encoding si reduce storage 
scalar attributes corners similarly predicted material identifiers vt vs new faces mesh predicted adjacent faces control bits 
result size carefully designed pm representation competitive obtained methods compressing uni resolution meshes 
current prototype implementation designed goal mind 
analyze compression connectivity report results compression geometry analysis assume simplicity typically common representation mesh connectivity list vertex indices face 
number vertices number faces approximately list requires dlog en bits storage 
buffer vertices generalized triangle strip representations reduce number average vsi neighbors number permutations encoded dlog bits 
dlog bits vertices back referenced average bits capture vertex replacement codes 
increasing vertex buffer size deering generalized triangle mesh representation reduces storage bits 
turan shows planar graphs dlog connectivity closed genus meshes encoded bits 
taubin rossignac addresses general meshes 
pm representation requires specification si neighbors total storage dlog bits 
concise comparable generalized triangle strips 
traditional representation mesh geometry requires storage coordinates bits ieee single precision floating point 
deering assume coordinates quantized bit fixed precision values significant loss visual quality reducing storage bits 
deering able compress storage delta encoding quantized coordinates huffman compressing variable length deltas 
bit quantization reports storage bits includes deltas huffman codes 
similar approach pm representation encode bits shown table 
obtain results exploit property optimization algorithm section considering collapse edge fvs considers starting points resulting vertex position vn fvs vt vs vt depending starting point chosen delta encode fvs vn vt vng vs vt vt vs vn separate huffman tables quantities 
improve compression alter construction algorithm forego optimization vn fvs vt vs vt degrade accuracy approximating meshes somewhat allows encoding bits examples 
arithmetic coding delta lengths improve results significantly reflecting fact huffman trees balanced 
compression improvements may achievable adapting quantization level delta length models functions vsplit record index magnitude successive changes tends decrease 
selective refinement pm representation supports selective refinement detail added model desired areas 
application supply callback function refine returns boolean value indicating neighborhood mesh refined 
initial mesh selectively refined iterating list performing si li ri ai vertices mesh refine vsi evaluates true 
vertex vj absent mesh prior vertex split introduced performed due conditions 
example obtain selective refinement model view frustum refine defined true neighbors lies frustum 
seen condition described suboptimal 
problem vertex vsi frustum may fail split expected neighbor lies just outside frustum previously created 
problem remedied stringent version condition 
define closest living ancestor vertex vj vertex index sj vj exists mesh new condition vsi mesh si si vertices va li va ri adjacent vsi 
constructing geomorphs ancestor information carried efficiently vsplit records parsed 
conditions satisfied vsplit si li ri ai applied mesh 
mesh selectively refined new strategy shown 
strategy 
note possible create geomorphs selectively refined meshes created 
interesting application selective refinement transmission view dependent models low bandwidth communication lines 
receiver view changes time sending process need transmit vsplit records refine evaluates true ones previously transmitted 
progressive mesh construction pm representation arbitrary mesh requires sequence edge collapses transforming base mesh quality intermediate approximations depends largely algorithm selecting edges collapse attributes assign affected neighborhoods instance positions si possible pm construction algorithms varying trade offs speed accuracy 
extreme crude fast scheme selecting edge collapses choose completely random 
local conditions satisfied edge collapse legal manifold preserving 
sophisticated schemes heuristics improve edge selection strategy example distance plane metric schroeder 
extreme attempt find approximating meshes optimal respect appearance metric instance edist geometric metric hoppe 
pm construction preprocess performed offline chose design simplification procedure invests time selection edge collapses 
procedure similar mesh optimization method introduced hoppe outlined briefly section 
section presents overview procedure sections details optimization scheme preserving shape mesh scalar discrete attributes define appearance 
background mesh optimization goal mesh optimization find mesh accurately fits set points xi small number vertices 
energy function problem cast minimization edist terms correspond goals accuracy conciseness distance energy term edist xi jkj measures total squared distance points mesh representation energy term penalizes number vertices third term spring energy introduced regularize optimization problem 
corresponds placing edge mesh spring rest length zero tension fj kg poor accuracy dist mb mc space meshes poor accuracy dist space meshes pm representation perfect ideal size vertices illustration paths taken mesh optimization different settings 
perfect ideal size vertices illustration path taken new mesh simplification procedure graph plotting accuracy vs mesh size 
energy function minimized nested optimization method edist optimizing outer loop algorithm optimizes connectivity mesh randomly attempting set possible mesh transformations edge collapse edge split edge swap 
set transformations complete sense simplicial complex topological type reached sequence transformations 
candidate mesh transformation continuous optimization described computes ek minimum subject new connectivity ek ek negative mesh transformation applied akin zero temperature simulated annealing method 
inner loop candidate mesh transformation algorithm computes ek vertex positions sake efficiency algorithm fact optimizes vertex position vs considers subset points project neighborhood affected avoid surface self intersections edge collapse disallowed maximum dihedral angle edges resulting neighborhood exceeds threshold 
hoppe find regularizing spring energy term important early stages optimization achieve best results repeatedly invoking nested optimization method described schedule decreasing spring constants mesh optimization demonstrated effective tool mesh simplification 
initial mesh approximate dense set points sampled vertices randomly faces 
optimization algorithm invoked starting mesh 
varying setting representation constant results optimized meshes different trade offs accuracy size 
paths taken optimizations shown 
overview simplification algorithm mesh optimization define explicit energy metric measure accuracy simplified meshes respect original modify mesh starting minimizing 
energy metric form edist terms edist identical 
terms added preserve attributes associated measures accuracy scalar attributes section measures geometric accuracy discontinuity curves section 
achieve scale invariance terms mesh uniformly scaled fit unit cube 
scheme optimizing connectivity mesh different 
discovered mesh effectively simplified edge collapse transformations 
edge swap edge split transformations useful context surface reconstruction motivated essential simplification 
principle simplification algorithm longer traverse entire space meshes considered mesh optimization find meshes generated algorithm just 
fact priority queue approach described meshes usually better 
considering edge collapses simplifies implementation improves performance importantly gives rise pm representation section 
randomly attempting mesh transformations place legal candidate edge collapse transformations priority queue priority transformation estimated energy cost iteration perform transformation front priority queue lowest recompute priorities edges neighborhood transformation 
consequence eliminate need awkward parameter energy term 
explicitly specify number faces desired optimized mesh 
single run optimization generate meshes 
generates continuous resolution family meshes pm representation 
edge collapse compute cost ek solving continuous optimization ek ek edist min vertex positions scalar attributes mesh connectivity minimization discussed sections 
preserving surface geometry edist record geometry original mesh sampling set points minimum sample point vertex requested user additional points sampled randomly surface energy terms edist defined section 
mesh fixed connectivity method optimizing vertex positions minimize edist closely follows 
evaluating edist involves computing distance point xi mesh 
distances minimization problem xi jkj min bi bi jkj unknown bi parametrization projection xi mesh 
nonlinear minimization edist performed iterative procedure alternating steps 
fixed vertex positions compute optimal parametrizations fb projecting points mesh 

fixed parametrizations compute optimal vertex positions solving sparse linear squares problem 
considering ecol fvs optimize vertex position perform different optimizations different starting points accept best 
defining global spring constant adapt time edge collapse transformation considered 
intuitively spring energy important points project neighborhood faces case finding vertex positions minimizing edist may constrained problem 
edge collapse transformation considered set function ratio number points number faces neighborhood 
adaptive scheme influence decreases gradually adaptively mesh simplified longer require expensive schedule decreasing spring constants 
preserving scalar attributes described section represent piecewise continuous scalar fields defining scalar attributes mesh corners 
scheme preserving scalar fields simplification process 
exposition find easier case continuous scalar fields corner attributes vertex identical 
generalization piecewise continuous fields discussed shortly 
optimizing scalar attributes vertices original mesh vertex vj position vj scalar attribute vj capture scalar attributes sample point xi attribute value xi generalize distance metric edist measure deviation sampled attribute values natural way achieve redefine distance metric measure distance xi xi min xi xi bi bi bi jkj new distance functional minimized iterative approach section 
expensive finding optimal parametrization bi point xi require projection non intuitive parametrizations geometrically 
opted determine parametrizations bi geometry equation introduce separate energy term measure attribute deviation parametrizations kx bi constant assigns relative weight scalar attribute errors geometric errors edist 
minimize edist algorithm finds vertex position vs minimizing edist alternately projecting points mesh obtaining parametrizations bi solving linear squares problem section 
parametrizations neighborhood edge collapse transformation set faces shown 
notation set ratio number points faces neighborhood 
bi finds vertex attribute minimizing solving single linear squares problem 
introducing optimization causes negligible performance overhead 
contributes estimated cost edge collapse obtain simplified meshes faces naturally adapt attribute fields shown figures 
optimizing scalar attributes corners scheme optimizing scalar corner attributes straightforward generalization scheme just described 
solving single unknown attribute value vs algorithm partitions corners vs continuous sets equivalence corner attributes continuous set solves independently optimal attribute value 
range constraints scalar attributes constrained ranges 
instance components color typically constrained lie 
squares optimization may yield color values outside range 
cases clip optimized values range 
squares minimization euclidean norm single vertex fact optimal 
normals surface normals nx ny nz typically constrained unit length domain non cartesian 
optimizing normals require minimization nonlinear functional nonlinear constraints 
decided simply carry normals simplification process 
specifically compute new normals vertex si interpolating normals vertices si value re best vertex position si section 
fortunately absolute directions normals visually important discontinuities scheme preserving discontinuities described section 
preserving discontinuity curves appearance attributes give rise set discontinuity curves mesh differences discrete face attributes material boundaries differences scalar corner attributes creases shadow boundaries 
discontinuity curves form noticeable features useful preserve topologically geometrically 
detect candidate edge collapse modify topology discontinuity curves simple tests presence sharp edges neighborhood 
sharp vj vk denote edge sharp sharp vj number sharp edges adjacent vertex vj 
referring ecol fvs modifies topology discontinuity curves sharp vs vl sharp vt vl sharp vs vr sharp vt vr sharp vs sharp vt sharp vs vt sharp vs sharp vt sharp vs vt sharp vs vt sharp vs sharp vt sharp vs vt sharp vt sharp vs 
edge collapse modify topology discontinuity curves disallow penalize discussed section 
preserve geometry discontinuity curves sample additional set points sharp edges define additional energy term equal total squared distances points discontinuity curve sampled 
defined just edist points constrained project set sharp edges mesh 
effect solving curve fitting problem embedded surface fitting problem 
boundaries surface defined discontinuity curves procedure preserves bound ary geometry accurately 
demonstrates importance energy term preserving material boundaries mesh discrete face attributes 
permitting changes topology discontinuity curves meshes contain numerous discontinuity curves curves may delimit features small visible viewed distance 
cases strictly preserving topology discontinuity curves unnecessarily simplification 
adopted hybrid strategy permit changes topology discontinuity curves penalize changes 
candidate edge collapse ecol fvs changes topology discontinuity curves add cost value fvs vtk fvs number points projecting fvs 
simple strategy ad hoc proven effective 
example allows dark gray window frames visible vanish simplified meshes figures 
table parameter settings quantitative results 
object original base user param 
time bits faces faces jxj mins terrain radiosity fandisk results table shows meshes figures number vertices faces general simplification proceed legal edge collapse transformations possible 
stopped faces obtain visually aesthetic base mesh 
indicated user specified parameters number additional points vertices sampled increase fidelity constants relating scalar attribute accuracies geometric accuracy 
scalar attribute optimized color constant denoted 
number points sampled sharp edges set automatically densities proportional 
execution times obtained mhz indigo mb memory 
construction pm representation proceeds steps 
simplification algorithm applies sequence ecol transformations original mesh writes file sequence vsplit corresponding inverse transformations 
finished algorithm writes resulting base mesh reverse order vsplit records 
vertices faces vsplit match indexing scheme section order obtain concise format 
shows single geomorph meshes pm representation 
interactive lod useful select sequence meshes pm representation construct successive geomorphs 
obtained set jxj area total length sharp edges area total area faces constant chosen empirically 
results selecting meshes complexities grow exponentially 
execution application adjust granularity geomorphs sampling additional meshes pm representation freeing 
selectively refined terrain grid vertices new refine function keeps detail near silhouette edges near viewer 
precisely faces fv adjacent compute signed projected screen areas faf fvg 
refine return true face fv lies view frustum signs af equal lies near silhouette edge af thresh screen area threshold thresh fv total screen area 
related mesh simplification methods number schemes construct discrete sequence approximating meshes repeated application simplification procedure 
turk set points mesh density weighted estimates local curvature points 
schroeder cohen iteratively remove vertices mesh resulting holes 
cohen able bound maximum error approximation restricting lie offset surfaces 
hoppe find accurate approximations general mesh optimization process section 
rossignac borrel merge vertices model spatial binning 
unique aspect approach topological type model may change process 
method extremely fast ignores geometric qualities curvature resulting approximations far optimal 
methods permit construction geomorphs successive simplified meshes 
multiresolution analysis mra lounsbery generalize concept multiresolution analysis surfaces arbitrary topological type 
eck describe mra applied approximation arbitrary mesh 
certain extend mra capture color multiresolution web viewer supporting progressive transmission 
mra similarities pm scheme store simple base mesh stream detail records produce continuous resolution representation 
worthwhile highlight differences advantages pm mra mra requires detail terms wavelets lie domain subdivision connectivity result arbitrary initial mesh recovered tolerance 
contrast pm representation lossless approximating meshes pm may arbitrary connectivity better approximations mra counterparts 
mra representation deal effectively surface creases creases lie parametrically edges base mesh 
pm introduce surface creases level detail 
pm capture continuous piecewise continuous discrete appearance attributes 
mra schemes represent discontinuous functions piecewise constant basis haar basis resulting approximations discontinuities basis functions meet continuously 
clear mra extended capture discrete attributes 
advantages mra pm mra framework provides parametrization meshes various levels detail making possible multiresolution surface editing 
pm offer parametrization smooth multiresolution editing may non intuitive 
eck construct mra approximations guaranteed maximum error bounds pm construction algorithm provide bounds envision simplification envelopes achieve 
mra allows geometry color compressed independently 
related relatively little simplifying arbitrary surfaces functions defined 
special instance image compression image thought set scalar color functions defined quadrilateral surface 
instance framework schr der sweldens simplifying functions defined sphere 
pm representation mra representation generalization supports surfaces arbitrary topological type 
summary introduced progressive mesh representation shown naturally supports geomorphs progressive transmission compression selective refinement 
addition pm construction method new mesh simplification procedure designed preserve just geometry original mesh appearance 
number avenues including development explicit metric optimization scheme preserving surface normals 
experimentation pm editing 
representation articulated animated models 
application progressive subdivision surfaces 
progressive representation general simplicial complexes just manifolds 
addition spatial data structures permit efficient selective refinement 
envision practical applications pm representation including streaming geometry web efficient storage formats continuous lod computer graphics applications 
representation may applications finite element methods generate coarse meshes multigrid analysis 
acknowledgments wish viewpoint providing mesh pratt whitney gas turbine engine component fandisk terrain mesh especially steve drucker creating radiosity models 
michael cohen steven shlomo gortler jim kajiya enthusiastic support rick szeliski helpful comments 
mark coined term geomorph distinguish image morphs 
apple computer graphics programming 
addison wesley 
certain popovic duchamp salesin stuetzle derose interactive multiresolution surface viewing 
computer graphics siggraph proceedings 
clark hierarchical geometric models visible surface algorithms 
communications acm october 
cohen varshney manocha turk weber agarwal brooks wright simplification envelopes 
computer graphics siggraph proceedings 
curless levoy volumetric method building complex models range images 
computer graphics siggraph proceedings 
deering geometry compression 
computer graphics siggraph proceedings 
eck derose duchamp hoppe lounsbery stuetzle multiresolution analysis arbitrary meshes 
computer graphics siggraph proceedings 
funkhouser sequin adaptive display algorithm interactive frame rates visualization complex virtual environments 
computer graphics siggraph proceedings 
hoppe derose duchamp mcdonald stuetzle mesh optimization 
computer graphics siggraph proceedings 
lounsbery multiresolution analysis surfaces arbitrary topological type 
phd thesis department computer science engineering university washington 
lounsbery derose warren multiresolution analysis surfaces arbitrary topological type 
submitted publication 
tr dept computer science engineering washington january 
rossignac borrel multi resolution approximations rendering complex scenes 
modeling computer graphics kunii eds 
springer verlag pp 

schroder sweldens spherical wavelets efficiently representing functions sphere 
computer graphics siggraph proceedings 
schroeder lorensen decimation triangle meshes 
computer graphics siggraph proceedings 
taubin rossignac geometry compression topological surgery 
research report rc ibm january 
turan succinct representations graphs 
discrete applied mathematics 
turk re tiling polygonal surfaces 
computer graphics siggraph proceedings 
renderman companion 
addison wesley 
witten neal cleary arithmetic coding data compression 
communications acm june 
base mesh faces mesh faces mesh faces original faces pm representation arbitrary mesh captures continuous resolution family approximating meshes 
example geomorph defined faces faces 
conditions faces conditions faces example selective refinement view frustum indicated orange 
vertices simplified mesh vertices demonstration minimizing simplification mesh trivial geometry square complex scalar attribute field 
mesh regular connectivity vertex colors correspond pixels image 
simplification selective refinement terrain mesh account view frustum silhouette regions projected screen size faces faces 
simplification radiosity solution left original mesh faces right simplified mesh faces 
faces faces faces faces faces faces approximations mesh pm representation mra scheme eck 
demonstrated mra recover exactly deal effectively surface creases produces approximating meshes inferior quality 
