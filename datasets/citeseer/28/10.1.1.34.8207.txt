active database systems norman paton oscar department computer science university manchester oxford road manchester pl uk 
mail norm cs man ac uk de university country san spain 
mail si es active database systems support mechanisms enable respond automatically events place outside database system 
considerable effort directed improving understanding systems years different proposals applications suggested 
high level activity yielded single agreed standard approach integration active functionality conventional database systems led improved understanding active behavior description languages execution models architectures 
presents fundamental characteristics active database systems describes collection representative systems common framework considers consequences implementations certain design decisions discusses tools developing active applications 
transition granularity tuple single event occurrence triggers single rule 
transition granularity set collection event occurrences trigger rule 
example rule condition action coupling mode deferred monitoring event occurrences taken place transaction transition granularity indicates instantiations created triggering phase 
transition granularity tuple separate instantiation created transition granularity set single instantiation created respond set events fe feature influences relationship events rules trigger net effect policy indicates net effect event occurrences individual event occurrence considered 
difference strategies stems cases updates data item considered single update instance updated deleted net effect deletion original instance instance inserted updated net effect insertion updated instance instance inserted deleted net effect modification hanson :10.1.1.46.2504
question happens events signaled evaluation condition action rule addressed cycle policy execution model 
general options 
cycle policy iterative events signaled condition action evaluation combined original event source illustrated subsequently consumed rules single global repository signaled events 
means condition action evaluation suspended allow responses events signaled conditions actions 
possible behavior concept causality effect precede cause hsu 
fall line concept schedule obey rules triggered transaction serialized triggering transaction triggered transaction commit triggering transaction commits 
user may choose obey causality principle allow triggered transaction executed freely 
terminology introduced section options correspond detached dependent detached independent coupling modes respectively 
production rule algorithms architecture explicit role event detection situation monitoring systems ariel hanson amos support production condition action rules explicit event specifications :10.1.1.46.2504
practice primitive update events detected database production systems truth condition changed consequences changes underlying database 
seen potential architecture implementing production rule system algorithms commonly improving efficiency condition evaluation quite different generally applied context eca rules 
condition action rules processed context recognize act cycle delta paton diaz match conflict set empty conflict resolution act match cycle match phase identifies rules conditions true respect state database adds conflict set essentially queue triggered rules waiting fired 
conflict resolution step selects single rule conflict set processing act phase executes statements action selected rule 
naive evaluation match phase evaluate condition rule find rules considered processing 
approach prohibitively expensive necessary small part database condition acts change cycle 
methods seek avoid recomputing entire condition rule storing information partially computed condition rule cycles 
follows example relations illustrate principal approaches 
typical production rule ariel notation hanson relating data monitor uk owner ibm stock name ibm stock stock reg reg country uk stock owns holder action :10.1.1.46.2504
query express condition involves join owns relation stock holder 
principal notion rete forgy matching algorithm originally proposed implementing main memory ops production rule systems storing partially computed condition rule cycles rule execution effect changes database conflict set computed minimal additional effort 
partially computed condition rule stored graph structure known discrimination network 
example query represented rete discrimination network 
rete commercial production rule systems number problems especially large databases space overhead high ff fi memories storing intermediate results computation maintenance results particularly deletion data imposes significant overhead 
identification alternatives rete explored principal issues relating intermediate information store 
spectrum seen exist storage intermediate results storage intermediate results 
rete storage intensive spectrum ff fi memories 
variation rete ff fi memories treat miranker performs rete cases wang hanson :10.1.1.46.2504
research shown rules analysed identify level intermediate storage suitable 
delta paton diaz idl idl relational dbs idl idl event source idl detector event idl rule manager scheduler condition monitor object oriented dbs system file corba corba detected event signaled event fig 

active rule system architecture moving distributed setting 

active rule system architecture moving distributed setting 
store 
algorithms treat built directly top relational storage structures researchers identified structures improve certain aspects condition monitoring 
example hanson exploits interval skip lists reduce cost searching updating ff memories miranker uses specialized index structure improve join performance :10.1.1.46.2504
active rules distributed environment assumed active behavior supported single centralized database 
modern applications distributed nature number proposals exploiting active behavior distributed systems 
active mechanism seen set cooperating objects distributed network loosely coupled autonomous nodes 
event detection event management rule management seen services cooperate offer functionality previously bundled monolithic active mechanism 
