wireless networks kluwer academic publishers 
manufactured netherlands 
wtcp reliable transport protocol wireless wide area networks sinha bell laboratories lucent technologies new jersey usa coordinated science laboratory university illinois urbana champaign usa narayanan motorola labs il usa sivakumar electrical computer engineering georgia institute technology usa bharghavan coordinated science laboratory university illinois urbana champaign usa 
wireless wide area networks characterized low variable bandwidths high variable delays significant non congestion related losses asymmetric uplink downlink channels occasional blackouts 
additionally majority latency wwan connection incurred wireless link 
operating conditions contemporary wireless tcp algorithms perform 
wtcp reliable transport protocol addresses rate control reliability commercial wwan networks cdpd 
wtcp rate uses mechanisms performs rate control receiver uses inter packet delays primary metric rate control 
implemented evaluated wtcp cdpd network simulated ns simulator 
results indicate wtcp improve performance comparable algorithms tcp newreno tcp vegas snoop tcp typical operating conditions 
keywords wireless transport wtcp reliable wireless transmission 
years witnessed explosive growth wireless wide area networks cdpd ram hdr industry projections year 
large corporations equipping mobile force laptops wwan connectivity enabling users connected anytime 
typical wwan deployment scenario mobile user connects wwan network dedicated proxy corporate backbone acts service point requests mobile user providing efficient reliable connectivity proxy mobile host commercial wide area wireless networks critical issue 
current deployment uses proxy model reasons connection quality wwan network poor sustain typical client server applications amount data transferred mobile host filtered orders magnitude difference bandwidth wired wwan connections portable computing devices display processing limitations addressed proxy sending processed filtered response mobile user 
despite enormous commercial interest typical wwan network exhibits characteristics low highly variable throughput bps kbps high highly variable latency ms bursty random packet losses unrelated congestion occasional blackouts exceed operating conditions applications require generic transport protocol amenable different types wireless networks exhibit similar characteristics 
standard transport protocols tcp perform poorly conditions main reasons tcp assigns packet losses congestion transmission rate detecting packet loss second tcp sets retransmission timeout rto observed round trip times rto rtt rtt 
wwan networks consideration mechanism appropriate 
packet losses may happen due adverse channel conditions congestion throttling transmission rate case wrong thing 
furthermore due low bandwidth transmission delays contribute significantly observed round trip time 
sinha round trip time computations highly susceptible fluctuation depending size tcp congestion window 
consequence rto values computed sender tend high large cdpd 
combination large rto loss recovery wrongly throttling congestion window random packet loss result extremely poor tcp performance typical wwan operating conditions observed experiments cdpd network 
years proposals optimize tcp wireless networks 
proposals typically flavors improving reliability link layer providing tcp aware base station splitting tcp connection parts backbone network wireless link running specialized protocol 
solutions focus exclusively making loss characteristics wireless link transparent sender preserving congestion control mechanisms tcp 
discuss section contemporary solutions address part problem wwan environments leave lot scope improvement 
goal identify fundamental causes performance degradation tcp commercial wwan networks design transport protocol effectively addresses causes 
seek design deployable robust fair efficient reliable transport protocol commercial wwan networks 
wireless transmission control protocol wtcp key principles 
wtcp uses purely mechanisms eliminating need transport level support network infrastructure contrast related 
choose mechanisms reasons 
solution generically aimed wireless networks eliminate need network specific transport layers hosts 
host especially oft resource scarce mobile host results single transport layer solution wireless networks allows hosts move seamlessly different wireless networks 
second connection points current wwan deployment scenarios mobile host dedicated proxy wireless mobility aware 
deploying wtcp mobile host proxy feasible propose toend transport layer solutions wwan environments having change tcp implementations stationary hosts 
third wwan network providers typically unwilling introduce tcp aware base station mobile switching station reasons discussed section 
wtcp uses rate window transmission control 
result wtcp shapes data traffic allows burst packet transmissions prone unfairness observed tcp competing connections different round trip times 
furthermore receiver adaptively computes desired transmission rate characteristics data path 
consequently wtcp relatively insensitive problems ack path handle asymmetric channels 

wtcp uses ratio inter packet separation receiver inter packet separation sender recall sender shapes data traffic primary metric rate control packet loss retransmit timeouts 
tries remain congestion avoidance phase times detecting reacting incipient congestion 
result wtcp reduces effect non congestion related packet losses computation transmission rate 
additionally wtcp prone large round trip time variations congestion window size increases inevitable standard tcp variants due low bandwidth nature channel 
claim wtcp manna wireless transport protocols transport protocol disadvantages 
detailed discussion issues regarding design implementation wtcp 
rest organized follows 
section identifies typical characteristics wwan environment adversely affect performance tcp 
section describes key design principles mechanisms wtcp 
section presents algorithms congestion control reliability wtcp 
section evaluates performance wtcp user level implementation tested cdpd networks simulations ns 
section compares wtcp related 
section presents design issues wtcp 
section concludes 

characteristics wwan environments high level wwan environments exhibit characteristics bandwidth low varying latency high varying blackouts exceeding occur occasionally unreliable wwan networks non congestion related packet loss may significant user traveling moderate high speeds 
cdpd evaluation platform wtcp design specific particular data network 
cdpd packet data network overlays amps cellular telephone infrastructure 
cdpd full duplex channel pair unidirectional channels raw capacity kbps 
maximum users share pair uplink downlink channels 
set channels may dedicated cdpd transmission cdpd users may dynamically assigned channels preferentially shared cellular phone calls case users wtcp reliable transport protocol wireless wide area networks see short term blackouts 
cdpd transmits compressed encrypted data adds reed solomon coding overhead forward error correction 
characteristics cdpd germane discussion effective throughput cdpd channel typically exceed kbps majority latency incurred cdpd part network mobile switching station mobile host 
revisit impact point discuss wireless transport protocols rely tcp aware base station 
wwan wireless networks general cdpd networks particular typically exhibit characteristics 

non congestion related packet loss 
cdpd adds bits reed solomon error correcting code bit block data measured related error ranging depending speed mobility measured range mph location user vis vis base station channel interference 
tcp assumes packet losses result congestion 
non congestion related packet loss significantly degrade performance tcp 

low bandwidth 
mentioned users may share single cdpd channel raw capacity kbps 
ram channel kbps channel may kbps kbps 
due extremely low bandwidth delay bandwidth product connection small typically packets 
affect congestion control fast retransmit mechanisms tcp adversely 
tcp observes artificially larger congestion windows result deep buffering cdpd network 
allows connection pump packets network artificially increases round trip time significantly affects tcp performance case timeout 

large round trip time variance round trip time 
cdpd observed typical round trip times ms large fraction time due transmission wireless link transmitting byte packet bps takes ms latency typically incurred segments connection lying mobile switching station mobile host 
observe variation round trip time udp handshakes progress bursts successful handshakes 
plot shows impact large transmission delay rtt sender bursts packets 
tcp sets retransmission timeout sum average round trip time times mean deviation round trip time rto rtt rtt 
may result large rtos cdpd reasons rtt rtt inherently large acks receiver get bunched see acks clock data packets tcp data packets sent bursts increases mean deviation rtt 
timeouts affect tcp performance severely cdpd 

asymmetric channel acks 
cdpd uses cd contention resolution channel 
contentions mobile users uplink channel resolved binary exponential backoff 
consequently cdpd suffers known capture syndrome binary exponential backoff highly loaded shared medium ends bursting queued packet transmissions contending host turn 
ram suffers problem 
common case downlink data transmission acks mobile backbone host get bunched 
skews round trip time computation causes sender burst packets mentioned 

occasional blackouts 
prolonged fades sudden degradation signal quality traveling tunnel overlapping base stations temporary lack available channels cellular phone calls occupying channels cause blackouts lasting results back back loss sequence packets 
traveling mph observed blackouts ranging min course day 

inter packet delays congestion metric 
observed sharp increases short term average interpacket delay observed receiver precede congestion related packet loss cdpd network 
specifically increase average interpacket delay perceived receiver indication increased contention wireless link precursor loss connections throttle back sending rate 
observe interpacket delay sample points computed long term short term interpacket delay averages computed mean deviation function time receiver 
sender sends packets constant interpacket separation clearly interpacket separation useful metric pace progress connection perform rate control 
wireline networks delays interpacket separation metric predicting congestion accepted large variation delays experienced packets internet 
approach works target environment extremely low bandwidth transmission time wireless link 
tcp vegas uses variant approach monitoring round trip times sender interpacket delays receiver 
unfortunately tcp vegas wwan environments asymmetric channels effect sinha bursting packets computed rtt points 

high level architectural tradeoffs wwan environments going details wtcp design need step back discuss tradeoffs toend mechanisms wireless tcp versus smart mechanisms network order assist wireless unaware tcp points 
related wireless optimizations tcp typically argued mechanisms grounds impractical change protocol stacks stationary hosts merely accommodate mobile hosts 
previous focused making lossy nature wireless link transparent stationary host introducing base station mechanisms reliable link layers tcp aware snoop mechanisms splitting connection wireline wireless distinct components 
link layer retransmission works latency wireless link small compared coarsegrained tcp timer 
ideal case link layer retransmissions expected significantly interfere endto rtt computations congestion control mechanisms eliminate random channel loss 
wwan networks transmission time wireless network constitutes bulk observed latency 
consequently providing reliable link layer abstraction packet level time scale keeping tcp unchanged hosts simply interfere reliability congestion control mechanisms tcp 
wireless data network provides fine grained retransmissions rlp hdr link layer mechanisms effectively mask channel error higher layers 
snoop protocol instantiates tcp aware base station mobile switching station order eliminate problem false fast retransmits slow starts due random packet loss wireless channel 
approach assumes transmission time wireless link significantly smaller coarse grained tcp timer round trip time 
snoop works bandwidth delay product wireless link packets long 
wwan environments snoop reasons exacerbates problem large varying round trip times suppressing duplicate acks duplicate retransmissions may initiated snoop agent host may observe timeout comparable timeout values entities 
fact observed snooping may possibly degrade performance tcp latency wireless link dominates round trip time 
summary believe snoop works environment designed wwan environment 
indirect tcp protocols break tcp connection base station maintain separate connections wireline network wireless network 
tcp violates fundamental guarantees tcp splitting connection 
note connection split happen base station mobile switching station serving mobile host connection state moved base stations handoff 
wireless component tcp quite simplistic address issues non conformance semantics overhead moving state base stations deployability constraints due mandatory changes base stations design transport protocol wireless link 
practical matter tcp architecture may feasible requires significant infrastructure support maintenance connection state wwan network autonomously managed may understand tcp ip internally ram 
important note tcp calls splitting transport connection transparently tcp points 
quite distinct wwan deployment scenario mobile host connecting dedicated stationary proxy backbone 
summarize believe previous approaches seek hide problems wwan networks tcp host adding tcp aware mobile switching station applicable wwan networks reasons approaches require base station maintain significant state understand tcp ip tuned specific flavors tcp fact latency mobile switching station mobile host dominant component large varying round trip time approaches effective 
wwan environments endpoints cooperatively address issues unique environment 
desirable eliminate network level base stations owned autonomous entity may running ip internally 
believe key issues need addressed non congestion related packet loss large highly varying latency asymmetry data ack channel behavior effectively solved mechanisms proposed 
course penalty mechanism remote point backbone change 
luckily nature wwan environment current deployment pattern supports common case wwan users typically connecting dedicated proxy server backbone 

wtcp approach reliable transport protocol provide functions connection management congestion control flow control reliability 
wtcp reuses standard tcp mechanisms flow control connection management 
focus key design choices wtcp congestion control reliability 
wtcp reliable transport protocol wireless wide area networks 
congestion control key aspects congestion control wtcp rate uses interpacket delay primary mechanism determine rate adaptation performs rate adaptation computations receiver predicts cause packet loss reacts accordingly varies granularity rate increase decrease depending type congestion observed 
additionally wtcp tailors startup behavior short lived flows 
describe design aspects wtcp congestion control detail 

rate transmission control 
mentioned section common case bulk data transfer backbone host mobile host acks bunched return path sender nature channel arbitration ca cdpd 
window self clocking mechanism tcp results sender bursting back data packets skews round trip time computations causes bursty queuing base station consequently packet drops 
wtcp alleviates problems rate scheme acks self clocking 
adopting rate approach involve explicit clocking shaping traffic current transmission rate connection rates typically small coarse grain timers ms sufficient perform clocking effectively 

inter packet delay main mechanism transmission control 
observed monitoring average interpacket delay receiver provides fairly accurate measure available channel rate low bandwidth channels 
specifically ratio average inter packet separation receiver average inter packet separation sender provides responsive metric determine transmission rate needs increased decreased 
network uncongested incipient congestion reacting changes interpacket delay ratio serves keep network uncongested significantly reduces number congestion related packet losses 
wtcp uses mechanism primary transmission rate control mechanism essentially uses incipient congestion detection waiting lose packets throttling sending rate 

distinguishing cause packet loss adjusting transmission rate accordingly 
interpacket delays main mechanism dealing incipient congestion network suddenly moves uncongested congested state due sudden influx new connections sudden decrease available resources packets dropped due congestion 
algorithm detect losses throttle sending rate aggressively 
words receiver observes packet losses predict cause losses react appropriately 
loss predicted due congestion sending rate throttled 
heuristic average packet separation distinguish congestion losses random losses 
heuristic receiver initially predicts losses non congestion losses 
consider packets received packets lost 
case receiver computes average inter packet separation lost packets equal recv recv recv time bit packet arrives 
value close measured inter packet separation receiver band average mean deviation average mean deviation constant receiver predicts losses random losses 
receiver predicts congestion loss sending rate reduced half 

performing transmission control computations receiver 
wtcp receiver performs rate control mechanisms described computes new transmission rate sender 
data packet sender transmits current interpacket separation 
local state state packet receiver information needs update transmission rate 
done regular intervals refer update epochs 
update epoch begins sender starts new rate lasts fixed time period 
epoch receiver performs rate control computations sends rate update back sender acknowledgment 
having receiver perform rate computations eliminates effect delay variations losses ack path 
acks get bunched delayed lost transmission rate altered 
wtcp deal asymmetric channels effectively 

variable granularity rate adjustment 
tcp uses known linear increase multiplicative decrease policy adjusting congestion window 
limd stable asymptotically converges fair channel allocation efficiency limd algorithm function severely decrease performed 
tcp reduces congestion window half observing packet loss 
wtcp seek detect incipient congestion react early common case 
goal wtcp decrease transmission rate multiplicatively order ensure fairness aggressively reacting incipient congestion order improve efficiency aggressively reacting real congestion order reduce packet loss alleviate congestion quickly 
order achieve goals wtcp maintains history transmission increase decrease past 
sinha receiver required perform transmission decrease multiple times quick succession starts decrease transmission rate aggressively 
receiver observes congestion packet loss halves rate 
result approach incipient congestion handled gentle decrease transmission rate severe congestion handled aggressive decrease transmission rate 

startup behavior 
round trips large wwan environments data transmissions may short lived wtcp attempts compute appropriate transmission rate connection immediately startup going slow start 
wtcp uses packet pair approach sends back back packets maximum segment size mss computes interpacket delay connection establishment 
serves approximate estimate sending rate 
packet pair approach known wireline environments cut approach 
investigate approach near 

blackout detection 
blackouts occur connection experiences back back losses extended periods time due poor channel conditions lack available channels 
described section reliability mechanism wtcp elicits acknowledgment positive negative receiver packet sent sender decides resend 
packet acknowledged positively negatively threshold period time sender enters blackout phase starts probing receiver order elicit acknowledgment 
successful packet handshake entering blackout phase sender reverts old transmission rate onset blackout phase 
ensures packet losses blackout phase affect transmission rate 

reliability key aspects reliability wtcp uses selective acknowledgments retransmit timeouts tunes frequency sending acknowledgments dynamic network conditions 
describe aspects 
selective acknowledgments 
noted related selective acknowledgments useful tcp 
wtcp uses selective acknowledgments ensuring reliability 
receiver periodically sends acks frequency tuned sender see containing cumulative selective ack 
inspecting ack sender detect hole receiver sequence received packets 
comparing state contained ack local state stored re transmission unacknowledged packet sender determine re transmission lost transit 
selective acknowledgment allows sender retransmit lost packets 

retransmit timeouts 
observed section exceedingly difficult maintain reliable estimate retransmit timeout 
fact performance problems observed various tcp flavors caused erroneous rto estimation 
wtcp rtos 
modifies sack algorithm order achieve reliable transmission rtos 
mechanism described section important aspect wtcp 

controlling ack frequency 
acks carry reliability transmission control information sender receive acks periodically order react new transmission rate perform flow control 
sender tunes desired ack frequency notifies receiver data packet expects receive ack threshold period time 
sender packets pending acknowledgment threshold period time goes blackout mode 
tuning ack frequency governed factors observed ack loss sender half duplex full duplex nature wwan channel average deviation inter ack separation observed sender 
note receiver may voluntarily generate sack immediately observing hole packet sequence 
effects factors controlling acknowledgment frequency part ongoing 

wtcp algorithm wtcp rate control reliability decoupled 
receiver computes desired sending rate rate control mechanisms notifies rate sender ack packets 
acks carry reliability information sack rate control information 
sender monitors reception acks adjusts rate accordingly 
monitors acks tune frequency notifies receiver data packets 
sender packets pending acknowledgments threshold period time goes blackout mode periodically sends probe packets elicit acks receiver recover blackout 
probe packet mechanism loss recovery eliminating need timeout retransmission wtcp 
describe parameters contained packets wtcp describe key functions wtcp 
types packets data ack probe 
contents packets follows data rel seq num seq num hack seq num current rate ack frequency packet size data ack ack seq num seq num updated rate sack probe seq num optional data wtcp reliable transport protocol wireless wide area networks reliability sequence number rel seq num data packet byte sequence number tcp sequencing reliable delivery packets 
congestion control sequence number seq num monotonically increasing packet sequence number distinguishes multiple transmissions packet 
ack packet contains sack acknowledge maximal sequences contiguous data packets received receiver highest congestion control sequence number seq num seen far receiver 
sender variant sack algorithm eliminate retransmit timeouts 
acks sequenced ack sequence number ack seq num monotonically increasing ack sent receiver 
data packet sender contains highest ack sequence number hack seq num seen far information receiver rate control determine sender reacted previous rate adjustment 
parameters data packet include current sending packet separation desired ack frequency packet size data 
parameters ack packet contains desired sending packet separation 
probe packet contains congestion control sequence number seq num data 
case data packets sending probe packet increments seq num 
describe rate control reliability mechanisms wtcp 

rate control choice threshold deciding increase decrease transmission rate crucial design wtcp history computing amount decrease 
key aspects rate control mechanism described increase decrease phase 
recall rate updates epoch 
increase phase probe connection available capacity 
algorithm maintain running average ratio receiver sender inter packet separation update average epoch 
natural question arises point running average ratio heuristic determine rate increased decreased epoch 
order motivate heuristic consider single flow traversing link capacity rate flow denoted link support rate ratio sending receiving rate 
receiver increase sending rate probe network additional bandwidth 
note maximum value link support rate increased value constant increase maximum rate receiver receive ratio sending rate receiving rate translates receive separation separation time interval arrivals bits consecutive packets 
flow decrease rate link able support rate flow 
receive separation defines threshold increase decrease single flow 
constant chosen small percentage capacity experiments chose number bits maximum sized packet rtt making wtcp equally aggressive tcp obtain fair comparison tcp 
history graded multiplicative decrease 
start throttle sending rate soon ratio receiver sender inter packet separation exceeds threshold react quickly incipient congestion rarely get stage packets dropped routers due congestion expect congestion avoidance phase time afford throttle gently incipient congestion traditional tcp 
congestion builds throttle rate aggressively order quickly account built congestion prevent packet losses occurring 
essentially motivates having simple notion history rate control simple gradation rate throttling progressively throttle rate severely back back decrease phases 
algorithm maintaining decrease variable reset encounter increase phase doubled decrease phase 
decrease phase rate throttled fraction 
provides graded multiplicative decrease granularity decrease increases exponentially successive decrease phases previous decrease phase sufficient throttle rate adequately 
result approach incipient congestion handled gentle decrease transmission rate severe congestion handled aggressive decrease transmission rate 
loss occurs reduce sending rate popular tcp friendly limd linear increase multiplicative decrease congestion control 
related explored algorithm detail 
basic tenets approach receiver rate computations uses linear increase graded multiplicative decrease congestion avoidance 
framework mind details rate control algorithm 

rate control algorithm pseudo code rate control algorithm shown 
rate control algorithm events associated true wireless networks large delay component assume deep buffering network 
studies shown true typical wireless data networks 
sinha 
algorithm rate control receiver 
arrival packet receiver periodic timer update 
packet arrives receiver receiver checks see packet sequence 
packet sequence line receiver assumes intermediate packets lost 
receiving order packets 
event losses receiver predicts losses due congestion reduces rate half treats losses random losses react line 
loss predictor uses packet separation heuristic described previous section 
packet received sequence receiver computes separation packet previous packet line 
packet updated rate ratio receiving sending separation computed aggregate ratio samples compute short term long term averages update epoch lines 
update epoch short term average ratio ratio receiving sending separation computed samples obtained epoch line 
long term average ratio limited history ratios smooth effect brief network dynamics 
maintained exponential running average short term averages line 
ratio goes threshold rate decreased 
threshold described earlier receive packet sep 
receive separation packet average receive separation computed epoch obtained product ratio send packet sep 
long term average ratio threshold line implies network able support previous rate rate control algorithm tries probe increasing rate line 
flow enters increase phase decrease variable reset line 
average ratio greater threshold receiver reduces rate decrease variable line 
initial value 
average ratio greater threshold consecutive epochs implies network resources decreased flow give room flow 
rate control algorithm doubles value subject maximum line 

reliability described earlier section rtt estimates inaccurate primarily due low bandwidth nature wireless links 
wtcp notion retransmission timer 
wtcp depends techniques retransmission packets 

sack algorithm 
important steps processing acknowledgment shown pseudo code 
rel seq num represents reliability sequence number packet seq num represents congestion control sequence number packet 
transmitted packet sender keeps wtcp reliable transport protocol wireless wide area networks 
reliability algorithm wtcp sender 
track congestion control sequence number packet send 
ack processing algorithm faster implementation presentation aimed simplicity 
lines executed packets 
packet removed list lines 
packet marked retransmission sender recognizes receiver seen packet larger congestion control sequence number 
packets marked ready retransmission higher transmission priority compared new data packets 

probe packets 
sack algorithm described effectively detects holes recover loss packet packet subsequently transmitted successfully received receiver 
consequently possible sender lose sequence packets run packets send 
concept retransmission timer lost packets recovered 
order solve problem sender data send rate indicates new packet sent sends probe packet 
receiver responds probe packet acknowledgment seq num field ack contains congestion control sequence number larger transmitted packet 
result sack algorithm described kicks detection retransmission packets lines 
note probe packets sent periodically blackout period increasing congestion control sequence numbers order elicit receiver 

performance evaluation currently user level implementation wtcp evaluated cdpd network simulation model wtcp ns simulator 
section results performance tests wtcp practical experiments simulations 

experiments cdpd network performed sets experiments cdpd network accessible chicago illinois bloomington illinois 
set experiments aimed understanding characteristics cdpd network 
results simulate cdpd environment obtain performance comparisons tcp approaches 
second set experiments compared shelf implementation tcp reno available windows linux user level wtcp implementation platforms 
experiments sender mhz pentium pc running linux fixed host 
receiver mhz pentium laptop running windows mobile host 
cdpd device sierra wireless 
performed cdpd experiments different locations speeds mph different times day 
due space constraints typical results obtained traveling mph 

cdpd network characteristics find random loss percentage moving mph sent udp packets bytes intervals min 
short term observed error rate varied long term average 
studying effect back back packets round trip time performed experiments varying burst sizes 
rtt increases linearly burst 
typical values rtt observed packet size bytes shows results experiment byte packets burst size 
shows bursting data packets result high rtt values high variance resulting high rtos 
affects performance tcp tcp experiments described section 
analyzing effectiveness ratio sender side separation receiver side separation measured short term average long term average deviation ratio 
sample plot packets sent interval shown 
graph shows ratio sender side separation receiver side separation short term average weight new sample long term average weight new sample mean deviation long term average weight new sample 
graph clearly shows short term average able capture current network behavior long term average vary shown low mean deviation long term average 
sinha 

rtt burst size packet size bytes 
ratio send recv separation packet sizes bytes sent interval 
shown short term average long term average mean deviation long term average 

performance tcp moving mph 
blackout period captured 

tcp versus wtcp sent kb data tcp reno wtcp various experimental conditions 
average tcp takes send kb data fixed host mobile 
wtcp takes average sending amount data 
total time taken wtcp vary varying loss percentage sending rate wtcp affected random losses 
figures typical tcp wtcp performance results obtained moving speed mph 
random losses perceived sender 
tcp stalls periods waiting reception acks move increase congestion window 
retransmission timeouts rto rto 
losses tcp able recover fast retransmit 
large retransmission timeout approximately slow start mechanism aggressively fills buffers resulting large rtts correspondingly large rtos 
sequences losses blackout periods tcp reacts rto mechanism backs rto value resulting poor performance 
doing slow start retransmission timer run 
slow starts skew rtt rto computations fast queue buildup discussed earlier 
losses 
wtcp enters blackout stops transmission seconds till starts getting acknowledgments receiver 
rate transmission effected random losses 
random losses blackout period soon blackout period wtcp starts sending rate going blackout 
comparison figures shows approximately number losses tcp takes sending kb data wtcp takes inclusive short blackout 
similarly figures wtcp reliable transport protocol wireless wide area networks 
performance wtcp moving mph 
blackout period captured 
find tcp takes send kb data amount time wtcp able send kb data 
tcp distinguish congestion random losses mechanism handle blackouts results expected 
wtcp distinguish congestion random losses recognizes blackouts performs better tcp real cdpd network 

simulations section compare performance wtcp tcp newreno tcp vegas snoop tcp simulations ns simulator 
wtcp protocol implemented ns wtcp agent wtcp sink pair 
wtcp sink computes new value send packet separation information carried back sender ack 
network topology simulations shown 
see packet transmission latency wireless network dominate latency wireline part connection 
results topology representative networks complex wireline topologies 
topology mimic characteristics specific wireless wide area network gives clear picture performance various transport protocols channel low bandwidth significant error rates 
networks cdpd currently offer kbps raw bandwidth expected grow times 
results kbps kbps bandwidth wireless channel 
observed error rate varies widely depending factors location mobile host traveling speed simulations exponential error model mean error rates ranging percent 
rest section presents different sets results 
set results single flow evaluate performance tcp newreno tcp vegas 
network topology 
wtcp different bandwidths error rates 
congestion control primarily concerned total number packets successfully sent specific sequence number packet total number packets received sink compare performances 
subsection uses multiple flows study aggregate throughput obtained fairness characteristics wtcp 
third subsection compare wtcp tcp reno snoop protocol 
snoop protocol ns simulator version broken implemented snoop queue object buffers packets transmitted mobile host filters duplicate acknowledgments necessary retransmits buffered packets arrival duplicate ack 
reflects snoop behavior accurately 
sufficient buffer space provided avoid overflow 
simulations section packet size bytes 

single flow results scenario shown figures wireless bandwidth kbps queue size packets error rates respectively 
demonstrates wtcp provides throughput tcp vegas channel error free 
figures show performance newreno vegas degrade significantly increase error rate 
figures indicate kbps channel error rate wtcp sinha 
error kbps 

error kbps 

error kbps 

error kbps 

error kbps 
provides improvement performance versions tcp considered 
figures wireless bandwidth kbps error rates respectively 
difference performance wtcp mechanisms pronounced smaller bandwidth single flow packets queue keep channel occupied larger 
error kbps 
period time reducing impact drastic reduction sender congestion window 
multiple flows buffer space available single flow resultant throughput decrease 
results section indicate wide area wireless networks wtcp clearly outperforms wire line counterparts 
wtcp reliable transport protocol wireless wide area networks 
new flow 

snoop kbps error 

aggregate sent 

snoop kbps error 

multiple flows subsection study behavior wtcp multiple flows 
cases considered queue size packets bandwidth kbps error rate wireless channel 
scenario shown new flow introduced system existing flow steady state 
new flow results increase receive packet separation old flow 
result old flow increases send packet separation providing room new flow 
indicates new flow manages obtain fair share wireless bandwidth short period time 
parallel lines clearly show wireless bandwidth equally divided new old flows 
gives aggregate throughput obtained flows started time 
aggregate throughput obtained flows wtcp higher obtained mechanisms 
measure fairness fairness index xi xi xi share bandwidth obtained flow total number flows 
fairness index continuous function larger index value better fairness 
congestion control mechanisms considered fair indices ranging 
set simulations serves indicate irrespective starting point flows converge fairness 

snoop protocol figures correspond scenario kbps wireless channel snoop protocol run base station 
queue size set error rates respectively 
channel source base station mbps latency ms latency base station sink ms latency snoop agent mobile host dominates round trip time snoop translate improvement performance 
performance tcp vegas deteriorates snoop interferes early congestion adaptation mechanisms 
considers case error rate 
case wtcp performs bet sinha ter tcp newreno snoop 
tcp newreno reacts drastically self induced congestion losses 
wtcp uses decrease variable provides graded reaction 
note snoop improve performance tcp newreno case losses caused channel errors 
seen subsections losses wtcp performs better tcp newreno 
snoop quite effective hiding losses wireless channel source delay experienced point snoop protocol executes small compared total round trip delay 
cases seen figures provide improvement 

related key features wtcp ability detect wireless losses 
srikant show loss limd linear increase multiplicative decrease algorithms wireless networks sender able exactly distinguish random losses congestion losses 
biaz vaidya show unfortunately currently proposed loss predictors metrics distinguish random losses congestion losses congestion detection metrics practice 
results motivate approach packet losses primary metric congestion detection 
wtcp ratio receiver sender inter packet separation order determine initiate increase phase decrease phase limd algorithm 
biaz vaidya metric predict loss congestion related 
believe detecting reacting incipient congestion powerful mechanisms approach 
wireline networks algorithms tcp vegas tried detect react incipient congestion reduce eliminate packet loss 
specific mechanisms tcp vegas prone unfairness applicable low bandwidth wireless networks round trip time highly affected packet bursts tcp vegas shown 
wireless tcp approaches try existing features tcp take care mobility high error rates 
ceres iftode proposed mechanism fast retransmits 
mobile registers new base station enters fast retransmit mode sends signal 
ways signaling done sending duplicate acks 
similarly tcp approach split connection approach persist mode tcp 
split point tcp connection proxy ack byte forwarded fixed host 
detection link failure tcp layer mobile frozen 
proxy receiving acks mobile advertises zero window ack byte putting fixed host persist mode 
link proxy receives ack mobile resulting proxy informing fixed host true window restarting tcp 
similarities space communication environment mobile wireless environments link outage high latency varying rtt data corruption result research transport layers satellite networks relevant 
propose tp protocol space communications mechanisms enhancing tcp counter problems data corruption link asymmetry limited bandwidth 
mechanisms include icmp messages distinguish various losses header compression efficient selective negative acknowledgment scheme henderson katz proposed stp transport layer protocol satellite link mobile link connecting satellites 
stp low reverse traffic clocked acks receiver 
sender polls periodically status receiver buffer 
receiver send unsolicited status update message sender 
solutions designed care general wireless problems high bit error rate high latency handoff congestion control algorithm solutions tcp 
clear perform cdpd ram 
contrast wtcp addresses issues specific proposes rate control algorithm fundamentally different tcp works efficiently wwan environments 
wtcp extensible environments higher bandwidths lower delays wireless lans 

issues section design implementation issues need addressed wtcp 
briefly explain proposed wtcp 
loss prediction mechanisms 
mentioned earlier wtcp uses loss predictors average packet separation observed receiver 
predictor able correctly predict random losses 
congestion losses mistakenly predicted random losses 
results undesirable late reaction congestion losses 
observed instances mispredictions tests wtcp working improve efficiency predictors determine nature packet loss 
epoch updates 
current implementation wtcp updates epoch 
receiver sends update sender epoch receiver start counting packets evaluating averages sender confirmed receiving update 
packets sent intervening wtcp reliable transport protocol wireless wide area networks period round trip time utilized rate control 
internet behavior 
demonstrated effectiveness wtcp networks wireless latency dominates delay variations delays experienced due queueing wireline switches significant impact delay 
currently investigating performance wtcp wireless networks varying link delay 
impact medium access protocol 
common case data transfer base station mobile host base station typically controls access wireless channel 
uplink case mac protocol determines host obtains access channel situation contention hosts disturb inter packet separation flows 
example csma ca host gets channel greater probability channel access time slot 
uplink flows may rate 
affects rate control mechanism wtcp 
buffer overflow 
wtcp clock data packets rate sender transmitting packets receiver instructs blackout detected 
timeout period declaring blackout typically quite large order rtts 
possibility buffer overflow sender detection blackout 
granularity inter packet separation 
wireless lans mans bandwidths order magnitude higher 
inter packet separation flows networks bound smaller 
decreases threshold increase decrease phase flows 
result observed bandwidths greater mbps efficiency wtcp drops 
looking ways improve wtcp efficiency higher bandwidth networks 
multi hop radio networks 
wtcp targeted hop wireless wide area networks think apply equally multi hop wireless networks metricom 
addition considering networks part area investigating wtcp context ad hoc networks multihop wireless networks links wireless nodes mobile 

wtcp rate rate adjustment performed receiver consequently wtcp burst packets overcomes problems inaccurate round trip time computations handles asymmetric channels 
wtcp uses inter packet separation receiver primary metric rate control congestion related loss detection backup mechanism responding early incipient congestion helps keep algorithm stable time handling congestion related losses causes wtcp react correctly fairly worst case scenarios sudden congestion peaks 
wtcp uses sack retransmission timers loss recovery enables efficient loss recovery going prolonged timeouts worst case 
wtcp provides recovery blackouts startup behavior short lived flows 
summary wtcp handles problems wwan including traditionally ignored related large varying round trip times significant fraction delay incurred wireless segment 
cdpd cellular digital packet data standards technology mcgraw hill new york 
badrinath tcp indirect tcp mobile hosts proceedings international conference distributed computing systems 
balakrishnan padmanabhan seshan katz comparison mechanisms improving tcp performance wireless links proceedings acm sigcomm 
balakrishnan seshan amir katz improving tcp ip performance wireless networks proceedings acm mobi com 
biaz vaidya discriminating congestion losses wireless losses inter arrival times receiver proceedings ieee application specific systems software engineering technology 
brakmo peterson congestion avoidance global internet ieee journal selected areas communications october 
brown singh tcp tcp mobile cellular networks acm computer communications review october 
ceres iftode improving performance reliable transport protocols mobile computing environments ieee journal selected areas communications june 
chiu jain analysis increase decrease algorithms congestion avoidance computer networks journal computer networks isdn june 
desimone chuah yue throughput performance transport layer protocols wireless lans proceedings ieee 
travis miller tcp extensions space communications wireless networks 
henderson katz transport protocols satellite networks ieee journal selected areas communications february 
keshav congestion control computer networks phd thesis uc berkeley 
kim lu bharghavan improving congestion control performance loss differentiation proceedings ieee international conference computers communication 
srikant fairness congestion avoidance schemes heterogeneous networks proceedings international teletraffic congress 
lakshman madhow performance tcp ip networks high bandwidth delay products random loss ieee acm transactions networking june 
mathis mahdavi floyd romanow tcp selective options internet rfc october 
metricom www metricom com sinha kim sinha bharghavan service differentiation rate control wireless packet networks proceedings ieee mobile multimedia conference 
paxson calibrating measurements packet transit times acm sigmetrics performance evaluation review june 
shenker conjectures behavior transmission control random access communication channels proceedings acm sigmetrics 
qualcomm high data rate wireless network www 
qualcomm com hdr wireless data forum www org yavatkar improving performance tcp mobile internetworks proceedings ieee workshop mobile computing systems applications 
narayanan currently motorola labs 
received degree computer science engineering anna university india degree computer science university illinois urbana champaign 
mail labs mot com sivakumar received degree computer science engineering anna university india phd degrees university illinois urbana champaign respectively 
currently assistant professor electrical computer engineering department georgia institute technology 
research interests wireless networks mobile computing network quality service programmable networks 
mail ece gatech edu sinha received tech 
computer science engineering iit delhi india ms computer science michigan state university phd computer science university illinois urbana champaign 
currently bell labs lucent technologies 
research interests computer networking mobile computing 
mail bell labs com bharghavan associate professor electrical computer engineering department university illinois heads timely research group 
research interests mobile computing computer networking 
mail timely crhc uiuc edu phd candidate electrical computer engineering department university illinois affiliated timely research group 
research focuses providing quality service wireless networks 
mail timely crhc uiuc edu 
