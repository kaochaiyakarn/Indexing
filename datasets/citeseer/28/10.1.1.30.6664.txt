index structures path expressions extended tova milo tel aviv university milo math tau ac il dan suciu labs suciu research att com years increased interest managing data conform traditional data models relational object oriented model 
reasons non conformance diverse 
hand data may conform models physical level may stored data exchange formats fetched internet stored structured files 
hand may conform logical level data may missing attributes attributes may different types different data items may heterogeneous collections data may simply specified schema complex changes described easily traditional schema 
term semistructured data refer data 
data model proposed kind data consists edge labeled graph nodes correspond objects edges attributes values 
illustrates semistructured database providing information city 
relational databases traditionally queried associative queries retrieving tuples value attributes 
answer queries efficiently database management systems support indexes translating attribute values tuple ids trees hash tables 
object oriented databases path queries replace simpler associative queries 
data structures proposed answering path queries efficiently access support relations path indexes :10.1.1.15.5296
case semistructured data queries complex may contain generalized path expressions :10.1.1.32.3916
additional flexibility needed order traverse data structure irregular partially unknown user 
example query retrieves restaurants serving lasagna dinner select restaurant menu dinner lasagna starting root database db query searches paths satisfying regular expression restaurant retrieved nodes searches regular expression menu dinner lasagna 
queries evaluated naive evaluation scans database traversing possible paths selects match patterns query obviously expensive 
relational databases traditionally queried associative queries retrieving tuples value attributes 
answer queries efficiently database management systems support indexes translating attribute values tuple ids trees hash tables 
object oriented databases path queries replace simpler associative queries 
data structures proposed answering path queries efficiently access support relations path indexes :10.1.1.15.5296
case semistructured data queries complex may contain generalized path expressions :10.1.1.32.3916
additional flexibility needed order traverse data structure irregular partially unknown user 
example query retrieves restaurants serving lasagna dinner select restaurant menu dinner lasagna starting root database db query searches paths satisfying regular expression restaurant retrieved nodes searches regular expression menu dinner lasagna 
queries evaluated naive evaluation scans database traversing possible paths selects match patterns query obviously expensive 
case relational oo databases indexes speed evaluation queries 
index structures applicable semistructured data schema missing unavailable partially known 
extreme full text indexing systems take opposite approach 
knowledge structure information index data 
limited semistructured data partial knowledge structure may available exploited queries query dinner item appears inside menu 
addressed problem efficiently evaluating path expressions semistructured databases :10.1.1.15.9610:10.1.1.25.9024
focused mainly deriving schema information rewrite queries guide search 
issue indexing ignored 
exception dataguides record information existing paths database index 
scope dataguides restricted queries single regular expression adequate complex queries having regular expressions variables 
second show index efficiently constructed 
dataguides required powerset construct underlying database worst case exponential cost contrast indexes rely computation simulation bisimulation relation efficient algorithms exists 
third offer guarantees size index 
example size index associated single regular expressions linear database contrast dataguides worst case exponential experiments show 
third show turn elegant generalizations index structures considered previously various contexts dataguides semistructured data pat trees full text indexes access support relations oodbs :10.1.1.15.5296
index starts grouping database objects equivalence classes containing objects indistinguishable class paths defined path template described 
computing equivalence relation may expensive pspace complete consider finer equivalence classes defined bisimulation simulation efficiently computable 
index built equivalence classes constructing non deterministic automaton states represent equivalence classes transitions correspond edges objects classes 
index designed particular class queries template answer queries general forms 
simple problem ptime 
connection related indexes flexible structures fine tuned tradeoff space generality 
capture indexes templates respectively 
generalize traditional relational indexes assuming encoding relational databases index attribute relation captured template tup generalize path indexes oodbs 
example kemper moerkotte describe access support relation asr index structure query paths oodbs :10.1.1.15.5296
asr designed evaluate efficiently paths form object attribute names 
define access support relation asr ary relation un iff exists path un database 
ignoring mismatch object oriented semistructured data model exists close relationship asr index template xn graph structure index chain nodes un terminal node associated extension extension precisely asr 
indexing mechanism called index aimed assist evaluating query paths semistructured data 
technical report oed university waterloo 
monika henzinger thomas henzinger peter 
computing simulations finite infinite graphs 
proceedings th symposium foundations computer science pages 
kemper guido :10.1.1.15.5296
access support relations indexing method object bases 
information systems 
alon levy alberto mendelzon yehoshua sagiv divesh srivastava 
answering queries views 
