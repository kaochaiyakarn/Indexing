uml analysis design multi agent systems stephan flake christian geiger jochen lab paderborn germany email chris lab de visual modeling facilities uml provide sufficient means support design multi agent systems 
investigating development phases requirements analysis design code generation multi agent systems 
requirements analysis phase extended case diagrams identify agents relationship environment 
design phase stereotyped class object diagrams model different agent types related goals strategies 
diagrams define static agent system architecture dynamic agent behavior modeled statecharts respect bdi agent approach 
concerning code generation show diagrams taken generate code casa executable agent specification language integrated existing multi agent framework 
micro view considers local behavior individual agent strategies knowledge behavior environment interaction beliefs desire intention investigated macro view communication interaction agent community significant interest methods techniques specifying modeling implementing verifying multi agent systems mas standardized design methodology established far 
interesting agent metaphor claims especially suitable aspects complex systems early design stages approaches considered visual modeling approaches 
success unified modeling language uml unifying different object oriented approaches led idea applying uml design mas 
uml provide means capturing agent related modeling aspects autonomy cooperation 
consequence efforts extend uml modeling agent systems :10.1.1.103.1632
uml improvements focused macro aspects agent systems agent interaction communication design micro aspects agents goals complex strategies knowledge missed 
knowledge approaches cover complete uml design mas application respect analysis design code generation 
focus aspects uml engineering approach casa mas designed support rapid prototyping autonomous agents complex behavior 
uml modeling agents currently software systems built object orientation 
