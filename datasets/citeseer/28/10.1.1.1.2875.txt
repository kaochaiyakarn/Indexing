offering precision performance tradeoff aggregation queries replicated data strict consistency replicated data infeasible required distributed applications current systems permit stale replication cached copies data values allowed date 
queries cached data return answer quickly stale answer may imprecise 
alternatively queries remote master data return precise answer potentially poor performance 
bridge gap extremes propose new class replication systems called trapp tradeoff replication precision performance 
trapp systems give user fine grained control tradeoff precision performance caches store ranges guaranteed bound current data values storing stale exact values 
users supply quantitative precision constraint query 
exact transactional consistency infeasible performance perspective large systems variety reasons supported national science foundation iis nasa ames ncc national science foundation graduate research fellowship 
permission copy fee part material granted provided copies distributed direct commercial advantage vldb copyright notice title publication date appear notice copying permission large data base endowment 
copy republish requires fee special permission endowment 
proceedings th vldb conference cairo egypt 
chris jennifer widom stanford university widom db stanford edu outlined distributed applications exact consistency simply requirement :10.1.1.116.1182
world wide web general example stale replication system master copies pages maintained web servers stale copies cached web browsers 
web architecture reading stale cached data kept browser significantly better performance retrieving master copy web server accomplished pressing browser refresh button cached copy may arbitrarily date 
example stale replication system data warehouse view data objects operational databases master copies data warehouse multiple data marts stale cached copies 
querying cached data warehouse typically faster querying master copies operational sites 
write vi mean exact value current time vi tc 
done preliminary investigating appropriate bound functions deduced absence additional information update behavior appropriate functions expand square root elapsed time 
hi li tr tr time refresh 
proportionality parameter determines width bound chosen run time 
interested reader referred details :10.1.1.1.2875
query execution bounded answers executing trapp ag query precision constraint may involve combining precise data stored remote sources bounded data stored local cache 
section describe general bounded aggregation queries executed cost model algorithms choose cached data objects refresh answering queries 
remainder assume relational model trapp ag implemented data model supports aggregation numerical values 
consider single table trapp ag queries form 
consider selection predicate involving column contains bounded values 
system partition disjoint sets andt contains tuples possibly satisfy predicate current bounded data 
contains tuples guaranteed satisfy predicate current bounded data 
tuples meaning exist precise values current bounds cause predicate satisfied values cause predicate satisfied 
process classifying tuples andt selection predicate involves column bounded values detailed :10.1.1.1.2875
interesting aspect filters find tuples expressed simple predicates bounded value endpoints algorithms computing bounded answers choosing tuples refresh examine tuples 
classification expressed sql queries optimized system possibly incorporating specialized indexes discussed section 
examples remainder section refer shows classification different predicates data exact values refreshed 
computing min selection predicate selection predicate bounded min answer la ha min ti 
computing upper bound avg reverse 
example consider query section asks average latency links having traffic 
compute lower bound start averaging low endpoints tuples average low endpoints tuples obtain lower bound average latency 
point averaging tuples increase lower bound 
computation formalized worst case running time log :10.1.1.1.2875
looser bound avg computed linear time computing sum count algorithms sections setting la ha min max example 
linear algorithm yields 
notice bound looser bound achieved log algorithm 
choosing tuples refresh choose complicated scenario 
looser bound avg computed linear time computing sum count algorithms sections setting la ha min max example 
linear algorithm yields 
notice bound looser bound achieved log algorithm 
choosing tuples refresh choose complicated scenario 
details provided :10.1.1.1.2875
give brief description 
choose algorithm uses fact loose bound avg achieved function bounds sum count linear algorithm section 
choose refresh tuples provide bounds sum count bound avg function bounds sum count meets precision constraint 
interaction accomplished modified version choose algorithm understands choice refresh tuples sum affects bound count 
freeman new york new york 
gibbons 
new sampling summary statistics improving approximate query answers 
proceedings acm sigmod international conference management data pages seattle washington june 
gray neil shasha :10.1.1.116.1182
dangers replication solution 
proceedings acm sigmod international conference management data pages montreal canada june 
hanson huang park 
scalable trigger processing 
