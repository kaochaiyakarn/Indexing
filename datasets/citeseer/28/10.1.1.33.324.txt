brics basic research computer science buffer tree new technique optimal algorithms lars arge brics report series rs issn august copyright fl brics department computer science university aarhus 
rights reserved 
reproduction part permitted educational research condition copyright notice included copy 
see back inner page list publications brics report series 
copies may obtained contacting brics department computer science university aarhus ny building dk aarhus denmark telephone internet brics brics dk brics publications general accessible www anonymous ftp www brics dk ftp ftp brics dk cd pub brics buffer tree new technique optimal algorithms lars arge brics department computer science university aarhus aarhus denmark august develop technique transforming tree data structure external memory structure 
show technique develop search tree structure priority queue dimensional range tree segment tree give examples structures develop efficient algorithms 
email large brics dk acronym basic research computer science center danish national research foundation 
years attention input output complexity existing algorithms development new algorithms 
due fact communication fast internal memory slower external memory bottleneck large scale computations 
significance bottleneck increasing internal computation gets faster especially parallel computing gains popularity 
currently technological advances increasing cpu speed annual rate disk transfer rates increasing :10.1.1.117.39
lot done designing external memory versions known internal memory data structures practically data structures designed line settings queries answered immediately worst case number os :10.1.1.35.1453:10.1.1.16.4346:10.1.1.156.2115
effectively means structures solve line problems yields non optimal algorithms able take full advantage large internal memory 
number researchers developed techniques algorithms solving large scale line problems external memory data structures 
develop external data structures take advantage large main memory 
years attention input output complexity existing algorithms development new algorithms 
due fact communication fast internal memory slower external memory bottleneck large scale computations 
significance bottleneck increasing internal computation gets faster especially parallel computing gains popularity 
currently technological advances increasing cpu speed annual rate disk transfer rates increasing :10.1.1.117.39
lot done designing external memory versions known internal memory data structures practically data structures designed line settings queries answered immediately worst case number os :10.1.1.35.1453:10.1.1.16.4346:10.1.1.156.2115
effectively means structures solve line problems yields non optimal algorithms able take full advantage large internal memory 
number researchers developed techniques algorithms solving large scale line problems external memory data structures 
develop external data structures take advantage large main memory 
done requiring amortized performance operations structures allowing search operations batched 
path caching technique optimal external searching 
proc 
acm symp 
principles database systems 
ruemmler wilkes :10.1.1.117.39
disk drive modeling 
ieee computer 

dynamic data structures multiple storage media 
