framework programming embedded systems initial design results sebastian thrun thrun cs cmu edu computer science department carnegie mellon university pittsburgh pa describes ces proto type new programming language robots embedded systems equipped sensors actuators 
ces contains new ideas currently programming languages support computing uncertain information support adaptation teaching means programming 
innovations facilitate rapid development software embedded systems demonstrated mobile robot application 

introduces ces new language programming robots 
ces short embedded systems supports development adaptable code instructing robots ces interleaves phases conventional programming training code improved examples 
example pomerleau alvinn system trained artificial neural network map camera images steering directions autonomous land vehicle 
approximately minutes training system provided remarkable level skill driving various types roads wide range conditions 
coding skill manually difficult colleagues shown 
example demonstrates adaptable software appropriately may reduce design time robotic software substantially 
employed neural networks sensor interpretation mapping tasks aspects led mobile robot successfully navigates densely crowded public places :10.1.1.127.9683
argued neural networks led significant speed software development provided enhanced level flexibility robot easily retrained new conditions demonstrated aaai mobile robot competition :10.1.1.30.8073
importance learning robotics long recognized 
despite enormous research effort direction learning little impact robotics 
partially research robot learning focused design general purpose learning algorithms keep amount task specific knowledge minimum 
approximately minutes training system provided remarkable level skill driving various types roads wide range conditions 
coding skill manually difficult colleagues shown 
example demonstrates adaptable software appropriately may reduce design time robotic software substantially 
employed neural networks sensor interpretation mapping tasks aspects led mobile robot successfully navigates densely crowded public places :10.1.1.127.9683
argued neural networks led significant speed software development provided enhanced level flexibility robot easily retrained new conditions demonstrated aaai mobile robot competition :10.1.1.30.8073
importance learning robotics long recognized 
despite enormous research effort direction learning little impact robotics 
partially research robot learning focused design general purpose learning algorithms keep amount task specific knowledge minimum 
example virtually robotics research reinforcement learning evolutionary computation seeks establish algorithms learn entire mapping sensors actuators scratch :10.1.1.41.395:10.1.1.39.9871
argued neural networks led significant speed software development provided enhanced level flexibility robot easily retrained new conditions demonstrated aaai mobile robot competition :10.1.1.30.8073
importance learning robotics long recognized 
despite enormous research effort direction learning little impact robotics 
partially research robot learning focused design general purpose learning algorithms keep amount task specific knowledge minimum 
example virtually robotics research reinforcement learning evolutionary computation seeks establish algorithms learn entire mapping sensors actuators scratch :10.1.1.41.395:10.1.1.39.9871
consequently field resorts narrow assumptions full observability environment state abundance training data 
current best demonstrations reinforcement learning robotics solve relatively simple tasks collision avoidance coordination legged locomotion visual servoing 
advocates integration conventional programming learning 
argue conventional programming rasa learning just ends spectrum shown 
shown close correspondence computing values computing probability distributions values 
exist straightforward ways merging conventional probabilistic data 
course representing probability distributions probabilistic variables duals take handful values extremely memory intense 
example delta numbers needed specify arbitrary probability distribution floating point values byte resolution 
statistical literature offers compact representations mixtures gaussians piecewise constant functions monte carlo approximations trees variable resolution methods :10.1.1.36.8357:10.1.1.31.7646
current implementation probability distributions represented piecewise constant density functions 
granularity function determined programmer setting system level variable prob dist resolution default 
constants ces offers variety ways assign distributions probabilistic variables 
statement assigns distribution probability centered pr ae finite probability distributions specified lists 
constants ces offers variety ways assign distributions probabilistic variables 
statement assigns distribution probability centered pr ae finite probability distributions specified lists 
lists consist tuples composed number event probability 
example assignment assigns distribution probabilistic variable pr ces possesses definitions commonly probability distributions 
statement uniform initializes probabilistic variable dimensional uniform distribution interval :10.1.1.18.4669
statement normal assigns normal distribution mean variance 
predefined constants ces cover large number common distributions certain distributions specified directly 
described turn distributions combined various arithmetic operations 
alternative way initializing probabilistic variables probloop command described 
independence ces computing probabilistic variables ces implicit independence assumptions different probabilistic variables 
consider example statement type ces assumes independent ces assumes joint distribution product marginal distributions pr pr pr important notice independence assumption necessary 
results statements usually ill defined 
demonstrate point assume identically distributed pr pr independent pr gamma dependent pr ae reader quickly notice equivalent absence independence assumption similar assumption assignments ces defined 
independence assumption ces fact ces possess inference mechanism type bayes networks important consequences :10.1.1.112.8434
appear obvious 
consider example statement initial conditions specified result distribution 
slightly complicated sequence statements leads distribution specified 
executing second instruction variables assumed independent 
training operator permits combination different variable types probabilistic non probabilistic variables share dimensionality 
induced error metric basis parameter change depends variable types gamma non probabilistic gamma pr dx probabilistic non probabilistic gamma pr dy non probabilistic probabilistic gamma pr pr dx dy probabilistic key feature ces programmer provide target signals directly output function approximator 
suffices provide target signals variable values depend parameters function approximator 
example code appropriate training signals instruct mobile robot turn parallel wall 
float sonars probfloat turn angle float target turn fa float probfloat angle sonars pi turn angle pi turn programmer specifies example example basis amount direction robot turn parallel wall :10.1.1.9.313
assume value stored variable target turn 
target values modify parameters modifying function maps sonar measurements angle 
assume sonar scans available variable sonars pi numerical constant ces updates parameters gradient descent 
solve problem credit assignment time variable updated ces computes gradients value respect relevant function approximator parameters weights neural networks 
diagrams horizontal axis corresponds time vertical axis angle corridor darker value higher likelihood 
corridor angle developing code recognizing obvious feature environment angle corridor relative robot 
angle denoted ff lies 
due symmetry corridor corridor angle insufficient determine global heading direction knowledge ff useful reduces space heading directions possibilities leaving open corridor robot facing 
code appropriate training tracks corridor angle ff fa net sonar probfloat alpha alpha local prob rotation float alpha target float scan struct float rotation odometry data alpha uniform pi net sonar float probfloat get sonar scan alpha local net sonar scan pi alpha alpha alpha local get odometry data prob rotation probfloat odometry data rotation normal odometry data rotation alpha prob rotation alpha alpha pi alpha pi get target alpha target alpha functions type get xxx part robot application interface discussed :10.1.1.9.313
line numbers added reader convenience 
important variable alpha probabilistic variable keeps date estimate corridor angle 
line alpha initialized uniformly indicating initially robot unaware orientation 
angle alpha modified types information sonar scans odometry 
interesting notice sonar odometry data needed tracking ff 
sonar data robot determine initial angle unable track ff 
illustrates alpha local produce accurate estimates ff robot able track ff 
sources information needed built geometric model relates odometry wall angle 
heading direction extend program compute heading direction robot called differs corridor angle defined just ff :10.1.1.117.6173
exploit fact ff mod corridor angle heading direction modulo information regarding corridor robot facing 
global localization highly symmetric environments challenging assumption initially robot faces corridor 
code inserted program specified alpha local compute theta local turn compute estimate theta heading direction probfloat theta local theta heading direction estimate target training set heading direction estimate target testing set time plot heading direction training testing set :10.1.1.117.6173
robot accurately tracks heading direction 
sources information needed built geometric model relates odometry wall angle 
heading direction extend program compute heading direction robot called differs corridor angle defined just ff :10.1.1.117.6173
exploit fact ff mod corridor angle heading direction modulo information regarding corridor robot facing 
global localization highly symmetric environments challenging assumption initially robot faces corridor 
code inserted program specified alpha local compute theta local turn compute estimate theta heading direction probfloat theta local theta heading direction estimate target training set heading direction estimate target testing set time plot heading direction training testing set :10.1.1.117.6173
robot accurately tracks heading direction 
coin 
theta uniform pi probloop alpha local coin theta local coin theta local alpha local theta local alpha local pi theta theta theta local theta prob rotation theta theta pi theta pi theta theta trick lies probabilistic variable coin maps probabilistic variable alpha local :10.1.1.117.6173:10.1.1.117.6173
specifically lines copies probability alpha local probabilistically theta local distribution theta local equal shape distribution alpha local 
global localization highly symmetric environments challenging assumption initially robot faces corridor 
code inserted program specified alpha local compute theta local turn compute estimate theta heading direction probfloat theta local theta heading direction estimate target training set heading direction estimate target testing set time plot heading direction training testing set :10.1.1.117.6173
robot accurately tracks heading direction 
coin 
theta uniform pi probloop alpha local coin theta local coin theta local alpha local theta local alpha local pi theta theta theta local theta prob rotation theta theta pi theta pi theta theta trick lies probabilistic variable coin maps probabilistic variable alpha local :10.1.1.117.6173:10.1.1.117.6173
specifically lines copies probability alpha local probabilistically theta local distribution theta local equal shape distribution alpha local 
sense global heading direction obtained appropriate initialization 
line confines actual heading direction initial interval ruling 
updating theta just alpha robot considers possible global heading directions considered initial likelihood zero 
practice program proved extremely reliable delivering mail populated corridor 
shows raw data collected delivery missions correctly delivered pieces mail 
suggests raw odometry inaccurate reliably track robot position 
main declarations fa net sonar net net net left net right probfloat alpha alpha local prob rotation probfloat theta local theta trans vel rot vel probfloat local local prob coin 
gesture left gesture right compound probfloat east west new sonar float alpha target scan image float target target goal goal float theta goal theta diff struct float rotation odometry data struct float dir stack int num goals active goal initialization alpha uniform pi theta uniform pi net sonar float probfloat net probfloat probfloat net probfloat probfloat net left probfloat net right probfloat home home main loop localization get sonar scan alpha local net sonar scan pi alpha alpha alpha local probloop alpha local coin theta local coin theta local alpha local theta local alpha local pi theta theta theta local probloop theta new sonar int theta pi scan scan local net new sonar local net new sonar local local get odometry data prob rotation probfloat odometry data rotation normal odometry data rotation alpha prob rotation alpha alpha pi alpha pi theta prob rotation theta theta pi theta pi theta theta prob probfloat odometry data normal odometry data prob cos theta prob sin theta gesture interface scheduler get image image gesture left net left image gesture right net right image num goals float gesture left stack num goals stack num goals stack num goals dir float gesture right stack num goals stack num goals stack num goals dir num goals stack num goals home stack num goals home stack num goals dir active goal stack active goal dir float stack active goal set vel active goal active goal depth active goal horn get button num goals navigation goal stack active goal goal stack active goal probloop theta goal goal trans vel rot vel theta goal goal goal theta diff theta goal theta theta diff theta diff pi theta diff pi theta diff rot vel max rot vel rot vel max rot vel theta diff pi trans vel trans vel max trans vel float rot vel float trans vel sonar set vel training get target alpha target alpha get target target get target target get target target left gesture left get target target right gesture right table complete ces implementation mail delivery program :10.1.1.9.313
phase wait carrier move location deliver mail return home position wait corridor angle alpha orientation theta coordinate coordinate left arm right arm probabilistic translational velocity trans vel max likelihood weighted translational velocity max probabilistic rotational velocity rot vel max max likelihood weighted rotational velocity max max time plot key variables successful mail delivery 
see text 
illustrates noise sonar measurements partially caused total reflection partially caused people walking close robot 
testing runs program tracked position reliably error meter successfully delivered mail correct recipients 
ces program code specifies directly computation involved arriving result ces lacks generalpurpose inference mechanism type discussed 
fields robotics procedural languages far popular programming tool 
comparison declarative languages procedural languages offer tighter control program execution enable programmers arrive efficient solutions facilitate debugging software development 
issue integrating learning inference systems studied 
example explanation learning theory refinement inductive logic programming led variety learning algorithms modify programs written order logic examples :10.1.1.51.3526:10.1.1.101.4125:10.1.1.122.3371
research teams integrated learning algorithms problem solving architectures soar prodigy theo 
architectures require declarative theories domain built theorem provers special purpose planners generate control 
learning applied modify domain theory response observations speed reasoning process 
systems humans observed learn models problem solving strategies order facilitate subsequent problem solving 
common practice program embedded systems procedural programming languages 
machine learning point view program code ces analogous domain theories ai architectures discussed 
ces domain theory procedural code integrates convenience conventional programming advantages adaptive mechanisms mechanisms handling uncertain information 
probabilistic representations proven useful variety application domains 
bayes networks markov chains demonstrated theoretical practical ends usefulness probabilistic representations real world :10.1.1.134.2462:10.1.1.41.1514
robotics integrating uncertain sensor information time bayes rule common practice 
example approaches grid maps approach learning environmental model originally proposed moravec elfes applied numerous successful robotic systems employs update rules equivalent bayes operator ces 
markov localization probabilistic method mobile robot localization enjoyed enormous practical success uses bayes rule integrating sensor information :10.1.1.127.9683:10.1.1.31.7646:10.1.1.30.8073:10.1.1.44.2639
hidden markov models kalman filters dynamic belief networks successful approaches employ bayes rule temporal domains 
probabilistic representations proven useful variety application domains 
bayes networks markov chains demonstrated theoretical practical ends usefulness probabilistic representations real world :10.1.1.134.2462:10.1.1.41.1514
robotics integrating uncertain sensor information time bayes rule common practice 
example approaches grid maps approach learning environmental model originally proposed moravec elfes applied numerous successful robotic systems employs update rules equivalent bayes operator ces 
markov localization probabilistic method mobile robot localization enjoyed enormous practical success uses bayes rule integrating sensor information :10.1.1.127.9683:10.1.1.31.7646:10.1.1.30.8073:10.1.1.44.2639
hidden markov models kalman filters dynamic belief networks successful approaches employ bayes rule temporal domains 
ces bayes operator supports approaches 
fact algorithms principle implemented efficiently ces conventional programming languages 
tradition ai probabilistic algorithms focuses efficient inference problem solving 
languages address certain aspects arise interacting complex dynamic environments unexpected conditions force robot deviate previously generated plan address uncertainty robotic perception 
fact typically assume important events detected sufficient certainty 
programming languages include learning phases 
argued vast majority research field robot learning focuses rasa learning methods 
particular approaches reinforcement learning evolutionary computation genetic programming currently lack necessary flexibility integrate prior knowledge subject scaling limitations especially training data scarce :10.1.1.134.2462:10.1.1.32.7692:10.1.1.117.6173
reinforcement learning example common ways insert knowledge include choice input representations type function approximator generalization ways decompose controllers hierarchically :10.1.1.20.3760:10.1.1.51.4764
similarly genetic programming gives users choice data representations building blocks programs evolve genetic operators search 
robotics programmers knowledge expressed easily terms knowledge performance task environment generic knowledge laws physics geometry 
inability integrate knowledge learning difficult approaches learn complex controllers limited amounts data 
fact typically assume important events detected sufficient certainty 
programming languages include learning phases 
argued vast majority research field robot learning focuses rasa learning methods 
particular approaches reinforcement learning evolutionary computation genetic programming currently lack necessary flexibility integrate prior knowledge subject scaling limitations especially training data scarce :10.1.1.134.2462:10.1.1.32.7692:10.1.1.117.6173
reinforcement learning example common ways insert knowledge include choice input representations type function approximator generalization ways decompose controllers hierarchically :10.1.1.20.3760:10.1.1.51.4764
similarly genetic programming gives users choice data representations building blocks programs evolve genetic operators search 
robotics programmers knowledge expressed easily terms knowledge performance task environment generic knowledge laws physics geometry 
inability integrate knowledge learning difficult approaches learn complex controllers limited amounts data 
ces critically departs line thought adopts powerful commonly accepted method programming robots benefits learning 
idea probabilistic data types programming uncertain information analogous programming conventional data types added benefit increased robustness performance 
demonstrate usefulness concepts practice described programming gesture driven mobile mail delivery robot 
short ces program lines hour training demonstrated control mobile robot highly reliably delivering mail interacting postal carrier populated corridor 
comparable programs conventional programming languages typically orders magnitude larger requiring higher development costs 
extended version demonstrated code state art probabilistic localization algorithm orders magnitude compact ces current implementation ces possesses limitations warrant research ffl currently lack suitable interpreter compiler ces :10.1.1.40.2548:10.1.1.40.2548
fact experiments carried library functionally equivalent ces syntactically 
limitation purely limitation current implementation conceptual difficulty syntax language defined 
ffl current implementation uses piecewise constant functions representation probability distributions 
representations suffer limitations 
ijcai july 
buhmann burgard cremers fox hofmann schneider thrun 
mobile robot rhino 
ai magazine 
burgard cremers fox lakemeyer schulz steiner thrun :10.1.1.127.9683
interactive museum tour guide robot 
proceedings aaai fifteenth national conference artificial intelligence 
burgard fox hennig schmidt :10.1.1.31.7646
estimating absolute position mobile robot position probability grids 
ai magazine 
burgard cremers fox lakemeyer schulz steiner thrun :10.1.1.127.9683
interactive museum tour guide robot 
proceedings aaai fifteenth national conference artificial intelligence 
burgard fox hennig schmidt :10.1.1.31.7646
estimating absolute position mobile robot position probability grids 
proceedings thirteenth national conference artificial intelligence menlo park august 
aaai aaai press mit press 
castelli cover 
journal royal statistical society series 
maurer 
seeing passenger car 
proceedings international symposium intelligent vehicles paris france 
dietterich :10.1.1.9.313
maxq method hierarchical reinforcement learning 
proceedings international conference machine learning madison wi 
dietterich 
learning knowledge level 
machine learning 
thrun 
explanation neural network learning lifelong learning approach 
kluwer academic publishers boston ma 
thrun :10.1.1.40.2548
bayesian landmark learning mobile robot localization 
machine learning 
thrun :10.1.1.40.2548
framework programming embedded systems initial design results 
kluwer academic publishers boston ma 
thrun :10.1.1.40.2548
bayesian landmark learning mobile robot localization 
machine learning 
thrun :10.1.1.40.2548
framework programming embedded systems initial design results 
technical report cmu cs carnegie mellon university computer science department pittsburgh pa 
thrun 
learning metric topological maps indoor mobile robot navigation 
