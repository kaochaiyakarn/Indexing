temporal description logic reasoning conceptual schemas queries alessandro artale enrico franconi frank wolter michael zakharyaschev dept computation umist manchester uk artale umist ac uk dept computer science univ manchester uk franconi cs man ac uk inst 
fur informatik univ leipzig wolter informatik uni leipzig de dept computer science kings college london uk mz dcs ac uk 
introduces new logical formalism intended temporal conceptual modelling natural combination known description logic dlr point linear temporal logic 
expressive power resulting dlrus logic illustrated providing characterisation important temporal conceptual modelling constructs appeared literature 
define query language queries non recursive datalog programs atoms complex dlrus expressions investigate problem checking query containment constraints defined dlrus conceptual schemas dlrus knowledge bases problems schema satisfiability logical implication 
shown reasoning full dlrus undecidable identify decidable sense maximal fragment dlr allowing applications temporal operators formulas class expressions relation expressions 
define query language queries non recursive datalog programs atoms complex dlrus expressions investigate problem checking query containment constraints defined dlrus conceptual schemas dlrus knowledge bases problems schema satisfiability logical implication 
shown reasoning full dlrus undecidable identify decidable sense maximal fragment dlr allowing applications temporal operators formulas class expressions relation expressions 
obtain hierarchy complexity results reasoning dlr atomic formulas exptime complete satisfiability logical implication arbitrary dlr formulas expspace complete problem checking query containment non recursive datalog queries dlr constraints decidable exptime 
temporal information systems information systems store historical information past potential data 
proposed temporal information systems order temporal logic :10.1.1.53.41
useful characterising semantical problems arising ontologies temporal databases conceptual modelling querying usually computationally unfeasible performing deduction tasks example logical implication order temporal logic flow time hz hn recursively enumerable 
note interested deduction model checking 
obvious solution problem look behaved fragments order temporal logic see way successful promising approach know :10.1.1.41.6253:10.1.1.53.41
idea deviate order paradigm start computationally friendly languages description logics area non temporal information management characterise uniform framework conceptual modelling queries :10.1.1.25.3065
temporal information systems information systems store historical information past potential data 
proposed temporal information systems order temporal logic :10.1.1.53.41
useful characterising semantical problems arising ontologies temporal databases conceptual modelling querying usually computationally unfeasible performing deduction tasks example logical implication order temporal logic flow time hz hn recursively enumerable 
note interested deduction model checking 
obvious solution problem look behaved fragments order temporal logic see way successful promising approach know :10.1.1.41.6253:10.1.1.53.41
idea deviate order paradigm start computationally friendly languages description logics area non temporal information management characterise uniform framework conceptual modelling queries :10.1.1.25.3065
temporal description logic dlrus devise expressive decidable description logic dlr allows logical reconstruction extension representational tools object oriented data models class diagrams uml odmg semantic data models extended entity relationship eer frame web ontology languages oil daml oil :10.1.1.107.5728:10.1.1.135.5183
setting interesting feature dlr ability completely define classes relations dlr views classes relations conceptual schema 
dlr formulas express large class integrity constraints typical databases instance existence dependencies exclusion dependencies typed inclusion dependencies projection relations unary inclusion dependencies full key dependencies :10.1.1.25.3065
proposed temporal information systems order temporal logic :10.1.1.53.41
useful characterising semantical problems arising ontologies temporal databases conceptual modelling querying usually computationally unfeasible performing deduction tasks example logical implication order temporal logic flow time hz hn recursively enumerable 
note interested deduction model checking 
obvious solution problem look behaved fragments order temporal logic see way successful promising approach know :10.1.1.41.6253:10.1.1.53.41
idea deviate order paradigm start computationally friendly languages description logics area non temporal information management characterise uniform framework conceptual modelling queries :10.1.1.25.3065
temporal description logic dlrus devise expressive decidable description logic dlr allows logical reconstruction extension representational tools object oriented data models class diagrams uml odmg semantic data models extended entity relationship eer frame web ontology languages oil daml oil :10.1.1.107.5728:10.1.1.135.5183
setting interesting feature dlr ability completely define classes relations dlr views classes relations conceptual schema 
dlr formulas express large class integrity constraints typical databases instance existence dependencies exclusion dependencies typed inclusion dependencies projection relations unary inclusion dependencies full key dependencies :10.1.1.25.3065
logical implication dlr exptime complete practical correct complete algorithms exist conceptual modelling applications :10.1.1.25.3065:10.1.1.3.3322
useful characterising semantical problems arising ontologies temporal databases conceptual modelling querying usually computationally unfeasible performing deduction tasks example logical implication order temporal logic flow time hz hn recursively enumerable 
note interested deduction model checking 
obvious solution problem look behaved fragments order temporal logic see way successful promising approach know :10.1.1.41.6253:10.1.1.53.41
idea deviate order paradigm start computationally friendly languages description logics area non temporal information management characterise uniform framework conceptual modelling queries :10.1.1.25.3065
temporal description logic dlrus devise expressive decidable description logic dlr allows logical reconstruction extension representational tools object oriented data models class diagrams uml odmg semantic data models extended entity relationship eer frame web ontology languages oil daml oil :10.1.1.107.5728:10.1.1.135.5183
setting interesting feature dlr ability completely define classes relations dlr views classes relations conceptual schema 
dlr formulas express large class integrity constraints typical databases instance existence dependencies exclusion dependencies typed inclusion dependencies projection relations unary inclusion dependencies full key dependencies :10.1.1.25.3065
logical implication dlr exptime complete practical correct complete algorithms exist conceptual modelling applications :10.1.1.25.3065:10.1.1.3.3322
dlr powerful language conceptual modelling 
obvious solution problem look behaved fragments order temporal logic see way successful promising approach know :10.1.1.41.6253:10.1.1.53.41
idea deviate order paradigm start computationally friendly languages description logics area non temporal information management characterise uniform framework conceptual modelling queries :10.1.1.25.3065
temporal description logic dlrus devise expressive decidable description logic dlr allows logical reconstruction extension representational tools object oriented data models class diagrams uml odmg semantic data models extended entity relationship eer frame web ontology languages oil daml oil :10.1.1.107.5728:10.1.1.135.5183
setting interesting feature dlr ability completely define classes relations dlr views classes relations conceptual schema 
dlr formulas express large class integrity constraints typical databases instance existence dependencies exclusion dependencies typed inclusion dependencies projection relations unary inclusion dependencies full key dependencies :10.1.1.25.3065
logical implication dlr exptime complete practical correct complete algorithms exist conceptual modelling applications :10.1.1.25.3065:10.1.1.3.3322
dlr powerful language conceptual modelling 
problem view query processing dlr constraints studied :10.1.1.25.3065
view query answering requires answer query virtual database constrained dlr theory playing role conceptual schema integrity constraints information comes set materialised views database problem non recursive datalog queries views np complete problem data complexity closed world assumption 
idea deviate order paradigm start computationally friendly languages description logics area non temporal information management characterise uniform framework conceptual modelling queries :10.1.1.25.3065
temporal description logic dlrus devise expressive decidable description logic dlr allows logical reconstruction extension representational tools object oriented data models class diagrams uml odmg semantic data models extended entity relationship eer frame web ontology languages oil daml oil :10.1.1.107.5728:10.1.1.135.5183
setting interesting feature dlr ability completely define classes relations dlr views classes relations conceptual schema 
dlr formulas express large class integrity constraints typical databases instance existence dependencies exclusion dependencies typed inclusion dependencies projection relations unary inclusion dependencies full key dependencies :10.1.1.25.3065
logical implication dlr exptime complete practical correct complete algorithms exist conceptual modelling applications :10.1.1.25.3065:10.1.1.3.3322
dlr powerful language conceptual modelling 
problem view query processing dlr constraints studied :10.1.1.25.3065
view query answering requires answer query virtual database constrained dlr theory playing role conceptual schema integrity constraints information comes set materialised views database problem non recursive datalog queries views np complete problem data complexity closed world assumption 
checking query containment non recursive datalog queries dlr constraints decidable exptime :10.1.1.25.3065
setting interesting feature dlr ability completely define classes relations dlr views classes relations conceptual schema 
dlr formulas express large class integrity constraints typical databases instance existence dependencies exclusion dependencies typed inclusion dependencies projection relations unary inclusion dependencies full key dependencies :10.1.1.25.3065
logical implication dlr exptime complete practical correct complete algorithms exist conceptual modelling applications :10.1.1.25.3065:10.1.1.3.3322
dlr powerful language conceptual modelling 
problem view query processing dlr constraints studied :10.1.1.25.3065
view query answering requires answer query virtual database constrained dlr theory playing role conceptual schema integrity constraints information comes set materialised views database problem non recursive datalog queries views np complete problem data complexity closed world assumption 
checking query containment non recursive datalog queries dlr constraints decidable exptime :10.1.1.25.3065
nice features dlr natural try extend temporal dimension understand expressive power resulting hybrid respect needs temporal conceptual modelling view query processing investigate computational properties 
reports results attempt 
logical implication dlr exptime complete practical correct complete algorithms exist conceptual modelling applications :10.1.1.25.3065:10.1.1.3.3322
dlr powerful language conceptual modelling 
problem view query processing dlr constraints studied :10.1.1.25.3065
view query answering requires answer query virtual database constrained dlr theory playing role conceptual schema integrity constraints information comes set materialised views database problem non recursive datalog queries views np complete problem data complexity closed world assumption 
checking query containment non recursive datalog queries dlr constraints decidable exptime :10.1.1.25.3065
nice features dlr natural try extend temporal dimension understand expressive power resulting hybrid respect needs temporal conceptual modelling view query processing investigate computational properties 
reports results attempt 
construct dlrus organic combination dlr propositional linear temporal logic usually serves temporal component order approach allowing applications temporal operators syntactical terms dlr classes relations formulas 
investigate computational properties reasoning dlrus analysing schema class relation satisfiability logical implication query containment non recursive datalog queries dlrus constraints 
construct dlrus organic combination dlr propositional linear temporal logic usually serves temporal component order approach allowing applications temporal operators syntactical terms dlr classes relations formulas 
investigate computational properties reasoning dlrus analysing schema class relation satisfiability logical implication query containment non recursive datalog queries dlrus constraints 
full dlrus turns undecidable 
main reason possibility postulate binary relation vary time small fragment dlrus say dlr augmented single time invariant binary relation encode undecidable tiling problem cf 
:10.1.1.41.6253:10.1.1.36.9561
fragment dlr dlrus ability talk temporal persistence ary relations expressive illustrated examples computational behaviour better 
obtain non trivial novel complexity results reasoning dlr atomic formulas exptime complete satisfiability logical implication arbitrary dlr formulas expspace complete problem checking query containment non recursive datalog queries dlr constraints decidable exptime expspace lower bound 
results obtained novel reasons 
previous approaches temporal description logics considered weaker languages having binary relations roles cardinality constructs inverse construct dlrus implicitly able express considering binary relations considering ability express queries :10.1.1.170.2038:10.1.1.170.1222:10.1.1.127.9445
:10.1.1.41.6253:10.1.1.36.9561
fragment dlr dlrus ability talk temporal persistence ary relations expressive illustrated examples computational behaviour better 
obtain non trivial novel complexity results reasoning dlr atomic formulas exptime complete satisfiability logical implication arbitrary dlr formulas expspace complete problem checking query containment non recursive datalog queries dlr constraints decidable exptime expspace lower bound 
results obtained novel reasons 
previous approaches temporal description logics considered weaker languages having binary relations roles cardinality constructs inverse construct dlrus implicitly able express considering binary relations considering ability express queries :10.1.1.170.2038:10.1.1.170.1222:10.1.1.127.9445
time upper bound complexity reasoning temporal description logic past operators proved leading tight result automatically holds weaker basic temporal description logic alc 
time decidability complexity result problem temporal query containment complex constraints 
survey previous various approaches temporal description logics see 
illustrate expressive power dlrus provide brief semantic characterisation means dlrus theories important modelling constructs valid time representation temporal conceptual modelling 
time decidability complexity result problem temporal query containment complex constraints 
survey previous various approaches temporal description logics see 
illustrate expressive power dlrus provide brief semantic characterisation means dlrus theories important modelling constructs valid time representation temporal conceptual modelling 
applied various temporally extended tual data models example entity relationship uml class diagrams 
extend results constructs snapshot temporary entities relationships proposed :10.1.1.24.2383
organised follows 
section introduces syntax semantics dlrus query language provides worked example 
section decidability complexity results proved satisfiability logical implication dlrus dlr query containment problem 
section discusses expressivity dlrus temporal conceptual model 
organised follows 
section introduces syntax semantics dlrus query language provides worked example 
section decidability complexity results proved satisfiability logical implication dlrus dlr query containment problem 
section discusses expressivity dlrus temporal conceptual model 
temporal conceptual model adopt classical snapshot representation temporal databases see :10.1.1.53.41
flow time ht set time points chronons binary precedence relation assumed isomorphic hz mapping time points standard relational databases interpretation constants domains time 
language expressing temporal conceptual schemas combination propositional temporal logic non temporal description logic dlr :10.1.1.25.3065
resulting dlrus temporal description logic regarded expressive fragment order temporal logic cf 
section note dlr guarded fragment fol variable variables fragment fol counting quantifiers :10.1.1.41.6253:10.1.1.53.41
section decidability complexity results proved satisfiability logical implication dlrus dlr query containment problem 
section discusses expressivity dlrus temporal conceptual model 
temporal conceptual model adopt classical snapshot representation temporal databases see :10.1.1.53.41
flow time ht set time points chronons binary precedence relation assumed isomorphic hz mapping time points standard relational databases interpretation constants domains time 
language expressing temporal conceptual schemas combination propositional temporal logic non temporal description logic dlr :10.1.1.25.3065
resulting dlrus temporal description logic regarded expressive fragment order temporal logic cf 
section note dlr guarded fragment fol variable variables fragment fol counting quantifiers :10.1.1.41.6253:10.1.1.53.41
expressive capabilities dlrus temporal conceptual modelling illustrated section 
section extends dlrus query language 
temporal conceptual model adopt classical snapshot representation temporal databases see :10.1.1.53.41
flow time ht set time points chronons binary precedence relation assumed isomorphic hz mapping time points standard relational databases interpretation constants domains time 
language expressing temporal conceptual schemas combination propositional temporal logic non temporal description logic dlr :10.1.1.25.3065
resulting dlrus temporal description logic regarded expressive fragment order temporal logic cf 
section note dlr guarded fragment fol variable variables fragment fol counting quantifiers :10.1.1.41.6253:10.1.1.53.41
expressive capabilities dlrus temporal conceptual modelling illustrated section 
section extends dlrus query language 
temporal conceptual schemas basic syntactical types dlrus entities unary predicates known concepts classes ary relations arity 
starting set atomic entities denoted en set rn atomic relations denoted rn set role symbols denoted define inductively complex entity relation expressions shown upper part fig 
note entity satisfiable iff satisfiable 
ary relation satisfiable iff satisfiable conceptual schema globally satisfiable iff satisfiable 
iff satisfiable 
reasoning tasks connected notions introduced reduce satisfiability formulas 
temporal queries section extend dlrus temporal query language define problem evaluating temporal query dlrus constraints problem temporal query containment constraints see survey discussion temporal queries :10.1.1.53.41:10.1.1.43.3977
nonrecursive datalog query disjunction conjunctive queries spj queries dlrus schema expression form dlrus entity relation expressions possibly occurring sequences distinguished variables existential variables constants respectively number agreement arity variables head union distinguished variables existential variables query constants fixed values 
ary relation appearing arity number variables noted allow entities relations query occur conceptual schema 
approach similar atoms query constrained means schema formulas :10.1.1.25.3065
furthermore query expressions directly manipulate explicit temporal attributes time implicit query expression 
reasoning tasks connected notions introduced reduce satisfiability formulas 
temporal queries section extend dlrus temporal query language define problem evaluating temporal query dlrus constraints problem temporal query containment constraints see survey discussion temporal queries :10.1.1.53.41:10.1.1.43.3977
nonrecursive datalog query disjunction conjunctive queries spj queries dlrus schema expression form dlrus entity relation expressions possibly occurring sequences distinguished variables existential variables constants respectively number agreement arity variables head union distinguished variables existential variables query constants fixed values 
ary relation appearing arity number variables noted allow entities relations query occur conceptual schema 
approach similar atoms query constrained means schema formulas :10.1.1.25.3065
furthermore query expressions directly manipulate explicit temporal attributes time implicit query expression 
temporal dimension handled means temporal modal operators dlrus perspective query language strict relation order temporal logic querying temporal databases :10.1.1.53.41
semantics queries snapshot representation temporal database defined follows 
temporal schema temporal model time point satisfies 
nonrecursive datalog query disjunction conjunctive queries spj queries dlrus schema expression form dlrus entity relation expressions possibly occurring sequences distinguished variables existential variables constants respectively number agreement arity variables head union distinguished variables existential variables query constants fixed values 
ary relation appearing arity number variables noted allow entities relations query occur conceptual schema 
approach similar atoms query constrained means schema formulas :10.1.1.25.3065
furthermore query expressions directly manipulate explicit temporal attributes time implicit query expression 
temporal dimension handled means temporal modal operators dlrus perspective query language strict relation order temporal logic querying temporal databases :10.1.1.53.41
semantics queries snapshot representation temporal database defined follows 
temporal schema temporal model time point satisfies 
snapshot interpretation fe eng fr rng regarded usual order structure snapshot non temporal database time conforming sense conceptual schema order temporal model constant domain 
values query constants specified 
conceptual schema globally logically implies project employee manager top manager worked project managing possibly different project employee integer salary integer project string manager department works manages resp act emp org man fig 

example eer diagram 
act works emp manager emp works act project note add formula employee emp works saying employee project entities relations mentioned conceptual schema interpreted empty set model satisfiable relative 
expressivity query language understood examples taken find people worked project emp works find managers terminal project code manager manages manages find project people spent consecutive years project emp works works works find people projects emp works emp works emp works consider example query containment constraints constraints expressed schema :10.1.1.53.41
consider queries manages project resp department works manages resp hard see contained constraints decidability complexity section briefly discuss main results computational behaviour dlrus fragments flow time hz unfortunately full dlrus restricted atomic formulas turns undecidable 
theorem 
global satisfiability problem dlrus conceptual schemas containing atomic formulas undecidable 
proof 
show contained relative extend non temporal model new surrogate atoms form ac uc accordance behaviour time point uc uc 
proved similarly theorem 
difference select eval ans 
query containment problem dlr reduces satisfiability quasimodels query containment problem non temporal dlr 
problem shown decidable exptime time :10.1.1.25.3065
check satisfiability quasimodels 
need procedure deciding candidate set formulas concepts 
proposition proved reduction :10.1.1.25.3065
proposition 
query containment problem dlr reduces satisfiability quasimodels query containment problem non temporal dlr 
problem shown decidable exptime time :10.1.1.25.3065
check satisfiability quasimodels 
need procedure deciding candidate set formulas concepts 
proposition proved reduction :10.1.1.25.3065
proposition 
dlr formula decidable expspace candidate cl 
ii dlr schema queries decidable exptime contained relative candidate cl 
set defined distinct problem properly arranged form quasimodel past temporal operators consider flow time hn quasimodels form hq ni 
observation proposition construct expspace checking algorithm exptime query containment checking algorithm 
proof expspace hardness formula satisfiability problem weaker logic 
follows particular query containment problem expspace hard 
open problem exists expspace algorithm deciding problem 
show exptime completeness logical implication atomic formulas dlr means polynomial reduction dlr logic dlr reg :10.1.1.25.3065
purposes know dlr reg allows form transitive closure binary relation satisfiability problem dlr reg exptime 
simplify presentation reduce fragment dlr dlr temporal operators reader problems extend reduction language 
fix binary relation define translation dlr dlr reg follows atom dlr commutes remaining constructs lemma 
suppose set atomic dlr formulas occur 

define map ht easy see quasimodel 
theorem model 
conceptual modelling section briefly show temporal description logic dlrus provide formal semantic characterisation important temporal conceptual modelling constructs valid time representation 
refer temporal extended entity relationship data model detailed literature exists :10.1.1.1.2497:10.1.1.94.413
consider constructs snapshot temporary entities relationships attributes temporal key attribute temporal cardinalities dynamic entities safety constraints monotonic form schema evolution 
extended entity relationship eer model standard entity relationship data model enriched isa links disjoint covering constraints full cardinality constraints may viewed eer model assigns construct temporal interpretation provides explicit temporal constructs 
gregersen jensen call approach implicit temporal dimension hidden interpretation structure entities relationships time dependent :10.1.1.1.2497
non temporal fragment dlrus dlr capture eer model implicit time 
conceptual modelling section briefly show temporal description logic dlrus provide formal semantic characterisation important temporal conceptual modelling constructs valid time representation 
refer temporal extended entity relationship data model detailed literature exists :10.1.1.1.2497:10.1.1.94.413
consider constructs snapshot temporary entities relationships attributes temporal key attribute temporal cardinalities dynamic entities safety constraints monotonic form schema evolution 
extended entity relationship eer model standard entity relationship data model enriched isa links disjoint covering constraints full cardinality constraints may viewed eer model assigns construct temporal interpretation provides explicit temporal constructs 
gregersen jensen call approach implicit temporal dimension hidden interpretation structure entities relationships time dependent :10.1.1.1.2497
non temporal fragment dlrus dlr capture eer model implicit time 
non temporal eer model encoding introduced establishes precise correspondence legal database states eer diagram models derived dlr theory :10.1.1.107.5728:10.1.1.5.2743
encoding correct eer model implicit time shown dlr interpreted temporal semantics 
example knowledge base section formulas shows exact encoding left hand part temporally implicit eer diagram fig 
consider constructs snapshot temporary entities relationships attributes temporal key attribute temporal cardinalities dynamic entities safety constraints monotonic form schema evolution 
extended entity relationship eer model standard entity relationship data model enriched isa links disjoint covering constraints full cardinality constraints may viewed eer model assigns construct temporal interpretation provides explicit temporal constructs 
gregersen jensen call approach implicit temporal dimension hidden interpretation structure entities relationships time dependent :10.1.1.1.2497
non temporal fragment dlrus dlr capture eer model implicit time 
non temporal eer model encoding introduced establishes precise correspondence legal database states eer diagram models derived dlr theory :10.1.1.107.5728:10.1.1.5.2743
encoding correct eer model implicit time shown dlr interpreted temporal semantics 
example knowledge base section formulas shows exact encoding left hand part temporally implicit eer diagram fig 
encoding support design temporal conceptual schema exploiting reasoning dlrus possible verify conceptual specification infer implicit facts stricter constraints manifest inconsistencies 
note ideas apply non temporal uml class diagrams encoded dlr daml oil ontologies 
particular plays role full fledged temporal key see formula sect 

temporal cardinalities 
cardinality constraints limit participation entities relationships 
temporal setting distinguish snapshot participation constraints true point time lifespan participation constraints evaluated entire existence entity :10.1.1.94.413
standard dlrus cardinality construct captures snapshot participation constraints lifespan participation constraints defined dlrus formula lifespan instance entity participate ith argument precisely tuples relation obviously snapshot relations set instances change time difference snapshot lifespan participation constraints respect snapshot relations 
example say example managers manage different projects entire existence managers constrained managing exactly project time 
dynamic entities 
temporal conceptual modelling literature notions dynamic transitions entities called object migrations considered dynamic evolution object ceases instance source entity dynamic extension object continues belong source :10.1.1.94.413
temporal setting distinguish snapshot participation constraints true point time lifespan participation constraints evaluated entire existence entity :10.1.1.94.413
standard dlrus cardinality construct captures snapshot participation constraints lifespan participation constraints defined dlrus formula lifespan instance entity participate ith argument precisely tuples relation obviously snapshot relations set instances change time difference snapshot lifespan participation constraints respect snapshot relations 
example say example managers manage different projects entire existence managers constrained managing exactly project time 
dynamic entities 
temporal conceptual modelling literature notions dynamic transitions entities called object migrations considered dynamic evolution object ceases instance source entity dynamic extension object continues belong source :10.1.1.94.413
source entity target cases captured formulas respectively interesting consequence dynamic evolution source necessarily temporary entity 
dlrus able capture safety liveness constraints 
safety constraint intuitively says bad happens captured formula 
hand liveness constraints saying happen expressed existential temporal formulas 
