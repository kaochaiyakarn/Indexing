gutwin improving browsing digital libraries keyphrase indexes carl gutwin gordon ian witten craig nevill manning frank department computer science university saskatchewan campus drive saskatchewan canada gutwin cs ca department computer science university waikato private bag hamilton nz cs waikato ac nz department computer science rutgers university piscataway new jersey usa nevill cs rutgers edu browsing accounts people interaction digital libraries poorly supported standard search engines 
conventional systems operate wrong level indexing words people think terms topics returning documents people want broader view 
result users easily determine collection particular topic covered kinds queries provide useful results 
built new kind search engine keyphind explicitly designed support browsing 
automatically extracted keyphrases form basic unit indexing presentation allowing users interact collection level topics subjects words documents 
keyphrase index provides simple mechanism clustering documents refining queries results 
table 
types browsing related task questions standard search engines full text inverted index find documents match user query ranking algorithm order documents presentation 
approach powerful users retrieve document entering word appears full text indexing causes problems browsing 
standard engines index individual words people short topic phrases exploring collection solar energy programming demonstration artificial intelligence 
second standard engines return lists individual documents level presentation usually specific users browsing :10.1.1.48.8135
third standard engines provide support forming new queries browsing involves iterative process exploration query refinement 
built new search engine called keyphind uses single simple approach address problems 
keyphind key phrases similar provided authors automatically extracted documents collection 
phrases information retrieval new keyphind goes previous systems making phrase fundamental building block entire system including index presentation clustering results query refinement process 
process repeated desired level generality reached immediately apparent choose meaningful names labels clusters 
researchers self organizing maps show main topics collection relative frequencies 
example lin creates graphical tables contents document titles chen colleagues create map representations collection web pages 
collection internal structure hierarchical web site structure generate overview 
exploring topic areas second common browsing activity exploration subject area :10.1.1.48.8135
exploring users may try gain understanding topics part area may wish gather contextual information directing focusing search may simply hope come useful material 
exploration undertaken novices people need learn new area may undertaken people search failure interested kinds queries definitely succeed 
kind browsing greatly aided able see range material available subject people learn domain visual recognition linguistic recall direct activity 
chang rice state browsing computer systems characterized searching specifying recognition search strategy 
traditional search systems exploration difficult reasons 
subject areas described multi word phrases word level indexes systems deal poorly queries query terms meaningful relation 
example standard system poor precision asked subject area computer architecture meaning phrase different gutwin component 
second ranking algorithms designed return documents relevant query terms show range documents exist 
list individual documents usually far specific users trying explore area :10.1.1.48.8135
problems previously addressed including phrases individual words inverted index 
indexing phrases consumes considerable space researchers considered various means selecting important content bearing phrases indexing 
discuss issues involved phrase indexing detail article 
second problem systems return list documents range topics addressed primarily document clustering 
document collections author specified keyphrases available documents laborious manually determine enter terms document large collection 
keyphrase index usually feasible index terms determined automatically 
automatic determination keyphrases generally works ways meaningful phrases extracted text document may assigned source document text input 
technique keyphrase assignment attempts find descriptive phrases controlled vocabulary mesh terms set terms previously collected sample collection 
assignment essentially document classification problem new document placed categories defined vocabulary phrases :10.1.1.48.8135
general advantage keyphrase assignment find keyphrases appear text advantage keyphrase extraction technique keyphind require external phrase source 
consider keyphrase extraction detail 
parts problem extracting keyphrases candidate phrases document text second candidates evaluated keyphrases 
variety techniques proposed steps described 
process building ranking model involves preliminary steps 
author keyphrases removed training documents stored separate files 
second candidate phrases training documents described note author keyphrases appear document text 
third calculate values attributes phrase distance distance start document phrase appearance normalized document length term frequency tf number times phrase appears document normalized document length inverse document frequency idf phrase frequency domain collection 
attribute approximated random sample documents collection gutwin term frequency inverse document frequency combined standard tf idf calculation :10.1.1.51.7802
attributes experimentally determined useful characterising keyphrases keyphrases appear early document appear document appear general 
fourth candidate phrase marked keyphrase non keyphrase keyphrases document 
preliminary steps completed na bayes machine learning algorithm compares attribute values known keyphrases candidates builds model determining candidate keyphrase 
model predicts candidate keyphrase values features 
took minutes build indexes document example collection pentium pro mhz system running linux speed dependent able hold entire phrase list hash table 
important creation time index size indexes tiny comparison source text 
file sizes indexes created example collection shown table 
indexes derived gigabyte source text keyphrase approach offers index percent size source 
comparison standard full text inverted index typically larger source text modern compressed indexes tenth size source :10.1.1.51.7802
course small size indexes achieved discard twelve phrases document believe browsing tasks indexing twelve meaningful phrases may indexing word 
keyphind stores indexes memory 
word phrase index stored hash table quick lookup stored sequential arrays 
memory space gutwin needed mb 
