objectrank authority keyword search databases extended version ibm almaden research san jose ca ibm com school computer science florida international university miami fl cs fiu edu yannis papakonstantinou computer science uc san diego la jolla ca yannis cs ucsd edu objectrank system applies authority ranking keyword search databases modeled labeled graphs 
conceptually authority originates nodes objects containing keywords flows objects semantic connections 
node ranked authority respect particular keywords 
adjust weight global importance weight keyword query importance result containing keywords versus referenced nodes containing volume authority flow type semantic connection 
novel performance challenges opportunities addressed 
schemas impose constraints graph exploited performance purposes 
second order address issue authority ranking respect keywords opposed google global pagerank precompute single keyword combine run time 
conducted user surveys set performance experiments multiple real synthetic datasets assess semantic meaningfulness performance objectrank 
pagerank excellent tool rank global importance pages web proven success google google uses pagerank tool measure global importance pages independently keyword query :10.1.1.109.4049
google uses ir techniques estimate relevance page keyword query combined pagerank value calculate final score page 
works apply pagerank estimate relevance www google com conference instance name icde authors gupta harinarayan rajaraman ullman title index selection olap year icde contains year name icde year location birmingham authors ho agrawal megiddo srikant title range queries olap data cubes year sigmod cites cites cites author name agrawal authors gray bosworth layman pirahesh title data cube relational aggregation operator generalizing group cross tab sub total year icde contains cites authors agrawal gupta sarawagi title modeling multidimensional databases year icde subset dblp graph pages keyword query :10.1.1.21.6917
appropriately extend modify pagerank perform keyword search databases natural flow authority objects bibliographic complaints databases explain 
consider example illustrates small subset dblp database form labeled graph author conference year nodes agrawal icde icde respectively omitted simplify 
schema graphs describe structure database graphs 
keyword query single keyword query olap objectrank sorts database objects importance respect user provided keywords 
illustrates top olap papers dblp subset produced online demo www db ucsd edu objectrank currently objectrank prototype 
notice entries data cube modeling multidimensional databases papers top list contain keyword olap olap contained abstracts clearly constitute important papers olap area may referenced papers olap area may dblp subset currently objectrank copied database demo available www db ucsd edu consists available publications major database conferences including sigmod vldb pods icde icdt edbt year 
written authors written important olap papers 
conceptually ranking produced way random surfers initially objects containing keyword olap traverse database graph 
particular time step random surfer node move adjacent node traversing edge ii jumps randomly olap node links 
probability particular traversal happens depends multiple factors including type edge contrast web link search systems :10.1.1.109.4049:10.1.1.21.6917
factors depicted authority transfer schema graph 
illustrates authority transfer schema graph corresponds setting produced results 
assuming probability surfer moves back olap node damping factor collective probability move referenced authority transfer rate citation edge explain collective probability move author probability move forum appeared :10.1.1.109.4049
case pagerank algorithm time goes expected percentage surfers node converges section limit 
intuitively limit objectrank node 
alternative way conceive intuition objectrank consider authority importance flows database graph fashion defined authority search arbitrary graphs :10.1.1.120.3875
initially olap authority objects contain keyword olap 
authority importance flows rules authority transfer schema graph equilibrium established specifies authoritative referenced authoritative papers written authority authors appears authority conferences 
vice versa authors conferences obtain authority papers 
notice amount authority flow say cited author author arbitrarily set domain expert reflects semantics domain 
example common sense says bibliography domain obtains little authority referring authoritative papers 
contrary obtains lot authority referred authoritative papers 
dblp demo offers user authority flow settings order accommodate multiple user profiles requirements 
believe ability customize authority flow schemes central objectrank assume size fits comes opinions authority flow 
example setting users primarily care papers high global importance users primarily care papers directly indirectly heavily referenced papers keywords 
expect multiple settings sense non trivial objectrank applications 
keyword search databases unique characteristics straightforward application random walk model described previous inadequate :10.1.1.109.4049:10.1.1.21.6917
database different semantics improve quality keyword search 
particular web edges hyperlinks database schema exhibits types edges attributes nodes 
schema specify ways authority flows nodes database graph 
example results obtained annotating schema graph authority flow information appears 
furthermore previous assumes calculating global importance framework clear distinction global importance node relevance keyword query random surfer probability start page base set call probability base objectrank :10.1.1.109.4049:10.1.1.21.6917
true database 
example consider product complaints database 
case represent business value customer assigning node base objectrank proportional total sales amount 
novel property objectrank allows tuning system domain user specific requirements 
example bibliographic database new graduate student desires search system returns best reading list specified keywords senior researcher looks papers closely related keywords high quality 
preference scenarios possible adjusting weight global importance versus relevance keyword query 
changing damping factor offers calibration opportunity 
particular larger values favor nodes pointed high authority nodes smaller values favor nodes containing actual keywords nodes base set 
handling queries multiple keywords offers flexibility system describe section 
example may want assign higher weight relevance node infrequent keyword 
performance level calculating objectrank values runtime computationally intensive operation especially fact multiple users query system 
resolved precomputing inverted index keyword sorted list nodes non trivial objectrank keyword 
runtime employ threshold algorithm efficiently combine lists :10.1.1.112.869
approach induces cost precomputing storing inverted index 
regarding space requirements notice number keywords previous works assign weights edges data graph relevance incident nodes text keywords :10.1.1.4.6938:10.1.1.21.6917
contrast assign authority transfer rates schema graph captures semantics database relevance factor reflected selection base set 
data cube relational aggregation operator generalizing group cross tab sub total 
jim gray icde index selection olap 
gupta icde range queries olap data cubes 
ching tien ho sigmod discovery driven exploration olap data cubes 
sunita sarawagi edbt olap statistical databases similarities differences 
arie shoshani pods implementing data cubes efficiently 
harinarayan sigmod relative prefix sums efficient approach querying dynamic olap data cubes 
steven geffner icde modeling multidimensional databases 
rakesh agrawal icde olap statistical data bases 
hans 
lenz ssdbm data warehousing olap decision support tutorial 
surajit chaudhuri sigmod top papers olap returned objectrank cites conference year author dblp schema graph 
database typically limited number users personalized search system 
furthermore store nodes objectrank threshold value chosen system administrator offers space versus precision tradeoff 
section show index size small relative database size bibliographic databases 
regarding index computation experimentally evaluate classes optimizations 
exploit structural properties database graph 
example know objects subgraph schema form directed acyclic graph dag topological sort dag efficient straightforward pass objectrank evaluation 
extend dag case providing algorithm exploits efficient evaluation dags case graph dag sense contains large dag subgraph 
particular graph nodes reduced dag removing small subset nodes algorithm reduces authority calculation system equations opposed usual system equations 
furthermore optimization techniques data graph small vertex cover split set subgraphs connections subgraphs form dag 
second notice naive approach calculate keyword specific objectrank separately 
substantially efficient calculate global objectrank scores initial values keyword specific computations 
accelerates convergence general objects high global objectrank high keyword specific 
furthermore show storing prefix inverted lists allows faster calculation nodes 
semantic performance contributions evaluated user surveys detailed experimental evaluation respectively 
implemented web interface available www db ucsd edu objectrank query subset dblp database objectrank technique 
conference year author cites cited dblp authority transfer schema graph 
essential formal background pagerank authority search section 
section presents semantics objectrank section describes system architecture 
algorithms calculate objectrank section experimentally evaluated section 
results user surveys section 
furthermore related discussed section 
discussed section 
background describe essentials pagerank search random surfer intuition 
graph set nodes vn set edges surfer starts random node web page vi step follows hyperlink probability gets bored jumps random node probability pagerank value vi probability vi point time surfer vi 
denote vector vi vn dar matrix aij vj edge vj vi vj outgoing degree node vj 
pagerank equation typically precomputed queries arrive provides global ranking pages 
set nodes base set set nodes surfer jumps bored arbitrary subset nodes increasing authority associated nodes ones closely associated 
particular define base vector si sn si vi 
pagerank equation dar regardless uses equation equation pagerank algorithm solves fixpoint simple iterative method values th execution calculated follows dar algorithm terminates converges guaranteed happen common conditions 
particular needs irreducible strongly connected aperiodic 
true due parameter property application specific combination scores performance parameters authority transfer rates global objectrank calculation damping factor normalization scheme global objectrank weight semantics epsilon threshold table parameters objectrank damping factor happens practice 
notion base set suggested way personalized rankings setting set bookmarks user :10.1.1.109.4049
perform topic specific pagerank web 
take step base set estimate relevance node keyword query 
particular base set consists nodes contain keyword explained 
objectrank semantics section formally define framework show objectrank ranks nodes database respect keyword query set calibrating adjusting parameters table 
particular section describes database authority transfer graph modeled 
section shows keyword specific global calculated combined produce final score node 
section presents addresses challenges multiple keyword queries 
database graph schema authority transfer graph view database labeled graph model easily captures relational xml databases 
data graph vd ed labeled directed graph node label set keywords 
example node icde label year set keywords icde birmingham 
node represents object database may sub structure 
loss generality objectrank assumes node tuple attribute name attribute value pairs 
example year nodes name year location attributes 
notice keywords appearing attribute values comprise set keywords associated node 
may assume richer semantics including metadata node set keywords 
example metadata forum year location included keywords node 
specifics modeling data node orthogonal objectrank neglected rest discussion 
edge labeled role overload represents relationship example edge label cites 
role evident uniquely defined labels omit edge label 
simplicity assume parallel edges denote edge 
schema graph vg directed graph describes structure node associated label 
edge labeled role may omitted discussed data graph edge labels 
say data graph vd ed conforms schema graph vg unique assignment 
node vd node vg 
edge ed node node edge goes 
authority transfer schema graph 
schema graph vg create authority transfer schema graph vg reflect authority flow edges graph 
may trial error process satisfied quality results domain expert task 
particular edge transfer edges ebg created 
edges carry label schema graph edge addition annotated potentially different authority transfer rate ebg correspondingly 
say data graph conforms authority transfer schema graph conforms corresponding schema graph 
notice authority transfer schema graph information original schema graph 
shows authority transfer schema graph corresponds schema graph edge labels omitted 
motivation defining edges edge schema graph authority potentially flows directions direction appears schema 
example passes authority authors vice versa 
notice authority flow direction defined authority transfer rate may 
example cited important papers clearly important citing important papers important 
notice sum authority transfer rates outgoing edges schema node may administrator believes edges starting transfer authority 
example conferences transfer authority 
authority transfer data graph 
data graph vd ed conforms authority transfer schema graph ga vg ea objectrank derives authority follows 
transfer data graph da vd ea edge ed authority transfer data graph edges ef eb 
terms random walk model equivalent disappearance surfer 
conference name icde authors gupta harinarayan rajaraman ullman title index selection olap year icde year name icde year location birmingham authors ho agrawal megiddo srikant title range queries olap data cubes year sigmod author name agrawal authors gray bosworth layman pirahesh title data cube relational aggregation operator generalizing group cross tab sub total year icde authors agrawal gupta sarawagi title modeling multidimensional databases year icde authority transfer data graph edges ef eb annotated authority transfer rates ef eb 
assuming ef type ef number outgoing edges type authority transfer rate eb defined similarly 
illustrates authority transfer data graph corresponds data graph authority schema transfer graph 
notice sum authority transfer rates outgoing edges node type may sum authority transfer rates outgoing edges authority transfer schema graph types outgoing edges 
importance vs relevance 
score node respect keyword query combination global objectrank rg keyword specific objectrank rw 
propose combining function functions may global objectrank weight determines important global objectrank notice may accessible users fixed administrator 
calculations keyword specific global objectrank performed follows assume queries point 
keyword specific objectrank 
single keyword query objectrank finds keyword base set referred simply base set keyword implied objects contain keyword assigns objectrank rw vi node vi vd resolving equation dar aij edge vj vi ea controls base set importance sn base set vector si vi si 
damping factor determines portion objectrank object transfers neighbors opposed keeping 
introduced original pagerank ensure convergence case pagerank sinks :10.1.1.109.4049
addition calibrating factor decreasing favor objects contain keywords base set opposed objects acquire objectrank incoming edges 
value pagerank adopt want balance importance containing actual keywords opposed pointed nodes containing keywords :10.1.1.109.4049
global objectrank 
definition global objectrank different different applications users application 
focus cases global objectrank calculated applying random surfer model including nodes base set 
calibrating parameters available objectrank 
notice way calculating global objectrank similar pagerank approach assumes nodes pages pagerank initially value :10.1.1.109.4049
applications true discuss section 
multiple keywords queries 
define semantics multiple keyword query wm naturally extending random walk model 
consider independent random surfers ith surfer starts keyword base set wi 
semantics objectrank object respect keywords query probability point time random surfers simultaneously objectrank wm node respect keywords wm wi wi objectrank respect keyword wi 
semantics objectrank probability point time random surfers reach keywords rw defined accordingly 
notice sums topic sensitive pageranks calculate pagerank page 
weigh keywords frequency drawback combining function equation favors popular keywords query 
reason distribution objectrank values skewed size base set increases top objects tend receive 
example consider results query xml indexing structure relative region coordinate 
dao icde dataguides enabling query 
optimization semistructured 
roy goldman vldb access path selection rdbms 
patricia selinger sigmod querying object oriented databases 
michael kifer sigmod query optimization techniques unstructured data 
peter buneman sigmod xml indexing structure relative region coordinate 
dao icde access path selection rdbms 
patricia selinger sigmod trees dynamic index structure spatial searching 
guttman sigmod tree search structure large indexes 
john robinson sigmod dataguides enabling query optimization semistructured 
roy goldman vldb top papers xml index emphasis xml xml index shown 
result corresponds model described 
noticeably favors index keyword xml 
database contains keywords title 
results classic works indexing apply directly xml 
intuitively xml specific keyword important user 
result overwhelmingly preferred result participants relevance feedback survey section 
result contains important works indexing semistructured unstructured object oriented databases relevant indexing xml data 
result obtained modified formula wm wi wi wi normalizing exponent set wi log wi 
normalizing exponents xml index example equivalent running parallel xml index random walks xml index keywords respectively 
compare single base set approach imagine alternative semantics calculate objectrank multiple keywords combining single keyword 
particular consider combining objects keywords single base set 
single execution objectrank algorithm determine scores objects 
incidentally semantics hits system :10.1.1.120.3875
show single base set semantics achieved combining single keyword objectrank values applying appropriate exponents 
furthermore explain semantics avoid certain problems single base set semantics 
order compare single base set approach semantics equation consider scenarios assume loss generality keywords 
assume put base set objects contain keywords 
objects keyword specific base sets objects objects pointed receive top rank approaches 
second contains objects containing keywords may ranking highest object pointed objects containing keyword 
happen keyword specific timber native xml database updates structure indexes fastmap fast algorithm indexing 
unified approach indexed non indexed spatial joins blobworld system region image indexing retrieval base set dataguides enabling query formulation optimization semistructured databases tree efficient robust access method points rectangles example hits approach fails semantics 
base sets approach 
example single base set approach rank higher dataguides query xml index irrelevant xml 
semantics equation base set single base set approach union base sets 
compare improved version single base set approach objects base set weighted keywords contain infrequent keywords assigned higher weight 
particular object contains keywords keyword query assigned base objectrank 
linearity theorem prove calculated approaches 
architecture system architecture 
shows architecture objectrank system divided stages 
preprocessing stage consists objectrank execution module inputs database indexed set keywords indexed set parameters rest adjusting parameters input query stage 
particular parameters damping factor ii authority transfer rates authority transfer schema graph iii convergence constant epsilon determines objectrank algorithm converges iv threshold value determines minimum objectrank object stored objectrank index 
objectrank execution module creates objectrank index inverted index indexed keywords 
keyword stores list id pairs object threshold 
pairs sorted descending facilitate efficient querying method describe 
objectrank index implemented index table lists stored attribute 
hash index built top list allow random access required query module 
query module inputs set sorted id pairs lists lm set adjusting parameters outputs top objects combining function equation 
particular parameters semantics ii normalization scheme exponents iii global objectrank weight 
naive approach pass lists calculate final objectrank values object sort list final objectrank 
threshold algorithm guaranteed read minimum prefix list :10.1.1.112.869
notice threshold algorithm applicable combining functions equations monotone random access possible stored lists 
database access module inputs result ids queries database get suitable information objects user 
information stored id indexed table contains attribute value object id example object contain title authors names conference name year 
objectrank index creation section presents algorithms create objectrank index 
section presents algorithm case arbitrary authority transfer data graphs sections show better directed acyclic graph dag dag respectively property explained section 
sections optimizations authority transfer graph small vertex cover dag subgraphs 
section presents optimization opportunities manipulating initial values iterative algorithm 
general algorithm shows algorithm creates objectrank index 
algorithm accesses authority transfer data graph times may lead long execution time large 
notice usually problem stores object ids set edges small fit main memory databases 
notice lines correspond original pagerank calculation modulo authority transfer rates information :10.1.1.109.4049
epsilon threshold 
keyword 
converged 
epsilon 



evaluate equation previous iteration right side 
sort id vi pairs list vi store inverted index removing pairs vi threshold algorithm create objectrank index dag algorithm applications authority transfer data graph dag 
example database papers citations ignoring author conference objects cites previously published papers dag 
shows improved algorithm single pass graph da computes actual objectrank values 
notice need epsilon derive precise solution equation contrast algorithm calculates approximate values 
intuition objectrank transferred direction topological ordering single pass suffices 
notice topologically sorting graph takes time general case 
cases semantics database lead better algorithm 
example papers database efficiently topologically sort papers sorting conferences date 
method applicable databases temporal kind ordering implied link structure 
threshold 
topologically sort nodes graph 
consecutive accesses topological order 
keyword 


algorithm create objectrank index dags example dag property implied semantics 
cases infer property structure authority transfer schema graph ga theorem shows 
theorem authority transfer data graph dag authority transfer schema graph dag cycle subgraph consisting nodes edges connecting type schema nodes 
dag algorithm practically interesting case authority transfer data graph dag small set backedges edges removed dag 
notice set unique minimal edge removed sets backedges 
working set backedges set nodes backedges start 
reduces number needed variables show 
papers database example author conference objects ignored set papers citing published previously 
similarly complaints database complaints previous complaints 
identifying minimum set np complete general case 
semantics database lead efficient algorithms 
example databases discuss papers complaints databases simply object referencing object newer timestamp 
intuition algorithm follows objectrank node split dag objectrank calculated ignoring backedges backedges objectrank due backedges 
calculate backedges objectrank assign variable ci ci brevity symbol denote objectrank denoting objectrank 
doing keyword specific calculation calculate ci propagated rest graph da line store information cij coefficient multiply cj calculating objectrank node vi 
calculate lines assume backedges source objectrank pass dag topological order 
keyword specific base set calculate dag line ignoring backedges account calculating outgoing degrees calculate ci solving linear system line calculate total line adding backedge objectrank dag objectrank 
line system line corresponds ci vj ith jth node topologically sorted authority transfer data graph objectrank ci sum backedge objectrank cj dag objectrank 
notation matrices equation selects lines table correspond proven reducing vertex cover 
threshold 
vector 
identify topologically sort dag da backedges 
consecutive accesses topological order 
backedges considered 


keyword 
calculate vector executing 
solve 
denotes keeping lines corresponding 



node vj 
vj ci vj ci ci points vj vl vj vl non vl points vj 
return algorithm create objectrank index dags 
explain algorithm example 
dag 
example graph shown 
assume edges type authority transfer rate 
topologically sort graph identify 
create coefficients table line follows assume build index keyword contained nodes 
calculate line taken removing backedges dotted lines 
solving equation line get selects matrices th th lines correspond respectively 
final line algorithm viewed way reduce objectrank calculation system equation size graph smaller equations system line 
interestingly equations systems format ar different coefficient tables degree reduction achieved inversely proportional number 
linear degree equations system line solved studied arithmetic methods jacobi gauss seidel pagerank iterative approach simpler solve equation respect variable 
shown perform better section 
product product complaint complaint complaint complaint complaint hubs set product hierarchical graph 
algorithm graphs small vertex cover similarly dag case reduce objectrank calculation smaller system equation authority transfer data graph contains relatively small vertex cover example consider subset complaints database consisting products complaints edge complaints 
set products 
call nodes hub nodes 
complaint refer products 
serializable graph 
intuition algorithm hi objectrank hub node hi 
objectrank non hub node expressed function hub nodes pointing hi expressed function non hub nodes pointing hi 
expression equal hi equations hub nodes 
reduce computation linear degree system 
notice omit details optimizations sections due lack space 
serializing objectrank calculation section shows serialize objectrank calculation graph vd objectrank calculations disjoint non empty subsets lr vd lr vd 
calculation serializable calculate calculate 
example consider subset papers database consisting papers citations authors authority transferred papers authors vice versa 
shows authority transfer data graph serialized 
particular calculate nodes nodes elaborate 
define calculation serializable define graph lr li lj vi vj vi li vj lj 
edge li lj edge nodes vi li vj lj theorem defines objectrank calculation serializable 
theorem objectrank calculation serializable iff dag 
algorithm works follows lr topologically ordered 
nodes computed ignoring rest including computation set nodes corresponding connecting edges connected nodes 
notice nodes changed incoming edge node node notice objectrank calculations methods described subset li 
manipulating initial objectrank values algorithms far assume fresh execution algorithm keyword 
intuitively expect nodes high global objectrank high objectrank respect keywords 
exploit observation assigning global initial values keyword specific calculation 
furthermore investigate space vs time tradeoff 
particular assume limitations index size 
store prefix nodes nodes list recall lists ordered objectrank keyword 
query stage values initial values nodes constant experimentally efficient datasets rest ideas experimentally evaluated section 
relevance feedback survey evaluate quality results objectrank conducted surveys 
performed dblp database professors ph students uc san diego database lab involved project 
second survey publications database ieee communications society comsoc involved senior ph students electrical engineering department 
participant asked compare rank lists top results set keyword queries assigning score relevance results list query 
result list generated different variation objectrank algorithm 
results lists set generated default objectrank configuration authority transfer schema graph 
users knew algorithms produced result list 
survey designed investigate quality objectrank compared approaches changing adjusting parameters 
effect keyword specific ranking 
assess basic principle objectrank scores 
particular compared default parameters set values discussed section objectrank global ranking algorithm sorts objects contain keywords global objectrank base set contains nodes 
notice equivalent google web pages modulo minor difference calculation relevance score google 
dblp sur notice experimentally global constant rest nodes efficient 
reason node top nodes keyword probably small objectrank respect may great global objectrank 
www comsoc org google current ranking algorithm disclosed 
included results keyword queries olap xml 
score favor keyword specific objectrank second keyword query respectively 
comsoc survey keywords cdma ultra wideband scores favor keyword specific approach respectively 
effect authority transfer rates 
compared results default objectrank simpler version algorithm different authority transfer rates different edge types edge types treated equally 
dblp survey keyword queries olap xml default objectrank won scores half point means user thought rankings equally respectively 
comsoc survey scores cdma respectively 
effect damping factor tested different values damping factor keyword queries xml xml index dblp dataset 
points choice user point second 
scores sum users times points query respectively values 
see higher values preferred xml xml large area 
contrast small preferable xml index papers closely related keywords papers typically contain 
results mixed comsoc survey 
particular damping factors received scores queries cdma respectively 
effect changing weights keywords 
compared combining functions semantics equations keyword queries xml index xml query dblp survey 
normalizing exponents proposed section preferred simple product function ratios respectively 
comsoc survey experiment repeated keyword query diversity combining 
normalizing exponents preferred ratio 
experiments section experimentally evaluate system show calculating objectrank feasible preprocessing query execution stage 
evaluation real set synthetic datasets comsoc dataset publications ieee communications society consists nodes edges 
subset dblp dataset consisting publications twelve database conferences 
dataset contains nodes edges 
datasets small evaluate index creation algorithms 
www comsoc org created set artificial datasets shown table words dblp dataset 
outgoing edges distributed uniformly papers cites average papers 
incoming edges assigned non uniform random function similar tpc benchmark top cited papers receive citations 
name nodes edges dblp dblp dblp dblp dblp table synthetic datasets 
store databases rdbms decomposed relations relational schema shown 
instance conference particular year 
pp relation describes pid cited pid pa lists authors aid pid 
notice arrows pp denote primary foreign key connections pid pid pid pid 
ran experiments oracle rdbms xeon ghz pc gb ram 
implemented preprocessing algorithms java connect rdbms jdbc 
cid name year cid pid title aid name pp pid pid pa pid aid relational schema 
experiments divided classes 
measure fast objectrank execution module calculates keywords stores objectrank index algorithm 
size objectrank index measured 
experiment repeated various values epsilon threshold various dataset sizes 
furthermore general objectrank algorithm compared dag algorithm effect various initial objectrank values evaluated 
second section query module evaluated 
particular measure execution times combining algorithm section produce top results various values various numbers keywords semantics 
preprocessing stage general objectrank algorithm 
tables show storage space objectrank index decreases objectrank threshold stored objects increases www tpc org threshold time sec nodes keyword size mb table index creation epsilon threshold time sec nodes keyword size mb table index creation comsoc epsilon real datasets 
notice comsoc keywords respectively 
notice fewer nodes keyword objectrank threshold comsoc dataset sparse keywords 
time create index change threshold threshold main execution loop algorithm 
tables show index build time decreases epsilon increases 
reason fewer iterations needed algorithm converge cost lower accuracy calculated 
notice storage space change epsilon long epsilon threshold 
table shows execution times storage requirements objectrank index scale database size dblp synthetic datasets epsilon threshold 
notice average number nodes having objectrank higher threshold increases considerably dataset size keywords appear multiple times 
general objectrank vs dag algorithm 
compares index creation time general objectrank algorithm gen versions dag algorithm dblp dataset various number 
algebraic version alg dag precisely solves system self algebraic solver 
pagerank version pr dag solves system pagerank iterative method :10.1.1.109.4049
measured times average processing time single keyword include time retrieve base set inverted text index common methods 
time calculate omitted calculated keywords requires single pass graph 
iterative part execution times corresponds pass perform dag subgraph calculate dag algorithms multiple passes consist computation general objectrank algorithm 
notice epsilon experiment epsilon time sec nodes keyword size mb table index creation threshold epsilon time sec nodes keyword size mb table index creation comsoc threshold iterative part calculate cc sec msec time sec varying 
pr alg pr alg pr alg pr alg gen dag dag dag dag dag dag dag dag number algorithm evaluate dag algorithm 
threshold value irrelevant affect processing time storage space 
time topological sorting sec negligible compared time calculate keywords 
initial 
experiment shows convergence general objectrank algorithm accelerated various values set initial 
particular compare naive approach assign equal initial objectrank nodes initial approach global initial values keyword specific objectrank calculations 
comsoc epsilon naive global initial approaches take iterations respectively 
furthermore evaluate space vs time tradeoff described section 
tables show average number iterations epsilon comsoc respectively various values precomputed list length query stage experiments figures show average execution time changes varying number requested results queries comsoc respectively 
index table created epsilon dataset time sec nodes keyword size mb dblp dblp dblp dblp dblp table index creation synthetic datasets 
msec msec varying comsoc 
keywords varying keywords 
list length iterations table number iterations various lengths precomputed lists list length iterations table number iterations various lengths precomputed lists comsoc threshold comsoc 
times averaged repetitions experiment 
notice time increase considerably due fact number random accesses needed small values processing time threshold algorithm small 
notice times comsoc slightly smaller inverted lists shorter 
figures show execution time increases linearly number keywords due fact disk access time objectrank lists dominant factor processing time small 
notice execution times shorter semantics results leads smaller prefix lists read order get top results 
msec keywords varying keywords comsoc 
related state art works rank results keyword query traditional ir techniques exploiting link structure data graph 
discuss related performance link algorithms 
traditional ir ranking 
currently major database vendors offer tools keyword search single attributes database 
assign score attribute value relevance keyword query 
score calculated known ranking functions ir community precise formula disclosed 
works keyword search databases result tree objects similar ir techniques simpler boolean semantics score attribute contains contain keywords 
shortcoming semantics objects related keywords contain section 
second shortcoming traditional ir semantics unable meaningfully sort resulting objects relevance keywords 
example query xml quality service uses xml language ranked high classic book xml 
relevance information hidden link structure data graph 
link semantics 
best knowledge savoy link structure web discover relevant pages 
idea popular pagerank global score assigned web page explain section :10.1.1.109.4049
directly applying pagerank approach problem suitable explain section 
hits employs mutually dependant computation values web page hub value authority :10.1.1.120.3875
contrast pagerank able find relevant pages contain keyword directly pointed pages 
hits consider domain specific link semantics schema information 
relevance nodes data graph viewed resistance corresponding electrical network resistor added edge 
approach equivalent random walk model 
richardson propose improvement pagerank random surfer takes account relevance page query navigating page 
require result contains keyword ignore case multiple keywords 
haveliwala proposes topic sensitive pagerank topic specific pageranks page precomputed pagerank value relevant topic query 
works apply web address unique characteristics structured databases discuss section 
furthermore offer adjusting parameters calibrate system specifics application 
idea pagerank applied structured databases 
proposes way rank xml elements link structure database 
furthermore introduce notion similar objectrank transfer edge bounds distinguish containment idref edges 
huang propose way rank tuples relational database pagerank connections determined dynamically query workload statically schema 
works exploits link structure provide keyword specific ranking 
furthermore ignore schema semantics computing scores 
performance 
set works tackled problem improving performance original pagerank algorithm 
algorithms improve calculation global pagerank 
jeh widom method efficiently calculate pagerank values multiple base sets precomputing set partial vectors runtime calculate pageranks 
key idea precompute compact way pagerank values set hub pages random walks pass 
hub pageranks calculate runtime pageranks base set consisting nodes hub set 
case possible define set hub nodes node database part base set 
adjustable framework answer keyword queries authority transfer paradigm believe applicable significant number domains obviously meaningful database 
showed framework efficient semantically meaningful experimental evaluation user surveys respectively 
investigated framework applied small modifications applications bibliographic authority transfer intuition applicable 
example consider complaints database stores complaint reports customers regarding products 
assume wish rank complaint reports urgency goal keep customers satisfied goodness customer total sales associated 
base set computation global objectrank set customers customer base objectrank proportional total sales amount 
reasonable assignment authority transfer rates shown 
notice adjusting parameters input preprocessing stage 
plan investigate opportunities moving parameters query stage perform demand objectrank calculation storing objectrank index 
allow user input parameters cal sales submitted customer complaint product authority transfer schema graph complaints database 
query 
michael creating web interface objectrank demo 
reviewers useful comments 
msdn microsoft com library 

oracle com products text content html 

www ibm com software data db index html 

abiteboul suciu buneman 
data web relations semistructured data xml 
morgan kaufmann series data management systems 
agrawal chaudhuri das 
system keyword search relational databases 
icde 
chakrabarti sudarshan 
keyword searching browsing databases banks 
icde 
bharat henzinger 
improved algorithms topic distillation hyperlinked environment 
sigir 
brin page :10.1.1.109.4049
anatomy large scale hypertextual web search engine 
www conference 
chakrabarti dom gibson kleinberg raghavan rajagopalan 
automatic resource compilation analyzing hyperlink structure associated text 
www conference 
chen gan suel 
efficient techniques computing pagerank 
cikm 
cormen leiserson rivest 
algorithms 
mit press 
doyle snell 
random walks electric networks 
mathematical association america washington 
fagin lotem naor :10.1.1.112.869
optimal aggregation algorithms middleware 
acm pods 
golub loan 
matrix computations 
johns hopkins 
gu nahrstedt yuan xu 
xml quality service enabling language web 
journal visual languages computing 
guo shao shanmugasundaram 
ranked keyword search xml documents 
acm sigmod 
ref haveliwala 
efficient computation pagerank 
technical report stanford university www stanford edu papers efficient pr pdf 
haveliwala 
topic sensitive pagerank 
www conference 
papakonstantinou 
discover keyword search relational databases 
vldb 
papakonstantinou 
keyword proximity search xml graphs 
icde 
huang xue yang 
implicit relationship discovery relational databases 

jeh widom 
scaling personalized web search 
www conference 
kamvar haveliwala manning golub 
extrapolation methods accelerating pagerank computations 
www conference 
kleinberg :10.1.1.120.3875
authoritative sources hyperlinked environment 
journal acm 
motwani raghavan 
randomized algorithms 
cambridge university press united kingdom 
richardson domingos 
intelligent surfer probabilistic combination link content information pagerank 
advances neural information processing systems mit press 
salton 
automatic text processing transformation analysis retrieval information computer 
addison wesley 
savoy 
bayesian inference networks spreading activation hypertext systems 
information processing management 
