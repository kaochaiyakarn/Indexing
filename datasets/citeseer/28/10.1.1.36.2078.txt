probabilistic roadmap methods parallel nancy amato dale amato cs edu cs edu technical report department computer science texas university november report experience parallelizing probabilistic roadmap motion planning methods prms 
show significant scalable speedups obtained relatively little effort part developer 
experience limited prms 
particular outline general techniques parallelizing types computations commonly performed motion planning algorithms identify potential difficulties faced efforts parallelize sequential motion planning methods 
research supported part nsf career award ccr reu supplement nsf iis reu supplement eia eia texas higher education coordinating board arp ncsa university illinois urbana champaign 
dale supported part department education fellowship 
different motion planning methods proposed practice computationally infeasible restricted cases robot degrees freedom dof 
strong evidence complete planner guaranteed find solution determine exists requires time exponential number dof robot 
reason attention focussed randomized probabilistic methods 
notable randomized potential field methods randomized path planner rpp latombe uses random walks attempt escape local minima 
randomized probabilistic roadmap methods prms gained attention problems involving high dimensional spaces :10.1.1.56.9474:10.1.1.19.3462
exist important applications solved current methods solved acceptable time constraints 
example problems require extremely fast real time solution animation virtual reality applications 
motion planning parallel sharp contrast great amount attention sequential motion planning little effort spent developing parallel planners 
quite surprising high complexity typical motion planning problem frequent need fast real time solutions 
particular take relatively small amount time afford spend time generating nodes better quality turning things connection phase 
initial method simple sophisticated take advantage inherent parallelism phase implemented 
benefit expensive second phase node connection effective produce better results 
example working smart addition hard 
node generation parallelizing node generation phase basic prm method trivial :10.1.1.19.3462
nodes desired simply ask processors generate 
prm processor 

generate random cfg 
