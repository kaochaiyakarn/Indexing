antitonic logic programs carlos dam lu moniz pereira de arti cial departamento de inform universidade nova de lisboa portugal 
mail cd di fct unl pt 
previous de ned monotonic logic programs extend de nite logic programming arbitrary complete lattices truth values appropriate notion implication 
shown framework general capture generalized annotated logic programs probabilistic deductive databases possibilistic logic programming hybrid probabilistic logic programs fuzzy logic programming :10.1.1.16.2245
semantics de ne form non monotonic negation fundamental knowledge representation applications 
spirit previous generalise framework monotonic logic programs allow rules arbitrary antitonic bodies general complete lattices normal programs special case 
shown framework general capture generalized annotated logic programs probabilistic deductive databases possibilistic logic programming hybrid probabilistic logic programs fuzzy logic programming :10.1.1.16.2245
semantics de ne form non monotonic negation fundamental knowledge representation applications 
spirit previous generalise framework monotonic logic programs allow rules arbitrary antitonic bodies general complete lattices normal programs special case 
show standard logic programming theoretical results carry antitonic logic programs de ning stable model founded model alike semantics 
apply illustrate theory logic programs costs extending original presentation class negations :10.1.1.64.9246
generalization standard logic programming valued logics foreseen quite long time :10.1.1.39.4588:10.1.1.50.9156:10.1.1.50.1751
substantial results attained eld 
particular logic programming literature languages semantics proposals extensions de nite logic programs non monotonic default negation :10.1.1.24.3985
usually authors characterize programs model theoretic semantics minimum model guaranteed exist corresponding monotonic xpoint operator continuous 
semantics de ne form non monotonic negation fundamental knowledge representation applications 
spirit previous generalise framework monotonic logic programs allow rules arbitrary antitonic bodies general complete lattices normal programs special case 
show standard logic programming theoretical results carry antitonic logic programs de ning stable model founded model alike semantics 
apply illustrate theory logic programs costs extending original presentation class negations :10.1.1.64.9246
generalization standard logic programming valued logics foreseen quite long time :10.1.1.39.4588:10.1.1.50.9156:10.1.1.50.1751
substantial results attained eld 
particular logic programming literature languages semantics proposals extensions de nite logic programs non monotonic default negation :10.1.1.24.3985
usually authors characterize programs model theoretic semantics minimum model guaranteed exist corresponding monotonic xpoint operator continuous 
previous abstracted details de ned general framework monotonic logic programs captures core logic programming :10.1.1.16.2245
show standard logic programming theoretical results carry antitonic logic programs de ning stable model founded model alike semantics 
apply illustrate theory logic programs costs extending original presentation class negations :10.1.1.64.9246
generalization standard logic programming valued logics foreseen quite long time :10.1.1.39.4588:10.1.1.50.9156:10.1.1.50.1751
substantial results attained eld 
particular logic programming literature languages semantics proposals extensions de nite logic programs non monotonic default negation :10.1.1.24.3985
usually authors characterize programs model theoretic semantics minimum model guaranteed exist corresponding monotonic xpoint operator continuous 
previous abstracted details de ned general framework monotonic logic programs captures core logic programming :10.1.1.16.2245
generalise framework allow rules arbitrary antitonic bodies general complete lattices normal programs special case show standard logic programming theoretical results carry antitonic logic programs de ning stable founded model semantics alike 
apply illustrate theory logic programs costs extending original presentation class negations :10.1.1.64.9246
generalization standard logic programming valued logics foreseen quite long time :10.1.1.39.4588:10.1.1.50.9156:10.1.1.50.1751
substantial results attained eld 
particular logic programming literature languages semantics proposals extensions de nite logic programs non monotonic default negation :10.1.1.24.3985
usually authors characterize programs model theoretic semantics minimum model guaranteed exist corresponding monotonic xpoint operator continuous 
previous abstracted details de ned general framework monotonic logic programs captures core logic programming :10.1.1.16.2245
generalise framework allow rules arbitrary antitonic bodies general complete lattices normal programs special case show standard logic programming theoretical results carry antitonic logic programs de ning stable founded model semantics alike 
apply illustrate theory logic programs costs extending original presentation class negations :10.1.1.64.9246
purpose follow algebraic approach language semantics logic programs spirit 
proceeds follows 
particular logic programming literature languages semantics proposals extensions de nite logic programs non monotonic default negation :10.1.1.24.3985
usually authors characterize programs model theoretic semantics minimum model guaranteed exist corresponding monotonic xpoint operator continuous 
previous abstracted details de ned general framework monotonic logic programs captures core logic programming :10.1.1.16.2245
generalise framework allow rules arbitrary antitonic bodies general complete lattices normal programs special case show standard logic programming theoretical results carry antitonic logic programs de ning stable founded model semantics alike 
apply illustrate theory logic programs costs extending original presentation class negations :10.1.1.64.9246
purpose follow algebraic approach language semantics logic programs spirit 
proceeds follows 
appeal motivation examples logic programs costs associated rule weight cost factor :10.1.1.64.9246
section monotonic logic programs supply theoretical results relevant 
generalise framework allow rules arbitrary antitonic bodies general complete lattices normal programs special case show standard logic programming theoretical results carry antitonic logic programs de ning stable founded model semantics alike 
apply illustrate theory logic programs costs extending original presentation class negations :10.1.1.64.9246
purpose follow algebraic approach language semantics logic programs spirit 
proceeds follows 
appeal motivation examples logic programs costs associated rule weight cost factor :10.1.1.64.9246
section monotonic logic programs supply theoretical results relevant 
section introduce antitonic logic programs means transformation monotonic programs de ne semantics showing enjoy properties consonant logic programming approach 
pointing 
logic programming costs rules de nite logic programs assigned non negative real numbers ascribing rule program cost applying :10.1.1.64.9246
appeal motivation examples logic programs costs associated rule weight cost factor :10.1.1.64.9246
section monotonic logic programs supply theoretical results relevant 
section introduce antitonic logic programs means transformation monotonic programs de ne semantics showing enjoy properties consonant logic programming approach 
pointing 
logic programming costs rules de nite logic programs assigned non negative real numbers ascribing rule program cost applying :10.1.1.64.9246
authors de ne interpretations cost 
non reusability approach discuss assumes individual atom program involves cost 
reusability approach pay concluding atom rst time 
costs interpreted time case semantics proposed isomorphic van emden quantitative logic programs 
cost atom 
time interpretation assume atoms body proved parallel 
cost applying rule weight rule plus maximum time derive atom body reusability 
derivation takes max 
authors de ne model xpoint theory logic programs costs :10.1.1.64.9246
employ illustrate power monotonic logic programs attain results 
rest shall focus general logic programs costs non reusability approach 
monotonic logic programs theoretical foundations logic programming clearly established de nite logic programs see programs rules form propositional symbol atom classical implication usual boolean conjunction :10.1.1.64.9246
section generalize language de nite logic programs order encompass complex bodies heads evidently valued logics 
derivation takes max 
authors de ne model xpoint theory logic programs costs :10.1.1.64.9246
employ illustrate power monotonic logic programs attain results 
rest shall focus general logic programs costs non reusability approach 
monotonic logic programs theoretical foundations logic programming clearly established de nite logic programs see programs rules form propositional symbol atom classical implication usual boolean conjunction :10.1.1.64.9246
section generalize language de nite logic programs order encompass complex bodies heads evidently valued logics 
simplicity consider propositional ground case 
furthermore de ne model xpoint theory monotonic logic programs extend classical results logic programming 
important point realize fundamental results logic programming depend monotonicity body rule fact possible determine truth value proposition head truth value rule body 
de ning new logic necessary address distinct related aspects syntax corresponding interpretation logical symbols language 
adopt algebraic characterization language interpretation operators 
general powerful framework allowing simple relation 
lack space reduce presentation essentials 
details consult instance :10.1.1.64.9246
main assumptions collected de nitions 
de nition implication algebra 
complete lattice consider algebra carrier set say implication algebra respect de ned operator top element example 
logic programs costs set truth values interval reals greater equal extended nity ordered greater equal relation :10.1.1.52.3296
details consult instance :10.1.1.64.9246
main assumptions collected de nitions 
de nition implication algebra 
complete lattice consider algebra carrier set say implication algebra respect de ned operator top element example 
logic programs costs set truth values interval reals greater equal extended nity ordered greater equal relation :10.1.1.52.3296
bottom element top element course 
upper bound complete lattice mum 
designate complete lattice implication symbol de ned de nes implication algebra :10.1.1.64.9246
notice valued logics implication connectives comply property 
complete lattice consider algebra carrier set say implication algebra respect de ned operator top element example 
logic programs costs set truth values interval reals greater equal extended nity ordered greater equal relation :10.1.1.52.3296
bottom element top element course 
upper bound complete lattice mum 
designate complete lattice implication symbol de ned de nes implication algebra :10.1.1.64.9246
notice valued logics implication connectives comply property 
refer reader details :10.1.1.16.2245
note :10.1.1.64.9246
monotonic logic programs constructed syntax induced implication algebra set propositional symbols 
bottom element top element course 
upper bound complete lattice mum 
designate complete lattice implication symbol de ned de nes implication algebra :10.1.1.64.9246
notice valued logics implication connectives comply property 
refer reader details :10.1.1.16.2245
note :10.1.1.64.9246
monotonic logic programs constructed syntax induced implication algebra set propositional symbols 
way syntax semantics relate algebraic setting known defer details :10.1.1.64.9246
de nition monotonic logic programs 
upper bound complete lattice mum 
designate complete lattice implication symbol de ned de nes implication algebra :10.1.1.64.9246
notice valued logics implication connectives comply property 
refer reader details :10.1.1.16.2245
note :10.1.1.64.9246
monotonic logic programs constructed syntax induced implication algebra set propositional symbols 
way syntax semantics relate algebraic setting known defer details :10.1.1.64.9246
de nition monotonic logic programs 
implication algebra respect complete lattice set propositional symbols forma corresponding algebra formulae freely generated symbols operators monotonic logic program set rules form 
notice valued logics implication connectives comply property 
refer reader details :10.1.1.16.2245
note :10.1.1.64.9246
monotonic logic programs constructed syntax induced implication algebra set propositional symbols 
way syntax semantics relate algebraic setting known defer details :10.1.1.64.9246
de nition monotonic logic programs 
implication algebra respect complete lattice set propositional symbols forma corresponding algebra formulae freely generated symbols operators monotonic logic program set rules form 
rule formula forma 
head rule propositional symbol 
result immediate consequences operator extending results van emden kowalski general theoretical setting implication algebras de nition immediate consequences operator 
monotonic logic program 
de ne immediate consequences operator ia ia mapping interpretations interpretations propositional symbol lub immediate consequences operator evaluates body rule propositional symbol truth value simply upper bound truth values bodies rules 
example 
weighted logic programs immediate consequences operator reduces lub fs bm bm pg inf fs bm bm pg similar operator :10.1.1.64.9246
fundamental property operator theorem monotonicity immediate consequences operator 
interpretations ia monotonic logic program 
operator monotonic 
usual set models characterized post theorem 
interpretation ia model monotonic logic program xpoint model semantics monotonic logic program mp model obtain model program trans nite iteration immediate consequences operator stated theorem theorem fixpoint semantics 
monotonic logic program consider trans nite sequence interpretations ia successor ordinal limit ordinal ordinal model mp major di erence standard classical logic programming operator continuous iterations may necessary reach xpoint 
important results carry general framework 
possibility unavoidable wants retain generality 
study sucient conditions guarantee continuity see :10.1.1.64.9246
determine model weighted logic program example example 
interpretation maps literal 
continuing example computation proceeds follows antitonic logic programs preceding section reviewed framework monotonic logic programs 
extend syntax programs allowing rules antitonic bodies techniques developed logic programming theory 
determine model weighted logic program example example 
interpretation maps literal 
continuing example computation proceeds follows antitonic logic programs preceding section reviewed framework monotonic logic programs 
extend syntax programs allowing rules antitonic bodies techniques developed logic programming theory 
attained aim de ne founded stable model semantics logic programming arbitrary implication algebras :10.1.1.64.9246:10.1.1.24.6050:10.1.1.121.6788
easily extend semantics embedding monotonic logic programs non monotonic negations 
apply new results logic programs costs answering questions raised :10.1.1.64.9246
start language antitonic logic programs de nition antitonic logic programs 
implication algebra respect complete lattice set propositional symbols forma corresponding algebra formulae freely generated symbols operators antitonic logic program pair sets rules form 
continuing example computation proceeds follows antitonic logic programs preceding section reviewed framework monotonic logic programs 
extend syntax programs allowing rules antitonic bodies techniques developed logic programming theory 
attained aim de ne founded stable model semantics logic programming arbitrary implication algebras :10.1.1.64.9246:10.1.1.24.6050:10.1.1.121.6788
easily extend semantics embedding monotonic logic programs non monotonic negations 
apply new results logic programs costs answering questions raised :10.1.1.64.9246
start language antitonic logic programs de nition antitonic logic programs 
implication algebra respect complete lattice set propositional symbols forma corresponding algebra formulae freely generated symbols operators antitonic logic program pair sets rules form 
rule formula forma 
head rule propositional symbol 
attentive reader noticed de nition programs de ne positive information bodies 
antitonic character rules greater body arguments lesser tu lesser 
clearly framework captures normal logic programs rule form bm translated bm cn rule exists new atom form underlying lattice truth values 
natural generalization include rules declare directly tu enter arena extending logic programming general logic programming rules explicit default negation heads permitted deal subsequent 
order de ne semantics antitonic logic programs resort gelfond lifschitz division operator transforms antitonic logic program monotonic know compute corresponding model :10.1.1.64.9246
usual technique de ning founded stable model semantics normal logic programs 
de nition results orbit notion 
de nition program division 
consider antitonic logic program interpretation tu division program tu monotonic logic program tu tu assume truth value corresponding constant operator returns value 
important results proposition 
partial interpretation model antitonic logic program furthermore partial interpretation 
proposition simply assuring knowledge unde ned values interpretation extract information programs 
operator maps partial interpretations interpretations 
de ne new operator maps partial interpretations partial interpretations known true false spirit przymusinski operator mark interpretation partial interpretation :10.1.1.64.9246:10.1.1.24.6050:10.1.1.50.1751:10.1.1.50.1751
de nition partial consequences operator 
antitonic logic program partial interpretations partial consequences operator equation tu tu usually omit subscript denote 
interpretation represents safe knowledge 
hand tu conclude de nitely doesn hold interpretation deriving holds surely 
false degree wrt 
tu 
inconsistent degree wrt 
tu 
resorting de nition terms alternating xpoint de nition founded semantics antitonic logic programs theorem :10.1.1.64.9246:10.1.1.16.2250
consider antitonic logic program partial interpretation xpoint tu 
example 
founded model example determined follows founded model conclude cost 
example illustrates possible interpretation negation logic programs costs costs prove true costs show false vice versa 
example 
founded model example determined follows founded model conclude cost 
example illustrates possible interpretation negation logic programs costs costs prove true costs show false vice versa 
founded model xpoint 
operator known result theory logic programming :10.1.1.64.9246:10.1.1.16.2250
result theorem 
partial stable models antitonic logic program models partial stable model said consistent propositional symbol inconsistent degree 
said fully de ned propositional symbol unde ned truth value degree 
clearly expected proposition 
non false part provides joint limits stable models 
general wfm wfm tu interpretation negation stable model semantics clear 
atom prove negation provable costs prove 
simply looking model see hold know instantly negation holds extra ort justifying zero cost 
believe accordance ideas advanced section possible interpretation negation logic programs costs :10.1.1.64.9246
obviously antitonic negation easily encoded framework 
single sentence shows logically program arbitrary monotonic anti monotonic antitonic operators complete lattice 
simple powerful idea enormous range applications 
particular way combine integrate forms reasoning single framework fuzzy probabilistic uncertain paraconsistent ones 
obviously antitonic negation easily encoded framework 
single sentence shows logically program arbitrary monotonic anti monotonic antitonic operators complete lattice 
simple powerful idea enormous range applications 
particular way combine integrate forms reasoning single framework fuzzy probabilistic uncertain paraconsistent ones 
natural extension seminal works subrahmanian fitting :10.1.1.39.4588:10.1.1.50.9156:10.1.1.24.6050:10.1.1.50.1751
authors stick logic programming syntax considering arbitrary monotonic antitonic functions bodies 
major contribution 
absolutely fair article introduces notions attenuation operators viewed arbitrary monotonic functions bilattices :10.1.1.24.6050
quite appeared literature profound entitled approximations stable operators founded fixpoints applications nonmonotonic reasoning 
particular way combine integrate forms reasoning single framework fuzzy probabilistic uncertain paraconsistent ones 
natural extension seminal works subrahmanian fitting :10.1.1.39.4588:10.1.1.50.9156:10.1.1.24.6050:10.1.1.50.1751
authors stick logic programming syntax considering arbitrary monotonic antitonic functions bodies 
major contribution 
absolutely fair article introduces notions attenuation operators viewed arbitrary monotonic functions bilattices :10.1.1.24.6050
quite appeared literature profound entitled approximations stable operators founded fixpoints applications nonmonotonic reasoning 
stance depart monotone antitonic operator de ne approximations stable operator corresponds version founded semantics 
interesting case antitonic 
situation results obtained scheme considering single rule program 
situation results obtained scheme considering single rule program 
true results follow immediately 
frameworks capable expressing 
show multiple operators combined order extend widely accepted founded stable model semantics normal logic programs point addressed 
regarding expect show embeddings cost functions introduced :10.1.1.64.9246
extension antitonic results residuated lattices generalized modus ponens rule de ned foreseen 
aim provide proof theory instances framework 

baral subrahmanian 
