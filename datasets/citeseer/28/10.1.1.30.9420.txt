methodology developing agent systems enterprise integration elizabeth kendall margaret chong jiang computer systems engineering royal melbourne institute technology box melbourne vic australia email address kendall rmit edu au potentially significant opportunities enterprise integration development advancement agent systems 
agents generic building blocks methodology established development systems 
methodology encompass modelling design implementation systems 
outlines methodology software engineering agent systems 
methodology idef definition approach workflow modelling analysis enterprise modelling framework case driven approach object oriented software engineering 
methodology illustrated case study area discrete parts manufacturing 
agents cooperate negotiate 
agents negotiate engage conversations represented speech acts state machines 
languages developed support 
cool extension kqml barbuceanu fox agents proposals accept reject goals notify agents goal cancellation satisfaction failure 
language agentalk kuwabara ishida inheritance specialization mechanism introducing new protocols extensions predefined ones :10.1.1.81.266
related resulted preliminary categorization basic types agents 
selectors estimators evaluators critics considered narrow scope single function agents 
approach valuable addresses applications level allows new problems viewed extensions specializations problems seen 
basic types negotiation agents particular conflict resolution klein identified 
dynamic model includes scenarios event traces object interactions 
functional model resembles data flow diagram passive objects data stores 
state transition diagrams provide view object dynamic behavior gain insight inheritance 
subclasses inherit state diagram superclass adding states transitions 
protocols agentalk section fact objects specialized inheritance stated kuwabara ishida :10.1.1.81.266
case approach called object oriented software engineering jacobson case scenario description users interact system certain mode operation 
user particular role known actor actor uses cases 
objects relevant case identified dynamic behavior analysed 
case extend meaning inserted case adding definition 
