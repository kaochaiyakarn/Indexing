interbase kb integrating knowledge base system multidatabase system data warehousing nick ahmed elmagarmid elias dept informatics aristotle university thessaloniki thessaloniki greece 
mail csd auth gr dept computer sciences purdue university usa mail cs purdue edu carried author sabbatical leave purdue university 
partially supported national science foundation eia iis eia 
describes integration multidatabase system knowledge base system support data integration component data warehouse 
multidatabase system integrates various component databases common query language provide capability schema integration utilities necessary data warehousing 
knowledge base system offers addition declarative logic language second order syntax order semantics integrating schemes data sources warehouse defining complex recursively defined materialized views 
hand federated database systems support partial total integration schemata component database systems 
definitions evident similarities federated databases data warehouses infrastructure building maintaining 
federated database task supplied powerful materialized view definition maintenance tools order keep data stored warehouse consistent data modifications component databases provide data cleansing integrity checking summarizing needs data warehouse 
database system data warehousing schema integration mechanism provides uniform transparent access data underlying component databases 
argue logic offers desired power flexibility data warehousing describe integration multidatabase system knowledge base system provides data integration component data warehouse fulfilling requirements :10.1.1.28.6091
noticed system described prototype tests usefulness logic data warehousing considered industrial strength warehouse system requires query analysis component support information needs specific users :10.1.1.40.5676
actual contribution integration logic language interbase multidatabase complex materialized views easily efficiently defined maintained 
furthermore logic rules data warehousing utilities data cleansing integrity checking summarization 
addition extends logic language previous second order logic syntax variables range class attribute names unambiguously translated order logic variables range class instances attribute values :10.1.1.28.6091
definitions evident similarities federated databases data warehouses infrastructure building maintaining 
federated database task supplied powerful materialized view definition maintenance tools order keep data stored warehouse consistent data modifications component databases provide data cleansing integrity checking summarizing needs data warehouse 
database system data warehousing schema integration mechanism provides uniform transparent access data underlying component databases 
argue logic offers desired power flexibility data warehousing describe integration multidatabase system knowledge base system provides data integration component data warehouse fulfilling requirements :10.1.1.28.6091
noticed system described prototype tests usefulness logic data warehousing considered industrial strength warehouse system requires query analysis component support information needs specific users :10.1.1.40.5676
actual contribution integration logic language interbase multidatabase complex materialized views easily efficiently defined maintained 
furthermore logic rules data warehousing utilities data cleansing integrity checking summarization 
addition extends logic language previous second order logic syntax variables range class attribute names unambiguously translated order logic variables range class instances attribute values :10.1.1.28.6091
second order syntax proves extremely valuable integrating heterogeneous database schemes data models 
argue logic offers desired power flexibility data warehousing describe integration multidatabase system knowledge base system provides data integration component data warehouse fulfilling requirements :10.1.1.28.6091
noticed system described prototype tests usefulness logic data warehousing considered industrial strength warehouse system requires query analysis component support information needs specific users :10.1.1.40.5676
actual contribution integration logic language interbase multidatabase complex materialized views easily efficiently defined maintained 
furthermore logic rules data warehousing utilities data cleansing integrity checking summarization 
addition extends logic language previous second order logic syntax variables range class attribute names unambiguously translated order logic variables range class instances attribute values :10.1.1.28.6091
second order syntax proves extremely valuable integrating heterogeneous database schemes data models 
core knowledge base system lays active oodb metaclasses supports events active rules integrates declarative rules deductive production rules 
features provide languages efficient mechanisms defining self maintainable complex materialized views rich structural behavioral representation capabilities due powerful mechanism metaclasses 
declarative rules knowledge base system offer flexible multiple purpose mechanism data warehouse defining maintaining global integrated schema defining maintaining relational recursive aggregated views constructing data warehousing tools data cleansing integrity constraint checking summarization 
deductive rules define common view global schema integrated heterogeneous databases default view definition incremental maintenance mechanism system 
way combine declarativeness soundness order logic flexibility meta models second order syntax rich structural behavioral capabilities object oriented data model 
efficiently implement schema integration mechanism event driven mechanisms active database 
interesting logic multidatabase systems querying specification concurrent logic programming languages vpl provide specification dynamic parallel querying static sequential schema integration 
maintenance materialized views incremental view maintenance algorithms developed centralized relational object oriented database systems distributed systems data warehouses :10.1.1.53.6941:10.1.1.50.3821:10.1.1.126.1870:10.1.1.19.5246
main difference view maintenance centralized distributed system centralized environments base view data place available querying order maintain consistently 
hand data warehouse maintenance views may require querying remote data sources may unavailable various reasons self maintainability views guaranteed :10.1.1.126.1870
furthermore remote accesses may delay process maintenance 
approach generalization uses multiple active rules incrementally maintain materialized views derived data respectively :10.1.1.53.6941:10.1.1.50.3821
efficiently implement schema integration mechanism event driven mechanisms active database 
interesting logic multidatabase systems querying specification concurrent logic programming languages vpl provide specification dynamic parallel querying static sequential schema integration 
maintenance materialized views incremental view maintenance algorithms developed centralized relational object oriented database systems distributed systems data warehouses :10.1.1.53.6941:10.1.1.50.3821:10.1.1.126.1870:10.1.1.19.5246
main difference view maintenance centralized distributed system centralized environments base view data place available querying order maintain consistently 
hand data warehouse maintenance views may require querying remote data sources may unavailable various reasons self maintainability views guaranteed :10.1.1.126.1870
furthermore remote accesses may delay process maintenance 
approach generalization uses multiple active rules incrementally maintain materialized views derived data respectively :10.1.1.53.6941:10.1.1.50.3821
approach translates deductive rule single active rule discrimination network matching technique 
main advantages approach easier rule maintenance centralised rule selection execution control straightforward implementation traditional conflict resolution strategies net effect events 
maintenance materialized views incremental view maintenance algorithms developed centralized relational object oriented database systems distributed systems data warehouses :10.1.1.53.6941:10.1.1.50.3821:10.1.1.126.1870:10.1.1.19.5246
main difference view maintenance centralized distributed system centralized environments base view data place available querying order maintain consistently 
hand data warehouse maintenance views may require querying remote data sources may unavailable various reasons self maintainability views guaranteed :10.1.1.126.1870
furthermore remote accesses may delay process maintenance 
approach generalization uses multiple active rules incrementally maintain materialized views derived data respectively :10.1.1.53.6941:10.1.1.50.3821
approach translates deductive rule single active rule discrimination network matching technique 
main advantages approach easier rule maintenance centralised rule selection execution control straightforward implementation traditional conflict resolution strategies net effect events 
furthermore performance comparison approach previous approaches showed set oriented rule execution required bulk warehouse updates approach considerably faster :10.1.1.28.6091
maintenance derived objects counting algorithm similar described 
furthermore remote accesses may delay process maintenance 
approach generalization uses multiple active rules incrementally maintain materialized views derived data respectively :10.1.1.53.6941:10.1.1.50.3821
approach translates deductive rule single active rule discrimination network matching technique 
main advantages approach easier rule maintenance centralised rule selection execution control straightforward implementation traditional conflict resolution strategies net effect events 
furthermore performance comparison approach previous approaches showed set oriented rule execution required bulk warehouse updates approach considerably faster :10.1.1.28.6091
maintenance derived objects counting algorithm similar described 
counting algorithm non recursive views recursive ones similar algorithm :10.1.1.53.6941
contrast counting algorithm recursive views calculation derived objects system terminates infinite derivation trees :10.1.1.28.6091
approaches view maintenance data warehouses follow approach similar active rules explicitly :10.1.1.50.3821:10.1.1.126.1870:10.1.1.19.5246
approach translates deductive rule single active rule discrimination network matching technique 
main advantages approach easier rule maintenance centralised rule selection execution control straightforward implementation traditional conflict resolution strategies net effect events 
furthermore performance comparison approach previous approaches showed set oriented rule execution required bulk warehouse updates approach considerably faster :10.1.1.28.6091
maintenance derived objects counting algorithm similar described 
counting algorithm non recursive views recursive ones similar algorithm :10.1.1.53.6941
contrast counting algorithm recursive views calculation derived objects system terminates infinite derivation trees :10.1.1.28.6091
approaches view maintenance data warehouses follow approach similar active rules explicitly :10.1.1.50.3821:10.1.1.126.1870:10.1.1.19.5246
functionality 
concerned maintenance anomalies may arise maintenance algorithms query directly data sources order maintain views warehouse 
main advantages approach easier rule maintenance centralised rule selection execution control straightforward implementation traditional conflict resolution strategies net effect events 
furthermore performance comparison approach previous approaches showed set oriented rule execution required bulk warehouse updates approach considerably faster :10.1.1.28.6091
maintenance derived objects counting algorithm similar described 
counting algorithm non recursive views recursive ones similar algorithm :10.1.1.53.6941
contrast counting algorithm recursive views calculation derived objects system terminates infinite derivation trees :10.1.1.28.6091
approaches view maintenance data warehouses follow approach similar active rules explicitly :10.1.1.50.3821:10.1.1.126.1870:10.1.1.19.5246
functionality 
concerned maintenance anomalies may arise maintenance algorithms query directly data sources order maintain views warehouse 
approach eliminates need query data sources replicating parts base data absolutely necessary maintenance views :10.1.1.126.1870
furthermore performance comparison approach previous approaches showed set oriented rule execution required bulk warehouse updates approach considerably faster :10.1.1.28.6091
maintenance derived objects counting algorithm similar described 
counting algorithm non recursive views recursive ones similar algorithm :10.1.1.53.6941
contrast counting algorithm recursive views calculation derived objects system terminates infinite derivation trees :10.1.1.28.6091
approaches view maintenance data warehouses follow approach similar active rules explicitly :10.1.1.50.3821:10.1.1.126.1870:10.1.1.19.5246
functionality 
concerned maintenance anomalies may arise maintenance algorithms query directly data sources order maintain views warehouse 
approach eliminates need query data sources replicating parts base data absolutely necessary maintenance views :10.1.1.126.1870
replicated base data views self maintainable 
contrast counting algorithm recursive views calculation derived objects system terminates infinite derivation trees :10.1.1.28.6091
approaches view maintenance data warehouses follow approach similar active rules explicitly :10.1.1.50.3821:10.1.1.126.1870:10.1.1.19.5246
functionality 
concerned maintenance anomalies may arise maintenance algorithms query directly data sources order maintain views warehouse 
approach eliminates need query data sources replicating parts base data absolutely necessary maintenance views :10.1.1.126.1870
replicated base data views self maintainable 
approach creates self maintainable views need concerned maintenance anomalies querying data sources whips :10.1.1.40.5676
compared approaches self maintainability put special effort infer base data replicated calculate view complements necessary information stored inside memories input events discrimination network 
contrast previous approaches data warehousing approach handles recursively defined views deductive rules stratification defining maintaining 
functionality 
concerned maintenance anomalies may arise maintenance algorithms query directly data sources order maintain views warehouse 
approach eliminates need query data sources replicating parts base data absolutely necessary maintenance views :10.1.1.126.1870
replicated base data views self maintainable 
approach creates self maintainable views need concerned maintenance anomalies querying data sources whips :10.1.1.40.5676
compared approaches self maintainability put special effort infer base data replicated calculate view complements necessary information stored inside memories input events discrimination network 
contrast previous approaches data warehousing approach handles recursively defined views deductive rules stratification defining maintaining 
interbase kb features distinct features interbase kb compared previous approaches data warehousing view materialization combination declarativeness logic flexibility second order data models syntax rich structural behavioral capabilities object oriented data model schema integration heterogeneous data sources varying data models 
efficient implementation schema integration mechanism event driven rules active database 
single rule language mechanism various purposes data warehouse data cleaning integrity checking summarization 
compared previous multidatabases interbase kb mainly offers logic language efficient mechanism defining self maintaining complex materialized views 
way multidatabase system extended data integration component data warehouse deductive rules multiple vital purposes data warehousing 
presents new techniques protocols exploiting resources multidatabase system integrating knowledge base system 
comparing previous works knowledge base systems interbase kb offers second order logic language order semantics integrating heterogeneous schemes data models new uses production deductive rules terms data warehousing data cleansing integrity checking summarization :10.1.1.28.6091
rationale active oo knowledge base system support data warehousing includes high level deductive rules provide simplicity declarativeness ubiquity supporting functionality data warehousing view definition maintenance heterogeneous schema integration data cleansing integrity checking data summarization 
object orientation offers rich data knowledge modeling capabilities powerful flexible mechanism metaclasses 
specifically metaclasses interbase kb contributes extensibility rule system ability allows translation second order rule syntax order semantics see section :10.1.1.28.6091
furthermore currently investigating versatile oo data types implement olap multi dimensionality 
presents new techniques protocols exploiting resources multidatabase system integrating knowledge base system 
comparing previous works knowledge base systems interbase kb offers second order logic language order semantics integrating heterogeneous schemes data models new uses production deductive rules terms data warehousing data cleansing integrity checking summarization :10.1.1.28.6091
rationale active oo knowledge base system support data warehousing includes high level deductive rules provide simplicity declarativeness ubiquity supporting functionality data warehousing view definition maintenance heterogeneous schema integration data cleansing integrity checking data summarization 
object orientation offers rich data knowledge modeling capabilities powerful flexible mechanism metaclasses 
specifically metaclasses interbase kb contributes extensibility rule system ability allows translation second order rule syntax order semantics see section :10.1.1.28.6091
furthermore currently investigating versatile oo data types implement olap multi dimensionality 
commercial oodb systems offer flexibility metaclasses core prolog oodb system exhibits serves best purposes fast prototyping experimentation 
object oriented kbs offers natural seamless integration interbase multidatabase object oriented 

condition declarative rule compiles complex event network discrimination network incrementally matches rule conditions database 
rationale device enhanced functionality required data warehousing provided number high level features supported single rule type 
multiple rule types needed integrating schemata heterogeneous databases defining maintaining materialized views providing utilities data warehousing data cleansing integrity checking summarization 
device unique supporting kinds declarative rule types efficient event driven mechanism 
furthermore rule mechanism extensible allowing useful rule types added :10.1.1.28.6091
section briefly describe syntax semantics production rules basis integrating types declarative rules active oodb 
deductive rules view definition maintenance thoroughly described section 
furthermore discuss issues concerning rule compilation condition matching 
section declarative rules provide useful tools data warehousing 
section briefly describe syntax semantics production rules basis integrating types declarative rules active oodb 
deductive rules view definition maintenance thoroughly described section 
furthermore discuss issues concerning rule compilation condition matching 
section declarative rules provide useful tools data warehousing 
details declarative rule integration device previous :10.1.1.28.6091
production rule syntax production rules mainly follow ops paradigm injected syntactic influences oodb context device 
rules composed condition action condition defines pattern objects detected database action defines set updates performed database detection pattern occurrence 
example 
sequel going database schema 
conflict resolution strategies deductive rules differ production rules 
rule search space navigated breadth iterated strategy model set oriented semi naive evaluation deductive rules depth recency navigation production rules 
execution order rules negation determined stratification algorithm 
deductive rule execution algorithms combined incremental condition checking techniques fixpoint semantics production rules described section provide mechanism materializing correctly maintaining views data sources inside data warehouse 
self maintainable views important feature data warehouse ability self maintain materialized views able modify view querying data sources solely data kept inside warehouse current updates propagated data sources :10.1.1.126.1870
important advantages interbase kb views self maintainable additional mechanisms due existence discrimination network :10.1.1.126.1870
data needed order derive changes need materialized views warehouse source data modified directly inside memories input complex events need query back data sources 
additional benefit discrimination network multiple active rules 
alternative technique uses multiple active rules single deductive rule needs query data sources order derive changes need view 
rule search space navigated breadth iterated strategy model set oriented semi naive evaluation deductive rules depth recency navigation production rules 
execution order rules negation determined stratification algorithm 
deductive rule execution algorithms combined incremental condition checking techniques fixpoint semantics production rules described section provide mechanism materializing correctly maintaining views data sources inside data warehouse 
self maintainable views important feature data warehouse ability self maintain materialized views able modify view querying data sources solely data kept inside warehouse current updates propagated data sources :10.1.1.126.1870
important advantages interbase kb views self maintainable additional mechanisms due existence discrimination network :10.1.1.126.1870
data needed order derive changes need materialized views warehouse source data modified directly inside memories input complex events need query back data sources 
additional benefit discrimination network multiple active rules 
alternative technique uses multiple active rules single deductive rule needs query data sources order derive changes need view 
results update anomalies occur addition delay unavailability accessing data sources 
alternative technique uses multiple active rules single deductive rule needs query data sources order derive changes need view 
results update anomalies occur addition delay unavailability accessing data sources 
specific consider deductive rule multiple active rules translated active rules insert insert insert insert item inserted data source rules needs query data source item order insert item view data warehouse 
discrimination network information item exists available inside memory equivalent input event 
approaches multiple rule translation scheme store auxiliary information inside data warehouse avoid query data source :10.1.1.126.1870
approach just emulation data discrimination network 

deductive rules integrating heterogeneous data section describe mechanisms interbase kb integrating data heterogeneous data sources data warehouse 
requirements mechanism outlined 
called integration transparency 
common view rules condition considered base class 
materialization querying maintenance view done way rest views 
course materialization base data means source data mirrored inside data warehouse wastes lot space 
typical solution define common view condition deductive rule project away unneeded attributes local schemata :10.1.1.126.1870
reduce space needed materializing source data 
source data updated modifications propagated warehouse relevant events trigger deductive rules raised parameters modifications propagated discrimination network keep materialized views consistent 

deductive rules data integration tools data warehousing section demonstrates power deductive rules providing useful data integration tools data warehousing data cleansing integrity checking calculation summarization 
deleted object category lab corresponding department emp attribute gets value 
case choose delete object warehouse 
update number employees lab data source emulated deletion followed insertion value aggregate attribute data warehouse remains consistent 
semantics emulated action anti action rule pseudo language 
discussion simplified description mechanism aggregate attribute rules quite complicated shake extensibility terms user defined aggregate functions :10.1.1.28.6091

data warehouses information repositories integrate data possibly heterogeneous data sources available decision support querying analysis materialized views 
need maintained incrementally order consistent changes data sources 
multidatabase systems pre existing autonomous possibly heterogeneous database systems 
multidatabase system integrates various heterogeneous component databases common query language provide schema integration 
kbs provides declarative logic language offers schema integration heterogeneous data sources allows definition complex recursively defined views warehouse base data data sources provides data integration utilities data warehousing data cleansing integrity checking summarization 
core kbs lies active oodb supports metaclass hierarchies allow customization schema translation integration supports events event driven rules integrates declarative deductive production rules allow materialization complex views provides second order rule language extensions allow declarative specification integrating schemata heterogeneous data sources warehouse 
views self maintainable sense data sources need queried incremental view maintenance mechanism uses changes data sources information stored discrimination network selects matching deductive rules 
performance view maintenance mechanism studied compared approaches :10.1.1.28.6091
comparison shows approach considerably faster set oriented rule execution required maintaining warehouse bulk updates 
described prototype system supports data integration data warehouse intended industrial strength warehouse system requires query analysis tools meets specific users information processing needs 
currently investigating extension described system query analysis tools olap supporting multi dimensional data data cubes warehouse 
essence multi dimensional data efficient implementation mechanisms storing indexing accessing summarizing querying data cubes flexible modeling capabilities 

processing production rules device active knowledge base system data knowledge engineering vol 
pp 

elmagarmid device extensible active knowledge base system multiple rule type support ieee trans :10.1.1.28.6091
knowledge data engineering vol 
pp 

batini lenzerini navathe comparison methodologies database schema integration acm computing surveys vol 

carey haas schwarz arya cody fagin flickner niblack petkovic thomas ii williams wimmers heterogeneous multimedia information systems garlic approach proc 
ieee workshop research issues data engineering distributed object management taipei taiwan pp 

ceri widom deriving production rules incremental view maintenance proc :10.1.1.50.3821
int 
conf 
large databases morgan kaufman barcelona spain pp 

int 
conf 
large databases morgan kaufman barcelona spain pp 

ceri widom deriving incremental production rules deductive data information systems vol :10.1.1.53.6941
pp 

chaudhuri dayal overview data warehousing olap technology sigmod record vol 
pp 

pitoura elmagarmid object orientation multidatabase systems acm computing surveys vol 
pp 

quass gupta mumick widom making views self maintainable data warehousing proc :10.1.1.126.1870
conf 
parallel distributed information systems miami florida usa pp 

ullman principles database knowledge base systems computer science press rockville maryland 
widom deductive active databases paradigms ends spectrum proc 
int 
workshop rules database systems springer verlag edinburgh scotland pp 

wiener gupta labio zhuge garcia widom system prototype warehouse view maintenance proc :10.1.1.40.5676
acm workshop materialized views techniques applications montreal canada pp 


wu buchmann research issues data warehousing proc 
