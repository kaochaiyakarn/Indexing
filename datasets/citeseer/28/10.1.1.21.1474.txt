pvm parallel view maintenance concurrent data updates distributed sources xin zhang elke rundensteiner ding department computer science worcester polytechnic institute worcester ma cs wpi edu data warehouses dw built gathering information distributed information sources iss integrating customized repository 
years begun address problem view maintenance dws concurrent data updates different iss 
popular solutions eca strobe achieve concurrent maintenance requirement quiescence iss 
sweep solution releases quiescence requirement local compensation strategy processes update messages sequential manner 
optimize sequential processing developed parallel view maintenance algorithm called pvm incorporates benefits previous maintenance approaches offering improved performance due parallelism 
order perform parallel view maintenance identified critical issues detecting maintenance concurrent data updates parallel mode correcting problem dw commit order may correspond dw update processing order due parallel maintenance handling 
dw usually connects iss network network generally stable unacceptable block update transaction order integrator immediately accomplish view maintenance process 
maintenance typically conducted separate asynchronous process called deferred view maintenance cgl klm 
deferred view maintenance block update transactions iss time period extent dw temporarily inconsistent iss 
years number algorithms proposed deferred view maintenance cm gjm zgmw nr 
eca zgmhw handles view maintenance concurrent data updates centralized strobe zgmw sweep aasy handle distributed iss :10.1.1.48.4672
solution improves performance view maintenance critical reduce time dw lags inconsistent iss 
optimization lead improvement timeliness quality dw content important time critical applications stock market monitoring control systems 
performance optimization dw maintenance focus 
approach 
solution improves performance view maintenance critical reduce time dw lags inconsistent iss 
optimization lead improvement timeliness quality dw content important time critical applications stock market monitoring control systems 
performance optimization dw maintenance focus 
approach 
propose efficient algorithm called parallel view maintenance short pvm preserves advantages predecessors including sweep aasy overcoming main limitation terms performance caused sequential processing :10.1.1.48.4672
particular sweep handles data updates sequentially enforcing data updates queue dw manager data updates dus received fully processed 
sequential processing time dw system build distributed iss requires system responsible dw processing wait processing dbms server transmissions results update messages network 
variation called nested sweep handles multiple dus efficient way reusing part query results puts requirements dus require dus non interfering order terminate 
show pvm efficiently handles set concurrent data updates previous solutions parallelizing du handling process 
ffl design modular pvm architecture incorporates proposed solution techniques minimally adapting state art solution sweep achieve parallel view maintenance 
allow quick adaption pvm current systems 
ffl implement pvm primary literature sweep algorithm uniform testbed eve data warehousing system allow fair comparative evaluation 
best knowledge implementation experimented performance study sweep system reported literature far cost model discussion algorithm complexity 
ffl conduct series experimental studies assess performance benefits limitations pvm compared sweep aasy :10.1.1.48.4672
conclude pvm multi fold performance improvement sweep 
outline section contains background material needed 
section pvm solution including open research issues solutions introduced 
section presents results experimental performance study 
assumptions held previous vm literature 
assumption iss independent sense data update propagate iss 
assumption updates base relations assumed inserts deletes tuples 
modify modeled delete followed insert 
comparison state art view maintenance algorithms eca zgmhw strobe zgmw sweep aasy algorithms solve problem :10.1.1.48.4672
comparison features shown table inspired aasy :10.1.1.48.4672
due features quiescence requirement complete consistency high performance handling data update choose sweep baseline algorithm aim improve performance set data updates 
algorithm architecture consistency message quiescence key points execution cost eca centralized strong required remote single thread compensation quadratic message size strobe distributed strong required unique key multi thread assumption strobe distributed complete required unique key multi thread assumption sweep distributed complete required local single thread compensation nested distributed strong required local single thread sweep non interference compensation dus table comparison eca strobe sweep major limitations sweep handles dus sequential manner middle layer fully handled du committed dw start processing du decreases performance set dus forcing unnecessary delay due having wait response maintenance queries iss 
propose new algorithm called pvm enables parallel view maintenance keeping advantages sweep listed table 
assumption iss independent sense data update propagate iss 
assumption updates base relations assumed inserts deletes tuples 
modify modeled delete followed insert 
comparison state art view maintenance algorithms eca zgmhw strobe zgmw sweep aasy algorithms solve problem :10.1.1.48.4672
comparison features shown table inspired aasy :10.1.1.48.4672
due features quiescence requirement complete consistency high performance handling data update choose sweep baseline algorithm aim improve performance set data updates 
algorithm architecture consistency message quiescence key points execution cost eca centralized strong required remote single thread compensation quadratic message size strobe distributed strong required unique key multi thread assumption strobe distributed complete required unique key multi thread assumption sweep distributed complete required local single thread compensation nested distributed strong required local single thread sweep non interference compensation dus table comparison eca strobe sweep major limitations sweep handles dus sequential manner middle layer fully handled du committed dw start processing du decreases performance set dus forcing unnecessary delay due having wait response maintenance queries iss 
propose new algorithm called pvm enables parallel view maintenance keeping advantages sweep listed table 
line error correction incremental view computation sweep 
due features quiescence requirement complete consistency high performance handling data update choose sweep baseline algorithm aim improve performance set data updates 
algorithm architecture consistency message quiescence key points execution cost eca centralized strong required remote single thread compensation quadratic message size strobe distributed strong required unique key multi thread assumption strobe distributed complete required unique key multi thread assumption sweep distributed complete required local single thread compensation nested distributed strong required local single thread sweep non interference compensation dus table comparison eca strobe sweep major limitations sweep handles dus sequential manner middle layer fully handled du committed dw start processing du decreases performance set dus forcing unnecessary delay due having wait response maintenance queries iss 
propose new algorithm called pvm enables parallel view maintenance keeping advantages sweep listed table 
line error correction incremental view computation sweep 
sweep aasy algorithm technique called line error correction :10.1.1.48.4672
doing compensation completely evaluating query done eca zgmhw strobe zgmw algorithms sweep eliminates effects concurrent data updates evaluation incremental view maintenance query equation page soon detected middle layer 
example assume process incremental view maintenance data update deltar query partially evaluated 
current query result deltar step calculate update deltar happens evaluated result fifo property middle layer assumption middle layer receive deltar receives query middle layer know error term deltar evaluated locally eliminated restore expected answer sections going demonstrate pvm solution sweep example 
pvm parallel view maintenance solution architecture pvm pros cons previous vm algorithms introduce architecture pvm system extension initial architecture adopted vm systems 
terms performance du may times wait previous du commit 
price terms performance achieved due limiting maximal 
words vm processes full advantage parallelizing final commits refreshment dw may delayed preserve desired order required complete consistency 
algorithms pvm processes key features pvm give details pvm processes 
components employed traditional vm systems aasy :10.1.1.48.4672
module update constant process loop receive delta send delta forever process loop receive delta delta delta send delta forever initialization pseudo code module update depicts software module employed dw view maintenance 
main process invoked update deltar received dw 
initialization module start processes 
process assigns unique local timestamp messages coming dw including data updates query results 
data added dw increases space complexity vs size pvm performance number threads vs du linear linear linear linear pvm scale large number concurrent dus 
gives rise information redundancy lead inconsistent dw extent 
addition views self maintainable 
view maintenance methods concentrate ensuring consistency dw materialized views self maintainable 
eca zgmhw family algorithms introduces maintenance problem solves partially single strobe zgmw sweep aasy view maintenance algorithms multiple iss focus concurrency data updates :10.1.1.48.4672
strobe zgmw algorithm introduces concept queueing view updates dw committing updates dw unanswered query set uqs empty 
algorithm solves consistency problem subject potential threat infinite waiting dw extent may get updated 
mechanisms requiring iss timestamp view updates bcs global timing synchronization environment 
far consistency maintenance methods infinite waiting deficiency need global timestamp service see table 
algorithm solves consistency problem subject potential threat infinite waiting dw extent may get updated 
mechanisms requiring iss timestamp view updates bcs global timing synchronization environment 
far consistency maintenance methods infinite waiting deficiency need global timestamp service see table 
sweep pvm doesn limitations handle multiple data updates 
sweep aasy family algorithms succeeded eliminating mentioned limitations applying local compensation techniques :10.1.1.48.4672
sweep uses special detection methods concurrent data updates don need global time stamp mechanism 
requires quiescent state able update dw 
pvm addresses bottleneck sequential processing exploiting inherently parallelism view maintenance process due distributed iss independent servers 
nested sweep aasy handle set dus reusing query results :10.1.1.48.4672
sweep aasy family algorithms succeeded eliminating mentioned limitations applying local compensation techniques :10.1.1.48.4672
sweep uses special detection methods concurrent data updates don need global time stamp mechanism 
requires quiescent state able update dw 
pvm addresses bottleneck sequential processing exploiting inherently parallelism view maintenance process due distributed iss independent servers 
nested sweep aasy handle set dus reusing query results :10.1.1.48.4672
due recursive solution requires non interference dus infinite recursive call may result maintenance failure 
pvm doesn apply recursive process optimization share query result nested sweep sweep maintenance process 
detailed comparative analysis pvm nested sweep remains vs dus sweep pvm comparison pvm sweep number iss 
min corresponds folded speedup 
dag query plan model choice different maintenance plans 
trade sending separate subqueries query iss versus sending subquery time intermediate results far joined remotely particular option requires large result messages returned joined dw second option enforces sequence subquery processing 
pvm tackling different problem pvm considering parallelize handling group dus achieve higher performance 
investigated problem parallel view maintenance 
identified bottleneck terms sequential handling dus current state art vm solution called sweep aasy :10.1.1.48.4672
sweep algorithm limitations compared alternate literature adopts sequential processing handling set data updates 
identified open issues achieve parallel view maintenance notably concurrent data update detection parallel execution mode order dw commit problem 
integrated solution called pvm capable handling problems 
fully implemented sweep pvm eve data warehousing system conducted set experiments study performance 
experimental results demonstrate pvm achieves multi fold performance improvement compared sweep 
acknowledgments 
authors students database systems research group wpi interactions feedback research 
particular grateful andreas helping design implement eve system pvm embedded prof input ideas 
aasy agrawal el abbadi singh :10.1.1.48.4672
efficient view maintenance data warehouses 
proceedings sigmod pages 
bcs baralis ceri paraboschi 
conservative timestamp revised materialized view maintenance data warehouse 
