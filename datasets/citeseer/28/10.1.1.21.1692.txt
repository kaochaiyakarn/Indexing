partitioning data warehouses data marts 
department computer science university science technology clear water bay hong kong china cs ust hk department computer science western michigan university mi cs edu michel schneider universit pascal ere france michel schneider fr efficient query processing critical requirement data warehousing systems decision support applications require minimum response times answer complex ad hoc queries having aggregations multi ways joins vast repositories data 
achieved warehouse data 
data fragmentation concept context distributed databases aims reduce query execution time facilitates parallel execution queries 
propose methodology applying fragmentation technique data warehouse dw star schema reduce total query execution cost 
algorithm tables star schema 
dw stores large volumes data frequently decision support applications 
dws usually dedicated processing data analysis decision support queries olap queries 
queries complex consequently response time higher 
lot done speed olap query processing dws 
techniques employed materialized view advanced indexes sampling parallel computing technologies :10.1.1.100.5223
designing warehouse database integrated enterprise complicated iterative process needs data departments units data cleaning requires extensive business modeling 
organizations preferred develop data mart meet requirements specific departmental restricted community users 
course development data marts entail lower cost shorter implementation time 
role data mart convenient subsets dw consumers having specific functional needs 
course development data marts entail lower cost shorter implementation time 
role data mart convenient subsets dw consumers having specific functional needs 
approaches developing data mart designed integrating data source data called bottom approach designed deriving data warehouse called top approach 
advocate top approach shown warehouse data fragmented need data mart 
approach fragmentation play important role dw number fragments data allocation unit data marts :10.1.1.33.2276
fragments allocated data marts queries posed data mart executed locally communication cost minimized 
problem seen data allocation distributed databases 
fragmentation partitioning words interchangeably 
data partitioning data mart data warehouse data mart data mart 
fragments allocated data marts queries posed data mart executed locally communication cost minimized 
problem seen data allocation distributed databases 
fragmentation partitioning words interchangeably 
data partitioning data mart data warehouse data mart data mart 
top flow dws data marts technique aimed reducing number disk accesses query execution minimizing accesses irrelevant data :10.1.1.33.2276
types possible partitioning vertical partitioning vp relation produces vertical fragments fragments contains subset attributes primary key 
ii horizontal partitioning hp partitions relation tuples 
horizontal fragment hf subset tuples relation versions hp cited researchers primary hp derived hp 
primary hp relation performed predicates defined relation 
ii horizontal partitioning hp partitions relation tuples 
horizontal fragment hf subset tuples relation versions hp cited researchers primary hp derived hp 
primary hp relation performed predicates defined relation 
hand derived hp partitioning relation results predicates defined relation 
lot done partitioning relational models object models compare dws :10.1.1.33.2276
chaudhuri developed technique called index merging reduce storage maintenance index concept vertical partitioning 
datta developed new indexing technique called speeds query processing require lot storage space 
hp little done 
proposed construction technique distributed dw adapting done :10.1.1.33.2276
lot done partitioning relational models object models compare dws :10.1.1.33.2276
chaudhuri developed technique called index merging reduce storage maintenance index concept vertical partitioning 
datta developed new indexing technique called speeds query processing require lot storage space 
hp little done 
proposed construction technique distributed dw adapting done :10.1.1.33.2276
show hp speed query processing helps allocating fragments data marts 
concentrate partitioning warehouse data horizontally 
consider warehouse data modeled star schema 
schema kinds tables dimension tables fd table primary key kd fact table primary key composed concatenation keys dimension tables 
olap queries access dimension tables fact table necessary fragment 
firstly partition dimension tables primary hp partition fact table derived hp 
approach suitable takes consideration queries requirements relationship fact table dimension tables 
partitioning star schema section discuss algorithm star schema fact table dimension tables fd algorithm partitions dimension tables fragmentation schemas derive fragments fact table 
partition dimension table algorithm uses quantitative qualitative information applications :10.1.1.33.2276
quantitative information describes selectivity factors frequency query accessing table 
qualitative information describes selection predicates defined dimension table 
simple predicate defined value attribute value dom 
input proposed algorithm set dimension tables fact table set frequently asked olap queries fq frequencies 

assign dimension table set simple predicates ssp 
dimension table having ssp oe fragmented 
candidate set dimension tables empty ssp cardinality candidate 
application com min algorithm simple predicate dimension table candidate algorithm takes set simple predicates generates set complete minimal :10.1.1.33.2276
rule completeness minimality states relation partitioned fragments accessed differently application 

dimension table possible algorithms proposed relational model :10.1.1.33.2276
algorithms generate set disjoint fragments complexities exponential number simple predicates 
candidate set dimension tables empty ssp cardinality candidate 
application com min algorithm simple predicate dimension table candidate algorithm takes set simple predicates generates set complete minimal :10.1.1.33.2276
rule completeness minimality states relation partitioned fragments accessed differently application 

dimension table possible algorithms proposed relational model :10.1.1.33.2276
algorithms generate set disjoint fragments complexities exponential number simple predicates 
result algorithm proposed object model polynomial complexity 
fragmentation process dimension table candidate fragments fd dim fragment ij defined follows ij oe cl cl represents clause simple predicates 

case states correctness rules fragmentation algorithm guarantee correctness rules fragmentation completeness reconstruction disjointness 
ffl completeness ensures tuples relation mapped fragment loss 
completeness dimension tables guaranteed com min algorithm 
completeness derived horizontal fragmentation fact table guaranteed long referential integrity rule satisfied dimension tables fact table 
ffl reconstruction ensure fragmented relation fragments :10.1.1.33.2276
case reconstruction fact dimension tables obtained union operation ij ffl disjointness ensure fragments relation non overlapping 
rules satisfied dimension table overlap algorithm 
fragments fact table disjointness rule guaranteed fact hf fact table joined hf dimension table 
selection dimension tables seen section number fragments fact table large especially dimension tables partitioned large number fragments 
example suppose simple predicate defined dimension table customer attribute gender suppose cost model executing set queries 
model described section 
compute 
compute cost remove selected table select dimension table partition fact table final partitioning schema possible star schema legend number fact table fragments number fragments chosen cu current cost pr previous cost set queries steps greedy algorithm exactly values female male 
solution ensures resulting fragments fact table get executed faster indices bitmap :10.1.1.100.5223
small set simple predicates ssp solution consists computing cardinality set simple predicates ssp dimension table select dimension tables having minimum cardinality set simple predicates 
solution ensures resulting fragments fact table small helps partitioned dw facilitates allocation process fragments data marts 
note solutions try satisfy performance constraint tries satisfy maintenance constraint 
query execution strategy partitioned star schema dimension tables fact table horizontally partitioned need ensure data access transparency concept user dw unaware distribution data 
data knowledge engineering november 

horizontal fragmentation algorithm fact relation distributed data warehouse 
th international conference information knowledge management cikm pages november 
neil quass :10.1.1.100.5223
improved query performance variant indexes 
proceedings acm sigmod international conference management data pages may 
ozsu valduriez :10.1.1.33.2276
principles distributed database systems 
th international conference information knowledge management cikm pages november 
neil quass :10.1.1.100.5223
improved query performance variant indexes 
proceedings acm sigmod international conference management data pages may 
ozsu valduriez :10.1.1.33.2276
principles distributed database systems 
prentice hall 
ramakrishnan 
database management systems 
