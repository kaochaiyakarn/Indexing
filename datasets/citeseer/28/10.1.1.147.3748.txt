dynamics evolutionary learning hugues jordan pollack computer science department center complex systems brandeis university waltham ma cs brandeis edu evolutionary learning involves embedding adaptive learning agents ness environment dynamically responds progress potential solution technological chicken egg problems heart surprising successes sim arti cial robot tesauro backgammon player 
solved spirals problem di cult neural network benchmark classi cation problem genetic programming primitives set koza 
absolute tness relative tness angeline pollack competition coverage data set 
population reproduces tness function driving selection changes subproblem niches opened crowded 
solutions method symbiotic structure suggests holding niches open crossover better able discover modular building blocks 
evolution ecological theory attempts explain traits evolve dependent di erent species 
evolutionary computation appropriated ecological roots describe iterated adaptation involving arms races learning species learner learning environment 
examples evolutionary learning include pioneering hillis sorting networks hillis self playing backgammon learner tesauro follow pollack blair land pollack sims ray evolving life forms sims ray angeline pollack evolving tic tac toe players angeline pollack 
adaptive behavior community focus developing evolution predator prey games reynolds miller cli 
competitive tness massively parallel implementation genetic programming gp paradigm koza solved problem intertwined spirals di cult classi cation benchmark eld neural networks 
learning problem originated wieland cover perceptrons challenge pattern classi cation algorithms subject ai community particular neural network eld lang witbrock fahlman lebiere carpenter 
neural network classi cation systems linear quasi linear radial clustering basis function intertwined spirals problem leads di culty 
solved neural net solution expansive description spiral conjunction small regions generalize outside training regions particularly satisfying 
compare competitive tness coevolutionary approach absolute tness approach spirals problem nd ective 
evolution context leads interesting functional problem 
section presents survey implementation massively parallel genetic programming 
help understand techniques sections 
intertwined spiral problem described section representation competitive tness framework results 
section presents theoretical empirical analysis results comparing canonical evolutionary optimization 
massively parallel gp parallel evaluation expressions runs simd machine processor elements pes maspar mp 
individual structures undergo adaptation gp represented expression trees composed set primitive functions set terminals variables functions argument 
usually number functions small size expression trees restricted order restrict size search space 
parallel implementation processors simulates virtual processor 
virtual processor stack machine takes post representation expression input 
able evaluate gp expression instructions supported machine instruction primitive function function set 
execution time arguments instructions popped stack general purpose registers function computed result pushed top stack 
push instruction pushes top stack value terminal goto instruction necessary branching conditional functions instruction indicates program 
architecture allows pe process ciently di erent genetic program mimd way 
parallel interpreter simd machine reads current post instruction virtual processor sequentially multiplexes instruction processors current instruction push active instruction performed processors inactive idle state 
operation performed instructions instruction set turn 
instruction executed processor processor idle leaving result evaluation top stack 
processors reached instruction parallel evaluation entire population complete 
shown stack approach genetic programming cient 
models fitness evaluation selection recombination maspar mp dimensional wrap mesh architecture 
implementation population modeled architecture individual sub population assigned mesh neighbors 
architecture allows implement di erent models tness evaluation selection recombination kernel parallel gp described previous section 
tournament style competitive evolution compared canonical gp 
general presentation di erent strategies implemented pollack 
spiral problem competitive evolution paradigm presentation intertwined spiral problem consists learning classify points plane classes intertwined spirals 
data set composed sets points plane 
intertwined spirals shown gures 
koza angeline investigated problem genetic programming paradigm 
setup de ne problem perform experiments 
function set composed sin terminal set composed fx ephemeral random constant 
population individuals tried di erent approaches tackle problem 
rst experiment koza angeline tness function de ned number hits 
second experiment tness de ned result competition individuals 
ignored fact really knew absolute tness function set game relative tness basis reproduction 
trivial idea simply compare absolute score individual winner individual larger score 
competition absolute scores simply approximate canonical version 
counted player ability classify test cases classi ed opponent 
copies player spread population scores may rise fall depending members population cover test cases 
form adaptive behavior implemented dynamically tness function 
view consider full pairwise evaluation weak unique player novel hits identical strong players hits 
reproduce twice fast absolute ness competition modi ed tournament receive points playing weak player receive 
section ecological model study dynamics population evolution absolute tness competitive tness control interactions species 
play rounds limited tournament competition compute nal relative tness individual sum scores competition 
course track absolute tness population 
hypothesis better promote diversity population allow subpopulations covered di erent subproblems emerge 
copies individuals perform parts spiral spread population start meet competition get score 
allows individuals may total hits cover parts spiral survive 
recombinations individuals sub populations may expect emergence better individual combine advantages 
approaches may simulating competitive evolution sims 
generation composed sequence competition rounds individuals randomly paired 
fact architecture parallel computer doesn access shared memory random pairing approximated making individuals perform random walk population 
round score individuals number hits opponent doesn get 
generation individuals tness calculated summing scores competition 
individual tness evaluated selection recombination performed tness proportionate rule 
details implementation model tournament selection recombination procedures pollack 
preliminary results discussion classes experiments performed runs run stopped generations 
generation population replaced springs resulting recombination remaining result tness proportionate reproduction 
individual meets opponents generation number comes implementation tournament mesh architecture maspar 
preliminary results concerning performance illustrate competitive evolution outperforms absolute tness approach 
fact absolute tness strategy works better average tness rising faster 
absolute tness paradigm improves current solution slowly initial burst optimization ultimately outperformed competitive evolution 
multiple competing explanations performance gap 
may absolute tness simply converging prematurely 
may competitive tness system bene ts diversity 
sections analyze try understand di erences 
sin sin sin sin cos sin cos sin cos sin sin atom expression scoring intertwined spiral problem 
return sin endif return sin cos sin interpretation solution intertwined spiral problem 
runs competitive tness provided perfect hits solution intertwined spiral problem generations 
harvested perfect classi cation solutions shortest expressions atoms shown gure 
relatively small size result able analyze simplify mathematically collapsing constant calculations removing insigni cant digits algebraic simpli cation elimination redundant introns 
analysis resulted conditional function gure 
basically solution splits geometric plane domains di erent function domain 
displays function multiplexes functions shown gure create spiral 
resulting function shown gure plots hits domains 
divide plane perfect score generalizing classi cation intertwined spirals 
function training data range 
form perfect spiral continue simulate spiral way outside original training range 
set experiments limited generations perfect solution discovered gure 
expression representing solution composed atoms 
furthermore believe compared neural network solutions composition hundreds clusters decision boundaries gp solutions shown koza date 
fact spiral composed symbiosis functions cover separate parts data supports hypothesis relative tness competitive evolution strategy ective absolute tness function 
idea supported analysis section 
evolution dynamics learning theoretical model absolute relative fitness sin function selectively added spiral 
support idea competitive evolution allows subpopulations cover di erent part problem survive contrary absolute tness driven evolution propose analysis 
problem classi cation problem 
seen set test cases hits de ne square matrix ai equals number test cases correctly classi ed group gi group gj doesn 
entry de ned follows ai nx bi bj perfect score classi cation intertwined spirals 
lation split groups clusters individuals cover exactly test cases 
sake formalize idea 
de ne terms number test cases number groups clusters compose population ti th test case gj th group individuals sj size number individuals group gj time gj returns list booleans size th entry indicates test case tk covered individuals group gj matrix rows gj gm ca entry bi isa true test case tj covered group gi false 
consider example example equals de ne study absolute ca tness function cases tness individual group gj fa nx example fa fa fa fa fa relative tness individual group gj fr mx sl aj de nition individual competes individuals population 
experiments approximate making individual compete sample population 
sake simplicity assume recombination individuals tness proportionate reproduction 
want show simpli ed model subpopulations cover di erent test cases survive competitive evolution involved 
want study dynamics evolution group size time 
simple rule tness proportionate reproduction similar lindgren model population evolution gives sj sj ratio population group group group group group time evolution ratio group population case absolute tness 
ratio population group group group group group time evolution ratio group population case relative tness 
parameter controls speed simulated evolution tness 
case study replaced fa 
average tness 
normalization step sj performed order keep constant population size 
get known expression tness proportionate reproduction sj sj graphical results evolution ratio group population models evolution gure gure 
analysis groups size took 
see case absolute tness population overcome rst group largest absolute tness fa 
curves groups groups overlap gure 
contrary case competitive evolution stability reached rst group takes little population groups 
group disappears quickly group takes tiny part population 
possible prove ratios equilibrium independent initial size di erent groups condition group null size value non null parameter aim analysis show competitive evolution allows di erent subpopulation survive contrary canonical model evolution keeping diversity population 
believe case intertwined spiral problem recombination individuals di erent subpopulations origin new solutions cover part problem speci subpopulations 
idea con rmed results experiments section 
diversity useful recombination realized evolution system fact operating prevent convergence increasing diversity population 
done simply changing parameters canonical genetic optimization task 
performed experiments compare evolutionary evolutionary approaches 
particular tried di erent settings parameters control convergence rate search procedure control decrease diversity population 
precisely normalized tness individuals control selection process computed follows raw fitness score standardized fitness max score raw fitness adjusted fitness standardized fitness normalized fitness population adjusted fitness adjusted fitness parameter controls range standardized tness distribution normalized tness 
decreases di erence individuals adjusted tness normalized tness decreases making convergence slower 
raw tness doesn represent measure absolute relative tness approaches number hits number hits covered opponents 
way compare methods try large range parameter absolute tness relative tness standardized fitness table parameter setting experiments 
absolute tness tried performed experiment standardized tness squared altering way distribution normalized tness 
relative tness experiments values tested table presents di erent parameter settings experiments 
tournament competition implemented realistic model competition 
particular evolve game strategies angeline pollack 
case inductive learning problem intertwined spirals set test cases de ned xed manageable size 
possible ciently implement vs competition follows test case compute number si individuals classify correctly 
implemented log parallel machine form divide conquer perform addition reduce operator 
si available individuals 
relative tness individual test cases bj bj equals individual classi es correctly th test case 
result process individual compete individuals population 
addressed issue vs competition reason 
problems tournament competition practical interest vs competition 
case particular set test cases large allow exhaustive evaluation individuals set individual represents game strategy 
interesting estimate accurately tournament competition approximates vs competition 
limited number generations 
results gure curve corresponds average runs value parameters 
si number hits number hits absolute fitness relative fitness tournament generation absolute fitness relative fitness vs generation absolute tness versus tournament competition top absolute tness vs competition bottom intertwined spiral problem di erent parameter setting 
curve average best individual generation runs 
rst observation vs competition clearly outperforms canonical evolution 
generations parameter settings resulted perfect solution runs 
runs extended generations resulted perfect solutions runs 
experiments canonical evolution resulted perfect solution 
case tournament competition di cult conclude slight advantage form evolution 
runs resulted perfect solution generations 
experiments show evolution ers di erent approach tackle learning task potentially works better canonical evolution 
tournament competition uses rounds compared rounds vs seen small 
di cult extrapolate number rounds achieve accuracy approximation ratio ratio absolute fitness relative fitness tournament generation absolute fitness relative fitness vs generation comparison absolute tness tournament competition top absolute tness vs competition bottom evolution ratio springs population cover test cases parents di erent parameter settings 
vs rounds compromise regarding computer resource method perform vs applied 
experiments observed evolution measure order show learning cient case evolution 
rosca rosca ballard de ned di erential tness measure tness improvement population 
de ned measure spring follows di erential fitness standard fitness min parents fitness heuristic reason rosca ballard min parents taken de ne di erential tness 
case interested measure indicate improvement springs parents 
max parents taken de ne di erential tness 
order compare approaches de ned standard number hits 
de nition evaluation di erential tness independent previously de ned standard tness evaluate normalized tness 
di erential tness positive springs cover test cases parents 
presents evolution ratio springs population new di erential tness positive 
curve represents average runs 
data collected performing previous experiments 
see average ratio independent parameter setting relative aswell absolute tness 
ratio evolution larger canonical evolution rst generations 
di erence means probability spring better parents probability recombination probability exchange building blocks significantly greater case relative tness absolute tness 
evolution maintains niches cover di erent subsets test cases relative tness favours covering test cases subsets recombination occur parents cover di erent test cases 
case absolute tness doesn kind bias 
diversity population main reason explain di erence increase diversity experiments absolute tness doesn change signi cantly ratio 
clearly shows model evolution favors useful recombination ultimately lead better solution canonical evolution 
experiments show classication procedure challenging problem intertwined spiral problem signi cantly improved relative tness absolute tness approach 
look versus tournament plausible tasks see competitive tness model evolution approximates tness sharing goldberg richardson helps prevent premature convergence increasing diversity population 
rosin belew rosin belew tness sharing demonstrates connection 
summary achieve evolution single species heuristic dynamically adapts tness function help population cover test cases giving great reproductive advantage individuals perform problem 
giving minority competition expect emergence novel niches held open incorporated successful solutions 
evolutionary terms set traits lead increased relative tness individuals species pre determined nite list done intertwined spirals problem 
traits arise evolutionary time scales strength speed vision cognition simply competitive advantage competitors acquire traits nd counter measures 
evolution may viewed adaptive behavior evolutionary time scales species useful problems absolute tness known individual species population genetic programs 
angeline angeline 

crossover operations genetic programming 
advances genetic programming ii 
mit press 
angeline pollack angeline pollack 

competitive environments evolve better solutions complex tasks 
fifth international conference genetic algorithms pp 

morgan kaufmann 
carpenter carpenter grossberg reynolds rosen 

fuzzy artmap neural network architecture incremental supervised learning analog multidimensional maps 
ieee transactions neural networks 
fahlman lebiere fahlman lebiere 

cascade correlation learning architecture 
touretzky ed advances neural information processing systems 
morgan kau man goldberg richardson goldberg richardson 

genetic algorithms sharing multimodal function optimization 
grefenstette 
ed genetic algorithms applications proceedings second international conference genetic algorithms pp 

lawrence erlbaum associates 
hillis hillis 

evolving parasites improve simulated evolution optimization procedure 
langton 
eds arti cial life ii pp 

addison wesley 
pollack pollack 

massively parallel genetic programming 
angeline kinnear eds advances genetic programming ii 
mit press 
koza koza 

genetic programming programming computers means natural selection 
mit press 
lang witbrock lang witbrock 

learning tell spirals apart 
proceedings connectionist summer schools 
morgan kaufmann 
lindgren lindgren 

evolutionary phenomena simple dynamics 
langton 
eds arti cial life ii pp 

addison wesley 
miller cli miller cli 

behavior dynamic games 
cli husbands meyer wilson 
eds animals animats proceedings third international conference simulation adaptive behavior 
mit press 


stack genetic programming 
proceedings ieee world congress computational intelligence 
ieee press 
pollack pollack blair land 

coevolution backgammon player 
appear proceedings fifth arti cial life conference 
ray ray 

approach synthesis life 
langton 
eds arti cial life ii pp 

addison wesley 
reynolds reynolds 

competition coevolution game tag 
proceedings fourth arti cial life conference 
mit press 
rosca ballard rosca ballard 

discovery subroutines genetic programming 
angeline kinnear eds advances genetic programming ii 
mit press 
rosin belew rosin belew 

methods competitive evolution finding opponents worth beating 
eshelman 
ed proceedings sixth international conference genetic algorithms san mateo california 
morgan kau mann 
sims sims 

evolving morphology behavior competition 
brooks maes eds arti cial life iv pp 

mit press 
tesauro tesauro 

practical issues temporal di erence learning 
machine learning 
