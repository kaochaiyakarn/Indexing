geographic routing location information rao sylvia ratnasamy christos papadimitriou scott shenker ion stoica university california berkeley christos cs berkeley edu years scalable routing wireless communication systems compelling elusive goal 
routing algorithms exploit geographic information gpsr proposed achieve goal 
algorithms refer nodes location address coordinates route greedily possible destination 
situations location information available nodes geographic methods 
define scalable coordinate routing algorithm rely location information wide variety ad hoc sensornet environments 

increasing size wireless communication systems strengthens need scalable wireless routing algorithms 
standard internet routing achieves scalability address aggregation route announcement describes route information nodes simultaneously 
approach scalability applicable wireless environments ad hoc networks sensornets node identifiers topologically geographically close nodes may similar sharing high order bits 
cases main scalable routing techniques proposed demand routing geographic routing 
simplest incarnation demand routing involves periodic exchanges route information establishes routes needed flooding route request network 
approach series refinements variations proposed :10.1.1.132.7416:10.1.1.129.426:10.1.1.115.3829
techniques intel research berkeley sylvia intel research net icsi center internet research berkeley shenker icir org additional technique distance vector routing applied ad hoc networks see node maintain routing state proportional number nodes system :10.1.1.113.555
focus scalable techniques apply extremely large systems consider distance vector techniques 
permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
mobicom september san diego california usa 
copyright acm 
small moderate sized systems large systems relatively stable routes limited communication patterns significant destination locality 
large systems bursty communication patterns overhead latency route discovery significant :10.1.1.22.9259
geographic routing uses nodes locations addresses forwards packets possible greedy manner destination 
widely known proposal gfg gpsr geographic routing schemes proposed 
key challenges geographic routing deal dead ends greedy routing fails node neighbor closer destination variety methods perimeter routing gpsr gfg proposed 
proposes method routing voids asymptotically worst case optimal average case efficient 
geographic routing scalable nodes keep state neighbors supports fully general communication pattern explicit route establishment 
geographic routing requires nodes know location 
natural assumption settings sensornet nodes gps devices settings location information isn available 
address retain benefits geographic routing absence location information 
problem partially addressed consider case nodes don geographic information focus mainly case perimeter nodes location information 
approach involves assigning virtual coordinates node applying standard geographic routing coordinates 
virtual coordinates need accurate representations underlying geography order serve basis routing reflect underlying connectivity 
construct virtual coordinates local connectivity information 
local connectivity information available nodes know neighbors technique applied settings 
simulation results show scenarios presence obstacles greedy routing performs better virtual coordinates true geographic coordinates 
organized follows 
section discusses related 
deal technical preliminaries section 
destination locality mean nearby nodes sending destination 
allows overhead route establishment shared sources seeking send particular destination 
algorithms don strictly geographic coordinates hop count information algorithms listed location information packet forwarding process 
key contribution construction virtual coordinates section 
performance algorithm evaluated section conclude remarks section 
context related turning technical content put context 
vast literature ad hoc routing contains valuable proposals niche applicability 
intent compare study conditions appropriate 
narrow focus environments characteristics large number nodes relatively high density general communication pattern host pairs communicating need packet delivery 
characteristics require routing algorithm keeps neighbor state node route involve route establishment phase 
knowledge geographic routing algorithms meet requirements 
don claim know exactly large dense system general communication pattern tight latency requirements order geographic routing appropriate choice analysis await study 
geographic routing known serious limitations particularly route dead ends obstacles function low densities 
dealing voids fairly understood problem algorithms gfg gpsr shown average case efficient worst case optimal 
fixing problems focus 
goal simply explore apply geographic routing paradigm strengths weaknesses situations nodes location information 
closely related graph embedding 
majority literature centralized algorithms visualization planar embedding graphs 
proposes light weight distributed algorithm fact derives area 
authors address problem determining true positions nodes sensor network topology information 
propose centralized algorithm cost shown small networks 
algorithm targeted larger networks try obtain approximations true positions nodes 

preliminaries core describes algorithm assigning virtual coordinates nodes 
coordinates useful address issues routing virtual coordinate space routing space traditional ad hoc routing environments data centric networks sensornets 
pieces part research contribution designs completeness 
routing algorithm geographic routing algorithms 
purpose improve algorithms merely provide set virtual coordinates operate 
purposes evaluation simple routing algorithm 
assume nodes know see performance comparisons relatively small systems :10.1.1.117.2921:10.1.1.117.2921
case unit graphs coordinates neighbors neighbor neighbors call set routing table 
information easily obtained having neighboring nodes periodically exchange coordinates neighbor coordinates 
destinations packets virtual coordinates 
packets routed rules greedy packet forwarded node routing table closest virtual coordinates destination node closer destination current node 
node closer destination node routing table higher layers determine packet bound node packet considered arrived destination 
example payload ip packet receiving node check ip address matches packet 
environments determine packet arrived appropriate destination 
dead packet able greedy progress reached stopping point say reached dead 
case node deadend reached performs expanding ring search closer node maximum ttl exceeded 
distributed hash table described packets routed real virtual coordinates 
routing sufficient system 
point clear consider target environments ad hoc networks sensornets separately 
ad hoc networks goal reach specific host specified address identifier 
geographic routing coordinates identifier directly reach intended target knowing intended target geographic routing augmented service translate identifiers locations 
gls system provides scalable elegant solution problem 
approach similar spirit differing details 
described implement distributed hash table dht top routing system 
dht node uses put operation store location identifier key 
communicating particular node requires get operation identifier key retrieve current location 
sensornets sensornets little reason attempt communicate specific nodes identifiers 
wants describe desired data directly 
approaches seen fundamental sensornets :10.1.1.117.1253:10.1.1.21.3642
approaches don require underlying routing functionality flooding 
developed extension ideas data centric storage require substantial routing support 
data centric storage involves implementing dht sensornet storing notable events data name example simplistic level sightings animals stored dht animal name key 
initial incarnations data centric storage primitive stopping condition design sophisticated stopping conditions 
expanding ring searches similar reasons 
geographic routing underlying routing algorithm 
implement hash table functionality directly top routing algorithm coordinates related real geographic locations 
environments require hash table functionality 
easily implemented top routing algorithm follows 
put get command issued key key hashed coordinate packet routed coordinate 
packet stopped arrived node closest destination puts gets data required 
algorithmic extensions achieve higher reliability different hash functions replicating data locally described 
described pieces routing distributed hashtable necessary system 
key contribution definition virtual coordinates borrow literature routing dht components 
evaluations want evaluate quality coordinates quality various algorithmic extensions dht construction implemented top 
consequently chosen focus mainly route greedily coordinates compare route greedily true geographic coordinates 
algorithms dealing dead ends cases greedy routing fails delivery packets construction dhts see 
don want defects coordinate construction algorithm masked techniques report purely greedy routing reaches intended destination 
results roughly comparable case location information known extended geographic routing realm location information available 

coordinate construction section describes main contribution method constructing virtual coordinates location information 
clearly various pieces construction consider scenarios decreasing degrees location information 
scenarios differ information perimeter nodes know location nodes assumed location information 
follows consider nodes lying plane techniques generalize straight forward manner higher dimensions don discuss generalization 
ease exposition algorithm stages 
shown start assumptions get rid assumptions proceed 
perimeter nodes know location perimeter nodes know perimeter nodes don know location nodes know location perimeter construction techniques scenarios location information decreases construction algorithm increasingly complex 
perimeter nodes nodes lying outer boundary system 
nodes perimeter nodes network nodes 
perimeter nodes represented black squares 
radio range node units 
illustrate algorithms network consisting nodes uniformly spread square area units see 
perimeter nodes side corners 
node radio range units nodes average neighbors 
simulation results section ignore packet losses signal attenuation aside assigning fixed radio range packets received originate radio range node probabilistic degradation packet reception move away node 
details simulator complex realistic simulation scenarios section 
perimeter nodes know location consider scenario perimeter nodes know exact geographic coordinates 
describe way non perimeter nodes determine coordinates iterative relaxation procedure 
analogy borrowed theory graph embeddings link neighbor relation represented force pulls neighbors 
assume force direction proportional difference coordinates similarly coordinates 
hold neighbors fixed node equilibrium position sum forces zero coordinate average neighbors coordinates coordinate 
facts motivate iterative procedure non perimeter node periodically updates virtual coordinates follows xi yi neighbor set xk size neighbor set neighbor set yk size neighbor set consider network 
illustrates relaxation algorithm works non perimeter nodes start initial coordinates case 
relaxation equations imply non perimeter nodes perimeter node neighbors move perimeter node 
iterations progress nodes tend move perimeter nodes closest terms number hops 
shown algorithm eventually converges state nodes spread region distribution holes set true positions compare 
evaluate route virtual coordinates measuring key metrics success rate fraction times packets reach intended destination purely greedy routing 
measure explained section designed evaluate performance coordinate construction algorithm interference various dead avoidance techniques applied real virtual coordinate routing algorithms 
average path length average number hops taken path 
pick node pairs random send packet simulations discussed chose random pairs 
compare results routing virtual coordinates routing true geographic coordinates 
greedy routing true geographic coordinates scenario described success rate average path length 
contrast virtual coordinates routing success rate better true coordinates 
average path length slightly worse true coordinates 
performance quite satisfactory concern take iterations converge iteration example 
section address problem presenting simple method picking initial coordinates non parameter nodes reduces convergence time just test case iterations 
relaxation algorithm require perimeter nodes know location 
example shows virtual coordinates nodes perimeter nodes know true coordinates 
distribution virtual coordinates looks skewed case greedy routing performance success rate average path length 
addition long relative ordering perimeter nodes preserved locations need exact 
example shows virtual coordinates nodes perimeter nodes evenly spaced circle preserving order appear real perimeter 
cases routing success rate average path length 
see sections limited requirements imposed simple relaxation algorithm robustness imperfect positioning information allow altogether eliminate need knowledge geographic coordinates perimeter nodes 
perimeter nodes known retain assumption perimeter nodes know perimeter eliminate assumption perimeter nodes know exact geographic location 
preface previous relaxation method phase perimeter nodes compute approximate virtual coordinates 
briefly phase perimeter nodes flood network discover distances hops perimeter nodes triangulation algorithm computes perimeter positions inter perimeter distance matrix 
perimeter coordinate algorithm consists stages 
stage perimeter node broadcasts hello message entire network 
allows perimeter nodes discover distance hops perimeter nodes 
call vector distances node perimeter vector 
stage perimeter node broadcasts perimeter vector entire network 
stage perimeter node knows distances pair perimeter nodes 
stage perimeter node uses triangulation algorithm compute coordinates perimeter nodes including coordinates 
coordinates chosen minimize perimeter set measured dist dist measured dist denotes distance nodes measured stage dist represents euclidean distance virtual coordinates nodes seen minimizing potential energy perimeter node ball attached perimeter node spring length proportional hop count distance 
stage perimeter node knows virtual coordinates non perimeter nodes relaxation algorithm described section compute virtual coordinates 
completes preparatory phase 
note perimeter beacons flooded entire network non perimeter nodes learn inter perimeter distances run triangulation algorithm compute reasonable initial coordinates starting center virtual coordinate space 
shows virtual coordinates network studied section nodes perimeter non perimeter triangulation compute coordinates 
see triangulation algorithm performs routing success rate average number hops suffer virtually degradation compared case perimeter nodes know coordinates 
initial conditions drastically reduce convergence time relaxation algorithm 
iteration routing success rate high average path length 
iterations success rate increases slightly average path length remains unchanged 
comparison non perimeter nodes start initial coordinates takes iterations obtain success rate 
description far stage algorithm perimeter node uses complete knowledge inter perimeter distances independently compute coordinates triangulation 
practice message loss node failure cause perimeter nodes incomplete inconsistent knowledge inter perimeter distances case triangulation algorithm cause different perimeter nodes compute inconsistent coordinates 
set coordinates satisfies minimization condition rotated translated flipped satisfying minimization condition 
need computation nodes performing independently arrive solution 
address problem technique 
bootstrapping beacons designated bootstrap beacons flood network hello messages 
perimeter nodes distance computed maintaining distance counter hello message incremented hop 
node distance flooding node merely minimum counter value messages receives 
beacons nodes picked number ways example simply pre configuring specific node identifiers act beacons relying complex probabilistic beacon election algorithms 
nodes perimeter nodes nodes perimeter nodes nodes perimeter nodes virtual coordinates non perimeter nodes iterations respectively 
initial virtual coordinates non perimeter nodes set 
nodes perimeter nodes nodes perimeter nodes virtual coordinates non perimeter nodes nodes perimeter know geographic coordinates perimeter nodes coordinates projected circle preserving order nodes perimeter 
nodes perimeter nodes nodes perimeter nodes virtual coordinates network nodes perimeter nodes 
perimeter nodes triangulation compute coordinates non perimeter nodes relaxation algorithm compute coordinates 
include bootstrap beacons regular triangulation computation compute coordinates perimeter bootstrap nodes 
node computes center gravity cg positions 
cg positions bootstrap nodes define new coordinate axes cg forms origin bootstrap node defines positive axis second bootstrap node defines positive computed coordinates normalized respect new axes 
note cg resilient incomplete information 
node lacks information bootstrap nodes afford act perimeter node relaxation require perimeter nodes detected 
location information final scenarios relax assumption perimeter nodes know perimeter 
add algorithms described preparatory stage subset nodes identify perimeter nodes 
achieve leverage bootstrap beacon nodes described previous section 
recall bootstrap nodes broadcast hello messages entire network node discovers distance bootstrap nodes 
nodes criteria called perimeter node criterion decide perimeter nodes node farthest away hop neighbors bootstrap node node decides perimeter 
shows virtual coordinates nodes nodes distance designated beacon determine perimeter 
observations 
nodes wrongly decide perimeter 
decisions little effect virtual coordinates nodes triangulation algorithm correctly positions nodes inside network perimeter 
second routing success rate average path length remain excellent respectively iterations 
add additional mechanism allows maintain consistent known virtual coordinate space face node mobility failures 
coordinate projection circle perimeter nodes compute coordinates triangulation project coordinates circle origin center gravity perimeter nodes radius equal average distance perimeter nodes virtual coordinates network nodes node knows coordinates perimeter 
center gravity 
reasons doing 
gives defined area implementing distributed hash table dht 
second virtual circle easier support mobility 
correctly maintain perimeter nodes mobility bootstrap node periodically rebroadcasts nodes determine afresh perimeter nodes 
new node concludes perimeter node simply compute projection current coordinates circle assume coordinates fixed 
turn node longer perimeter un fixes starts update coordinates relaxation algorithm 
completes description algorithm 
briefly recap algorithm moving evaluation section 
summary coordinate assignment algorithm consists key steps 
designated bootstrap beacon nodes broadcast entire network 
nodes distances bootstrap nodes determine perimeter nodes 

perimeter node sends broadcast message entire network enable node compute perimeter vector distances node perimeter nodes 

perimeter bootstrap nodes broadcast perimeter vectors entire network 
node uses inter perimeter distances compute normalized coordinates perimeter nodes 
perimeter nodes project coordinates outer circle 

perimeter nodes stay fixed nodes run relaxation algorithm 

accomodate mobility designated bootstrap node periodically broadcasts nodes periodically re asses lie perimeter 
recall defining dht needed hash function map keys set coordinates knowing perimeter nodes arranged circle choice hash function simpler 
note steps required bootstrap coordinate assignment network initialized steps constitute normal operation 

performance evaluation previous section defined complete algorithm constructing virtual coordinates location information 
evaluate algorithm series simulations algorithm simulate includes techniques described including bootstrapping beacons projecting coordinates circle 
consider metrics success rate greedy routing path length hops 
metrics allow evaluate effectiveness virtual coordinate construction algorithm real usage success rate higher various techniques dealing dead ends employed 
experiment design study behavior solution large scale networks implemented packet level simulator able scale tens thousands nodes 
scalability doesn come free simulator model details realistic mac protocol 
particular consider specified simplified mac layer models packet loss signal propagation 
radios precise circular radio range nodes send packets nodes range 
simple model allows away impact message loss signal attenuation routing performance apply regardless location information lets concentrate algorithm constructs virtual coordinates 
try metrics specific particular mac physical layer technology evaluation 
addition get better idea algorithm real environment simulations model losses nodes drop incoming packets probability model specific mac layer radio technology data traffic pattern resort uniform loss model 
may realistic loss model provide insight robustness algorithm presence loss 
mobility simulate mobility random waypoint model :10.1.1.117.2921
obstacles model obstacles straight walls parallel axis 
nodes communicate line connecting intersects wall 
stress algorithm consider scenarios walls 
irregular shapes voids create networks voids regions inside network contain nodes simulate networks various shapes including concave shapes 
simulations involve basic scenario described section node network nodes uniformly distributed area square units see 
radio range units average nodes neighbors 
node broadcasts heartbeats radio range sec uniformly distributed sec 
heartbeat message contains list sender hop neighbors 
information receiver learn hop neighborhood 
node hear heartbeat intervals success rate number iterations success rate greedy routing virtual positions network sizes versus number iterations 
path length virtual positions true positions number nodes path length hops greedy routing virtual positions 
note axis uses logarithmic scale neighbor assumes longer neighbor 
addition beacon node periodically floods network 
nodes floods determine perimeter see section 
beacon floods network sec 
choice values timers somewhat arbitrary timers able accommodate mobility speeds units second keeping traffic overhead reasonably low static networks 
ideally algorithms adaptively tune timers dynamicity network scope 
scalability section study scaling algorithm 
measure success rate path length greedy routing overhead bootstrapping phase function network size node density 
network size shows success rate greedy routing virtual coordinates baseline network nodes network nodes 
point result independent runs 
cases non perimeter nodes compute initial coordinates distances perimeter nodes discussed section 
observations 
algorithm converges fast 
iterations success rate greater 
iteration corresponds heartbeat period number nodes number flooding nodes fraction nodes virtual positions true positions number packets forwarded cdf routing load nodes network true virtual coordinates success rate true positions low density virtual positions low density true positions high density virtual positions high density number nodes success rate greedy routing virtual true coordinates increasing network sizes different densities 
table number flooding nodes bootstrap phase network size varies 
case sec average 
iterations success rate reaches node network node network 
second success rates close success rates greedy routing true positions nodes nodes 
third success rates consistent runs variation decreases number iterations difference maximum minimum success rates iterations larger 
fourth success rate decreases little network quadruples size 
suggests algorithm quite robust network size increases 
shows path length hops greedy routing network size increases nodes 
results show virtual coordinates routing virtually impact path length path length identical case true coordinates 
shows cdf routing load node virtual true coordinates 
count number times node forwarding path choose random paths 
result shows routing virtual coordinates introduce hot spots distribution routing load similar true coordinates 
density plots success rate greedy routing different node densities node square units density baseline network nodes uniformly distributed grid lower density approximately node square distance units nodes grid 
success rate greedy routing virtual positions closely tracks success rate true positions 
expected success rate decreases density decreases 
path length virtual coordinates hops path length true positions 
density nodes affects number perimeter nodes flood bootstrap phase 
small voids layout nodes occur low density causing nodes conclude perimeter 
example node case number floods increased approximately high density low density 
overhead expensive operation algorithm bootstrap phase requires perimeter nodes compute exchange distances 
essentially requires certain fraction nodes flood network 
simulations perimeter nodes suppresses flood hearing flood perimeter node hops away 
table shows increase number bootstrap floods network size increases 
expected number bootstrap floods grows main reason success rate node network slightly lower section perimeter nodes projected outer circle 
recall node decides perimeter farthest node designated beacon hop neighborhood see section 
success rate success rate number iterations seconds seconds pause time success rate greedy routing hop neighborhood proportionally square root network size 
believe growth reasonable particularly cost flooding incurred network initialized 
bootstrapping completed overhead consists beacon periodically flooding entire network node periodically broadcasting radio range neighborhood information 
result overhead terms number messages packet sizes node depend network size 
require node maintain fairly date view hop neighborhood steady state overhead depend mobility dynamicity network 
attempt quantify overhead simulations mainly reasons 
simulator simulate application traffic control packets collide lost 
simulating application traffic severely limits scalability simulator 
second believe possible reduce overhead large factor implementing simple optimizations adaptive timers differential encoding 
optimizations scope currently mainly interested gauging coordinates geographic routing 
note optimizations specific scheme useful geographic routing schemes including real locations gfg gpsr 
mobility high power requirements mandate maintaining hop neighborhood expensive possible trade hop neighbors routing 
shows routing hop neighbors lead voids greedy routing fail drops form node network iterations 
rubber band iterations require information hop neighbors require hop neighbors perimeter detection 
perimeter detection frequent operation gain significantly terms overhead 
mobility section model node mobility random waypoint model :10.1.1.117.2921
node picks destination random currently send entire list neighbors heartbeat packet 
wasteful significantly better difference encoding 
perimeter detection hop neighborhood leads false positives 
success rate greedy routing versus maximum pause time 
error bars represent minimum maximum values 
square grid moves destination speed uniformly distributed range 
average speed equivalent average speed broch :10.1.1.117.2921
node reaches destination point node remains stationary time interval called pause time selects destination repeats 
time interval consecutive broadcasts initiated beacon node see section 
recall broadcast messages nodes detect perimeter 
node decides perimeter projects current virtual position circle 
node stops updating coordinates decides longer perimeter 
shows success rate greedy routing function maximum pause time sec respectively 
comparison node needs sec average move radio range fixed node 
expected success rate greedy routing decreases increases 
sec success rate low 
node cross radio ranges detect perimeter 
contrast success rate sec 
note maximum pause time increases success rate increases 
expected larger pause time decreases level mobility 
losses collisions section study robustness algorithm presence losses 
model losses randomly dropping control packets probability factor routing failures due data packet losses drop data packets 
arguably realistic loss model allows study robustness algorithm incomplete information 
shows success rate greedy routing loss rate increases 
expected success rate drops loss rate increases 
drop severe 
loss rate average success rate greedy routing greater 
results suggest algorithm robust presence packet losses 
intuitively operations exchange control information broadcasts periodic heart beats highly robust 
success rate greater probability hop hop packet delivery ignore losses data path 
success rate fraction packets dropped success rate greedy routing function loss rate 
number iterations success rate path length table success rate path length increasing numbers iterations dimensional space 
max 
ttl messages queries success rate expanding ring search unlimited table effect expanding ring search success rate overhead dht lookups success rate greedy routing obstacles true geo 
positions obstacles virtual positions obstacles true geo 
positions obstacles virtual positions obstacles true geo 
positions obstacles virtual positions length obstacle success rate greedy routing true geographic positions virtual positions different number obstacles different obstacle sizes 
obstacles section study algorithm works presence obstacles 
model obstacles walls lengths units 
comparison recall radio range node units node knows hop neighborhood 
large obstacles possible nodes get obstacles just greedy routing 
plots success rate greedy routing node network different obstacle lengths different number obstacles 
expected success rate decreases number obstacles length increases 
arguably surprising result success rate greedy routing performs better virtual coordinates geographic coordinates 
example obstacles length units success rate low 
compares success rate virtual positions 
intuitively virtual positions better reflect network connectivity real positions 
nodes side wall close geographic space communicate 
contrast virtual space nodes quite far apart 
plot results obstacles length obstacles higher units network disconnected 
irregular shapes section explore networks nodes distributed areas irregular shapes 
presents true positions network nodes contains large void center 
shows virtual positions network nodes 
virtual shape rounded algorithm projects perimeter nodes circle see section 
center circle coincides center gravity perimeter nodes radius equal average distance perimeter nodes center gravity computed triangulation algorithm 
expected virtual shape preserves void 
success rate greedy routing virtual coordinates higher success rate true positions 
consistent results presence obstacles showed greedy routing virtual positions outperforms greedy routing true positions 
average path length virtual positions versus true positions 
similarly shows true positions nodes network concave shape shows virtual positions nodes network 
success rate greedy routing true positions success case virtual positions 
average path length true positions versus virtual positions 
summary algorithms works case network irregular shapes including networks large voids 
addition algorithm preserves general shape network geographic space 
space far assumed nodes lie dimensional space 
section consider dimensional network nodes uniformly distributed cube side 
node neighbors average 
table ii shows success rate path length number iteration increases 
iterations success rate reaches exceeds iterations 
results suggests algorithm works higher dimensional spaces 
distributed hash tables implement distributed hash table dht associate item dht dimensional key maps perimeter circle 
item key stored node closest virtual space 
true positions virtual positions network large void center 
true positions virtual positions concave network 
fraction lookups hops cumulative distribution number hops required reach node closest destination node greedy routing stops 
route node responsible key augment greedy routing protocol simple expanding ring search scheme 
packet able greedy progress current node doesn store requested data item node performs expanding ring search closer node ttl exceeded 
plots cdf distance hops node greedy routing fails node closest destination virtual space 
greedy routing terminates correct node cases 
small fraction approximately lookups destination node quite far farther hops node greedy routing fails 
table iii shows impact maximum time leave ttl expanding ring search success rate message overhead 
results represent averages queries 
maximum ttl increases success rate overhead increase 
cases overhead increases believe small price pay achieve success rate 
summary results summary algorithm consistently matches performance greedy routing true positions range simulation scenarios 
fact algorithm outperforms greedy routing true positions network connectivity inconsistent network geography 
shown section presence large number obstacles success rate greedy routing virtual coordinates exceeds success rate true positions 
addition algorithm scalable 
example case node network require total nodes flood network bootstrap phase 
bootstrap phase overhead terms number messages message sizes independent network size 
particular algorithm requires node periodically send heartbeats single beacon node periodically flood network 

algorithm assigning coordinates nodes wireless network geographic routing require nodes know location 
key contribution relaxation algorithm associates virtual coordinates node 
virtual coordinates perform geographic routing 
simulation results show success rate greedy routing virtual coordinates close success rate greedy routing true coordinates 
furthermore cases presence obstacles greedy routing virtual coordinates significantly outperforms greedy routing true coordinates 
intuitively virtual coordinates reflect network connectivity nodes true positions relevant presence obstacles 
plan extend directions 
intend continue study algorithm simulation realistic link layer models network topologies 
second plan study better heuristics increase success rate dht operations greedy routing 
possibility waypoint routing source fails reach destination source pick waypoint ask perform routing behalf 
simple optimization potential avoid voids obstacles need expanding ring searches 
third plan explore behavior dhts networks large voids 
cases items keys map void stored nodes perimeter void 
create storage communication imbalance 
plan implement algorithm sensor motes study real world scenarios 

additional authors 
basagni chlamtac woodward distance routing effect algorithm mobility dream proceedings fourth annual acm ieee international conference mobile computing networking mobicom dallas texas august 
networking 
zone routing protocol zrp 
citeseer nj nec com html bose pat morin ivan stojmenovic jorge urrutia 
routing guaranteed delivery ad hoc wireless networks wireless networks vol 
pages 
citeseer nj nec com bose routing html josh broch david maltz david johnson yih chun hu jetcheva :10.1.1.117.2921
performance comparison multi hop wireless ad hoc network routing protocols 
proceedings fourth annual international conference mobile computing networking mobicom acm dallas tx october 
douglas de couto robert morris location proxies intermediate node forwarding practical geographic forwarding mit laboratory computer science technical report mit lcs tr june 
gregory finn 
routing addressing problems large metropolitan scale 
isi rr isi march 
gao guibas zhang zhu geometric spanner routing mobile networks proceedings nd acm proceedings nd acm symposium mobile ad hoc networking computing mobihoc pages october 
heidemann silva intanagonwiwat govindan estrin ganesan building efficient wireless sensor networks low level naming proceedings symposium operating systems principles pages banff alberta canada oct 
imielinski 
gps addressing routing rfc computer science rutgers university march 
citeseer nj nec com html intanagonwiwat govindan estrin 
directed diffusion scalable robust communication paradigm sensor networks 
proceedings sixth annual acm ieee international conference mobile computing networking mobicom 
johansson tony larsson mikael 
scenario performance analysis routing protocols mobile ad hoc networks proceedings fifth annual acm ieee international conference mobile computing networking pages seattle washington 
acm press 
david johnson david maltz josh broch 
dsr dynamic source routing protocol multi hop wireless ad hoc networks 
ad hoc networking edited charles perkins chapter pages addison wesley 
david johnson david maltz 
dynamic source routing ad hoc wireless networks 
mobile computing edited tomasz imielinski hank korth chapter pages kluwer academic publishers 
david johnson 
scalable robust internetwork routing mobile hosts 
proceedings th international conference distributed computing systems pages ieee computer society poznan poland june 
charles perkins pravin bhagwat :10.1.1.113.555
highly dynamic destination sequenced distance vector routing dsdv mobile computers proceedings acm sigcomm conference communications architectures protocols applications pages 
karp :10.1.1.22.9259
geographic routing wireless networks 
ph dissertation division applied sciences harvard university 
karp kung 
greedy perimeter stateless routing 
proceedings sixth annual acm ieee international conference mobile computing networking mobicom 
young bae ko nitin vaidya 
location aided routing lar mobile ad hoc networks mobile computing networking pages 
li john jannotti douglas de couto david karger robert morris scalable location service geographic ad hoc routing acm mobicom 
wen hwa liao jang ping sheu yu chee tseng 
grid fully location aware routing protocol mobile ad hoc networks telecommunication systems volume pages 
nathan linial laszlo lovasz avi wigderson 
rubber bands convex embeddings graph connectivity 
combinatorica 
samuel madden michael franklin joseph hellerstein wei hong 
tag tiny aggregation service ad hoc sensor networks 
osdi 
charles perkins elizabeth royer 
ad hoc demand distance vector routing proceedings nd ieee workshop mobile computing systems applications new orleans la february pages 
shenker ratnasamy karp govindan estrin data centric storage sensornets acm sigcomm hotnets jul 
ratnasamy karp estrin govindan shenker 
ght geographic hash table data centric storage sensornets 
submission acm international workshop wireless sensor networks applications wsna june 
fabian kuhn roger wattenhofer yan zhang aaron geometric ad hoc routing theory practice principles computing 
bose pat morin ivan stojmenovic jorge urrutia routing guaranteed delivery ad hoc wireless networks acm wireless networks november 
graph drawing algorithms graphs ioannis tollis giuseppe di battista peter eades editor tollis prentice hall 
yi shang wheeler ying zhang markus fromherz localization mere connectivity fourth acm international symposium mobile ad hoc networking computing mobihoc 
yu estrin govindan 
geographical energy aware routing recursive data dissemination protocol wireless sensor networks 
ucla computer science department technical report ucla csd tr may 
