algebraic rewritings optimizing regular path queries grahne alex concordia university cs concordia ca rewriting queries views powerful technique applications query optimization data integration data warehousing query rewriting relational databases investigated 
framework semistructured data problem rewriting received attention 
focus extracting information possible algebraic rewritings purpose optimizing regular path queries 
cases find complete exact rewriting query set views ideal 
information available views information partial 
introduce lower possibility partial rewritings provide algorithms computing 
papers investigate problem case conjunctive queries lmss ull css pv 
methods query containment fact number literals minimal rewriting bounded number literals query 
obvious method rewriting regular path queries requires technique rewriting regular expressions regular expression set regular expressions wants compute function approximates far authors know methods computing function approximates 
conway con derivatives regular expressions introduced provide ground development algebraic theory factorization regular algebra bl turn gives tools computing approximating function 
second method calvanese automata :10.1.1.104.2588
methods equivalent sense compute rewriting query 
methods model views full paths database paths labels spell word belonging regular language query 
practice cases infer views full paths query ideal views cover partial paths satisfactory long optimization complete paths ignored mentioned methods 
probably better give partial rewriting order information provided views 
methods model views full paths database paths labels spell word belonging regular language query 
practice cases infer views full paths query ideal views cover partial paths satisfactory long optimization complete paths ignored mentioned methods 
probably better give partial rewriting order information provided views 
information provided views useful partial complete 
problem partial rewriting touched briefly :10.1.1.104.2588
problem considered extension complete rewriting enriching set views new elementary symbol views materializing query evaluation 
choice new elementary views materialized done brute force way cost criteria depending application 
different approach 
word regular language query best possible views 
scenario database materialized views various assumptions soundness completeness views database relations available cost compared cost accessing views 
depending application information integration cache optimization different assumptions valid 
rewritings answering user queries views thoroughly investigated case relational databases see survey lev 
case semi structured databases currently known 
notably calvanese show obtain rewritings authors discuss possible rewritings information integration applications :10.1.1.104.2588
authors show gt rewritings obtained profitable information integration applications database graph unavailable 
gt shows running rewriting view graph guaranteed produce subset desired answer running rewriting guaranteed produce superset 
particular rewriting empty desired answer 
suppose example query re available views re re easy see rewriting empty 
cases able obtain exact rewriting query views rare practice general views part information needed answer query 
ignore partial information complete 
previous sections showed partial information captured algebraically partial rewritings 
partial rewritings avoid completely database minimize access possible 
order able utilize partial rewriting exact require def testing optimal algorithm :10.1.1.104.2588
exact partial rewriting evaluate query view graph accessing database lazy fashion necessary 
describing lazy algorithm review query answering semistructured databases typically works abs 
algorithm regular expression database graph db 
construct automaton aq set nodes database graph fs set states aq initial state 
exptime exptime exptime 
partial lower rewriting 
theorem algorithm computing partial rewriting query set fv view definitions essentially optimal 
proof 
polynomially intersect partial rewriting omega get rewriting :10.1.1.104.2588
rewriting optimally computed doubly exponential time algorithm essentially optimal :10.1.1.104.2588
abi abiteboul 
querying semistructured data 
proc 
partial lower rewriting 
theorem algorithm computing partial rewriting query set fv view definitions essentially optimal 
proof 
polynomially intersect partial rewriting omega get rewriting :10.1.1.104.2588
rewriting optimally computed doubly exponential time algorithm essentially optimal :10.1.1.104.2588
abi abiteboul 
querying semistructured data 
proc 
icdt pp 
jacm pp 
bl 
equations regular languages finite automata sequential networks 
tcs pp 
calvanese giacomo lenzerini vardi :10.1.1.104.2588
rewriting regular expressions regular path queries 
proc 
pods pp 

