description logics conceptual data modeling diego calvanese maurizio lenzerini daniele nardi dipartimento di informatica sistemistica universit di roma la sapienza salaria roma italy lenzerini dis uniroma jan chomicki saake editors logics databases information systems 
kluwer academic publisher 
article aims establishing logical approach class data modeling 
discussion class formalisms data modeling introduce family logics called description logics stem research knowledge representation arti cial intelligence 
logics family particularly suited specifying data classes relationships classes equipped formal semantics inference mechanisms 
demonstrate popular data modeling formalisms including entity relationship model common variants object oriented data models expressed terms speci logics family 
notable example ort logic klw pro description logics conceptual data modeling vides elegant framework equipped sound complete resolution proof procedure 
goal proposals provide sophisticated environment computing objects system supporting reasoning conceptual speci cation 
reason easily compared approach proposed 
step uni ed view class languages establishing relationship semantic object oriented data models terms knowledge representation framework description logics 
speci cally building results class representation formalism family description logics ss show able capture popular data modeling formalisms presently databases information system analysis providing powerful reasoning techniques :10.1.1.50.2685
description logics structured knowledge described means called concepts roles denote unary binary predicates respectively 
starting set atomic symbols build complex concept role expressions applying suitable constructors characterize description logic 
formally concepts interpreted subsets domain roles binary relations domain constructors equipped precise set theoretic semantics 
common constructors include boolean operators concepts quanti cation roles 
assertions specify necessary necessary sucient conditions individuals instances certain concepts 
reasoning knowledge bases includes detecting inconsistencies knowledge base determining concept populated model knowledge base checking subsumption instances concept necessarily instances concept models knowledge base 
description logic propose called alcqi features rich combination constructors including quali ed number restrictions inverse roles inclusion assertions general form 
show features logics databases information systems alcqi powerful provide uni ed framework object oriented languages semantic data models 
done establishing precise correspondence entity relationship model che objectoriented language style ak :10.1.1.123.1085
demonstrate formalism proposed provides important features currently missing family relevance stressed 
expressive power alcqi computational complexity reasoning high relevant reasoning tasks remain decidable 
consider feature important language actual knowledge representation data modeling language simply formal framework comparing apparently di erent approaches 
organized follows 
semantics knowledge base speci ed notion satisfaction assertions 
interpretation satis es inclusion assertion satis es equality interpretation model knowledge base satis es terminological assertions 
fundamental reasoning tasks considered context description logics intensional level address knowledge base satis ability concept satis ability logical implication 
knowledge base satis able admits model concept satis able admits model nonempty interpretation logically implies inclusion assertion models interpretation subset interpretation restricting attention nite interpretations models ones interest data modeling 
assumption dealing nite structures means common description logics needs taken explicitly account devising reasoning procedures cal :10.1.1.177.2616
fact constructs alcqi particular functionality inverse roles cycles knowledge base may interact way knowledge base admits nite model admits nite domain :10.1.1.50.2685
words alcqi lacks nite model property reasoning nite unrestricted case di erent 
semantic data models semantic data models introduced primarily formalisms database schema design 
provide means model databases richer way traditional data models supported database management systems important adopted database information system design methodologies computer aided software engineering tools 
interpretation satis es inclusion assertion satis es equality interpretation model knowledge base satis es terminological assertions 
fundamental reasoning tasks considered context description logics intensional level address knowledge base satis ability concept satis ability logical implication 
knowledge base satis able admits model concept satis able admits model nonempty interpretation logically implies inclusion assertion models interpretation subset interpretation restricting attention nite interpretations models ones interest data modeling 
assumption dealing nite structures means common description logics needs taken explicitly account devising reasoning procedures cal :10.1.1.177.2616
fact constructs alcqi particular functionality inverse roles cycles knowledge base may interact way knowledge base admits nite model admits nite domain :10.1.1.50.2685
words alcqi lacks nite model property reasoning nite unrestricted case di erent 
semantic data models semantic data models introduced primarily formalisms database schema design 
provide means model databases richer way traditional data models supported database management systems important adopted database information system design methodologies computer aided software engineering tools 
rich variety semantic data models introduced various degrees expressiveness see hk extensive survey 
rich variety semantic data models introduced various degrees expressiveness see hk extensive survey 
provide means classes explicit representation objects attributes relationships objects 
important feature semantic data models possibility specify subtype supertype relationships called provide inheritance properties 
logics databases information systems simplicity presentation concentrate attention widespread semantic data models standard extensively design phase commercial applications entity relationship er model 
er model introduced che subsequently variants extensions proposed di er minor aspects expressiveness notation bcn tha tha :10.1.1.123.1085
er model domain interest modeled means er schema usually represented graphical notation particularly useful easy visualization data dependencies 
introduce rst order formalization includes important features di erent variants possible establish precise correspondence description logics 
entity relationship model basic elements er model entities relationships attributes 
entity set simply entity denotes set objects called instances common properties 
intuitively condition states instances concept corresponding relationship represent tuple 
notice condition implicit semantics er model extension relationship set tuples necessarily hold relationships rei ed 
imposed alcqi suitable assertions 
reasoning knowledge base corresponding er schema sucient restrict attention relation descriptive models 
concept expression knowledge base obtained er schema satis able relation descriptive model nonempty extension cal :10.1.1.177.2616:10.1.1.177.2616
exploited relation descriptive models alcqi knowledge base put correspondence legal database states precisely logics databases information systems correspondence established de ning mappings follows mapping database states corresponding interpretations properties database state legal database state model 
union 
set rei ed tuples set domain values appear value attribute 
entity mapping relation descriptive interpretations database states corresponding properties interpretation model legal database state 
set rei ed tuples set domain values appear value attribute 
entity mapping relation descriptive interpretations database states corresponding properties interpretation model legal database state 
set objects 
instances atomic concept corresponding relationship basic domain 
entity existence mappings allows reduce problem checking properties hold er schema problem reasoning corresponding alcqi knowledge base cal :10.1.1.177.2616:10.1.1.177.2616
model concept corresponding entity satis able legal database state entity populated 
conversely applying legal database state obtain suitable model 
extending expressiveness modeling language semantic data models general er model particular provide features modeling primitives prove useful order represent complex dependencies data 
richness constructs typical description logics correspondence formalisms established previous section possible add constructs basic model take fully account reasoning schema 
particular de ned way legal instance nite model ii type expression active value vj conversely de ne mappings nite interpretations instances domain elements unfolded versions nite interpretations active values instances nite model legal instance ii concept translation type expression 
jm jm similarly er model existing mappings allows reduce problem checking properties classes object oriented schema problem reasoning corresponding knowledge base 
extending expressiveness modeling language ability represent object oriented schema description logic knowledge base feasible consider extensions objectoriented formalism useful purpose conceptual modeling 
considerations developed er model regard arbitrary boolean constructs classes applied objectoriented setting provides disjunction admit form negation 
second analogously exploit ability expressing class de nitions addition inclusion statements typical objectoriented modeling languages bn :10.1.1.50.2685:10.1.1.50.2685
additional features speci cally addressed framework object oriented languages shown 
logics databases information systems cardinality constraints 
cardinality constraints typical semantic data models expressible object oriented schemata 
example cont 
specify numerical restrictions de nition course enroll students 
course value rectype enrolls taughtby enrolls settype member student member member taughtby teacher notice usage cardinality restrictions example corresponds ability constrain cardinality sets 
general restrictions values attributes 
usage object oriented modeling languages constructs corresponding quanti ed role restrictions limited translation record set structures 
adding general forms quanti ed role restrictions amounts admitting exible structures closer counterpart possibly frames knowledge representation systems see bs :10.1.1.50.2685
frame structure example specify slot counterpart record attribute restrictions number type llers 
addition introducing set types explicitly attributes values sets directly multivalued attributes express constraints type number instances constructors alcqi 
example specify graduate student degree express relationship courses students means attribute enrolls consider multivalued 
gradstudent student degree course enrolls student enrolls enrolls taughtby professor gradstudent taughtby inverse roles 
ability introduce de nitions allows hierarchical structuring schema support re nement approach schema design ensuring consistency 
class subsumption 
class subsumed class databases satisfy schema extension subset extension subsumption allows deduce properties class 
basis classi cation classes appear schema lattice 
classi cation object oriented approach exploited ways modeling process bn :10.1.1.50.2685:10.1.1.50.2685
example suppose extend er schema shown linking relationship supervising role gradstudent role sof student 
cardinality constraints express logics databases information systems supervising gradstudent sof student sof gradstudent supervising student sof sof supervising extension knowledge base shown forces equivalence classes student supervisor graduate student student 
constraints imposed force classes student gradstudent number instances extension gradstudent subset extension student domain assumed nite classes fact equivalent 
say student subsumed gradstudent augmented schema 
richness constructs available alcqi addition basic description logic constructs includes inverse roles quali ed number restrictions cyclic assertions reasoning knowledge base nontrivial task 
recall data modeling setting interested nite model reasoning 
observe reasoning tasks immediately reduced fundamental problem checking satis ability single atomic concept 
fact knowledge base satis able satis able implies inclusion assertion satis able sucient treat satis ability atomic concept arbitrary concept expression satis able newly introduced atomic concept satis able fa cg 
checking satis ability single atomic concept alcqi knowledge base done exploiting technique developed cal :10.1.1.177.2616
method extends developed simpler logic construction particular system linear inequations search particular acceptable solutions see cal full details :10.1.1.50.2685:10.1.1.177.2616:10.1.1.177.2616
size worst case doubly exponential size search acceptable solutions done polynomial time size system 
obtain decision procedure reasoning tasks works deterministic double exponential time 
notice case discussed schema contains equality assertions certain constructs restricted way negation allowed front atomic concepts number restrictions non quali ed form size system kept single exponential size case particular interest basic constructs semantic object oriented data models expressed language :10.1.1.50.2685
recall data modeling setting interested nite model reasoning 
observe reasoning tasks immediately reduced fundamental problem checking satis ability single atomic concept 
fact knowledge base satis able satis able implies inclusion assertion satis able sucient treat satis ability atomic concept arbitrary concept expression satis able newly introduced atomic concept satis able fa cg 
checking satis ability single atomic concept alcqi knowledge base done exploiting technique developed cal :10.1.1.177.2616
method extends developed simpler logic construction particular system linear inequations search particular acceptable solutions see cal full details :10.1.1.50.2685:10.1.1.177.2616:10.1.1.177.2616
size worst case doubly exponential size search acceptable solutions done polynomial time size system 
obtain decision procedure reasoning tasks works deterministic double exponential time 
notice case discussed schema contains equality assertions certain constructs restricted way negation allowed front atomic concepts number restrictions non quali ed form size system kept single exponential size case particular interest basic constructs semantic object oriented data models expressed language :10.1.1.50.2685
discussion optimization techniques proposed framework cl 
checking satis ability single atomic concept alcqi knowledge base done exploiting technique developed cal :10.1.1.177.2616
method extends developed simpler logic construction particular system linear inequations search particular acceptable solutions see cal full details :10.1.1.50.2685:10.1.1.177.2616:10.1.1.177.2616
size worst case doubly exponential size search acceptable solutions done polynomial time size system 
obtain decision procedure reasoning tasks works deterministic double exponential time 
notice case discussed schema contains equality assertions certain constructs restricted way negation allowed front atomic concepts number restrictions non quali ed form size system kept single exponential size case particular interest basic constructs semantic object oriented data models expressed language :10.1.1.50.2685
discussion optimization techniques proposed framework cl 
reasoning semantic object oriented data models 
decidability reasoning alcqi characterization semantic object oriented data models developed sections provides method reason data models 
particular consistency entity er schema rephrased problem checking concept corresponding satis able translation schema 
decidability reasoning alcqi characterization semantic object oriented data models developed sections provides method reason data models 
particular consistency entity er schema rephrased problem checking concept corresponding satis able translation schema 
analogously subtyping object oriented schemata checking type denotes subset logics databases information systems type legal instance schema accomplished checking subsumption translated type expressions follows translation schema 
type consistency checking type consistent legal instance schema reduced concept consistency 
number attempts previously characterize reasoning problems devise reasoning techniques semantic cfp ln dl hk object oriented data models ak bs bn :10.1.1.50.2685:10.1.1.50.2685
signi cant reasoning dependencies relational model see cfp ck gm ahv tight relationship framework addressed 
respect reasoning entity relationship schemata previous ctf ln addressed expressive formalisms reasoning techniques description logics provide extensions signi cantly expressive framework 
similar considerations apply respect proposals perform type consistency inheritance reasoning object oriented data models 
example type consistency type subsumption algorithms bn expressive object oriented formalism allows de nition classes means necessary sucient conditions extended order take account union types inverse attributes :10.1.1.50.2685:10.1.1.50.2685
number attempts previously characterize reasoning problems devise reasoning techniques semantic cfp ln dl hk object oriented data models ak bs bn :10.1.1.50.2685:10.1.1.50.2685
signi cant reasoning dependencies relational model see cfp ck gm ahv tight relationship framework addressed 
respect reasoning entity relationship schemata previous ctf ln addressed expressive formalisms reasoning techniques description logics provide extensions signi cantly expressive framework 
similar considerations apply respect proposals perform type consistency inheritance reasoning object oriented data models 
example type consistency type subsumption algorithms bn expressive object oriented formalism allows de nition classes means necessary sucient conditions extended order take account union types inverse attributes :10.1.1.50.2685:10.1.1.50.2685
identifying reasoning alcqi basis reasoning semantic object oriented data models able combine features approaches retaining decidability reasoning problems 
combination language constructs rst time taken consideration regard reasoning data models negation disjunction 
clearly generality leads high computational complexity order proposed approach feasible practical setting analysis required scope 
proposed approach provide uniform basis reasoning semantic object oriented data models 
editors 
sorts types arti cial intelligence 
number lecture notes arti cial intelligence 
springer verlag 
bn sonia bergamaschi bernhard nebel :10.1.1.50.2685:10.1.1.50.2685
acquisition validation complex object database schemata supporting multiple inheritance 
applied intelligence 
bor alexander borgida 
type systems knowledge representation natural semantics speci cations description logics 
proc 
th int 
conf 
deductive object oriented databases dood 
cal diego calvanese :10.1.1.177.2616
finite model reasoning description logics 
proc 
th int 
conf 
th int 
conf 
principles knowledge representation reasoning kr pages 
morgan kaufmann los altos 
cal diego calvanese :10.1.1.177.2616:10.1.1.177.2616
unrestricted finite model reasoning representation formalisms 
phd thesis dipartimento di informatica sistemistica universit di roma la sapienza 
cb cattell douglas barry editors 
object database standard odmg 
springer verlag 
cfp marco casanova ronald fagin christos papadimitriou 
inclusion dependencies interaction functional dependencies 
journal computer system sciences 
che chen :10.1.1.123.1085
entity relationship model uni ed view data 
acm transactions database systems march 
ck cosmadakis kanellakis 
functional inclusion dependencies graph theoretical approach 
th ieee int 
conf 
data engineering icde pages 
ieee computer society press 
diego calvanese maurizio lenzerini daniele nardi :10.1.1.50.2685
uni ed framework class representation formalisms 
proc 
th int 
conf 
