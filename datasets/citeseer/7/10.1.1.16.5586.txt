brics basic research computer science compositional proof real time mutual exclusion protocol francois kim larsen paul pettersson wang yi brics report series rs issn december copyright fl brics department computer science university aarhus 
rights reserved 
reproduction part permitted educational research condition copyright notice included copy 
see back inner page list publications brics report series 
copies may obtained contacting brics department computer science university aarhus ny munkegade building dk aarhus denmark telephone telefax internet brics brics dk brics publications general accessible world wide web anonymous ftp www brics dk ftp ftp brics dk document subdirectory rs compositional proof real time mutual exclusion protocol francois kim larsen paul pettersson wang yi brics aalborg university denmark department computer systems uppsala university sweden ens de cachan france 
apply compositional proof technique automatic verification correctness fischer mutual exclusion protocol 
demonstrated technique may avoid state explosion problem 
compositional technique implemented tool cmc gives experimental evidence size verification effort required technique grows polynomially size number processes protocol 
particular cmc verifies protocol processes seconds mb main memory 
contrast existing verification tools timed systems suffer state explosion problem tool knowledge succeeded verifying protocol processes 
known major problem applying automatic verification techniques analyze finite state concurrent systems potential combinatorial explosion state space arising parallel composition 
years number automatic verification tools real time systems 
experiences tools show state explosion basic research computer science centre danish national research foundation 
cmc compositional model checking problem serious verifying timed systems 
system satisfy certain timing constraints behaviour model checker keep track part state space explored timing information associated state possible clock values time space consuming 
evidenced experiments performed various automatic verification tools timed systems 
knowledge existing tools succeeded verifying mutual exclusion property fischer protocol known benchmark example processes regardless machine tools installed 
decade various techniques developed avoid state explosion problem verifying finite state systems symbolic representation states space bdds application partial order methods suppresses unnecessary interleavings transitions application abstractions symmetries 
techniques extended deal timed systems 
applying techniques parallel systems fischer protocol potential explosion global state space remains 
compositional verification technique developed andersen finite state systems 
technique extended deal real time systems modelled networks timed automata allows components real time system gradually moved system description specification avoiding global state space construction examination 
essential technique intermediate specifications kept small efficient minimization heuristics 
main ingredient compositional verification technique called quotient construction allows components network moved specification 
example consider typical model checking problem timed automata 
want verify parallel composition satisfies formula having construct complete control node space 
avoid complete construction removing components simultaneously transforming formula accordingly 
removing component transform formula quotient formula iff gamma clearly quotient larger original formula succeeded simplifying problem 
repeated application quotienting yields iff gamma unit respect parallel composition 
ideas clearly explosion may occur size final formula 
crucial observation andersen quotienting followed minimization formula small collection efficiently implementable strategies 
ideal case intermediate quotient formula simplified true proven original network automata satisfies original formula 
apply technique give compositional proof fischer mutual exclusion protocol 
particular shown state explosion avoided verification protocol size correctness proof offer grows polynomially size number processes protocol 
compositional technique implemented tool called cmc compositional model checking 
tool gives experimental evidence potential technique seconds mb main memory cmc automatically verifies mutual exclusion property fischer protocol processes 
organized follows section briefly introduce modelling specification languages real time systems formal description fischer mutual exclusion protocol 
section describes compositional quotienting method simplification techniques logical formulas 
section proof mutual exclusion property fischer protocol 
section report experimental results obtained cmc tool compare performance existing tool suite 
section give concluding remarks illustrate 
real time systems section briefly introduce modelling specification languages real time systems studied previously literature 
details refer 
models timed transition system timed transition systems basic semantic model realtime systems 
timed transition system labelled transition system types labels atomic actions delay actions positive reals representing discrete continuous changes real time systems 
assume finite set actions act ranged finite set atomic propositions ranged stand set non negative real numbers delta set delay actions fffl rg union act delta 
definition 
timed transition system act tuple hs gamma set states initial state gamma theta theta transition relation proposition assignment function state assigns set atomic propositions hold ut synchronization functions describe concurrency synchronizations timed transition systems 
synchronization function partial function act theta act 
act denotes distinguished action symbol hs gamma 
timed transition systems synchronization function 
parallel composition timed transition system hs gamma gamma 
inductively defined follows gamma 
gamma 
gamma 
ffl gamma 
ffl gamma 
ffl gamma 
proposition assignment function defined 
networks timed automata type systems studying particular class timed transition systems syntactically described networks timed automata 
timed automaton standard finitestate automaton extended finite collection real valued clocks 
finite set realvalued clocks ranged extend transition relation timed transition system gamma 
iff ranged stand set formulas atomic constraint form gamma natural number conjunction formulas 
called clock constraints clock constraint systems definition 
timed automaton actions act atomic propositions clocks tuple hn finite set nodes initial node thetab theta theta corresponds set edges proposition assignment function 
case hl written gamma 
ut semantics timed automaton terms clock assignments 
clock assignment function denote set clock assignments denotes time assignment maps clock value 
denotes assignment maps clock value agrees cnc semantical state automaton pair node clock assignment initial state initial clock assignment mapping clocks 
semantics timed transition system sa hs oe gamma set states oe initial state gamma 
transition relation defined follows gamma exist gamma 
ffl gamma extended simply 
timed automata synchronization function parallel composition denotes timed transition system sa sb specifications specify safety bounded liveness properties timed systems timed modal logic studied 
finite set clocks called formula clocks id set identifiers 
set formulas id act generated syntax ranging cp cp cp may atomic clock constraint form gamma natural number atomic proposition act action id identifier 
meaning identifiers specified declaration assigning formula identifier 
understood write def 
timed transition system hs gamma 
described network timed automata formulas interpreted terms extended state hs ui state timed transition system clock assignment declaration 
formally satisfaction relation extended states formulas defined largest relation satisfying implications table 
simplicity shall omit index write understood context 
network timed automata satisfies formula written initial node assignments automaton clocks formula clocks note initial state fischer protocol revisited example networks timed automata study fischer mutual exclusion protocol 
hs ui hs ui hs ui cp hs ui cp hs ui hs ui hs ui hs ui hs ui ffl gamma 
hs di hs ui gamma 
hs ui hs ui hs fxg hs ui hs ui table 
definition satisfiability 
reason choosing example known studied researchers context real time verification 
importantly size example easily scaled simply increasing number processes protocol increasing number control nodes causing state space explosion number clocks causing region space explosion 
particularly suited technique 
protocol guarantee mutual exclusion concurrent system consisting number processes clock constraints shared variable 
shall model processes timed automaton protocol network timed automata 
processes assumed local clock 
idea protocol timing constraints local clocks set processes change global variable process number read global variable shared variable equal number enter critical section 
process identifier clock ng ng ng model shared variable timed automaton set atomic actions hn fv ng fhv tt ng fhv tt ng fhv tt jg cs tt fx fx fg tt tt fg fg fig 

protocol mutual exclusion 
simply assume defined automaton typical process shown fig 
assume proposition assignment function defined way nodes protocol described network fischer fn gamma pn interleaving full synchronization operators induced synchronization functions respectively defined ig note allowed perform ig righthand side allowed perform actions indices higher intuitively protocol behaves follows constraints shared variable ensure process reach node process reaches node move node node 
timing constraints clocks ensure processes nodes wait processes nodes reach nodes 
process reaches node sets identifier gets right enter critical section 
need verify process critical section 
instance general requirement formalized invariant property cs cs need prove theorem compositional model checking model checking real time systems may carried symbolic fashion 
applying techniques parallel networks fischer potential explosions global symbolic state space may seriously hamper technique 
compositional verification technique allows components real time system gradually moved system description specification avoiding global state space construction examination 
essential technique intermediate specifications kept small efficient minimization heuristics 
technique may seen real time extension compositional technique experimentally applied andersen ordinary finite state systems 
section give brief review technique 
quotient construction main ingredient compositional verification technique called quotient construction allows components network moved specification 
precisely formula timed automata may construct formula called quotient ffi ffi bi implication indicates moving parts parallel system formula 
clearly quotient larger original formula simplified task model checking symbolic semantics significantly smaller precisely formula timed automaton node define quotient formula ffi table structure note quotient construction identifiers introduces new identifiers form new identifiers definitions collected quotient declaration db recall important theorem justifies construction theorem 
timed automata initial node db ffi cn clock constraint write abbreviation formula cn 
ls formula atomic constraint closed negation 
rule assume nodes timed automaton extended edge tt gamma 
ffi ffi ae tt ffi ffi ffi ffi ffi ffi ffi ffi ffi ffi ffi ffi ffi ffi gamma 
ffi ffi def ffi table 
definition quotient ffi minimizations obvious repeated quotienting leads explosion formula particular number identifiers 
crucial observation andersen untimed finite state case simple effective transformations formulas practice may lead significant reductions 
presence real time need addition minimization strategies andersen heuristics propagating eliminating constraints clocks formulas declarations 
describe transformations considered reachability considering initial quotient formula ffi identifiers db may reachable 
application fly technique insure reachable part db generated 
boolean simplification formulas may sim tt tt table 
constraint propagation simple boolean equations duals ff ff tt ff 
constraint propagation constraints formula clocks may propagated various distribution laws see table 
cases propagation lead trivial clock constraints may simplified tt ff applicable boolean simplification 
seen table certain operations performed constraints propagation 
operations include fu rg fu dg 
dg may shown set constraints closed operations inclusion checking may computed efficiently cubic time number clocks see 
constant propagation identifiers definitions constants tt ff may removed substituting definitions declaration identifiers 
trivial equation elimination equations form def easily seen tt solution may removed 
generally largest set identifiers def tt simplified tt 
identifiers removed provided value tt propagated uses identifiers constant propagation 
maximal set may efficiently computed standard fixed point computation algorithms 
equivalence reduction identifiers semantically equivalent satisfied timed transition systems may collapse single identifier obtain reduction 
semantical equivalence computationally hard obtain cost effective strategy approximate semantical equivalence identifiers follows equivalence relation identifiers 
may extended formulas obvious manner 

maximal equivalence relation identifiers def def 
provides desired cost effective approximation semantically equivalent 
may efficiently computed standard fixed point computation algorithms 
protocol section recall protocol fischer consists processes pn competing critical section setting testing shared variable mutual exclusion property verify tt formula obtained substituting occurrences identifiers formula tt 
recursion free untimed part logic semantical equivalence np complete 
critical section time cs cs sn remainder section shall apply compositional model checking technique verify protocol 
observation quotienting away quotient obtained simplifies tt minimization heuristics 
examination components pn required regardless behaviour mutual exclusion property satisfied 
words state space explosion avoided sufficient explore fixed part system prove desired property 
constructing quotient order components network may highly determine success method resembles importance variable ordering bdd technology 
choose quotient variable followed relevant processes course constantly minimizing intermediate equation systems possible 
step step remove variable network transform quotienting locations vn result equation system containing identifiers xn denotes quotient synchronization function rest system defined possible action transitions quotient exactly conjuncts locations satisfies cs cs get family formulae cs cs new equation system top identifier constitutes requirement remaining components pn identifier expresses requirement remaining system variable holds value cs cs satisfied long variable tested long time passes hold 
variable set value formula defined hold 
step cs cs required identifiers definitions differ slightly equation system simplified 
proceed transform equation system respect removal network 
quotient operator subscripted synchronization function drop synchronization function subscript quotient operator obvious 
equation system step contains equations control locations new equation system contain delta equations 
compute fa cs cases treated separately remaining cases treated 
quotienting identifiers requirement cs cs disappears cs satisfied locations 
quotienting identifiers cs cs cs remains definition new identifier cs cs satisfied cs due lack space display quotient continue quotienting respect calculate formula graphs resulting quotient fairly large equation system difficult comprehend written normal syntax 
ease situation introduce notion formula graph convenient graphical notation equation systems 
formula graphs provide better overview relations identifiers especially cyclic dependencies easily recognized 
addition formula graphs suggests directly actual representation equation systems various simplification strategies implementable graph operations 
formula graph labelled directed graph node labelled name formula identifier possibly empty set atomic propositions 
edges labelled clock constraints action modalities sets clocks reset 
application quotienting procedure cases produce formulae example formula graph shown 
proposition conjunct definition property placed inside node conjunct appears naturally self loop conjuncts appear edges labelled edges timed automata 
kinds labels edges may absent absence clock constraints means tt absence actions means absence reset set means clocks reset 
fig 

formula graph step equation system consists delta delta equations size product automaton equations grouped equations resulting equations resulting equations resulting delta gamma equations resulting fixed choice locations set identifiers describe similar properties 
identifiers conjunct refers identifier modality 
definition form 
formula graph appear self loops labelled modality nodes order keep graph simple omitted loops 
quotient symmetrical symmetrical names locations clocks display half quotient formula graph 
top identifier part graph shown 
formula graph structure formula graph resulting quotient shown 
typical parts quotient identified parts labelled 
part quotient results keeping fixed initial location letting variable vary 
surprisingly part quotient reduces tt 
argue formally case 
part quotient corresponds behaviour part assigns variable assigns enters critical section fails observe variable having value returns initial state part quotient critical section time 
concrete manifestation formula identifiers part requires cs cs satisfied remaining components pn essential proof correctness part quotient required xj cs xj xj xj cs xj cs cs xj cs cs cs xj cs cs xj xj cs xj cs xj cs cs xj cs cs cs cs cs cs cs fig 

formula sub graph hold network processes pn actual proof relies constraint propagation show initial clock constraint clocks having value dangerous part quotient reached 
part symmetrical part part symmetrical part 
part quotient numbered consists mentioned identifiers location location part quotient requirement takes value different 
obtain compact representation parameterized abbreviations 
grey node labelled locations abbreviates family nodes xn similarly edges labelled really represents family edges edge choice labelled edge fig 

structure formula graph represents family gamma 
gamma 
xn simplification quotient formula illustrated theorem necessary sufficient property remaining components pn order system satisfies may apply simplification heuristics 
pleasant surprise observe quotient formula calculated simplifies tt applying constraint propagation followed trivial equation elimination 
perform quotienting respect remaining components protocol may conclude increase number components protocol gives rise polynomial growth size proof 
constraint propagation reveals fact identifiers cs cs reached initial constraint 
remaining nodes graph contains propositions clock constraints trivial equation elimination immediately reduce identifiers especially top identifier tt 
constraint propagation implemented formula graphs manner gamma 
edge graph consider implication constraint may propagated rewrite rules table constraint represented implication frg constraint propagation general formula graph node multiple outgoing edges result conjunction formulas type 
intend direct propagation constraints specific path formula graph specific identifiers wish prove unreachable 
specific purpose introduce notion guided constraint propagation 
guided constraint propagation simply focus specific path formula graph disregard edges 
perform guided constraint propagation part quotient path cs cs cs cs see discover cs hit empty constraint cs cs importance practice 
propagation jump directly situation node reached letting time pass resetting clock words consider implication may propagate respect edge fx gamma 
yielding propagating respect edge gamma 
cs yields cs propagating constraint respect cs fx gamma 
cs get cs clearly constraint empty propagation simplifies tt 
performing form guided constraint propagation prove formula identifiers quotient requiring critical section reachable initial time zone 
course propagate constraints parts quotient reduce quotient parts really reachable 
trivial equation elimination reduces remaining identifiers tt defined righthand sides constraint propagation entirely built connectives tt 
experiments quotient construction simplification techniques previous section implemented prototype tool called cmc cmc enables compute quotient formula respect timed automaton simplify quotient simplification 
fact cmc enables quotienting respect formulas richer logic allows general disjunction existential modalities hai 
simplification techniques applied implemented cmc exception constraint propagation general disjunction existential modalities 
new simplification strategies quite useful actual verification introduced 
reduction respect near cmc integrated available tool suite uppaal 
called hit zones essentially exhaustive constraint propagation providing automatic counterpart called guided constraint propagation previous section 
idea simplification precompute variable domain terms clock constraints variable considered verification 
domains called hit zones possible cases simplify clock constraints true false amenable constant propagation simplification performed program replace variable form false 
results experimental investigation compared current version tool cmc performances backward forward reachability checker uppaal acyclic version fischer protocol 
experiment cmc uppaal installed machine running sunos mb primary memory swap memory 
previously backward reachability tool uppaal demonstrated advantageous comparison verification tools version fischer protocol 
seen outcome experiment uppaal clearly outperformed cmc manages verification processes 
successfully demonstrated compositional proof technique may avoid state explosion problem 
particular shown state explosion avoided verification fischer protocol size correctness proof offer grows polynomially size number processes protocol 
furthermore claim execution time seconds number processes cmc uppaal backward uppaal forward fig 

execution time experimental evidence tool cmc manages verification processes 
contrast exiting verification tools suffer state explosion tools succeeded verifying protocol processes 
actual proof established mutual exclusion property designated processes second 
complete correctness proof course need verify mutual exclusion pairs processes 
delta gamma pairs complete verification remains polynomial immediate includes integration cmc implementation verification tool uppaal require certain extensions uppaal allows integer variables clocks interval bounded slopes 
order components factored order various minimization techniques applied highly determines degree state explosion avoided 
resembles situation bdds ordering propositional variables strongly influences size bdd 
ambition get better understanding technique 

alur dill 
automata modelling real time systems 
theoretical computer science april 

andersen 
partial model checking 
proc 
lics 

johan bengtsson kim larsen fredrik larsson paul pettersson wang yi 
uppaal suite symbolic compositional verification real time systems 
st workshop tools algorithms construction analysis systems may 

johan bengtsson kim larsen fredrik larsson paul pettersson wang yi 
uppaal 
proc 
nd workshop tools algorithms construction analysis systems number lecture notes computer science pages 
springer verlag march 

burch clarke mcmillan dill hwang 
symbolic model checking states 
logic computer science 

clarke jha 
exploiting symmetry temporal logic model checking 

proc 
cav 

clarke grumberg long 
model checking abstraction 
principles programming languages 

olivero yovine 
verifying lotos programs kronos 
proc 
th international conference formal description techniques 

emerson jutla 
symmetry model checking 

proc 
cav 

godefroid wolper 
partial approach model checking 
logic computer science 

thomas 
henzinger xavier nicollin joseph sifakis sergio yovine 
symbolic model checking real time systems 
information computation 

pei hsin ho howard wong toi 
automated analysis audio control protocol 
proc 
cav volume lecture notes computer science 
springer verlag 

larsen 
compositional model checking real time systems 
proc 
concur lecture notes computer science 
springer verlag 

larsen weise 
timed automata logic back 
proc 
mfcs lecture notes computer 
brics report series rs 

kim larsen paul pettersson wang yi 
compositional symbolic model checking real time systems 
proc 
th ieee real time systems symposium pages december 

kim larsen paul pettersson wang yi 
diagnostic model checking real time systems 
proc 
th dimacs workshop verification control hybrid systems lecture notes computer science 
springer verlag october 


partial orders verification realtime systems 
lecture notes computer science 

valmari 
stubborn attack state explosion 
theoretical computer science 

wang yi paul pettersson mats daniels 
automatic verification real time communicating systems constraint solving 
proc 
th international conference formal description techniques 
article processed macro package llncs style publications brics report series rs francois kim larsen paul pettersson wang yi 
compositional proof real time mutual exclusion protocol 
december 
pp 
appear dauchet bidoit editors theory practice software development 
th international joint conference caap fase tapsoft proceedings lncs 
rs igor walukiewicz 
pushdown processes games model checking 
december 
pp 
appears alur henzinger editors th international conference computer aided verification cav proceedings lncs pages 
rs peter mosses 
theory practice action semantics 
december 
pp 
appears penczek editors mathematical foundations computer science st international symposium mfcs proceedings lncs pages 
rs claus el ene kirchner peter mosses 
combining set theoretic specifications extended version 
december 
pp 
appears haveraaen owe dahl editors trends data type specification th workshop specification data types joint th compass workshop selected papers lncs pages 
rs claus el ene kirchner peter mosses 
logics 
december 
pp 
appears gilles heering meinke oller editors higher order algebra logic term rewriting nd international workshop hoa proceedings lncs pages 
rs hypergraph optimization problems objective function linear 
december 
pp 
