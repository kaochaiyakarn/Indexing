robust global localization clustered particle filtering adam javier nicol nchez evan tang williamson global mobile robot localization problem determining robot pose environment sensor data starting position unknown 
family probabilistic algorithms known monte carlo localization mcl currently popular methods solving problem 
mcl algorithms represent robot belief set weighted samples approximate posterior probability robot located bayesian formulation localization problem 
article presents extension mcl algorithm addresses problems localizing highly symmetrical environments situation mcl unable correctly track equally probable poses robot 
problem arises fact sample sets mcl impoverished samples generated posterior likelihood 
approach incorporates idea clusters samples modifies proposal distribution considering probability mass clusters 
experimental results show new extension mcl algorithm successfully localizes symmetric environments ordinary mcl fails 

mobile robotics task navigation requires ability robots identify 
map environment starting pose position orientation relation map task localization tracking task 
unknown initial location task known global localization robot recover pose scratch 
problem localization compensate sensor noise errors odometry readings 
popular approach robot localization kalman filters 
kalman filters computationally efficient require initial localization error bounded inapplicable global localization problems 
additionally kalman filters assume linear gaussian measurement motion dynamics 
overcome limitations class solutions proposed uses particle filters represent copyright american association artificial intelligence www aaai org 
rights reserved 
computer science department stanford university stanford ca cs stanford edu probability robot particular location 
approach commonly known monte carlo localization mcl 
global localization robot starts idea relative map 
reasonably accurate map environment mcl shown effective situations 
mcl suffers important limitation samples generated posterior probability case mcl quickly converge single pose 
undesirable symmetric environments multiple distinct hypotheses tracked extended periods time 
mcl converges single location quickly ignoring possibility robot 
problem leads suboptimal behavior similarly poses 
symmetric environments desirable maintain higher diversity samples despite fact likelihood weighted sampling favor single robot pose 
approach article introduces idea clusters particles modifies proposal distribution take account probability cluster similar poses 
cluster considered hypothesis robot located independently developed mcl algorithm 
update probability cluster done bayesian formulation mcl effectively leading particle filter works levels particle level cluster level 
cluster possesses probability represents belief robot location cluster highest probability determine robot location instant time 
experiments conducted simulated data data obtained robot laser range finder data collected multiple sites 
environments highly symmetric corresponding datasets possess small number distinguishing features allow global localization 
testbeds proposed algorithm 
results show cluster mcl algorithm able successfully determine position robot datasets ordinary mcl fails 

background monte carlo localization bayes filter mcl recursive bayes filter estimates posterior distribution robot poses conditioned sensor data 
central idea bayes filters assumption environment markovian past conditionally independent knowledge current state 
key idea bayes filtering estimate probability density state space conditioned data 
posterior typically called belief denoted bel xt xt zt ut zt ut denotes state time perceptual data laser range finder sonar measurements time ut odometry data information robot motion time time bayes filters estimate belief recursively 
initial belief characterizes initial knowledge system state case global localization corresponds uniform distribution state space initial pose unknown 
derive recursive update equation observe expression transformed bayes rule zt xt ut xt ut bel xt zt ut denominator normalizer constant relative variable write equation bel pz ut stated previously bayes filters markov independence assumption 
assumption simplifies equation expression bel xt zt xt xt ut rightmost term previous equation expanded integrating state time bel xt zt xt px px dx application markov assumption simplified bel xt zt xt xt ut xt xt ut dxt defining zt ut equation expressed bel dx seen equation rightmost term bel xt equation recursive update equation bayes filters 
calculate needs know conditional densities probability px ut xt called motion model density pz called sensor model 
motion model probabilistic generalization robot dynamics 
sensor model depends type sensor considers noise appear sensor readings 
particle approximation state space continuous case mobile robot localization implementing trivial particularly concerned efficiency 
idea mcl represent belief bel set weighted samples distributed bel bel xt xt sample random variable hypothesized state pose 
non negative numerical parameters called importance factors determine importance sample 
set samples define discrete probability function approximates continuous belief bel case global localization initial pose unknown prior uniform space possible poses weight set particles representing estimate px time 
th particle set obtained sampling routine 
draw random particle xt assumption particle distributed px strictly speaking true goes infinity ignore bias finite case 

draw state xt px ut xt 
calculate importance factor wt zt xt particle memorize particle importance factor 
routine repeated times 
final set particles obtained randomly drawing replacement memorized particles probability proportional respective importance factor resulting set particles approximate representation bel xt xt detailed discussion implementation mcl examples see :10.1.1.18.8488

global localization clustered particle filtering analyze particle filters motivate approach 
understand particle filters worthwhile analyze specific choice importance factor 
general importance factor accounts difference target distribution proposal distribution 
target distribution px proposal distribution px ut xt px distribution samples values re sampling step 
importance factor calculated follows target distribution proposal distribution px wt px ut xt px pz xt px ut xt px wt px ut xt px constant easily ignored importance weights normalized re sampling step 
leaves term zt importance factor mcl 
analysis suggests broader range functions may proposal distributions 
particular ft positive function state space 
particle filter algorithm generates samples distribution ft xt xt initially samples drawn new sample sets calculated procedure 
draw random particle xt assumption particle asymptotically distributed ft xt px large 
draw state xt px ut xt case resulting importance factor easily computed target distribution proposal distribution ft xt xt wt ft xt px ut xt px ft xt xt xt ut xt xt wt ft xt xt ut xt xt ft xt wt zt xt clustering particle filter proposed employs modified proposal distribution 
particular particle associated clusters 
function cx denote cluster number 
function assigns particle cluster value value may differ different clusters 
cumulative weight particles cluster cluster 
xt xt xt xt see valid need define equal cx sufficient define bkt xt kt probability time cluster contains actual robot position 
estimate kt values standard bayes filters 
represent probability distribution clusters bkt kt dk finite number samples approximate distribution pz kt pk ut kt pk bkt note robot move point particles change clusters 
particle starts cluster remains cluster 
case kt kt pk ut kt kt kt bkt zt kt kt note cluster composed set points 
pz related pz fact distribution sensor readings cluster sum distributions sensor readings points cluster 
pz pk pz xt xt xt equations write kt kt xt xt xt normalization factor 
having defined maintain bkt condition stated equation normalizing iteration 
shown modified proposal distribution sound 

cluster mcl algorithm mathematical derivation implemented extension mcl called cluster mcl 
cluster mcl tracks multiple hypotheses organized clusters 
task identify probable clusters 
iterating steps ordinary mcl initial uniform distribution large number points clusters develop locations 
simple clustering algorithm separate points different clusters 
match point cluster distance dimensions point source point cluster 
initial probability cluster number points contains 
robust clustering algorithms em algorithm methods rely knowing number clusters priori 
method generates sets clusters arbitrary size 
drawback clusters may created location 
solve problem occasionally checking overlapping clusters combining 
clusters generated select probable ones discard 
cluster independently evolved ordinary mcl points selected particular cluster drawn cluster 
probability cluster tracked multiplying prior probability cluster average likelihood points cluster 
probabilities kept normalized correspond kt values defined 
problem error map initial location may cluster generated correct location 
solve problem kidnapped robot problem advantage independence clusters 
kidnapped robot problem robot moved outside force localized 
clusters interfere add cluster new location affecting existing clusters 
predetermined number steps restart new instance global mcl higher convergence rate purpose finding cluster current sensor data 
global mcl converged location check new location overlaps existing cluster 
initialize small probability tracking 
discard repeat process 
doing remain open consideration completely new location robot current sensor data 
limit number clusters growing bounds remain computationally efficient limit number clusters maximum pre defined value 
additionally keeping number clusters fixed points time prevent cluster gaining high probability competing clusters tend prevent cluster clusters 
adding new cluster probable cluster removed order keep size fixed 
robot estimate location cluster obtained fitting gaussian corresponding particles 

experimental results experimentation cluster mcl algorithm implemented tested simulated real environments 
tests compare performance cluster mcl algorithm ordinary mcl 
cases cluster mcl performed ordinary mcl cases ordinary mcl failed cluster mcl succeeded 
simulated data 
simulated environments generated highly symmetrical maps test 
testing mcl cluster mcl maps observed cluster mcl correctly maintains equally probable clusters ordinary mcl incorrectly prematurely converges single cluster 
display results cluster mcl maps clearly see multiple distinct clusters 
notice cluster mcl maintains posterior belief comprised distinctive poses contrast conventional mcl outcome shown 
clusters just equally probable demonstrated observation constant trading cluster probable 
obtained similar results second map simple rectangle 
global localization ordinary mcl 
global localization cluster mcl 
extra cluster circled randomly drawn cluster cluster mcl robust kidnapped robot problem 
real data 
elucidate workings algorithm practice additional tests performed data collected real world environments 
environment consisted long corridor wean hall carnegie mellon university equally spaced doors distinguishing features providing environment symmetry 
second environment consists room gates building stanford university entrances opposite symmetrically placed file cabinet corner room 
datasets locations collected robot equipped laser range finder 
environments collected datasets 
wean hall collected datasets 
dataset robot different path different features environment observed 
cases mcl able correctly localize cluster mcl correctly identified robot position cases 
comparison mcl cluster mcl particular dataset number wean hall 
multiple executions particular dataset ordinary mcl failed time cluster mcl success rate 
show ordinary mcl converges wrong location cluster mcl correctly identifies robot position 
gates building environment datasets different maps collected 
cases cluster mcl performs ordinary mcl 
datasets mcl cluster mcl correctly identify robot location 
final dataset mcl failed consistently identify correct location robot cluster mcl able localize correct position 
difference wean hall gates datasets level symmetry 
demonstrate benefits cluster mcl chose highly symmetrical environment gates attempted collect datasets possible final segment 
ran mcl cluster mcl times datasets results show mcl accuracy determining correct position cluster mcl accuracy 
results mcl cluster mcl wean hall dataset 
mcl converges incorrect cluster cluster mcl converges correct location 
results mcl cluster mcl gates data 
cluster mcl tracks multiple possible clusters ordinary mcl converges single incorrect cluster 

related related area involves kalman filters represent multiple beliefs 
inherits kalman filters limitations requires noise gaussian 
common solution problem perform low dimension feature extraction ignores information acquired robot sensors 
involving kalman filters surrounds tracking multiple targets feature detection apply concept multiple hypotheses represent belief position robot 
improvements mcl dual mcl mixture mcl attempt improve proposal distribution 
likewise attempt improve proposal distribution way tracking multiple hypotheses 

introduced cluster extension mcl localization 
ordinary mcl fail map symmetrical proposed method retains multiple hypotheses robot located consistent sensor data 
method involves clustering points tracking clusters independently avoid discarding possible locations favor probable cluster current time step 
considering probability multiple clusters longer time able get accurate idea likelihood 
shown method valid additional information take account allows eliminate bias mcl better approximate true posterior 
experiments show cluster mcl performs ordinary mcl real datasets cases mcl fails cluster mcl finds correct location 
shown cluster mcl maintains correct possible locations symmetrical environments mcl converges single cluster 
involve dynamically re clustering points time step order provide true secondorder mcl algorithm 
consider dropping clusters automatically probability drops certain threshold keeping constant number 
algorithm retains probable locations useful robot consider probable clusters planning motion 
desirable robot take action dangerous corresponding cluster likelihood low 
see attempt achieve context particle filtering 

thrun 
probabilistic algorithms robotics 
school computer science carnegie mellon university 
pittsburgh pa 
thrun montemerlo whittaker 
conditional particle filters simultaneous mobile robot localization people tracking 
forthcoming 

schulz burgard fox cremers 
tracking multiple moving targets mobile robot particles filters statistical data association 
proceedings ieee international conference robotics automation seoul korea 

kristensen 
active global localisation mobile robot multiple hypothesis tracking 
workshop reasoning uncertainty robot navigation 
ijcai 
stockholm sweden 

austin 
multiple gaussian hypotheses represent probability distributions mobile robot localization 
proceedings ieee international conference robotics automation san francisco ca 

thrun fox burgard dellaert 
robust monte carlo localization mobile robots 
artificial intelligence magazine 

doucet 
sequential simulation methods bayesian filtering 
technical report cued infeng tr cambridge university department engineering cambridge uk 

liu chen 

sequential monte carlo methods dynamic systems 
journal american statistical association 

borenstein everett feng 
navigating mobile robots systems techniques 
peters wellesley ma 

von 
keeping track position orientation moving indoor systems correlation range finder scans 
proceedings international conference intelligent robots systems 

lenser veloso 
sensor resetting localization poorly modeled mobile robots 
proceedings international conference robotics automation san francisco ca 

thrun fox burgard 
monte carlo localization mixture proposal distribution 
proceedings aaai national conference artificial intelligence austin tx 

thrun langford verma 
particle filters 
proceedings neural information processing systems conference vancouver ca 
