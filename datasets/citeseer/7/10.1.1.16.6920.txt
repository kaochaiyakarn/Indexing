tcp network calculus case large delay bandwidth product 
eitan altman konstantin avrachenkov barakat analytical model calculation network load drop probabilities tcp ip network general topology 
formulate model nonlinear complementarity problem 
transform model equivalent formulations fixed point formulation nonlinear programming formulation 
equivalent formulations provide efficient computational procedures solution model 
furthermore help fixed point formulation able prove existence solution 
model main advantage requiring pre definition bottleneck links 
model takes account receiver congestion window limitation 
approach tcp ip networks drop tail tcp ip networks active queue management 
solve problem network examples show distribution load varies network parameters 
distribution load counter intuitive detected models making prior assumptions locations bottlenecks 
prediction network behavior important task dimensioning network resources 
typical example prediction decide load distributed different links network resources shared different flows 
particular important know links bottlenecks links dimensioned properly service want provide users 
applications internet tcp protocol reacts known way loss packets network 
steady state tcp connection congestion window protocol increased slowly packets lost divided alleviate congestion network considered reason packet losses 
behavior protocol different models proposed predict average throughput tcp connection :10.1.1.1.3504:10.1.1.143.9137
models consider network entity drops packets certain probability 
expressions tcp throughput certain model network packets dropped router certain rate tcp packets give insights network tcp connections behave 
authors fixed point approximation calculate metrics network crossed long life tcp connections implementing active queue management techniques routers 
model requires identification bottleneck nodes 
equation written bottleneck node authors inria sophia antipolis france mails altman avrachenkov barakat sophia inria fr 
author universidad de los andes 
third author currently epfl lausanne switzerland 
results system non linear equations solve 
drop probability average queue length bottleneck throughput different tcp connections calculated 
authors technique stochastic differential equations find behavior network traffic transitory regime 
model requires identification bottleneck nodes calculation metrics 
authors markov chains fixed point approach model routers tcp ip networks 
clear approach easily extended case general network topology 
papers see analyzed tcp congestion control optimization aggregated utility function general network topology 
models similarities tcp especially versions ecn explicit congestion notification differences 
discussions differences instance section 
particular models assume acks arrive continuously time frequently 
common feature models utility optimization approach related explicit simplified dynamic evolution equations transmission rate connections 
approach contrast requires starting point relation average throughput connection average packet loss rate 
obtained results rely exact dynamics leads relation applied variants congestion control mechanisms need linear increase additive decrease behavior 
difference model need ecn version tcp particular model assumes losses occur link saturated 
means rate acknowledgment continuous function global throughput congested element required 
spite differences model utility optimization approach remarkable note approach leads global optimization problem 
investigate problem network performance prediction bottleneck pre identification requirement 
introduce system non linear inequalities guarantees sum tcp throughputs link exceed capacity 
note structure inequalities propose simpler consider networks large products 
add complementarity type conditions ensure automatic localization bottlenecks 
find feasible point satisfies capacity constraint ieee 
inequalities complementarity type conditions fixed point formulation mathematical programming formulation 
fixed point formulation able prove existence solution model 
solution model obtain packet loss probabilities distribution load network location bottlenecks 
note model includes possibility having source rate limitation limitation imposed tcp receiver window feature tcp included mentioned models 
test general approach benchmark network examples able obtain analytical results approximations 
particular analysis examples shows clearly problem bottleneck identification easy task sensitive network resources distribution 
example slightly changing bandwidth link bottleneck move link link happens move immediate links bottlenecks time 
change bottleneck position alters significantly behavior network 
observed cases addition bandwidth parts network deteriorate performance parts 
section tcp network model provide methods solution 
section benchmark network examples show bottleneck position load distribution sensitive network parameters 
results analysis validated ns simulations 
appendix second proof existence result 
ii 
tcp network model analysis consider network formed nodes nodes represent network element congestion occur 
set groups persistent tcp connections 
denote source node group destination node respectively 
connections group follow fixed path corresponds node connections cross leaving source node node connections cross reaching destination node 
define corresponds part path source node node 
course aware fact routing internet dynamic packets tcp connection may follow different routes links network go 
suppose deficiencies frequent routing tables internet routers change long periods time assumptions hold 
shown case internet routes persist days weeks 
introduce objects capacity vector capacity node 
reality capacity associated link router 
router may different output inter faces different capacities 
routers associate node output interface 
network see node part router multiple tcp connections routed output interface multiplexed 
focus routers output interface buffer 
routing engine router decides high rate different arriving packets distributed different output interfaces 
packets queued possibly dropped buffer output interface transmitted link router 
incidence matrix connection goes node equal zero 
vector loss probabilities corresponds probability packet lost node words buffer input link node adjacent router 
suppose packets connections treated manner network nodes 
result randomization drop policy router buffers red result randomization multiplexing flows routers case drop tail routers :10.1.1.128.5092
suppose packets dropped probability node probability independent nodes 
follows probability packet connection type lost network equal sending rate vector sending rate connection type 
sending rate expressed function probability packets connection dropped network :10.1.1.1.3504:10.1.1.143.9137
number connections type 
denote vector th entry sending rate connections type 
shall assumptions links network large delay bandwidth product 
allows neglect queuing delays routers impact tcp throughput 
sending rate continuous function packet loss probability 
shall consider particular known forms relations loss probabilities throughput 
expression called square root formula suited small number timeout events typical large delay bandwidth product networks maximal segment size receiver window size average round trip time connection constant depends version tcp ieee 
implementation characteristics process times :10.1.1.1.3504
example assume inter loss times exponentially distributed delay ack mechanism disabled :10.1.1.1.3504
expression shall refer formula known suitable timeout probabilities negligible number packets acknowledged ack basic timeout duration :10.1.1.143.9137
network analysis complementary formulation clear capacity node exceeded rate packets cross 
leads system inequalities left hand term represents sending rate tcp connections crossing node reduced number packets dropped reaching output interface 
obtained system inequalities unknowns solve order model performance tcp connections distribution load network nodes 
show system inequalities feasible 
proposition system inequalities feasible 
continuum feasible solutions 
proof obvious feasible solution results strict inequality 
point interior continuous consequently continuous feasible region nonzero measure 
continuum feasible solutions correspond real tcp network state 
example solutions gives high drop probabilities nodes poorly utilized 
contrary tcp designed fully utilize available resources network 
observed numerous tcp network simulations carried help network simulator ns link bottleneck substantial amount packet losses input underutilized negligible probability 
states link quite mutually exclusive 
observation leads complementarity type conditions conditions say packets dropped nodes fully utilized 
bottleneck nodes limit performance tcp connections 
nodes dimensioned drop packets impact performance tcp 
shall refer system plus natural condition complementarity problem formulation cp formulation 
solution algorithms provide approaches solve cp 
show complementarity problem formulation equivalent fixed point formulation fp formulation 
conditions existence fixed point solutions known allow establish existence solution initial problem 
fixed point approach suggest iterative solution method 
shall introduce second solution method non linear optimization problem 
fixed point iteration approach 
lemma cp formulation equivalent fixed point formulation pr ieee 
pr projection interval thatis proof pr prove solution cp solution fp 
take complementarity condition inequality strict pr consequently satisfies 
pr true 
case equality holds trivially 
show solution fp solution cp 
condition follows immediately definition projection 
show inequality holds 
suppose contrary follows necessarily equal 
came contradiction holds 
need show complementarity condition holds need show possible simultaneously 
suppose contrary strict inequalities hold 
inequality implies implies contradiction 
complementarity condition holds 
completes proof 
fp formulation able prove existence solution model 
theorem tcp network model solution 
proof lemma know tcp network model equivalent fixed point formulation 
assumption mapping defined continuous compact convex set 
furthermore maps set 
conditions brouwer fixed point theorem satisfied conclude system solution 
fixed point iteration algorithm 
fp formulation provides theoretical means prove existence solution model suggests practical algorithm calculation 
calculate solution pr parameter chosen control stability speed convergence 
mathematical programming formulation 
propose formulation leads efficient computational algorithm solution system 
third formulation application nonlinear mathematical programming complementarity problems 
shall refer nonlinear programming formulation np formulation 
consider nonlinear mathematical program subject note variables play role supplementary variables introduced linear programming 
transform system inequalities system equations 
intuition mathematical program explained follows start feasible point inside region defined inequalities minimizing satisfy complementarity conditions 
minimize continuous function compact set program global minimum 
furthermore value objective function evaluated minimum zero original system solution 
due theorem mathematical program provides solution system 
emphasize main advantage fp formulation np formulation need care locating bottleneck nodes order establish system equations solves problem 
location bottlenecks need check cases 
shall see section benchmark examples localization bottleneck nodes intuitive 
small change network parameters may shift bottleneck node 
ieee 
rough approximation model tcp ip networks high delay bandwidth products packet loss probabilities typically small connections operate large windows 
simplify model 
equations take form example square root formula tcp throughput obtain system equations inequalities denote simplify notations 
sequel shall refer system rough approximation model 
note rough approximation model written elegant form matrix notations introduced section 
inequalities equations rough approximation model written follows arguments favor infinite 
case allow tcp load network possible limitation side receiver 
clearly important model situation 
note assumption violated points take chooses assumption holds tcp rates bounded network resources 
iii 
benchmark examples section benchmark examples 
succeeded prove existence solution model uniqueness open problem 
able show uniqueness benchmark examples 
compare analytical results approximations fixed point iterations numerical solution mathematical program simulations obtained ns 
numerical solutions obtained coincide computer precision 
note method fixed point iterations achieves solution faster comparison 
chosen parameters simulations avoid timeouts 
simple square root formula tcp throughput 
interested case tcp restrictions throughput network capacity 
take analytical calculations numerical calculations 
experiments new reno tcp version set 
routers chosen red queue management policy parameters min thresh packets max thresh packets queue limit max averaging weight 
node case completeness presentation consider single node example 
different type tcp connections cross single node 
case rough approximation model equation packet loss probability clearly equation unique solution note delay bandwidth products large formula gives small packet loss probability 
may expect rough approximation model precise model close solutions equation leads equivalent quadratic equation 
roots root corresponding expression greater 
choose root corresponding 
small values root asymptotics see case large products rough approximation model gives results close ones original model 
particular models unique solutions 
simple node tandem network group tcp connections type successively cross nodes capacities see 
ieee 
fig 

topology example denote probability packet loss node probability packet loss second node sending rate tcp connection 
complementarity conditions take form consider rough approximation model note rough approximation model analysis cases 
consider example case clearly complementarity conditions conclude inequality equality 
leads expression packet loss probability node 
consider case 
inequalities equalities conditions satisfied thatis rough approximation model non unique solution analyze precise model 
particular shall see possess unique solution 
consider case conditions possibilities second node bottleneck nodes bottlenecks node bottleneck case imply inequality equation lead means contradiction possibility realized 
case complementarity conditions inequalities equalities lead contradiction consequently possibility realized 
possibility left 
case imply equation solution inequality satisfied existence uniqueness solution shown previous subsection 
system unique solution particular conclude case node bottleneck 
case difficult analyze 
turns set start increase value initially interval inside solution system equations positive interval second node bottleneck 
analyze phenomenon directly solve system equations interval simpler perturbation approach 
take look solution system form solution equation coefficients calculate 
substitution series equations expanding nonlinear expressions power series collecting terms power obtain system order approximation solution equations gives approximate expression estimate ieee 
packet loss probabilities node tandem network type tcp sessions estimated loss probability node estimated loss probability node loss probability node ns loss probability node ns capacity node mbits fig 

simple node tandem network fig 

topology example fixed point iteration method nonlinear programming obtain packet loss probabilities see 
plot packet loss probabilities obtained ns 
parameters 
note analytical approximations distinguished plots obtained 
node network cross traffic consider node tandem network cross traffic see 
show nodes example bottlenecks 
need show system equations solution 
analyze rough approximation model 
shall show refined approximation model gives practically results rough approximation model 
system equivalent min fig 

uniqueness solution example set equations turn set equations gives single equation unknown 
denote left hand side equation prove graph intersects line point see 
compute derivative observe negative function monotonous interval consequently equation unique solution 
implies system unique solution 
note system solved direct application newton type methods solution nonlinear systems 
consider particular symmetric case able obtain exact analytical expressions 

clearly case 
straightforward calculations get obtain ieee 
packet loss probabilities node network cross traffic estimated loss probability node estimated loss probability node loss probability node ns loss probability node ns mu mu fig 

node network cross traffic symmetric node network cross traffic analyzed study tcp fairness 
particular ratio estimated 
see model agrees previous observations 
fact means tcp fairness max min fairness proportional fairness :10.1.1.143.9137
study non symmetric case 
fix vary value parameters 
plot packet loss probabilities values throughputs respect ratio figures respectively 
note increase value keep unchanged throughput connection deteriorated 
sight fact appear surprising increasing total capacity network 
propose explanation phenomenon increase capacity node throughput type connections increases creates additional load node leads deterioration performance connections type 
plotted graphs precise model turns set network parameters consideration results rough approximation model results precise model practically indistinguishable 
figures show graphs ns simulations validate modeling results 
node tandem network consider node tandem network see 
set values parameters throughput packets node network cross traffic estimated type connection estimated type connection estimated type connection type connection ns type connection ns type connection ns mu mu fig 

node network cross traffic fig 

topology example vary capacity range mbits mbits 
figures plot packet loss probabilities sending rates respectively 
probabilities calculated help fixed point iteration method 
plots show node bottleneck call phase node bottleneck phase increase value nodes bottlenecks phase large values nodes left bottlenecks phase 
sequence changes network quite intuitive practically impossible relay intuition predict boundaries phases 
fact highlights utility formal approaches fp np formulations 
non monotonous behavior sending rate interesting fact 
noticed behavior previous example increase capacity part network lead decrease throughputs tcp connections 
note previous examples node network node tandem network cross traffic limiting cases general topology construct approximations ieee 
packet loss probabilities throughput packets node tandem network estimated loss probability node estimated loss probability node estimated loss probability node loss probability node ns loss probability node ns loss probability node ns capacity node mbits fig 

node tandem network node tandem network estimated type connection estimated type connection estimated type connection type connection ns type connection ns type connection ns capacity node mbits fig 

node tandem network iv 
approaches exist modeling analyzing tcp ip networks 
hand approach focuses single tcp connection calculates throughput function characteristics packet loss process 
hand approaches consider network try predict throughput connections simultaneously account mutual interaction 
belongs second research direction 
proposed model network equivalent formulations cp fp np 
particular fp np formulations lead efficient computational procedures fp formulation helps prove existence solution 
model require pre identification bottleneck links include possibility source rate limitation 
simple benchmark network examples demonstrate localization bottlenecks intuitive tcp throughput monotonous function total capacity network 
appendix proof existence give proof existence solution nash theorem uses technique proposed 
unfortunately possible approach case simple relation throughput packet loss probability path square root formula 
chose proofs problems obtaining existence fixed point solutions encountered settings proof techniques networking contexts framework 
theorem relation throughput packet loss probability path square root formula 
system solution 
proof define functions introduce notation want study behavior functions respect probability having probabilities fixed 
show functions quasi concave level sets convex 
note function constant minus sum functions form constants depend note function piece wise differentiable 
particular see function decreasing interval 
sum decreasing functions decreasing ieee 
function increasing 
consider cases case function decreasing interval quasi concave 
note case function achieves maximum case function necessarily crosses zero interval 
implies case function unimodal 
case maximal value equal zero 
functions quasi concave fixed conclude nash theorem exists set arg proof quasi concavity immediately follows cases set solution 
altman avrachenkov barakat stochastic model tcp ip stationary random losses acm sigcomm stockholm pp august :10.1.1.1.3504
impact fairness internet performance acm sigmetrics pp june 
bu towsley fixed point approximation tcp behaviour aqm network acm sigmetrics june 
meo new approach model stationary behavior tcp connections ieee infocom march 

pang stone linear complementarity problem academic press boston 
floyd jacobson random early detection gateways congestion avoidance ieee acm transactions networking vol :10.1.1.128.5092
pp 
aug 
key distributed control resource pricing acm sigcomm tutorial august 
fixed point theory dordrecht holland reidel 
jacobson congestion avoidance control acm sigcomm august 
kelly tan rate control communication networks shadow prices proportional fairness stability oper 
res 
soc pp 
srikant congestion control schemes utility functions random losses ecn marks ieee infocom march 
low lapsley optimization flow control basic algorithm convergence ieee acm trans 
networking december 
roberts bandwidth sharing admission control elastic traffic telecommunication systems pp :10.1.1.143.9137
mathis semke mahdavi ott macroscopic behaviour tcp congestion avoidance algorithm acm computer communication review july 

gong towsley fluid analysis network aqm routers supporting tcp flows application red acm sigcomm august 
mo fair window congestion control ieee acm trans 
networking october 
ns network simulator ver available www isi edu nsnam ns ortega iterative solution nonlinear equations variables academic press 
ott mathis stationary behavior ideal tcp congestion avoidance ftp ftp telcordia com pub ps padhye firoiu towsley kurose modeling tcp throughput simple model empirical validation acm sigcomm september :10.1.1.143.9137
paxson routing behavior internet acm sig comm aug 

le boudec global fairness additive increase multiplicative decrease heterogeneous roundtrip times ieee infocom march 
ieee 
