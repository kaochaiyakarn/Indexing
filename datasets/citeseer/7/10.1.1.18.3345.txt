informational tierney lawrence berkeley national laboratory university illinois urbana champaign gunter lawrence berkeley national laboratory smith nasa ames research center university california santa barbara taylor northwestern university wolski university california santa barbara ggf performance working group status memo grid monitoring architecture march revised january memo provides information grid community regarding grid monitoring architecture gma developed global grid forum performance working group 
goal architecture provide minimal specification support required functionality allow interoperability 
distribution unlimited 
copyright notice copyright global grid forum 
rights reserved 
large distributed systems computational data grids require substantial amount monitoring data collected various tasks fault detection performance analysis performance tuning performance prediction scheduling 
tools currently available developed collecting forwarding data 
goal describe major components grid monitoring architecture essential interactions 
adopting standard terminology describing minimal specification support required functionality hope encourage development interoperable highquality performance tools grid 
motivate grid monitoring architecture gma design guide implementation characteristics critical proper functioning performance monitoring system grid 
lbl gov informational tierney lawrence berkeley national laboratory university illinois urbana champaign gunter lawrence berkeley national laboratory smith nasa ames research center university california santa barbara taylor northwestern university wolski university california santa barbara ggf performance working group contents march revised january 


design considerations 
architecture terminology directory service interactions producer consumer interactions 
components interfaces directory service producer consumer intermediaries sources event data 
sample 
implementation issues 
security considerations 
glossary 
author information 

intellectual property statement 
full copyright notice 
lbl gov january 
performance monitoring distributed components critical enabling high performance distributed computing 
monitoring data needed determine source performance problems tune system application 
fault detection recovery mechanisms need monitoring data determine server decide restart server redirect service requests 
performance prediction service takes monitoring data input prediction model turn scheduler determine resources assign job 
groups developing grid monitoring systems :10.1.1.48.1521
groups global grid forum community recognize need interoperate 
facilitate interoperation developed architecture monitoring components specifically addresses characteristics grid platforms 
grid monitoring system differentiated general monitoring system scalable wide area networks encompass large number heterogeneous resources 
monitoring system naming security mechanisms integrated grid middleware 
document describe core grid monitoring architecture gma components models high level communication components different types 
document address component creation management coordination control crucial production level grid monitoring system 
hope issues covered documents 

design considerations potential thousands resources geographically distant sites tens simultaneous grid users critical data collection distribution mechanisms scale 
general purpose information management system shelf database directory service efficiently meet requirement characteristics performance information fundamentally different characteristics data types systems designed handle 
general characteristics distinguish performance monitoring information forms system program produced data 
performance information fixed short lifetime utility 
monitoring data goes stale quickly making rapid read access important obviating need long term storage 
notable exception data gets archived accounting analysis 
updates frequent 
static forms metadata dynamic performance information typically updated frequently read 
extant information base technologies optimized query update potentially unsuitable dynamic information storage 
performance information stochastic 
frequently impossible characterize performance resource application component single value 
dynamic performance information may carry quality information metrics quantifying accuracy distribution lifetime forth may need calculated raw data 
systems collect distribute performance information satisfy certain requirements low latency 
previously stated performance data typically relevant short period time 
transmitted measured needed low latency 
lbl gov january high data rate 
performance data generated high data rates 
performance monitoring system able handle operating conditions 
minimal measurement overhead 
measurements taken measurement intrusive 
way monitoring facilities limit intrusiveness acceptable fraction available resources 
mechanism managing performance monitors provided performance measurements may simply measure load introduced performance monitors 
secure 
typical user actions include queries directory service concerning event data availability subscriptions event data requests instantiate new event monitors adjust collection parameters existing monitors 
data gathered system may access restrictions placed owners monitors 
monitoring system able ensure integrity preserve access control policies imposed ultimate owners data 
scalable 
potentially thousands resources services applications monitor thousands potential entities receive information important performance monitoring system provide scalable measurement transmission information security 
order meet requirements monitoring system precise local control overhead latency associated gathering delivering data 
believe data discovery needs separated data transfer level control achieved 
grid amount available performance information large searches space unpredictable latencies 
potentially large latencies impact request performance information 
searches locate appropriate information source sink operations predictable latency transfer actual performance information 
way individual producer consumer pairs impedance matching negotiated requirements amount data flowing system controlled precise distributed fashion current local load considerations 
order separate data discovery data transfer metadata abstracted placed universally accessible location called directory service information bootstrap communication data source sink 
scalability results restricting organizing metadata directory service may distributed rate communication distributed nodes increases slowly relative total amount data transferred 
model differs event channel model corba event service combines mechanism finding data transferred actual transfer single searchable channel information 
contrast design performance event data majority communication traffic travels directly producers data consumers data 

architecture terminology grid monitoring architecture consists types components shown lbl gov consumer events producer event publication information event publication information directory service grid monitoring architecture components directory service supports information publication discovery producer performance data available performance event source january consumer receives performance data performance event sink gma designed handle performance data transmitted time stamped performance events 
event typed collection data specific structure defined event schema 
performance event data sent directly producer consumer 
directory service interactions producers consumers accept control messages publish existence directory service entries 
directory service registry locate producers consumers 
note term directory service meant imply hierarchical service ldap lookup service 
directory service serves bootstrap communication consumers producers entries populated information understood wire protocols security mechanisms 
consumers directory service discover producers interest producers directory service discover consumers interest 
producer consumer may initiate interaction discovered peer 
case communication control messages transfer performance data occur directly consumer producer pair involvement directory service 
producer consumer interactions gma architecture supports interactions transferring data producers consumers publish subscribe query response notification 
gma publish subscribe interaction stages 
stage initiator interaction may producer consumer contacts server initiator consumer server producer vice versa indicating interest set events 
mechanism specifying events interest addressed document 
additional parameters needed control data transfer negotiated stage 
may include send performance events encode encrypt performance events send performance events buffer sizes timeouts 
initial contact communication stage done exchange control messages initiator server 
point state producer consumer called subscription 
stage interaction producer may initiator server interaction sends performance events consumer 
final stage producer consumer terminates subscription possibly additional control messages 
gma query response interaction initiator consumer 
interaction consists stages 
stage sets transfer similar stage publish subscribe 
performance event transfer followed time terminating unsubscribe producer transfers performance events consumer single response 
interaction maps particularly request reply protocols 
gma notification interaction stage interaction initiator producer 
type producer consumer interaction producer transfers performance events consumer single notification 
protocols control event data channels specified gma 
wire protocol communicate control information producer consumer wire protocol transfer performance events data may completely different 
system implementers may support wire protocols example soap ldap xml choosing best suited requirements 
lbl gov january delivery guarantees specified gma 
implementations may support exactly delivery performance events 

components interfaces section define functionality interfaces directory service producer consumer components 
introduce notion compound components discuss potential sources measurement data 
directory service order describe discover performance data grid distributed directory service publishing searching available 
gma directory service stores information producers consumers accept requests 
producers consumers publish existence directory service typically publish information regarding types events produce consume meta information accepted protocols security mechanisms forth described section 
publication information registration allows producers consumers discover types event data currently available accepted characteristics data ways gain access data 
directory service responsible storage event data contains publication information event instances provided accepted 
event schema may optionally available directory service 
functions supported directory service 

add add entry directory 

update change entry directory 

remove remove entry directory 

search perform search producer consumer selection criteria 
client indicate single match multiple matches available returned 
optional extension allow client get multiple matches time get query subsequent searches 
producer producer component uses producer interface send events consumer 
component may multiple producer interfaces acting independently sending events 
term producer interchangeably refer single producer interface component contains producer interface 
core interaction functions may supported producer listed 

maintain registration add update remove directory service entry entries describing events producer send consumer 
corresponds directory service add update remove 

accept query accept query request consumer 
events sent consumer response query 
corresponds consumer initiate query 

accept subscribe accept subscribe request consumer 
details subscription returned reply 
subscription successfully established producer sends events consumer subscription terminated 
corresponds consumer initiate subscribe 
lbl gov january 
accept unsubscribe accept unsubscribe request consumer 
succeeds corresponding subscription closed events sent subscription 
corresponds consumer initiate unsubscribe 

locate consumer search directory service consumer 
corresponds directory service search 

notify send single set event consumer 
corresponds consumer accept notification 

initiate subscribe request consumer send events 
details subscription returned reply 
subscription successfully established producer sends events consumer subscription terminated 
corresponds consumer accept subscribe 

initiate unsubscribe terminate subscription consumer 
succeeds subscription closed events sent subscription 
corresponds consumer accept unsubscribe 
producers provide access control event data allowing different access different classes users 
grids typically multiple organizations controlling resources monitored may different access policies firewalls possibly different frequencies measurement different performance details consumers inside outside organization running resource 
example sites may allow internal access realtime event streams providing summary data site 
producers enforce policy decisions 
addition core gma producer functionality described producers provide services 
examples include event filtering caching intermediate processing raw data requested consumer 
example scheduling consumer request prediction model applied cpu load measurement history particular compute resource notified predicted load falls specified threshold indicating resource ready accept new tasks 
smart producer apply model supplied consumer subscription request send events resulting load predictions threshold value 
information services supported producer published directory service event information 
consumer consumer component uses consumer interface receive event data producer 
component may multiple consumer interfaces acting independently receiving events 
term consumer interchangeably refer single consumer interface component contains consumer interface 
core interaction functions may supported consumer listed 

locate producer search directory service producer 
corresponds directory service search 

initiate query request events producer delivered part reply 
corresponds producer accept query 

initiate subscribe request establishment subscription producer 
details subscription returned reply 
subscription successfully established producer sends events subscription terminated 
corresponds producer accept subscribe 
lbl gov january 
initiate unsubscribe terminate subscription 
succeeds corresponding subscription closed events accepted subscription 
corresponds producer accept unsubscribe 

maintain registration add update remove directory service entry entries describing events consumer accept producer 
corresponds directory service add update remove 

accept notification accept single set event producer 
corresponds producer notify 

accept subscribe accept subscribe request producer 
details subscription returned reply 
subscription successfully established producer sends events subscription terminated 
corresponds producer initiate subscribe 

accept unsubscribe accept unsubscribe request producer 
succeeds subscription closed events accepted subscription 
corresponds producer initiate unsubscribe 

locate event schema search request schema repository event type 
schema repository may gma directory service 
types consumers possible 
listed illustrative examples 
aggregate store event data long term storage retrieval analysis 
may act gma producer data retrieved storage 
real time monitor collect monitoring data real time online analysis tools 
example tool graphs cpu load information real time 
overview monitor collect events sources combined information decision basis data producer 
example trigger call system administrator pager am primary backup servers 
intermediaries consequence separation data discovery data transfer protocols perform publish subscribe query response notification interactions described section construct intermediaries forward broadcast filter cache performance events 
lbl gov event data consumer producer interface monitoring service building block advanced services compound producer consumer consumer interface single component implements producer consumer interfaces 
event data example consumer interface collect event data producers producer producer data generate new derived event data type available consumers producer interface compound producer consumer shown 
grid services may fact consumers producers monitoring events 
example event archives implement producer consumer interfaces 
january intermediate components lessen load producers event data interest consumers subsequent reductions network traffic intermediaries placed near data consumers 
sources event data data construct events gathered sources 
hardware software sensors sample performance metrics real time constitute type data source 
database query interface provide historical data 
entire monitoring systems network weather service serve source events 
additionally application timings tools autopilot netlogger provide events related specific application :10.1.1.48.1521
producer may associated single source sources host sources subnet arbitrary group sources 
shows possible configuration architecture allows performance system implementers choose configuration best suits scalability reliability needs 
gma specifies relationship interface measurement data sources gma producer 

sample consumer events producer sensor application lbl gov search register monitoring system sources event data directory service database sample gma shown 
event data collected hosts network routers 
host network sensors sources measurement data managed producer 
producer registers availability host network events directory service 
real time monitoring consumer subscribes available event data real time visualization performance analysis 
producer capable computing summaries network throughput latency data parameters provided network aware client 
client uses summarized network information optimally set tcp buffer size 
producer event data sent archive 
january client client host host sensor cpu memory tcp buffer size consumer real time monitor consumer 
implementation issues events search lbl gov router router search register network snmp sensor producer directory service sample gma usage events register host sensor cpu memory server host consumer event archive purpose monitoring system reliably deliver timely accurate information perturbing system 
believe architecture described implemented acceptable levels performance scalability security 
unsatisfactory implementations possible 
section implementation characteristics emerged development experiences important success monitoring dynamic performance analysis systems 
characteristics guide developers producing intending produce implementations gma 
recommend strategies considered incorporated implementations intended serve proof concept investigations 
system components fault tolerant 
large scale distributed systems failures occur 
example computer systems monitoring servers go monitoring servers restarted automatically check pointed internal data 
directory servers go data servers replicated servers 
networks go monitoring components automatically reconnect synchronize 
components monitoring system able tolerate recover failures building fault tolerance monitoring system start save effort 
data management system adapt changing performance conditions 
dynamic performance data determine shared grid resources performing fault diagnosis current grid load admit particular application resource allocation scheduling 
assess dynamic performance fluctuation data management system rendered inaccessible fluctuations seeks capture 
data january management system data gathers control execution resources face dynamically changing conditions 
system components scale 
monitoring system able operate ubiquitously respect resources application components monitored 
facilitate scaling able add additional producers additional directory servers needed reducing load necessary 
case consumers requesting event data producer reduces amount amount network traffic host monitored 
important consideration hierarchical control mechanisms coordinating resource load generated producers pool producers managed flat collection 
distributed caching implemented special purpose consumer producer nodes programmed store forward data way relieving congestion contention particular data 
monitoring data managed distributed fashion 
having single centralized repository dynamic data short lifespan causes distinct performance problems 
centralized repository information control represents single point failure entire system 
monitoring system detect network failure network failure isolates centralized controller separate system components unable fulfill role 
components able function temporarily disconnected unreachable network host failure 
second problem centralized data management forms performance bottleneck 
dynamic data writes outnumber reads measurements taken seconds minutes 
experience shown centralized data repository simply handle load generated actively monitored resources grid scales 
system components control intrusiveness resources monitor 
different resources experience varying amounts sensitivity load introduced monitoring 
megabyte disk footprint may insignificant terabyte storage system extremely significant implemented palm top ram disk 
general performance monitors system components tunable cpu communication memory storage requirements 
efficiency ease tradeoffs data formats carefully considered 
choosing data format tradeoffs ease compactness 
easiest portable format may ascii text including event item descriptions event item data transmission compact 
compressed binary representations fall opposite ease compactness spectrum 
approach transmitting item data values data structure obtained separately interpret data 
implementers carefully consider requirements monitoring system selecting data formats 
security standards useful 
public key identity certificates recognized solution cross realm identification users 
certificate secure protocol ssl secure socket layer server side assured connection legitimate user named certificate 
user consumer access points mentioned directory lookup requests producer require identity certificate passed secure protocol ssl 
wrapper directory server producer call authorization interface user identity name resource user wants access 
authorization interface return list allowed actions simply deny access user unauthorized 
communication producer sensors may need controlled malicious user communicate directly monitoring process 

security considerations lbl gov january grid monitoring system requires security mechanisms ensure integrity privacy monitoring system event data 
part specifying mechanisms scope document high level discussion security considerations standards may apply 

author information brian tierney lawrence berkeley national laboratory lbl gov ph fx martin university california santa barbara cs ucsb edu glossary ruth university illinois urbana champaign uiuc edu valerie taylor northwestern university taylor ece nwu edu lbl gov dan gunter lawrence berkeley national laboratory lbl gov rich wolski university california santa barbara rich cs ucsb edu warren smith nasa ames research center arc nasa gov gma grid monitoring architecture defined global grid forum performance working group 
acknowledgments input people went document including attendees various grid forum meetings 
dan gunter brian tierney supported dept energy office science office computational technology research mathematical information computational sciences division contract de ac sf university california 
ruth supported part department energy contract doe eng national science foundation opinions findings recommendations expressed material author necessarily reflect views funding agencies 
intellectual property statement ggf takes position regarding validity scope intellectual property rights claimed pertain implementation technology described document extent license rights available represent effort identify rights 
copies claims rights available publication assurances licenses available result attempt obtain general license permission proprietary rights implementers users specification obtained ggf secretariat 
ggf invites interested party bring attention copyrights patents patent applications proprietary rights may cover technology may required practice recommendation 
please address information ggf executive director 
january full copyright notice copyright global grid forum rights reserved 
document translations may copied furnished derivative works comment explain assist implementation may prepared copied published distributed part restriction kind provided copyright notice paragraph included copies derivative works 
document may modified way removing copyright notice ggf organizations needed purpose developing grid recommendations case procedures copyrights defined ggf document process followed required translate languages english 
limited permissions granted perpetual revoked ggf successors assigns 
document information contained provided basis global grid forum warranties express implied including limited warranty information rights implied warranties fitness particular purpose 
corba 
systems management event management service 
open document number 
www org 
ford solo internet public key infrastructure ietf rfc 
jan vetter reed :10.1.1.48.1521
autopilot adaptive control distributed applications 
proceedings th ieee symposium high performance distributed computing chicago july 
smith 
framework control observation distributed environments 
nasa advanced supercomputing division nasa ames research center moffett field ca 
nas june 
tierney johnston crowley hoo brooks gunter 
netlogger methodology high performance distributed systems performance analysis 
proceedings ieee high performance distributed computing conference july 
www lbl gov netlogger 
tierney crowley gunter holding lee thompson 
monitoring sensor management system grid environments 
proceedings ieee high performance distributed computing conference hpdc august 
smith george yan 
infrastructure monitoring management computational grids 
proceedings conference languages compilers runtime systems 
wahl howes 
lightweight directory access protocol 
available ftp ftp isi edu notes rfc txt 
wolski spring hayes 
network weather service distributed resource performance forecasting service metacomputing 
generation computing systems 
nws npaci edu 
lbl gov 
