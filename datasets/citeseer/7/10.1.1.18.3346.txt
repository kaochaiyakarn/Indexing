smart automated support ontology merging alignment fridman noy mark musen stanford medical informatics stanford university stanford ca noy musen smi stanford edu researchers ontology design field develop content growing number ontologies need sharing reusing body knowledge increasingly critical 
aligning merging existing ontologies usually handled manually constitutes large tedious portion sharing process 
developed smart algorithm provides semi automatic approach ontology merging alignment 
smart assists ontology developer performing certain tasks automatically guiding developer tasks intervention required 
smart determines possible inconsistencies state ontology may result user actions suggests ways remedy inconsistencies 
define set basic operations performed merging alignment ontologies determine effects invocation operations process 
smart extremely general knowledge model applied various platforms 

merging versus alignment years researchers developed ontologies 
different groups researchers bring disparate source ontologies 
approaches possible merging ontologies create single coherent ontology aligning ontologies establishing links allowing aligned ontologies reuse information 
illustration possible processes establish correspondence different ontologies consider ontologies natural languages embody 
researcher trying find common ground languages may perform tasks 
may create mapping languages say machine translation system 
differences ontologies underlying languages allow simple correspondence mapping account differences 
alternatively language international language constructed words different european languages created merging languages underlying ontologies combined create single language 
aligning languages ontologies third task 
consider learn new domain language extensive vocabulary language medicine 
new ontology vocabulary medical domain needs linked minds knowledge existing ontology world 
creation links alignment 
consider merging alignment describe 
simplicity discussion assume ontologies merged aligned time 
illustrates difference ontology merging alignment 
merging single ontology merged version original ontologies created 
original ontologies cover similar overlapping domains 
example unified medical language system humphreys lindberg umls large merged ontology reconciles differences terminology various machine readable biomedical information sources 
example project merging top levels general common sense knowledge ontologies sensus knight luk cyc lenat create single top level ontology world knowledge hovy 
alignment original ontologies persist links established 
alignment usually performed ontologies cover domains complementary 
example part high performance knowledge base hpkb program sponsored defense advanced research projects agency darpa cohen hpkb structured central ontology cyc ontology lenat 
teams researchers develop ontologies domain military tactics cover types military units weapons tasks units perform constraints units tasks 
developers align domain specific ontologies cyc establishing links cyc upper middle level ontologies 
domain specific ontologies part cyc knowledge base separate ontologies concepts cyc top level distinctions 
merge 
merging versus alignment 
original ontologies dotted lines represent transition original ontology undergoes gray area result 
result merging single ontology alignment persistence ontologies links solid lines established 
ontology designers performed complicated process ontology merging alignment hand tools automate process provide specialized interface 
unrealistic hope merging alignment semantic level performed completely automatically 
possible hybrid approach system performs selected operations automatically suggests points alignment merging 
easiest way automate process partially look classes names suggest user merges classes 
developed algorithm ontology merging alignment smart goes simple class name matches looks linguistically similar class names studies structure relations vicinity merged concepts matches slot names slot value types 
participation ontology alignment effort part hpkb project mentioned earlier strong motivation developing semi automated specialized tools ontology merging alignment 
experience aligning ontologies tools extremely tedious time consuming process 
time noticed steps knowledge representation systems require ontology included links established 
align process automated points tool reasonable suggestions conflicts constraint violations tool check 
undertook research defined set formalism independent basic operations performed ontology merging alignment 
naturally set overlaps set operations performed ontology development 
sets set operations design single ontology set merging alignment operations properly subsumes 
currently implementing smart algorithm semi automatic ontology merging alignment 
smart starts automatically creating list initial suggestions class name similarity 
operation invoked user classes slots vicinity operation smart performs set actions automatically suggestions guide user checks conflicts suggests ways resolve conflicts 
currently implementing specialized tool perform ontology merging alignment smart algorithm 
tool extension prot environment described section 
knowledge model underlying smart described section compatible open knowledge base connectivity okbc protocol chaudhri :10.1.1.123.3174
assumptions underlying knowledge model detailed results applicable wide range systems 
organized follows 
start describing prot knowledge modeling environment section presenting example interaction smart smart actions interaction section 
describe approach ontology merging alignment formally section 
section gives overview set basic operations merging alignment defined discusses operations 
discuss possible extensions merging alignment framework section 
section outline special features smart types conflicts smart identifies explanations gives user strategies uses prevent user loosing focus 
section contains overview related 
section concludes 

prot knowledge modeling environment designed smart part prot knowledge modeling environment developed laboratory musen 
section describe prot tool ontology design prot knowledge model underlies smart 
give example representing ontology prot 
graphical interactive ontology design knowledge acquisition environment 
aimed making easier knowledge engineers domain experts perform knowledge management tasks 
prot graphical user interface premise easy possible significant loss expressiveness 
ontology developer quickly access relevant information requires prot prot latest implementation prot approach 
information possible direct manipulation navigating managing knowledge base 
tree controls allow quick simple navigation class hierarchy 
prot uses forms interface filling slot values 
knowledge model smart okbc compatible knowledge model underlying prot grosso 

prot knowledge model briefly describe prot knowledge model concentrating elements important understanding discussion smart 
complete specification okbc model available chaudhri detailed description okbc implementation prot grosso :10.1.1.123.3174:10.1.1.123.3174
knowledge model underlying prot frame minsky designed compatible okbc chaudhri :10.1.1.123.3174
top level classes slots facets instances classes collections objects similar properties 
classes arranged subclass superclass hierarchy multiple inheritance 
class template slots attached discuss distinction section 
slots class frames 
slot exist attached particular class 
slots single valued multivalued 
slot associated name domain value type possibly set facets 
facets frames impose additional constraints attachment slot frame class frame 
facets constrain cardinality value type slot contain documentation slot 
instances individual members classes 
concrete opposed class prot instances 
attaching slots classes slots class objects prot primarily describing attributes classes instances 
attaching slot class establishes connection 
instance knowledge base slot age see 
type age slot integer age single valued slot attached class subclass person person domain age slot 
maximum value slot 
age slot attached specific subclasses person acquire additional constraints 
constraints values slot take attached class determined facets 
example maximum value age slot changes attachments 
maximum value facet specifies age slot attached class slot maximum value limited 
additional restrictions attachment student class maximum value student age remains 

attaching slots classes 
facets impose additional restrictions slot values attachment 
knowledge model just described extremely general existing knowledge representation systems knowledge models compatible 
approach merging alignment developed applied variety knowledge representation systems 
adopting okbc compatible knowledge model possible implement smart okbc client accessing knowledge base performed server side 
translated set basic merging alignment operations section okbc okbc scripting language 
operations set simple combinations operations okbc specification chaudhri :10.1.1.123.3174
operations require extensive scripts 
okbc front included complex operations okbc provide better support merging alignment 

example ontology prot example prot ontology ontology airline reservation system 
section illustrate merging side smart works 
example ontology sources merged section briefly describe second source ontology smart merging illustration 
airline reservation system ontology henceforth airline ontology formalizes concepts describing airline reservations 
designed illustration purposes attempt represent fully concepts domain 
see prot presents airline ontology 
partially expanded class hierarchy tree left hand side slots selected class reservation record right hand side 

airline reservation system ontology prot 
left hand side contains partial class hierarchy ontology airline reservation system 
right hand side shows slots values constraints reservation record class 
selected reservation record class subclass record subclasses award travel frequent program members reservation regular reservations 
slots role concrete constraints currently filled documentation 
list template slots attached class follows 
reservation record class inherits slot record locator superclass 
slots type itinerary traveler attached directly 
turn constraints slot values reservation record class 
note constraints constraints attachment corresponding slots reservation record class necessarily constraints slot frames 
slot traveler value type instance value slot instance class ontology simple value number string symbol 
values traveler slot instances individual class allowed class template slot 
itinerary class allowed class template slot itinerary 
similarly slot collection class value value type class 
case facet specifying allowed parents values slot 
slot customer type type class value slot subclass class customer instance customer 
refer allowed classes instance slots allowed parents class slots classes referenced slot 
prot uses color distinguish inherited slots slots attached directly current class slots values current class 
airline ontology source ontologies section examples rest illustrate ideas smart 
merge airline ontology ontology car rental reservation shown henceforth car rental ontology 
car rental ontology describes car rental reservations way similar airline reservations ontology 
create single ontology knows air travel car rental merge ontologies 
section demonstrates smart goes implementing merging 

smart 
car rental reservation ontology prot 
section give example merging opposed alignment side smart 
simplicity assume source ontologies need merged 
show smart merges airline car rental ontologies section 
respectively show ontologies 
smart creates target merged ontology scratch target ontology different source ontologies 
smart starts comparing class names ontologies identifying classes identical names 
creates initial list suggestions user proposing user merges pairs identically named classes 
operating assumption information lost smart proposes user simply copies merged ontology shallow copy operation classes unique names 
plan incorporate sophisticated comparison class names includes comparing parts complex names finding synonyms connection wordnet miller 
original list suggestions appears smart window 
time take look smart window discuss various logical elements 
top pane elements panel user create new operations ones suggested smart list current suggestions smart todo list 
explanation smart suggested currently selected item todo list 
bottom pane window contains list conflicts smart identified solutions conflicts suggested 
state smart shown reached operation executed shallow copy cls reservation record air ont result reservation record class copied airline ontology merged ontology 
operation smart rearranges todo list move list items involve classes referenced reservation record top 
example class record superclass reservation record airline ontology classes award travel reservation subclasses 
go back see reservation record class referred classes itinerary customer individual allowed classes allowed 
smart 
smart window refer airline ontology air ont car rental ontology car ont 
parents values reservation record slots 
smart moved operations involving referenced classes top todo list 
smart suggestions refer ontology elements closest user latest focus highest priority 
list current conflicts empty 
conflicts smart identified dangling reservation record instance class type slots itinerary customer individual 
smart allowed creation slots corresponding temporarily leaving knowledge base inconsistent state 
listed conflicts suggested possible solutions user remedy conflicts authorize smart 
example resolve dangling itinerary class user may copy class airline ontology shallow copy cls itinerary air ont possible solutions implemented include changing value type itinerary slot changing list allowed classes slot 
user selects operation shallow copy cls itinerary air ont todo list solution corresponding conflict conflict resolved smart remove list naturally new dangling conflicts may arise 
smart keeps track original relations frames source ontologies possible restores relations frames brought resulting merged ontology 
example record class airline ontology merged reservation class car rental ontology reservation record class subclass merged class relation prototypes merged concept original ontology 

smart architecture 
currently user choose single operation performed 
possible select collection operations example copy subtree class hierarchy source target ontology 
smart architecture depicts general architecture diagram merging module smart 
knowledge base side ontologies sources airline car rental ontologies example resulting merged ontology 
source ontologies remain intact process changes performed merged ontology 
smart keeps lists suggestions todo list conflicts solutions conflicts list data structures necessary keeping track concepts prototypes source ontologies 
user selects operations gets feedback smart form updated todo conflicts list explanations elements lists possible solutions conflicts 
smart turn implements operations making changes target knowledge base making new suggestions determining conflicts information knowledge bases 

formal description smart algorithm having example smart tool works turn general description approach ontology merging alignment 
describe algorithm merging alignment smart data structures maintain lists suggestions conflicts 
algorithm serve general framework implementing ontology merging alignment okbc compatible knowledge modeling environment 

description smart algorithm algorithm description word parentheses algorithm step indicates user executes step user smart perform step automatically smart 

user setup load ontologies 
smart generate initial list suggestions scan class names ontologies find linguistically similar names 
linguistic similarity determined different ways synonymy shared substrings common prefixes common suffixes 
create initial list suggestions user 
process merge suggest pair classes identical names merge classes remove classes pair 
pair classes linguistically similar names establish link lower degree confidence set 
implemented comparison linguistic similarity names 
process align ontology say identified user general suggestions assumption classes general ontology need linked subclass superclass relations classes general ontology 
class top level suggestions high confidence class name merge classes 
find parent class 
user select perform operation operation user selects current list suggestions 
set possible basic operations defined section 

smart perform automatic updates create new suggestions concepts involved operation just performed step consider linguistic similarity class slot names structure ontology vicinity 
similarity structural patterns trigger actions categories immediately execute additional changes determined automatically system 
add list conflicts described section set new conflicts state ontology resulting user action suggestions remedy conflict 
add list suggestions described section set suggestions user actions performed 

repeat steps ontologies fully merged aligned 
creation initial list suggestions step syntactic smart decisions names frames positions frames ontology frames participation specific relations 
step includes semantic analysis smart considers types relations involving current concepts arguments relations 
section give examples specific semantic relations smart considers step 
describe structure content lists contain current sets suggestions 
smart central abilities determine new actions suggestions operation just performed 
basic merging alignment operation define set automatic actions operation may trigger conflicts may produce new points merging may create 

data structures referred times basic data structures smart maintains merging alignment process uses guide user process list conflicts resulted user actions list suggestions action 
call structures conflicts list todo list respectively 
items conflicts list represent inconsistencies current state knowledge base resolved knowledge base logically consistent state 
example merge slots conflicting facet values smart puts operation removing facets conflict conflicts list 
closing knowledge base user perform operation ask smart decide facet remove 
alternatively slots merged concept similar identical names value type merging slots operation probably performed 
execution operation required internal consistency knowledge base 
smart places operation todo list 
todo list item todo list single operation disjunction operations 
case underlying semantics operations disjunction needs performed 
smart chooses operations todo list set basic merging alignment operations section specifies arguments possibly suggested results 
example copied reservation record class airline ontology merged ontology 
reservation record class subclasses award travel reservation 
smart suggest user copies subclasses shallow copy cls award travel air ont shallow copy cls reservation air ont smart gives explanation suggestions cls award travel air ont referenced cls reservation record air ont merged ont conflicts list item conflicts list consists description conflict suggested action remedy problem 
contains default solution invoked user asks smart resolve conflict 
instance previous example having class ontology considered conflict 
case reservation record class having slot traveler referencing class individual copied conflict cls individual referenced cls reservation record air ont merged ont defined smart suggests action resolve conflict shallow copy cls individual air ont solution smart designates solutions default 
user asks smart resolve conflicts automatically smart executes default solution 
attributes items conflicts todo lists priority 
smart assigns priority items conflicts todo lists orders items lists higher priority items easily accessible 
priority value smart certainty item higher certainty higher priority item age items triggered operations higher priority refer concepts closer user current focus number concepts operation elements ontology affected operation invoked higher priority operation 
feedback explanation 
item conflicts todo lists back triggering operation rule smart put item list formal natural language form 
rule explain user particular item appears list 
user disable rules considers useful impediments 

basic operations merging alignment 
types operations section describe set basic operations ontology merging alignment 
detailed list operations earlier fridman noy musen 
give overview operations 
operations shallow copy detail 
discuss automatic operations additions todo conflicts lists operations trigger 
okbc specifies superset operations performed ontology design process chaudhri :10.1.1.123.3174
superset operations sufficient processes ontology merging alignment process treated ontology design processes 
argue task merging alignment tool support okbc operations 
judging experience merging alignment believe operations required general ontology design specialized processes ontology merging alignment 
instance merging alignment rarely create new classes completely scratch new classes usually modifications existing ones creation new slots facets common 
likewise operations performed ontology merging alignment usually ontology design stage 
example merging concepts common ontology merging 
moving concept source ontology source ontology performed alignment 
operations expressed combinations primitive operations okbc set user needs perform sequences basic operations step 
list contains subset operations ontology merging alignment identified 
operations normally performed ontology merging operations ontology alignment operations apply situations 
list exhaustive example represented operations dealing updates facets instances 
merge merge frames create new frame 
operation applicable frames type class frames 
shallow copy copy frame ontology ontology 
smart copies frame creates dummy frames necessary frames refers frames slots exist 
deep copy copy frame ontology ontology copy recursively superclasses superclasses classes root hierarchy reached 
remove frame remove frame ontology belongs 
remove parent assuming superclass remove list superclasses 
add parent add list superclasses 
rename change name frame remove attachment assuming slot attached class remove attachment facets specifying constraints attachment 
attach slot attach slot class 
translated operations preceding list okbc okbc scripting language 
operations set simple combinations operations okbc specification 
require extensive scripts 
operations extend okbc front provide support merging alignment okbc 
identification basic operations consequences invoking central task approach ontology merging alignment 
operation specify rules determine specific members sets updated operation changes performed automatically conflicts need resolved user new suggestions user 
having specified rules system automatically create members sets arguments specific invocation operation 
section discuss operations preceding list shallow copy detail 

example shallow copy shallow copy operation takes frame source ontologies argument copies frame target merged ontology 
describe shallow copy operation design decisions rationale decisions 
similar issues arise rest operations list previous section 
smart copy frame ontology number questions arise smart copy frames attached include slots defined directly frame overridden frame 
copy inherited slots 
copy superclasses frame 
slots attached frame refer concepts allowed classes allowed parents copy referenced frames 
remove facet referenced frame target ontology 
create temporary frame referenced frame remove temporary frame copies actual referenced frame 
copied frame slots name frame target ontology 
smart continue copying operation 
ask user new name frame 
create temporary names flag conflict 
slot name slots attached copied concept exists target ontology brought source ontology concept trying copy 
smart create new slot name declare conflict 
attach existing slot frame copying 
facet values describing attachment contradict restrictions existing slot 

realize correct answer questions similar questions arose smart development 
approach answering questions premises observed behavior common practical experience manually merging ontologies designated default behavior 
interference user current train thought minimal possible see section relevant discussion 
smart flag results actions explicitly authorized user minimally intrusive way possible 
user able change results easily 
smart behavior possible customizable 
decided proceed shallow copy operation follows 
step create frame suppose frame copied reservation record frame airline ontology 
start checking reservation record frame mapped frame merged ontology 
mapped smart checks user shall proceed anyway 
frame name type example class merged ontology smart suggests user merges reservation record airline ontology existing reservation record merged ontology copying 
user insists copying smart flags duplicate name conflict 
smart creates new frame name reservation record target ontology 
step link new frame existing frames reservation record parents airline ontology mapped concepts merged ontology concepts mapped parents newly created reservation record frame 
true subclasses reservation record 
smart establishes relations reservation record earlier refer temporary frame newly created frame 
step copy slots slot attachments smart copies slots attached reservation record 
frames slots exist merged ontology smart creates slot frames attaches reservation record 
frames created earlier smart just creates attachment 
attachment smart copies corresponding facets 
facets refer classes merged ontology smart creates dummy temporary frames remove user creates actual frames 

directions sections constitute threads discussion ontology merging alignment 
current section presents possible extensions general framework described approaches formal evaluation ontology merging alignment tools 
section turn back smart tool described section overview special features 
third discussion sections section presents related ontology design field object oriented programming 

extensions model describe possible extensions framework ontology merging alignment extending algorithm handle facets instances generalizing approach non okbc frameworks 
facets instances facets impose additional constraints slots frame 
example facet define cardinality constraints slot 
suppose merged classes classes slot name value type 
case smart automatically merges slots adds slot name value type newly created concept 
source ontologies slot merged may facet defined maximum cardinality 
second source ontology identical slot may minimum cardinality 
cardinality restrictions incompatible algorithm reconcile 
okbc specification chaudhri lists standard facets slots maximum minimum cardinality inverse numeric minimum maximum documentation :10.1.1.123.3174
merging alignment process desirable consider standard facets correlation possible facet values ways reconciling conflicting values 
values standard facets create additional suggestions example merge slots probably need merge inverses slots 
ontologies include definitions classes collections similar objects instances individual objects 
useful include automation tool support instance alignment merging 
performing merging alignment non okbc frameworks currently assume source ontologies conform okbc knowledge model 
specifically rely having frame model classes slots facets class objects see section 
extend smart knowledge models 
pay little attention axioms 
rely knowledge representation system built ability enforce axioms 
important step consider apply heavily axiomatized frameworks semi automated strategies generation suggestions similar ones described 

evaluation merging alignment process algorithm tool important evaluate performance validate empirically achievement goals 
empirical evaluation generally strong part artificial intelligence researchers undertaken cohen 
standard information retrieval metrics precision recall evaluate performance smart 
recall measured ratio suggestions todo list user followed total number merging alignment operations performed 
precision measured fraction suggestions todo list user followed 
metric augmented measure conflict resolution strategies conflicts list satisfactory user alter 
number operations section invoked ontology merging alignment process serve measure closely related far apart original ontologies process began 
note number performed operations measure quality process 
collecting information operations performed merging alignment contribute study value prior knowledge number concepts removed measure extra knowledge knowledge engineer create base ontology 
metric provide direct indication value base ontology start account extra body knowledge slowed development 

special features smart referred smart special features description works section 
features formally discuss motivations choosing particular approaches 
discuss feedback smart provides user explain actions section 
give examples classes conflicts smart identifies section 
describe strategies smart employs maintain user focus section 
keeps track relations concepts original ontologies order restore resulting ontology section 

feedback user suggestion conflict smart comes explanation see 
explanations include original reason smart came suggestion latest forced suggestion change priority list 
consider merge suggestion merge cls reservation air ont cls reservation car ont smart provides explanation frames identical names cls reservation air ont referenced cls reservation record merged ont part explanation reason smart suggested merge operation place second part reason operation top list assuming reservation record argument operation 

conflict types identified types conflicts smart recognize create possible solutions 
list conflicts smart growing constantly continue develop algorithm 
discuss conflicts 
dangling conflict mentioned dangling conflict arises class referred slot type class instance allowed class 
prot knowledge management systems allow inconsistent states knowledge base point smart creates dummy frame referenced slot temporarily 
user resolves dangling conflict smart replaces dummy frame real removes 
smart automatically suggests approaches resolving dangling conflict copy referenced class source ontology 
suggestion merge class class reservation perform merge copy 
remove dangling collection allowed classes duplicate frame names common conflict duplicate frame names 
conflict arises concepts different source ontologies name concept merged ontology renamed duplication created 
smart proposes ways resolving conflict frames duplicate names type classes slots smart suggests user merges 
frames different types example slot class smart suggests renaming 
implemented 
possible sophisticated solutions exist case currently deal 
instance identically named frames different types manifest different approaches classification ontologies illustrated 
class reservation record boolean slot named award travel true reservation fact frequent award reservation 
class award travel subclass reservation record regular reservation 
slot frame named award travel ontology class frame name 
frames fact refer concept ontologies adopt different approaches representing concept 
different modeling approaches 
award travel boolean slot attached reservation record class 
award travel class subclass reservation record solid arrows indicate superclass subclass relation smart suggest solution modeling difference indicates conflict different frame types exist enables user notice problem solve 

maintaining user focus major reasons ontology designers need tools help merging aligning ontologies source ontologies usually large viewed glance 
just concepts relations keep track think concentrate 
concepts relations entirely different parts ontology 
manually aligned ontologies part hpkb project fridman noy musen observed activity usually happening corner ontologies switching back forth corners 
true process designing single ontology 
observation mind designed smart maintain user focus current place interest possible 
focus defined location target ontology latest operation occurred 
approaches keep focus place 
approach rearranging todo conflicts lists action put operations involving concepts operation top lists 
instance smart just executed operation arguments move operations conflicts subclasses superclasses classes referenced arguments top lists 
second approach allowing knowledge base inconsistent state temporarily 
instance copied slot refers class target knowledge base smart flags dangling conflict places top conflicts list 
smart request user solves conflict immediately 
alternative leaving knowledge base temporarily inconsistent state interrupt current operation ask user resolve conflict 
solution user chooses may turn require questions solutions 
process cyclical involve forcing user traverse large part ontology single operation completed forces user loose focus wonder parts ontology concentrating moment 
try interrupt user questions little possible concepts questions concepts directly referenced classes current operation 
example smart confirm user needs create frame target knowledge base name exists 
user option asking smart create frame resolve conflict example renaming frame 

tracking relations source ontologies referred earlier section smart policy keeping track relationships frames original ontologies restoring relationships copies frames merged ontology 
behavior may desirable believe times restoring relations user done anyway 
example suppose merge driver class car rental ontology individual class airline ontology see create class individual customer merged ontology 
suppose user copies customer class airline ontology merged ontology 
smart automatically individual customer subclass customer prototypes classes subclass superclass relationship 
realizing rare cases may behavior user wants user may notice newly established relation immediately flag subclass superclass relations inferred smart 
user change relations commit relations smart established 
implement tracking source frames mapped maintaining links concepts original ontologies prototypes concepts merged ontology transformed 
links frame objects related specific frame names frame locations ontology frame merged ontology renamed moved subtree ontology link persists smart 
plan add smart ability perform operations entire trees collections selected frames 
working chunks ontology individual frames tracking necessary smart keep relations chunks original 
ability apply operation collection frames allow user example rename classes specified subtree ontology conform naming conventions ontology source aligned example 

related researchers computer science discussed automatic tool supported merging ontologies class hierarchies object oriented schemas specific terminology varies depending field 
automatic merging ontologies creation tools guide user process focus attention points actions early stages 
section discuss existing merging alignment tools ontology design object oriented programming 

ontology design working prototypes ontology merging tool system developed knowledge systems laboratory ksl stanford university fikes 
system ontolingua ontology editor developed ksl farquhar fikes rice 
system early prototype solves initial problems ontology merging 
bring ontologies developed different formalisms different authors 
ontolingua approach merging similarities described ontolingua ontology merging algorithm generates list suggestions operations performed user 
process starts running matching algorithm class names ontologies suggest merging points 
matching algorithm looks exact match class names match prefixes suffixes word roots class names 
user choose matching points proceed initiative 
step performed user system generates new set suggestions 
ontolingua approach merging different smart respects 
ontolingua merging algorithm consider slots 
process name matches appears depth may cause user lose focus finding matches deeper class hierarchy current point concentration 
hand smart consider disjoint classification categories ontolingua algorithm 
ontolingua tool employs user interface metaphors ontolingua ontology editor advantage ontology developers familiar ontology editor 
ontolingua interface easy drawback carry merging tool 
ontology merging alignment project information science institute isi university southern california hovy russ attempted merge extremely large top level ontologies cyc lenat sensus knight luk 
sensus ontology resulted manual merging penman upper model penman wordnet miller ontologies 
isi approach creation initial list alignment suggestions relies just class names 
concept features isi scores combines produce suggestion list include concepts names long substrings common concepts definitions documentation share uncommon words concepts sufficiently high combined name similarity scores nearby siblings children ancestors 
experiments shown initial list suggestions filters uninteresting concepts 
algorithm stops initial list created ontology developer continue ontology alignment 
mentioned section medical vocabularies provide rich field testing various ontology merging paradigms 
wide variety large scale sources medicine field standard vocabularies change constantly updates issued different vocabularies need reconciled 
oliver colleagues oliver explored representation change medical terminologies frame system 
authors compiled list change operations relevant domain medical terminologies developed tool support operations 
operations similar ones described section 
user operations manually automated help guidance 

object oriented programming better developed works area ontology merging comes researchers artificial intelligence researchers object oriented programming face problems similar ontology researchers 
may need bring object oriented class hierarchies associated methods create new product 
subject oriented programming sop harrison ossher supports building object oriented systems composition subjects 
subjects collections classes represent subjective views possibly universe 
instance class shoe universe probably attributes different class shoe seller universe 
class hierarchies define shoes types different points view subjects 
subjects instance supplies shoes shoe seller corresponding class hierarchies merged 
formal theory subject oriented composition ossher defines set possible composition rules rules semantics ways rules 
interactive tools subject oriented composition currently development 
important differences similarities sop approach requirements class hierarchy merging ontology merging described 
description similarities 
merging class hierarchies covering similar domains central task ontology merging subject oriented composition 
slots merged classes instance variables object oriented terminology merged 
simply creating union slots leads conflicts resolved 
fact idea preferred strategy merge override inspired merge override composition rules specifying subject oriented composition 
cases completely automatic matching creation composition rules possible interaction user preferably easy graphical tools needed 
section introduced notion extensions subject oriented programming described relation extensions periodic ontology merging extension set rules defines updates class hierarchy 
reapplying extensions class hierarchy changes similar reapplying set logged merging alignment operations ontology changes 
major differences sop stems fact composition needs compose methods associated classes 
ontology classes methods associated 
hand ontologies may axioms relate different classes slot values 
object oriented class hierarchies include axioms 
alignment opposed merging extremely uncommon composition object oriented hierarchies common ontology design 

described general approach ontology merging alignment 
smart algorithm semi automatic merging alignment 
discussed strategies smart uses guide user automatically possible point merging alignment suggest operations performed perform certain actions automatically 
described set basic operations invoked merging alignment process 
complex operations set added front operations okbc 
strategies algorithms described general okbc compliant knowledge model 
results applicable wide range ontology development systems 
parts appeared earlier publication fridman noy musen 
extremely grateful ray fergerson help implementation 
monica crub zy william grosso provided valuable comments earlier drafts 
funded part high performance knowledge base project defense advanced research projects agency 
hovy russ 
progress automatic ontology alignment methodology 
ansi ad hoc group ontology standards available stanford edu std hovy index htm 
chaudhri farquhar fikes karp rice 
okbc programmatic foundation knowledge base interoperability 
proceedings fifteenth national conference artificial intelligence aaai 
madison wisconsin aaai press mit press 
chaudhri farquhar fikes karp rice 
open knowledge base connectivity specification document 
cohen schrag jones pease lin starr burke 
darpa high performance knowledge bases project 
ai magazine 
cohen 
empirical methods artificial intelligence 
cambridge ma mit press 
farquhar fikes rice 
ontolingua server tool collaborative ontology construction 
proceedings tenth knowledge acquisition knowledge systems workshop 
banff canada 
fikes mcguinness rice frank sun qing 
distributed repositories highly expressive reusable knowledge 
presentation hpkb meeting austin tx available www com hpkb meetings year meeting 
fridman noy musen 
algorithm merging aligning ontologies automation tool support 
proceedings workshop ontology management sixteenth national conference artificial intelligence aaai 
orlando fl aaai press 
grosso eriksson fergerson gennari tu musen 
knowledge modeling millenium design evolution prot 
submitted twelfth banff knowledge acquisition knowledge bases systems workshop 
banff canada 
harrison ossher 
subject oriented programming critique pure objects 
proceedings conference object oriented programming systems languages applications oopsla 
washington dc acm press 
high performance knowledge bases www com hpkb 
knight luk 
building large scale knowledge base machine translation 
proceedings twelfth national conference artificial intelligence aaai 
seattle washington aaai press 
lenat 
cyc large scale investment knowledge infrastructure 
communications acm 
miller 
wordnet lexical database english 
communications acm 
musen gennari eriksson tu puerta 
prot ii computer support development intelligent systems libraries components 
proceedings medinfo 
vancouver bc 
oliver shahar musen 
representation change controlled medical terminologies 
artificial intelligence medicine 
ossher kaplan katz harrison kruskal 
specifying subject oriented composition 
theory practice object systems 
penman 
penman documentation technical report usc information sciences institute marina del rey ca 

