adaptive pricing networks non cooperative users srikant university illinois uiuc edu uiuc edu september goal design pricing mechanism communication networks users flow control decisions decentralized manner 
pricing mechanism attempts drive users flows socially optimal values 
consider single link accessed number users parameterized class utility functions develop types algorithms sets price utility functions known number users sets price number users system known utility functions 
main result utility functions different users network adaptively converge optimal price making aggregate measurements flow measurements total traffic link 
networks increasing congested flow control necessary ensure user gets fair share bandwidth commensurate utility function 
transmission rate adapted user individually feedback network giving rise non cooperative game 
resulting nash equilibrium may far efficient desirable socially optimal set flows users converge acted cooperative manner maximize sum utility functions 
non cooperative setting approach driving users socially optimal solution pricing incentive 
approach suggested 
refer appropriate price drives users socially optimal solution optimal price 
framework suggested single link accessed users optimal price function number users accessing network utility functions 
consider issue setting optimal price utility functions number users unknown 
impose restriction network allowed measure aggregate flow link individual flows user 
rationale assumption flow measurements impose heavy burden network especially number users large 
rationale considering unknown utility functions obvious 
realistic network expect users declare able characterize utilities 
controlled testbed type setting network service provider attempting infer utility functions experiments reasonable assume number users known 
utility functions estimated uncontrolled full service scenario reasonable assume utility functions known number users may tend fluctuate time consider case number users unknown 
point scenarios parameterized class utility functions considered network need know utility functions individual user average utility function parameter precise 
model simple single link model compute delay standard model 
consider parameterized family utility functions trades throughput delay 
logarithm known power function utility function 
utility function throughput delay perceived user utility log fi fi parameter trades throughput delay 
user different utility function parameterized class choosing different value parameter trades bandwidth delay 
model idea adaptive algorithm follows 
start expressions optimal price assuming parameters known 
interestingly turns optimal price function average value fi averaged users fi total number users 
compute optimal price adaptively network sets price measures total throughput response price 
assuming socially optimal throughput case utility function parameters unknown new price set relationship socially optimal throughput optimal price 
number users unknown motivation adaptive algorithm similar utility functions 
utility functions surprisingly crude modification basic algorithm converges optimal price 
case utility function parameters unknown show algorithm converges need damping 
contrary case utility function parameters known number users unknown sufficient damping necessary algorithm converge 
characterize amount damping necessary convergence 
addition considering effect partial information network setting price consider effect partial information users updating throughput response network pricing 
provide sets algorithms case users know capacity link users know capacity link 
believe second scenario realistic service providers disclose network topology users 
consider effect synchronous asynchronous updates pricing algorithms 
synchronous algorithms assume immediately new price set user responds updating throughput maximize individual utility 
asynchronous version algorithms subset users may update throughput 
network aware set updated throughput continues simply measure aggregate throughput 
standard assumption users update throughput infinitely 
simulation results algorithms show adaptive algorithm converges initial point optimal price 
theoretical results establish global convergence synchronous asynchronous updates network know utility functions users know link capacity 
various cases established local convergence exists neighborhood optimal values price throughputs initial point lies neighborhood convergence guaranteed 
mentioned cases simulation results suggest convergence fact global 
intermediate step adaptive pricing algorithm network estimates average value utility function parameter fi total number users depending assumed unknown 
product convergence price optimal price unknown parameters converge network learns utility functions number users case may 
rest organized follows 
discussion related subsection section briefly review wellknown pricing mechanism drive non cooperative users set flows 
starting point discuss adaptive pricing algorithms convergence section 
supporting simulation results section concluding remarks section 
related applications game theory networks pricing mechanism developed papers 
performance objective user maximize power defined ratio average throughput average time delay 
characterizes nash equilibrium 
authors consider multi objective problem game theoretic setting 
average network throughput maximized subject constraint average network delay performance objective user maximize average throughput subject upper bound average time delay 
iterative algorithms reach socially optimal equilibrium markovian queuing networks users try maximise throughput subject constraint delay 
nash equilibria combined flow control routing games studied 
researchers studied issue pricing context game theory 
smart market proposal pricing mechanism aimed driving non cooperative users cooperation 
attempt achieve goal adaptively 
analogous model 
authors nash equilibrium results study role pricing policies multiple service class networks 
describe interplay service discipline pricing policies determining network performance 
kelly developed models pricing congestion control 
works pricing networks reader referred 
setting right price achieve optimal utilization network mentioned utility function log throughput delay experienced user denote sum throughputs users denote number users 
model queue fifo scheduling 
link capacity delay user gamma note delay users 
log fi gamma cooperative users suppose users cooperate optimize socially beneficial utility function sum utilities individual users fi log log gamma maximizing objective leads optimal solution fi fi fi fi non cooperative users pricing reality users cooperate user maximizes objective 
context reasonable adopt nash equilibrium appropriate solution 
drive nash equilibrium socially optimal solution charge users usage price user 
objective user delta delta delta log fi gamma gamma objective function user suppose straightforward see nash equilibrium solution fi fi optimal solution system differs nash equilibrium solution 
fact throughput nash equilibrium goes delay goes infinity 
users won naturally cooperate force cooperate price incentive 
order necessary condition nash equilibrium fi gamma gamma gamma want set price achieve throughput optimizes utility function system 
substitute obtained equation equation obtain optimal price fi gamma interesting notice optimal aggregate throughput optimal price depend mean fi optimal price written terms aggregate throughput 
adaptive pricing algorithms section adaptive pricing algorithms different scenarios convergence results synchronous asynchronous versions algorithms 
algorithm fi algorithm suppose network knows number users utility functions unknown 
assumed users know link capacity 
introduce notation fi fi assumptions synchronous adaptive pricing algorithm algorithm fi ffl assume initial price ffl step gamma compute follows fi gamma gamma gamma gamma gamma gamma gamma gamma gamma ffl compute fi fi gamma fi gamma ffl set continue 
note step user needs know gamma gamma knowledge required user 
model simply means network inform user current delay experienced network gamma gamma simply inverse delay 
gamma gamma obtained solving gamma network experiences high amounts delay gamma gamma user sets throughput equal zero step 
equation simply obtained assuming gamma socially optimal aggregate throughput users 
aggregate throughput written compact form provided fi max gamma gamma gamma max gamma gamma algorithm fi algorithm suppose network knows number users utility functions unknown 
users allowed link capacity information user step total throughput seen network previous step 
alternately algorithm fi user fed back delay known user throughput inferred user 
algorithm fi iteration ffl gamma compute gamma set obtain solving fi gamma gamma gamma gamma gamma gamma gamma ffl compute fi fi max gamma fi gamma note difference algorithms fi fi manner updated 
cases case assumed case 
gamma equation solved obtain solutions satisfies condition gamma fi gamma gamma gamma gamma fi gamma gamma gamma gamma fi gamma gamma gamma gamma general version algorithm fi considered independently 
allow multiple links general utility functions joint routing flow control 
algorithm uses flow information 
algorithm turn attention setting price knowing fi consider case users know link capacity 
explain intuition algorithm 
step suppose network believes current price optimal price current estimate number users actual number users 
expects aggregate throughput optimal throughput fic fi average throughput user av fic fi suppose response network observes aggregate throughput naive estimate number users av fi fic algorithm expected fi equal av updates synchronous 
surprisingly damped version naive estimator converges true value fi equal 
adaptive pricing algorithm 
algorithm iteration ffl gamma compute fi gamma gamma gamma gamma gamma gamma gamma gamma gamma ffl compute ffn gamma gamma ff gamma gamma max fi fic gamma fi gamma parameter ff algorithm damping factor 
example demonstrates need damping factor algorithm consider initial flow fi user suppose fi fin greater greater initial condition easy see oscillates values total throughput link capacity equal zero 
show ff fi exist initial conditions convergence occur 
algorithm final algorithm adaptive algorithm network knows average utility function parameter fi number users users knowledge capacity algorithm iteration ffl gamma compute gamma set obtain solving fi gamma gamma gamma gamma gamma gamma gamma ffl compute ffn gamma gamma ff max fi fic gamma fi gamma synchronous versions algorithms 
mentioned section asynchronous versions step subset users may update flows response new price set network 
standard assumption users update flows infinitely 
convergence results algorithm fi proposition synchronous asynchronous versions algorithm fi converge lim fic fi lim fi gamma lim fi fi proof convergence synchronous updates note fi gamma fi implies steps 
holds convergence occurs 
convergence asynchronous updates show 
gamma 
suppose initial aggregate traffic greater long aggregate traffic greater step users update set individual throughput equal zero see 
assumption user updates flow infinitely certain number iterations aggregate throughput smaller note aggregate throughput step smaller 
step throughput user updates throughput fi gamma suppose step users update traffic 
max fi gamma aggregate throughput users don update max fi gamma user updates step fi gamma synchronous version algorithm written 
gamma gamma 
gamma gamma fi fi delta delta delta fi fi fi delta delta delta fi 
fi fi delta delta delta fi fi 
fi sum rows jaj jaj matrix elements absolute values elements proposition follows asynchronous algorithm converges 
pi note proof proposition convergence exponential faster fi smaller 
algorithm fi main convergence result algorithm state prove lemma 
lemma suppose fi fi synchronous version algorithm fi difference values individual throughputs goes zero asymptotically lim gamma proof note gamma see 
gamma fi gamma gamma fic implies steps 
gamma fi gamma gamma gamma gamma gamma gamma holds 
write equation users example fi gamma gamma gamma gamma gamma gamma fi gamma gamma gamma gamma gamma gamma obtain fi gamma gamma gamma gamma gamma gamma gamma gamma gamma fi gammad gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma definition positive 
fi gamma equation emerges strictly decreasing 
jd lower bounded zero 
jd converges converges zero 
haven able prove lemma asynchronous version algorithm assume result true synchronous asynchronous versions algorithm subsequent proofs 
proposition suppose fi fi exists ffl gamma fic fi ffl jp gamma fi gamma ffl lim fic fi lim fi gamma lim fi fi proof local convergence sufficient check stability linearized version algorithm fi equilibrium point 
gamma gamma fic fi theorem 
lemma assume neighborhood equilibrium point equal 
eliminate rewrite algorithm fi form gamma 
equilibrium point df gamma gamma gamma fi fi df gamma absolute value derivative equilibrium point smaller sufficient condition local convergence synchronous asynchronous versions algorithm 
pi note fi algorithm fi behaves similarly algorithm fi see note fi step algorithm fi gamma gamma gamma gamma gamma gamma gamma gamma gamma fi gamma gamma fi gamma gamma exactly algorithm fi pi algorithm turn attention convergence properties algorithms simulations observed value damping factor ff fi ensure convergence value damping factor damping factor smaller fi certain initial conditions system doesn stabilize oscillates limit points 
observed algorithms proposition show damping factor necessary algorithm proposition algorithm exist fin gamma ff fi fi sequence doesn converge 
fact initial condition oscillates limit points 
proof definition algorithm see oscillations continue turn true fi note sufficient condition occur definition algorithm equation gamma ff fi fi ff ffn ff gamma ff fi fi ff ff fi pi proposition synchronous asynchronous versions algorithms converge locally damping factor exists ffl gamma fi fi ffl jp gamma fi gamma ffl jn gamma ffl lim fic fi lim fi gamma lim proof local convergence sufficient check stability linearized version algorithm point gamma gamma fic fi eliminate write functions gamma gamma introduce notations gamma gamma gamma gamma neighborhood equilibrium point gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma fi gamma fic fi fi eigenvalues matrix gamma fi sigma fi fi lie interval gamma establishes local convergence synchronous updates 
easy see condition eigenvalues jm smaller exactly eigenvalues smaller 
local convergence asynchronous version algorithm follows 
pi algorithm result similar proposition algorithm condition fi fi proposition suppose fi fi exist ff fi fi sequence doesn converge 
fact initial condition oscillates limit points 
proof show exists rest proof follows lines proposition 
note fi gamma fi gamma fi decreasing function fi fi follows exists pi proposition suppose conditions satisfied ffl users utility function ffl fi adequate damping factor 
conditions exists ffl gamma fic fi ffl jp gamma fi gamma ffl jn gamma ffl lim fic fi lim fi gamma lim prove users utility function difference individual throughputs converges proof identical proof lemma 
starting initial condition equal notation similar definition previous proposition gamma gamma fi fi gamma fi fic fi gamma gamma ff fi gamma fi fi ffn fi eigenvalues matrix gamma fi fi gamma fi ff sigma gamma fi fi gamma fi ff gamma fi fi eigenvalues lie unit circle complex plane condition satisfied gamma fi fi gamma fi ffj gamma fi fi gamma fi ff gamma fi fi introduce notations gamma fi fi fi ff sufficient condition inequality jb gamma aj gamma ffl true 
ffl true gamma 
notice fi absolute values eigenvalues smaller damping 
follows sufficient condition local convergence synchronous version linearized algorithm ff 
gamma fi gamma 
proves local convergence synchronous updates 
eigenvalues jm fi fi ff sigma fi ff gamma fi gamma fi ff gamma sufficient condition local convergence asynchronous algorithm ff ff fi 
notice fi eigenvalues smaller damping 
pi algorithm fi synchronous updates update probability fi random number 
simulation results simulations introduce parameter called update probability 
probability user updates flow response price set network 
choosing update probability simulate asynchronous versions algorithm 
simulations set number users equal algorithms fi fi setting price knowing utility functions figures show convergence algorithm fi synchronous asynchronous updates respectively 
note chosen utility function parameters ffi randomly uniform random number generator interval expect asynchronous update algorithm converges slower algorithm synchronous updates 
convergence results showed global convergence algorithm fi algorithm fi established local convergence 
simulations indicate convergence algorithm fi global representative examples figures show 
fi chosen randomly interval fi close step algorithm fi asynchronous updates update probability fi random number 
fi chosen randomly interval fi close mentioned previous section expect convergence faster figures illustrate fact clearly 
algorithms setting price knowing number users convergence results showed local convergence algorithms far global convergence concerned showed condition ff fi necessary 
simulations indicate condition ff fi necessary sufficient global convergence synchronous asynchronous versions algorithms figures show convergence algorithm ff fi synchronous asynchronous updates respectively 
expect asynchronous update algorithm converges slower algorithm synchronous updates 
note case asynchronous updates high damping factor higher minimum required convergence fluctuations price smoother 
figures illustrate fact condition ff fi necessary step algorithm fi update probability fi random number 
step algorithm fi update probability fi uniform random number convergence faster 
step algorithm update probability fi ff 
step algorithm update probability fi ff step algorithm update probability fi uniform random number fi ff sufficient condition algorithm figures fi generated uniform random number generator interval mean fi approximately equal 
ff fi observe convergence 
ff fi observe oscillations 
figures show influence parameters rate convergence 
ffl convergence faster fi smaller 
figures illustrate fact algorithm ffl convergence faster initial guess larger true value 
figures illustrate fact algorithm properties observed algorithms 
shown users compete resource capacity drive network socially optimal set flows means adaptive centrally fixed usage pricing scheme 
adaptation necessary reach optimal price network access partial information users 
step algorithm update probability fi uniform random number fi ff step algorithm update probability fi ff 
step algorithm update probability fi ff 
convergence slower 
step algorithm update probability fi ff 
step algorithm update probability fi ff 
convergence faster 
designed algorithms set price number users utility functions fi users unknown 
algorithms way step subset user update throughputs response price set network price updated central pricing mechanism new aggregate traffic 
issues remain open 
simulation results suggest great certainty algorithms converge proof global convergence algorithm fi algorithms proved local convergence 
interesting prove global convergence algorithms 
possible extension adaptation multiple parallel links lines considered equivalent algorithm fi case 
altman basar srikant 
nash equilibria combined flow control routing networks asymptotic behavior large number users appear proceedings ieee conference decision control 
phoenix az december 
antsaklis michel linear control systems mcgraw hill new york ny 
barham key mcauley congestion pricing congestion avoidance tech 
rep msr tr microsoft research 
bertsekas parallel distributed computation numerical methods athena scientific 
game theoretic perspective flow control telecommunication networks journal franklin institute vol 
pp 

estrin cocchi shenker zhang pricing computer networks motivation formulation example ieee acm transactions networking vol 
pp 
pp dec 
estrin shenker clark herzog pricing computer networks reshaping research agenda proc 
acm sigcomm computer communications review april vol 
pp 

ferguson sairamesh yemini approach pricing optimal allocation quality service high speed packet networks proceedings ieee infocom vol 
pp 
pp 
kelly charging rate control elastic traffic european transactions telecommunications vol 
pp 
jan feb 
kelly tan rate control communication networks shadow prices proportional fairness stability journal research society vol 
pp 

hsiao lazar optimal decentralized flow control markovian queuing networks perform 
eval vol 
pp 

la anantharam network pricing game theoretic approach appear proceedings ieee conference decision control 
phoenix az december 
lazar existence equilibria noncooperative optimal flow control journal association computing machinery vol 
pp 
may 
low varaiya new approach service atm networks ieee acm transactions networking vol 
pp 
october 
mackie mason varian pricing congestible network resources ieee journal selected areas communications vol 
pp 
september 
mc knight bailey internet economics mit press cambridge mass 
ch 
tsitsiklis congestion dependant pricing network services appear proceedings ieee conference decision control 
phoenix az december 
sairamesh ferguson yemini economic models allocating resources computer systems th international conference distributed computing systems ieee comput 
soc 
press ed los alamitos ca usa june vol 
pp 
pp 
shenker cocchi estrin zhang study priority pricing multiple service class networks communications architectures protocols acm press zurich switzerland september sigcomm pp 


