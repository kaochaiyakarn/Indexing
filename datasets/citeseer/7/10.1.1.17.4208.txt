molecular computing bounded nondeterminism efficient recursion richard beigel bin fu lehigh university april maximum number strands important measure molecular algorithm complexity 
measure called volume algorithm 
problem solved np turing machine binary nondeterministic choices solved molecular computation polynomial number steps test tubes volume identify large class recursive algorithms implemented bounded nondeterminism 
yields improved molecular algorithms important problems sat independent set colorability 

model molecular computing molecular computation studied 
models define inspired 
molecular sequence string alphabet sigma alphabet encoding characters sigma finite sequences base pairs 
test tube multiset molecular sequences 
describe allowable operations 
set notation applied multisets multiplicities respected 
definitions denote distinct test tubes denotes character denotes positive integer 
separate multiset strings ith character multiset strings ith character 
research performed yale university university maryland 
supported part national science foundation ccr ccr ccr 
author supported part nasa nag 
address dept electrical engineering computer science memorial dr ste pa 
email bif eecs lehigh edu 
web www eecs lehigh edu bif 
append tg 
merge 
proposed variant operation separate call sep checks string contains character 
represent ith symbol string symbol hi standard sep operation simulate separate operation additional overhead 
polynomial size alphabets standard practice molecular computing 
prefer separate operation convenience programming 
running time molecular algorithm proportional number operations test tubes 
important complexity measure size solution space called simply volume maximum number strings test tubes time counting multiplicities 
adleman speculated molecular computation solution space size possible 
papers attempt optimize solution volume size particular combinatorial problems 
problem instances associated parameter called size 
complexity theory length suitable encoding instance 
analysis algorithms usually natural representation independent parameter number vertices graph number variables formula 
complexity theory analysis algorithms usually polynomially related phenomenal difference appears exponent 
reason take problem dependent notion size 
write jxj denote size problem instance length usually identify jxj 
consider highly restricted model time volume molecular computation think chance eventually practical 
input test tube initialized hold encodings numbers jxj 
sequence molecular operations jxj performed conventional polynomial time computable function program uniform weak appropriate sense 
computation accepts nonempty operation performed 
definition 
ffl mol class languages accepted computation running time 
ffl mol mol 
results previously problem volume limited model volume limited model hamiltonian path 
sat qbf theta theta sat theta colorability independent set system table results particular problems 
limited model means model similar theta means model allows amplify operation theta theta means model allows intersection 
give volume efficient molecular algorithms known problems 
see table 
table compare results previous results important np complete problems 

biological background operations dna storage medium genetic information 
cellular organism 
composed units called nucleotides distinguished chemical group attached 
bases adenine abbreviated single nucleotides linked form dna strands 
dna strand distinct ends free po group free oh group called ends respectively 
think sequence nucleotides strand having natural orientation 
mutual attraction called hydrogen bonding exists ts gs cs 
called complementary base pairs 
complementary single strands hydrogen bonding occur pair complementary strands oriented anti parallel fashion 
strand double helix runs direction complement runs direction 
complementary single strands pair twist forming famous double helix structure discovered watson crick 
dna strands consist different symbols encode conventional strings conventional computer 

encoding delta delta deltax bit binary string 
assign unique sequence dlog bases bit position bit value 
sequence encodes ith bit 
sequence encodes ith bit 
delta delta deltax represented dna sequence delta delta deltab require hi ai hj bi long common subsequence 

dna manipulations decade revolutionary advances field biomedical engineering particularly recombinant dna rna manipulating 
basic principles recombinant dna 
section describe biological operations useful molecular computation 
descriptions similar 
string denote single dna strand sequence orientation read left right 
similarly denotes strand complementary lx denotes double strand results anneal 

merge pour solution test tubes third achieve union 
performed re tube contents combining fluids new tube pouring 

append strand test tube short strand 
suppose delta delta deltad fa cg 
solution containing poured sequence reacts form dd washing excess solution away chain dd coupled form dd 
character appended appended 
time character appended 
guaranteed biological techniques new character protected state 
protected state changed unprotected state character appended 

separation subsequence extract strands containing sequence method purification described 
create copies complementary short dna strand attach molecules turn anchored bead matrix 
melt double strands test tube pour matrix 
strings contain anneal anchored matrix 
wash away strands anneal leaving strands contain retrieved matrix 

melting break double dna strands single stranded complementary components heating solution 

separation length separate dna sequences lengths 
technique called gel 
molecules placed top wet gel electric field applied drawing bottom 
larger molecules travel slowly 
period molecules spread distinct bands size 

amplification pcr copies dna strands polymerase chain reaction pcr 
duplex melt form xyz xyz 
solution add primer anneal form partial lx yz 
dna polymerase primer create full form 
copies original strand 
guarantee primer sequences occur ends strand ends pcr duplicate strand test tube 

detect test dna sequence solution test tube 
usually done amplification see 

bounded nondeterminism np computation limited amount nondeterminism introduced studied 
class consists languages recognized np machine binary nondeterministic choices computation path inputs size 
prior treatments allowed binary choices constant factor turns important connection molecular computation 
define refinement classes consists languages recognized np machines nondeterministically choose number inputs size behave deterministically 
clearly 
order self contained give equivalent definition 
definition 
ffl define pad pad delta delta deltax delta delta delta gamma ffl family circuits fc uniform polynomial time computable function ffl function uniform size computable uniform family circuits fc size jxj pad ffl uniform family circuits fc size jxj ffl 

mol section show simulate bounded nondeterministic computation bounded volume molecular computation 
results type appear assume models molecular computation powerful operations amplify may harder implement practice 
result due boneh 
order keep self contained give proof 
lemma 
circuit gates 
tube molecular algorithm operations separate append merge running time test tubes create tubes contains strings tube satisfy contains strings tube satisfy 
proof input gates internal gates topological order particular output gate 
tubes compute binary function 
perform algorithm shown 
completion contains strings satisfy contains strings satisfy theorem 
mol 
separate separate append append merge separate append append merge merge separate simulating circuit molecular computation cf 

assume ith gate computes binary function 
completion contains strings satisfy contains strings satisfy proof uniform family circuits fc size size iff jxj jxj 
fix circuit jxj 
applying lemma get molecular algorithm performs jxj operations determine exists jxj 
fc uniform molecular operations sequences computed polynomial time 
corollary 
mol 

implementing recursion bounded nondeterminism section show enumerate search volume bounded nondeterminism 
nondeterministic searches paths longer inefficient 
compute size subtrees balance nondeterministic search trees reduces amount nondeterminism needed 
meyer paterson formalized notion self reductions 
recursive algorithms np problems take form disjunctive self reductions henceforth simply dsr 
show convert time recursive algorithms type volume polynomial time molecular algorithms 
earlier version favored tight exposition tight time bounds 
order firm time bounds introduced parameters describe self reductions 
reader satisfied arbitrary polynomial time bounds may safely ignore parameters replacing arbitrary polynomials 
definition 
partial order oe founded ffl oe delta delta delta oe jy ffl oe delta delta delta oe jy jy technical simplicity consider languages containing empty string definition 
ffl dsr language consists uniform size computable function fx xm founded partial order oe problem instances minimal element oe oe jjh jj jxj node set 
ffl dsr dsr polynomials 
definition 
hh oei dsr problem instance 
ffl oe unordered rooted tree satisfies rules root set children 
ffl jt oe number leaves oe 
hh oei dsr corresponding recursive algorithm runs time jt oe analysis algorithm usually provides bound jt oe suitable constructing molecular algorithm formalize definition 
ffl language rec dsr hh oei jt oe 
ffl rec rec 
lest conditions restrictive argue quite natural 
consider typical analysis recursive algorithm 
introduces function proves induction jt oe 
inductive hypothesis jt oe oe inspection algorithm yields jt oe oe inductive hypothesis step induction consists showing satisfies 
function depends problem instances size analysis algorithm may depend parameters 
need analogous variant 
definition 
ffl uniform family circuits fc size jxj ffl 
clearly jxj 
theorem 
uniform size computable rec delta delta 
proof rec hh oei 
define function path values path delta delta equal sequence values leaves oe canonical order 
function path computed tail recursion 
function path return true return false fx xm return path gamma return uniform size computable uniform family circuits fc size pad length circuit size pad length 
uniform size computable uniform family circuits fc size pad length circuit size pad length 
going construct circuit compute path 
oe tree depth 
circuit input hx ki divided jxj layers jxj layer outputs hx hx ki 
suppose constructed layer output hx layer consist call ffl gets hx computes fy ffl gets fy computes 
ffl gets fy respectively 
computes hx hy gamma delta delta delta gamma delta delta delta gamma delta delta delta 
clearly size jxj size jxj delta jxj size jxj deltas jxj 
size jxj jxj deltas jxj 
function path computed uniform family circuits size jxj delta jxj jxj delta jxj 
corollary 
rec 

simple applications 
monien algorithm sat section apply results classic sat algorithm monien 
yields simple mol delta jf algorithm sat number variables jf number clauses formula sat problem determine set clauses consisting literals satisfiable 
sat algorithm monien 
denote formula obtained replacing literal true literal false 
clause disjunction exactly literals 
function sat empty set clauses return true contains empty clause return false variable appears positive literals return sat variable appears negative literals return sat contains clause consisting single literal return sat contains clause consisting literals return sat sat variable appear return sat sat case recursion ostensibly worst yielding subproblems size gamma occurs call immediately eliminating single variable yields single subproblem size gamma unrolling recursion see case gives subproblems size gamma 
worst case second yields subproblems size gamma gamma 
number leaves self reduction recurrence gamma gamma particular show algorithm jf jf dsr sat 
value function formula set subformulas generated recursive algorithm 
number variables formula define oe 
analysis know fx fm fn gamma fn gamma gamma fn gamma gamma 

upper bound number leaves computation tree recursive algorithm 
easy see gamma gamma gamma gamma 
function uniform jf size computable 
partial order jf founded 
oe satisfy conditions definition definition 
theorem theorem sat mol delta jf 
ogihara implements monien algorithm breadth search matching volume bound time delta max jf 
needs powerful operations creates complement strand test tube 

tarjan algorithm independent set nodes graph set nodes adjacent 
famous np complete problem independent set problem graph positive integer independent set consisting vertices 
tarjan gave simple algorithm find largest independent set graph 
tarjan algorithm 
simple modification yields dsr independent set problem 
corresponding dsr 
complexity bounds denotes number vertices denotes number edges jgj denotes max 
define oe number vertices number vertices claim hh oei function mis pick vertex return fvg mis gamma gamma return max mis gamma fvg mis gamma gamma tarjan algorithm find maximum independent set 
denotes degree denotes neighbor set max denotes larger sets ties resolved arbitrarily 
function pick vertex return gamma gamma gamma return gamma gamma gamma gamma dsr corresponding tarjan algorithm 
denotes degree denotes neighbor set jgj jgj dsr leaves satisfies gamma gamma 
number vertices clearly oe satisfy conditions definition 
function jgj size computable 
partial order oe jgj founded 
recurrence solved explicitly obtain shown independent set problem mol jgj delta improves result 

complicated applications section implement complicated recursive algorithms npcomplete problems 
results depend conventional algorithms papers section self contained 
order streamline exposition give tight time bounds polynomial time algorithms section 
emphasis minimizing volume polynomial time algorithms 
giving sufficient conditions polynomial time computable 
definition 
say partial order oe problem instances parameterizable function problem instances set partial order oe polynomial ffl computable time polynomial jxj ffl oe oe ffl oe gjj jxj 
examples take jxj oe standard linear order natural numbers 
examples tuple parameters number clauses number clauses boolean formula examples partial order oe 
definition 
define ffl mh multiset fm ffl mh set definition 
dsr hh oei cases oe parameterizable hm oe way mh computable time polynomial jxj 
lemma 
hh oei dsr cases parameter function 
function jt oe function exists computable time polynomial jxj 
proof hh oei parameterization hm oe mh computable time polynomial jxj 
define partial function natural numbers recursively minimal element oe range defined mh finite set easy see ffi function satisfying 
definition jfi oe gj jxj 
compute obvious recursion jxj different subproblems arise 
table avoid recomputation recursion run polynomial time 

sat applying methods algorithm monien yields simple mol algorithm sat 
monien result improved times 
papers gives dsr methods applicable 
claims time algorithm sat 
algorithm dsr sat 
prove sat rec function defined 
follow define formula variables maximum number clauses clauses preference clauses variable occurs twice 
number remaining clauses define min 
cfi delta fi ff gammam fi ff sufficiently large constant 
clauses clauses states jt oe clause clause jt oe jt oe jt oe number recursive calls 
inequalities gives proofs lemma lemma imply satisfies conditions definition 
sat rec mol 

coloring system beigel eppstein give algorithms system coloring 
system problem collection vertices different colors 
certain color combinations disallowed set constraints forbids coloring tuple variables 
system generalizes coloring sat edge coloring 

system algorithm size system number variables 
beigel eppstein system algorithm sketched follows function sys jf return brute force hf return sys algorithm brute force means brute force method solve system polynomial time computable jf jf jf number vertices oe standard linear ordering natural numbers 
hh oei dsr system 
define jf case mh fn gamma gamma 
cases mh fn gamma gamma 
cases mh fn case mh fn gamma gamma gamma 
case mh fn gamma gamma 
case mh fn gamma gamma 
mh polynomial time computable case analysis 
easy see input fn mh delta delta delta 
define 
lemma polynomial time computable function oe satisfy conditions definition 
system rec 
system theorem jf mol corollary 
coloring algorithm parts beigel eppstein algorithm 
part runs polynomial time finds independent set lot neighbors 
gamma denote set vertices adjacent element second part colors possible ways 
jsj partially colored graphs transformed equivalent system gamma jsj gamma gamma variables solved calling sys 
algorithm runs time jsj gammaj gamma sufficiently large algorithm choose natural number construct beigel eppstein set mod jsj color cth coloring lexicographical ordering form corresponding system bm jsj run sys nondeterministic choices dictated coloring mol 
function hg ai jgj return brute force hf fm hb return max fm sketch robson purely recursive dtime algorithm independent set 

independent set 
robson algorithm best published purely recursive algorithm independent set problem due robson runs time sufficiently large section construct dsr leaves algorithm 
obtain mol algorithm independent set problem 
section jgj represent number nodes graph opposed max 
input robson algorithms triple properties jsj 
output size largest independent set containing elements robson algorithm sketched 
robson algorithm produces series new problems produces tuple integers 
loss generality may assume graphs fm fewer nodes graph unroll recursion sat 
robson know polynomial time computable returns size largest independent set 
define hg ai oe hg jgj jg oe denote computation tree algorithm input define follows time upper bounds robson hg jgj jsj hg jgj jsj hg graph nodes hg ai definitions 
proof theorem algorithms ms ms robson faster dynamic programming algorithm independent set hopeful adapting molecular computing 
molecular computing may motivate search efficient recursive algorithms dynamic programming 
function ind hg ai jgj return brute force hf fm hb return true return ind gamma decision procedure corresponding robson 
know max jt oe delta delta delta fm easy transform algorithm dsr generalization independent set problem 
section easy transform function decision procedure ind precise ind ai ki true function ind 
graph independent set consisting vertices ind hg true 
define ai ki oe hg ai oe hg ffl hf fm ffl hb ffl hhf gamma hfm gamma ii 
recursive algorithm returns true undefined 
pair hh oei dsr independent set problem 
easy see oe oe define 
jt oe jt oe delta delta delta fm hf fm gamma delta delta delta fm gamma independent set problem belongs rec independent set problem mol 

acknowledgments grateful william patience reading suggestions improving presentation 
grateful hirst helpful discussions ingo sharing preliminary draft 
special go ogihara unknown referees comments greatly improved presentation 
adleman 
molecular computation solutions combinatorial problems 
science nov 
adleman 
constructing molecular computer 
proceedings st dimacs workshop dna computers pages 
american mathematical society 
dimacs series discrete mathematics theoretical computer science vol 

bach condon glaser 
dna models algorithms np complete problems 
proceedings th annual conference structure complexity theory pages 
beaver 
universal molecular computer 
proceedings st dimacs workshop dna computers 
american mathematical society 
dimacs series discrete mathematics theoretical computer science vol 

beigel eppstein 
coloring time mis algorithm 
proceedings th ieee symposium foundations computer science pages 
beigel fu 
molecular computing bounded nondeterminism efficient recursion 
proceedings th international colloquium automata languages programming pages 
lncs 
beigel goldsmith 
downward separation fails limited nondeterminism classes 
proceedings th annual conference structure complexity theory pages 
boneh lipton 
breaking des molecular computer 
proceedings st dimacs workshop dna computers 
american mathematical society 
dimacs series discrete mathematics theoretical computer science vol 

boneh lipton sgall 
computational power dna 
discrete applied math 
buss goldsmith 
nondeterminism 
alvarez tor 
complexity classes complete problems np complete 
foundations computation theory pages 
springer verlag 
lncs 
tor 
classes bounded nondeterminism 
mst 
goldsmith levy mundhenk 
limited nondeterminism 
sigact news pages june 
jha 
upward downward separation 
inf 
comp 
kari 
dna computing arrival biological mathematics 
mathematical 

computations restricted number nondeterministic steps 
phd thesis pennsylvania state university university park pa 
fischer 
computations restricted number nondeterministic steps 
proceedings th annual acm symposium theory computing pages 
fischer 
refining nondeterminism relativized polynomial time bounded computations 
feb 

approach sat decision yielding sat decision steps 
manuscript available mi informatik uni frankfurt de 
lipton 
dna solve np complete problems 
science apr 
meyer paterson 
frequency apparently intractable problems difficult 
technical report mit lcs tm 
monien 
solving satisfiability steps 
discrete applied math 
ogihara 
breadth search sat algorithms dna computers 
technical report university rochester july 
papadimitriou yannakakis 
limited nondeterminism complexity dimension 
proceedings th annual conference structure complexity theory pages 
reif 
parallel molecular computation models simulations 
proceedings seventh annual acm symposium parallel algorithms archi pages 
robson 
algorithms maximum independent sets 
algorithms 
roos wagner 
power bio computers 
technical report university feb 
ftp informatik uni de pub trs ro wa ps gz 
roos wagner 
power dna computing 
information computation 

dna restriction enzyme implementation turing machines 
proceedings st dimacs workshop dna computers pages 
american mathematical society 
dimacs series discrete mathematics theoretical computer science vol 

fritsch maniatis 
molecular cloning 
cold spring harbor ny 

constructing language instances partial information 
international jour 

comp 
sci 

solving satisfiability steps 
th 
computer science logic pages 
springer verlag 

pure literal lookahead satisfiability algorithm 
manuscript august 
schnorr 
optimal algorithms self reducible problems 
proceedings rd international colloquium automata languages programming pages 
smith schweitzer 
dna computers vitro vivo 
technical report nec 
tarjan 
finding maximum clique 
technical report cornell university 
watson gilman 
recombinant dna nd edition 
scientific american books freeman 
watson roberts molecular biology gene 
benjamin menlo park ca 

