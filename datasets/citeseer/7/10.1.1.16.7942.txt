maximizing throughput replicated disk striping variable bit rate streams department computer science duke university cs duke edu kenneth sevcik department computer science university toronto cs toronto edu michael stumm dept electrical computer engineering university toronto stumm toronto edu system ering demand real time streaming media files data striping array disks improve load balancing allowing higher disk utilization increased system throughput 
cause complete service disruption case disk failure 
reliability improved adding data redundancy reserving extra disk bandwidth normal operation 
interested providing fault tolerance media servers support variable bit rate encoding formats 
higher compression ciency respect constant bit rate encoding significantly reduce user resource requirements cost increased resource management complexity 
time interaction storage system fault tolerance variable bit rate streaming deterministic qos guarantees investigated 
implement prototype server experimentally evaluate detailed simulated disk models alternative data replication techniques disk bandwidth reservation schemes 
show minimum reservation scheme introduced single disk failures tolerated cost reduced throughput normal operation disk array moderate size 
examine benefit load balancing techniques proposed traditional storage systems find limited improvement measured throughput 
striping media files multiple disks advantage keeping disks implicitly load balanced 
part research done author phd student university toronto 
financial support natural sciences engineering research council canada gratefully acknowledged 
concurrent sessions playback asynchronously started di erent parts file accessed di erent disks 
result longer necessary replicate media files popularity leads lower resource requirements system administration cost 
disadvantage disk striping decreased system reliability media files left partially inaccessible disks fail 
causes service disruption users served disk array moment failure 
contrast entire file stored single disk users accessing files failed disk negatively affected 
previous addressed general problem disk array reliability data redundancy techniques allow recovery inaccessible data 
techniques successfully extended handling case striped media files 
known analytical experimental subject limited streams constant bit rates cbr assumes stochastic admission control 
variable bit rate vbr encoding video considerably reduce size generated media files compared constant bit rate encoding equivalent perceptual quality 
addition knowledge resource requirements stored streams transmission leveraged better predicting access delays ering deterministic qos guarantees 
striping vbr streams previously studied remains unclear increased reliability provided deterministic qos guarantees cost ective ways 
variability resource requirements time cient disk space allocation combined access delay predictability challenging task 
data striping multiple disks su cient clients server network interface client buffer decoder network interface server buffer network disks compressed video streams stored multiple disks media server 
multiple clients proxies connect start playback sessions separate network links 
tolerate failures aggravates problem due need keeping balanced storage space bandwidth requirements disk array normal operation failed disk conditions 
describe number data redundancy bandwidth reservation schemes tolerate single disk failures service interruption 
experimentally evaluate cost increased reliability terms reduced throughput normal operation system video server prototype implementation mpeg streams 
investigate achieved disk bandwidth utilization normal failed disk operation 
additionally examine extra benefit retrieving data replicas stored loaded disks fragmenting data replicas multiple disks 
rest organized follows 
section describe basic assumptions architectural decisions system 
sections introduce alternative policies replicating stream data reserving disk bandwidth improved reliability 
section briefly prototype implementation experimentation environment 
section compare performance di erent replication techniques alternative bandwidth reservation schemes load balancing enhancements 
section discuss possible improvements extensions section summarize 
system architecture section describe system architecture important resource management reservation techniques 
overview operation media server typical current system designs 
client devices submit playback requests concurrently server 
system assumed operate server push model 
playback session starts server periodically sends data client stream reached client explicitly requests suspension playback 
data transfers occur rounds fixed duration round round appropriate amount data retrieved disks set server bu ers reserved active client 
concurrently data sent server bu ers client network interfaces 
amount stream data periodically sent client determined decoding frame rate stream bu ering constraints receiver resource management policy network 
minimum requirement client receive round amount data needed decoder round 
streams compressed encoding scheme supports constant quality quantization parameters variable bit rates 
playback requests arriving clients initially directed admission control module determined resources exist activate requested playback session immediately limited number rounds 
schedule database maintains stream information data needs accessed disk round amount server bu er space required data needs transferred client 
scheduling information generated media stream stored admission control transfer data playback 
stride disk space allocation experiments method called allocation allocating disk space 
stride allocation disk space allocated large fixed sized chunks called strides 
strides chosen larger maximum stream request size disk round 
size known priori stored streams accessed sequentially predefined generally variable rate 
stride may contain data round 
stream retrieved requested amount data fetched memory round entire stride 
stride allocation eliminates external fragmentation due fixed size strides 
internal fragmentation remains negligible large size streams relative strides 
advantage stride allocation sets upper bound estimated disk access overhead retrieval 
size stream request exceeds stride size round partial stride accesses required serve request round disk 
reservation server resources mathematical abstraction resource requirements necessary scheduling streams 
consider system functionally equivalent disks 
data stream stored sequences strides disk 
stride comprises integer number consecutive logical blocks fixed size logical block size multiple physical sector size disk 
disk transfer requests memory bu er reservations specified multiples block size disk striping sequence sd length determines amount data retrieved disk round assume disk edge edge seek time single track seek time average rotational latency minimum internal transfer rate disk stride disk space allocation policy enforces upper bound disk arm movements disk client round 
total seek distance limited circular scan disk scheduling policy 
number active streams round system operation round system operation playback stream started 
total access time disk round system operation approximated expression disk disk disk striping sequence client parameter counted twice due disk arm movement scan policy factor second term due stride allocation scheme 
term accounted time reservation disk client incurs extra access time disk disk disk round zero 
reservations network bandwidth bu er space straightforward network bu er sequence accepted playback request respectively 
variable grain striping striping stream data multiple disks variable grain striping policy 
data consumed client playback round stored accessed single disk di erent disks visited round robin fashion successive rounds stream playback 
compared alternative striping techniques striping demonstrates significant performance advantage due reduced disk access overhead accessing disk stream round ii improved disk bandwidth utilization statistically multiplexing requests di erent sizes concurrently served streams 
data redundancy policies due large number components involved necessary assume device failures lifetime typical commercial server installation 
estimated mean time failure modern disk mttf disk hours combining disks results mttf array mttf disk days assuming failure independence di erent devices 
typical system drives support concurrent mbit average bit rate 
disks distributed multiple independent servers building single large disk array distributed components demonstrated past media streaming services 
order provide higher system reliability data redundancy techniques 
practical solution minimize extra computa calculation assumes seagate cheetah gb ultra scsi disks mb formatted minimum internal transfer rate 
numbers realistic light popularity similar services 
example number cable television subscribers estimated exceed 
copy disks kd round stream primary copy backup deterministic replica placement 
data media file stored consecutively disk retrieved di erent playback rounds replicated round robin disks 
primary data disks replicated similar way 
tion storage bandwidth requirements respect non redundant case 
study focuses single disk failures common 
multiple disk failures occur simultaneously possible ways handling described briefly 
past parity techniques proposed store error correcting code data blocks di erent disks 
disk fails redundant information available surviving disks recover missing data blocks 
parity techniques trade extra disk bandwidth memory bu er requirements reduced storage space 
disk storage space currently lowest cost resources suggested replication parity preferred technique tolerating disk failures 
furthermore implementation parity data recovery distributed architecture requires additional data tra di erent nodes 
introduce significant extra complexity resource requirements terms network bandwidth bu er space 
reasons consider parity techniques 
mirroring techniques data disk replicated di erent disks 
refer original copy data primary additional copy backup 
copies symmetrically distinct placement policies applied describe shortly 
disk fails data remain available retrieving backup replicas rest disks 
required storage space roughly doubled needed bandwidth disk twice non redundant case 
copy disks kd round stream primary copy backup random replica placement 
data media file stored consecutively disk retrieved di erent playback rounds replicated randomly chosen disks 
primary data copies disks replicated similar way 
backup replica data block stored entirety di erent disk requires access case failure minimizes access overhead 
alternative declustering backup replica multiple disks potentially better balance extra access load incurs additional overhead multiple accesses case disk failure 
deterministic replica placement previous demonstrated striping media files leads equally utilized disks sequential playback workloads 
mirroring previously data striped fixed size blocks principle applied variable grain striping 
sequential playback media file failed disks disk accessed rounds total number disks 
order preserve load balancing property disk fails data media file stored consecutively disk replicated round robin remaining disks subset 
unit replication corresponds data retrieved client round playback call mirroring approach deterministic replica placement 
example disk shown store stream data requested rounds respective replicas distributed round robin disks 
random replica placement intuitively having replicas disk primary data distributed round robin rest disks keep surviving disks equally utilized disk fails 
alternative replication approach primary backup mirroring reservation 
disk separate vector indexed round number accumulates total estimated access time retrieving primary backup data round 
pseudo random sequence specifying disks store backup copies disk primary data 
obvious constraint primary backup copies stored di erent devices 
unit replication corresponds data media file requested client round playback 
call mirroring technique random replica placement 
example shown backup copies data requested rounds 
randomly placed disks 
previously suggested random placement primary backup replicas di erent disks applicable wider range workload types outperform striping policies roundrobin placement 
section examine argument particular case variable bitrate streams comparing deterministic replica placement 
disk bandwidth reservation goal section allocate resources manner service accepted requests interrupted single disk failures 
retrieving backup replicas data stored failed disk requires extra bandwidth reserved advance surviving disks 
implies system normally operate full capacity 
alternatively disk fails extra bandwidth reserved service unavailable number active users aggregate bandwidth requirements transfer capacity disk assuming data replicated described previously 
net benefit uninterrupted service disk failures equal di erence measures 
cost having users frustrated primary backup max reservation round access time backup primary minimum reservation 
disk maintain separate vectors indexed round number 
accumulates access delays retrieving primary data 
remaining vectors accumulate access delays retrieving backup replicas correspond primary data stored disks 
round sum primary data access time maximum backup data access times reserved disk 
due interrupted service failed disk 
quantification require determining minimum number users negatively ected disk fails 
detailed study issue left 
measure cost rejecting user requests due additionally reserved disk bandwidth normal operation 
rest describe alternative approaches reserving disk bandwidth equivalently access time improving reliability media servers support variable bit rate streams 
subsequently experimentally evaluate actual cost approaches terms reduced system throughput normal system operation 
call mirroring reservation disk bandwidth reserved primary backup replicas media file playback 
glance reasonable approach guaranteeing timely access backup replicas single disk failure 
compared non redundant case doubles bandwidth requirements stream halves maximum system throughput assuming disk bandwidth bottleneck resource system 
prefer load normally handled failed disk equally divided surviving disks 
tolerating disk failure require extra replica disk bandwidth reservation placement mirroring minimum deterministic random table replica placement policies orthogonally combined disk bandwidth reservation schemes 
bandwidth reserved disk equal bandwidth capacity 
mirroring reservation reserves extra bandwidth disk equal half bandwidth capacity 
essentially wasteful reserve disk extra bandwidth accessing backup replicas primary data stored disk 
disk fails need estimate additional access load incurred surviving disk 
order know access time backup replicas stored disk accumulated separately disk stores corresponding primary data 
additional access time reserved disk round equal maximum time required retrieving backup replicas disk failed 
maximum disk reserved don know advance disk going fail 
disk implementation maintains vectors indexed round number system operation 
vectors keeps track total access time required retrieving primary data 
remaining vectors keep track access delays due backup data corresponding primary data remaining disks 
disk reserve sum primary data access time maximum backup data access times required round 
refer cient scheme minimum reservation 
example disks illustrated 
section discuss ways limiting additional computational memory requirements approach 
disk bandwidth reservation schemes just described orthogonally combined replica placement policies introduced previously shown table 
load balancing enhancements load failed disk possibly shared fairly surviving disks backup replica declustered multiple devices 
break backup replica blocks fixed size call load balancing technique backup replica declustering 
choose integer multiple logical block size introduced previously 
allow fragment replica size smaller integer multiple backup replica blocks corresponding primary data disk distributed roundrobin pseudo randomly rest disks depending deterministic random replica placement 
case random replica placement improve block distribution avoiding reusing disk storing multiple replica blocks file round running disks 
multiple blocks size retrieved disk round file playback minimum required number read requests submitted disk block 
alternatively normal operation take advantage multiple available data replicas dynamically deciding retrieve replica stored disk expected loaded 
disk choice access time estimations available resource reservations admission control 
term dynamic balancing technique 
fully applied disks functional expected reduce load heavily utilized disks round 
techniques previously improve performance applied traditional transaction processing workloads 
replica declustering tried constant bit rate stream playback 
due potential load imbalance reduced device utilization introduced variable bit rate streams investigate benefit load balancing techniques context 
experimentation environment order keep presentation complete briefly describe important aspects prototype implementation characteristics benchmarks performance evaluation method experiments 
prototype overview designed built media server experimentation platform order evaluate resource requirements alternative disk replication policies 
di erent modules implemented lines pthreads code aix 
seagate cheetah st data bytes drive gb average sectors track data cylinders data surfaces zones bu er size kb track track seek read write msec maximum seek read write msec average rotational latency msec internal transfer rate inner zone outer zone burst mbit inner zone outer zone sustained mb table features seagate scsi disk assumed experiments 
code linked university michigan disk simulation package incorporates advanced features modern disks disk cache zones simulated disk access time measurements hardware disks raw device interfaces 
indexing metadata stored regular unix files operation kept main memory 
basic responsibilities media server include file naming resource reservation admission control logical physical metadata mapping bu er management disk network transfer scheduling 
appropriate configuration parameters system operate di erent levels detail 
admission control mode system receives playback requests admission control resource reservation actual data transfers take place 
simulated disk mode modules functional disk request processing simulated specified disk array 
techniques file system simulation similar previously proposed integrating simulated disks media server prototype 
full operation mode system accesses hardware disks transfers data fixed client network addresses 
experiments current study admission control simulated disk mode 
performance evaluation method assume playback initiation requests arrive independently poisson process 
system load controlled arrival rate playback initiation requests 
assuming disk transfers bottleneck consider perfectly cient system incurs disk overhead accessing data 
choose maximum arrival rate max playback re content avg bytes max bytes cov type round round round science fiction music clip action talk show adventure documentary table mpeg video streams minutes duration 
coe cient variation shown column changes content type 
quests equal mean stream completion rate perfectly cient system 
creates system load show performance benefit arbitrarily cient data striping policies 
mean stream completion rate expressed streams round streams average data size tot bytes disk round tot streams round 
corresponding system load max playback request arrives admission control module checks available resources exist round playback 
test considers data transfer requirements requested playback round corresponding available disk transfer time network transfer time bu er space system 
request initiated round test repeated round rounds round requested playback started guaranteed su ciency resources 
checking rounds achieves potential system capacity shown previously 
accepted request rejected kept queue 
experimentation setup di erent vbr mpeg streams minutes duration 
stream frames resolution bit color depth frames second frequency ib pb pb pb pb frame group pictures structure 
encoding hardware generates bit rates mbit mbit statistical characteristics clips table 
coe cients variation bytes round lie depending content type 
mixed benchmark di erent number disks mirroring reservation replication deterministic random mirroring reservation scheme reduces number streams supported factor compared replication case 
deterministic replica placement sustains advantage relative random replica placement mixed stream workload 
number disks number streams minimum reservation replication deterministic random minimum reservation number disks increasing throughput advantage deterministic random replica placement drops 
corresponding throughput disadvantage deterministic placement respect replication drops 
streams submitted round robin 
appropriate experimental results individual stream types shown 
disks assumed experiments seagate cheetah ultra wide scsi interface features shown table 
disks state art years ago basic architectural characteristics today high drives 
logical block size set kb bytes physical sector size equal bytes 
stride size disk space allocation set mb 
server memory organized bu ers fixed size kb bytes space mb extra disk 
available network bandwidth assumed infinite leaving contention network outside scope current 
experiments round time set equal second 
round length achieve system capacity tolerable initiation latency 
choice facilitates comparison previous second rounds 
warmup period rounds calculated average number active streams round round 
measurements repeated half length confidence interval estimated mean value number active streams 
system load fixed allows system reach capacity keeping playback startup latency limited 
experimental evaluation compare data replication bandwidth reservation techniques introduced respect average number active playback sessions supported server 
objective number high possible 
provide supplementary performance intuition statistics reserved utilized disk access time different stream types numbers disks 
start performance comparison deterministic random replica placement policies mirroring reservation scheme 
subsequently examine improvement placement policies minimum reservation applied 
investigate benefit dynamic balancing assuming disk bandwidth round reserved data replica available 
consider declustering backup replica stream multiple disks allocating bandwidth minimum reservation scheme 
replica placement comparison mixed stream workload compare performance alternative replica placement policies mirroring reservation scheme 
number disks varying measured throughput replicated disk striping reserved disk time round action adventure science fiction music clip talk show documentary number disks replication deterministic random primary backup disk time reserved round individual stream types minimum reservation 
deterministic replica placement disk time reserved backup accesses drops round length number disks increases 
random replica placement respective percentage drops 
disk time round minimum reservation replication deterministic random reserved primary reserved backup measured failed disk measured normal disks normal operation average disk access time measured round remains time reserved primary data accesses 
disk fails measured access time lower total reserved 
half achieved replication 
addition deterministic replica placement achieves throughput advantage relative random replica placement 
measurements shown half average disk time reserved replicated case wasted possibility backup data retrieved 
furthermore access time reserved disk random replica placement deterministic placement 
pseudo random choice disk stores backup replica completely eliminate possibility disk storing replicas especially small disk arrays 
probability occurring drops size disk array increases 
deterministic placement consistent fairly distributing access load disk array devices 
disk fails reserved disk bandwidth remains unused placement policies 
surprising mirroring reservation scheme allocates disk bandwidth primary backup replicas accepted stream 
see ine ciency alleviated minimum reservation scheme subsection 
minimizing reserved bandwidth minimum reservation scheme improves disk utilization allocating disk extra time required accessing backup replicas disk 
order ensure single disk failure handled properly disk keeps track reserves maximum additional time required handling potential failure disk 
maximum requirement calculated separately generally expected di erent disk round 
compares throughput di erent replica placement policies minimum reservation 
disks number streams supported deterministic placement lower replication 
di erence respectively sixteen disks 
way disk bandwidth allocated minimum reservation scheme expect total bandwidth remains unutilized normal operation equal bandwidth capacity disk 
percentage unused throughput respect non replicated case decreasing proportionally number disks system 
example ideally disks total disk bandwidth remain unused normal operation 
practice percentage total unused bandwidth disk change proportionally number disks figures 
ect explained max operator applied estimated time accessing backup replicas di erent disks combina tion relatively large size half megabyte average data retrieved stream round 
explore potential improvement declustering backup replicas multiple disks 
additionally di erence deterministic random replica placement significant statistical uncertainty disks 
surprisingly deterministic placement maintains clear advantage smaller disk array sizes due regular way distributing backup replica access load di erent devices 
observations consistent average access time reserved disk di erent stream types disk array sizes shown 
show measured disk busy time 
normal disk operation observe deterministic placement keeps disks busy amount time lower reserved primary data 
disk fails remaining disks busy time total reserved 
random replica placement corresponding di erence round length 
significant improvement comparison di erence reserved measured time reported mirroring reservation 
keep mind disk array size equal third disk bandwidth reserved case disk fails fraction drops disk array size increases sixteen 
interesting reserved backup access time put due disk failure di erence reserved utilized access time increases 
glance discrepancy appears reduced accuracy access time estimation 
fact due max operator apply backup access times corresponding di erent disks round 
reserves access time ensure uninterrupted system operation particular failed disk 
reported measured time taken disk assumed inaccessible 
believe limited discrepancy predicted measured access time leaves reasonable cushion space stable operation 
system operation robust guards nondeterministic factors sys previous reported similar di erences average reserved time access time measured hardware disks table simulated models 
number disks number streams dynamic balancing deterministic random replication normal operation accessing replica loaded disk improves throughput respect non replicated case 
gain tends increase disk array size increases 
tem bus contention due network transfers included previous measurements 
improving load balancing multiple data replicas available better load balancing achieved choosing replica stored loaded disk admission control 
case leverage data replication improving system throughput tolerating disk failures 
accumulated disk access time estimations order choose loaded disk 
making choice actual measurement disk access load feasible alternative due round operation prevents access load propagation round 
see load balancing scheme replica placement policies support streams case 
di erence placement policies statistically insignificant gain dynamic replica access exceeds improved load balancing deterministic placement 
determining admission control disk data access reasonable policy removing hot spots disk array 
sequential workloads different disks equally utilized limited additional performance benefit accrued policy 
consider case declustering backup replicas multiple disks fixed block size bytes number streams backup replica declustering declustering disks deterministic random backup replica divided blocks specified size distributed multiple disks 
minor gain applying backup replica declustering deterministic placement best throughput achieved random placement approaches deterministic 
horizontal lines correspond throughput achieved declustering applied replica placement policies respectively 
block size approach expected failed disk load fairly shared surviving disks 
small block sizes better load balancing leads limited throughput improvement 
block size larger load balancing gets successively worse throughput decreases declustering creates fragments sizes increasingly di erent 
anticipate larger block sizes number disks accessed stream drops total head movement overhead lower 
hand stride allocation scheme ensures head movements required stream disk regardless small block size keeps limited negative ect access overhead throughput 
observe threshold behavior bytes 
maximum amount data retrieved round stream originates bit rate parameters encoding table 
ectively point declustering 
observations verified shows average di erence access times loaded disk round 
reserved access time heavily loaded disk typically round plots essentially indicate ac block size bytes disk time max min round backup replica declustering disks deterministic random average di erence expressed round length percentage reserved access times loaded disk round varies declustering block size 
di erence interpreted measure load imbalance round 
shape see significant ect achieved throughput shown 
cess time requirements loaded 
remarkable shape plots reflected tracking system throughput 
conclude loaded disk expected remain utilized deterministic replica placement declustering equivalently declustering block size larger 
summary declustering worthwhile small declustering block sizes benefit limited media streaming case disks 
throughput random replica placement exceeds deterministic 
discussion considered data replication bandwidth allocation schemes allow tolerating single disk failures disk arrays storing variable bit rate streams 
simple schemes reserving disk bandwidth half maximum achievable throughput wasted normal failure operation 
minimum reservation scheme accommodating single disk failure results throughput reduction disk array sizes sixteen larger 
minimum reservation scheme requires maintaining number vectors equal square number disks 
vector accessed circular fashion minimum length equal longest stream expressed numbers rounds 
large disk arrays raise concerns regarding computational memory requirements involved 
practice reduction unused bandwidth diminishing number disks increases sixteen 
sense apply data replication disk groups limited size disk array size larger 
keeps bookkeeping overhead limited preserves scalability method stream data striped large disk arrays 
previous striping data fixed size blocks achieves lower throughput variable grain striping 
backup replica declustering confused block striping primary data variable grain striping 
maintains benefit multiplexing requests di erent transfer sizes round absorbs correlations create maximum requirements higher average 
provisioning vcr functionality important issue don consider extensively 
general flexibility require deallocation previously reserved resources stream playback suspended stopped earlier normal termination 
done straightforward way accumulating disk access delays separately primary backup data replicas described 
techniques extended straightforward ways handling multiple disk failures 
require storing multiple backup replicas making bandwidth reservations failed disk 
servers consisting multiple nodes failure entire node handled gracefully keeping disk node separate disk group limiting replication group 
node fails inaccessible data disks retrieved replicas available disks corresponding groups 
related previous disk array fault tolerance done context traditional file server transaction processing workloads 
bitton gray show mirrored disks improve performance addition providing enhanced reliability 
hsiao dewitt describe chained declustering replicates database relation consecutive disks workload balanced system static load balancing algorithm 
merchant yu propose di erent stripe sizes di erent data replicas 
system operation cient small transaction requests ad hoc queries large parts relation 
previous throughput measured disk striping variable bit rate streams increase linearly function number disks 
described design decisions server prototype implementation 
system throughput improved disk bandwidth requirements individual streams smoothed di erent playback rounds high disk bandwidth utilization achieved homogeneous heterogeneous disks 
system reliability crucial issue building infrastructure commercial services 
addressing issue creates strong case storage variable bit rate streams results indispensable part previous published 
related media server research focused fault tolerance techniques striping constant bit rate streams 
disks grouped clusters data blocks separate disks cluster combined parity block form parity groups 
blocks parity group considered retrieved transmitted multiple rounds parity blocks stored data disks dedicated parity disks 
improving ciency certain data blocks transmitted transition period disk failure 
propose reading ahead data blocks entire parity group prior transmission client 
data block accessed reconstructed parity block read 
alternatively entire parity group retrieved time block accessed 
balanced incomplete block designs constructing parity groups keep load disk array balanced 
dynamic reservation scheme introduce minimizes extra bandwidth reserved disk reconstructing failed disk data blocks 
biersack compare performance measures alternative data mirroring parity techniques tolerating disk node failures distributed video servers 
entire data blocks disk replicated di erent disks half total bandwidth disk reserved handling disk failure case 
wasted throughput critically reduced minimum reservation scheme propose 
tewari study parity redundancy techniques tolerating disk node failures clustered servers 
distributing parity blocks object random permutation certain disks keep balanced system load disk fails 
alternatively flynn replicate data blocks non intersecting permutations disk groups 
multiple available data blocks dynamic balancing disk bandwidth utilization di erent devices 
birk examines selectively accessing parity blocks video streams better balancing system load multiple disks 
failures video servers supporting variable bitrate streams shenoy vin apply lossy data recovery techniques rely inherent redundancy video streams error correcting codes 
alternatively propose advantage sequential block accesses playback reconstructing missing data surrounding available blocks cost initial playback latency temporary disruption failure occurs 
bolosky decluster block replicas disk disks 
case disk failure extra bandwidth required retrieving data failed disk shared disks 
consider providing faulttolerant support multiple streams di erent bit rates 
experience declustering add significant improvement respect case replicating data blocks disk entirety di erent disks 
mourad describes doubly striped disk mirroring technique distributes replica blocks disk round robin rest disks 
system load equally distributed surviving disks case disk failure 
deterministic replica placement describe extends doubly striped mirroring handling variable bitrate streams reduced device utilization potentially introduce 
santos compare disk striping data replication randomly chosen disks 
constant bit rate streams conclude random replication outperform disk striping replication 
comparison variable bitrate streams advantage deterministic replication random replication diminishes number disks increases 
studied issues related data replication variable bit rate streams striped multiple disks improving system reliability performance 
introduced minimum reservation scheme minimized wasted throughput required keeping accepted uninterrupted disk failure 
moderate disk array sizes throughput lower achieved replication 
deterministic placement backup data achieve better performance random placement di erent disks advantage insignificant number disks increases 
retrieving data replica stream stored loaded disk adds improvement respect non replicated case 
declustering backup replicas multiple disks considerably improve performance achieved deterministic replica placement 
supporting variable bit rate streams scalable continuous media server 
phd thesis department computer science university toronto june 
sevcik stumm disk striping scalability media server 
acm spie multimedia computing networking conference san jose ca jan pp 

sevcik stumm modular cient resource management media server 
usenix symposium internet technologies systems san francisco ca mar pp 

sevcik stumm server smoothing variable bit rate streams 
acm multimedia conference ottawa oct pp 

berson ghandeharizadeh muntz ju staggered striping multimedia information systems 
acm sigmod conference minneapolis mn may pp 

berson muntz fault tolerant design multimedia servers 
acm sigmod conference san jose ca may pp 

birk random raids selective exploitation redundancy high performance video servers 
international workshop network operating system support digital audio video japan may pp 

bitton gray disk shadowing 
large data base conference los angeles ca aug pp 

bolosky barrera draves fitzgerald gibson jones levi rashid tiger video fileserver 
international workshop network operating system support digital audio video japan apr pp 

bolosky fitzgerald douceur distributed schedule management tiger video fileserver 
acm symp 
operating systems principles saint malo france oct pp 

chang zakhor cost analyses vbr video servers 
ieee multimedia winter 
chen lee gibson katz patterson raid high performance reliable secondary storage 
acm computing surveys june 
general information cable tv regulation 
fact sheet federal communications commission june 
www fcc gov csb facts html 
flynn disk striping block replication algorithms video file servers 
ieee international conference multimedia computing systems hiroshima japan june pp 

biersack modeling performance comparison reliability strategies distributed video servers 
ieee transactions parallel distributed systems apr 
ganger worthington patt simulation environment version manual 
tech 
rep cse tr department electrical engineering computer science university michigan ann arbor michigan dec 
gray shenoy rules thumb data engineering 
ieee international conference data engineering san diego ca feb pp 

lewis tra shaping bandwidth allocation quality assessment mpeg video distribution broadband networks 
ieee network nov dec 
schmuck tiger shark file system 
ieee compcon feb pp 

holland gibson parity declustering continuous operation redundant disk arrays 
acm conference architectural support programming languages operating systems boston ma oct pp 

hsiao dewitt chained declustering new availability strategy multiprocessor database machines 
ieee international conference data engineering los angeles ca feb pp 

lakshman ortega reibman vbr video tradeo potentials 
proceedings ieee may 
merchant yu analytic modeling comparisons striping strategies replicated disk arrays 
ieee transactions computers mar 
mourad doubly striped disk mirroring reliable storage video servers 
multimedia tools applications may 
rastogi shenoy silberschatz fault tolerant architectures continuous media servers 
acm sigmod conference montreal canada june pp 

patterson gibson katz case redundant arrays inexpensive disks raid 
acm sigmod conference chicago il june pp 

santos muntz ribeiro neto comparing random data allocation data striping multimedia servers 
acm sigmetrics conference santa clara ca june 
cheetah xl product manual 
seagate technology feb 
www seagate com cda products enterprise family html 
shenoy vin failure recovery algorithms multimedia servers 
acm multimedia systems journal jan 
tewari dias mukherjee vin high availability clustered multimedia servers 
ieee international conference data engineering new orleans la feb pp 

thekkath wilkes lazowska techniques file system simulation 
experience nov 
tobagi pang baird gang streaming raid disk array management system video files 
acm multimedia conference anaheim ca aug pp 

