parametric quantitative temporal reasoning allen emerson richard computer sciences department computer engineering research center university texas austin usa define parameterized real time computation tree logic prtctl allows quantitative temporal specifications parameterized natural numbers 
parameterized quantitative specifications quantitative specifications concrete timing information abstracted away 
abstraction allows designers specify quantitative restrictions temporal ordering events having specific timing information model 
model checking algorithm logic polynomial fixed number parameters 
subclass formulae identified model checking problem linear length formula size structure 
prtctl generalized allow quantitative reasoning number occurrences atomic events 
pnueli pn pioneered temporal logic language describing behavior reactive systems hp 
qualitative temporal logics pltl pn ctl ce example express properties temporal ordering events general regard quantitative measure elapsed time occurrences events 
real time temporal logics jm ah acd emss generally quantitative logics beh beh cater expression quantitative bounds occurrence events :10.1.1.16.6599
logics allow operators form af meaning inevitably event occur time steps 
constants case problematic requiring detailed knowledge specific timing information design design information may change frequently design moves completion 
parameterization quantitative specifications type abstraction allows system designer express quantitative information valid entire design process 
example may known exactly delay process sends request resource server receives request expected takes twice amount time requester receive resource server 
type specification expressed parameterized real time computation tree logic prtctl ag request af receive ag request af deltax supported part nsf ccr src contract dp contact author richard computer sciences dept tay university texas austin tx usa cs utexas edu fax 
says natural number takes steps request received server takes delta steps requester receive server 
different purely qualitative ctl specification ag request ag request simply says inevitable requests received inevitable requests granted 
furthermore parameterization need specifying exactly long takes requests received 
prtctl allows parameterization natural numbers show model checking problem ce qs logic reduced checking finite number instances parameterized formula 
number instances depends size model checked 
leads model checking algorithm time complexity jm jf number parameters jm size jf size large class formulae complexity lowered linear size formula size structure 
prtctl formula monotone parameter put positive normal form appears exclusively modalities form exclusively modalities 
formula monotone monotone parameters 
show model checking problem monotone formulae solved time jm jjf 
describe algorithm solving prtctl model checking problem timed structures 
discrete timed structure allows transitions labeled natural numbers 
show largest transition label prtctl formulae parameters model checked timed structure time jm jf prtctl quantitative logics designed expression quantitative properties concerning number transitions number time units represented transitions occurrence event 
logics naturally express quantitative measures number occurrences independent events 
define give model checking algorithms general parameterized ctl jm beh beh allows quantitative parameterization occurrence events 
example af response says inevitable response issued occurrences request 
request af response says bound number requests issued response seen guaranteed formula ag request 
numerous models computation proposed modeling real time systems see ah survey 
models tend extensions kripke structures add clocks timers transitions labeled time values discrete dense time domains 
sophisticated models circumstances accurate models real time systems simpler structures 
systems appropriate level abstraction verification temporal properties conventional kripke structure 
example interleaving model true concurrency realistic assumption board embedded systems 
hardware may quite limited single multiprogrammed processor sequential processes running concurrently viewed sufficient level granularity 
argue may necessary useful verify quantitative temporal properties sophisticated models computation 
rest organized follows 
section prtctl defined semantics 
section gives model checking algorithms logic monotone subclass formulae 
section extends logic model checking algorithms timed models computation 
section contains discussion model checking algorithms logic 
section contains short comparison 
prtctl section contains description logic prtctl related logics ctl 
convenience generating formulae prtctl 
denote set natural numbers ap denote finite set atomic propositions 
ctl set formulae formed boolean operators temporal modalities au af ag eu ef 
details refer em 
formulate logic superscripts form allowed path operators example ag formula 
extends allowing variables linear combinations variables constants superscripts 
ag example formula 
prtctl formulae formed follows formula prtctl variable appears free xf af xf af formulae prtctl 
formula positive normal form pnf iff operators appear front atomic propositions boolean operators sentences formulae free variables logics semantics relative kripke structures 
kripke structure tuple set states theta left total transition relation ap labeling function 
oe full path iff denotes state structure satisfies formula signifies state ctl usual definition branching time operators structures see em details 
modalities semantics recursive rules 
ffl iff paths oe exists ffl ag iff paths oe ffl iff exists path oe exists ffl iff exists path oe formulae prtctl added definition 
ffl xf iff 
ffl af iff 
ffl xf iff exists 
ffl af iff exists 
proposition qx af sentence prtctl 
af iff af iff 
proposition shows prtctl formulae quantifiers range finite sets seen shorthands formulae 
sequel abbreviated 
proposition shows set prtctl sentences semantically closed negation 
proposition prtctl sentence 
sentence iff model checking prtctl ctl model checked time jm jjf 
show model checking problem prtctl decidable give algorithm solving problem 
algorithm runs time jm jf number distinct parameters fixed number parameters problem polynomial size formula structure 
practice expect useful formulae parameters algorithms said efficient 
model checking problem parameterized formulae reduced finite state problem showing xf xf determined checking finite set instances form natural number bigger size theorem finite kripke structure prtctl sentence 
iff jsj 
proof induction number quantifiers 
quantifiers theorem holds vacuously 
iff iff jsj 
formula interpreted short hand set formulae quantifiers replaced jsj shown emss jsj iff jsj :10.1.1.16.6599
jsj iff jsj 
iff exists iff exists jsj 
formula interpreted short hand set formulae quantifiers replaced jsj shown jsj iff jsj 
exists jsj iff jsj 
theorem shows replace jsj jsj 
fact theorem strengthened replace jsj jsj jsj emss showed formula model checked time jm jjf :10.1.1.16.6599
leads immediately corollary 
sequel show complexity substantially reduced monotone formulae 
corollary prtctl formula parameters model checking problem solved time jm jm jjf 
proposition formula positive normal form parameter structure state ffl parameterized operators eu au iff jsj 
ffl parameterized operators eu au jsj iff exists jsj 
ffl parameterized operators ag jsj iff jsj 
ffl parameterized operators ag iff exists jsj 
theorem prtctl formula positive normal form structure 
parameterized operators mentioning iff appears operators appears operators jm appears operators jm appears operators 
theorem immediately gives rise corollary 
corollary monotone prtctl formula model checking problem solved time jm jjf 
timed structures timed kripke structures enhance structures previous sections labeling transitions states integer values 
example transition state state time units 
theta theta sequel clear distinction timed untimed structures 
ctl modalities exactly meaning timed untimed structures modalities oblivious arc labels 
defined relevant timed modalities state timed structure particular note ef modalities defined terms ex case ctl emss ah ce :10.1.1.16.6599
modalities seen shorthands modalities leave explicit mention 
ffl iff path oe ffl iff path oe proposition shows model checking problem timed modalities reduced modalities quantities bigger length longest simple path structure proposition emss timed structure finite state set jsj max fm nj rg :10.1.1.16.6599
ffl iff ffl iff show model checking problem timed modalities solved efficiently discrete timed structures 
theorem timed structure model checking problem solved time jm theorem timed structure model checking problem solved time jm 
corollaries direct consequence model checking complexity algorithms checking individual modalities semantics parameterized formulae 
corollary timed structure largest natural number labeling transition prtctl sentence parameters model checking problem solved jm jf 
corollary timed structure largest natural number labeling transition monotone prtctl sentence model checking problem solved time jm jf 
event sensitive parametric reasoning previously parameters prtctl formulae referred passage time measure number transitions path 
transition represented unit time 
useful able count number events number times proposition occurs path 
enhance prtctl formulae ability refer detailed analysis shows problem solved time jrj jsj log largest transition label clr 
independent events propositions 
example af send response says futures response occurs occurrences send ap var 
atomic expression ae form delta delta methods outlined sequel sufficient handle arbitrary boolean combinations ap place simplicity discuss expressions defined 
expression atomic expression positive boolean combination expressions 
formulae general parametric ctl formulae prtctl combined modalities eu au ag expression semantics untimed structures new operators follows 
ffl iff path oe gamma ffl iff paths oe gamma ffl iff path oe gamma ffl ag iff paths oe gamma ffl delta iff positions 
ffl iff ffl iff refer expression variable appears 
refers expression replaced show satisfaction event quantified modalities restricted consideration simple paths 
proposition jsj hold 
ffl iff jsj ffl iff jsj ffl iff jsj ffl ag iff ag jsj model checking atomic event quantitative modalities done completely analogous manner model checking timing properties theorems 
ap theorem model checking problem equ deltap solved time jm 
model checking problem deltap solved time jm 
complex modalities problem decidedly complex 
theorem expression variables 
model checking problem np complete 
model checking problem np complete 
theorem corollaries direct consequence semantics parameterization previous proposition 
theorem finite structure sentence 
iff jsj 
corollary formula parameters atomic exponents model checking problem solved jm jm jjf 
corollary formula model checking problem solved jm jf jf 
apply results monotone formulae model checking problem 
proposition sub formula positive normal form quantifiers structure state ffl parameterized operators eu au iff jsj 
ffl parameterized operators eu au jsj iff exists jsj 
ffl parameterized operators ag jsj iff jsj 
ffl parameterized operators ag iff exists jsj 
theorem formula positive normal form structure 
parameterized operators mentioning iff appears operators appears operators jm appears operators jm appears operators 
corollary monotone formula atomic superscripts model checking problem solved time jm jjf 
prtctl parameterized quantitative temporal logic efficient model checking algorithm large subclass logic 
prtctl extension allows expression quantitative formulae expressed standard quantitative logics parameterization 
ahv shows parametric reasoning possible restricted class parameterized timed automata general problem undecidable 
parameterization directly terms automaton definition 
wa defines parametric version tctl acd uses characterize parameter valuations timed automaton satisfy instantiated tctl formula 
characterization terms set linear equations 
wa shows parametric timing analysis problem solvable time double exponential size timed automaton structure 
approach restrictive type structure different kind parameterized formula 
specifically allow clocks arcs labeled elements dense domain definition structures allow quantification parameter values allowed 
differences able show substantial improvement complexity give standard model checking approach problem evaluating parameterized formulae structures 
note approach amenable recovering instantiations parameters formula holds structure exist ahv wa 
algorithms prtctl timed structures untimed structures 
analysis prtctl draws directly enhances emss particularly theorem :10.1.1.16.6599
shown model checking problem np complete case parameters 
sentences atomic superscripts fixed number parameters model checking problem solvable time polynomial size structure 
differs logic called freeze quantifiers acd ah 
freeze quantification type local quantification parameterization global quantification 
obvious translation prtctl tctl remains interesting open question 
fact express quantitative properties independent actions differentiates logic literature 
computation number occurrences event monotonically non decreasing may may increase rate 
type independence allowed acd exact restrictions somewhat different papers 
logics defined general combine full power arithmetic temporal logics avoid increased complexity model checking associated added power beh beh 
ahuja mehlhorn orlin tarjan faster algorithms shortest path problem 
technical report mit operations research center 
acd alur courcoubetis dill model checking real time systems 
proceedings th annual symposium logic computer science ieee computer society press new york pp 

ah alur henzinger really temporal logic 
proceedings th annual symposium foundations computer science 
ieee computer society press new york pp 

ah alur henzinger logics models real time survey 
real time theory practice de bakker huizing 
de roever rozenberg eds lecture notes computer science vol 
springer verlag new york pp 

ahv alur henzinger vardi parametric real time reasoning 
proceedings fifth annual acm symposium theory computing acm 
beer ben david eisner rulebase industry oriented formal verification tool 
rd design automation conference acm 
beh bouajjani verification problem nonregular properties nonregular processes 
ieee lics pp 

beh bouajjani verifying infinite state processes sequential parallel composition 
acm popl pp 

campos clarke computing quantitative characteristics finite state real time systems 
ieee real time systems symposium 
ce clarke emerson design verification synchronization skeletons branching time temporal logic logics programs workshop ibm yorktown heights new york springer lncs pp 
may 
clr cormen leiserson rivest algorithms mit press 
em allen emerson temporal modal logic 
van leeuwen editor handbook theoretical computer science vol 
elsevier science publishing 
em allen emerson real time calculus 
proceedings real time theory practice lncs vol 
pp 
springer june 
emss emerson mok sistla srinivasan quantitative temporal reasoning :10.1.1.16.6599
cav computer aided verification 
clarke kurshan eds 
lecture notes computer science vol 

springer verlag new york pp 
journal version appears journal real time systems vol 
pp 

emerson generalized quantitative temporal reasoning automata theoretic approach 
tapsoft theory practice software development bidoit dauchet eds 
lecture notes computer science vol 
springer verlag berlin pp 

hp harel pnueli development reactive systems 
logics models concurrent systems 
apt ed 
nato advanced summer institutes vol 

springer verlag pp 

jm jahanian mok safety analysis timing properties real time systems 
ieee transactions software engineering se 
pn pnueli temporal logic programs th annual ieee cs symp 
foundations computer science pp 

qs sifakis specification verification concurrent programs cesar proc 
th int 
symp 
prog springer lncs pp 

se seidl modal calculus durational transition systems 
eleventh annual ieee symposium logic computer science ieee computer society press 
wa wang parametric timing analysis real time systems 
information computation vol 
pp 

yang mok wang symbolic model checking event driven real time systems 
acm transactions programming languages systems vol 

