sf fc neighbor state flow control soft fairness tamura tobe tokuda yq graduate school media governance faculty environmental information keio university endo fujisawa japan tobe sfc keio ac jp audio video stream applications internet require network performance perfect reliability 
applications employ congestion control shut tcp flows restricting buffering 
internet small local community impossible rely developers incorporate congestion control internet applications 
network take part controlling resource utilization 
research fair queuing tend focus reducing processing overhead achieving exact fairness flow 
claim perfect fair queuing effective users current complicated network environment 
propose soft fair flow control sf fc light weight router mechanism employs simple fifo queuing shows high performance fair queuing 
sf fc provides fair network resource allocation non adaptive adaptive flows 
router informs upstream sf fc router link state 
received state sf fc dynamically sets packet discard rate non adaptive flows 
internet various network applications share network resources flow control needs combined congestion control 
years congestion control relied mechanisms provided transmission control protocol tcp 
tcp congestion control efficient flow cooperate fairness achieved flows research conducted fund promotion agency japan ipa 
congestion control algorithm 
hand internet realtime streaming applications run user datagram protocol udp individual flow control improving performance 
integrated service resource reservation protocol rsvp differentiated service important provide quality service qos guarantees applications 
network resources limited impossible qos demands applications 
guarantee qos considering fairness 
unfair sharing adaptive flows different segment size packets round trip time rtt problem compared unfair sharing adaptive non adaptive flows 
controlling nonadaptive flows appropriately internet disciplined environment 
tcp friendly schemes important non tcp flows congestion control keep fairness tcp flows 
flow control inside network necessary hosts may intentions 
reason favorable control flows router design network network administrator standpoint 
various types fair queuing deficit round robin drr proposed 
easily deployed backbone environment thousands flows complexity increases number flows 
fair scheduling done output links efficient control applications hard estimate especially complicated network environment may pass multiple routers 
propose soft fair flow control sf fc network administrator standpoint 
soft fair means achieve strict flow fairness drr 
sf fc non adaptive flow controlled flow state downstream router solves wasted allocation problem current fair queuing 
sf fc achieves highly efficient fair bandwidth allocation bandwidth non adaptive flows 
organized order 
section covers problem current queuing models 
sections propose scheme implementation 
section compares sf fc queuing models 
sections include discussion works followed 
problems current fair queuing fair queuing specify mechanism single router define cooperation routers 
flows pass router reach final destination hop fair queuing provide aimed performance users 
cases flows pass multiple routers different policy network bandwidth 
guarantee allocated bandwidth upstream router allocated downstream router 
assume flow arrives final destination fair queuing routers 
number flows share output link th router represented fn bandwidth output link bw equation shows gross bandwidth allocated flow denotes max 
wasted allocation bw fn bw fn cbr source tcp source cbr sink tcp sink tcp sink tcp sink tcp source fq fq fq mbps mbps tcp source mbps link link link 
test environment show example 
assume constant bit rate cbr flow passes fair queuing routers seen 
link mbps bandwidth shared tcp flows flow cbr flow 
link mbps bandwidth shared tcp flows flow cbr flow 
link mbps bandwidth shared tcp flows flow cbr flow 
shows bandwidth utilization flows link 
cbr flow utilized different amounts bandwidth link 
link fair share bandwidth final throughput cbr flow mbps means wasted allocation link link 
oe wo ww tm tm tm ws woe wy tm tm tm tm 
wasted allocation neighbor state soft fair flow control section describe design soft fair flow control sf fc 
sf fc designed neighbor state queuing 
sf fc expands flow control achieve higher performance fairness non adaptive adaptive flows 
sf fc consists principal elements 
ffl sf fc manager exchanges status nonadaptive flow neighboring routers 
ffl sf fc estimator identifies non adaptive adaptive flows estimates status 
ffl sf fc controls sending rate discarding packet non adaptive flows 
estimate maintain flow status table shows variables sf fc maintains 
non adaptive adaptive flows identified protocol field ip header 
calculate number active flows 
ae ae calculated condition flow received downstream router measurement result variables 
detailed calculation ae ae section 
negotiation neighboring routers sf fc manager downstream router monitors packet arrival quantity packet departure quantity regular intervals 
sf fc manager informs link state upstream router output link congested buffer overflow causes packets dropped 
mechanism searching neighboring router shown 
sf fc manager checks entry incoming flow 
entry exists sf fc manager ip address 
entry exist sf fc manager broadcast neighboring discovery packet ndp 
response neighboring sf fc managers ndp resent source host flow 
ndp special protocol identifier passes router supports sf fc received going final address 
router receives ndp answers back router sent 
time flow entry searched flow entry exists receive reply receive reply broadcast neighbor discovery packet send neighbor discovery packet source address create entry create entry timeout return ip address flow entry set 
searching neighbor routers flow control mechanism basic discard rate bdr fair bandwidth fb keywords flow control sf fc 
final packet discard rate ae calculated bdr fb 
ffl bdr packet discard rate non adaptive flows calculated exceed packet departure quantity downstream router 
ffl fb bandwidth allocated nonadaptive flows consideration fairness adaptive flows 
calculation basic discard rate notification downstream router sf fc calculates bdr non adaptive flow 
explain calculation method bdr 
time time packet dropped 
flow flow 
basic discard rate estimation increasing bdr assume ae packet discard rate flow time router relationship packet arrival quantity packet departure quantity shown eq 

packet drop occurs due network congestion router time router increases ae reduce packet departure quantity 
ae router notifies router assume notified packet arrived router time router calculate packet discard rate ae packet drop router time follows ae ae table 
estimate variables symbol estimate variable type flow fl arrival packet quantity unique adaptive flows packet arrival time flow adaptive non adaptive flows arrival packet quantity flow non adaptive flows departure packet quantity flow non adaptive flows ae arrival packet regulation adaptive flows ae packet discard rate non adaptive flows router know exact value recognize packet dropped router order avoid problem take regular number history router set mean value basic discard rate bdr updated regular interval desirable set larger value network delay downstream router 
bdr increased exponential averaging shown eq 
bdr ff ae ff decreasing bdr describe previous section sf fc manager informs link state upstream router buffer overflow causes packets dropped 
sf fc manager receive link state information packet downstream routers regular interval sending quantity increased fixed quantity eq 

network traffic reduced packet drop downstream router regular value upstream router reduces packet discard rate eq 

bdr ae calculation fair bandwidth non adaptive flows controlled efficiently upstream router uses bdr 
internet adaptive flows conduct flow control hosts 
sf fc needs consider coexistence non adaptive adaptive flows 
fb amount bandwidth non adaptive flows utilize calculated advance avoid utilization bandwidth 
final packet discard rate ae calculated fb bdr 
number active non adaptive flow nn number active adaptive flow counted sf fc 
value bandwidth allocated non adaptive flow calculated eq output link bandwidth bandwidth non adaptive flows calculated eq packet arrival quantity packet discard rate ae nn nn nn bottleneck downstream link possibility adaptive flow allocated bandwidth 
case better allocate unused bandwidth non adaptive flows 
change rate ae arrival packet quantity adaptive flow monitored eq 
change rate stabilized available bandwidth allocated non adaptive flows 
adaptive flows yield bandwidth non adaptive flows impossible adaptive flows invade unfairly occupy bandwidth 
sf fc sure non adaptive flows exceed fair share limit pushing away adaptive flows 
fb calculated basis eq 
ae fi fl fl fi fb fl ae max min fair allocation bandwidth allocated flow calculated fb bdr 
final packet discard rate ae calculated allocated bandwidth arrival packet quantity 
max min estimate buffer count allocation buffer count allocation rest count rest count max min estimate rest count nn na nn nn 
max min estimate function max min estimate function allocates fb non adaptive flow 
denote ffi allocated fair bandwidth non adaptive flow ae calculated ffi evaluation section evaluate sf fc performance simulation 
simulations performed ns simulator 
evaluate performance sf fc compared sf fc fifo drr 
repeat experiment times seconds take mean value data 
link delay ms buffer kb 
tcp implementation bsd compatible way tcp tcp reno 
packet payload size byte 
delayed ack enabled 
tcp udp source udp sink tcp sink mbps mbps mbps mbps mbps 
simulation network topology performance fairness compare performance fairness simulated configuration shown 
bandwidth link connected udp sink set mbps 
total flows share links 
experiments flow cbr transfer rates mbps 
shows throughput flow flows udp 
sf fc allocates fair bandwidth cbr differs drr requiring multiple queues complicated scheduling 
shows throughput tcp flow udp flows 
shows throughput tcp udp flows 
fifo sf fc allocate fair bandwidth tcp flows 
fifo non adaptive flows udp degrade tcp performance substantially 
tcp phenomenon serious problem 
fifo depending input rate udp unfair sharing occurs udp flows 
simulation results see performance sf fc drr similar 
sf fc processes multiple adaptive flows group fairness achieved adaptive flows different segment size rtt 
regarding performance fairness drr shows excellent performance 
performance link sharing simulation environment previous section assumed ideal environment fair queuing routers 
links network link bandwidth shared number flows 
reality environment hardly exists usually bottleneck occurs network congestion narrow bandwidth 
simulated sf fc performance bottleneck downstream link 
details shown bandwidth link connected udp sink set mbps 
simulation result shown 
drr sf fc amount udp throughput sf fc shows higher performance tcp throughput 
due fact downstream bottleneck sf fc avoids bandwidth allocation wasteful packets upstream router 
simulated performance sf fc wide area network environment shown 
mbps udp flow passes routers 
udp sink connected bottleneck link mbps 
tcp flows share links connected routers 
tcp sources connected gn transmit data tcp sink connected 
mean value tcp transfer rates shown 
fifo bandwidth occupied udp tcp low transfer rate 
seen sf fc achieves highest performance 
oe oe oo oo oe oo oe wwww wwww wwww www www 
performance flow cbr flows oe oe oo oo oe oo oe wwww wwww wwww www 
performance flow tcp flow cbr flows oo oe oo ss oo oe ww sw oe 
performance flow tcp flows cbr flows oe oe oo oo oe oo ss oo oe sw oe 
simulation result udp source tcp source udp sink tcp sink tcp sink tcp sink tcp source tcp source bottleneck link mbps mbps mbps mbps mbps mbps 
simulation network topology oo 
oo 
oo oo oo 
simulation result discussion simulation results introduce complete fair queuing drr complicated network environment effective performance improvement network applications 
sf fc purposes 
waste resources useless traffic 
preventing network resource adaptive flows occupied non adaptive flows 
achieved lightweight processing sf fc showed higher performance current queuing models 
discussions works sf fc designed network administrator standpoint 
sufficient protocol field ip header identify non adaptive adaptive flows 
field controlled hosts modified intentionally 
need incorporate function identifies flows network level monitoring characteristic inter arrival time duration time throughput flows 
credit flow control rate congestion control similar sf fc conduct hop hop flow control 
different sf fc aim avoid packet loss caused buffer overflow atm networks 
sf fc previous approach upstream router instantly discards wasted packet non adaptive flows link state information downstream routers 
sf fc consider fairness non adaptive adaptive flows allocating bandwidth 
summary multimedia services video audio stream internet manifold various protocols begun run ip 
key problem environment allocate limited bandwidth flow application qos requirements 
problems need considered provision fairness effective utilization entire network 
research fair queuing tend focus reducing processing overhead achieving exact fairness flow 
claimed perfect fair queuing effective users current network environment 
proposed soft fair flow control achieves fair network resource allocation nonadaptive adaptive flows 
sf fc allocates bandwidth considering flow state downstream routers 
sf fc avoids allocating network resource wasted packets dropped downstream router 
result sf fc improves performance user application heterogeneous network environment 
acknowledgment authors grateful members keio rt hdi project valuable comments criticisms 
clifford mercer anonymous nossdav reviewers comments suggestions helped improve quality 
supported japan society promotion science research fellowships young scientists 
postel ed 
user datagram protocol 
rfc august 
postel ed 
transmission control protocol darpa internet program protocol specification 
rfc september 
padhye modeling tcp throughput simple model empirical validation 
proceedings acm sigcomm september 
blake architecture differentiated services 
rfc december 
floyd fall 
promoting toend congestion control internet 
ieee acm transactions networking august 
kung blackwell chapman 
flow control atm networks credit update protocol adaptive credit allocation statistical multiplexing 
proceedings acm sigcomm may 
mena heidemann 
empirical study real audio traffic 
proceedings ieee infocom march 
mishra kanakia 
hop hop congestion control scheme 
proceedings acm sigcomm august 
ucb lbnl vint network simulator ns version 
www mash cs berkeley edu ns 
varghese 
efficient fair queueing deficit round robin 
proceedings acm sigcomm october 
tamura tobe tokuda 
queuing adaptive bandwidth sharing 
proceedings ieee icnp november 
zhang deering estrin shenker zappala 
rsvp new resource reservation protocol 
ieee network september 
