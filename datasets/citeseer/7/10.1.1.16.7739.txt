eurographics gross guest editors subdivision surface tesselation fly versatile mesh data structure kerstin ller sven institute tu braunschweig germany volume number subdivision surfaces standard technique freeform shape modeling 
intuitive permit designers flexibly add detail 
larger control meshes efficient adaptive rendering techniques indispensable interactive visualization shape modeling 
realization tesselation fly loop subdivision surfaces part framework interactive visualization 

polygonal meshes received considerable attention years due progress diverse fields just mention progressive meshes multiresolution analysis mesh compression 
world polygons 
need represent complicated freeform shapes led subdivision surface representation 
fact subdivision surfaces reduce freeform modeling mesh modeling 
overcoming known restrictions tensor product surfaces subdivision surfaces virtually polygonal mesh control mesh freeform object 
rapidly converging subdivision rules quickly produce accurate resolution needed designers freely manipulate control mesh add local detail including fancy features sharp creases starting smooth surface 
subdivision surfaces powerful tool design complex shapes complexity poses serious problem interactive applications 
popular subdivision schemes number faces increases factor subdivision step 
exponential growth number faces subdivision depth accurate uniform tesselation moderately big control mesh impractical 
useful number subdivision steps range tesselation results faces toplevel face control mesh 
faces invisible 
holding complete tesselation memory optimized culling algorithms maintain eurographics association blackwell publishers published blackwell publishers cowley road oxford ox jf uk main street ma usa 
ing interactive display rates alternative approach tesselation fly producing faces needed scene camera configuration 
example covering display triangles average result triangles containing pixels pixels diameter 
triangles small produce perceivable detail interactive applications 
interactive display triangles fact possible low cost hardware 
problem remaining find appropriate triangles represent scene 
point subdivision surfaces seen adaptive rendering method mesh 
large control mesh goal interactive subdivision surface rendering visibly important parts higher resolution important parts 
rendering method integral feature mesh reasonable manifest orthogonality design data structures 
allows combine different mesh representations different subdivision schemes 
advantage library mesh data structures algorithms independently extended plugging interactive subdivision surface rendering needed 

motivation fast interaction large scale dimensional environments typically requires combination different techniques 
famous approaches efficient interaction polygonal models progressive meshes pms specifically version view dependent refinement dynamic simplification hds 
general frameworks fast interaction composed different building blocks multiresolution model representation scheme measures visibility display accuracy fast line update active scene part active scene coarser version original scene visibly unimportant distant small parts model collapsed accuracy measure 
active part scene updated frame making temporal coherence position orientation viewer 
implies fast evaluation accuracy measures fast update active scene database crucial prerequisites maintaining interactive frame rate frames second 
approaches triangular worlds polygonal representations important drawbacks highest model resolution limited priori accuracy original scene 
obvious solution switch different model representation replacing polygonal primitives sort freeform surface 
important step direction kumar showed tesselation fly cope models represented trimmed nurbs 
incrementally converting nurbs zier patches subsequently fps possible scene complexity zier patches disadvantage nurbs require control mesh regular structure 
furthermore stitching nurbs patches straightforward maintaining geometric continuity neighbouring patches severely constraints positions control vertices 
shortcomings remedied subdivision surfaces 
loop subdivision surfaces permit manifold triangle mesh serve control mesh freeform object 
catmull clark scheme polygonal object convex faces arbitrary degree taken represent complicated freeform shape 
surface continuity built subdivision rules designers don features know trimmed nurbs 
subdivision surfaces possible sharp edge start smooth surface 
ability subdivision surfaces digest polygonal mesh opens possibility apply aforementioned sophisticated frameworks interaction complex polygonal environments subdivision surface control mesh 
important building block integrated system large freeform worlds ability subdivision surface patch extremely fast resolution needed 
second neighbouring faces different subdivision depths ller subdivision fly common border cracks appear 
tesselation fly may multiresolution representation control mesh develop fully integrated schemes 
spatial coherence updating active part control mesh caching faces incrementally adjusting tesselation quality needed 

subdivision schemes noted principle polygonal mesh serve control mesh subdivision surface 
focusing popular subdivision schemes loop catmull clark fundamental requirement mesh locally manifold may boundaries 
schemes subdivision implies shrinkage subdividing face produces sub faces share corner position parent face 
fortunately schemes closed expressions exist project vertex produced level subdivision limit surface infinite subdivision process mathematical tool derive formulae eigenanalysis subdivision matrix closed expressions tangent vectors limit surface derived limit surface normal obtained analytically 
principle subdivision scheme closed expressions limit points limit surface normals algorithmic framework tesselation fly 
loop subdivision surfaces chosen example triangle scheme 
combine mesh representation loop subdivision faces degree higher triangulated preprocessing step 
triangulation done care shape freeform surface invariant different triangulations 

loop subdivision surfaces performing subdivision step triangle result cf 
fig 
vertices sub faces classified edge vertex points parent triangle 
computed affine combinations vertices parent face neighborhood called vertex masks edge masks 
level vertex valence neighbors new vertex level new neighbors computed vertex edge rules eurographics association blackwell publishers 
ller subdivision fly regular triangle neighborhood indices taken modulo andw cos 
corresponding masks shown fig 

vertex mask edge mask process iterated recursively mesh converges smooth limit surface vertex toplevel control mesh corresponds point limit surface 
position point tangent vectors limit surface computed affine combination vertex neighbors ti cos ni ti ti ni ti ti 
tesselation fly concise straightforward na method visualize subdivision surface sketched recursive procedure 
algorithm blow mesh exponentially saving intermediate results new faces vertices computes vertices times 
worse individual triangles sent graphics pipeline triangle strips waste bus bandwidth 
tesselation charges processor eurographics association blackwell publishers 
lot multiprocessor environments split largely independent threads 
procedure face depth depth create face sub ace depth sub ace depth sub ace depth sub ace depth compute limit surface points normals render triangle opengl summary algorithm tesselation fly ideally features dynamic storage allocation producing triangle strips parallelizable tesselation doesn write mesh kari pulli mark segal tesselation method properties called sliding window method observation subdividing pair adjacent triangles time efficient produces upper lower row triangles 
iterating scheme produces triangle strips double length subdivision level directly rendered vertex normal arrays opengl 
arrays triangle strip may subsequently overwritten computing rendering strip row 
idea attractive interactive rendering system fact scheme applied quad subdivision instance catmull clark scheme 
sliding window method operates preprocessing step mesh partitioned triangle pairs 
consequently algorithmic framework re catmull clark type subdivision surface rendering simply plugging different subdivision rules 
fact quadrangle strips identical triangle strips opengl level possible type opengl vertex arrays schemes optimize performance 
generic framework subdivision surface tesselation realizes opengl geometry engine api proposed pulli segal triangle pair time neighborhood read mesh dedicated tesselation thread working independently 
finished main thread standard opengl owns opengl context needs collect results hand computed vertex arrays opengl driver 
triangle pair processed individually possible subdivision depth vary face face implementing adaptive tesselation fly simpler uniform tesselation 
heuristics needed telling approximation accuracy needed triangle pairs 
strategy part tesselation engine worked independently 
sliding window method candidate implementing subdivision surface tesselation hardware 
requires simple strategies avoiding cracks neighboring pairs different tesselation depths 
problems addressed sections 

heuristics choice subdivision depth tesselation realtime achieved higher accuracy greater subdivision depth assigned visibly important faces 
context accuracy coarse grained number triangles tesselation increases powers cases extreme close ups subdivision depth ranges integral values cull face away sub triangles 
properties influence importance visibility distance eye point projected size limit surface curvature limit surface criteria independent 
limit surface distant faces usually occupies fewer pixels projected image plane faces nearby 
face near object silhouette may high curvature leaves hardly trace buffer 
course effort subdivide faces occluded limit surface completely wasted 
control mesh hardly possible compute measures exactly time consecutive frames 
appropriate heuristics 
projected size triangular face computed fast cases bad estimate size limit surface projection 
hand convex hull vertices face neighbourhood guaranteed bounding volume limit surface tight 
quality parameter coarse grained chose rough estimate projected size patch size bounding sphere triangle vertices divided distance viewpoint 
strategy called project sphere 
view dependent measures visual importance object measures 
estimate accuracy needed tesselation adequately represent limit surface shape normal cones 
measure variation normal patch main normal angle computed bounds deviation normals patch main normal 
ller subdivision fly hand permits classify patch completely front facing tagged visibly important silhouette patch deviation angle taken rough estimate curvature patch directly influencing subdivision depth necessary accurate tesselation 
computing normal cone subdivision surface elementary inexpensive 
computing curvature points corners curved limit surface simpler faster practice yields looking results 
subdivision depth fact directly computed curvature specifying advance maximal angle tolerated limit vertex normal incident sub triangle triangle control mesh vertices assigned minimal depth value ni cos ni limit surface normal vertex vi andn face normal sub face incident vertex corresponding vi subdivision level computation done looping vertices 
vertex neighborhood copied vertex mask structure cf 
fig 
left 
limit surface normal computed vertex back facing depth value set 
subdivision performed inplace vertex mask normals incident sub triangles entered normal cone depicted fig 

normal cone subdivision steps prescribed deviation varied classification vertex 
faces corner normals point backwards classified back patches displayed 
completely front facing patches need high resolution tesselation silhouette patches eurographics association blackwell publishers 
detected comparing vertex normal cones 
unfortunately loop subdivision surfaces derived cubic splines counterexamples strategy 
visible artifacts observed practice 

pairing strategy sliding window method efficiently triangle mesh partitioned triangle pairs 
pairing step performed greedy algorithm 
proven correct pulli segal may optimal behaves practice 
modified take account varying face depths preferably grouping triangles equal depth values 
triangle inserted disjoint sets containing free triangles 
triangle called free iff paired 
boundary vertices may neighbors closed mesh triangles inserted set 
free neighbors free neighbors free neighbors free neighbors algorithm attempts create pairs triangles nonempty set highest priority 
highest lowest priority algorithm 
empty 
take triangle nonempty set highest priority 
look free partner free neighbors neighbor take neighbors depth highest priority neighbor highest priority depth depth max depth depth remove insert pair list remove mark unpaired singleton 
increase neighbor priorities move neighbors move neighbors triangle moved move triangles neighbors result partition mesh triangle pairs created triangles pair subdivision depth possibly modifying previously assigned depth values 
singletons eurographics association blackwell publishers 
ller subdivision fly created typically percent 
list triangle pairs ready delivered sliding window method efficient tesselation 

sliding window method sliding window method operates triangle pair time 
unpaired singleton triangles assigned dummy partner visualized 
typically exist doesn introduce performance problem 
multithreaded environment instances algorithm active parallel 
triangle pair corners vertex positions possibly irregular neighborhood collected mesh copied different arrays points 
arrays fixed size depends level subdivision 
consequently allocated statically thread reused triangle pair 
fig 
shows freshly filled arrays level right start tesselation 
corner corner top corner corner bottom pair triangles neighborhood copied arrays vectors core algorithm shown pseudocode 
procedure level top bottom corner corner corner corner level perform subdivision step save new points arrays level level 
subdivide upper row level top middle bottom corner corner subdivide lower row level middle bottom top corner corner compute limit points normals render triangle strip opengl ller subdivision fly top bottom top middle bottom top middle bottom final top normals final top points final bottom points final bottom normals levels subdivision sliding window method 
better readability corner arrays left 
corner vertices faces held arrays top bottom neighborhood copied corner corner 
newly computed points level saved eleven arrays indexed subdivision level top middle bottom corner corner 
arrays hold neighbors left right array middle 
structure computation visualized fig 

size arrays essentially doubles level level 

space time consumption order statically allocated arrays fixed size maximal vertex valence limited 
value nmax sufficient practice higher occur special cases 
mentioned eleven arrays needed level arrays top middle bottom length arrays corner corner length nmax 
subdividing levels uses number vectors nmax nmax complete number vectors necessary perform subdivisions 
results computation limit points top bottom limit surface normals stored interleaved fashion opengl vertex array normal array 
efficiently rendered triangle strip normals 
additionally arrays length needed nmax nmax single pair triangles rendered triangle strips points number normals computed 
time needed calculate vertex constant fact depends valence number calculations nmax nmax nmax linear number limit points nmax nmax 
crack prevention special care taken borders triangle pairs different subdivision depths 
fig 
shows typical setting grey triangles black neighbors 
singleton triangle lower left example subdivided right neighbor depth 
cracks appear grey triangles degrees freedom border black ones 
repair cracks tesselation scheme producing triangle fans shown fig 

grey triangle subdivided maximal neighbor depth collecting vertices triangle border respective neighbor subdivision levels 
create triangle fan triangle center added tesselation 
part mesh cracks 
unfortunately triangle point barycentric ordinates center vertex produces unwanted 
example fig 

significantly eurographics association blackwell publishers 
part mesh repaired cracks 
better results achieved triangle center projected limit surface 
triangle center reached successive subdivision appear vertex triangle finite subdivision depth 
repairing nonconvex artifacts triangle center left projecting triangle center limit surface right 
consequently different technique obtain center limit position 
stam limit surface triangle loop scheme expressed closed parametric form 
triangle extraordinary vertices vertices valence twelve control points influence shape limit surface matrix containing vertices face neighborhood index scheme fig 

vector contains twelve polynomial basis functions barycentric coordinates providing weights control points 
definition appendix 
sufficient consider regular case eurographics association blackwell publishers 
ller subdivision fly sion step vertices central triangle valence cf 
fig 

regular triangle neighborhood 
subdivision step inner triangle regular subdivision step doesn cause overhead vertices computed needed repairing cracks anyway 
evaluating basis functions bi center coordinates yields weights limit surface normal center point cross product tangent vectors 
obtained partial derivatives basis functions ct evaluating partial derivatives parameter values results weight vectors limit surface tangents crack prevention scheme positional discontinuities resolved limit surface normal center vertex remedies color discontinuities 
vertices introduced gouraud shading produces looking results seen color plates 

results timings taken rotating series bumpy spheres faces 
bumpy sphere created bunch random unit vectors computing triangulation unit sphere randomly varying length vector choosing value 
increasing number random vectors extremely curved models created distance variation neighbouring mesh vertices correlated 
effect demonstrated 
bumpy spheres toplevel faces tables fig 
show effective frame rates single threaded test target machines 
sgi onyx dual pipe ii graphics board employing mips running mhz 
second machine standard pc mhz pentium iii geforce graphics board mb ddr ram 
main memory issue test 
machines different tests show behaviour pc faster factor 
compared onyx 
fancy opengl features gouraud shading disabled single light source active 
frames second onyx frames second pc project sphere curvature project sphere uniform uniform project sphere curvature project sphere uniform uniform frame rates onyx standard pc tables show uniform tesselation behaves worse adaptive tesselation fly crack prevention done ii test scene clustered bad example adaptive ller subdivision fly tesselation 
result validates central thesis article adaptive tesselation pays 
diagrams show curvature increases number random vertices combined strategy tend assign higher subdivision depth faces 
fact strategy preserves object detail better project sphere heuristic 
diagrams fig 
show numbers opengl triangles drawn number toplevel triangles culled away culling heuristic 
percentage decreases due bumpy structure model 
combined strategy increasing curvature takes prevents project sphere heuristic introducing artifacts 
opengl triangles percentage project sphere curvature project sphere uniform uniform numbers sub triangles 
shown interactive applications moderately optimized implementation adaptive tesselation fly loop subdivision surfaces produce triangles frame faces triangle mesh frame rate fps standard pc 
generated proposed combination heuristics accurately reproduce limit surface geometry point perceivable difference adaptive high depth uniform 
tesselation module designed geometry engine fashion plugged rendering module pair triangles respecting tesselation quality neighbouring triangles 
encouraging results remains eurographics association blackwell publishers 
done 
confident achieve speedup factor optimizing order computations 
evaluation heuristics instance projected size patch directly integrated sliding window method 
second design information stored single frame exploit temporal coherence 
fly aims interactive applications control mesh subject change due continuous level techniques cases control mesh change completely frame 
development caching strategies results preceding frames tesselation pairing subdivision depth heuristics challenge software design trigger development new integrated algorithms interactive freeform visualization 
appendix parametric basis functions limit surface regular triangle face loop subdivision expressed parametric form wherec control point matrix index scheme fig 

barycentric coordinates sum unity consequently coordinate tuple substituted 
substitution vector polynomial basis functions eurographics association blackwell publishers 
ller subdivision fly 
ed catmull clark 
recursively generated spline surfaces arbitrary topological meshes 
computer aided design september 

hoppe 
progressive meshes 
siggraph 
conference proceedings pages 
acm sig graph august 
hoppe 
view dependent refinement progressive meshes 
siggraph conference proceedings 
acm siggraph 

kumar 
interactive rendering parametric spline surfaces 
phd thesis unc chapel hill 
ftp ftp cs unc edu pub publications techreports ps 
loop 
smooth subdivision surfaces triangles 
phd thesis department mathematics university utah 

luebke 
view dependent simplification arbitrary polygonal environments 

siggraph conference proceedings 
graph 
kari pulli mark segal 
fast rendering subdivision surfaces 
technical report university washington 

jos stam 
evaluation loop subdivision surfaces 
siggraph conference proceedings cdrom 
acm siggraph july 

jos stam 
exact evaluation catmull clark subdivision surfaces arbitrary parameter values 
sig graph conference proceedings pages 
acm siggraph july 

zorin schr der 
subdivision modeling animation 
siggraph 
siggraph course notes 
acm ller subdivision fly demonstration crack prevention 
subdivision depth randomly assigned 
right picture shows effect culling heuristic 
object rotated show missing triangle pairs back 
curvature dependent assignment subdivision depth values 
right additionally normal vectors necessary computation curvature dependent subdivision depths shown 
eurographics association blackwell publishers 
