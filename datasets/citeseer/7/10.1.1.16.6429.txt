appears proceedings sigir workshop recommender systems new orleans la september content boosted collaborative filtering prem melville raymond mooney nagarajan department computer sciences university texas austin tx mooney cs utexas edu recommender systems collaborative filtering content methods predict new items interest user 
methods advantages individually fail provide recommendations situations 
incorporating components methods hybrid recommender system overcome shortcomings 
elegant ective framework combining content collaboration 
approach uses content predictor enhance existing user data provides personalized suggestions collaborative ltering 
experimental results show approach content boosted collaborative filtering performs better pure content predictor pure collaborative lter naive hybrid approach 
discuss methods improve performance hybrid system 

recommender systems help overcome information overload providing personalized suggestions history user likes dislikes 
line stores provide recommending services amazon cdnow imdb prevalent approaches building recommender systems collaborative filtering cf content cb recommending 
cf systems collecting user feedback form ratings items domain exploit similarities di erences pro les users determining recommend item 
hand content methods provide recommendations comparing representations content contained item representations content interests user 
content methods uniquely characterize user cf key advantages 
firstly cf perform domains content associated items content dicult computer analyze ideas opinions secondly cf system ability provide serendipitous recommendations recommend items relevant user contain content user pro le 
reasons cf systems fairly successfully build recommender systems various domains 
su er fundamental problems sparsity stated simply users rate items user item rating matrix typically sparse 
probability nding set users significantly similar ratings usually low 
case systems high item user ratio 
problem signi cant system initial stage 
rater problem item recommended user rated 
problem applies new items obscure items particularly detrimental users eclectic tastes 
overcome drawbacks cf systems exploiting content information items rated 
basic approach uses content predictions convert sparse user ratings matrix full ratings matrix uses cf provide recommendations 
framework new hybrid approach content boosted collaborative filtering 
apply framework domain movie recommendation show approach performs signi cantly better pure cf pure content systems 
remainder organized follows 
section provides illustrative example motivate approach 
section describe domain gathering data 
section describes detail implementation content predictor cf algorithm hybrid approach 
experimental results section explain system performs section 
section proposes methods improve predictions 
section discuss prior attempts integrating collaboration content nally section conclude extensions 

motivating example section describe common scenario recommender systems show pure collaborative content methods fail provide recommendations 
take domain movie recommendations representative case 
systems users provide feedback items liked disliked pro les formed learn speci interests user 
example user user orange lord rings star wars willow blade runner twelve monkeys table typical user pro les movies liked movie recommendations typical user pro les shown table 
table shows users pro les consists movies liked 
pure cf systems try nd neighbors similar users user computing similarity measures common set movies users rated 
overlap movies users considered neighbors 
example neighbors potentially movies liked may recommended pro les suggest science ction movies 
pure content systems hand form pro les user independently 
typical system learn likes science ction movies likes fantasy science ction movies 
user considered separately movies share content ones rated considered recommendation 
case fantasy movies liked may recommended common taste science ction quite fantasy movies 
clearly approaches inadequate 
consider di erent approach 
content system predict preferences 
content predictor rate blade runner twelve monkeys highly science ction 
perform cf content predictions appear similar subsequently preferences recommended predictor approach 

domain description demonstrate working hybrid approach domain movie recommendation 
user movie ratings provided eachmovie dataset movie details internet movie database imdb 
represent content information movie set slots features 
slot represented simply bag words 
slots eachmovie dataset movie title director cast genre plot summary plot keywords user comments external reviews newsgroup reviews awards 
eachmovie dataset eachmovie dataset provided compaq systems research center ran eachmovie recommendation service months experiment collaborative ltering algorithm 
information gathered period consists users movies numeric ratings 
quicker turnaround time experiments subset eachmovie dataset 
dataset contains randomly selected users movies content available imdb 
reduced dataset ratings movies 
average votes user approximately sparsity user ratings matrix 
dataset provides optional demographic data age gender zip code supplied person 
movie information name genre release date imdb url provided 
dataset provides actual rating data provided user various movies 
user ratings range zero stars 
zero stars indicate extreme dislike movie stars indicate high praise 
data collection content information movie collected internet movie database imdb 
simple crawler follows imdb link provided movie eachmovie dataset collects information various links main url 
presently download content plot summary plot keywords cast user comments external reviews newspaper magazine articles newsgroup reviews awards 
information suitable preprocessing elimination words collected vector bag words bag feature describing movie 

system description general overview system shown 
web crawler uses urls provided eachmovie dataset download movie content imdb 
appropriate preprocessing downloaded content stored movie content database 
eachmovie dataset provides user ratings matrix matrix users versus items cell rating user item 
refer row matrix vector 
user ratings matrix sparse items rated users 
contentbased predictor trained user ratings vector pseudo user ratings vector created 
pseudo user ratings vector contains user actual ratings content predictions unrated items 
pseudo user ratings vectors put form pseudo ratings matrix full matrix 
active user ratings predictions new item cf full pseudo ratings matrix 
sections describe implementation content predictor pure cf component 
section describe hybrid approach detail 
pure content predictor provide content predictions treat prediction task text categorization problem 
view movie content information text documents user ratings class labels 
implemented bag words naive bayesian text classi er learn user pro le active user user predictions 
matrix sparse user ratings full user ratings matrix eachmovie active user ratings recommendations web crawler imdb collaborative filtering movie content content predictor database system overview set rated movies labeled documents 
similar approach recommending ectively book recommending system libra 
multinomial text model document modeled ordered sequence word events drawn vocabulary naive bayes assumption states probability word event dependent document class independent word context position 
class word token wk probabilities wk jc estimated training data 
posterior probability class document computed bayes rule jd jdj jc ith word document jdj number words document 
prior ignored constant document 
case movies represented vector documents dm slot sm denotes mth slot probability word category slot wk jc sm estimated posterior category probabilities lm computed jf jd ami jc sm number slots ami ith word mth slot 
class highest posterior probability determines predicted rating 
model parameters estimated algorithm algorithm 
note laplace smoothing avoid zero probability estimates 
evaluation content recommender appendix 
algorithm training content predictor rain naive bayes examples example examples vector bag words category corresponding rating 
bag bag words corresponds slot title cast reviews set possible categories 
function estimates probability terms ami jc sm describing probability randomly drawn word slot sm example class word ami 
calculate class priors docs subset documents examples class label jcj 
calculate conditional probabilities ami jc sm slot sm set distinct tokens occurring slot sm examples possible class single document created concatenating bags words appearing slot sm class total number distinct word positions token ami nk number times token ami occurs ami jc sm jv pure collaborative filtering implemented pure collaborative ltering component uses neighborhood algorithm 
algorithms subset users chosen similarity active user weighted combination ratings produce predictions active user 
algorithm summarized steps 
weight users respect similarity active user 
similarity users measured pearson correlation ratings vectors 

select users highest similarity active user 
users form neighborhood 

compute prediction weighted combination selected neighbors ratings 
step similarity users computed pearson correlation coecient de ned pa ra ru ra ru rating item user ra mean rating user step predictions computed weighted average deviations neighbor mean ra ru pa pa prediction active user item pa similarity users number users neighborhood 
experiments neighborhood size recommendation 
common active user highly correlated neighbors rated overlapping items 
neighbors small number overlapping items tend bad predictors 
correlations rated items multiply correlation signi cance weighting factor 
users rated items multiply correlation factor sga number rated items 
number overlapping items greater leave correlation unchanged sga 
content boosted collaborative filtering content boosted collaborative ltering rst create pseudo user ratings vector user database 
pseudo user ratings vector vu consists item ratings provided user available predicted content predictor 
user rated item equation denotes actual rating provided user item rating predicted pure content system 
pseudo user ratings vectors users put gives dense pseudo ratings matrix perform collaborative ltering dense matrix 
similarity active user user computed pearson correlation coecient described equation 
original user votes substitute votes provided pseudo user ratings vectors va vu harmonic mean weighting accuracy pseudo user ratings vector computed user depends number movies rated 
user rated items content predictions pseudo user ratings vector fairly mean absolute error 
training examples learning curve content predictor accurate 
hand user rated items pseudo user ratings vector accurate 
inaccuracies pseudo user ratings vector yielded misleadingly high correlations active user users 
incorporate con dence lack thereof correlations weight harmonic mean weighting factor hm weighting short 
hm equation refers number items user rated 
harmonic mean tends bias weight lower values correlations pseudo user ratings user rated items receive highest weight regardless actual number movies user rated 
hand pseudo user rating vectors user rated items correlation appropriately 
choice threshold learning curve content predictor 
seen initially predictor training examples prediction performance improves begins level point diminishing returns matter large training set prediction accuracy improves marginally 
hm weight add signi cance weighting described section obtain hybrid correlation weight hwa hwa sga appendix provides detailed explanation generation learning curve 
self weighting recall cf prediction active user computed weighted sum mean centered votes best neighbors user 
approach add pseudo active user neighborhood 
may want give pseudo active user importance neighbors 
words increase con dence place pure content predictions active user 
incorporating self weighting factor nal prediction swa na max na max na number items rated active user 
choice threshold motivated learning curve mentioned earlier 
parameter max indication con dence contentbased predictor 
experiments value max 
producing predictions combining weighting schemes nal prediction active user item produced follows va swa va hwa upa vu swa hwa upa equation corresponds pure content predictions active user item pseudo user rating user item vu mean items user 
swa hwa pa shown equations respectively size neighborhood 
denominator normalization factor ensures weights sum 

experimental evaluation section describe experimental methodology metrics compare di erent prediction algorithms results experiments 
methodology compare pure content predictor cf predictor naive hybrid approach 
naive hybrid approach takes average ratings generated pure content predictor pure cf predictor 
purposes comparison subset ratings data eachmovie data set described section 
percent users randomly selected test users test user rated movies 
user test set ratings items withheld 
predictions computed withheld items di erent predictors 
quality various prediction algorithms measured comparing predicted values withheld ratings actual ratings 
pseudo active user refers pseudo user ratings vector active user ratings 
metrics metrics evaluating accuracy prediction algorithm divided main categories statistical accuracy metrics decision support metrics 
statistical accuracy metrics evaluate accuracy predictor comparing predicted values user provided values 
measure statistical accuracy mean absolute error mae metric de ned average absolute di erence predicted ratings actual ratings 
experiments computed mae test set user averaged set test users 
decision support accuracy measures predictions help users select high quality items 
receiver operating characteristic roc sensitivity measure accuracy 
predictor treated lter predicting high rating item equivalent accepting item predicting low rating equivalent rejecting item 
roc sensitivity area roc curve curve plots sensitivity versus speci city predictor 
sensitivity de ned probability item accepted lter speci city de ned probability bad item rejected lter 
consider item user gave rating consider item bad 
refer roc sensitivity threshold roc 
roc sensitivity ranges ideal random 
herlocker metrics compare algorithms 
statistical signi cance di erences performance predictors evaluated tailed paired tests 
results algorithm mae roc pure content predictor pure cf naive hybrid content boosted cf table summary results results experiments summarized table 
seen approach performs better algorithms metrics 
mae metric performs better pure cb better pure cf better naive hybrid 
di erences mae statistically signi cant 
roc metric performs better pure cb better pure cf better naive hybrid 
implies system compared better job recommending high quality items reducing probability recommending bad items user 
interestingly self weighting signi cant improvements predictions 
algorithm mae content cf naive algorithm content cf naive comparison algorithms 
discussion section explain content boosted collaborative ltering overcomes shortcomings pure cf discuss performance results 
overcoming sparsity rater problem pseudo ratings matrix full matrix eliminate root sparsity rst rater problems 
pseudo user ratings vectors contain ratings items users considered potential neighbors 
increases chances nding similar users 
original user ratings matrix may contain items rated user movies dataset 
pure cf approach items ignored 
items receive content prediction users 
items recommended active user overcoming rst rater problem 
finding better neighbors crucial step cf selection neighborhood 
neighbors active user entirely determine predictions 
critical select neighbors similar active user 
pure cf neighborhood comprises users best correlations active user 
similarity users determined ratings rated items items rated users ignored 
similarity ratings contained pseudo user ratings vectors users need high overlap rated items considered similar 
claim feature possible select better representative neighborhood 
example consider users identical tastes rated items common 
pure collaborative ltering consider similar 
pseudo user ratings vectors created content predictions users highly correlated considered neighbors 
believe superior selection neighbors reasons outperforms pure cf 
making better predictions discussed improves selection neighboring users 
traditional cf compute prediction item weighted sum actual ratings neighbors 
approach actual rating neighboring user exist content predicted rating 
approach motivated hypothesis user highly correlated active user content predictions relevant active user 
believe content ratings neighbors compute predictions important factor contributing superior performance 
self weighting content predictions large number training examples tend fairly accurate apparent 
giving greater preference predictions improve accuracy hybrid prediction 
interestingly re ected results 
may choice max parameter equation xed experiments 
higher value max increase weight content predictions yield better results 
naive hybrid naive hybrid approach compare system inspired 
approach poor strawman compare 
seen results naive hybrid performs worse cf mae metric 
performs poorly roc metric compared approaches 
section approaches benchmarks compare approach 
efficient implementation may appear infeasible online recommending system generating pseudo ratings matrix requires computing content predictions users items 
computational costs running system signi cantly reduced making incremental updates pseudo ratings matrix 
need maintain pseudo ratings matrix models learned content predictor user 
user rates new items changes existing ratings need change user column pseudo ratings matrix retrain content predictor new ratings vector produce predictions unrated items 
computational complexity training producing predictions naive bayesian classi er linear size documents single vector updated fairly eciently 
furthermore speed online system perform updates ine batches regular intervals 
pseudo ratings matrix need updated new item added database new movie released 
case new row predictions item added ratings matrix 
require retraining maintain current user models built content predictor 
need generate predictions new item user 
computational complexity operation linear size new item document times number users 
update taken care eciently 

improving due nature hybrid approach believe improving performance individual components certainly improve performance system 
words improved pure contentbased predictor cf algorithm able improve system predictions 
better content predictor mean pseudo ratings matrix generated accurately approximate actual full matrix 
turn improve chances nding representative neighbors 
nal predictions system cf algorithm better cf algorithm improve system performance 
discuss methods improve individual components 
improving content predictor current implementation content predictor naive bayesian text classi er learn way classi cation task 
approach probably ideal disregards fact classes represent ratings linear scale 
example posterior probabilities classes respectively imply prediction close 
classi er predict class higher posterior probability 
problem overcome learning algorithm directly produce numerical predictions 
example logistic regression locally weighted regression directly predict ratings item content 
able improve content predictions approaches 
improving cf component cf component system improved clustered pearson predictor cpp simple pearson predictor spp currently employ 
cpp algorithm creates clusters users means clustering algorithm 
pro le created cluster contains average ratings item users cluster 
predictions computed spp pro les generated earlier considered potential neighbors 
fisher claim approach accurate spp 
cpp advantage scalable spp 

related attempts combine content information collaborative ltering 
simple approach allow content collaborative ltering methods produce separate ranked lists recommendations merge results produce nal list 
schemes merging ranked lists interleaving content collaborative recommendations averaging rank rating predicted methods 
essentially naive hybrid approach 
propose novel approach combining content collaboration latent semantic indexing lsi 
approach rst term document matrix created cell weight related frequency occurrence term document 
term document matrix multiplied normalized ratings matrix give content pro le matrix 
singular value decomposition svd matrix computed 
lsi rank approximation content pro le matrix computed 
term vectors user relevant documents averaged produce centroid representing user pro le 
new documents ranked user pro le lsi space 
pazzani approach user pro les represented set weighted words derived positive training examples winnow algorithm 
collection user pro les thought content pro le matrix 
predictions applying cf directly le matrix opposed user ratings matrix 
alternate approach providing content collaborative recommendations fab 
fab uses relevance feedback simultaneously mold personal lter communal topic lter 
documents initially ranked topic lter sent user personal lters 
user provides relevance feedback document modify personal lter originating topic lter 
basu integrate content collaboration framework treat recommending classi cation task 
ripper inductive logic program learn function takes user movie predicts label indicating movie liked disliked 
combine collaborative content information creating features liked user users liked movies genre collaborative ltering number personalized information ltering agents 
predictions user applying cf set users active user personalized agents 
method differs cf personalized agents users 
lee treats recommending task learning user preference function exploits item content ratings similar users 
perform study mixture models task 
related billsus pazzani singular value decomposition directly tackle sparsity problem 
svd original user ratings matrix project user ratings rated items lower dimensional space 
doing eliminate need users items order predictors 

incorporating content information collaborative ltering signi cantly improve predictions recommender system 
provided ective way achieving 
shown content boosted collaborative filtering performs signi cantly better pure content predictor collaborative ltering naive hybrid 
elegantly exploits content collaborative framework 
overcomes disadvantages collaborative ltering content methods cf content vice versa 
due nature approach improvements collaborative ltering content recommending easily exploited build powerful system 
performs consistently better pure cf di erence performance large 
currently attempting boost performance system methods described section 
plan test approach performs better approaches combine content collaboration outlined section 
acknowledgments compaq computer generously providing eachmovie dataset 
grateful mishra web crawler useful discussions 
joydeep ghosh dhillon valuable advice course 
research supported national science foundation iri 

eachmovie dataset 
research compaq com src eachmovie 
internet movie database 
www imdb com 
balabanovic shoham 
fab content collaborative recommendation 
communications association computing machinery 
basu hirsh cohen 
recommendation classi cation social content information recommendation 
proceedings fifteenth national conference arti cial intelligence aaai pages july 
billsus pazzani 
learning collaborative information lters 
proceedings fifteenth international conference machine learning icml pages madison wi 
morgan kaufmann 
smyth 
ptv intelligent personalized tv guides 
twelfth conference innovative applications arti cial intelligence pages 
duda hart stork 
pattern classi cation 
wiley new york november 
fisher hildrum hong newman thomas 
swami framework collaborative ltering algorithm development evaluation 
sigir july 
short 
goldberg nichols oki terry 
collaborative ltering weave information tapestry 
communications association computing machinery 
schafer konstan borchers sarwar herlocker riedl 
combining collaborative ltering personal agents better recommendations 
proceedings sixteenth national conference arti cial intelligence aaai pages july 
herlocker konstan borchers riedl 
algorithmic framework performing collaborative ltering 
sigir proceedings nd annual international acm sigir conference research development information retrieval pages 
kohavi becker sommer eld 
improving simple bayes 
proceedings european conference machine learning 
lee 
collaborative learning recommender systems 
proceedings eighteenth international conference machine learning icml 
mccallum nigam 
comparison event models naive bayes text classi cation 
papers aaai workshop text categorization pages madison wi 
mitchell 
machine learning 
mcgraw hill new york ny 
mooney roy 
content book recommending learning text categorization 
proceedings sigir workshop recommender systems algorithms evaluation ca 
mooney roy 
content book recommending learning text categorization 
proceedings fifth acm conference digital libraries pages san antonio tx june 
pazzani 
framework collaborative content demographic ltering 
arti cial intelligence review 
resnick iacovou bergstrom 
grouplens open architecture collaborative ltering netnews 
proceedings computer supported cooperative conference new york 
acm 
nicholas 
combining content collaboration text ltering 
joachims editor proceedings ijcai workshop machine learning information filtering pages 
appendix performance content predictor evaluated fold cross validation data set randomly split equal size segments results averaged trials 
trial segment set aside testing remaining data available training 
test performance varying amounts training data learning curve generated testing system training increasing subsets training data 
generated learning curves users rated items 
points learning curves averaged give learning curve 

