optimistic security new access control paradigm dean cooperative research centre enterprise distributed systems dstc edu au despite best efforts security researchers static nature authorisation cause unexpected risks users working dynamically changing environment 
disasters medical emergencies time critical events lead situations ability relax normal access rules critically important 
presents optimistic access control scheme enforcement rules retrospective 
system administrator relied ensure system misused compensating transactions ensure system integrity recovered case breach 
argued providing optimistic scheme alongside traditional access control mechanism provide useful means users exceed normal privileges rare occasion situation warrants 
idea partially formed transaction introduced show accesses optimistic system constrained 
model formally described related clark wilson integrity model 
bob nurse small rural hospital physically isolated due heavy storm 
communications local doctor unable located 
bob attend emergency needs immediate access patient medical records 
bob authorised access information putting patient life risk 
regardless flexible expressive access control mechanisms gap organisations need mechanisms implement 
reason access control systems unaware dynamically changing situations external system 
alice working late night notices rogue process reported funded part cooperative research centre program department industry science tourism commonwealth government australia 
going crazy forking multiple children 
alice knows doesn kill process quickly going eventually kill machine bringing mission critical system middle nightly batch scripts 
alice doesn superuser privileges box wait watch system begins fall 
disaster medical emergency just need meet critical deadline necessary authorisation depends situations unforeseen system easily aware 
organisation wishes define security policy differentiates roles depending circumstances find unable implement policy traditional schemes enforce privilege 
investigates optimistic access control scheme new paradigm constraining access situations 
optimistic access control takes approach assuming accesses legitimate relies controls external system ensure organisations security policy maintained 
scheme allows users exceed normal privileges way constrained securely audited may rolled back 
ways minimising risks optimistic access control scheme discussed formal model clark wilson integrity model 
concludes proposing novel applications optimistic security scheme 
optimistic security overview basic approach optimistic security system assume access legitimate granted 
goals best summarised principle suggested bob emperor old armor users ask permission 
optimistic system enforcement security policy retrospective relies administrators detect unreasonable access take steps compensate action 
steps include undoing illegitimate modifications action firing individuals removing privileges 
measures act deterrent means recover system valid state 
system assumes risk failure cost recovery low compared cost granting access situation 
optimistic security suited financial trading systems risk fraud high may useful situations protection private medical information emergency access may save life time critical system person necessary privileges perform task may unavailable 
optimistic measures may exist alongside traditional pessimistic scheme mechanism exceed current privilege set certain circumstances 
similar existing schemes unix setuid system call allows user gain superuser access certain trusted programs 
idea optimistic security provide ability rollback actions ensure securely audited 
traditional authorisation set allocated line security design principles privilege separation duty reserved everyday system 
organisation may define inclusive exclusive list authorisations exceptional circumstances may explicitly defined general authorisations exceptional set restrictive everyday set actions may cause catastrophic damage excluded 
requirements optimistic security providing optimistic security system requires ways ensure likelihood consequences user maliciously system minimised 
meet objective controls considered constrained entry points exceeding privilege rarity norm 
users need exceed privileges regular basis organisation consider list privileges user restrictive access control mechanism inflexible support complex policies 
possible user accidentally invoke higher privileges require explicit conscious decision 
users warned mechanism careful consideration misuse negative external consequences 
provides deterrent reminds users obligations organisation 
risk misuse may limited threshold scheme ensure users agree extra privileges granted 
limits risk single malicious user causing damage system 
accountability system strongly authenticate users may associated actions 
provides deterrent users know clearly implicated misuse ensures guilty targets action 
authentication mechanisms inadequate risk misuse unacceptable users able masquerade users illegitimate actions 
system log actions users detail analysis determine access legitimate 
may useful require users give reason optimistic mechanisms associated audit data 
audit data kept secure access optimistic mechanism allow audit information compromised 
noted analysis audit trail system administrator labour intensive motivation educating users mechanism extreme circumstances 
addition information action logged data state current system may required determine access justified 
noted important issue addressed retention period audit data 
important consideration practical implementations optimistic security ability recover breaches may limited ability reconstruct accurate picture breach audit logs 
recoverability accesses write modify delete data able rolled back ensure user damage system 
actions external behaviour firing missile sending letter associated compensating actions restore system stable state abort missile send apology letter 
issue recovery advanced concurrency control systems studied considered 
general assumed transformation data security properties data confidentiality integrity compensating transaction exists reverse transformation 
effective way reducing risks optimistic system measures deter misuse 
measures optimistic system administrator enforcing measure detection misuse pessimistic measure implemented immediately reversed action determined legitimate 
example workable pessimistic punishment scheme suggested automatically debit user bank account action invoked refund money access deemed legitimate 
formal model show integrity maintained optimistic system formal model needed ensures requirements outlined realised system 
formal model section clark wilson integrity model supports notions accountability recoverability 
see ieee executive briefing advances concurrency control transaction processing excellent overview state art area 
particular interest optimistic security notion sagas long running transactions consisting independent components 
sagas compensating transactions maintain consistency situation exist inappropriate optimistic system anyway 
clark wilson defined concept formed transaction transaction user unable manipulate data arbitrarily constrained ways preserve ensure integrity data 
security system transactions wellformed ensures actions certified administrator safe executed 
clark wilson formal model data integrity consists rules constraining transactions 
rules describe constraints transformations operating types data constrained data items cdis data items integrity model applied 
unconstrained data items data items covered integrity policy 
information typed user keyboard addition clark wilson model defines integrity verification procedures verify cdis valid state transformation procedures tps functions meet definition formed transaction 
model uses types rules certification rules enforced administrator enforcement rules guaranteed system 
rules summarised 
rule description certified ensure system valid tps cdis certified ensure result valid cdi tps certified ensure implement principles separation duties privilege tps certified ensure actions logged tps act certified ensure result valid cdi certified tps operate cdis users access cdis tps authorised users authenticated administrator specify tp authorisations clark wilson integrity rules partially formed transactions partially formed transaction defined transaction integrity data guaranteed compensating transaction exists return system valid state 
transaction partially formed integrity system guaranteed compensating transaction constraining actual action 
section formal model integrity partially formed transactions described model clark wilson integrity model adds components model benefited feedback workshop 
particular rules added account dependency relationships transactions concepts added avoid confusion clark wilson model 
description rules partially formed transactions initially proposed see 
ptp partial transformation procedure 
corresponds concept partially formed transaction describes procedure operates cdis guaranteed result valid cdis 
compensating tp transformation procedure reverses actions ptp 
partially constrained data item 
cdi operated ptp 
clark wilson model needed verify system valid state execution partially formed 
gives rule integrity model partially formed transactions identical clark wilson model certified ensure data items valid state time run 
second certification rule system applies outlines main requirement optimistic security existence valid compensating transaction 
cornerstone partially formed transaction integrity model 
certified provide compensating tp return modified cdi valid state 
enforcement constraints exist ensure ptp authorised accountability requirements maintained 
system ensure certified requirement allowed run 
system ensure users authorised 
system authenticate identity user 
ptp write append log information required reconstruct reverse operation administrator permitted users access 
rules similar counterparts clark wilson model 
rule specified enforcement rule certification rule clark wilson 
tacit recognition programs usually poor job audit integrity model relies ability recognise reverse anomalous behaviour need ensure function 
rule requires operating system security system provide audit independently programs constraining 
example system uses system call tracing features solaris proc filesystem enable changes constrained files audited recovered 
addition rules mechanism needed ensuring cdis operating validated 
done requiring mark cdis accessed ensuring rules exist convert back valid cdis 
rules cdis acted marked compensating tps certified result valid cdis 
administrator certify valid cdis invalid apply compensating transaction restore valid cdis 
rule needed ensure compensating transaction formed 
theory necessary precondition ensuring integrity 
practice may possible relax constraint see section 
rule needed ensure administrator enforces retrospective security policy 
lastly system needs deal case inputs 
case ptp reversed need ensure rely compensated ptp reversed 
rule ptp reversed compensating tp subsequent depend item reversed 
note definition depend left implementer 
system tps consist simple reads writes depends relation simply defined recursive predicate depends ptp ptp read ptp wrote ptp ptp read ptp wrote depends certification enforcement rules constitute basis integrity model partially formed transactions 
manner similar clark wilson integrity model shown application rules leads secure system 
summarise rule ensures certain system initially valid 
rules ensure transformations system reversed rule ensures reversal results valid system 
rules provide accountability properties desirable reduce risks optimistic system may necessary enforce compensating tp 
rule scheme mandatory 
rules ensure system verified valid compensating transaction applied 
means integrity guaranteed transformations legitimate deemed violations security policy 
rule guarantees integrity transformations rely erroneous transformations 
iterating rules see system initially valid application ptp lead valid system 
reducing program certification partially formed transaction rules mean certification programs needs performed required formed transactions 
possible generally easier determine effects program environment certify exhibiting behaviour 
integrity assured fact possible compare actual behaviour expected behaviour reverse actions event compromise 
partially formed transactions require certification rule certification compensating transactions simpler certifying individual programs largely possible provide compensating tps generic large range applications reverse modifications filesystem 
noted gain reduced certification programs needs balanced extra load security administrator analysing audit logs applying determine accesses legitimate 
interesting note clark wilson pointed large number certification rules weakness model desirable minimise certification rules certification process complex prone error repeated program change 
extending model important research goal shift security burden possible certification enforcement 
composition formed transactions important issue tps composed 
necessary optimistic pessimistic security systems coexist 
order determine issues need addressed completed issue validated compensated composed clark wilson tps 
providing tp rely intermediate state ptp integrity properties partially formed transaction model ensure tp operate valid objects 
idea taken see taken single atomic unit sequence validated compensated meet requirements clark wilson tp 
providing rules partially formed transaction integrity model hold rule clark wilson model tps cdis result valid cdis hold 
property allows arbitrarily nest inside tps 
corollary alluded earlier possible compensating transactions contain elements partially formed taken single atomic unit form formed transactions 
provide equivalent local undo redo semantics elements compensating transaction ability recovered 
idea encapsulating number transactions formed tp consistent clark wilson model clark wilson state mid point execution tp requirement system valid state 
clark wilson referring specifically concurrency control tps applies transaction exhibits external consistency may internally inconsistent 
tps cases may desirable tps operate exposing intermediate state ptp 
concrete example ability compensating action formed 
issue simply addressed having tp treat udi 
case clark wilson certification rule tps act certified ensure result valid cdi provides necessary properties procedures composed 
applications optimistic security emergency break glass tools equipment alarms emergency buttons fire fighting equipment axes stored break glass containers emergency 
benefit containers require users conscious decision equipment preventing accidental misuse 
addition break glass containers usually labelled warnings penalties deliberate misuse providing significant deterrent 
device computer security system useful coping emergency situation 
software equivalent break glass container program suitably constrained optimistic security system gives stern warnings misuse activated 
emergency situation user operate tool explain system administrator event order avoid associated penalty 
system administrator decided legitimate recovery mechanism enforce penalty 
retrospective content filtering negative aspects systems provide filtering material deemed harmful inappropriate algorithms determine content filter result false matches 
result users denied access legitimate content leading search ways circumvent system 
applying principles optimistic security users able access material desired administrator log material accessed run content filtering algorithm retrospectively 
give list matches administrator investigate determine content inappropriate 
mechanism coupled appropriate system measures child employee posting list users accessed pornography week notice board 
effective simply disallowing access enforcement enables administrator reinforce policy culprit potential perpetrators 
sandboxing somewhat trusted applications traditionally focus sandboxing constraining access privileges programs untrusted code downloaded internet 
users personal operating systems large number applications access potential damage integrity systems 
applications possible maintain integrity traditional clark wilson principles expensive certify program source code unavailable certification 
creating sandbox optimistic principles damage caused misuse somewhat trusted applications limited allowing full functionality 
example optimistic sandbox track changes filesystem word processing program allow user undo changes event crash malicious macro virus 
result greatly improved security safety applications loss functionality expensive certification programs 
watching system administrator watching formal integrity model specifies mandatory access control system authorisation determined administrator 
artifact basing model 
reason optimistic security model applied discretionary access control system authorisation determined objects owner creator 
currently system administrators access system including data users may wish keep private private email 
applying optimistic security system access files constrained user informed administrator accesses files consider part private set 
may occasions access legitimate may intrusive breach users privacy 
ensuring users know management administrators accessing files users confidence privacy maintained 
clark wilson integrity model provides means system constrained ensure legitimate accesses executed 
argues exceptional circumstances requirement able relaxed 
notion partially formed transaction provides mechanism system seek optimistic user actions maintaining system integrity 
believed mechanism help increase flexibility security systems environments hard fast rules best option 
shown integrity model optimistic system feasible providing certain preconditions transformations system composable traditional pessimistic system 
number novel applications optimistic security model show system useful 
bob 
emperor old armor 
proceedings new security paradigms workshop pages 
acm september 
david clark david wilson 
comparison commercial military security policies 
ieee symposium security privacy pages oakland ca april 
garcia molina salem 
sagas 
proceedings acm sigmod international conference management data pages new york ny 
acm press 
dean 
enforcing formed partially formed transactions unix 
proceedings th usenix security symposium 
usenix association august 
ramamritham panos chrysanthis 
executive briefing advances concurrency control transaction processing 
ieee computer society press los alamitos ca 
jerome saltzer michael schroeder 
protection information computer systems 
proceedings ieee september 
