goal oriented requirements engineering guided tour goals capture different levels abstraction various objectives system consideration achieve 
goal oriented requirements engineering concerned goals eliciting elaborating structuring specifying analyzing negotiating documenting modifying requirements 
area received increasing attention past years 
reviews various research efforts undertaken line research 
arguments favor goal orientation briefly discussed 
compares main approaches goal modeling goal specification goal reasoning activities requirements engineering process 
discussion concrete real case study suggest goal oriented requirements engineering method may look 
experience approaches tool support briefly discussed 

goals long recognized essential components involved requirements engineering re process 
ross stated seminal requirements definition say system needed current foreseen conditions may internal operations external market 
say system features serve satisfy context 
say system constructed ros 
informal system development methodologies old times included form goal analysis called context ros definition study hic analysis mun forth 
typically current system consideration analyzed organizational operational technical setting problems pointed opportunities identified highlevel goals identified refined address problems meet opportunities requirements elaborated meet goals 
natural practice led requirements documentation standards require specific document section devoted objectives system meet see ieee std standards 
surprisingly goals largely ignored literature software modeling specification invited mini tutorial appeared proceedings re th ieee international symposium requirements engineering toronto august 
axel van lamsweerde partement ing informatique universit catholique de louvain louvain la neuve belgium avl info ucl ac literature object oriented analysis notable exception rub 
uml advocates confess need higher level abstractions focus user goals come cases satisfy elaboration period expect set system interaction cases user goal identified fow 
prominent tendency software modeling research programming constructs requirements level propagate requirements abstractions programming level 
requirements engineering research increasingly recognized leading role played goals re process yue rob ber dar jar 
recognition led stream research goal modeling goal specification goal reasoning multiple purposes requirements elaboration verification conflict management multiple forms informal qualitative formal 
objective provide brief hopefully comprehensive review major efforts undertaken line research 
section provides background material goals useful coming explicit re process 
section discusses major efforts modeling goals terms features links artefacts requirements models 
section reviews major techniques specifying goals 
section goal reasoning reviews goals basic activities re process requirements elicitation elaboration verification validation explanation negotiation particular difficult aspects process conflict management requirements alternative selection 
section suggests goal oriented re method may look enacting real case study safety critical train control system 
naturally leads brief review section industrial projects methods felt conclusive supporting tools projects briefly discussed 
section just opens fairly pieces goal requirements engineering 

background picture reviewing current state art goal oriented re sense addressing questions area research 
goals 
goal objective system consideration achieve 
goal formulations refer intended properties ensured statements opposed indicative ones bounded subject matter jac 
goals may formulated different levels abstraction ranging high level strategic concerns serve passengers train transportation system provide ubiquitous cash service atm network system low level technical concerns acceleration command delivered time train transportation system card kept wrong password entries atm system 
goals cover different types concerns functional concerns associated services provided nonfunctional concerns associated quality service safety security accuracy performance forth 
system goal refers may current system involved re process 
high level goals refer systems 
system essence composite comprises software environment active components humans devices software 
opposed passive ones active components choice behavior fea yue fic henceforth call agents 
requirements goal may general require cooperation hybrid combination multiple agents achieve dar 
train transportation system example high level goal safe transportation typically require cooperation board train controllers train tracking system station computers communication infrastructure passengers forth 
atm system goal providing cash eligible users require cooperation atm software sensors actuators customer important outcomes re process decision parts system automated parts 
goal responsibility single agent software requirement goal responsibility single agent environment software assumption lam lam 
requirements assumptions enforced software hopefully satisfied organizational norms regulations physical laws goals needed 
reasons goals important re process 
achieving requirements completeness major re concern 
goals provide precise criterion sufficient completeness requirements specification specification complete respect set goals goals proved achieved specification properties known domain considered yue 
avoiding irrelevant requirements major re concern 
goals provide precise criterion requirements pertinence requirement pertinent respect set goals domain considered specification proof goal yue 
explaining requirements stakeholders important issue 
goals provide rationale requirements way similar design goals design processes mos lee 
requirement appears underlying goal provides base ros dar som 
explicitly goal refinement tree provides traceability links high level strategic objectives low level technical requirements 
particular business application systems goals may relate software organizational business contexts yu 
goal refinement provides natural mechanism structuring complex requirements documents increased readability 
experience industrial involved see section 
requirements engineers faced alternatives considered requirements elaboration process 
extensive experience revealed alternative goal refinements provide right level abstraction decision makers involved validating choices suggesting alternatives overlooked far 
alternative goal refinements allow alternative system proposals explored lam 
managing conflicts multiple viewpoints major re concern nus 
goals recognized provide roots detecting conflicts requirements resolving eventually rob lam 
separating stable volatile information important concern managing requirements evolution 
requirement represents particular way achieving specific goal requirement evolve way achieving goal goal 
higher level goal stable 
observation ant 
turns different system versions share common set high level goals current system system correspond alternative refinements common goals goal refinement graph integrated single goal model see section 
goals drive identification requirements support shown basic driving forces scenarios systematic requirements elaboration process dar rub dar ant dub kai lam 
come back sections 
goals coming 
goal identification necessarily easy task lam ant hau rol 
explicitly stated preliminary material available requirements engineers 
implicit goal elicitation undertaken 
preliminary analysis current system important source goal identification 
analysis usually results list problems deficiencies precisely 
negating formulations yields list goals achieved system 
experience goals identified systematically searching intentional keywords preliminary documents provided interview transcripts lam 
preliminary set goals requirements obtained validated stakeholders goals identified refinement abstraction questions goals requirements available respectively lam lam 
sophisticated techniques goal refinement abstraction notably scenarios reviewed section 
goals identified resolving conflicts goals obstacles goal achievement see section 
common misunderstanding goal oriented approaches inherently top means case hopefully clear discussion 
goals explicit 
generally argued goal models built early phases re process dar yu dub 
basis argument driving role played goals process goal identified validated best 
imply sort waterfall requirements elaboration process 
requirements implement goals way programs implement design specifications inevitable intertwining goal identification requirements elaboration lam swa 
goals may identified fairly lately re process especially questions technical details scenarios initially taken granted raised lately process 

modeling goals benefit goal modeling support heuristic qualitative formal reasoning schemes requirements engineering see section 
goals generally modelled intrinsic features type attributes links goals elements requirements model 
goal types taxonomies 
goals different types 
classification axes proposed literature 
functional goals underlie services system expected deliver non functional goals refer expected system qualities security safety performance usability flexibility interoperability forth kel 
typology overly general specialized 
example satisfaction goals functional goals concerned satisfying agent requests information goals functional goals concerned keeping agents informed object states dar 
non functional goals specialized similar way 
example accuracy goals non functional goals requiring state software objects accurately reflect state corresponding monitored controlled objects environment dar goals overlooked re process violation may responsible major failures lam 
performance goals specialized time space performance goals specialized response time throughput goals nix 
security goals specialized confidentiality integrity availability goals amo specialized turn reaching domain specific security goals 
rich taxonomy non functional goals chu 
distinction literature soft goals satisfaction established clear cut sense hard goals satisfaction established verification techniques dar dar :10.1.1.29.2587
soft goals especially useful comparing alternative goal refinements chosing contributes best see 
classification axis types temporal behaviour prescribed goal 
dar 
achieve resp 
cease goals generate system behaviours require target property eventually satisfied state resp 
denied maintain resp 
avoid goals behaviours require target property permanently satisfied state resp 
denied property holds 
optimize goals compare behaviours favor better ensure soft target property 
similar vein sut proposes classification desired system states positive negative alternative feedback exception repair goal level policy level functional level domain level 
ant distinction objective goals refer objects system adverbial goals refer ways achieving objective goals 
goal types taxonomies define heuristics goal acquisition goal refinement requirements derivation semi formal consistency completeness checking dar sut ant chu ant retrieve goal specifications context specification reuse mas 
goal attributes 
type goals intrinsically characterized attributes name specification see section 
priority important attribute attached goals dar 
qualitative values attribute allow mandatory optional goals modelled various degrees optionality 
priorities resolving conflicts goals rob lam 
goal attributes proposed include goal utility feasibility rob 
goal links 
different types links introduced literature relate goals elements requirements models 
links form basis defining goal structures 
discuss links links goals elements requirements models agents scenarios operations 
links goals aimed capturing situations goals positively negatively support goals 
directly borrowed problem reduction methods artificial intelligence nil graphs may capture goal refinement links dar dar 
refinement links relate goal set subgoals called refinement means satisfying subgoals refinement sufficient satisfying parent goal 
refinement links relate goal alternative set refinements means satisfying refinements sufficient satisfying parent goal 
framework conflict link goals introduced satisfaction may prevent satisfied 
link types capture alternative goal refinements potential conflicts prove correctness goal refinements see section 
weaker versions link types introduced relate soft goals rob chu rarely said satisfied clear cut sense 
goal satisfaction goal satisficing introduced express subgoals expected achieve parent goal acceptable limits absolutely 
subgoal said contribute partially parent goal regardless subgoals may contribute positively negatively 
semantic rules follows 
goal subgoals subgoals satisficed parent goal subgoal denied parent goal deniable 
goal contributes negatively goal satisficed deniable 
rules qualitative reasoning goal satisficing see section 
inter goal links goals general linked elements requirements models 
kaos introduces operationalization links relate goals operations ensure corresponding required pre post trigger conditions lam lam older notion operationalization dar dar revised simplified practical experience 
similar links goals operations ant ant kai 
inter goal contribution link types extended capture positive negative contribution requirements goals argumentation links introduced connect supporting arguments contribution links :10.1.1.29.2587
massive amount linking goals scenarios fic dar pot lei sut ant hau lam rol kai ant 
obvious reason scenarios goals complementary characteristics concrete narrative procedural leave intended properties implicit declarative intended properties explicit 
scenarios goals complement nicely requirements elicitation validation 
large link goal scenario coverage link differences various modeling proposals lie fact scenario may type level instance level may example counter example desired behavior may exercise goal goal achievement 
goal models may related object models goal formulations refer specific objects entities relationships agents dar 
link type allows pertinent object models systematically derived goal models lam 
various proposals relate goals agents 
kaos responsibility links introduced relate goal agent submodels 
goal may assigned alternative agents responsibility links allows alternative boundaries explored software environment 
responsibility means agent committed restrict behavior performing operations assigned restricted conditions prescribed required pre post trigger conditions dar 
notion responsibility derives fea fin studied depth 
wish links heuristics agent assignment dar avoid assigning goal agent wishing goals conflict goal 
framework yu yu various types agent dependency links defined model situations agent depends goal achieved task achieved resource available 
type dependency operator defined operators may combined define plans agents may achieve goals 
purpose modelling support various kinds checks viability agent plan fulfilment commitment agents 
initially conceived modeling organizational environment software tropos project currently aiming propagating framework stages software lifecycle notably modeling agent oriented software architectures 
various authors suggested representing links goals organizational policies sib fea sut 
process level may useful traceability purpose got record actor owns goal view lam 

specifying goals goals obviously specified precisely support requirements elaboration verification validation conflict management negotiation explanation evolution 
informal precise specification precise goal name designates 
semi formal specifications generally declare goals terms type attribute links see section 
declarations may general provided alternatively textual graphical syntax see dar 
nfr framework goal specified specific subtype instance parameters denote object attributes refers degree satisficing denial child goals :10.1.1.29.2587
semi formal specifications include keyword verbs predefined semantics 
example achieve maintain avoid verbs kaos specify temporal logic pattern goal name appearing parameter dar implicitly specify corresponding target condition hold time condition holds 
intent provide lightweight alternative full formalization goal formulation amenable form analysis 
basic set extended qualitative verbs improve increase reduce forth ant 
similar spirit goals rol represented verbs different parameters playing different roles respect verb target entities affected goal beneficiary agents goal achievement resource entities needed goal achievement source destination communication goal formal specifications assert goal formulation fully formal system amenable analysis 
kaos assertions written real time linear temporal logic heavily inspired man koy usual operators past states bound time variables semantically capture maximal sets desired behaviors dar 
kaos language button formal assertion layer optional typically critical aspects system 
formal specifications yield powerful reasoning schemes price higher specification effort lower usability non experts various techniques briefly reviewed seen complementary means alternative ones suitability may heavily depend specific type system considered 

reasoning goals ultimate purpose goal modelling specification form goal reasoning re subprocesses requirements elaboration consistency completeness checking alternative selection evolution management forth 
goal verification benefits goal oriented re verify requirements entail goals identified check set requirements specified sufficiently complete set goals identified yue 
precisely denotes set requirements set environmental assumptions set domain properties set goals satisfaction relation hold goal false may checked informally formally goal specifications domain properties formalized 
temporal logic specifications may rely proof theory temporal logic tools step man 
lightweight alternative formal refinement patterns fo achieve maintain avoid goals dar 
patterns proved correct complete refinements goal graph verified matching applicable pattern library 
mathematical proof intricacies hidden 
frequently pattern decomposition milestone pattern refines parent achieve goal subgoals temporal operator means 
frequently pattern decomposition case pattern refines parent achieve goal subgoals temporal operator means 
techniques goals said established clear cut sense 
soft goals qualitative reasoning procedure provided nfr framework particularly appropriate :10.1.1.29.2587
procedure determines degree goal satisficed denied lower level goals requirements 
node link goal graph labelled satisficed deniable denied deniable conflicting deniable undetermined deniable 
general idea propagate labels satisficed links bottom lower level nodes requirements higher level nodes goals 
additional label values assigned intermediate stages procedure inconclusive positive support inconclusive negative support 
requiring user intervention specify appropriate label value 
rules bottom propagation labels defined accordingly 
example application framework performance goals nix 
goal validation goals validated identifying generating scenarios covered hau 
may think enacting scenarios produce animations hey 
scenario identification process generally heuristics sut ant 
plan techniques tentatively generate scenarios showing goal achieved reaching prohibited conditions 
goals prohibited conditions operations specified formally simple state predicates 
automated planner produces trial scenario achieve goal condition checks faults proposed scenario looking scenarios achieving prohibited conditions assists specifier modifying set operations case faults 
fic explores deficiency driven paradigm 
system specified set goals formalized restricted temporal logic set scenarios expressed petri net language set agents producing restricted scenarios achieve goals assigned 
general approach consists trying detect inconsistencies scenarios goals applying operators modify specification remove inconsistencies 
step carried planner searches behaviours leading goal violation 
operators offered analyst step encode heuristics specification debugging introduce agent responsibility prevent state transitions step breaking goal 
operators introducing new types agents appropriate responsibilities splitting existing types introducing communication synchronization protocols agents weakening idealized goals repeated application deficiency detection debugging operators allows analyst explore design space hopefully converge satisfactory specification 
goal requirements elaboration technique just sketched step making verification validation contribute requirements elaboration process 
main reason goal oriented re goals help elaborating requirements supporting 
goal elaboration typically consists hybrid top bottom processes plus additional processes driven handling possible abnormal agent behaviors management conflicting goals recognition analogical situations specifications transposed forth 
note explanatory purpose resulting requirements document general better top way 
goal requirement elicitation refinement obvious effective informal technique finding subgoals requirements keep asking questions goals identified lam lam 
formal goal refinement patterns may prove effective goal specifications formalized typically help finding subgoals overlooked needed establish parent goal 
consider simple train control system example functional goal train progress consecutive blocks goal achieve formaldef block tr tr particular case comes directly mind block signal set go 
subgoals coming naturally mind goal achieve formaldef tr train block tr go tr goal achieve formaldef tr train block tr go tentative refinement matches decomposition pattern section allows missing subgoal pointed goal maintain formaldef tr train block tr tr tr effective way driving refinement process determination agent candidate goal assignment realize goal monitor variables appearing goal antecedent control variables appearing goal consequent 
gives set conditions goal unrealizability set proved complete provides basis rich systematic set agent driven refinements tactics generating realizable subgoals auxiliary agents 
goal requirement elicitation abstraction obvious effective informal technique finding parent goals keep asking questions operational descriptions available lam lam 
sophisticated techniques devised elicit goals scenarios 
bidirectional coupling type level scenarios goal verb templates discussed section rol proposes heuristic rules finding alternative goals covering scenario corresponding alternative values verb parameters missing companion goals subgoals goal consideration 
formal side lam describes inductive learning technique takes scenarios examples counterexamples intended behavior generates goal specifications temporal logic cover positive scenarios exclude negative ones 
note refinement patterns applied reverse way correspond abstraction patterns may produce coarse grained goals 
goal operationalization efforts support process deriving pre post trigger conditions software operations ensure terminal goals refinement process 
principle apply derivation rules premise match goal consideration dar 
consider example goal goal maintain formaldef tr train loc loc location tr loc tr loc loc loc tr doors closed tr doors closed temporal operator means state 
applying derivation rule dompre derive operationalization operation move input tr train loc loc location output dompre tr loc loc loc tr loc tr doors closed tr doors closed analogical reuse goal specifications acquired retrieving structurally semantically analog specifications repository reusable specification components transposing specifications structural semantic matching revealed retrieval process mas 
obstacle driven elaboration sketch specifications goals requirements assumptions ideal violated time time running system due unexpected behaviors agents 
lack anticipation exceptional behaviors may result unrealistic unachievable incomplete requirements 
exceptional behaviors captured assertions called obstacles goal satisfaction 
obstacle said obstruct goal domain dom iff dom obstruction dom domain consistency obstacles need identified resolved re time order produce robust requirements reliable software 
notion obstacle just mentioned yue 
elaborated pot scenarios shown vehicle identifying goal obstructions 
heuristics identifying obstacles pot ant 
formal techniques described lam lam abductive generation obstacles goal specifications domain properties systematic generation various types obstacle resolution goal substitution agent substitution goal weakening goal restoration obstacle mitigation obstacle prevention 
obstacles resolved run time cases see fea 
conflict management requirements engineers live world conflicts rule exception eas 
conflicts generally arise multiple viewpoints concerns nus 
detected eventually resolved may temporarily useful eliciting information hun 
various forms conflict studied lam particular weak form called divergence occurs frequently practice 
goals gn said divergent iff exists non trivial boundary condition gi dom false inconsistency gj dom false minimality non trivial means different bottom false complement 
note traditional case conflict sense logical inconsistency amounts particular case divergence 
divergences need identified resolved re time order eventually produce consistent requirements 
formal heuristic techniques described lam abductive generation boundary conditions goal specifications domain properties systematic generation various types divergence resolution 
qualitative procedure suggested rob handling conflicts 
idea detect requirements level characterize differences goal level 
user procedure identifies requirements elements correspond various viewpoints hand conflict detection carried mapping syntactic differences corresponding requirements elements differences values variables involved goals supported elements 
conflict resolution attempted appealing compromises restriction specialization goal substitutions 
conflict resolution goal level propagated requirements level 
goal negotiation conflict resolution requires negotiation 
boe proposes iterative step process model goal negotiation requirements 
iteration spiral model requirements elaboration stakeholders involved identified wished goals called win conditions conflicts goals captured associated risks uncertainties goals reconciled negotiation reach mutually agreed set goals constraints alternatives iteration 
alternative selection goal refinement selected alternative ones identified 
agent assignment selected alternative ones identified 
large open problem 
local tactics course favoring alternatives critical obstacles conflicts systematic approach emerged far re literature 
promising direction qualitative reasoning la nfr select alternative refinement contributes best satisficing soft goals related cost reliability performance multicriteria analysis techniques helpful :10.1.1.29.2587

goal oriented re method action time demonstrate techniques reviewed fit goal oriented re method 
come back case study lam illustrates issues raised initial document unbiased comes independent source involved development publically available bar documents industrial projects involved system real complex real time safety critical allows suggest goal oriented re useful business applications 
initial document focuses control speed acceleration trains responsibility advanced automatic train control developed san francisco bay area rapid transit bart system 
follow kaos method dar lam lam order incrementally elaborate complementary submodels goal model object model agent responsibility model leading alternative system boundaries operation model 
goal refinement graph elaborated eliciting goals available sources asking questions goal elaboration step objects relationships attributes derived goal specifications object modeling step agents identified alternative responsibility assignments explored agent interfaces derived responsibility assignment step operations domain pre postconditions identified goal specifications strengthened pre postconditions trigger conditions derived ensure corresponding goals operationalization step 
steps strictly sequential progress step may prompt parallel progress backtracking previous 
presentation sketchy lack space interested reader may refer greater level details 
max train speed 
min distance 
maintain wcs minimize costs min goal identification initial document set goals identified reading available source bart searching intentional keywords objective purpose intent concern order number soft goals identified minimize minimize goals qualitatively related support links contributes conflicts 
weights select alternatives 
possible keywords semi formal layer kaos language indicate goal category 
maintain avoid keywords specify goals having temporal pattern respectively 
achieve keyword specifies eventually goals having pattern connective denotes logical implication denoted short 
shows result elicitation 
clouds denote soft goals parallelograms denote formalizable goals arrows denote goal subgoal links double line linking arrows denotes refinement alternative subgoals 
formalizing goals identifying objects object modeling step start soon goals 
min avoid maintain preliminary goal graph bart system formulated precisely 
principle identify objects relationships attributes goal specifications 
consider example goal bottom goal maintain informaldef train stay maximum speed track segment handle 
formaldef tr train tr tr speed predicate objects attributes appearing goal formalization derive portion object model train speed 

similarly goal bottom specified follows goal maintain wcs informaldef train get close train front train front stops suddenly train hit 
formaldef tr tr train tr tr tr loc tr loc tr wcs dist informaldef statements goal definitions taken literally initial document wcs dist denotes physical worst case stopping distance physical speed train 
new goal specification allows portion object model enriched loc wcs dist attributes train object reflexive relationship 
formalization goal avoid enrich object model elements strictly necessary goals considered 
goals provide precise driving criterion identifying elements object model 
eliciting new goals questions case higher level goals underpinning goals easily identified initial sources kept implicit sources 
may useful finding important subgoals higher level goal missing higher level goal achieved 
mentioned higher level goals identified asking questions goals available 
example asking question goal maintain wcs yields parent goal avoid train collision asking question goal avoid yields new portion goal graph shown 
goal subgraph companion subgoal maintain gate elicited formally matching formal refinement pattern formalization parent goal avoid question formalization initial goal avoid dar 
dot joining lower refinement links means refinement provably complete 
maintain avoid avoid maintain enriching goal graph elicitation eliciting new goals questions goals need refined subgoals reached assigned individual agents software environment 
terminal goals requirements case assumptions 
concrete goals identified asking questions 
example question goal maintain wcs yields extension goal graph shown 
maintain safe speed acceleration commanded maintain wcs maintain goal refinement maintain formalization subgoals may prove entail parent goal maintain wcs formalized 
subgoals need refined turn assignable subgoals reached 
complete refinement tree annex 
identifying potential responsibility assignments annex provides possible goal assignment individual agents 
assignment suggested initial document bar 
example accuracy goal maintain assignable agent goal maintain assignable agent goal maintain assignable speed agent 
worth noticing goal refinements agent assignments captured relationships 
alternative refinements assignments probably explored 
example parent goal maintain wcs may alternatively refined maintain subgoals position second subgoal assigned onboard agent 
alternative give rise fully distributed system 
suggested qualitative reasoning techniques style applied softgoals identified help making choices alternatives 
deriving agent interfaces assume goal maintain bottom tree annex assigned speed agent 
interfaces agent terms monitored controlled variables derived formal specification goal just take general form sake simplicity goal maintain formaldef cm ti ti cm sent cm ti ti ti cm accel ti ti cm speed ti fulfil responsibility goal speed acceleration agent able evaluate goal antecedent establish goal consequent 
agent monitored variable train info controlled variables accel speed 
turn monitored variables agent similar analysis 
technique deriving agent monitored controlled variables fairly systematic see details 
identifying operations operationalization step starts identifying operations relevant goals defining domain pre postconditions 
goals refer specific state transitions transition operation causing identified domain pre postcondition capture state transition 
goal maintain formalized get example operation input train arg tr output res cm dompre cm sent cm sent cm tr id definition minimally captures sending command train domain considered ensure goals contribute 
operationalizing goals operationalization sub step strengthen domain conditions various goals linked operation ensured 
goals assigned software agents step produces requirements operations corresponding goals achieved 
mentioned derivation rules operationalization calculus available dar 
example yield requirements strengthen domain pre postconditions operation input train arg tr output res cm dompre 

tracking ti tr ti ti cm acc ti ti cm speed ti sec cm cm sent cm tr id trigger condition captures obligation trigger operation soon condition gets true provided domain precondition true 
example condition says command sent past state half second bar 
mix semi formal formal techniques requirements elaboration reached level formal specification techniques start 
anticipating obstacles mentioned goals provide basis early generation high level exceptions handled properly requirements engineering time may generate new requirements robust systems 
obstacles generated obstruct subgoal achieve companion subgoal achieve time similarly generated obstacles companion subgoal maintain may obstructed condition 
obstacle generation process single goal results goal anchored fault tree refinement tree root goal negation 
compared standard fault tree analysis lev obstacle analysis goal oriented formal produces obstacle trees provably complete respect known domain lam 
alternative obstacle resolutions may generated produce new alternative requirements 
example obstacle resolved alternative design accelerations calculated board train controller correspond goal substitution strategy 
obstacle resolved assigning responsibility subgoal goal maintain agent bart correspond agent substitution strategy 
obstacle mitigation strategy applied resolve obstacle obstructing accuracy goal maintain new subgoal goal avoid goal avoid 
new goal refined turn subgoals requiring full braking message origination time tag expired 
handling conflicts initial bart document suggests interesting example divergence bart 
roughly speaking train commanded speed may high forces distance trains high order achieve subgoal goal hand commanded speed may low order achieve subgoal goal 
flavor divergence 
look formalization suspect goals goal maintain formaldef tr train tr tr tr speed dist obstacle min dist maintain max maintain mph conflict speed acceleration control goal maintain formaldef tr train tr acc cm tr speed cm tr speed goals formally detected divergent techniques described lam 
generated boundary condition making logically inconsistent tr train tr dist obstacle resolution operators lam may generate possible resolutions case keep safety goal weaken conflicting goal remove divergence goal maintain formaldef tr train tr acc cm tr speed cm tr speed dist obstacle 
experience tool support obviously deliver experience report 
just mention experience goal oriented requirements engineering growing significantly different domain different types projects different project sizes 
example anton colleagues reported experience bpr applications ant various electronic commerce systems ant ant 
understanding nfr frameworks experienced real settings 
kaos method industrial projects date 
include goal oriented reengineering complex unintelligible requirements document phone system tv cable goal oriented modeling complex air traffic control application goal oriented engineering requirements variety systems copyright management system major editor cartoon strips management system hospital emergency service drug delivery management system big drug distributor new information system big daily newspaper web job information server web language translation system various learning systems 
give idea copyright management system goals entity types relationships agents operations goal oriented deliverable pages long 
size goal refinement graph applications ranges goals requirements 
projects undertaken tool support 
current grail environment provides graphical editor tightly coupled syntax directed editor object oriented specification database server supporting queries model analysis static semantics checkers view filtering mechanisms html generator model browsing hypertext mode various types report generators 
current efforts devoted open full java version plan integrate formal support animators model checkers test data generators formal verification tools forth 

goal orientation re suggested functional especially non functional goals elaborated re process deriving refining architectures lam annotating design patterns chu 
just preliminary efforts expanded near 

goal oriented requirements engineering advantages recurrently felt aforementioned projects restate object models requirements derived systematically goals goals provide rationale requirements goal graph provides vertical traceability high level strategic concerns low level technical details allows evolving versions system consideration integrated alternatives single framework goal graphs provide right abstraction level decision makers involved important deci sions goal refinement structure provides comprehensible structure requirements document alternative goal refinements agent assignments allow alternative system proposals explored goal formalization allows refinements proved correct complete 
hope convinced reader area re worth pursuing 
open issues course reader may refer lam discussion 
acknowledgment 
discussions robert darimont emmanuel letier permanent source inspiration confrontation issues raised particular instrumental developing kaos specifications various non trivial systems including outlined 
am grateful kaos grail crew ideas industrial projects providing regular feedback philippe massonet andr 
people mentioned influence way recognize 
amo fundamentals computer security 
prentice hall 
anderson fickas proposed perspective shift viewing specification design planning problem proc 
th intl 
workshop software specification design ieee 
ant anton mccracken potts goal decomposition scenario analysis business process reengineering proc 
caise lncs springer verlag 
ant anton potts goals surface requirements evolving systems proc 
icse th conference software kyoto april 
ant anton carter dempster deriving goals case requirements specification requirements engineering journal vol 

bar bay area rapid transit district advance automated train control system case study description 
sandia national labs www sandia gov bart htm 
ber software engineering abstractions 
addison wesley 
boe boehm bose horowitz ming june lee software requirements negotiation renegotiation aids theory spiral approach proc 
icse th intl 
conf 
software engineering seattle pp 

chu chung nixon yu mylopoulos non functional requirements software engineering 
kluwer academic boston 
dar dardenne fickas van lamsweerde goal directed concept acquisition requirements elicitation proc 
th intl 
workshop software specification design como 
dar dardenne van lamsweerde fickas goal directed requirements acquisition science computer programming vol 

dar darimont van lamsweerde formal refinement patterns goal driven requirements elaboration proc 
fse fourth acm sigsoft symp 
foundations software engineering san francisco october 
dar darimont massonet van lamsweerde grail kaos environment goal driven requirements engineering proc 
icse th intl 
conf 
software engineering kyoto april vol 

earlier shorter version proc 
icse th intl 
conf 
software engineering boston may 
dub dubois yu petit early late formal requirements process control case study proc 
th international workshop software specification design ieee cs press april 
dwyer avrunin corbett patterns property specifications finite state verification proc 
icse th conference software los angeles 
eas easterbrook resolving requirements conflicts computer supported negotiation 
requirements engineering social technical issues goguen eds academic press 
fea feather language support specification development composite systems acm trans 
programming languages systems apr 
fea feather requirements juncture domain instance proc 
re st intl 
ieee symp 
requirements engineering jan 
fea feather fickas van lamsweerde reconciling system requirements runtime behaviour proc 
th international workshop software specification design ieee cs press april 
fic fickas helm knowledge representation reasoning design composite systems ieee trans 
software engineering june 
fin finkelstein potts building formal specifications structured common sense proc 
th international workshop software specification design monterey ca ieee april 
fow fowler uml distilled 
addison wesley 
got finkelstein contribution structures proc 
re nd intl 
ieee symp 
requirements engineering york ieee 
gro gross yu non functional requirements design patterns requirements engineering journal vol 

hau pohl requirements elicitation validation real world scenes ieee trans 
sofware 
engineering special issue scenario management december 
hey dubois scenario techniques supporting elaboration validation formal requirements requirements engineering journal vol 

hic turner system development methodology 
north holland 
hun hunter nuseibeh managing inconsistent specifications reasoning analysis action acm transactions software engineering methodology vol 

october 
jac jackson software requirements specifications lexicon practice principles 
acm press addison wesley 
jar jarke pohl vision driven requirements engineering proc 
ifip wg working conference information system development process north holland 
kai design process model combining scenarios goals functions ieee trans 
systems man cybernetic vol 
september 
kel keller kahn specifying software quality requirements metrics tutorial system software requirements thayer dorfman eds ieee computer society press 
koy specifying message passing time critical systems temporal logic lncs springer verlag 
lam van lamsweerde darimont ph 
massonet goal directed elaboration requirements meeting scheduler problems lessons learnt proc 
re nd intl 
ieee symp 
requirements engineering march 
lam van lamsweerde letier integrating obstacles goal driven requirements engineering proc 
icse th conference software kyoto april 
lam van lamsweerde darimont letier managing conflicts goal driven requirements engineering ieee trans 
sofware 
engineering special issue inconsistency management software development november 
lam van lamsweerde inferring declarative requirements specifications operational scenarios ieee trans 
sofware 
engineering special issue scenario management december 
lam van lamsweerde letier handling obstacles goal oriented requirements engineering ieee transactions software engineering special issue exception handling 
lam van lamsweerde formal specification roadmap 
software engineering finkelstein ed acm press 
lam van lamsweerde requirements engineering year research perspective 
invited keynote proc 
icse nd international conference software engineering pp 

lee lee extending potts bruns model recording design rationale proc 
icse th intl 
conf 
software engineering ieee acm 
lei leite rossi kaplan enhancing requirements baseline scenarios requirements engineering journal vol 

letier reasoning agents goal oriented requirements engineering 
ph 
thesis university louvain may 
lev leveson system safety computers 
addison wesley 
man manna pnueli temporal logic reactive concurrent systems springer verlag 
man manna step group step deductive algorithmic verification reactive real time systems proc 
cav th intl 
conf 
computer aided verification lncs springer verlag july 
mas massonet van lamsweerde analogical reuse requirements frameworks proc 
re rd int 
symp 
requirements engineering annapolis 
mos mostow better models design process ai magazine vol 
pp 

mun systems design structure method systems objectives solutions vol 
north holland 
mylopoulos chung nixon representing nonfunctional requirements process oriented approach ieee trans :10.1.1.29.2587
sofware 
engineering vol 
june pp 

mylopoulos chung yu object oriented goal oriented requirements analysis communications acm vol 
january 
nil nilsson problem solving methods artificial intelligence 
mcgraw hill 
nix nixon dealing performance requirements development information systems proc 
re st intl 
ieee symp 
requirements engineering jan 
nus nuseibeh kramer finkelstein framework expressing relationships multiple views requirements specifications ieee transactions software engineering vol october 
par parnas madey functional documents computer systems science computer programming vol 

pot potts takahashi anton inquiry requirements analysis ieee software march 
pot potts schematic scenarios understand user needs proc 
dis acm symposium designing interactive systems processes practices techniques university michigan august 
rob robinson integrating multiple specifications domain goals proc 
th intl 
workshop software specification design ieee 
rol rolland ben guiding goal modeling scenarios ieee trans 
sofware 
engineering special issue scenario management december 
ros ross structured analysis requirements definition ieee transactions software engineering vol 
rub rubin goldberg object behavior analysis communications acm vol 
september 
som sommerville sawyer requirements engineering practice guide 
wiley 
sut sutcliffe maiden bridging requirements gap policies goals domains proc 
th intl 
workshop software specification design ieee 
sut sutcliffe scenario requirements analysis requirements engineering journal vol 

swa swartout balzer inevitable intertwining specification implementation communications acm vol 
july 
yue yue mean say specification complete proc 
fourth international workshop software specification design monterey 
yu yu modelling organizations information systems requirements engineering proc 
re st intl symp 
requirements engineering ieee 
yu yu modeling reasoning support early phase requirements engineering proc 
re rd int 
symp 
requirements engineering annapolis 
zave jackson dark corners requirements engineering acm transactions software engineering methodology 
zave classification research efforts requirements engineering acm computing surveys vol 

annex goal refinement tree responsibility assignment bart system tracking system maintain position estimates resp achieve maintain safe speed acceleration commanded maintain wcs maintain avoid maintain maintain resp achieve maintain onboard maintain exercised resp speed acceleration resp resp communication onboard resp infrastructure 
