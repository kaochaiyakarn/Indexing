imperial college science technology medicine department computing queen gate london sw bz ponder language specifying security management policies distributed systems language specification version imperial college research report doc october damianou dulay emil lupu morris sloman contact policy doc ic ac uk www dse doc ic ac uk policies document defines declarative object oriented language specifying policies security management distributed systems 
language includes constructs specifying basic policy types authorisation policies define permitted actions event triggered obligation policies define actions performed manager agents refrain policies define actions subjects refrain performing delegation policies define authorisations delegated 
filtered actions extend authorisations allow transformation input output parameters defined 
constraints specify limitations applicability policies meta policies define semantic constraints permitted policies 
policy groups define scope related policies common set constraints apply 
roles define group policies relating positions organisation 
relationships define group policies pertaining interactions set roles 
management structures define configuration role instances relationships 
document defines grammar various types policies ebnf provides simple examples constructs 
keywords management security policy delegation role management configuration ponder give thorough deep consideration mediate ponder version contents policy concepts overview preliminaries syntax lexical conventions comments identifiers paths keywords operators literals pre defined types constants expressions precedence rules domain scope expressions ponder specifications ponder policies scope policy type definitions policy instance declarations domain statements import statements scripts event definitions constraint definitions constant definitions external specifications parameters formal parameters actual parameters basic policies policy elements authorisation policies positive authorisation policies negative authorisation policies obligation policies obligation actions events ponder version exceptions selecting subjects refrain policies delegation policies associated authorisation subjects targets delegated access rights cascaded delegation delegation constraints composite policies groups roles relationships management structures policy type specialisation meta policies consistency rules basic policies composite policies object libraries timer time domain examples annotated base class diagram ponder version document acts informal language ponder language specifying security management policies distributed systems 
ponder derived earlier policy specification notations developed imperial college number years 
sloman marriott sloman marriott 
ponder declarative object oriented language specifying different types policies grouping policies roles relationships defining configurations roles relationships management structures 
ponder specify security policies role access control general purpose management policies 
intended extensible cater types policies 
document describes grammar language demonstrates features small examples 
rationale design decisions included 
background information various language constructs section syntax policy language changed significantly 
ponder declarative language object orient model 
ponder assume particular implementation platform ponder map exist existing underlying platforms 
envisage variety back ends available 
example plan provide back ends generate filters access control lists implementing security policy various security aware platforms operating systems windows nt linux distributed programming environments corba java technologies firewalls 
ponder manage platforms simultaneously 
ponder generate ietf policy schema quality service related policies xml transport network ease viewing xml aware browsers 
policy concepts overview ponder policy rule change behaviour system 
separating policies managers interpret allows behaviour strategy management system changed re coding managers 
management system adapt changing requirements disabling policies replacing old policies new ones shutting system 
ponder supports extensible range policy types 
authorisation policies essentially security policies related access control specify activities subject permitted forbidden set target objects 
designed protect target objects interpreted access control agents run time systems target system 
obligation policies specify activities subject set target objects define duties policy subject 
obligation policies triggered events normally interpreted manager agent subject 
refrain policies specify subject refrain doing similar negative authorisation policies interpreted subject 
delegation policies specify actions subjects allowed delegate 
delegation policy specifies authorisation delegate 
composite policies group set related policy specifications syntactic scope shared declarations order simplify policy specification task large distributed systems 
types composite policies provided groups roles relationships management structures 
constraints specified limit applicability policies time values attributes objects policy refers 
meta policies policies policies coexist system permitted attribute values valid policy 
example semantic conflict may arise policies increase decrease bandwidth allocation event occurs conflict duty may arise policy permitting manager sign payment 
domains provide means grouping objects policies apply partition objects large system geographical boundaries object type responsibility authority convenience human managers sloman sloman 
membership domain explicit defined terms predicate object attributes 
domain encapsulate objects contains merely holds object interfaces 
domain similar concept file system directory may hold type object including person 
domain member domain called subdomain parent domain 
objects members multiple domains domains overlap 
path names identify domains 
domain referred object may different local names multiple parent domains delimiter domain path names 
policies normally propagate members sub domains policy applying domain apply members domains ponder version ponder version 
domains organisational structure specified terms organisational positions regional site departmental network manager service administrator service operator vice president 
specifying organisational policies people terms role positions named persons permits assignment new person position re specifying policies referring duties authorisations position 
tasks responsibilities corresponding position grouped role associated position essentially static concept organisation 
position correspond manager user network services 
role position set authorisation policies defining rights position set obligation policies defining duties position defined imperial college management framework lupu 
policies role subject domain 
person automated agent assigned removed subject domain changing policies explained lupu sloman lupu sloman 
subject domain role role authorization obligation policies target domains managed objects 
management roles useful group policies constraints interaction protocols relating common relationships number roles 
example supervision relationship head department group leader lecturer student relationship 
role relationships specify policies interaction roles policies relating shared objects protocols interaction 
organisations branches departments similar roles relationships branch bank university department 
management structures define configurations role relationship instances organisational unit 
management structure instantiated branch 
preliminaries syntax syntax ponder defined ebnf notation specified iso iec 
important features ebnf document follows terminal identifiers symbols quoted indicate optional elements indicate repetition 
zero elements group items definition separator symbol 
separates alternatives grammar rule defining symbol 
left hand side name grammar rule right hand side definition name terminator symbol 
rule terminated symbol concatenate symbol 
different terms rule separated symbol represents sequence elements specified braces grammar syntax rules indicated constant width font type 
examples italic constant width font type language keywords bold 
lexical conventions comments characters start multi line comment terminates characters 
characters start single line comment terminates line occur 
characters special meaning multi line comment characters special meaning single line comment treated part comment text 
identifiers identifier ponder arbitrarily long sequence letters digits 
character identifier letter underscore considered letter 
upper lower case letters distinguished characters significant 
ident letter letter digit letter case case case case digit examples managers coord year saturday ponder version paths paths ponder indicate location object policy type definition policy instance domain hierarchy see section domain scope expressions 
paths absolute relative defined similarly unix file pathnames 
path absolute path relative path absolute path 
path seq path seq path seq relative path path seq path seq path seq path seq path seq non digit digit non digit ident path ident path examples dept sales salesmen secretaries 
root keywords symbols identifiers reserved keywords action auth auth boolean catch constraint deleg deleg domain event extends extern grantee group hops import inst int meta mstruct oblig raises refrain rel result role set spec string subject target type user valid identifiers keywords adopted object constraint language ocl omg bag collection endif enum false implies sequence true xor operators characters operators 
white space permitted character operators 
characters operators punctuation 
literals literals referred constants supported grammar 
literals supported defined omg 
integer constant consists sequence digits taken decimal base 
real constant consists integer part decimal point fraction part optional exponent part 
integer fraction parts consist sequence decimal digits 
exponent part contains optional sign integer number 
string constant sequence characters surrounded double quotes 
ponder version boolean constant takes values true false denoted reserved keywords true false 
examples administrator true pre defined types constants types predefined ponder int real string boolean domain set event action constraint auth auth oblig refrain deleg deleg group role rel mstruct meta 
constants pre defined true false 
expressions expressions ponder follow object constraint language version ocl syntax omg 
ponder includes subset ocl minor features ocl currently included 
context specification part ponder implied current policy scope expression 
precedence rules precedence order operators ponder expressions dot arrow operations unary unary minus binary endif xor implies parenthesis change precedence 
domain scope expressions domain scope expressions combine domains form set objects applying policy 
set objects domain scope expression policy applies evaluated time policy interpreted domain membership change dynamically 
note practice implementation optimisations minimise run time evaluation 
different domain scope expression operators explained table 
note set union difference intersection operators equal precedence evaluated left right 
unary operators higher precedence 
domain scope expression domain object domain object int value domain object int value domain object domain scope expression domain scope expression domain scope expression ponder version domain scope expression domain scope expression domain scope expression domain scope expression domain object ident path object attr action call feature call object attr subject target action call ident actual parameters feature call action call collections defined ocl version specification 
included domain scope expressions allow selection subsets subject target specifications 
see section obligation policies example 
syntax explanation returns non domain members domain object distinct members nested sub domains recursively traversed levels domain structure 
nd nd domain returns set contains non domain members domain 
integer constant specifies domain structure traversed levels specifies direct members include distinct members sub domains 
omitted nested sub domains recursively traversed 
non domain object returns set contains non domain object 
returns set contains non domain domain members domain including domain 
integer constant specifies domain structure traversed levels 
omitted nested sub domains recursively traversed 
returns set contains object returns set contains distinct members set union 
returns set contains members set intersection returns set contains members set difference domain object path table 
domain scope expressions name declared scope type domain set assigned domain path domain library call name type domain declared scope call evaluates domain 
get evaluates domain relative domain assigned name 
examples domain direct members ab ac ab bc bd ac bc cde bd cde cde ponder version ponder version level level level 
domain structure domain scope expression resulting set ab ac bc bd cde ab bc bd cde ac bc cde bd ab bc bd cde ac ab bc ac ab ac bc bd cde ab bc bd cde ac bc cde bd bc bd cde ab ac ab ac bc bd cde domain current current get ab bc bd cde ponder specifications ponder specification consists type definitions instance declarations domain statements import statements 
ponder specification import domain type instance import domain import statement domain statement type instance type type definition inst inst declaration ponder policies ponder supports kinds policies basic policies keyword positive authorisation policy auth negative authorisation policy auth obligation policy oblig refrain policy refrain positive delegation policy deleg negative delegation policy deleg composite policies keyword group group role role relationship rel management structure mstruct keyword meta policy meta table 
ponder policies ponder policies visualised base classes forming inheritance hierarchy 
classes italic font diagram classes 
concrete class ponder policies specified table 
users create instances concrete classes directly type definitions effectively create user defined sub classes corresponding base class 
thought templates instances types created objectoriented fashion 
extending ponder language cater new kinds policies simplified underlying object oriented implementation 
ponder extended adding new base sub classes existing ones adding new attributes existing base classes ponder version object auth oblig refrain deleg group role rel mstruct auth auth deleg deleg scope 
ponder base class diagram name declared syntactic block typically policy local block 
forward identifiers declared scope allowed 
policy type definitions type definition introduces new user defined policy type policy instances type created 
name policy type specified identifier domain path indicate place domain structure type definition stored 
case identifier relative path policy type stored relative current working domain specified domain definition see section 
type definition policy type group type role type rel type mstruct type meta type policy type pos auth type oblig type neg pol type deleg type examples type oblig subject target bw source bw policy instance declarations policy instance declaration creates instance user defined policy type 
name policy instance specified identifier domain path indicate place domain structure policy instance stored 
case identifier relative path policy instance stored relative current working domain 
policy instance ponder specified inline specifying user defined policy type 
instantiation ident path actual call decl actual call decl ident path actual parameters inst declaration policy inst group inst role inst rel inst ponder version mstruct inst meta inst policy inst pos auth inst oblig inst neg pol inst deleg inst examples example shows declaration instances user defined obligation policy type different subjects targets third policy instance declared line 
inst oblig site perf site site oblig site perf site site oblig subject site target site bw source bw domain statements domain statement distinct uses introduce short local name longer domain path 
set current working domain defines domain policy types policy instances stored explicit domain path definition declaration 
current working domain applies subsequent type definitions instance declarations current scope domain statement encountered current scope 
default current working domain root 
domain statement domain path ident path ident action call examples example group policy instance stored region auth policy instance stored region 
domain region name region inst group import inst oblig subject domain region set current working domain inst auth import statements import statement bring current scope policy type definitions policy instances constant definitions event definitions scripts see stored domains 
import statement specifies path domain particular definition declaration imported 
domain path followed cause definitions declarations specified domain imported 
import statement import definitions sub domains specified domain path 
import ident path ponder version examples type group set set import imports single event import imports definitions event inst auth scripts script externally defined code object imported ponder specification domain invoked action obligation policy filter positive authorisation policy exception obligation policies meta policies clause constraint basic policy 
scripts typically necessary perform complex set actions possible ponder 
suitable programming scripting language writing scripts 
scripts objects ponder policies applied script objects 
event definitions events ponder trigger obligation policies 
convenient able define events separately re multiple obligation policies 
event expressions combine basic events complex ones 
table specifies event composition operators specified event expressions 
event operators equal precedence evaluation strictly left right 
operator explanation occurs occur irrespective order time period occurs specified period time occurrence event occurs occurs followed interleaving occurs occurs irrespective order occurs occurs occurs occurs times integer value table 
event composition operators event parameters define new names scope policy object event specified 
names referenced policy constraint policy see example follows 
event def ident event params event expr event expr basic event basic event event int value event expr event expr event expr event expr event event op event expr int value event op basic event ident auth params decl ident action call event expr expression event params formal parameters ponder version examples timer object generating time events 
event occurs particular date dec time second event occurs hours 
third event demonstrates parameters definition event 
named event receives parameters referenced obligation policy uses event 
parameter corresponds parameter second third parameters 
events event expression assigned new event 
see parameter specification target obligation policy 
event timer event timer hours event inst oblig subject target constraint definitions constraints limit applicability basic policies constraint part policies clause see section 
constraint definitions allow constraints separately defined multiply 
constraint ponder ocl expression 
specification constraints time predefined object operations invoked related current time see section 
distinction time constraints helpful conflict analysis policies 
constraint def ident constraint params constraint spec constraint params formal parameters constraint spec ocl expression examples example constraints specified specification constraint obligation policy 
constraint takes parameter specification 
second constraint time constraint valid am pm 
constraint active isactive constraint time type oblig subject target reset active second example demonstrates complicated constraint limiting applicability policy specified 
constraint directly specified clause policy 
type oblig subject target bw source bw log bw source time ponder version time active constant definitions constants defined ponder 
type identifier indicate user defined type constant declared 
set type defines domain scope expression specify subject target grantee attributes basic policies 
set followed definition type objects set 
usually idl type subjects targets 
constant def constant def aux constant def aux int ident expression real ident expression string ident expression boolean ident expression set set type ident domain scope expr user type ident ident expression extern type ident ident expression set type ident examples types shown syntax specified 
examples 
int string getname string str string set routers set objects type user roles role extern router router routers router external specifications external specifications embed non ponder text ponder specification 
comments un named ignored ponder compiler external specifications named preserved ponder compiler runtime system 
specifications accessed external tools compile time run time 
external specifications typically develop ponder variants extensions attach non ponder definitions code scripts performance protocol requirements structured documentation ponder specification 
external spec ident sequence characters examples example external specification named refs associated authorisation policy specifies related obligation policies required parent policy refined child policies derived 
analysis tool extract specification parse interprete accordingly 
ponder version inst auth net config subject action target spec refs related net config net config parent config child router config refs net config parameters section defines syntax formal parameters actual parameters 
formal parameters policy types parameterised 
parameters predefined types int string domain set event role user defined type 
type parameter omitted type inferred compile time run time 
set type define sets objects subject target grantee specification 
set type optionally followed idl type set objects 
subject target grantee specified set types modifiers additionally declare subject target grantee attribute basic policy 
user defined policy type specified user keyword external idl type specified extern keyword 
possible types specified declared ponder type decl 
note comp type formal call decl production rule composite policy types 
composite policy types extend composite policy types basic policy types 
see section inheritance composite policy types 
type decl int double char string boolean domain constraint event action auth auth oblig refrain deleg deleg role rel group mstruct meta set set type subject set type target set type grantee set type user extern type ident type ident ident path formal call decl ident path formal parameters comp type formal call decl formal call decl extends type formal parameters formal param formal param formal param type decl ident examples auth subject int event 
restrict subject objects type 
oblig subject set ponder version 
actual parameters actual parameters instance declarations action calls exception clauses 
actual parameter expression domain scope expression 
actual parameters correspond number type formal parameters corresponding formal parameter 
domain scope expressions passed actual parameters enclosed square brackets 
actual parameters actual param actual param actual param expression domain scope expr ponder version basic policies basic policies keyword positive authorisation policy auth negative authorisation policy auth obligation policy oblig refrain policy refrain positive delegation policy deleg negative delegation policy deleg policy elements body basic policy consist policy elements 
elements common basic policy types subject target constraint import statements constant definitions external specifications 
policy elements specific particular policy type 
policy elements specified order 
subject target basic policy specified domain scope expressions formal identifier type set 
actual parameters subjects targets domain scope expressions 
subject target keyword optionally followed idl type objects specified 
name assigned subjects targets order reuse expressions policy 
keywords subject target refer current subject target execution policy 
basic policy optionally specify constraint element limits applicability policy 
policy elements policy elements aux basic common element spec policy elements aux subject set type subj target target set type subj target constraint spec import statement subj target ident domain scope expr basic common element spec constraint constraint def spec external spec constant def import domain common spec event event def basic common element spec authorisation policies authorisation policy specifies access control security 
positive authorisation policy defines actions subject permitted perform target 
negative authorisation policy specifies actions subject forbidden perform target 
positive authorisation policies may include filters transform parameters associated actions 
authorisation policies implemented target host access control agent aca utilising access control decision facility associated target objects 
positive authorisation policies positive authorisation policies define actions subjects permitted perform target objects 
ponder version pos auth type auth formal call decl pos auth type body pos auth inst auth ident path pos auth type body auth instantiation pos auth type body policy elements action pos auth actions authorisation actions actions represent operations defined interface target object 
permitted forbidden actions listed separated commas 
authorisation policy actions alternatively specified 
means subject authorised perform actions visible target object interface feature treated caution 
pos auth actions pos auth action decl pos auth action decl pos auth action decl auth action filter auth action ident path ident auth parameters decl auth parameters decl ident list ident list ident ident authorisation policies parameters omitted action action may parameters 
indicates don care parameters 
general parameters authorisation policies specified list identifiers 
identifier policy constraint clause indicate restriction parameter value 
authorisation action names optionally prefixed target object domain policy 
examples simple example demonstrate syntax specifying positive authorisation policies 
type auth subject target action enable disable inst auth authorisation filters filters specify optional transformation parameters related action positive authorisation policies transformation need take place action forbidden 
filters may transform select subsets information provided parameters result invocation 
multiple filters associated action authorisation policy 
filters consist parts optional condition subject target state action parameters time specified ocl consistency types constraints 
specification transformation expression external function applied result parameters action call 
authorised action filter associated invoked filter condition evaluated 
evaluates true omitted filter executed 
filter ocl expression filter body filter body ponder version ident expression ident expression result expression examples example subject authorised perform operation lookup target policy clause filter associated lookup checks subject belongs group 
modifies value second parameter input output action lookup 
transforms result action calling external function result example remove room details result 
type auth subject target action lookup belongs maths abs result result external lookup example demonstrates specification filters action print 
filter applies cases 
second filter applies parameter action pages greater 
case parameter forced equal action print get number pages greater 
type auth subject target int action print pages error pages maths max pages error add pages error pages nd filter action pages negative authorisation policies negative authorisation policies define actions subjects forbidden permitted perform target objects 
commonly systems database web access control systems default policy permits access explicitly forbidden 
negative authorisation policies temporarily restrict rights sub domain individual object exception normal positive authorisation applies parent domain 
example suspension access computer service week punishment student abused system 
note allowing negative positive policies lead conflicts need precedence relationships types policies discussed lupu 
issues part language policy precedence specified meta policy 
actions actions specify operations subject forbidden perform target 
specification negative authorisation actions positive actions need filters 
character indicate actions interface target objects 
negative authorisation policies exactly syntax refrain policies 
neg pol type auth refrain formal call decl neg type body neg pol inst auth refrain ident path neg type body ponder version auth refrain instantiation neg type body policy elements action neg pol actions neg pol actions auth action auth action examples note policy applies target objects links domain class mbps indicating links data transmission rate 
type auth subject target action unload remove inst auth auth subject action reset target mbps links obligation policies obligation policies specify action subject perform set target objects event occurs 
obligation policies triggered events subject know perform specified action 
authorisation policies obligation policies interpreted subjects 
exception specify alternative action cater network target object failures 
oblig type oblig formal call decl oblig type body oblig inst oblig ident path oblig type body oblig instantiation oblig type body policy elements aux common element spec oblig type body aux oblig type body aux event spec oblig actions catch exception spec obligation actions obligation action consists actions separated concurrency operators indicating actions performed sequentially parallel 
action prefixed name object action called actions may target internal subject part subject interface 
prefix specified action assumed internal subject part subject interface default 
object prefix identifier path 
identifier path indicates specific object domain method called 
wishes designate action subject target name assigned subject target accordingly name subject target prefixing action 
obligation policy specified role case subject declaration allowed see section name role prefix action mean action specified subject role subject policy 
ponder version obligation policy may contain target 
case actions policy actions internal subject part subject interface scripts 
target specified actions part target management interface specified 
concurrency operators obligation policy actions table 
concurrency operators equal precedence evaluation strictly left right 
parenthesis change default precedence 
operator explanation follow 
actions fails allowed refrain policy execution stops 
may performed concurrently 
execution continues finished 
may performed concurrently 
execution continues finished 
actions fails allowed refrain policy execution stops 
performed 
fails allowed refrain policy performed 
succeeds execution stops 
table 
concurrency operators oblig actions basic oblig action oblig action oblig action concurrency op oblig actions basic oblig action oblig action decl oblig actions oblig action decl oblig action name actual parameters oblig action name object prefix ident object prefix ident path oblig action decl concurrency op events specification events body obligation policy define trigger action 
event spec event expr details event expr specified section 
exceptions exception specifies optional single action script performed case failure normal obligation actions 
exception parameter runtime exception system passed argument exception action 
exception spec ident actual parameters selecting subjects need select objects subject target domains obligation policy applies 
example possibly loaded potential objects subject domain perform action specified obligation policy 
action may need applied objects target domain atomic action 
domain scope expressions section allow feature call ocl specify feature calls collection types order select reject objects collection objects 
domain scope expressions result sets objects semantics ocl operations choose subjects targets ponder version obligation policy see examples 
policy writer specify semantics action execution obligation policies 
selection specified subjects targets policy default semantics applied actions performed subject objects target objects 
note feature select targets authorisation policy order indicate runtime selection objects target domain subjects access arbitrary constraints object state 
examples example actions specified obligation policy type 
policy triggered performance degradation event bw source event parameters bw source reused specification actions 
subject policy invokes action bw target object followed action log bw source implemented interface subject 
note assignment names subject target respectively policy order specification actions 
target policy type example restricted targets idl type router 
specified angle brackets specification target attribute policy type 
type oblig subject target router bw source bw log bw source inst oblig pl oblig subject target bw source bw log bw source consider obligation policy type instantiated da indicates patient temperature exceeds degrees nurse administer patient 
case nurses administer drug nurses performed action patient probably die 
type oblig subject target temperature administer inst oblig da nurse patient stevens examples demonstrate ocl collection operations select subjects targets involved action execution obligation policies 
policy sender print job executes job targets printers domain idle 
second obligation policy backup administrators backup files located day pm 
want administrators execute backup 
select operation subject domain selects object set subject objects 
indicated empty select expression 
select operation form select select objects set subject set non empty expression bar select subject objects expression evaluates true 
type oblig set domain int print job sender subject sender target select state idle print job sender mail job re directed job pages ponder version inst oblig domain timer subject select target backup refrain policies refrain policies define actions subjects refrain performing perform target objects obligations implemented subject 
refrain policies situations negative authorisation policies inappropriate targets wish protected subject 
refrain subject permitted perform action asked refrain doing particular constraints apply 
refrain policies syntactically negative authorisation policies 
see section grammar 
subjects targets refrain policies specified domain scope expressions 
prefix defined action refrain policy default action internal subject part subject interface 
examples example assumed permitted set video conferences refrain policy states destination 
inst refrain subject target target action videoconference time day fri delegation policies delegation policy specifies actions subjects allowed delegate 
delegation policy specifying authorisation delegate 
subjects possess access rights delegated 
delegation policies aimed subjects delegating rights servers perform actions behalf meant means security administrators assign rights subjects 
negative delegation policy identifies delegations forbidden 
delegation policy need specify information authorisation policy delegated rights derived subjects delegate access rights objects access rights delegated types delegation policy positive negative 
note positive delegation policies contain delegation constraints specified valid clause hops clause 
delegation constraints section 
deleg type deleg deleg formal call decl deleg plus type body deleg deleg formal call decl deleg type body deleg formal call decl ident path auth type ident ident formal parameters deleg inst deleg inst def deleg instantiation deleg inst def ponder version deleg ident path auth ident path deleg plus type body deleg ident path auth ident path deleg type body deleg instantiation deleg deleg deleg actual call decl deleg actual call decl ident path ident path ident path actual parameters deleg type body policy elements grantee set type subj target action deleg access rights deleg plus type body deleg type body valid constraint spec hops deleg hops deleg access rights neg auth actions deleg hops int value identifier associated authorisation syntax delegation policy type declaration different format policy types 
authorisation delegation policy involved delegation specified separately list formal parameters policy preceded optional keyword auth 
policy specified access rights subject derived 
subjects targets grantee entry allows specification subject policies delegated 
subject delegation policy call grantor 
specifies authorised delegate 
delegation policy allows specification separate target override target authorisation policies 
target specified subset target associated authorisation policies 
allows subject delegating access rights restrict targets grantee execute access rights 
delegated access rights delegated access rights subset defined associated authorisation policy 
action delegated may filter executed action invoked grantee target 
delegation policies allowed override filters delegated actions 
cascaded delegation cascaded delegation allowed provided grantor grantee grantee scope delegation policy 
kind cascading specified passing delegation policy parameter delegation policy 
case grantee cascaded delegation subset grantee original delegation 
ponder version passed parameter auth deleg deleg explicit authorisation policy delegate ponder version delegate 
auth deleg policies parameters delegation policies relations true 
delegation constraints implicit authorisation policy delegation constraints specify restrictions delegation performed valid cascaded delegation valid 
positive delegation policies contain delegation constraints sense negative delegation policies 
delegation constraints time restrictions duration validity period specify duration period delegation valid revoked 
arbitrary constraint system attributes subject target grantee action attributes 
maximum number cascading delegations allowed maximum number delegation hops levels constraints specified keywords valid hops 
types constraints specified valid attribute delegation policy maximum number cascading delegations allowed specified hops attribute 
see example follows 
enforce delegation sufficient able control things subject attempts delegate certain access rights grantee action subject access control driven specified delegation policies 
subject tries execute action target system able restrict access authorisation policies delegation policies 
delegation policy maps authorisation policies specification time second run time 
authorisation policy subject grantor execute method delegate run time system grantee parameter method 
run time subject executes delegate method separate authorisation policy created trusted components access control system grantee subject 
similarly revoke method deletes disables second authorisation policy 
delegation constraint specified constraint authorisation policies delegation policy maps runtime 
examples example subject grantor delegation policy delegates subset access rights grantee 
delegation rights derived associated authorisation policy 
type auth subject target action enable disable deleg subject grantor grantee action inst auth deleg deleg example shows delegation policy simple delegation constraints limit validity delegated access rights 
clause constraint acts basic policies constraints validity policy 
case policy valid hours am pm implicitly constraint subject perform delegate action 
valid clause constraint time duration delegation constraint 
limits time period grantee access rights 
hours delegation revoked 
maximum number delegation hops specified hops keyword specifies grantee case delegate access rights 
inst deleg grantee time valid time duration hour hops ponder version composite policies composite policies keyword group group role role relationship rel management structure mstruct need group set related policy specifications syntactic scope shared declarations order simplify policy specification task large distributed systems 
common concept programming environments main motivation composite policy types ponder 
run time set policies defined composite policy constraints applying composite policy stored domain 
composite policies include types instance definitions nested groups 
roles include nested roles relationships management structures relationships contain nested relationships management structures 
composite policies specified types multiple instances created 
comp pol body common element spec comp nested elem type comp type nested elem inst comp inst nested elem comp type nested elem group type policy type meta type comp inst nested elem group inst policy inst meta inst groups syntactic scope declare set policies constraints grouped semantic relationship instantiated 
example may targets relate department relate particular application 
group contain basic policy nested group specifications 
group type group comp type formal call decl group body group inst group ident path group body group instantiation group body comp pol body comp nested elem examples type group set set event inst auth subject action target oblig subject target inst group brs failure group brs deliveries ponder version roles role groups policies specifying duties rights relating position organisation 
role particular type group policies subject domain 
role contain basic policies groups basic policies nested roles relationships management structures 
role instantiation declaration may specify optional path name subject domain role 
assumes subject domain created domain hierarchy 
subject domain specified domain name role instance implicitly created subject domain subject policies role 
role type role comp type formal call decl role body role inst role ident path role body role role instantiation subject domain role body comp pol body comp nested elem role instantiation ident path actual call decl subject domain subject domain ident path examples example role extends previously defined role provide specialisation 
inherits definitions 
instantiation role indicates subject domain role located sd 
type role set extends inst oblig review failure service review inst role position sd relationships relationships specify policies pertaining relationship individual participating roles 
relationships define roles contain relationships management structures 
rel type rel comp type formal call decl rel body rel inst rel ident path rel body rel instantiation rel body comp pol body rel nested elem rel nested elem type rel type nested elem inst rel inst nested elem rel type nested elem comp type nested elem role type rel inst nested elem comp inst nested elem role inst ponder version examples instance relationship roles hard coded definition relationship 
relationship declared roles 
roles defined outside relationship just referenced relationship full path name domain structure 
inst rel inst oblig report subject net edge subject timer report info target report auth config subject net oam subject action target config management structures management structure defines configuration roles relationships organisational units terms required instances roles 
example define management structure type creating branches bank departments university 
management structures include nested composite policy 
mstruct type mstruct comp type formal call decl mstruct body mstruct inst mstruct ident path mstruct body mstruct instantiation mstruct body comp pol body mstruct nested elem mstruct nested elem type mstruct type nested elem inst mstruct inst nested elem mstruct type nested elem comp type nested elem role type rel type mstruct inst mstruct inst nested elem comp inst nested elem role inst rel inst mstruct inst examples example management structure instance defined oam traffic contains management structure inside qos 
oam traffic contains specification roles relationships 
second relationship specified full relates role instance created outer management structure oam traffic role created qos management structure 
inst mstruct oam traffic inst role role rel mstruct qos inst role role ponder version qos rel rel inst auth subject target admission action set qos oam traffic policy type specialisation ponder allows specialisation policy types mechanism inheritance types extend types 
specification formal parameters type definition followed extends clause provide inheritance specialisation 
type extended specified path indicating position domain structure 
syntax extends clause actual call declaration see section 
type extends base type pass parameters base type extends clause order parameterise base type 
type extends type inherits attributes policy elements base type add new ones 
ponder currently support polymorphism dynamic binding 
multiple inheritance supported 
problem multiple inheritance multiple policies name coming different base types 
solved compiler warning policy writer situation policy writer choose inherit policies change names policies base types possible requiring prefix names policies name type inherited 
common way resolving similar name conflicts multiple inheritance object oriented languages 
ponder currently support multiple inheritance relationship structures 
discussion issues single multiple inheritance roles relationships see lupu 
extends type extends extends clause extends clause extends clause actual call decl ident path cancels ident list examples example specialised role type extends specialises specification role type 
type role set type oblig target temperature administer inst oblig admin oblig administer drugs update target drugs db role specialised set extends inst oblig cat ponder version administer cat drugs update check availability target drugs db cat specialised example mobile station service engineer extends service engineer mobile telephone 
note role adds new obligation policy 
type role inst oblig customer complaint target calls register oblig service complaint inst auth 
policies 
engineers type role cdb extends cdb inst oblig maintain problems ms failure ms mobile station target equipment registry ponder version meta policies meta policies specify constraints set policies permitted types policies policy elements 
meta policies defined composite policy apply policies scope composite policies 
meta policies may apply policies domain subtree 
object constraint language ocl specify meta policies 
body meta policy meta body specifies constraint series ocl constraints separated semicolons 
constraints boolean constraints navigation constraints 
boolean constraints evaluates true action raises clause executed 
way series related constraints specified meta policy 
note result ocl expression named passed exception action parameter see example reused subsequent constraint expressions 
meta policy alternatively consist series concurrency constraint expressions 
case raises clause specified 
concurrency constraint expression consists sequences activities separated concurrency constraints 
concurrency constraints semantics separate actions obligation policies see section 
activity action obligation policy obligation policy case means actions obligation policy subject concurrency constraint specified see examples follow 
meta type meta formal call decl raises action call meta body meta formal call decl meta body conc meta body meta expression meta expression meta expression ident ocl expression meta inst meta ident path raises action call meta body meta ident path meta body conc meta instantiation meta body conc concurrency expression concurrency expression concurrency expression activity concurrency op concurrency expression activity path ident ident concurrency expression examples example meta policy shown specifies instance separation duties principle 
actions target type passed parameters meta policy 
body checks pairs policies scope possible conflicts 
exists pair policies common subjects actions act act respectively action entry target intersection conflict conflict action called 
action takes set pairs policies resulting conflict result ocl expression parameter act 
order check type target intersection method defined ocl 
type meta act act raises ponder version self policies select pa pb pa subject intersection pb subject notempty pa action exists act act name act pb action exists act act name act pb target intersection pa target notempty inst meta dc execute payment meta service oblig subject notify manager example shows meta policy role specify simple constraint policies role case constraint instantiation role number patients nurse responsible 
type group set patient inst auth target action oblig administer target time inst meta raises size final example demonstrates meta policy specify concurrency constraints involve set policies 
meta policy specifies concurrency constraints involve individual actions different policies 
inst role inst oblig target payments registry oblig target db db inst meta register payment issuing cheque ponder version update backup records time ponder version consistency rules rules true specification complete 
basic policies basic policies contain policies 
usually need explicit subject exception basic policy specified part role case subject domain role implicit subject 
authorisation policies positive negative authorisation policies specification policy elements required 
authorisation policy contain policy elements subject roles target action obligation policies obligation policy contain policy elements subject roles action event refrain policies refrain policy contain policy elements subject roles action delegation policies positive authorisation delegation policies associated delegation policy positive negative 
required policy element delegation policy specification grantee 
subjects targets specified default subjects targets associated authorisation delegation policy 
actions granted specified default associated authorisation delegation policy 
specified role associated authorisation delegation policy part role subject position domain role 
composite policies roles authorisation obligation refrain policies specified role subject position domain role 
case subject implicit 
role contain roles relationships management structures 
relationships relationship contain relationships management structures 
groups group contain roles relationships management structures 
ponder version object libraries section describes functions library objects currently part ponder specification 
functions objects type integer int real string taken object constraint language specification omg 
see specification complete listing explanation functions defined standard ocl types adopted ponder collection types collection set bag sequence 
timer timer library object specify events 
contains functions specify time point events repeated events duration repeated events specific time points 
timer time objects true date string form dd mm 
sub strings date specified wildcard character 
means st month year 
time string form hh mm ss 
period string msec sec min hour day week year 
string mon tue wed thu fri sat sun 
month string jan feb mar apr may jun jul aug sep oct nov dec function name parameters operation date time specifies event occurs specific date time 
date include wildcard characters mean date 
function overloaded version time parameter 
timer specifies event occurs am 
number duration period specifies event occurs repeatedly specified period time 
timer min specifies repeats minutes 
date specifies event occurs repeatedly specific date 
timer specifies event occurs st month 
everyday date specifies event occurs repeatedly specific day week 
date parameter left blank indicate date 
timer everyday mon specifies event occurs monday january 
number duration period time specifies event occurs repeatedly specified period time specific time 
timer day specifies event occurs day pm 
date time specifies event occurs repeatedly specified date specific time 
timer specifies event occurs december noon 
ponder version date time specifies event occurs repeatedly specified day week specific time 
timer wed specifies event occurs wednesday noon 
time time library object provide utility functions time constraints 
function name parameters operation date time specify time point date time specify second time point specifies time range 
function overloaded 
accepts parameters type time dates ignored 
time range st january am st may am date time specifies time range specified timepoint 
function overloaded accept parameter time date 
time means pm date time specifies time range specified time point 
function overloaded accept parameter time date 
time means st october am 
date returns string current date month returns string current month returns string current day time returns string current time duration number period specifies duration 
time duration hour indicate duration hours 
domain functions defined domain object 
function name parameters operation get string name object domain string relative path sub domain current domain returns object current domain name 
printers get printer returns object printer domain called printers 
returns sub domain current domain relative path 
printers get floor color returns subdomain printers floor color 
ponder version versions ponder include improvements areas relationships 
interaction protocols included current version ponder 
important addition language 
meta policies 
meta policies powerful feature 
experimentation various applicationspecific constraints specified meta policies needed reach definite specification 
meta policies may include clause restrict applicability event trigger possibly policy elements 
user role assignments specified meta policies 
inheritance 
inheritance mechanism policy types currently allow overriding policy elements 
currently investigating suitable inheritance model support feature version ponder current inheritance model evaluation 
library objects various utility functions time timer domain development extended versions ponder 
policy refinement 
actively working providing tool support policy refinement goals service level agreements implementable policies analysis policies conflicts ponder version note imperial college papers available www dse doc ic ac uk policies ponder sablecc grammar available www dse doc ic ac uk policies ponder html lupu sloman 
conflicts policy management systems 
ieee transactions software engineering nov lupu 

role framework distributed systems management 
department computing 
london imperial college 
lupu sloman 
role framework distributed systems management 
journal network systems management 
lupu sloman 
policy role object model 
st ieee international enterprise distributed object computing workshop edoc gold coast queensland australia 
marriott 

policy service distributed systems 
department computing 
london imperial college 
marriott sloman 
implementation management agent interpreting obligation policy 
th ifip ieee international workshop distributed systems operations management aquila italy 
omg object management group 
object constraint language specification chapter omg unified modelling language version june 
sloman 
domains framework structuring management policy 
chapter network distributed systems management sloman ed 
sloman 

policy driven management distributed systems 
journal network systems management 
ponder version examples section provides complete examples 
ponder specification example demonstrates structure ponder specification 
note type instance definitions nested 
import domain statements placed specification 
example role type defined cellular gsm network 
suppose network divided regions region subdivided branches 
region database called eir equipment identity database equipment region 
branch database called hlr home location register subscribers network 
role includes obligation policy customer complaints handle customer complaints group hlr specifying policies relate management hlr database branch group billing abnormal contains policies related cases bills stolen equipment group created type instantiated various hlr databases corresponding branch 
authorisation policies access hlr eir databases specified directly role 
specified group hd outside role 
case need reuse authorisations roles policy specification 
role imports hd group instantiates different hlr eir databases needs access 
domain policies groups types type group hd set hd hlr type hlr eir type eir inst auth hd auth hlr subject hd target hlr action add new customer update record hd auth hlr auth hd auth eir subject hd target eir action hd auth eir hd domain tr rr rc hd type role eir type eir import policies groups types hd inst type oblig customer complaints customer complaint complaint import complaint investigate complaint complaint customer complaints group hlr hlr type hlr inst oblig record update ponder version inst domain roles new service subscription customer service target hlr record update oblig consistency loss customer hlr hlr consistency loss hlr group hlr hlr hlr group hlr hlr hlr group billing abnormal inst oblig notify subscriber bills target notify subscriber oblig stolen equipment reported stolen target eir stolen equipment billing abnormal group hlr auth hd pd hlr eir group hlr auth hd pd hlr eir inst role eir pd hd hd role eir pd hd hd filters hypothetical class diagram information stored departmental server 
ponder version department employees resource funds reports ssn report fund resource employee name string ssn string salary string agenda meetings expenses project project pname string duration string budget string status string participants agenda planning string deadlines string meeting date string place string topic string expense date string amount integer 
departmental information class diagram ssn method returns employee object ssn number 
assume authorisation policy subjects execute method ssn objects type department departmental file server 
depending subject authorisation filter allows subject see part information returned general manager see information 
departmental manager see agenda employee 
fellow employee see salary agenda budget projects employee assigned 
person outside organisation see name project names meeting topics employee 
authorisation policies specify 
inst auth subject general manager target server action ssn auth subject dept manager target server action ssn result reject result agenda auth domain employees domain external subject target server action ssn subject result reject result salary agenda projects budget ponder version subject result ext select result name project pname meeting topic delegation consider hypothetical domain structure 
bob root employees servers printers files general managers fred managers dept managers alice print server file server color printers printer printer 
hypothetical domain suppose authorisation policies place type auth subject target files action read write payroll files ponder version inst auth employees managers files auth employees employees managers files files type auth subject target printer action print domain man employees managers inst auth man printers auth employees printers printers filea auth subject employees target servers fileserver action auth subject employees target servers action delegation policy specifies departmental managers allowed delegate access rights specified policy employees managers 
inst deleg subject employees managers grantee employees employees managers delegation policy specifies general managers authorised delegate write access right specified policy 
inst deleg subject employees managers grantee employees employees managers action write delegation policy specifies general managers authorised delegate print access right specified departmental managers 
note maximum delegation hop constraint specified policy hops keyword 
maximum number cascading hops allow disallows cascaded delegation policy 
inst deleg subject employees managers grantee employees managers action print time hops allow cascading scenario see hypothetical domain structure 
scenario deliberately complicated real situations just demonstrate different aspects delegation policy 
order fileserver able access requested file delegated access rights subject requires access file 
true 
order able print particular printer delegated access right user requesting print 
consider scenario 
general manager fred wants print payroll file filea color printer printer 
fred needs delegate access right print right access fileserver request read payroll filea right access payroll files 
needs delegate right read fileserver order file server able read filea 
ponder version fred delegate print delegate read fileserver delegate read print filea printer file server delegate read read filea print server read filea print filea ponder version filea printer 
delegation actions involved printing payroll file colour printer delegation policies place order fred able print filea printer 
type deleg auth action subject employees managers grantee servers action inst deleg print deleg read deleg read deleg subject servers grantee servers fileserver action read delegation policy states general manager delegate right print colour printers coming authorisation policy 
second call action read file server third read payroll files 
delegation policy states print server delegate right read payroll files file server 
attempt access control system check print server delegated access right 
delegation policy states general manager authorised delegate print server referenced access right automatically mean print server right 
annotated base class diagram auth auth action subject dse target dse constraint ocl constraint ref constraints constraint constants constant policies policy oblig event event exception exception auth action refrain action refraction object name identifier meta action deleg grantee dse deleg deleg ponder version group events event constraints constraint constants constant policies meta groups group role subject domain dse 
rel roles role 
mstruct roles role rels rel mstruct 
