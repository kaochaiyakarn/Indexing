energy efficient mac protocol wireless sensor networks proposes mac medium access control mac protocol designed wireless sensor networks 
wireless sensor networks battery operated computing sensing devices 
network devices collaborate common application environmental monitoring 
expect sensor networks deployed ad hoc fashion individual nodes remaining largely inactive long periods time suddenly active detected 
characteristics sensor networks applications motivate mac different traditional wireless macs ieee way energy conservation self configuration primary goals node fairness latency important 
mac uses novel techniques reduce energy consumption support self configuration 
reduce energy consumption listening idle channel nodes periodically sleep 
neighboring nodes form virtual clusters auto synchronize sleep schedules 
inspired pamas mac sets radio sleep transmissions nodes 
pamas uses channel signaling 
mac applies message passing reduce contention latency sensor network applications require store processing data move network 
evaluate implementation mac sample sensor node mote developed university california berkeley 
experiment results show source node mac consumes times energy mac traffic load messages sent 
wireless sensor networking emerging technology wide range potential applications including environment monitoring smart spaces medical systems robotic exploration 
network normally consists large number distributed nodes organize multi hop wireless network 
node sensors embedded processors low power radios normally battery operated 
typically nodes coordinate perform common task 
shared medium networks medium access control mac important technique enables successful operation network 
fundamental task mac protocol avoid collisions interfering nodes transmit time 
mac protocols developed wireless voice data communication networks 
typical examples include time division multiple access tdma code division multiple access cdma contention protocols ieee 
design mac protocol wireless sensor networks considered attributes 
energy efficiency 
stated sensor nodes battery powered difficult change recharge batteries nodes 
fact someday expect nodes cheap discarded ye isi edu heidemann isi edu information science institute isi university southern california usc 
estrin cs ucla edu computer science department university california los angeles usc isi 
wei ye john heidemann deborah estrin 
prolonging network lifetime nodes critical issue 
important attribute scalability change network size node density topology 
nodes may die time new nodes may join nodes may move different locations 
network topology changes time due reasons 
mac protocol easily accommodate network changes 
important attributes include fairness latency throughput bandwidth utilization 
attributes generally primary concerns traditional wireless voice data networks sensor networks secondary 
presents sensor mac mac new mac protocol explicitly designed wireless sensor networks 
reducing energy consumption primary goal design protocol scalability collision avoidance capability 
achieves scalability collision avoidance utilizing combined scheduling contention scheme 
achieve primary goal energy efficiency need identify main sources cause inefficient energy trade offs reduce energy consumption 
identified major sources energy waste 
collision 
transmitted packet corrupted discarded follow retransmissions increase energy consumption 
collision increases latency 
second source overhearing meaning node picks packets destined nodes 
third source control packet overhead 
sending receiving control packets consumes energy useful data packets transmitted 
major source inefficiency idle listening listening receive possible traffic sent 
especially true sensor network applications 
sensed nodes idle mode time 
mac protocols ieee cdma nodes listen channel receive possible traffic 
measurements shown idle listening consumes energy required receiving 
example stemm katz measure idle receive send ratios mbps wireless lan module ieee mbps specification shows idle receive send ratios 
mac tries reduce waste energy sources 
exchange accept reduction hop fairness latency 
hop fairness latency reduced argue reduction necessarily result lower fairness latency 
traditional wireless voice data networks user desires equal opportunity time access medium sending receiving packets applications 
mac level fairness important issue 
sensor networks nodes cooperate single common task 
normally application 
certain time node may dramatically data send nodes 
case fairness important long application level performance degraded 
protocol re introduce concept message passing efficiently transmit long message 
basic idea divide long message small fragments transmit burst 
result node data send gets time access medium 
unfair hop mac level perspective nodes short packets send short packets wait long time long packets 
show message passing achieve energy savings reducing control overhead avoiding overhearing 
latency important unimportant depending application running node state 
period sensing event normally little data flowing network 
time nodes idle state 
sub second latency important trade energy savings 
mac lets nodes periodically sleep idle listening mode 
sleep mode node turn radio 
design reduces energy consumption due idle listening 
latency increased sender wait receiver wake send data 
important feature wireless sensor networks data processing 
greatly reduce energy consumption compared transmitting raw data node 
network processing requires store processing messages 
message meaningful unit data node process average filter 
may long consists small fragments 
case mac protocols promote fragment level fairness increase message level latency application 
contrast message passing reduces message level latency trading fragment level fairness 
demonstrate effectiveness measure performance mac protocol implemented testbed wireless sensor nodes motes developed university california berkeley 
mote bit atmel ls microcontroller running mhz 
low power radio transceiver module tr rf operates mhz frequency provides transmission rate kbps 
mote runs small event driven operating system called tinyos 
order compare performance protocol protocols implemented simplified ieee mac platform 
contributions scheme periodic listen sleep reduces energy consumption avoiding idle listening 
synchronization form virtual clusters nodes sleep schedule 
schedules coordinate nodes minimize additional latency 
channel signaling put node sleep neighbor transmitting node 
method avoids overhearing problem inspired pamas require additional channel 
applying message passing reduce application perceived latency control overhead 
node fragment level fairness reduced sensor network nodes collaborating single application 
evaluating implementation new mac sensornet specific hardware 
ii 
related medium access control broad research area researchers done research new area low power wireless sensor networks 
current mac design wireless sensor networks broadly divided contention tdma protocols 
standardized ieee distributed coordination function dcf example contention protocol mainly built research protocol macaw :10.1.1.153.7538
widely ad hoc wireless networks simplicity robustness hidden terminal problem 
shown energy consumption mac high nodes idle mode 
mainly due idle listening 
pamas improvement trying avoid neighboring nodes 
exploits similar method energy savings 
main difference pamas channel signaling 
pamas requires independent radio channels cases indicates independent radio systems node 
pamas address issue reduce idle listening 
class mac protocols reservation scheduling example tdma protocols 
tdma protocols natural advantage energy conservation compared contention protocols duty cycle radio reduced contention introduced overhead collisions 
tdma protocol usually requires nodes form real communication clusters bluetooth leach 
managing inter cluster communication interference easy task 
number nodes cluster changes easy tdma protocol dynamically change frame length time slot assignment 
scalability normally contention protocol 
example bluetooth may active nodes cluster 
pottie proposed self organization protocol wireless sensor networks 
node maintains frame called super frame node schedules different time slots communicate known neighbors 
time slot talks neighbor 
avoid interference adjacent links protocol assigns different channels frequency fdma spreading code cdma potentially interfering links 
super frame structure similar tdma frame prevent interfering nodes accessing medium time 
actual multiple access accomplished fdma cdma 
drawback scheme low bandwidth utilization 
example node packets sent neighbor reuse time slots scheduled neighbors 
piconet architecture designed low power ad hoc wireless networks 
interesting feature piconet puts nodes periodic sleep energy conservation 
scheme piconet uses synchronize neighboring nodes node broadcast address starts listening 
node wants talk neighboring node wait receives neighbor broadcast 
woo culler examined different configurations carrier sense multiple access csma proposed adaptive rate control mechanism main goal achieve fair bandwidth allocation nodes multi hop network 
motes tinyos platform test measure different mac schemes 
comparison approach promote node fairness trade energy savings 
iii 
sensor mac protocol design main goal mac protocol design reduce energy consumption supporting scalability collision avoidance 
protocol tries reduce energy consumption sources identified cause energy waste idle listening collision overhearing control overhead 
achieve design goal developed mac consists major components periodic listen sleep collision overhearing avoidance message passing 
describing discuss assumptions wireless sensor network applications 
network application assumptions sensor networks somewhat different traditional ip networks ad hoc networks laptop computers summarize assumptions sensor networks applications 
expect sensor networks composed small nodes deployed ad hoc fashion 
sensor networks composed small nodes take advantage physical proximity target simplify signal processing 
large number nodes take advantage short range multi hop communication long range communication conserve energy 
communication nodes peers single base station 
nodes deployed casually ad hoc fashion carefully positioned 
nodes self configure 
expect sensor networks dedicated single application collaborative applications node level fairness internet focus maximizing system wide application performance 
network processing critical sensor network lifetime 
sensor networks committed applications application specific code distributed network activated necessary distributed demand 
techniques data aggregation reduce listen sleep listen sleep fig 

periodic listen sleep 
time traffic collaborative signal processing reduce traffic improve sensing quality 
network processing implies data processed messages time store fashion packet fragment level interleaving multiple sources increases latency 
expect applications long idle periods tolerate latency 
sensor networks application surveillance monitoring long periods time largely inactive detected 
applications network lifetime critical 
classes applications tolerate additional latency 
example speed sensed object places bound rapidly network detect object 
application level approach manage latency deploy slightly larger sensor network edge nodes raise network heightened awareness detected 
assumptions network application strongly influence mac design motivate differences existing protocols ieee 
periodic listen sleep stated sensor network applications nodes idle long time sensing event happens 
fact data rate period low necessary keep nodes listening time 
protocol reduces listen time letting node go periodic sleep mode 
example second node sleeps half second listens half duty cycle reduced 
achieve close energy savings 
basic scheme basic scheme shown 
node goes sleep time wakes listens see node wants talk 
sleep node turns radio sets timer awake 
duration time listening sleeping selected different application scenarios 
simplicity values nodes 
scheme requires periodic synchronization neighboring nodes remedy clock drift 
techniques robust synchronization errors 
timestamps exchanged relative absolute 
second listen period significantly longer clock error drift 
example listen duration times longer typical clock drift rates 
compared tdma schemes short time slots scheme requires looser synchronization neighboring nodes 
nodes free choose listen sleep schedules 
reduce control overhead prefer neighboring nodes syn fig 

neighboring nodes different schedules 
synchronize nodes respectively 

listen time go sleep time 
noticed neighboring nodes synchronize multi hop network 
neighboring nodes may different schedules turn synchronize different nodes respectively shown 
nodes exchange schedules broadcasting immediate neighbors 
ensures neighboring nodes talk different schedules 
example node wants talk node just wait listening 
multiple neighbors want talk node need contend medium node listening 
contention mechanism ieee rts request send cts clear send packets 
node sends rts packet wins medium receiver reply cts packet 
start data transmission follow sleep schedules finish transmission 
characteristic scheme forms nodes flat topology 
neighboring nodes free talk matter listen schedules 
synchronized nodes virtual cluster 
real clustering problems inter cluster communications interference 
scheme quite easy adapt topology changes 
talk issue 
downside scheme latency increased due periodic sleep node 
delay accumulate hop 
latency requirement application places fundamental limit sleep time 
choosing maintaining schedules node starts periodic listen sleep needs choose schedule exchange neighbors 
node maintains schedule table stores schedules known neighbors 
follow steps choose schedule establish schedule table 

node listens certain amount time 
hear schedule node randomly chooses time go sleep immediately broadcasts schedule sync message indicating go sleep seconds 
call node synchronizer chooses schedule independently nodes synchronize 

node receives schedule neighbor choosing schedule follows schedule setting schedule 
call node follower 
waits random delay td rebroadcasts schedule indicating sleep td seconds 
random delay collision avoidance multiple followers triggered synchronizer systematically collide schedule 

node receives different schedule selects broadcasts schedule adopts schedules schedules wake times neighbor 
broadcasts schedule going sleep 
expect nodes rarely adopt multiple schedules node tries follow existing schedules choosing independent 
hand possible neighboring nodes fail discover due collisions broadcasting schedules 
may find subsequent periodic listening 
illustrate algorithm consider network nodes hear 
timer node fire broadcast synchronize peers schedule 
nodes independently assign schedules hear happen transmit nearly time nodes border schedules adopt 
way node needs send broadcast packet 
disadvantage border nodes time sleep consume energy 
option nodes border adopt schedule receives 
knows schedule neighbors follow talk 
broadcast packets needs send twice different schedules 
advantage border nodes simple pattern period listen sleep nodes 
maintaining synchronization listen sleep scheme requires synchronization neighboring nodes 
long listen time tolerate fairly large clock drift neighboring nodes need periodically update schedules prevent long time clock drift 
updating period quite long 
measurements testbed nodes show order tens seconds 
updating schedules accomplished sending sync packet 
sync packet short includes address sender time sleep 
sleep time relative moment sender finishes transmitting sync packet approximately receivers get packet propagation delays short 
receivers adjust timers immediately receive sync packet 
node go sleep timer fires 
order node receive sync packets data packets divide listen interval parts 
part receiving sync packets second receiving rts packets shown 
part divided time slots senders perform carrier sense 
example sender wants send sync packet starts carrier sense receiver begins listening 
randomly selects time slot finish carrier sense 
detected transmission time slot wins medium starts sending sync packet time 
procedure followed sending data packets 
receiver listen sender sender sync sync cs sender sync rts cs sleep cs cs rts rts sleep send data cts received send data cts received fig 

timing relationship receiver different senders 
cs stands carrier sense 
shows timing relationship possible situations sender transmits receiver 
cs stands carrier sense 
sender sends sync packet 
sender wants send data 
sender sends sync packet rts packet 
node periodically broadcasts sync packets neighbors followers 
allows new nodes join existing neighborhood 
new node follows procedure subsection choose schedule 
initial listen period long able learn follow existing schedule choosing independent 
collision overhearing avoidance collision avoidance basic task mac protocols 
mac adopts contention scheme 
common packet transmitted node received neighbors intended receiver 
overhearing contention protocols efficient energy tdma protocols 
needs avoided 
collision avoidance multiple senders may want send receiver time need contend medium avoid collisions 
contention protocols job collision avoidance 
protocol follows similar procedures including virtual physical carrier sense rts cts exchange 
adopt rts cts mechanism address hidden terminal problem :10.1.1.153.7538
duration field transmitted packet indicates long remaining transmission 
node receives packet destined node knows long keep silent 
node records value variable called network allocation vector nav sets timer 
time nav timer fires node fig 

sleep node transmitting 
ments nav value reaches zero 
node data send looks nav 
value zero node determines medium busy 
called virtual carrier sense 
physical carrier sense performed physical layer listening channel possible transmissions 
procedure described section iii 
randomized carrier sense time important collision avoidance 
medium determined free virtual physical carrier sense indicate free 
senders perform carrier sense initiating transmission 
node fails get medium goes sleep wakes receiver free listening 
broadcast packets sent rts cts 
unicast packets follow sequence rts cts data ack sender receiver 
overhearing avoidance node keeps listening transmissions neighbors order perform effective virtual carrier sensing 
result node overhears lot packets directed 
significant waste energy especially node density high traffic load heavy 
protocol tries avoid overhearing letting interfering nodes go sleep hear rts cts packet 
data packets normally longer control packets approach prevents neighboring nodes overhearing long data packets acks 
subsection describe efficiently transmit long packet combining overhearing avoidance 
look nodes go sleep active transmission going 
shown node forms multi hop network node hear transmissions immediate neighbors 
suppose node currently transmitting data packet question remaining nodes go sleep 
remember collision happens receiver 
clear node go sleep transmission interferes reception 
easy show node produce interference need go sleep 
node go sleep 
hop away transmission interfere reception free transmit neighbors unable get reply cts data transmission collides transmission node transmission simply waste energy 
summary immediate neighbors sender receiver sleep hear rts cts packet current transmission 
node maintains nav indicate activity neighborhood 
node receives packet destined nodes updates nav duration field packet 
non zero nav value indicates active transmission neighborhood 
nav value decrements time nav timer fires 
node sleep avoid overhearing nav zero 
wake nav zero 
message passing subsection describes efficiently transmit long message energy latency 
message collection meaningful interrelated units data 
long series packets short packet usually receiver needs obtain data units perform network data processing aggregation 
disadvantages transmitting long message single packet high cost re transmitting long packet bits corrupted transmission 
fragment long message independent small packets pay penalty large control overhead longer delay 
rts cts packets contention independent packet 
approach fragment long message small fragments transmit burst 
rts packet cts packet 
reserve medium transmitting fragments 
time data fragment transmitted sender waits ack receiver 
fails receive ack extend reserved transmission time fragment re transmit current fragment immediately 
packets duration field time needed transmitting remaining data fragments ack packets 
neighboring node hears rts cts packet go sleep time needed transmit fragments 
switching radio sleep active occur instantaneously 
example rfm radio testbed needs switch sleep mode receive mode 
desirable reduce frequency switching modes 
message passing scheme tries put nodes sleep state long possible reduces switching overhead 
purpose ack data fragment prevent hidden terminal problem 
possible neighboring node wakes new node joins middle transmission 
node neighbor receiver sender hear data fragments sent sender 
receiver send ack frequently new node may mistakenly infer carrier sense medium clear 
starts transmitting current transmission corrupted receiver 
data fragment ack packet duration field 
way node wakes new node joins middle properly go sleep matter neighbor sender receiver 
example suppose neighboring node receives rts sender cts receiver goes sleep entire message time 
sender extends transmission time due fragment losses errors sleeping neighbor aware extension immediately 
node learn extended fragments acks wakes 
worth note ieee fragmentation support 
point difference scheme message passing 
rts cts reserves medium data fragment ack 
fragment ack reserves medium second fragment ack forth 
neighboring node receives fragment ack knows fragment sent 
keep listening fragments sent 
energy constrained nodes overhearing neighbors wastes lot energy 
reason promote fairness 
sender fails get ack fragment give transmission re contend medium 
nodes chance transmit 
causes long delay receiver really need entire message start processing 
contrast message passing extends transmission time re transmits current fragment 
fewer contentions small latency 
limit extensions message case receiver really dead lost connection transmission 
sensor networks application level fairness goal opposed node fairness 
energy savings vs increased latency subsection analyzes trade offs energy savings increased latency due nodes sleep schedules 
compare protocol protocols periodic sleep ieee packet moving multi hop network experiences delays hop carrier sense delay introduced sender performs carrier sense 
value determined contention window size 
backoff delay happens carrier sense failed node detects transmission collision occurs 
transmission delay determined channel bandwidth packet length coding scheme adopted 
propagation delay determined distance sending receiving nodes 
sensor networks node distance normally small propagation delay normally ignored 
processing delay 
receiver needs process packet forwarding hop 
delay mainly depends computing power node efficiency data processing algorithms 
queuing delay depends traffic load 
heavy traffic case queuing delay dominant factor 
delays inherent multi hop network contention mac protocols 
factors mac protocols 
extra delay mac caused nodes periodic sleeping 
sender gets packet transmit wait receiver wakes average sleep delay listen time ms listen time ms delay vs energy savings percentage energy savings fig 

energy savings vs average sleep delay listen time ms 

call sleep delay caused sleep receiver 
call complete cycle listen sleep frame 
assume packet arrives sender equal probability time frame 
average sleep delay sender ds frame frame listen sleep comparing protocols periodic sleep relative energy savings mac es item equation duty cycle node 
desirable listen time short possible certain duty cycle average sleep delay short 
implementation set listen time ms 
shows percentage energy savings es vs average sleep delay ds node listen time ms ms 
see sleep time zero sleeping delay 
effect contention starts listen interval 
iv 
protocol implementation purpose implementation demonstrate effectiveness protocol compare protocol basic experiments 
testbed rene motes developed ucb development platform testbed see 
mote slightly larger quarter 
heart node atmel fig 

ucb rene mote 
ls microcontroller bytes programmable flash bytes data memory 
radio transceiver mote model tr rf 
ook keyed modulation provides transmission rate kbps 
working modes receiving transmitting sleep drawing input current ma ma peak respectively 
motes tinyos efficient event driven operating system 
provides basic mechanism packet transmitting receiving processing 
tinyos promotes modularity data sharing reuse 
july standard release tinyos type packet consists header payload cyclic redundancy check crc 
length header payload changed different values 
defined packets length format 
mac implementation header payload crc fields respectively 
normally control packets rts cts ack short payload 
created packet type tinyos control packet byte header byte crc 
modified tinyos components accommodate new packet 
enables efficiently implement mac protocols accurately measure performance 
implementation mac protocols implemented mac modules mote tinyos platform listed 

simplified ieee dcf 
message passing overhearing avoidance 
complete mac purpose performance comparison implemented simplified version ieee dcf 
major pieces physical virtual carrier sense backoff retry rts cts data ack packet exchange fragmentation support 
duration carrier sense random time contention window 
randomization important avoid collisions step 
simplicity contention window exponentially increase backoff happens 
fragmentation support follows procedure source source sink sink fig 

topology experiments hop network sources sinks 
ieee standard described section 
radio node go sleep mode 
listen receiving mode transmitting mode 
second module message passing overhearing avoidance 
achieves energy savings avoiding overhearing reducing control overhead contention times 
include period listen sleep 
additional delay comparing simplified ieee 
radio node goes sleep mode neighbors transmission 
message passing module incorporated periodic listen sleep completed basic functionalities mac 
currently listen time node ms sleep time changed different values ms ms different duty cycles radio 
specify frequency sync packet sent schedule update neighboring nodes 
experiments chosen sleep time second frequency schedule update listen sleep period seconds 
noted energy savings current implementation due sleep radio 
words microcontroller go sleep 
sleep mode consumes energy low frequency watchdog timer 
put microcontroller sleep mode radio sleeping able save energy 
experimentation main goal experimentation described measure energy consumption radio mac modules implemented 
experiment setup topology experiments 
hop network sources sinks 
packets source flow node sink pass topology simple sufficient show basic characteristics mac protocols 
look energy consumption node utilizing different mac protocols different traffic loads 
sources periodically generate sensing message divided fragments 
simplified ieee mac fragments sent burst rts cts fragment 
measure mac fragmentation treats fragment independent packet uses rts cts obvious mac consumes energy fragmentation 
protocol message passing fragments message transmitted burst 
change traffic load varying inter arrival period messages 
message inter arrival period seconds message generated seconds source node 
experiments message inter arrival period varies 
traffic pattern done independent tests measure energy consumption node different mac protocols 
test source periodically generates messages turn fragmented small data packets supported tinyos 
experiment tinyos data packets passed sources sinks 
highest rate interarrival time wireless channel nearly fully utilized due low bandwidth 
measure amount time node pass packets percentage time radio spent mode transmitting receiving listening sleep 
energy consumption node calculated multiplying time required power operate radio mode 
power consumption data sheet radio transceiver mw mw receiving transmitting sleep respectively 
difference listening receiving radio transceiver model 
results analysis experiments carried mac modules implemented testbed nodes 
result graphs simplified ieee dcf denoted ieee 
message passing overhearing avoidance identified overhearing avoidance 
complete mac protocol includes pieces new protocol denoted mac 
look experiment results source nodes measured average energy consumption nodes 
traffic heavy message inter arrival time 
case mac uses twice energy mac 
idle listening rarely happens energy savings periodic sleeping limited 
mac achieves energy savings mainly avoiding overhearing efficiently transmitting long message 
message inter arrival period larger traffic load light 
case complete mac protocol best energy property far outperforms mac 
message passing overhearing avoidance performs better mac 
shown energy consumption mj average energy consumption source nodes ieee overhearing avoidance mac message inter arrival period second fig 

measured energy consumption source nodes 
idle listening dominates total energy consumption periodic sleep plays key role energy savings 
energy consumption mac relatively independent traffic pattern 
compared message passing overhearing avoidance saves amount energy traffic conditions 
result due overhearing avoidance neighboring nodes number packets sent traffic conditions 
shows percentage time source nodes sleep mode 
interesting mac protocol adjusts sleep time traffic patterns 
little traffic node sleep time limit duty cycle node 
traffic increases nodes fewer chances go periodic sleep spend time transmission 
useful feature sensor network applications traffic load changes time 
sensing event traffic light 
nodes detects event may trigger big sensor camera generate heavy traffic 
mac protocol able adapt traffic changes 
comparison module message passing overhearing avoidance periodic sleep nodes spend time idle listening traffic load decreases 
shows measured energy consumption intermediate node see light traffic case outperforms mac 
traffic case consumes slightly energy 
reason mac synchronization overhead sending receiving sync packets 
reason mac introduces latency uses time pass amount data 
fact traffic extremely heavy node chance follow sleep schedule scheme periodic listen sleep benefit 
message passing overhearing avoidance effective means saving energy 
illustrated results percentage time percentage time source nodes sleep overhearing avoidance mac message inter arrival period second fig 

measured percentage time source nodes sleep mode 
energy consumption mj energy consumption intermediate node ieee overhearing avoidance mac message inter arrival period second fig 

measured energy consumption intermediate node 
source nodes 
see similar results intermediate node packet transmissions involve node 
case energy consumption mac 
vi 
presents new mac protocol wireless sensor networks 
energy conserving properties comparing ieee 
interesting property protocol ability trade offs energy latency traffic conditions 
protocol implemented testbed nodes shows effectiveness 
includes system scaling studies parameter analysis 
tests done larger testbeds different number nodes system complexity 
acknowledgments supported nsf ani project robotics usc edu projects darpa dabt scadds project www isi edu scadds contract saman project www isi edu saman space naval warfare systems center san diego 
authors acknowledge discussions suggestions members scadds saman projects 
tinyos group tinyos millennium berkeley edu ucb support tinyos motes 
lan man standards committee ieee computer society wireless lan medium access control mac physical layer phy specification ieee new york ny usa ieee std edition 
mark stemm randy katz measuring reducing energy consumption network interfaces hand held devices ieice transactions communications vol 
pp 
aug 
oliver energy consumption www inf ethz ch research energy consumption html technische hochschule zurich 
gregory pottie william kaiser embedding internet wireless integrated network sensors communications acm vol 
pp 
may 
chalermek intanagonwiwat ramesh govindan deborah estrin directed diffusion scalable robust communication paradigm sensor networks proceedings acm ieee international conference mobile computing networking boston ma usa aug pp 
acm 
john heidemann fabio silva chalermek intanagonwiwat ramesh govindan deborah estrin deepak ganesan building efficient wireless sensor networks low level naming proceedings symposium operating systems principles lake louise banff canada oct 
www cs berkeley edu 
rf www rfm com ash transceiver tr data sheet 
jason hill robert szewczyk alec woo seth hollar david culler pister system architecture directions networked sensors proceedings th international conference architectural support programming languages operating systems cambridge ma usa nov pp 
acm 
singh raghavendra pamas power aware multi access protocol signalling ad hoc networks acm computer communication review vol 
pp 
july 
bennett david clarke joseph evans andy hopper alan jones david piconet embedded mobile networking ieee personal communications magazine vol 
pp 
oct 
gregory pottie performance novel selforganization protocol wireless ad hoc sensor networks proceedings ieee th vehicular technology conference pp 

rabiner heinzelman chandrakasan hari balakrishnan energy efficient communication protocols wireless microsensor networks proceedings hawaii international conference systems sciences jan 
alec woo david culler transmission control scheme media access sensor networks proceedings acm ieee international conference mobile computing networking rome italy july acm 
bharghavan demers shenker zhang macaw media access protocol wireless lans proceedings acm sigcomm conference :10.1.1.153.7538
jaap bluetooth radio system ieee personal communications magazine pp 
feb 
bluetooth sig specification bluetooth system core www bluetooth org 
atmel www atmel com avr microcontroller ls manual 
tinyos millennium berkeley edu 
