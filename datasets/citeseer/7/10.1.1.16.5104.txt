course sequencing static courses 
applying techniques large scale web education peter brusilovsky carnegie technology education hci institute carnegie mellon university forbes avenue pittsburgh pa usa plb cs cmu edu 
argue traditional sequencing technology developed field intelligent tutoring systems find immediate place large scale web education core technology concept course maintenance 
describes concept course maintenance system developed carnegie technology education 
system check consistency quality course moment life assist course developers routine operations 
core system refined approach indexing course material set scripts performing different operations 
course sequencing oldest technology field intelligent tutoring systems 
idea course sequencing generate individualized course student dynamically selecting optimal teaching operation presentation example question problem moment education 
course sequencing represents knowledge subject network concepts concept represents small pieces subject knowledge 
learning material stored database teaching operations 
teaching operation indexed concepts deals 
driving force sequencing mechanism student model weighed overlay domain model domain model concept reflects current level student knowledge 
model teaching strategy sequencing engine decide teaching operations stored data base best student level knowledge educational goal 
various approaches sequencing explored numerous projects 
majority existing sequence kind teaching operations 
example number sequencing systems including oldest sequencing systems manipulate order problems questions 
case usually called task sequencing 
number systems sequencing lessons reasonably big chunks educational material complete presentation assessment 
advanced systems able sequence kinds teaching operations presentation examples assessments 
say sequencing excellent technology distance education 
situation students learn subject pace looks great idea student learn subject beneficial individualized way 
sequencing popular technology research level web 
significant distance systems large scale web education research level systems consider research systems teach real classes elm art brusilovsky de bra 
modern largescale web education context single course provider operates tens hundreds courses delivered thousands students grouped classes 
biggest concern provider problem maintenance 
avoid problems installing supporting multiple web education wbe systems teaching stuff systems serious providers tend choose single course management system cmi 
naturally providers choosing modern commercial support main needs course provider course material delivery discussion forums generation various course reports 
unfortunately current cmi systems leave space dynamic sequencing 
course model systems static sequence tree modules followed static assignments 
find course sequencing ideas rigid context large scale web education 
answer 
suggest meaningful ways sequencing static courses 
way dynamic generation course students hit 
generating course incrementally piece piece traditional sequencing context course generated shot 
courses produced shot generation adaptive incrementally sequenced courses tuned individual students account individual learning needs starting level knowledge 
example approach dcg system 
similar approach described 
course generated system static delivered regular cmi system 
dcg approach fits technically large scale wbe context problems 
problem places web education classbased 
virtual class class 
students class learn material time take exams date 
naturally class wbe individually generated course 
problem solved relatively easy generating courses adapted class users 
product generation called customized course adaptive course approach allows level especially case reasonably homogeneous classes 
think systems produce courses demand body teaching material popular enable course provider accommodate needs different customers 
dcg approach problem bootstrapping 
produce customized course provider need reasonably large database indexed learning material times larger size typical course produced 
startup price developing rich course addition price system big obstacle dcg approach 
second approach static sequencing suggested ambitious 
suggest course sequencing mechanism core course maintenance system static courses developed team authors traditional way 
idea simple 
sequencing mechanism evaluate possible options steps presentation example assignment dynamic course select best check predefined step static course 
step really report problems 
example find situation assessment requires knowledge vice versa knowledge assessed 
kinds course checking absolutely necessary serious course developer team carnegie technology education wbe arm carnegie mellon university 
large scale modern courses include thousands learning items produced team developers 
life course updated restructured times 
concept course maintenance system important courseware engineering version tracking system software engineering 
describes concept course maintenance system developed carnegie technology education 
system check consistency quality course moment course life assist course developers routine operations 
core system refined approach indexing course material set scripts performing different operations 
section describes indexing part section talks scripts 
conclude speculation prospects 
content indexing possible ways index content advanced powerful simple 
reported approach supports functionality find essential simple course developers 
simplest indexing approach referred plain concept indexing 
systems piano tutor interbook 
plain indexing associate teaching operation sets concepts prerequisite outcome concepts 
plain approach distinguish different types teaching operations roles concept involved teaching operation prerequisite outcome 
take account relationships concepts 
plain indexing shown useful simple domains coarse grain level domain modeling systems plain indexing known author concepts 
reported approach uses extensions plain indexing approach typed items advanced concept roles links concepts 
typed items system distinguish types teaching operations 
advanced concept roles specify roles teaching operations regard concepts 
mechanisms course developer specify knowledge content support powerful algorithms 
impact links concepts precise student modeling prerequisite tracking richer navigation 
negative side extensions increased authoring time 
particular developing connected concept model domain takes considerable time domain experts 
increased authoring time problem traditional single teacher context course development justified context large scale web education 
indexing expenses constitute small fraction course development expenses possibility help course designers developing modifying courses 
core framework formed concepts elementary pieces learning material 
size concept fixed may depend course 
kinds teaching operations courses presentations examples assignments multiple choice questions 
type item part index item 
concept role pairs form rest index 
kinds roles comparison interbook piano tutor light prerequisite strong prerequisite light outcome strong outcome 
comparison real strong prerequisites outcomes tells deep knowledge concept produced demanded learning item light prerequisites outcomes deal surface knowledge concept 
introduce roles accommodate needs real courses 
course concepts connected form 
non typed parent child link 
link express value usually expressed part attribute links 
creating parent child hierarchy need type links relatively easy meaning hierarchy simple knowledge parent concept sum knowledge child concepts plus integration extra 
indexing courseware engineering prerequisite checking prerequisite checking key benefits concept indexing 
important original course design redesign learning items moved changed 
multiple level indexing able check prerequisites learning items 
prerequisite check linear courses performed sequencing engine simulates process teaching student model 
scans learning items order specified author updates student model checks match current state model item 
prerequisite problems checked presentation prerequisites presentation item understood prerequisite concepts required level question prerequisites concepts involved questions designed presentation page learned advanced level page completed 
example prerequisites concepts involved example learned required level right section example strong prerequisite concepts learned advanced level weak prerequisite concepts learned surface level exercise prerequisites point exercise strong prerequisite concepts learned demonstrated examples weak prerequisite concepts learned demonstrated examples 
prerequisite checking level course items especially important programming courses usually direct prerequisite relationships concepts 
programming concepts introduced independently concepts 
possible ways teach subject 
adopting particular approach teaching subject usually results lots indirect prerequisites hardwired educational material 
example indirect prerequisites presentation level prerequisites concept depend concept way presentation chosen author required understanding case example level problem level prerequisites 
concept depend concept learned current course material available examples exercises include result material requires learned kinds prerequisites hard keep mind 
way ensure course built redesigned prerequisite conflicts careful prerequisite checking 
finding content holes failure meet prerequisites mean problem structure item meet prerequisite exist courses placed checked item problem content item cover prerequisite 
system distinguish cases provide helpful report problem 
problem resolved restructuring material indicates need expand course material 
consolidation presentations designed course concept full single place subsection section 
place student returning refill gaps knowledge concept 
place called concept host section 
concept introduced host section enable student learn practice concepts hardly twice full presentation 
system check rules indexing 
note true examples 
quite desirable examples concept 
fig 

fragment problem report java course question placement repositioning designed questions outcome concepts question goal 
system automatically place new questions proper place course finding host section question goal 
automatic placement course question design delegated authors loss consistency 
course re structured questions automatically repositioned 
guidelines question design matching concepts section concepts assessed section question pool easy identify set concepts assessed 
identified deficit drive question design process 
procedure ensure questions pool reasonably evenly distributed section concepts avoid situation questions testing concepts 
matching presentations examples exercises possible check extent examples exercises matches place course extent cover content 
done matching set concepts section joint sets goal concepts exercises examples located section 
ideal situation section demonstrate examples assess exercises sets concepts 
concepts covered examples exercises coverage low 
concepts covered exercises examples section prerequisite conflict simply previous sections relevance low 
small mismatch presentations examples concepts problem bigger mismatch direction sign poorly designed section indication redesigned 
checking course design real course author start course design design document lists essential concepts introduced section 
design document stored separately course 
system check real course matches original design comparing author planned introduce key concepts really introduced set target concepts supported questions examples exercises 
presentation density sectioning different concepts may require different amount presentation complexity content fragment measured number concepts 
controlling number concepts section identify types problems presentation density concepts relatively short section uneven distribution content number concepts subsections level significantly differs 
controlling difficulty examples exercises prerequisite indexing exercises examples specifies minimal requirements concept level met example exercise ready taken 
legal concepts higher level knowledge demanded prerequisites 
example strong prerequisite concept example learned advanced level 
real life student reach exercise seen examples concept solved exercise involving concept 
example easier student 
generally estimate difficulty learning item measuring difficulty target state goal concepts starting state 
goal concepts exercise earlier solved exercises exercise quite simple 
examples exercise difficult 
difficulty exercise constant depends place exercise course 
sense control difficulty examples exercises course sure example exercise simple difficult 
research evidence exists optimal difficulty learning item individual student student learns best learning items difficulty closed optimal 
finding directly courses static students go way 
quite different groups users handle different difficulties 
making better targeted courses special categories users 
implementation experience version system completed evaluated cte courses 
help system able find fix number problems course 
system written java supports prerequisite checking finding content holes consolidation presentations question placement repositioning 
currently system completely interactive 
author specify course structure concept tags separate file 
situation question indexing different concept tags stored part question 
checking scripts simply called command line 
interactive gui version system developed 
system check real courses 
system turned useful encountered problem 
addition revealing number real large small hidden problems system reported number problems real teacher count problem 
turned course consistency rules system rigid 
real life teachers perfectly tolerate number small inconsistencies course 
cases course may formally inconsistent purpose 
teacher may want provoke student thinking presenting example material understood analogy learned material 
quick answer problem color coding course problem report 
particular messages report real problem course colored red missed 
messages report problem may tolerable colored green 
colors reports 
real solution problem precise set checking rules adapted course teaching approach probably better indexing 
prospects plan continue course maintenance system adding features checking incrementally larger volumes course material 
see important mission process 
outcome process consistent courses higher quality large volume carefully indexed learning material 
decreasing bootstrapping cost flexible sequencing technologies 
hope process eventually lead acceptance flexible approaches large scale web education dcg course customization real course sequencing 

little easy ed integration technologies multimedia education 
tomek 
eds 
proc 
webnet world conference www internet intranet toronto canada aace 
barr beard atkinson computer tutorial laboratory stanford bip project 
international journal man machine studies 
brusilovsky intelligent system teaching learning unix 
proc 
international open systems conference moscow russia 
brusilovsky adaptive intelligent technologies web education 
nstliche intelligenz 
brusilovsky eklund schwarz web education tool developing adaptive courseware 
computer networks isdn systems 

brusilovsky schwarz weber elm art intelligent tutoring system world wide web 
gauthier lesgold 
eds 
intelligent tutoring systems 
lecture notes computer science vol 

springer verlag berlin 
brusilovsky framework intelligent knowledge sequencing task sequencing 
gauthier mccalla 
eds 
intelligent tutoring systems 
springer verlag berlin 
brusilovsky task sequencing intelligent learning environment calculus 
proc 
seventh international peg conference edinburgh 
dannenberg instructional design intelligent tutoring theory precision design 
journal artificial intelligence education 
bottom approach multimedia 

eds 
intelligent tutoring systems 
springer verlag berlin 
de bra flexible adaptive hypertext courseware system 
gr nb shipman iii 
eds 
proc 
ninth acm international hypertext conference hypertext pittsburgh usa acm press 
eliot neiman web intelligent tutor basic anatomy 
tomek 
eds 
proc 
webnet world conference www internet intranet toronto canada aace 
cheng intelligent guide combining user knowledge assessment pedagogical guidance 
gauthier lesgold 
eds 
intelligent tutoring systems 
lecture notes computer science vol 

springer verlag berlin 
mcarthur peter skill oriented task sequencing intelligent tutor basic algebra 
instructional science 
rios rez de la cruz intelligent evaluation system tests 
proc 
workshop www tutoring th international conference intelligent tutoring systems san antonio tx available online www aml cs umass edu stern rios html 
vassileva dynamic course generation www 
boulay mizoguchi 
eds 
artificial intelligence education knowledge media learning systems 
ios amsterdam 
systems dublin ireland systems available online www com 
world wide web course tools vancouver canada educational technologies available online www com 
