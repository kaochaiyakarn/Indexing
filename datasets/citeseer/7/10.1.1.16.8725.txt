projection regression sensors giuseppe de giacomo dipartimento di informatica sistemistica universita di roma la sapienza salaria roma italy dis uniroma hector levesque department computer science university toronto toronto canada hector cs toronto edu consider projection task determining hold performing sequence actions general setting solution frame problem may may available online information sensors may may applicable 
formally characterize projection task actions theories sort show generalized form regression produces correct answers 
characterize conditions action theories sequences actions sensing information sufficient guarantee regression provably correct procedure prolog performing task conditions 
fundamental tasks concerned reasoning action change projection task determining fluent hold performing sequence actions 
usual formulation characterization initial state world specification sort action 
projection task requires determine cumulative effects sequences actions 
projection clearly prerequisite planning goal achieved sequence actions determine holds doing sequence 
similarly high level program execution task finding sequence actions constituting legal execution high level program requires projection execute program block table pick block put away needs able determine various sequences actions block table 
perennial stumbling block specification projection task frame problem action need specify changes result performing action larger number fluents unaffected action :10.1.1.85.5082
solution difficulty fluent mean property world changes result performing actions 
strips assumption known state world representable database simple atomic facts specify actions operators database adding removing just changes 
expressive declarative solution frame problem situation calculus specify effects actions simple syntactic procedure provided combining effects fluent called successor state axiom logically entails effect axioms frame axioms fluent 
solution frame problem strong completeness assumption specifying conditional effects actions fluents allowing possible ramifications actions assumed fluent changes affected ways 
assumed fluent regressed sense holds performing action determined considering action question true just 
allowed words cases value fluent depend way previous state 
arise ways 
fluent change result action exogenous system represented action theory 
robot opens door building justified concluding door remains open robot closes 
building occupants doors opened closed unpredictably 
similarly robot may able determine warning light simply previous state robot turn may able predict warning light goes 
secondly robot incomplete knowledge fluent question 
example robot normally able infer current temperature outdoors result large number unknown events properties 
fluent expected stay relatively constant depth water swimming pool robot may know value cases way expect robot able perform projection task way determining current value certain fluents world 
effect assume robot regression collection onboard sensors 
sensing modeled action performed robot returns binary measurement 
robot uses called sensed fluent axioms correlate value returned state various fluents 
account attempt precise exact relation sensing regression 
possibility saying certain conditions regression sensing 
hand knowledge belief agent modeled explicitly fluent changed sensing actions purposes knowledge left implicit 
propose formal specification changing world generalizes reiter solution frame problem strips allow conditional successor state axioms generalizes levesque treatment sensors allow conditional sensing axioms 
specification sufficiently general cases simply information perform projection task sensing 
cases able projection combination sensing regression 
addition specification propose reasoning method performing projection general circumstances guaranteed sound cases interest complete 
provide prolog evaluation procedure projection task prove soundness suitable circumstances completeness 
basic action theories account action sensing change formulated language situation calculus go language note components special constant denote initial situation actions occurred distinguished binary function symbol denotes successor situation resulting performing action relations truth values vary situation situation called relational fluents denoted predicate symbols situation term argument special predicate poss state action executable situation language formulate action theories describe world changes result available actions 
theory form ffl axioms describing initial situation axioms mentioning situations form initial database 
ffl action precondition axioms primitive action characterizing poss 
ffl successor state axioms fluent stating conditions holds function holds situation take place called effect axioms provide solution frame problem ffl unique names axioms primitive actions 
ffl foundational domain independent axioms 
example successor state axiom broken drop fragile explode bomb near repair broken states object broken doing action dropping fragile exploding bomb near broken action repairing 
characterize result sensing assumed primitive action return binary sensing result special predicate sf state action returns value situation relate sensing result fluents added basic action theories ffl sensed fluent axioms primitive action characterizing sf 
example sensed fluent axiom sf states reading heat gauge returns iff temperature robot exceeds degrees 
guarded action theories follows replacing successor state sensed fluent axioms general versions 
effect assuming actions return binary sensing value assume robot number onboard sensors provide sensing readings time 
drop sf language situation calculus introduce finite number sensing functions unary functions argument situation 
example thermometer sonar real valued sensing functions 
define sensor fluent formula formula language poss simplicity uses single situation term variable term appears final argument fluent sensor function 
write oe oe sensor fluent formula free variables oe formula results substitution vector terms situation term sensor formula formula mentions fluents fluent formula mentions sensor functions 
define generalized version successor state sensed fluent axioms follows guarded successor state axiom gssa formula form ff oe fl guarded sensed fluent axiom gsfa formula form ff oe ae formulas read universally quantified outside 
syntactically look functional fluents avoid confusion deal relational fluents 
ff sensor fluent formula called guard axiom relational fluent fl fluent formula ae sensor formula 
action theory contain number fluent 
handle universally applicable successor state axiom broken guard true 
longer sensing actions achieve effect gsfa guard true 
example true oe thermometer says board thermometer measures temperature robot 
examples proceed consider examples represented basic action theories section 
outdoor temperature unpredictable state state 
robot outdoors onboard thermometer measures temperature 
outdoors oe thermometer note guard false robot indoors concluded regarding outdoor temperature 

indoor temperature constant climate control active unpredictable 
robot indoors onboard thermometer measures temperature oe indoors oe thermometer note case climate control remains active robot goes indoors outdoors able infer current indoor temperature sensing regressing 
knowledge representation reasoning action change accommodate combination 

distance dimensional robot wall affected moving actions 
onboard sonar correctly measures distance wall reading certain interval 
true oe forward backward gamma forward backward sonar oe sonar case successor state axiom universally applicable meaning regress way determine distance wall 
distance wall unknown know current value useful able regress situation sonar reading operating range 

robot building state door completely determined robot open close actions 
way time robot front door onboard door sensor correctly determines state door 
oe dooropen open close dooropen oe dooropen intriguing possibility offered example closing door coming back front door find open security guard robot able infer 

warning light alarm go unpredictably 
stay robot turns 
robot determine state warning onboard light sensor provided looking light 
turnoff oe turnoff oe case need complex guard successor state axiom regress light previously action turn 
histories projection task ready define projection task formally 
obviously able determine fluent holds point longer sufficient know just actions occurred need know readings sensors way 
consequently define history sequence form delta delta delta delta ground action term im vector values ij understood reading th sensor th action 
history recursively define ground situation term delta 
define ground sensor formula sensed ij action delta delta delta th sensor function 
situation results doing actions sensed formula states sensors values specified projection task action theory sigma history formula oe single free variable determine sigma sensed oe obviously interesting histories satisfy certain legality criteria consistency sigma sensed conformance poss 
generalized regression principle projection task formulated solved general order theorem prover 
ineffectiveness approach simpler setting arguably led abandon situation calculus take strips 
goal keep logical framework show common cases projection reduced form regression reasoning initial situation done reduction tricky interaction various requiring solve auxiliary projection tasks step 
propose generalized form regression sensible compromise syntactic transformations logical reasoning 
specifically require evaluating guards decide apply see section regression 
assume sigma action theory history oe sensor fluent formulas ae sensor formula fl fluent formula 
notation oen mean formula results replacing sensor function oe th component final sensor reading denote sigma part sigma formed initial database unique name axioms actions 
lemma ae sensor formula 
history statement valid sensed oe ae ae proof induction structure ae 
consider simplifications formulas resulting sensing guarded sensed fluent axioms 
definition oe simplifies iff fluents oe gsfa sigma ff oe ae sigma sensed ff result replacing oe ae definition oe fully simplifies iff oe simplifies simplifies lemma oe simplifies sigma sensed oe proof logical manipulation lemma 
consider simplifications involving reasoning backwards guarded successor state axioms 
definition oe rolls back nonempty history delta iff oe fully simplifies oe fluent oe gssa sigma ff oe fl assume logic equality 
sigma sensed ff result replacing oe fl 
lemma oe rolls back nonempty history delta sigma sensed oe proof logical manipulation lemma 
putting forms simplification get definition oe regresses iff ffl oe fully simplifies ffl delta oe rolls back regresses theorem oe regresses sigma sensed oe proof induction number actions lemma lemma 
observe formula oe regress zero formulas depending entailed guards find fluents stage 
formula single free variable regress consequence theorem get corollary plausible consistency conditions sigma sensed oe regresses sigma sensed oe iff sigma provides soundness result regression perform projection task sufficient regress formula check result initial database 
unfortunately regression general complete 
see suppose known fluent formula regress entailed history 
section show certain histories useful sensing information available regression complete 
drawback regression defined need evaluate guards 
evaluating guard just task certain structured action theories apply regression show 
acyclic action theories regression restrict interest action theories sigma acyclic sense 
oe called dependency relation binary relations fluents oe iff gsfa fff oe ae sigma occurs ff 
action theory sigma acyclic iff dependency relation oe founded 
call level fluent maximal distance terms oe chains bottom element oe 
definition sigma acyclic 
sensor fluent formula oe regresses iff oe regresses elaborate longer version 
ffl simplification step gsfa sigma ff oe ae replace ae guard ff regresses ff sigma ff ffl roll back step gssa sigma ff oe fl replace fl delta guard ff regresses ff sigma ff 
aspect definition show recursion founded 
done simultaneous induction length level fluents 
clearly formula regresses regresses vice versa 
main point need evaluate formulas theorem acyclic sigma plausible consistency conditions sigma sensed oe regresses formula theorem proving needed perform projection evaluate formulas sigma proof induction total number simplification roll back steps regress oe corollary 
jit histories noted expect regression evaluate sensor fluent formulas general tautology entailed entailed component fluents 
practical setting imagine asking robot evaluate formula history knows component fluents component fluents 
example assume indoor temperature axioms section 
ask robot evaluate formula mentions indoor temperature histories climate control known remained earlier point history robot known indoors 
require robot know climate control may required going control panel indoors 
general call history just time formula actions sensing readings contains guarantee suitable formulas including guards evaluated appropriate points determine truth value fluents formula 
precisely definition history just time history sensor fluent formula oe iff ffl oe oe oe oe jit history oe oe ffl oe oe jit history open formula oe ffl oe sensor formula ffl oe fluent gsfa fff oe ae ff sigma sensed ff ffl oe fluent empty history sigma sigma ffl oe fluent delta gssa fff oe fl jit history ff fl sigma sensed ff 
jit histories theorem theorem sigma action theory oe sensor fluent formula 
jit history oe exists formula 
oe regresses 
sigma acyclic oe regresses sigma sigma 
proof proven induction length induction structure oe proven simultaneous induction length max level fluents oe induction structure oe 
theorem shows jit histories regression sound complete way performing projection 
evaluation procedure projection action theories assumed open world jit history provides sort dynamic closed world assumption ensures truth value fluent known part formula truth value need determine 
allows evaluate complex formulas normal closed world assumption 
consider prolog procedure 
assume user provides clauses ffl fluent fluent ffl sensor sensor function ffl ini fluent sigma ffl closed fluent sigma sigma ffl gsfa ff ae gsfa ffl gssa ff fl gssa distinguished action term quantified ff fl formulas expressed oe neg oe equ oe prolog constant 
drop situation arguments fluents sensor functions formulas keep track situation history 
histories represented lists 
brevity assume predicate extracts value sensor function history assume predicate sub oe oe meaning oe formula obtained substituting formula oe see 
define eval oe intended meaning formula oe evaluates truth value tt ff history follows simplicity follows distinguish situation calculus formulas representations prolog terms 
eval tt eval tt eval tt 
eval ff eval ff eval ff 
eval neg tt eval ff 
eval neg ff eval tt 
eval pv tt sub pv px eval px tt 
eval pv ff sub pv px eval px ff 
double negation eval px ff 
eval equ tt sensor eval equ ff neg failure sensor eval mu tt fluent ini 
eval mu ff neg failure fluent closed ini 
eval fluent gsfa alpha rho eval alpha tt eval rho 
eval mu fluent gssa alpha gamma eval alpha tt eval gamma 
observe formula eval oe succeed returning tt succeed returning ff fail terminate 
assumption auxiliary predicates correct terminating get soundness weak form completeness eval theorem assume eval oe succeeds computed answer tt sigma sensed oe ff sigma sensed oe 
proof induction structure oe 
theorem jit history oe 
eval oe finitely fail 
proof induction structure oe 
note guarantee termination get loop evaluating guards floundering trying evaluate ff existential 
eliminate problem acyclic action theories 
second close domain 
domain user defined predicate finite domain 
change definition eval existentials follows eval pv tt domain sub pv po eval po tt 
eval pv ff domain sub pv po eval po ff 
new version eval get completeness result theorem sigma acyclic oe sensor fluent formula free variables situation argument jit history oe 
eval oe succeeds returning tt ff 
circumstances eval sound complete implementation projection 
formal definition projection generalized action theory successor state axioms sensing information conditionally applicable 
showed certain circumstances regression evaluation procedure correctly perform task 
open problems remain 
decide automated practical way regression 
may expecting conditional planner determine actions perform permit sensing information way 
interesting alternative offered high level program execution model 
program oe ffi ffi user take responsibility inserting prior program ensuring resulting history just time oe 
related problem projection initial databases 
robot performs sequence actions world prefer longer regress way back initial situation project database forward current state done action theories proposing remains seen 
baral son 
approximate reasoning actions presence sensing incomplete information 
proc 
ilps 
fikes nilsson 
strips new approach application theorem proving problem solving 
artificial intelligence 
golden weld 
representing sensing actions middle ground revisited 
proc 
kr 
mccarthy hayes :10.1.1.85.5082
philosophical problems standpoint artificial intelligence 
machine intelligence vol 
edinburgh university press 
levesque 
planning presence sensing 
proc 
aaai 
levesque reiter lesperance lin scherl 
golog logic programming language dynamic domains 
journal logic programming 
lin reiter 
state constraints revisited 
journal logic computation 
lin reiter 
progress database 
artificial intelligence 
poole 
logic programming robot control 
proc 
ijcai 
reiter 
frame problem situation calculus simple solution completeness result goal regression 
artificial intelligence mathematical theory computation 
academic press 
reiter 
knowledge action logical foundation describing implementing dynamical systems 
preparation 
weld anderson smith 
extending graphplan handle uncertainty sensing actions 
proc 
aaai 
