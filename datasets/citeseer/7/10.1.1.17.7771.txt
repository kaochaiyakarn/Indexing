fast elitist multi objective genetic algorithm nsga ii kalyanmoy deb sameer agarwal kanpur genetic algorithms laboratory indian institute technology kanpur kanpur pin india deb ac report multi objective evolutionary algorithms non dominated sorting sharing mainly criticized mn computational complexity number objectives population size ii non elitism approach iii need specifying sharing parameter :10.1.1.35.5874
suggest non dominated sorting multi objective evolutionary algorithm called non dominated sorting ga ii nsga ii alleviates diculties 
speci cally fast non dominated sorting approach mn computational complexity 
second selection operator creates mating pool combining parent child populations selecting best respect tness spread solutions 
simulation results number dicult test problems show proposed nsga ii problems able nd better spread solutions better convergence near true pareto optimal front compared paes spea elitist multi objective eas pay special attention creating diverse pareto optimal front 
modify de nition dominance order solve constrained multi objective problems eciently 
simulation results constrained nsga ii number test problems including objective constraint non linear problem compared constrained multi objective optimizer better performance nsga ii observed 
nsga ii low computational requirements elitist approach parameter niching approach simple constraint handling strategy nsga ii nd increasing applications coming years 
keywords multi objective optimization genetic algorithms multi criterion decision making elitism constraint handling pareto optimal solutions 
presence multiple objectives problem principle gives rise set optimal solutions largely known pareto optimal solutions single optimal solution 
absence information pareto optimal solutions said better 
demands user nd solutions possible 
classical optimization methods including multi criterion decision making methods suggest converting multi objective optimization problem single objective optimization problem emphasizing particular pareto optimal solution time 
method nding multiple solutions applied times hopefully nding di erent solution simulation run 
past decade number multi objective evolutionary algorithms moeas suggested :10.1.1.48.9077:10.1.1.34.4189:10.1.1.107.2624
primary reason ability nd multiple pareto optimal solutions single simulation run 
eas population solutions simple ea extended maintain diverse set solutions 
emphasis moving true pareto optimal region ea nd multiple pareto optimal solutions single simulation run 
non dominated sorting genetic algorithm nsga proposed srinivas deb rst evolutionary algorithms 
years main criticism nsga approach follows high computational complexity non dominated sorting currently non dominated sorting algorithm computational complexity mn number objectives population size 
nsga computationally expensive algorithm large population sizes 
large complexity arises complexity involved non dominated sorting procedure generation 
lack elitism results show clearly elitism speed performance ga signi cantly help preventing loss solutions :10.1.1.30.5848:10.1.1.48.9077
need specifying sharing parameter share traditional mechanisms insuring diversity population get wide variety equivalent solutions relied concept sharing 
main problem sharing requires speci cation sharing parameter share 
dynamic sizing sharing parameter parameter diversity preservation mechanism desirable 
address issues propose improved version nsga call nsga ii 
simulation results number dicult test problems nd nsga ii outperforms contemporary multi objective eas pareto archived evolution strategy paes strength pareto ea spea terms nding diverse set solutions converging near true pareto optimal set 
constrained multi objective optimization important point view practical problem solving attention paid far respect ea researchers 
suggest simple constraint handling strategy nsga ii suits evolutionary algorithm 
problems chosen literature nsga ii compared suggested constrained handling strategy 
results encourage application nsga ii complex real world multi objective optimization problems 
remainder brie mention number existing elitist multi objective eas section ii 
section iii describe proposed nsga ii algorithm details 
section iv presents simulation results nsga ii compares elitist multi objective eas paes spea 
section highlight issue parameter interactions matter important evolutionary computation research 
section extends nsga ii handling constraints compares results proposed constraint handling method 
outline 
ii 
elitist multi objective evolutionary algorithms number di erent evolutionary algorithms suggested solve multi objective optimization problems 
fonseca fleming moga srinivas deb nsga horn goldberg npga enjoyed attention :10.1.1.48.9077:10.1.1.34.4189
algorithms demonstrated necessary additional operators converting simple ea multi objective ea 
common features operators assigning tness population members non dominated sorting ii preserving diversity solutions non dominated front 
shown nd multiple non dominated solutions test problems number engineering design problems researchers realized need introducing useful operators useful single objective eas solve multi objective optimization problems better 
particularly interest introduce elitism enhance convergence properties multi objective ea 
study zitzler deb thiele clearly shown elitism helps achieving better convergence moeas :10.1.1.30.5848
existing elitist moeas zitzler thiele strength pareto ea spea knowles corne pareto archived evolution strategy paes rudolph elitist ga studied :10.1.1.48.9077:10.1.1.107.2624
describe approaches brief 
details readers encouraged refer original studies 
zitzler thiele suggested elitist multi criterion ea concept non domination strength pareto ea spea :10.1.1.107.2624
suggested maintaining external population generation storing non dominated solutions discovered far initial population 
external population participates genetic operations 
generation combined population external current population rst constructed 
non dominated solutions combined population assigned tness number solutions dominate dominated solutions assigned tness worse worst tness non dominated solution 
assignment tness sure search directed non dominated solutions 
deterministic clustering technique ensure diversity non dominated solutions 
implementation suggested mn proper book keeping complexity spea reduced mn :10.1.1.107.2624
knowles corne suggested simple moea single parent single child evolutionary algorithm similar evolution strategy 
real parameters authors binary strings bit wise mutations create children 
pareto archived es paes parent child child compared respect parent 
child dominates parent child accepted parent iteration continues 
hand parent dominates child child discarded new mutated solution new child 
child parent dominate choice child parent comparing archive best solutions far 
child compared archive check dominates member archive 
child accepted new parent dominated solutions eliminated archive 
child dominate member archive parent child checked nearness solutions archive 
child resides crowded region parameter space members archive accepted parent copy added archive 
crowding maintained deterministically dividing entire search space subspaces depth parameter number decision variables updating subspaces dynamically 
authors calculated worst case complexity paes evaluations amn archive length 
archive size usually chosen proportional population size complexity algorithm mn 
rudolph suggested simulate simple elitist multi objective ea systematic comparison individuals parent spring populations :10.1.1.48.9077
non dominated solutions spring population compared parent solutions form non dominated set solutions parent population iteration 
size set greater desired population size individuals spring population included 
strategy able prove convergence algorithm pareto optimal front 
important achievement right algorithm lacks motivation second task maintaining diversity pareto optimal solutions 
explicit diversity preserving mechanism added usable practice 
determinism rst non dominated front mn complexity rudolph algorithm mn 
proposed non dominated sorting ga approach uses fast non dominated sorting procedure elitist preserving approach parameter niching operator 
iii 
elitist non dominated sorting genetic algorithm nsga ii non dominated sorting ga nsga proposed srinivas deb subjected number criticism mentioned earlier 
section suggest nsga ii alleviate diculties 
presenting number di erent modules form parts nsga ii 
fast non dominated sorting approach order sort population size level non domination solution compared solution population nd dominated 
requires mn comparisons solution number objectives 
process continued nd members rst non dominated class population members total complexity mn 
stage individuals rst non dominated front 
order nd individuals front solutions rst front temporarily discounted procedure performed 
procedure repeated nd subsequent fronts 
seen worst case exists solution front complexity algorithm book keeping mn 
describe fast non dominated sorting approach require mn computations 
approach similar principle approach better book keeping strategy performed faster algorithm 
approach solution population checked partially lled population domination 
start rst solution population kept set solution second solution onwards compared members set :10.1.1.35.5874
solution dominates member solution removed way non members non dominated front get deleted solution dominated member solution ignored :10.1.1.35.5874
solution dominated member entered set grows non dominated solutions :10.1.1.35.5874
solutions population checked remaining members constitute non dominated set :10.1.1.35.5874
find nondominated front include rst member take solution time fpg include temporarily compare members dominates member delete dominated members include observe second population member compared solution third solution solutions :10.1.1.35.5874
requires maximum domination checks 
domination check requires function value comparisons maximum complexity approach nd rst non dominated front mn 
order validate complexity estimate create di erent random populations solutions objective vector size member objective vector chosen zero random 
solutions compared domination algorithm total number comparisons required identify rst non dominated front counted 
quantity calculated number di erent random populations average calculated 
shows variation quantity di erent population sizes :10.1.1.35.5874
clear number comparisons computational complexity increases tting curve experimental quantities observe variation polynomial quadratic large shown table gure shows slope tted straight lines log log plot increases table shows slopes exponent number objective functions increase exponent increases approximately 
nd fronts members discounted procedure repeated outlined :10.1.1.35.5874
number comparisons population size fig :10.1.1.35.5874

variation computational complexity nd rst non dominated front random population population size lines drawn tting straight lines observed points log log scale 
table computational complexity finding non dominated set different variation fast non dominated sort set non dominated fronts front counter initialized find nondominated front nd non dominated front pnf remove non dominated solutions increment front counter operation solutions rst non dominated front stored solutions second non dominated front stored :10.1.1.35.5874
diversity preservation mentioned earlier convergence pareto optimal set desired ea maintains spread solutions obtained set solutions 
original nsga known sharing function approach maintain sustainable diversity population appropriate setting associated parameters 
sharing function method involves sharing parameter share sets extent sharing desired problem 
parameter related distance metric chosen calculate proximity measure population members 
parameter share denotes largest value distance metric solutions share tness 
parameter usually set user exist guidelines 
diculties sharing function approach 
performance sharing function method maintaining spread solutions largely depends chosen share value 

solution compared solutions population complexity sharing function approach 
proposed nsga ii replace sharing function approach crowded comparison approach eliminates diculties extent 
clear new approach require user de ned parameter maintaining diversity population members 
suggested approach better computational complexity 
describe approach rst de ne density estimation metric crowded comparison operator 
density estimation get estimate density solutions surrounding particular solution population calculate average distance points side point objectives 
quantity distance serves estimate size largest cuboid enclosing point including point population call crowding distance 
crowding distance th solution front marked solid circles average side length cuboid shown dashed box 
cuboid fig :10.1.1.35.5874

crowding distance calculation shown 
crowding distance computation requires sorting population objective function value ascending order magnitude 
objective function boundary solutions solutions smallest largest function values assigned nite distance value 
intermediate solutions assigned distance value equal absolute di erence function values adjacent solutions 
calculation continued objective functions 
crowding distance value calculated sum individual distance values corresponding objective 
algorithm clearly outlines crowding distance computation procedure solutions nondominated set crowding distance assignment jij number solutions set distance initialize distance objective sort sort objective value distance distance boundary points selected points distance distance refers th objective function value th individual set complexity procedure governed sorting algorithm :10.1.1.35.5874
independent sorting solutions population members front involved algorithm mn log computational complexity 
population members set assigned distance metric compare solutions extent proximity solutions 
solution smaller value distance measure sense crowded solutions 
exactly compare proposed crowded comparison operator described 
crowded comparison operator crowded comparison operator guides selection process various stages algorithm uniformly spread pareto optimal front 
assume individual population attributes 
non domination rank rank 
crowding distance distance 
de ne partial order rank rank rank rank distance distance solutions di ering non domination ranks prefer solution lower better rank 
solutions belong front prefer solution located lesser crowded region 
new innovations fast non dominated sorting procedure fast crowded distance estimation procedure simple crowded comparison operator ready describe nsga ii algorithm 
main loop initially random parent population created :10.1.1.35.5874
population sorted non domination 
solution assigned tness rank equal non domination level best level best level 
minimization tness assumed 
rst usual binary tournament selection recombination mutation operators create child population size elitism introduced comparing current population previously best non dominated solutions procedure di erent initial generation :10.1.1.35.5874
rst describe generation proposed algorithm combine parent children population fast nondominated sort non dominated fronts jp jf till parent population lled crowding distance assignment calculate crowding distance include th non dominated front parent pop check front inclusion sort sort descending order jp choose rst jp elements calf new pop selection crossover mutation create new population increment generation counter step step procedure shows nsga ii algorithm simple straightforward 
combined population formed 
population size population sorted non domination 
previous current population members include elitism ensured 
solutions belonging best non dominated set best solutions combined population emphasized solution combined population 
size smaller de nitely choose members set new population remaining members population chosen subsequent non dominated fronts order ranking 
solutions set chosen followed solutions set 
procedure continued till sets accommodated 
say set non dominated set set accommodated 
general count solutions sets larger population size 
choose exactly population members sort solutions front crowded comparison operator descending order choose best solutions needed ll population slots 
nsga ii procedure shown 
new sorting non dominated crowding distance sorting rejected fig 

sketch nsga ii 
population size selection crossover mutation create new population size important note binary tournament selection operator selection criterion crowded comparison operator operator requires rank crowded distance solution population calculate quantities forming population shown algorithm 
look complexity iteration entire algorithm 
basic operations worst case complexities follows 
non dominated sorting 
crowding distance assignment log 
sorting log 
seen complexity algorithm mn governed non dominated sorting part algorithm 
diversity non dominated solutions introduced crowding comparison procedure tournament selection population reduction phase 
solutions compete crowding distance measure density solutions neighborhood extra niching parameter share needed nsga required 
crowding distance calculated objective function space implemented parameter space desired 
simulations performed study objective function space niching 
iv 
simulation results section rst describe test problems compare performance nsga ii paes spea 
paes spea identical parameter settings suggested original studies 
nsga ii chosen reasonable set values ort nding best parameter setting 
leave task study 
test problems rst describe test problems compare di erent multi objective evolutionary algorithms 
test problems chosen number signi cant past studies area 
veldhuizen cited number test problems researchers past :10.1.1.35.5874
choose problems call sch scha er study fon fonseca fleming study pol study kur kursawe study :10.1.1.107.2624
rst author suggested systematic way developing test problems multi objective optimization 
zitzler deb thiele followed guidelines suggested test problems :10.1.1.30.5848
choose problems call zdt zdt zdt zdt zdt 
problems objective functions 
problems constraint 
describe problems table ii 
table shows number variables bounds pareto optimal solutions nature pareto optimal front problem 
approaches run maximum generations population size :10.1.1.35.5874
crossover probability mutation probability pm number decision variables real coded gas string length binary coded gas :10.1.1.35.5874
nsga ii real coded distribution indices crossover mutation operators respectively :10.1.1.35.5874
population obtained generations population elitism mechanism applied calculate couple performance metrics discuss subsection :10.1.1.35.5874
paes depth value equal archive size :10.1.1.35.5874
population members archive obtained generations calculate performance metrics :10.1.1.35.5874
spea population size external population size population size :10.1.1.35.5874
combination populations nal generation calculate performance metrics study 
paes spea nsga ii binary coded bits code decision variable :10.1.1.35.5874
performance measures single objective optimization goals multi objective optimization convergence pareto optimal set ii maintenance diversity solutions pareto optimal set 
clearly tasks measured performance metric adequately 
number performance metrics suggested past 
de ne performance metrics direct evaluating goals solution set obtained multi objective optimization algorithm 
rst metric measures extent convergence known set pareto optimal solutions 
multiobjective algorithms tested problems having known set pareto optimal set calculation metric possible 
realize metric arbitrary problem 
nd set uniformly spaced solutions true pareto optimal front objective space :10.1.1.35.5874
solution obtained algorithm compute minimum euclidean distance chosen solutions pareto optimal front 
average distances rst metric convergence metric 
shows calculation procedure metric 
shaded region feasible search region solid curved lines specify pareto table ii test problems study 
objective functions minimized 
problem variable objective optimal comments bounds functions solutions sch convex fon exp non convex exp pol non convex disconnected sin cos sin cos sin cos sin cos sin cos sin cos sin cos sin cos kur exp non convex jx sin zdt convex zdt non convex zdt convex sin disconnected zdt non convex cos zdt exp sin non convex non uniformly spaced optimal solutions :10.1.1.35.5874:10.1.1.107.2624
solutions open circles chosen solutions pareto optimal front calculation convergence metric solutions marked dark circles solutions obtained algorithm 
clear smaller value metric better convergence pareto optimal front 
obtained solutions lie exactly chosen solutions metric takes value zero 
simulations performed average variance metric calculated solution sets obtained multiple runs 
solutions converge pareto optimal front convergence metric value zero 
metric zero obtained solution lies exactly chosen solutions 
metric provide information spread obtained solutions de ne di erent metric measure spread solutions obtained algorithm 
second metric 
measures extent spread achieved obtained solutions 
interested getting set solutions span entire region 
calculate euclidean distance consecutive solutions obtained non dominated set solutions 
calculate average distances 
obtained set non dominated solutions rst calculate extreme solutions objective space tting curve parallel true pareto optimal front obtained solutions chosen points euclidean distance fig 

illustration distance metric 
pareto optimal front 
metric calculate non uniformity distribution jd dj parameters euclidean distances extreme solutions boundary solutions obtained non dominated set depicted 
illustrates distances mentioned equation 
obtained solutions extreme solution extreme solution fig 

illustration diversity metric 
parameter average distances assuming solutions best non dominated front 
solutions consecutive distances 
denominator value numerator case solutions lie solution 
interesting note worst case spread solutions possible 
scenario large variance distances may numerator value greater denominator 
maximum value metric greater 
distribution distances equal existence extreme solutions non dominated set :10.1.1.35.5874
widely uniformly spread set non dominated solutions numerator 
zero making metric take value zero 
distribution value metric greater zero 
distributions having identical values metric 
takes higher value worse distributions solutions extreme solutions 
note diversity metric non dominated set solutions including pareto optimal set 
discussion results table iii shows mean variance convergence metric obtained algorithms nsga ii nsga ii binary coded spea paes :10.1.1.35.5874
table iii mean shaded rows variance unshaded rows convergence metric 
algorithm sch fon pol kur zdt zdt zdt zdt zdt nsga ii real coded nsga ii binary coded spea paes nsga ii real coded binary coded able converge better problems zdt zdt paes better convergence :10.1.1.35.5874
cases nsga ii variance runs small zdt nsga ii binary coded :10.1.1.35.5874
xed archive strategy paes allows better convergence achieved problems 
table iv shows mean variance diversity metric 
obtained algorithms 
table iv mean shaded rows variance unshaded rows diversity metric 
algorithm sch fon pol kur zdt zdt zdt zdt zdt nsga real coded nsga ii binary coded spea paes nsga ii real binary coded performs best test problems :10.1.1.35.5874
worst performance observed paes 
illustration show runs paes arbitrary run nsga ii real coded problem sch 
problems real coded nsga ii able nd better spread solutions algorithm including binary coded nsga ii 
order demonstrate working algorithms show typical simulation results paes spea nsga ii test problems kur zdt zdt zdt 
problem kur discontinuous regions pareto optimal front 
shows non dominated solutions obtained generations nsga ii real coded :10.1.1.35.5874
pareto optimal region shown gure 
gure demonstrates abilities nsga ii converging true front nding diverse set solutions front 
shows obtained nondominated solutions spea best algorithm problem refer tables iii iv 
convergence adequate distribution solutions nsga ii 
show non dominated solutions problem zdt figures :10.1.1.35.5874
problem nonconvex pareto optimal front 
show performance binary coded nsga ii spea function 
convergence diculty algorithms real coded binary coded nsga ii better able spread solutions entire pareto optimal region spea best algorithm observed problem 
problem zdt di erent local pareto optimal fronts search space corresponds global pareto optimal front :10.1.1.35.5874
euclidean distance decision space solutions paes nsga ii fig :10.1.1.35.5874

nsga ii nds better spread solutions paes sch 
pareto optimal front nsga ii fig :10.1.1.35.5874

non dominated solutions nsga ii real coded kur 
pareto optimal front spea fig :10.1.1.35.5874

non dominated solutions spea kur 
consecutive local pareto optimal sets :10.1.1.35.5874
shows real coded nsga ii paes get stuck di erent local pareto optimal sets convergence ability nd diverse set solutions de nitely better nsga ii 
binary coded gas diculties converging near global pareto optimal front matter observed previous single objective studies :10.1.1.107.2624
similar variable rastrigin function function study clearly showed population size needed single objective binary coded gas tournament selection single point crossover bit wise mutation nd global optimum solution simulation runs :10.1.1.35.5874
population size expected multi objective ga nd global pareto optimal solution :10.1.1.35.5874
spea performs poorly problem tables iii iv show spea results gure 
shows paes nds better converged set non dominated solutions zdt compared algorithm 
distribution solutions better real coded nsga ii 
nsga ii fig :10.1.1.35.5874

non dominated solutions nsga ii binary coded zdt 
spea fig :10.1.1.35.5874
:10.1.1.35.5874
non dominated solutions spea zdt 
pareto optimal front paes nsga ii fig :10.1.1.35.5874

nsga ii nds better convergence spread solutions paes zdt 
di erent parameter settings study serious attempt nd best parameter setting nsga ii 
section perform additional experiments show ect couple di erent parameter settings performance nsga ii 
keep parameters increase number maximum generations :10.1.1.35.5874
table shows convergence diversity metrics problems pol kur zdt zdt zdt 
achieve convergence close true pareto optimal front better distribution 
table shows dicult problems real coded nsga ii converged close true optimal front zdt probably requires di erent parameter setting nsga ii 
particularly results zdt zdt improve generation number 
problem zdt number local pareto optimal fronts corresponding particular value 
jump local optimum best local optimum large change decision vector needed 
mutation crossover operators capable creating solutions basin better attractor improvement convergence true pareto optimal front possible 
nsga ii real coded pareto optimal front paes nsga ii fig :10.1.1.35.5874

real coded nsga ii nds better spread solutions paes zdt paes better convergence 
table mean variance convergence diversity metrics generations :10.1.1.35.5874
convergence metric pol kur zdt zdt zdt mean variance diversity metric :10.1.1.35.5874
pol kur zdt zdt zdt mean variance smaller distribution index mutation ect creating solutions spread :10.1.1.35.5874
rest parameter settings identical 
convergence metric diversity measure 
problem zdt generations follows :10.1.1.35.5874
:10.1.1.35.5874
results better paes spea shown table iii :10.1.1.35.5874
demonstrate convergence spread solutions plot non dominated solutions runs generations :10.1.1.35.5874
gure shows nsga ii able nd solutions true pareto optimal front :10.1.1.35.5874
rotated problems discussed earlier study interactions decision variables introduce level diculty multi objective optimization algorithm including evolutionary algorithms 
section create problem investigate working previously multi objective evolutionary algorithms epistatic problems 
minimize minimize exp cos rx ea works decision variable vector objective functions de ned terms variable vector calculated transforming decision variable vector xed rotation matrix way pareto optimal front decision space fig :10.1.1.35.5874

obtained non dominated solutions nsga ii problem zdt 
objective functions functions linear combination decision variables 
order maintain spread solutions pareto optimal region converge particular solution requires ea update decision variables particular way 
generic search operator dicult task ea 
interested evaluating behavior elitist multi objective eas 
population size run algorithm till generations :10.1.1.35.5874
simulated binary crossover mutation :10.1.1.35.5874
rotation values may lie wide range 
restrict pareto optimal solutions lie bounds discourage solutions jf adding xed large penalty objectives :10.1.1.35.5874
shows obtained solutions generations nsga ii paes spea :10.1.1.35.5874
observed nsga ii converged true front paes spea come close true front 
correlated parameter updates needed progress pareto optimal front kind problem dicult solve 
elitism procedure real coded crossover mutation operators pareto optimal front nsga ii paes spea fig :10.1.1.35.5874

obtained non dominated solutions nsga ii paes spea rotated problem 
nsga ii able converge pareto optimal front resulting exp 
example problem demonstrates known diculties linkage problem :10.1.1.35.5874
single objective optimization algorithm cause diculties multi objective problem 
systematic studies needed amply address linkage issue multi objective optimization 
vi 
constraint handling year rst author students implemented penalty parameter constraint handling approach single objective optimization 
studies shown tournament selection algorithm handle constraints population approach better number existing constraint handling approaches 
similar approach introduced nsga ii solving constrained multi objective optimization problems 
proposed constraint handling approach constrained nsga ii constraint handling method uses binary tournament selection solutions picked population better solution chosen 
presence constraints solution feasible infeasible 
may situations solutions feasible ii feasible iii infeasible 
single objective optimization simple rule case case choose solution better objective function value 
case ii choose feasible solution 
case iii choose solution smaller constraint violation 
case constraints objective function values compared need having penalty parameter matter proposed constrained handling approach useful attractive 
context multi objective optimization cases rst case resolved crowded comparison operator 
maintain modularity procedures nsga ii simply modify de nition domination solutions de nition solution said constrained dominate solution conditions true 
solution feasible solution 

solutions infeasible solution smaller constraint violation 

solutions feasible solution dominates solution ect constrained domination principle feasible solution better non domination rank infeasible solution 
feasible solutions ranked non domination level objective function values 
infeasible solutions solution smaller constraint violation better rank 
modi cation non domination principle change computational complexity nsga ii 
rest nsga ii procedure described usual 
ray kang constraint handling approach ray kang suggested elaborate constraint handling technique constraint violations constraints simply summed non domination check constraint violations 
give outline procedure 
di erent non dominated rankings population rst performed 
rst ranking performed objective function values resulting ranking stored dimensional vector obj second ranking con performed constraint violation values constraints objective function information 
constraint violation constraint criterion non domination classi cation population performed constraint violation values 
notice feasible solution constraint violations zero 
feasible solutions rank con third ranking performed combined objective function constraint violation values total values 
produces ranking objective function values constraint violations nice aspect algorithm need penalty parameter 
domination check criteria individually compared eliminating need penalty parameter 
rankings feasible solutions having best rank chosen new population 
population slots available created remaining solutions systematic manner 
giving importance ranking obj selection operator giving importance ranking con crossover operator authors laid systematic multi objective ga includes niche preserving operator 
details readers may refer original study 
authors compare algorithm method showed working constraint handling method number engineering design problems 
non dominated sorting di erent sets criteria required algorithm introduces di erent operators remains investigated performs complex problems particularly point view computational burden associated method 
section choose set problems compare simple constrained nsga ii method 
simulation results unconstrained multi objective optimization rst author suggested systematic procedure developing test problems 
procedure allows simple way introduce aspect diculties multi objective optimizer expect real world problem 
far systematic study exists suggest test problem development constrained multi objective optimization 
choose problems table vi earlier studies 
apply real coded nsga ii 
table vi constrained test problems study 
objective functions minimized 
problem variable objective constraints bounds functions deb srn cos arctan water exp rst problem part unconstrained pareto optimal region feasible :10.1.1.35.5874
resulting constrained pareto optimal region concatenation rst constraint boundary part unconstrained region 
second problem srn original study nsga 
constrained set subset unconstrained pareto optimal set 
third problem suggested tanaka discontinuous pareto optimal region entirely falling rst constraint boundary 
subsection show constrained pareto optimal region problems 
fourth problem water objective constraint problem attempted solve 
objectives dicult discuss ect constraints unconstrained pareto optimal region 
subsection show pair wise plots obtained non dominated solutions :10.1.1.35.5874
simulation results problems population size distribution indices real coded crossover mutation operators respectively run nsga ii real coded ray kang constrained handling algorithm maximum generations :10.1.1.35.5874
choose large number generations investigate spread solutions maintained large number generations 
case obtain reasonably spread solutions early generations :10.1.1.35.5874
crossover mutation probabilities 
shows obtained set non dominated solutions generations nsga ii :10.1.1.35.5874
gure shows nsga ii able uniformly maintain solutions pareto optimal region 
important note order maintain spread solutions constraint boundary solutions modi ed particular manner dictated constraint function 
dicult task search operator 
shows obtained solutions ray kang algorithm generations :10.1.1.35.5874
clear nsga ii performs better ray kang algorithm terms converging true pareto optimal front terms maintaining diverse population non dominated solutions 
fig :10.1.1.35.5874

obtained non dominated solutions nsga ii constrained problem deb 
fig :10.1.1.35.5874

obtained non dominated solutions ray kang algorithm constrained problem deb 
consider test problem srn 
shows non dominated solutions generations nsga ii :10.1.1.35.5874
gure shows nsga ii bring random population pareto optimal front 
illustrating feasible search space created number random feasible solutions plotted dots gure 
ray kang algorithm able come close front test problem 
fig :10.1.1.35.5874

obtained non dominated solutions nsga ii constrained problem srn 
fig :10.1.1.35.5874

obtained non dominated solutions ray kang algorithm constrained problem srn 
figures show feasible objective space obtained non dominated solutions nsga ii algorithm :10.1.1.35.5874
pareto optimal region discontinuous nsga ii diculty nding wide spread solutions true pareto optimal region 
ray kang algorithm number solutions pareto optimal front exists infeasible solutions generations :10.1.1.35.5874
ray kang problem water study 
normalized objective functions manner fig :10.1.1.35.5874

obtained non dominated solutions nsga ii constrained problem 
fig :10.1.1.35.5874
:10.1.1.35.5874
obtained non dominated solutions ray kang algorithm constrained problem 
objective functions problem water observe range normalized objective function values obtained non dominated solutions 
table vii shows comparison ray kang algorithm 
table vii lower upper bounds objective function values observed obtained non dominated solutions 
algorithm nsga ii ray kang objective functions nsga ii better spread solutions ray kang approach :10.1.1.35.5874
order show pair wise interactions normalized objective functions plot interactions algorithms :10.1.1.35.5874
nsga ii results shown upper diagonal portion gure results shown lower diagonal portion 
axes plot obtained looking corresponding diagonal boxes ranges 
example plot rst row third column vertical axis horizontal axis plot belongs upper side diagonal plot obtained nsga ii 
order compare plot similar plot ray kang approach look plot third row rst column 
gure vertical axis plotted horizontal axis plotted get better comparison plots observe ray kang plot turn page degrees clockwise direction nsga ii results :10.1.1.35.5874
labelling ranges axes cases 
observe nsga ii plots better formed patterns ray kang plots 
example gures interactions clear nsga ii results 
similar patterns exist results obtained ray kang algorithm convergence true fronts adequate 
vii 
proposed computationally fast elitist multi objective evolutionary algorithm non dominated sorting approach 
di erent dicult test problems borrowed literature proposed nsga ii able maintain better spread solutions convergence obtained nondominated front compared elitist multi objective eas paes spea 
problem paes able somewhat better converge close true pareto optimal front 
paes maintains diversity solutions controlling crowding solutions deterministic pre speci ed number equal sized cells search space 
problem suspected deterministic crowding coupled ect mutation approach bene cial converging near true front compared dynamic parameter crowding fig :10.1.1.35.5874

upper diagonal plots nsga ii lower diagonal plots ray kang algorithm 
compare plot algorithm plot nsga ii 
label ranges axis shown diagonal boxes 
approach nsga ii spea 
diversity preserving mechanism nsga ii undoubtedly best approaches 
problem having strong parameter interactions nsga ii able come closer true front approaches 
important matter approaches faced diculties solving called highly epistatic problem 
matter going research single objective ea studies shows highly epistatic problems may cause diculties multi objective eas 
importantly researchers eld keep mind solving problems developing new algorithm multi objective optimization 
proposed simple extension de nition dominance constrained multi objective optimization 
new de nition multi objective eas real coded nsga ii de nition shown solve di erent problems better proposed constraint handling approach 
properties fast non dominated sorting procedure elitist strategy parameter approach simple ecient constrained handling method nsga ii nd increasing attention applications near :10.1.1.35.5874
authors acknowledge support provided india council technical education india course study 
deb ecient constraint handling method genetic algorithms computer methods applied mechanics engineering press 
deb multi objective genetic algorithms problem diculties construction test functions evolutionary computation vol 
pp 
:10.1.1.35.5874
deb goldberg investigation niche species formation genetic function optimization proceedings third international conference genetic algorithms scha er ed 
san mateo ca morgan kau man pp 
:10.1.1.35.5874
deb agrawal understanding interactions genetic algorithm parameters foundations genetic algorithms banzhaf reeves eds :10.1.1.107.2624
san mateo ca morgan kau man pp 

deb agrawal simulated binary crossover continuous search space complex systems vol 
pp 

fonseca fleming genetic algorithms multi objective optimization formulation discussion generalization proceedings fifth international conference genetic algorithms forrest ed :10.1.1.48.9077
san mateo ca morgan kau man pp 

fonseca fleming performance assessment comparison stochastic multiobjective optimizers parallel problem solving nature iv 
voigt ebeling rechenberg 
schwefel eds berlin germany springer pp 

fonseca fleming multiobjective optimization multiple constraint handling evolutionary algorithms part ii application example ieee transactions systems man cybernetics part systems humans pp 

goldberg korb deb messy genetic algorithms motivation analysis rst results complex systems vol 
pp 
:10.1.1.35.5874
harik learning gene linkage eciently solve problems bounded diculty genetic algorithms illigal report urbana university illinois urbana champaign illinois genetic algorithms laboratory :10.1.1.35.5874
horn goldberg niched pareto genetic algorithm multi objective optimization michalewicz editor proceedings ieee conference evolutionary computation michalewicz ed :10.1.1.34.4189
piscataway new jersey ieee service center pp 

knowles corne pareto archived evolution strategy new baseline algorithm multiobjective optimisation proceedings congress evolutionary computation piscataway new jersey ieee service center :10.1.1.35.5874
kursawe variant evolution strategies vector optimization parallel problem solving nature 
schwefel eds berlin germany springer pp :10.1.1.35.5874

hybrid ga multi objective aerodynamic shape optimization genetic algorithms engineering computer science winter periaux eds chichester wiley pp :10.1.1.107.2624

ray kang multiobjective design optimization evolutionary algorithm engineering optimization press 
rudolph evolutionary search partially ordered sets technical report :10.1.1.48.9077
ci dortmund department computer science ls university dortmund germany 
scha er multiple objective optimization vector evaluated genetic algorithms proceedings international conference genetic algorithms ed 
hillsdale new jersey lawrence erlbaum associates pp 
:10.1.1.35.5874
srinivas deb multi objective function optimization non dominated sorting genetic algorithms evolutionary computation vol 
pp 

tanaka ga decision support system multi criteria optimization proceedings international conference systems man cybernetics pp 

van veldhuizen multiobjective evolutionary algorithms classi cations analyses new innovations phd dissertation technical report :10.1.1.35.5874
ds eng dayton ohio air force institute technology :10.1.1.35.5874
van veldhuizen lamont multiobjective evolutionary algorithm research history analysis report number tr :10.1.1.35.5874
wright patterson afb ohio department electrical computer engineering air force institute technology 
zitzler 

evolutionary algorithms multiobjective optimization methods applications 
doctoral thesis eth zurich swiss federal institute technology eth aachen germany shaker verlag 
zitzler deb thiele comparison multiobjective evolutionary algorithms empirical results :10.1.1.30.5848
evolutionary computation vol 
pp 
:10.1.1.35.5874
zitzler thiele multiobjective optimization evolutionary algorithms comparative case study parallel problem solving nature eiben ack schoenauer :10.1.1.107.2624
schwefel eds 
berlin germany springer pp 
:10.1.1.35.5874
