improving performance high energy physics analysis bitmap indices kurt stockinger dirk wolfgang hoschek erich cern division european organization nuclear research ch geneva switzerland kurt stockinger dirk wolfgang hoschek cern ch institute computer science business informatics university vienna vienna austria erich univie ac institute applied computer science university linz linz austria 
bitmap indices popular multi dimensional data structures accessing read data data warehouse dw applications decision support systems dss line analytical processing olap 
main strengths provide performance characteristics complex adhoc queries efficient combination multiple index dimensions query 
considerable research done area finite low attribute cardinalities 
additional complexity imposed design bitmap indices high cardinality non discrete attributes different optimisation techniques ones proposed far applied 
discuss design implementation bitmap indices high energy physics hep analysis potential search space consists hundreds independent dimensions 
single hep query typically covers dimensions search space 
context evaluated different bitmap encoding techniques equality encoding range encoding 
methods number bit slices bitmap vectors attribute central optimisation parameter 
presents results choosing optimal number bit slices multi dimensional indices attributes different value distribution query selectivity 
believe discussion applicable hep dw dss olap type problems general 
big challenges cern european organization nuclear research geneva switzerland management large amount th international conference database expert systems applications dexa london greenwich uk september data complexity objects results hep experiments 
particular sub atomic particles accelerated nearly speed light collided 
collisions called events measured time intervals nanoseconds new experiments 
data written year analysed physicists world life span decades 
currently physics analysis tasks sequentially scanning preselected event space obviously efficient queries small selectivities 
case usage proper multi dimensional index data structure accelerates processes orders magnitude 
literature multi dimensional access methods variety indices proposed ranging spatial data access methods tree bv tree variants non spatial data access methods 
indices optimised transaction processing inserts updates deletes major need hep analysis 
similar dw applications dsss hep data read access methods characterised multi dimensional highly complex queries 
queries called partial range queries small subset search space accessed 
multi dimensional access methods pyramid tree show best performance characteristics full range queries sub optimal partial range queries 
propose bitmap indices optimised processing complex adhoc queries read environments 
basic idea bitmap index store vector bits distinct attribute value possible attribute values colours 
bit value mapped record 
associated bit set record value fulfils property focus respective value record equal red 
studied different kinds bitmap encoding techniques discrete values 
additional complexity imposed design implementation bitmap indices non discrete values different optimisation techniques ones proposed far applied 
contributions research bitmap indices applying bitmap indices high performance physics experiments 
give proof concept traditional physics analysis considerably improved bitmap indices show technique efficient hep specific data distributions 
introduce partitioned equality encoding variant equality encoded bitmap indices 
case crucial points choice correct number bins highly depends number indexed attributes number dimensions search space 
employment analysis top object database managment system 
contrast bitmap indices implemented top mass storage system implementation top objectivity db addition provide extensive performance analysis characterise features bitmap indices hep loss generality directly applied environment dws dsss 
studying impact non discrete data values 
discuss impact partitioned range encoding variant range encoded bitmap indices covered research community far 
proceeds follows 
section give survey related outline differences approach 
section discuss hep analysis implemented top 
detailed evaluation index section elaborate optimal binning bmi apply results data distributions common hep analysis 
section discuss impact range encoded conclude section 
survey discussion related detailed discussion designing bitmap indices different encoding schemes 
particular space time complexities called equality encoded range encoded interval encoded bitmap indices evaluated 
equality encoding table 
regarded fundamental method consists bitmaps bitmap vectors cardinality attribute indexed 
type index optimal exact match queries form qe ai 
sided range queries op ai op show best performance characteristics range encoded bitmap indices table consist bitmap vectors 
interval encoding table consists bitmap vectors optimal sided range queries op ai op op 
optimisation methods address discrete attribute values 
data contiguous finite cardinalities different optimisation techniques ones proposed far applied 
table depict different encoding techniques set attribute values 
terminology values table referred projection index methods called bit sliced indices 
major problems simple bitmap indices handling large cardinality domains solved range indices 
bitmap vector represent range distinct value entire ranges partitioned equally spaced buckets 
case approach described range indices require additional query processing time examine details records matched buckets 
detailed analysis possible solution problem additional table 
projection index equality encoding overhead retrieving data disk sieving matching attribute values left open issue 
table 
projection index range encoding interval encoding encoding technique binary encoding proposed attribute value represented binary form log bitmaps 
obviously storage overhead high cardinality attributes compared equality encoding range encoding authors optimal solution evaluating queries exist 
static dynamic query optimisation continuous range selections sided sided range queries discrete range selections queries form 
static query optimisations questions concerning optimal design bitmaps algorithms logical reductions 
dynamic query optimisation tries answer questions inclusion exclusion bit sliced encoded bitmap indices 
currently hep 
hybrid approach equality encoded range top mass storage system 
bitmaps query optimiser provide quick estimate size requested data 
answer optimisation problem central optimisation parameters designing bmi hep optimal number buckets bit slices 
bitmap indices hep typical query profile physicists wish retrieve data analyses regarded partial range queries queries cover dimensions search space subset dimensions data retrieved 
data read skewed 
prototype implementation created bitmap index hep data comprising objects events independent attributes 
regarded index table length width 
assume order objects stored index change 
similar hybrid approach equality encoded range call partitioned equality encoding short equality encoding 
properties attributes partitioned bins example attribute energy binned ranges gev giga electron volt gev bit slice assigned bin means value particular event falls bin 
steps performing sided range query form op ai op op follows 
query range interpreted terms bins 
easily compute bins need scanned answering query 
bin represents range distinct value edge bins called critical bins partially covered query condition 
order sieve correct events candidate slices need fetch event data disk check attribute value query condition 
refer candidate check overhead index highly bound large number candidates candidate slices 
slices covered query range called hit slices 
case events represented slice hits need additional checking 
typical example sided range query candidate slices hit slice depicted fig 

ranges query range candidate slices hit slice fig 

sided range query partitioned equality encoded hep bmi implementation objectivity db basis implementation objectivity db distributed object database management system high performance high availability applications 
objectivity db provides robust scalable multi threaded database engine 
event data bmi implemented separate databases federation turn highest level abstraction objectivity db allows accessed physically distributed databases 
point view programmer database system logical unit 
main architectural aspects depicted fig 

events federation event db bmi db bit slices oid list bitmap index fig 

architectural overview bmi top objectivity db 




object objectivity db directly accessed object identifier oid keeping track event data 
particular physics event stored object directly accessed oid 
step necessary example checking candidate slices 
see right side fig 
oid list maintained addition bmi 
instance want check event position simply refer oid list position fetch event disk checking attribute value query condition 
justification bmi approach carried benchmarks pentium ii linux red hat 
bmi implemented top objectivity db version 
rest experiments operate events 
optimal binning space time complexity right number bit slices bins regarded key parameter kind bitmap index 
detailed discussion behaviour bmi different number bins different number indexed attributes vital understanding hep 
best knowledge authors kind investigation done special needs hep data dw applications general 
main motivation similar implementation bins chosen 
analysis justification key parameter 
elaborate optimal number bins queries indexed attribute extend analysis attributes summarised characteristic cases user physics analysis hep 
simplicity base analysis uniformly distributed data gives best insight performance index 
domain selectivity dom 
see fig optimal binning highly depends number dimensions covered range query 
generally speaking conclude higher search space covered query higher number bins optimal query performance 
analyse graph queries dimension 
expect performance worse bins candidates need checked query constraint 
case events fetched disk 
increasing number bins number candidates candidate slices gets lower spent fetching events disk reduced 
time larger number bit slices scanned performing boolean operations 
optimal number bins point effects offset 
effect higher dimensional queries slight difference optimum moves right higher number bins due higher number candidates candidate slices higher number bins 
obviously bins number candidates dimensions number decreases slowly number dimensions bins increases 
candidates time sec time sec dimension number bins dimensions number bins time sec time sec dimensions number bins dimensions number bins fig 

optimal binning queries various dimensions different distributions data studying behaviour bmi event data uniform distribution motivate implementation applying typical data distributions hep 
section demonstrate advantage index data structure hep analysis conventional methods 
great majority physics data follows gauss exponential distribution 
driven needs physics analysis studied behaviour bmi gauss distribution parameters exponential distribution parameter 
number bins set number dimensions covered query 
results summarised fig 
sec sec sec sec sec sec sec bin candidates sec sec sec sec sec sec bin fig 

variable selectivities gauss exponential distribution figures schematic view underlying data distribution 
horizontal bars indicate domain selectivity query percentage bars refers selectivity candidate objects 
addition time executing query 
see figures query time highly depends selectivity candidate objects domain selectivity 
performance bmi highest lower highly skewed data right events follow exponential distribution 
point poor performance range queries higher worst case 
possible optimisation reducing negative effects worst case dynamic binning adopts distribution event data 
cases access patterns physics analysis characterised range queries lower event data current implementation promising approach hep experiments cern 
partitioned range encoding sided range queries analysed range encoding performs considerably better equality encoding 
contrast optimisation techniques discrete attribute values problem candidate hit slices occur apply method contiguous values new optimisation method considered 
refer approach partitioned range encoding short range encoding 
main advantage equality encoded worst case bit slice scanned sided range queries dimension independent selectivity query 
equality encoded bitmaps bit slices scanned 
studied behaviour equality encoded raised problem candidate slices easily conclude observations impact range encoding 
mentioned worst case bit slice needs scanned sided range queries dimension 
implies consider candidate slice hit slice 
analyse performance characteristics sided range queries equality encoded range encoded variable selectivities objects indexed attributes 
studied performance characteristics bmi uniformly distributed data 
see fig 
query time equality encoded increases increasing selectivities higher number hit slices read query time range encoded constant selectivities hit slices scanned 
time sec eq range selectivity fig 

partitioned equality encoding eq vs partitioned range encoding range fact bit slice needs scanned gives freedom extending number bins theoretical maximum cardinality attribute value 
dealing contiguous values finite cardinality mainly restricted space complexity 
practical optimisation problem constraint available disk space 
experimentally show behaviour range encoded bmi corresponds partial scan event data 
performance characteristics highly dependent characteristics underlying oodbms objectivity db disk 
particular page selectivities read rate linear 
significant speedup achieved page selectivity smaller turn common multi dimensional range queries hep analysis 
performance studies bmi hep data pointed main difference studies bmi concentrated discrete attribute values 
main bottleneck shown checking candidate slices due additional fetching event data disk addition bmi 
designed implemented bmi top commercial object database management system objectivity db different bitmap encoding techniques different data distributions analysis 
partitioned equality encoding uniformly distributed data solved candidate bottleneck increasing number bins came optimal query performance 
optimum regarded trade high number candidates consequently event data vs low number candidates higher number bins 
hep queries mainly sided range queries studied partitioned range encoding discussed completely new problem behaviour bmi attributes infinite cardinality true non discrete values 
showed performance range encoded clearly outperforms equality encoded bmi 
optimal number bins case equality encoded bmi 
gives designer bmi hep data high degree freedom number bins indirectly number candidates performance entire index restricted capacity storage space 

berchtold boehm 
kriegel pyramid tree breaking curse dimensionality sigmod proceedings acm sigmod international conference management data june seattle washington usa 
chan ioannidis bitmap index design evaluation sigmod proceedings acm sigmod international conference management data june seattle washington usa 
chan ioannidis efficient bitmap encoding scheme selection queries sigmod proceedings acm sigmod international conference management data june philadephia pennsylvania usa 
general solution dimensional tree problem sigmod record acm special interest group management data june 
multidimensional access methods computing surveys september 
guttman trees dynamic index structure spatial searching proc 
acm sigmod int 
conf 
management data 
automatic reclustering objects large databases high energy physics proceedings ideas cardiff uk 
www cern ch 
www objectivity com 
neil informix indexing support data warehouses database programming design february 
neil quass improved query performance variant indexes proceedings acm sigmod international conference management data may tucson arizona usa 
shoshani bernardo rotem sim multidimensional indexing query coordination tertiary storage management th international conference scientific statistical database management proceedings cleveland ohio usa july 
wu buchmann encoded bitmap indexing data warehouses proceedings fourteenth international conference data engineering february orlando florida usa 
wu query optimization selections bitmaps sigmod proceedings acm sigmod international conference management data june philadephia pennsylvania usa 
wu yu range bitmap indexing high cardinality attributes skew technical report ibm watson research center may 
