session web services grid computing proceedings conference systemics cybernetics informatics orlando fl july 
propose service oriented middleware som provides upper level middleware rapidly emerging web services middleware easier develop complex multi organizational business applications 
approach primarily builds experience building distributed workflow management multi organizational processes 
effective efficient quality service qos management critical component som allowing guarantee satisfaction fulfillment user application requirements 
reviews qos model supports ability automatically compute qos qos specification component web services 
keywords quality service web service qos process qos multi organizational workflows service oriented middleware open grid service architecture ogsa vision integrated approach supporting escience business foster kesselman 
related move convergence distinct communities web grid leading integrated internet distributed computing hey gilmore milenkovic 
past technological evolution software architectures expect see layered approach achieving vision 
propose service oriented middleware som takes step direction building progress grid middleware rapidly emerging web services developed support business applications 
objective address key outstanding issues making easier build complex applications defined processes composing web services management including orchestration 
processes web services inherently complicated compared workflow processes scale heterogeneity expected greater 
scale related number potentially relevant web service providers may perform similar jobs register multiple registries 
heterogeneity result independent development modification providers resulting functional differences qos service oriented middleware amit sheth jorge cardoso john miller kochut large scale distributed information systems lab computer science university georgia amit anton jam kochut cs uga edu lsdis cs uga edu kang systems center information systems kang org modeling operational differences standards 
som aim provide higher level middleware easier build complex applications scope ogsa 
particular classes middleware services address identified chuang defanti support qos objectives security robustness 
classification grid middleware grid development environments tools grid applications portals thomas mock primarily belongs middle tier 
services offered ogsa needs include effective efficient qos management guarantee satisfaction fulfillment users requirements 
example ogsa chosen support ecommerce processes architecture understand binding agreement contract supplier customer specifying qos items products services delivered deadlines quality products cost service 
management qos requirements directly impacts success organizations participating commerce 
products services available customers defined specifications fulfill customer expectation achieve customer satisfaction 
ogsa accept specification able estimate monitor control qos running applications 
qos play important role dynamic scheduling evolution enactment orchestration process defined composition multiple web services 
achieve objectives step develop adequate qos model processes 
qos models deployed various domains networking multimedia middleware model created processes 
investigated adjacent decide dimensions relevant compose valid usable qos model processes 
previous studies experience workflow domain constructed model composed dimensions time cost fidelity reliability 
interesting important features model qos composite service process synthesized qos properties session web services grid computing proceedings conference systemics cybernetics informatics orlando fl july 
components 
qos properties combination priori estimates designers estimates computed prior executions historical data playing larger role data collected 
synthesizing aggregate estimates requires problems solved determination branching probabilities branching conditions dealing correlation individual services 
qos model properties described prototyped part meteor workflow management system 
background relevant review commercial moves architectures solutions 
review relevant workflow management semantic interoperability form basis approach developing proposed som tools 
brevity review relevant specifications standards xml rdf web services ibm graham including soap soap uddi uddi wsdl wsdl xlang thatte wsfl wsfl basis component middleware relevant ogsa basis som service infrastructure solutions commercial world moving service infrastructure solutions 
example commercial systems research service paradigm propel platform development team carey team focuses scalable infrastructure advanced services 
propel team anil 
discuss requirements comprehensive service platform developed system architectures meet 
fabio casati ming chien shan hp labs casati lee biztalk server mehta 
levy focus process oriented dimension services discuss workflow technology contributes current solutions 
vassilis christophides christophides hull bell labs studying workflow mediation xml vortex architecture 
bell labs wise approach 
schuldt emphasize process commerce 
papers review ongoing research efforts flexible interoperable highly dependable workflows service environment 
crossflow grefen aberer multi national research project cooperation virtual enterprises 
contract mechanism service outsourcing integration 

discuss importance performance guarantees banking environment mathematical approach appropriate system configuration 
sheth 
sheth aalst discuss evolving architectures multi organizational processes increasingly networked economy 
additional examples include net tibco tibco ibm ibm 
qos funded darpa ito quorum program extending qos concepts mechanisms higher semantic levels allow definition measurement control quality service delivered services complete applications 
little done terms qos pluggable components propose 
workflow process management need constructing processes multiple domains existing applications received attention context business business applications sheth aalst 
ogsa recognized need workflow foster kesselman 
efforts facilitate needs enterprise application integration eai cross organizational workflow management system wfms grefen aberer easy build complex application little support qos processes created composing coordinating individual applications web services 
meteor project large scale distributed information systems lsdis lab computer science department university georgia largest academic effort substantial industrial collaboration 
project spanned complete phase research prototyping industrial trials technology licensing commercialization comprehensive workflow management system 
meteor architecture includes design tools monitoring tools workflow repository enactment systems 
due different needs organizations developed enactment service orbwork kochut sheth miller miller cardoso 
orbwork corba java system oriented support mission critical applications requiring high scalability robustness 
fully distributed scalable 
lsdis java language development system portable platforms 
supports interoperability standards jflow jflow swap 
enhancements include support dynamic changes instance level kochut sheth repository support process reuse exception handling mechanism luo part adaptation module 
collaboration nrl resulted extended meteor system called salsa build multilevel secure mls workflow management system kang kang park 
session web services grid computing proceedings conference systemics cybernetics informatics orlando fl july 
specification web service process qos processes composed multiple web services 
selection services occur design time run time 
case matching ranking functions select suitable services 
service provide appropriate functionality meet qos requirements 
som qos requirements research development mechanisms specify qos allow effective efficient qos management main objectives som architecture 
identified important complementary areas currently investigating specification estimation algorithms methods monitoring tools mechanisms control qos 
development integrated solutions composed modules result sophisticated quality management framework 
objectives functionalities module include qos model developed allow specification workflow qos metrics 
model allows suppliers specify duration quality cost fidelity services products delivered 
specifications set design time designers build workflow applications adjusted run time 
algorithms methods developed estimate qos workflow instances started instance execution 
estimation qos instantiation allows suppliers ensure workflow processes executed exhibit qos requested customers 
analysis qos instance execution allows som infrastructure constantly compute qos metrics register deviations initial requirements 
tools available monitor qos running applications 
users managers need receive information qos status possible deviations desired metrics occur 
qos monitoring tools automatically detect variation fidelity automatically notify interested users 
mechanisms available control qos applications 
control necessary applications behave initial requirements 
consider example workflow instances running correctly qos specifications followed task fails 
consequence qos specifications time longer satisfied som infrastructure raises warning alert exception 
faulty task needs replaced equivalent task restore soundness system 
replacement accomplished applying dynamic changes instances manually automatically cardoso luo 
qos model qos typically decomposed dimensions 
business processes stalk hout investigated features successful companies assert competitive world markets 
results indicated success related capability compete organizations essential pillars time cost quality 
dimensions major concern organizations 
associates dimensions quality including performance reliability 
software systems quality service extensively studied 
major contribution networking georgiadis guerin eal time applications clark shenker middleware areas schlichting zinky bakken 
middleware systems set practical dimensions distributed object systems reliability performance include ttr time repair ttf time failure availability failure masking server failure 
data networks qos generally focuses domain specific dimensions bandwidth latency jitter loss nahrstedt smith 
previous studies experience workflow process domains construct qos model composed dimensions time cost reliability fidelity 
dimensions develop qos framework suitable grid web services 
order precise provide definitions dimensions 
web service response time defined time elapses service requests arrival completion service request 
response time sum waiting time actual processing time 
cost represents cost associated execution grid web services 
fundamental issue organizations wish reduce expenditures internal processes service cost 
reliability corresponds likelihood service perform users user demands function failure rate 
reliability ratio successful executions scheduled executions 
fidelity reflects product produced service rendered 
fidelity treated vector composed fidelity attributes 
fidelity attribute refers property characteristic product created transformed analyzed 
fidelity attributes determine services meeting user specifications 
creation qos estimates determining useful estimates qos properties web service challenging task 
combination priori estimates designers estimates computed prior executions historical data playing larger role data collected 
additional complexities due fact qos parametric 
example response time service takes xml document input depend size document 
estimates composite web services developed ways estimates session web services grid computing proceedings conference systemics cybernetics informatics orlando fl july 
entire composite service created just ordinary atomic services priori estimates refined execution monitoring data collected qos properties synthesized qos properties component services making composite service 
synthesizing aggregate estimates requires problems solved determination branching probabilities branching conditions dealing correlation individual services 
web service runtime behavior specification composed classes information basic distributional 
basic class associates service qos dimension minimum value average value maximum value dimension take 
example cost dimension corresponds minimum average maximum cost associated execution task 
second class distributional class corresponds specification constant distribution function exponential lognormal normal rayleigh time independent weibull uniform statistically describes task behavior runtime 
values specified basic class typically employed mathematical methods order compute process qos metrics distributional class information simulation systems compute workflow qos 
devise values classes appropriate function applied derive qos metrics individual services cardoso miller 
computing process qos comprehensive solutions difficult problems encountered synthesizing qos composite services discussed detail cardoso luo cardoso miller 
presents mathematical model network reduction algorithm computing aggregate qos properties step step 
step reduction rule applied shrink process network 
continued node left network 
set reduction rules applied composite service network corresponds set inverse operation construct network services 
compute qos metrics set distinct reduction systems sequential system parallel system conditional system fault tolerant system loop system network system 
illustration show reduction works sequence services 
ij sequential system reduction reduction sequential system 
sequential service tasks ti reduced single task ij 
reduction incoming transitions outgoing transition tasks tj transferred task ij 
sequential system 
reduction applied rules satisfied xor split xor join 
rules prevent reduction applied parallel conditional loop systems 
compute qos reduction formulae applied time ij cost ij reliability ij mathematical methods effectively alternative utilize simulation analysis miller cardoso 
simulation play important role fine tuning tuning qos metrics workflows exploring questions 
need adapt change workflow detected deciding changes carry difficult 
change possible effects explored simulation 
facilitate rapid feedback workflow system simulation system need interoperate 
particular workflow specification documents need translated simulation model specification documents new model executed animated thefly 
project capabilities involve integration meteor wfms simulation system nair miller miller nair miller 
simulation model displayed graphically executed animated 
statistical results collected displayed indicating workflows qos 
system enable som support efficient qos management enhancements need middleware infrastructure 
enhancements include development support comprehensive qos model implementation methodologies mathematical model simulation compute predict qos 
developed stochastic workflow reduction algorithm swr step step computation qos metrics 
carried meteor system allow specification computation management qos 
support qos requires modification extension workflow system components development additional modules 
implementation meteor system development specific conceptual model main ideas applied vast majority workflow systems available aalst barros 
support qos management requires modification extension workflow system components 
includes enactment system workflow builder designer monitor code generator repository workflow model task model 
additionally new components need implemented qos estimator module create qos estimates tasks probabilities transitions 
monitor needs additional interface runtime session web services grid computing proceedings conference systemics cybernetics informatics orlando fl july 
tasks qos metrics propagated logged database data processing purposes 
specification process qos descriptions qos grid web services need stored fashion suitable automatic processing 
words qos information stored functional descriptions services registries repositories 
suggested foster roy working defining extended web services description language wsdl describe services 
similarly extended web services flow language wsfl composite services built simpler services 
extended wsdl provide additional information prescribed ogsa 
include discovery soft state destruction explicit destruction notification source notification sink registry factory factory primary key handle mapper manageability foster kesselman 
assume descriptions provided service considered grid service 
take wsdl extensions ogsa augment additional qos information security form qos description 
descriptions stored repositories arpinar miller upward compatible uddi registries 
repositories allow grid services located advanced query search mechanisms 
spc engine web services service scheduler service agent service scheduler service agent application metalogic service scheduler service agent service agent service scheduler service scheduler service agent service scheduler service agent service scheduler service agent spc engine meteor system wish able save descriptions composite grid services component services 
propose wsfl qos 
specification indicate process logic composite service 
information created som application builder stored repository 
shows som process control spc engine build meteor architecture 
responsible executing designed som applications 
extend wsfl keep track progress competition xlang thatte microsoft daml darpa 
particular daml daml currently includes constructs specify qos parameters quality guarantees quality rating degree quality 
daml identified specification web service business processes key specification component qos model adopted significantly improved supply complete solution 
maintainability qos model extended additional dimensions useful som applications stronger requirements 
dimension maintainability 
maintainability corresponds mean time necessary repair failures session web services grid computing proceedings conference systemics cybernetics informatics orlando fl july 
average time spent maintain applications condition perform intended function 
maintenance actions mainly involve correction failures application execution 
som infrastructures record period time necessary faulty node repaired 
time spent repair component depends type error occurred 
increase maintainability advanced mechanisms developed allow workflow infrastructures automatically recover errors 
luo 
describe architecture implementation exception handling mechanism 
system detects propagates exceptions occur instances execution exception handling module 
system case reasoning theory derives exception handlers repair damaged workflows luo sheth 
system ability adapt time 
knowledge acquired past experiences resolution new problems 
security second dimension included trust dimension 
workflow systems coordinate manage web services development techniques global security level applications specifications trust level outcome application 
applications face security problems dedicated mechanisms needed increase level security 
major problems include distributed nature som applications non secure networks internet web servers access som data potential span som 
systems security level assessed existence security mechanisms authentication access control labels audits system integrity security policy development techniques formal specifications formal proofs tests 
importance developing secure middleware systems recognized prototypes combining middleware security technology developed 
extended workflow technology implementation security modules 
miller fan fan describes workflow security architecture targets security services authentication access control data confidentiality data integrity non repudiation recommended international standards organization network information systems 
second kang describes multilevel secure mls workflow system enable distributed users workflow applications cooperate classification levels 
mls workflow systems allow users program multilevel mission logic securely coordinate distributed tasks monitor progress workflow classification levels 
aalst barros hofstede 
workflow patterns homepage tm tue nl research patterns 
arpinar miller sheth 
efficient data extraction storage utility xml documents 
proc 
th annual acm southeast conference athens ga cardoso luo miller sheth kochut 
survivability architecture workflow management systems 
proceedings th annual acm southeast conference athens ga cardoso miller sheth 
quality service model workflow processes 
athens ga lsdis lab department computer science university georgia 
carey team 
scalable infrastructure advanced services 
data engineering bulletin 
casati 
lee su 
definition execution analysis optimization composite services 
data engineering journal 
christophides hull kumar simeon 
workflow mediation 
data engineering bulletin 
chuang defanti foster messerschmitt schmidt 
white nsf middleware initiative 
clark shenker zhang 
supporting real time applications integrated services packet network architecture mechanism 
proceedings acm sigcomm 
daml 
technical overview white describing key elements daml 
fan 

security meteor workflow management system 
department computer science 
athens ga university georgia 
foster kesselman nick tuecke 
physiology grid open grid services architecture distributed systems integration 
foster kesselman tuecke 
anatomy grid enabling scalable virtual organizations 
international supercomputer applications 
foster roy sander winkler 
quality service high applications 
session web services grid computing proceedings conference systemics cybernetics informatics orlando fl july 

quality service specification distributed object systems 
distributed systems engineering journal 


managing quality strategic competitive edge 
free press ny 
georgiadis guerin peris 
efficient network qos provisioning node traffic shaping 
ieee acm transactions networking 
gilmore 

grid hunting 
infoworld 
graham davis daniels nakamura 
building web services java making sense xml soap wsdl uddi sams 
grefen aberer ludwig 
crossflow cross organizational workflow management service outsourcing dynamic virtual enterprises 
data engineering bulletin special issue infrastructure advanced services 
hey 

science business grid 
generation hpc systems grid 
edinburgh uk 
schlichting wong 

survivability customization adaptability cactus approach 
darpa information survivability conference exposition discex 
ibm ibm developerworks web services zone 
jflow 
omg rfp submission workflow management facility revised submission ftp ftp omg org pub docs bom pdf 
kang sheth kochut miller 
multilevel secure workflow management system 
proc 
th conference advanced information systems engineering heidelberg germany 
kang park 
access control mechanisms interorganizational workflows 
proceedings th acm symposium access control models technologies va kochut sheth miller 
optimizing workflow 
component strategies 


response time guarantees service middleware 
data engineering bulletin 
schuldt schek 
special issue infrastructure advanced services 
data engineering bulletin 
luo 

knowledge sharing coordinated exception handling intelligent problem solving support cross organizational business processes 
department computer science 
athens ga university georgia 
luo sheth miller kochut 
defeasible workflow computation exception handling 
proceedings computer supported cooperative cscw adaptive workflow systems workshop seattle wa 
levy meredith andrews beckman klein 
biztalk server business process orchestration 
data engineering bulletin 
milenkovic 

peer peer looking glass ggf february 
miller cardoso silver 
simulation facilitate effective workflow adaptation 
proceedings th annual simulation symposium san diego california 
miller fan wu arpinar sheth kochut 
security meteor workflow management system 
athens ga dept computer science university georgia 
miller nair zhang zhao 
java simulation animation environment 
proceedings th annual simulation symposium atlanta ga miller sheth kochut singh 
meteor web workflow management system 
journal intelligence information management systems 
miller xiang 
web simulation environment 
generation computer systems special issue web modeling simulation 
nahrstedt smith 
design implementation experiences omega point architecture 
ieee session web services grid computing proceedings conference systemics cybernetics informatics orlando fl july 
jsac 
nair miller zhang 
java query driven simulation environment 
proceedings winter simulation conference colorado ca 
jain 
defining generation business platform discussion ebusiness platform 
data engineering bulletin 


simplicity wins germany mid sized industrial companies succeed 
boston mass harvard business school press 
sheth aalst arpinar 
processes driving networked economy 
ieee concurrency 
soap 
simple object access protocol 
stalk hout 
competing time competition reshaping global markets 
new york free press 
thatte 

xlang web services business process design microsoft thomas mock 
development web toolkits computational science portals npaci 
ninth ieee intl symp high performance distributed computing hpdc pittsburgh pa tibco 

tibco web services technical white 
uddi 
universal description discovery integration 
wsdl 
web services description language 
wsfl 
wsfl ibm 
zinky bakken schantz 
architectural support quality service corba objects 
theory practice object systems 
