submitted journal artificial intelligence 
earlier version appeared proc 
aaai 
frame problem knowledge producing actions richard scherl hector levesque department computer science university toronto toronto ontario canada email scherl cs toronto edu hector cs toronto edu march proposes solution frame problem actions 
example knowledge producing action sense operation performed robot determine object particular shape grasp 
extension reiter solution frame problem ordinary actions moore knowledge action 
properties specification knowledge producing actions affect fluents knowledge fluent actions knowledge producing affect knowledge fluent appropriate 
addition memory emerges side effect known certain situation remains known successor situations relevant changed 
shown form regression examined reiter reducing reasoning situations reasoning initial situation applies knowledge producing actions 
situation calculus provides formalism reasoning actions effects world 
axioms specify prerequisites actions effects fluents change 
general necessary provide frame axioms specify fluents remain unchanged actions 
worst case require axiom combination action fluent 
reiter generalizing haas schubert pednault set conditions explicit specification frame axioms avoided 
extend solution frame problem cover knowledge producing actions actions effects change state knowledge 
standard example knowledge producing action reading number piece 
consider problem dialing combination safe mccarthy hayes moore moore 
agent place safe knows combination safe open safe performing action dialing combination 
agent place safe piece knows combination safe written open safe reading piece dialing combination 
effect read action change knowledge state agent typically satisfy prerequisite action 
example knowledge producing action performing experiment determine solution acid moore 
examples sensing operation performed robot determine shapes objects grasp lesp erance levesque lesp erance execution unix commands ls etzioni 
incorporate knowledge producing actions situation calculus necessary treat knowledge fluent affected actions 
precisely approach taken moore 
new knowledge fluent knowledge producing actions handled way avoids frame problem able prove consequence specification knowledge producing actions affect fluents knowledge fluent actions knowledge producing affect knowledge fluent appropriate 
addition show memory emerges side effect known certain situation remains known successor situations relevant changed 
show form regression examined reiter reducing reasoning situations reasoning initial situation applies knowledge producing actions 
desirable effect allowing reduce reasoning knowledge action reasoning knowledge initial situation techniques discussed frisch scherl scherl 
show certain useful properties knowledge positive introspection specified hold initial state continue hold automatically successor situations 
section briefly review situation calculus reiter solution frame problem 
section introduce epistemic fluent situation calculus accessibility relation situations done moore 
solution frame problem knowledge producing actions epistemic fluent developed illustrated sections 
section consider regression situation calculus knowledge producing actions 
discussed section 
situation calculus frame problem situation calculus presentation reiter firstorder language representing dynamically changing worlds changes result named actions performed agent 
terms represent states world situations 
ff action situation result performing ff represented ff 
constant denote initial situation relations truth values vary situation situation called fluents denoted predicate symbol situation term argument 
example broken means object broken situation functions convention single lower case letters possibly subscripts superscripts represent variables strings lower case letters function symbols strings letters capital letter predicate symbols constants 
quantifiers indicated variables implicitly universally quantified 
denotations vary situation situation called functional fluents 
denoted function symbol extra argument situation term phone number bill 
assumed provided action ff action precondition axiom form ff formula ff action preconditions 
action precondition axiom poss ff ff action precondition axiom action drop 
poss drop holding furthermore provided fluent general effect axioms form 
general positive effect axiom fluent poss fl general negative effect axiom fluent poss fl gamma fl formula describing conditions doing action situation leads fluent true successor situation similarly fl gamma formula describing conditions performing action situation results fluent false situation 
example positive effect axiom fluent broken 
oss drop fragile explode broken sentence negative effect axiom broken 
poss repair broken necessary add frame axioms specify fluents remain unchanged 
frame problem arises number frame axioms general case theta theta number actions number fluents 
solution frame problem reiter pednault schubert rests completeness assumption 
assumption axioms characterize conditions action lead fluent true respectively false successor situation 
action possible truth value changes false true result doing fl true similarly change true false 
additionally unique name axioms added actions situations 
reiter shows derive set successor state axioms form axioms positive effect negative effect unique name completeness assumption 
successor state axiom poss fl fl gamma similar successor state axioms may written functional fluents 
successor state axiom needed fluent action precondition axiom needed action unique name axioms need explicitly represented effects compiled 
axioms needed 
successor state axiom broken obtained 
oss broken drop fragile explode broken repair note example broken obj follows unique name axioms broken obj drop obj 
discussion assumed ramifications indirect effects actions 
ensured prohibiting state constraints sentences specify interaction fluents 
example sentence sp 
assumption state constraints axiomatization domain 
lin reiter approach discussed section extended state constraints compiling effects state constraints successor state axioms 
epistemic fluent approach take formalizing knowledge adapt standard possible world model knowledge situation calculus done moore 
informally think binary accessibility relation situations situation understood accessible situation far agent knows situation situation known true accessible conversely known false accessible situation 
treat knowledge fluent introduce binary relation read accessible treat way fluent 
words point view situation calculus argument official situation argument expressing known situation argument just auxiliary broken introduce notation knows read known situation abbreviation formula uses example knows broken def broken note notation supplies appropriate situation argument fluent expansion conventions certainly possible 
case equality literals convention supply situation argument non variable argument equality predicate 
example knows number bill number mary def number bill number mary notation generalized inductively arbitrary formulas note convention means arguments reversed normal modal logic 
example broken def broken restrict attention knowledge atomic formulas section 
turning knowledge producing actions sorts actions consider actions effect known truth value formula actions known value term 
case imagine sense action fluent doing sense truth value known 
introduce notation abbreviation formula indicating truth value fluent known 
def knows knows follow specification section sense second case imagine action read term doing read denotation known 
case introduce notation defined follows def appear follow specification developed section read simplicity assume type action associated characteristic fluent term way 
solving frame problem approach developed rests specification successor state axiom relation 
situations relation completely determined relation action non knowledge producing actions drop specification moore follows oss drop drop drop idea far agent world knows worlds 
drop far agent knows worlds drop 
change knowledge occurs moving drop knowledge action drop performed 
consider simple case knowledge producing action sense determines fluent true moore 
oss sense sense sense far agent world knows worlds 
sense far agent knows worlds sense 
idea moving sense agent knows action sense performed truth value predicate observe successor state axiom guarantees true sense iff true similarly sense 
truth value worlds sense sense true 
case read action denotation term known replaced 
denotation worlds read read true 
general may knowledge producing actions 
associated knowledge producing action ff formula 
case sense type action formula form fluent 
case read type action formula form situation dependent term 
assume knowledge producing actions ff 
ff associated formulas 
form successor state axiom follows successor state axiom oss ff 
ff ff 
ff relation particular situation completely determined relation action example consider example opening safe combination written piece adapted moore frame axioms 
preconditions action dial comb dialing combination safe pulling handle oss dial comb safe comb fluent holds agent located location object situation idea sentence dialing action possible object needs safe agent needs safe agent needs know combination safe 
discuss details connection agent ability open safe dialing combination agent knowledge combination safe successor state axioms fluents open open safe functional fluents info comb follows oss open dial comb open lock refined axiomatization allow safe opened knowing combination dialing number magically luckily happens combination 
oss safe safe oss moveto moveto oss info info oss comb comb functional fluent info denote written axiomatization initial state includes safe sf sf pr knows info pr comb sf 
note axiomatization entail oss dial comb sf 
knowledge producing action read action precondition axiom oss read successor state axiom follows oss read read info info words read knowledge producing action effect info known 
note sentence sentence fact read action possible ensure axiomatization entails info pr read pr axiomatization includes knows info pr comb sf sentences ensure knows info pr comb sf read pr holds 
axiomatization entails comb sf read pr properties equality 
successor state axioms ensure read action change safe comb info case oss dial comb sf read pr axiomatization entails open sf dial comb sf read pr words reading safe opened dialing combination 
correctness solution section shows proposed solution frame problem situation calculus knowledge knowledge producing actions fact ensure knowledge changes appropriate 
represent arbitrary literal including equality 
theorem shows knowledge producing actions change state world 
fluent truth value altered knowledge producing action theorem knowledge producing effects situations fluents knowledge producing action terms ff oss ff ff 
proof immediate having successor state axioms fluent 
necessary show actions affect knowledge appropriate way 
truth theorem ensures unwanted increases knowledge 
informally learned fluent doing action ff long ff affect case ff knowledge producing action ff provide information known related formally theorem default persistence ignorance situations knows oss ff knows ff long 
fluent successor state axiom specifies changed action ff 
formally sp ff 
case ff knowledge producing action corresponding form knows knows 
case ff knowledge producing action corresponding form 
case knows oss ff knows oss ff proof situation knows true case false 
false 
sentence situations ff case ff 
truth knows ff guaranteed long ff ff ff 
condition hold long case successor state axiom specifies effect change truth value words sp ff 
condition guaranteed long case ff knowledge producing action sense type corresponding successor state axiom form case ii ff knowledge producing action read type corresponding form iii oss ff oss ff 
case hold long case knows knows 
case ii hold long case 
case iii hold long case knows oss ff knows oss ff 
property specification agents forget 
informally speaking agent knows known ff long effect ff false 
formally theorem memory fluents situations knows knows ff long fluent successor state axiom specifies changed action ff 
formally sp ff proof knows true case sk true 
sentence states ff case ff 
true ff successor state axiom false successor state axiom specifies effect ff false 
ff guaranteed hold ff ff ff long case successor state axiom specifies effect change truth value words sp ff 
consider successor state axiom broken sentence 
knows broken obj true knows broken obj drop obj true 
note knows fragile obj knows poss drop obj true knows broken obj drop obj true 
knowledge formulas point results stated terms fluents 
argument knows arbitrary formula 
discussion sense type actions argument fluent formula 
effect sense action performed robot lesp erance levesque lesp erance may specified follows object holding shape sense formula associated knowledge producing action form formula 
arguments knows operator may arbitrary formulas 
may want nested knows operators 
situation argument operator understood contextually 
outermost operator situation argument understood argument immediately dominating atom 
example understood abbreviation 
knows knows 
simple induction size formulas theorems expressed terms fluents generalized formulas 
solution frame problem knowledge producing actions correct knowledge understood knowledge arbitrary sentences 
remaining issue concerns requiring knows operator conform properties particular modal logic 
example logic chosen want positive introspection sentence property logic 
knows oe knows knows oe restrictions need placed relation correctly models accessibility relation particular modal logic 
problem way interfere successor state axioms completely specify relation non initial situations 
solution axiomatize restrictions initial situation verify restrictions obeyed situations 
sort init restrict variables range situations accessible necessary stipulate init init 
init init 
init init various restrictions listed 
reflexive restriction added want modal logic knowledge 
subset restrictions added 
reflexive init euclidian init init init symmetric init init transitive init init init model logic example need include axioms reflexivity transitivity 
step prove relation initial situations satisfies particular restriction restriction hold situations 
theorem relation set initial situations restricted conform subset properties reflexive symmetric transitive euclidian relation situation resulting execution sequence possible actions defined poss satisfy set properties 
init abbreviation proof restrictions necessary prove restriction holds hold action ground situation term constructed finite number function symbols action terms restriction holds restriction hold situation ffl reflexive necessary show 
false case true false 
form successor state axiom sentence fact assumption true 
false 
ffl symmetric necessary show assume true 
false case true false 
note successor state axiom sentence way true equal true depending true 
case true assumption 
successor state axiom sentence symmetry case true 
false 
ffl transitive necessary show example restriction guaranteed hold level hold set initial situations consider condition weakly directed note assuming restriction holds guaranteed hold possible truth value alternatively appeal induction principle situation calculus described lin reiter reiter 
assume true false case true false 
note successor state axiom sentence way true equal true equal true depending true 
case true assumption 
successor state axiom sentence transitivity case true 
false 
ffl euclidian necessary show 
assume true false case true false 
note successor state axiom sentence way true equal true equal depending true 
case true assumption 
sentence transitivity case true 
false 
significance theorem relation initial situation defined satisfying certain conditions relation situations reachable initial situation satisfies properties 
decide example logic model knowledge go ahead stipulate relation initial situation reflexive transitive 
guaranteed relation reachable situations satisfy properties model knowledge remain danger conflicting successor state axiom 
reasoning representation actions effects method addressing projection problem reiter 
question determining sentence true situation resulting execution action sequence ff 
ff ground action terms 
question represented query ff 
ff axiomatization actions effects initial situation 
expression 
compact notation situation term gamma 
denotes state resulting performing action followed followed situation method answering query translate axiomatization initial situation query contain modal operator knows order logic known method implicit discussion moore 
order theorem proving method query particular axiomatization 
efficient method designed performing automated deduction modal logics sentence representation modal logic knowledge fact results reported frisch scherl scherl indicate modal deduction methods understood reasoning literals representing accessibility relation easily modified handle sentence 
regression operators utilized address projection problem 
regression determine sequence actions ff 
ff executable sequence actions resulting legal situation 
regression reiter reiter develops form regression reduce reasoning situations reasoning initial situation 
section regression operator developed knowledge producing actions applied problem determining particular plan satisfies particular property 
plan expressed ground situation term term built function ground action terms gr question axiomatization domain entails gr arbitrary sentence including modal operators 
circumstances successor state axioms including regress formula gr 
result regression formula ordinary modal logic formula action terms situation term ordinary modal theorem proving method developed frisch scherl scherl may determine regressed formula holds 
follows assumed formulas fluent abbreviated knows 
regression operator defined relative set successor state axioms theta 
parts definition regression operator theta concern ordinary knowledge producing actions reiter pednault non fluent atom including equality atoms atoms predicate symbol poss fluent atom knows operator situation argument situation constant theta ii 
cases 
case covers ordinary non functional fluents 
case covers equality literals functional fluent argument 
fluent successor state axiom theta poss 
phi theta 
ff oe phi ff oe item regressed equality literal argument functional fluent successor state axiom theta poss 
phi theta 
ff oe phi ff oe theta 
ff oe phi ff oe iii 
formula theta theta theta theta theta theta 
iv 
formulas theta theta theta theta theta theta theta theta theta 
additional steps needed extend regression operator actions 
definitions needed specification follow 
arbitrary sentence situation term sentence results adding extra argument fluent inserting argument position 
reverse operation gamma result removing argument position fluents 
step covers case regressing non knowledge producing action knows operator 
step vi covers cases regressing knowledge producing action sense type knows operator step vii read type actions 
definitions new situation variable 
knowledge producing action theta knows knows theta gamma 
vi 
theta knows sense knows theta gamma knows theta gamma vii 
theta knows read knows theta gamma theorem axiomatization domain including ss successor state axioms 
notation theta indicate regression operator applied repeatedly applications leave formula unchanged 
theorem ground situation term gr gr iff gamma ss theta gr proof suffices show process regression preserves logical equivalence axiomatization gr theta gr done showing step preserves logical equivalence 
process terminate step removes outer situation terms number function symbols making term finite 
step preserves equivalence process results equivalent formula 
regression terminates sentence contain action terms situation term successor state axioms longer needed determine theta gr 
prove step preserves logical equivalence suffices show theta 
proof induction size sentence proofs equivalence steps regression operator theta relatively simple 
immediate ii 
form successor state axioms 
iii 
follows definition negation quantifiers inductive hypothesis 
iv 
definition connectives inductive hypothesis 
going vi vii note successor state axiom entails set sentences forms indicated 
knowledge producing action sentence form non knowledge producing action sentence form action sentence form proofs equivalence steps vi vii follows knows definition knows successor state axiom particular sentence specialization successor state axiom particular sentence inductive hypothesis theta definition knows knows theta gamma vi 
knows sense definition knows sense successor state axiom particular sentence sense sense sense successor state axiom inductive hypothesis theta definition connectives theta boolean logic theta theta definition theta theta definition knows 
knows theta gamma knows theta gamma vii 
knows read definition knows read successor state axiom particular sentence read read read successor state axiom inductive hypothesis theta definition connectives theta definition reflexivity theta definition knows theta gamma result means test sentence true executing plan necessary regress gr gr plan expressed situation term successor state axioms 
accomplished repeatedly passing regression operator formula situation term successor state axioms including longer needed 
point ordinary modal logic theorem proving method utilized perform test determine gamma ss theta gr 
consider example adapted moore frame axioms 
task show agent performs litmus test solution agent know solution 
litmus turns red solution 
axiomatization includes acid 
actions est action preconditions rue predicate oss ignored presentation 
successor state axioms red acid red acid est red est acid acid instance successor state axiom relation sense red red formula initially regressed knows acid sense test step vi definition yield 
red test knows red acid test red test knows red acid test note red test regresses acid red test regresses acid step ii sentence simplification 
additionally knows red acid test regresses knows acid acid knows red acid test regresses knows acid acid steps ii iii iv sentences simplification 
result regressing 
acid knows acid acid acid knows acid acid sentence clearly entailed acid entailed original theory 
note rewritten sentence ordinary modal logic situation term consider safe opening example earlier 
wish prove open sf dial comb sf read pr sentence regressed step ii sentence 
dial comb sf dial comb sf open sf read pr dial comb sf lock sf point seen regressed formula entailed axioms disjuncts dial comb sf dial comb sf clearly entailed theory 
crucial part particular problem lies determining dial comb action possible read pr 
topic section 
legality testing order determine particular sequence actions results state particular sentence true necessary show step sequence actions executable possible 
reiter define legal action sequence 
consider sequence ground action terms ff 
ff sequence legal initial situation action ff sequence possible state resulting performing actions ff 
ff gamma situation term ff ff gamma 
ff legal situation ff 
ff legal action sequence 
need method testing legality action sequences 
suppose actions action precondition axioms follows oss act pi act 
oss act pi particular ground action term ff need pick proper instance corresponding pi act notation pi ff indicate pi act 
ff act 

sequence ff 
ff ff ground action term legal action sequence pi ff 
pi ff 
ff 
pi ff 
ff 
ff gamma definition legal action sequence 
correctness regression conclude sequence ff 
ff legal action sequence gamma ss pi ff 
theta pi ff 
ff 
theta pi ff 
ff 
ff gamma returning safe opening example consider testing legality situation dial comb sf read pr answered determining axiomatization entails sentence formed basis preconditions dial comb read axiomatized sentences 
pr safe sf read pr sf read pr comb sf read pr note safe sf read pr regresses safe sf step ii regression operator sentence 
sf read pr regresses read pr moveto sf sf read pr moveto sf step ii sentence 
furthermore comb sf read pr abbreviation knows comb sf read pr regresses info pr comb sf step vii sentence 
sentence regresses sentence pr safe sf read pr moveto sf sf read pr moveto sf info pr comb sf readily determined axiomatization initial situation entails sentence 
axiomatization includes pr safe sf sf 
axiomatization includes knows info pr comb sf properties equality info pr comb sf entailed 
provides solution frame problem knowledge producing actions 
long conditions needed reiter solution ordinary actions met provides solution knowledge producing actions 
terms extending discussed knowledge prerequisites effects actions indexical objective knowledge 
lesp erance levesque lesp erance done making situations composite agents times worlds 
consideration logics belief topic research 
results limited logics knowledge logics possible world semantics accessibility relation reflexive 
note case knowledge producing action causes known situation 
case belief producing action guarantee situation exist 
results directly extend modal logics reflexive accessibility relation 
acknowledgments situation calculus frame problem carried collaboration yves lesp erance fangzhen lin ray reiter 
useful discussions comments earlier versions 
additionally joe halpern sheila mcilraith bill millar steven shapiro helpful comments earlier versions 
research funded part national sciences engineering research council canada institute robotics intelligent systems 
etzioni etzioni oren hanks steve weld daniel draper denise lesh neal williamson mike 
approach planning incomplete information 
nebel bernhard rich charles swartout william editors principles knowledge representation reasoning proceedings third international conference cambridge massachusetts 

frisch scherl frisch alan scherl richard 
general framework modal deduction 
allen fikes sandewall editors principles knowledge representation reasoning proceedings second international conference san mateo ca morgan kaufmann 

haas haas 
case domain specific frame axioms 
brown editor frame problem artificial intelligence 
proceedings workshop 
morgan kaufmann publishers san mateo california 

lesp erance levesque lesp erance yves levesque hector 
indexical knowledge robot plans 
proceedings eighth national conference artificial intelligence 

lesp erance lesp erance yves 
formal theory indexical knowledge action 
ph dissertation university toronto 
lin reiter lin fangzhen reiter raymond 
state constraints revisited 
second symposium logical formalizations commonsense reasoning 
mccarthy hayes mccarthy hayes 
philosophical problems standpoint artificial intelligence 
meltzer michie editors machine intelligence 
edinburgh university press edinburgh uk 

moore moore 
reasoning knowledge action 
technical note sri international 
moore moore 
formal theory knowledge action 
hobbs moore editors formal theories commonsense world 
ablex norwood nj 

pednault pednault 
adl exploring middle ground strips situation calculus 
brachman levesque reiter editors proceedings international conference principles knowledge representation reasoning 
morgan kaufmann publishers san mateo california 

reiter reiter raymond 
frame problem situation calculus simple solution completeness result goal regression 
lifschitz vladimir editor artificial intelligence mathematical theory computation papers honor john mccarthy 
academic press san diego ca 

reiter reiter raymond 
projection problem situation calculus soundness completeness result application database updates 
proceedings international conference ai systems college park maryland 

reiter reiter raymond 
proving properties states situation calculus 
artificial intelligence 
appear 
reiter reiter raymond 
representing reasoning actions 
course notes computer science logic artificial intelligence 
scherl scherl richard 
constraint logic approach automated modal deduction 
ph dissertation university illinois 
schubert schubert 
monotonic solution frame problem situation calculus efficient method worlds fully specified actions 
loui carlson editors knowledge representation defeasible reasoning 
kluwer academic press boston mass 

