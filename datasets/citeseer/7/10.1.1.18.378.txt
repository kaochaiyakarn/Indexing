overview evolutionary computation william spears kenneth de jong thomas david fogel hugo de 
evolutionary computation uses computational models evolutionary processes key elements design implementation computerbased problem solving systems 
provide overview evolutionary computation describe evolutionary algorithms currently interest 
important similarities differences noted lead discussion important issues need resolved items research 
evolutionary computation uses computational models evolutionary processes key elements design implementation computer problem solving systems 
variety evolutionary computational models proposed studied refer evolutionary algorithms 
share common conceptual base simulating evolution individual structures processes selection reproduction 
processes depend perceived performance fitness individual structures defined environment 
precisely evolutionary algorithms maintain population structures evolve rules selection operators recombination mutation 
individual population receives measure fitness environment 
selection focuses attention high fitness individuals exploiting available fitness information 
recombination mutation perturb individuals providing general heuristics exploration 
simplistic biologist viewpoint algorithms sufficiently complex provide robust powerful adaptive search mechanisms 
outlines typical evolutionary algorithm ea 
population individual structures initialized evolved generation generation repeated applications evaluation selection recombination mutation 
population size generally constant evolutionary algorithm appear proceedings european conference machine learning 
author affiliated ai center naval research laboratory washington dc usa 
email address spears aic nrl navy mil procedure ea initialize population evaluate done parent selection recombine mutate evaluate survive fig 

typical evolutionary algorithm priori reason convenience assumption 
discuss issue dynamic population size 
evolutionary algorithm typically initializes population randomly domain specific knowledge bias search 
evaluation measures fitness individual worth environment 
evaluation may simple computing fitness function complex running elaborate simulation 
selection performed steps parent selection survival 
parent selection decides parents children parents 
children created recombination exchanges information parents mutation perturbs children 
children evaluated 
survival step decides survives population 
illustrate evolutionary algorithm simple example 
suppose automotive manufacturer wishes design new engine fuel system order maximize performance reliability gas mileage minimizing emissions 
suppose engine simulation unit test various engines return single value indicating fitness score engine 
number possible engines large insufficient time test 
attack problem evolutionary algorithm 
define individual represent specific engine 
example suppose cubic inch displacement cid fuel system number valves cylinders presence turbo charging engine variables 
initialization step create initial population possible engines 
sake simplicity assume small population size 
example initial population individual cid fuel system turbo valves cylinders barrels mech 
inject 
elect 
inject 
barrels evaluate individual engine simulator 
individual receives fitness score higher better individual cid fuel system turbo valves cylinders score barrels mech 
inject 
elect 
inject 
barrels parent selection decides children 
example decide individual deserves children better individuals 
children created recombination mutation 
mentioned recombination exchanges information individuals mutation perturbs individuals increasing diversity 
example recombination individuals produce children individual cid fuel system turbo valves cylinders elect 
inject 
barrels note children composed elements parents 
note number cylinders individuals cylinders 
mutation perturb children yielding individual cid fuel system turbo valves cylinders elect 
inject 
barrels evaluate children giving individual cid fuel system turbo valves cylinders score elect 
inject 
barrels decide survive 
constant population size example typical eas need select individuals survive 
accomplished varies considerably different eas 
example best individuals survive population individual cid fuel system turbo valves cylinders score elect 
inject 
barrels elect 
inject 
barrels cycle evaluation selection recombination mutation survival con termination criterion met 
simple example serves illustrate flavor evolutionary algorithm 
important point basic conceptual framework eas similar particular implementations differ details 
example wide variety selection mechanisms 
representations individuals ranges bit strings real valued vectors lisp expressions neural networks 
relative importance mutation crossover recombination particular implementations differs widely evolutionary algorithms 
remainder organized sections 
continue evolutionary algorithms describing high level variety implementations 
second discuss issues underlying differences implementations opportunity provide comparisons finer level detail 
discuss issues resolved summarize area 
goal encourage increased discussion eventual hope powerful robust evolutionary algo rithms 
varieties evolutionary algorithms origins evolutionary algorithms traced fraser box 
sake brevity concentrate early discuss detail methodologies emerged decades evolutionary programming fogel evolution strategies rechenberg genetic algorithms holland 
similar highest level varieties implements evolutionary algorithm different manner 
differences touch aspects evolutionary algorithms including choices representation individual structures types selection mechanism forms genetic operators measures performance 
highlight important differences similarities sections examining variety represented current family evolutionary algorithms 
approaches turn inspired development additional evolutionary algorithms classifier systems holland ls systems smith adaptive operator systems davis genitor whitley samuel grefenstette genetic programming de koza messy gas goldberg chc approach eshelman 
attempt survey broad range activities 
interested reader encouraged literature details belew booker fogel atmar whitley manderick 
evolutionary programming evolutionary programming ep developed fogel 
traditionally representations tailored problem domain 
example realvalued optimization problems individuals population real valued vectors 
similarly ordered lists traveling salesman problems graphs applications finite state machines 
ep optimizer arose desire generate machine intelligence 
outline evolutionary programming algorithm shown 
initialization individuals selected parents mutated procedure ep initialize population evaluate done parent selection mutate evaluate survive fig 

evolutionary programming algorithm producing children 
children evaluated survivors chosen individuals probabilistic function fitness 
words individuals greater fitness higher chance survival 
form mutation representation adaptive see section 
example real valued vector variable individual may adaptive mutation rate normally distributed zero expectation 
recombination generally performed forms mutation quite flexible produce perturbations similar recombination desired 
discussed section interesting open issues extent ea affected choice operators produce variability novelty evolving populations 
evolution strategies evolution strategies ess independently developed rechenberg selection mutation population size 
schwefel introduced recombination populations individual provided nice comparison ess traditional optimization techniques 
due initial interest hydrodynamic optimization problems evolution strategies typically real valued vector representations 
outlines typical evolution strategy es 
initialization evaluation individuals selected uniformly randomly parents 
standard es pairs parents produces children recombination perturbed mutation 
number children created greater survival deterministic implemented ways 
allows procedure es initialize population evaluate done parent selection recombine mutate evaluate survive fig 

evolution strategy algorithm best children survive replaces parents children 
second allows best children parents survive 
ep considerable effort focused adapting mutation algorithm runs allowing variable individual adaptive mutation rate normally distributed zero expectation 
ep recombination play important role evolution strategies especially adapting mutation 
genetic algorithms genetic algorithms gas developed holland traditionally domain independent representation bit strings 
applications gas focused representations graphs neural networks lisp expressions ordered lists real valued vectors 
outlines typical genetic algorithm ga 
initialization parents selected probabilistic function relative fitness 
words individuals higher relative fitness selected parents 
children created recombination parents 
children mutated survive replacing parents population 
interesting note relative emphasis mutation crossover opposite ep 
ga mutation flips bits small probability considered background operator 
recombination hand emphasized primary search operator 
gas optimizers researchers emphasize general adaptive capabilities de jong 
procedure ga initialize population evaluate done parent selection recombine mutate evaluate survive fig 

genetic algorithm variations themes approaches ep ess gas served inspire increasing amount research development new forms evolutionary algorithms specific problem solving contexts 
briefly described selected primarily give reader sense variety directions explored 
active areas application evolutionary algorithms solving complex function combinatorial optimization problems 
variety features typically added eas context improve speed precision results 
interested readers review davis real valued representations adaptive operators davis whitley genitor system incorporating ranking steady state mechanisms whitley goldberg messy gas involve adaptive representations goldberg eshelman high powered ci ic algorithm eshelman 
second active area application eas design robust rule learning systems 
holland classifier systems early examples followed ls systems smith 
examples include samuel system developed grefenstette system de jong spears gil system 
case significant adaptations basic eas order effectively represent evaluate evolve appropriate rule sets defined environment 
fascinating developments eas evolve complex structures neural networks lisp code 
dubbed genetic programming exemplified de dickinson koza 
de evolves weights neural networks attempt build complex behavior 
dickinson evolved lisp expressions solve prisoner dilemma 
koza represents individuals lisp expressions solved large number optimization machine learning tasks 
open questions precisely changes eas need order efficiently evolve complex structures 
issues previous section highlighted similarities differences various forms evolutionary algorithms 
differences arise number relevant issues 
section explore issues briefly take opportunity define algorithms greater detail 
scaling selection fitness central evolutionary algorithm concept fitness evaluation 
assume loss generality wish maximize fitness wish concentrate search areas higher fitness 
concentration effort commonly referred term exploitation task selection 
ea addresses issue different manner 
describe selection mechanisms important consider issue scaling 
suppose search spaces 
described real valued fitness function second search space described fitness function equivalent constant 
relative positions peaks valleys search spaces correspond exactly 
relative heights differ vertical scale different 
ea search spaces manner 
right wrong answer question really depends goals problems solved 
believe ea search spaces manner selection relative ordering fitnesses 
ess example precisely method 
parent selection performed uniformly randomly regard fitness 
survival simply saves best individuals relative ordering fitnesses 
form selection referred ranking selection rank individuals importance 
ep selection similar es algorithm 
individuals selected parents 
parent mutated producing children 
probabilistic ranking mechanism chooses best individuals survival union parents children 
selection mechanism rank 
ga community advocated ranking situations large members believe searched differently 
fitness proportional selection probabilistic selection mechanism traditional ga parent selection performed fit individual respect population average 
example individual fitness twice population average tend twice children average individuals 
survival fitness parents automatically replaced children 
problem approach search continues individuals receive fitnesses small relative differences 
lessens selection pressure slowing progress search 
effect referred lacking killer instinct compensated somewhat scaling mechanisms attempt magnify relative differences search progresses 
number scaling mechanisms exists description scope 
interested reader urged refer grefenstette baker investigation relationships fitness scaling selection 
mutation adaptation mentioned earlier selection serves focus search areas high fitness 
course selection genetic operator population individuals introduced initial population 
genetic operators perturb individuals providing exploration nearby areas 
number operators possible concentrate predominant operators mutation recombination 
importance mutation eas varies widely 
koza mutation 
gas typically mutation simple background operator ensure particular bit value lost forever 
previous example suppose member engine population cylinders 
mutation reintroduce cylinder engines 
recall gas traditionally bit strings 
conditions mutation gas typically flips bits low probability bit 
mutation far important ess ep 
global mutation rate mutation probability distributions maintained variable individual 
variable mutated different probability distribution 
importantly ess ep encode probability distributions extra information individual allow information evolve 
achieved self adaptation mutation parameters space searched 
full details scope 
interested reader encouraged read brick 
brick schwefel fogel 
recombination adaptation recombination predominant genetic operator 
recombination merges variables parents produce offspring variables parents 
mutation relative importance recombination various eas varies widely 
ep recombination 
koza uses recombination form new lisp expressions 
ess gas recombination mutation 
number recombination methods ess assume individuals com posed real valued variables 
values exchanged engine example averaged 
example cylinder parent recombine cylinder parent produce cylinder child 
es community considered multi parent versions operators 
es community places emphasis mutation adaptively modify crossover feel crossover essential proper adaptation mutation parameters 
ga community places primary emphasis crossover number recombination operators widely 
sake brevity discuss popular point multi point uniform recombination 
point recombination inserts cut point parents rd th variables bits 
information cut point swapped parents 
multi point recombination generalization idea introducing higher number cut points 
information swapped pairs cut points 
uniform crossover cut points simply uses global parameter indicate likelihood variable exchanged parents 
considerable experimental theoretical investigated differences forms recombination 
spears de jong booker vose liepins provide theoretical comparisons 
despite emphasis recombination ga community interest mutation increased partly due influence es ep communities 
schaffer eshelman experimentally shown mutation powerful search operator right maintaining usefulness crossover certain situations 
spears agrees view theoretically shown strengths weakness mutation recombination 
important realize recombination mutation provide different search biases may may appropriate task hand 
priori appropriateness may hard determine key robust ea systems probably lies adaptive selection genetic operators 
unfortunately little done way adaptive recombination 
schaffer experimented punctuation marks indicate may exist 
davis experimented adapting rate recombination applied performance feedback 
spears shown feasible ga choose forms recombination 
clearly area research 
representation course genetic operator mutation recombination defined particular individual representation mind 
ea community differs widely representations 
traditionally gas bit strings 
theory representation ga problem independent bit string representation standard bit level mutation recombination 
see genotypic level representation individual sense encoded bit string 
ga community investigated phenotypic representations including vectors real values davis ordered lists whitley neural networks harp lisp expressions koza 
representations special mutation recombination operators introduced 
ep es communities similar regard 
es ep communities focus real valued vector representations ep community ordered list finite state automata representations suggested domain problem 
done experimentally little said theoretically helps choose representations explains means representation 
little done way adaptive representations exception messy gas goldberg dynamic parameter encoding dpe scheme schraudolph belew delta coding whitley 

messy gas dpe delta coding attempt manipulate granularity representation focusing search appropriate level 
despite initial success area clear needs done 
adaptive eas despite adapting representation mutation recombination evolutionary algorithms little accomplished respect adaptation population sizes selection mechanisms 
way characterize selection strength selection mechanism 
strong selection refers selection mechanism concentrates quickly best individuals weaker selection mechanisms allow poor individuals survive produce children longer period time 
similarly population thought having certain carrying capacity refers amount information population usefully maintain 
small population carrying capacity usually adequate simple problems 
larger populations larger carrying capacities better difficult problems 
attempted characterize population sizes goldberg theory needed 
lieu theory evolutionary algorithm adapt selection pressure population size dynamically solves problems 
performance measures ea hardness evolvability course refer adaptation having performance goal mind 
ep es usually optimization goal 
words typically interested finding best solution quickly possible 
ga community taken similar stance concern stance somewhat misleading 
de jong reminds gas function optimizers se 
little theory indicating gas perform optimization tasks 
theory concentrates referred accumulated payoff 
difference illustrated considering financial investment planning period time play stock market 
trying find best stock trying maximize returns various stocks sampled 
clearly goals somewhat different maximizing return may may heuristic finding best stock 
difference emphasis clearly implications ea practitioner measure performance implications adaptation accomplished 
difference colors discussion concerning issue problem difficulty 
ga community refers hard problems ga hard 
broader context eas refer hard problems ea hard 
problem considered difficult ea find optimum 
quite reasonable definition difficult problems constructed advantage ea way selection deliberately leads search away optimum 
problems called deceptive goldberg 
function optimization point view problem deceptive 
ea may maximize accumulated payoff 
call deceptive problem ea hard 
answer obviously depends goals 
clear problem difficulty function problem goal algorithm solve problem 
possibility measures problem difficulty needed possibility correlation appears measure ea hardness places emphasis optimality manderick 
fitness correlation measures correlation fitness children parents 
manderick strong relationship ga performance strength correlations 
similarly proposed examining fitness correlations 
possibility problem modality 
problems suboptimal solutions general difficult search 
issue related concern de refers evolvability 
de notes systems evolve fitness increase time 
reasons clear remain important research topic 
distributed eas inherent natural parallelism ea concentrated implementation eas parallel machines 
typically processor holds individual simd machines subpopulation mimd machines 
clearly implementations hold promise execution time decreases 
interestingly topic evolutionary effects naturally illustrated parallel machines speciation punctuated equilibria 
belew booker contain examples current area 
current trends better understanding similarities differences various implementations eas community begun concentrate generalizing results initially shown specific eas 
example grefenstette baker illustrate features eas change certain properties selection scaling assumed 
indicate features change properties met 
preliminary helps explain wide variety eas met success 
investigating differences gas ess attempting merge best features order robust ea 
analysis deception see grefenstette 
understand better strengths weaknesses current evolutionary models important revisit biological evolutionary literature new insights inspirations enhancements 
booker pointed connections ga recombination theory general theory population genetics recombination distributions 
concentrated eas modeled breeding practices 
ep community atmar highlights errors common evolutionary theory ea community 
summary attempted provide brief overview field evolutionary computation describing classes evolutionary algorithms served define shape field 
highlighting similarities differences identified number important issues suggest directions research 
rapid growth field particularly pressing need extend existing developing new analysis tools allow better understand evaluate emerging varieties eas applications 
hope serve catalyst activities 
affiliations william spears affiliated naval research laboratory usa kenneth de jong george mason university usa thomas university dortmund germany david fogel usa hugo de atr laboratory japan 
atmar 
philosophical errors plague evolutionary theory simulated evolutionary programming 
proceedings annual conference evolutionary programming 
san diego ca evolutionary programming society 
schwefel 
survey evolution strategies 
proceedings fourth international conference genetic algorithms 
la jolla ca morgan kaufmann 
schwefel 
overview evolutionary algorithms parameter optimization 
submitted journal evolutionary computa tion 
belew booker 
eds 
proceedings fourth international conference genetic algorithms 
la jolla ca morgan kaufmann 
booker 
recombination distributions genetic algorithms 
proceedings foundations genetic algorithms workshop 
vail morgan kaufmann 
box 
evolutionary operation method increasing industrial productivity 
applied statistics vol 

davis 
adapting operator probabilities genetic algorithms 
proceedings third international conference genetic algorithms 
la jolla ca morgan kaufmann 
de 
genetic programming modular evolution darwin machines 
proceedings international joint conference neural networks 
washington dc lawrence erlbaum 
de jong 
analysis behavior class genetic adaptive systems 
doctoral thesis department computer communication sciences 
university michigan ann arbor 
de jong spears 
learning concept classification rules genetic algorithms 
proceedings twelfth international joint conference artificial intelligence 
sydney australia morgan kaufmann 
de jong 
genetic algorithms function optimizers 
proceedings second international conference parallel problem solving nature 
eshelman schaffer 
preventing premature convergence genetic algorithms preventing 
proceedings fourth international conference genetic algorithms 
la jolla ca morgan mann 
fogel owens walsh 
artificial intelligence simulated evolution 
new york wiley publishing 
fogel 
analysis evolutionary programming 
proceedings annual conference evolutionary programming 
la jolla ca evolutionary programming society 
fogel atmar 
eds 
proceedings annual conference evolutionary programming 
la jolla ca evolutionary programming society fraser 
simulation genetic systems automatic digital computers 
australian journal biological science 
dickinson 
genetic algorithm generate lisp source code solve prisoner dilemma 
proceedings second international conference genetic algorithms 
cambridge ma lawrence erlbaum 
goldberg 
sizing populations serial parallel genetic algorithms 
proceedings third international conference genetic algorithms 
fairfax va morgan kaufmann 
goldberg 
genetic algorithms search optimization machine learning 
reading ma addison wesley 
goldberg deb korb 
don worry messy 
proceedings fourth international conference genetic algorithms 
la jolla ca morgan kaufmann 
grefenstette baker 
genetic algorithms critical look implicit parallelism 
proceedings third international conference genetic algorithms 
fairfax va morgan kaufmann 
grefenstette john 
system learning control strategies genetic algorithms 
proceedings third international conference genetic algorithms 
fairfax va morgan kaufmann 
grefenstette 
deception considered harmful 
proceedings foundations genetic algorithms workshop 
vail morgan kaufmann 
harp samad guha 
genetic synthesis neural networks 
proceedings fourth international conference genetic algorithms 
la jolla ca morgan kaufmann 
holland 
adaptation natural artificial systems 
ann arbor michigan university michigan press 
holland 
escaping brittleness possibilities general purpose learning algorithms applied parallel rule systems 
michalski carbonell mitchell eds machine learning artificial intelligence approach 
los altos morgan kaufmann 

inductive learning decision rules attribute examples knowledge intensive genetic algorithm approach 
tr university north carolina chapel hill dept computer science chapel hill nc 
koza 
evolving computer program generate random numbers genetic programming paradigm 
proceedings fourth international conference genetic algorithms 
la jolla ca morgan kaufmann 

adaptation rugged landscapes generated iterated local interactions neighboring genes 
proceedings fourth international conference genetic algorithms 
la jolla ca morgan kaufmann 
manderick de 
genetic algorithm structure fitness landscape 
proceedings fourth international conference genetic algorithms 
la jolla ca morgan kaufmann 
manderick 
proceedings second international conference parallel problem solving nature amsterdam north hol land 
schlierkamp voosen 
distributed breeder genetic algorithm 
submitted journal evolutionary computation 
rechenberg 
evolutionsstrategie optimierung technischer systeme nach prinzipien der biologischen evolution 
frommann holzboog stuttgart 
schaffer eshelman 
crossover evolutionarily viable strategy 
proceedings fourth international conference genetic algorithms 
la jolla ca morgan kaufmann 
schaffer 
adaptive crossover distribution mechanisms genetic algorithms 
proceedings second international conference genetic algorithms 
cambridge ma lawrence erlbaum 
schraudolph belew 
dynamic parameter encoding genetic algorithms 
machine learning journal volume number 
schwefel 
numerical optimization computer models 
new york john wiley sons 

strategy adaptive representation genetic optimizer technique 
proceedings second international conference genetic algorithms 
cambridge ma lawrence erlbaum 
smith 
flexible learning problem solving heuristics adaptive search 
proceedings eighth international joint conference artificial intelligence 
germany william kaufmann 
spears de jong virtues uniform crossover 
proceedings fourth international conference genetic algorithms 
la jolla ca morgan kaufmann 
spears 
crossover mutation 
proceedings foundations genetic algorithms workshop vail colorado morgan kaufmann 
spears 
adapting crossover genetic algorithm 
naval research laboratory ai center report aic 
washington dc usa 
vose liepins 
schema disruption 
proceedings fourth international conference genetic algorithms 
la jolla ca morgan kaufmann 
whitley 
genitor algorithm selection pressure rank allocation reproductive trials best 
proceedings third international conference genetic algorithms 
fairfax va morgan kaufmann 
whitley starkweather 
scheduling problems traveling salesmen genetic edge recombination operator 
proceedings third international conference genetic algorithms 
fairfax va morgan kaufmann 
whitley mathias 
delta coding iterative search strategy genetic algorithms 
proceedings fourth international conference genetic algorithms 
la jolla ca morgan kaufmann 
whitley 
ed 
proceedings foundations genetic algorithms workshop 
vail morgan kaufmann 
