willow architecture comprehensive survivability large scale distributed applications john knight dennis heimbigner alexander wolf antonio carzaniga jonathan hill devanbu michael gertz dept computer science university virginia charlottesville va usa knight cs virginia edu dept computer science university california davis ca usa gertz devanbu cs ucdavis edu dept computer science university colorado boulder usa dennis alw cs colorado edu university colorado department computer science technical report cu cs december john knight dennis heimbigner alexander wolf antonio carzaniga jonathan hill devanbu michael gertz willow architecture comprehensive approach survivability critical distributed applications 
survivability achieved deployed system unique combination fault avoidance disabling vulnerable network elements intentionally threat detected predicted fault elimination replacing system software elements faults discovered fault tolerance reconfiguring system non damage occurs 
key architecture powerful reconfiguration mechanism combined general control structure network state sensed analyzed required changes effected 
architecture deploy software functionality enhancements survivability 
novel aspects include node configuration control mechanisms workflow system resolving conflicting configurations communications wide area event notification tolerance wide area hierarchic sequential faults secure scalable trust models 

society increasingly dependent continuous proper functioning large scale heterogeneous distributed information systems 
systems formed large numbers components hardware software originating multiple sources assembled complex evolving structures spread wide geographic areas 
goal develop techniques help prevent disruptions ensure systems continue provide acceptable necessarily complete levels service survive face serious disruptions normal operation 
main features willow architecture architecture provides comprehensive architectural approach survivability critical distributed applications 
important contribution architecture merging major approaches dealing faults single system 
summarizes architecture details available cited papers 
willow architecture notion survivability distributed application requires broad approach dealing faults application approach includes fault avoidance fault elimination fault tolerance 
includes mechanisms avoid faults systems time initial deployment subsequent enhancement eliminate remove faults deployed application identified merely suspected cause failure tolerate effects faults operation 
various mechanisms general notion reconfiguration system application levels framework implements monitor analyze respond approach identification treatment faults 
experience shown serious faults introduced system deployment enhancement 
example software components distributed default passwords set wrong software version deployed corrective patches applied 
prevention repair faults reason fault avoidance fault elimination needed 
novel special case fault elimination occurs circumstances fault suspected diagnosed 
cases desirable component fault removed system circumstances indicate fault manifested 
example consider worm attacks servers vulnerable worms past 
possibility servers vulnerable new worm detected rapidly disconnecting servers suspect class network worm eliminated prudent precaution 
case fault suspected eliminated temporarily period fault eliminated functionality probably changed 
particular form fault elimination referred 
fault avoidance fault elimination fault tolerance related different concepts approach dealing faults provided willow 
implementations share number architectural elements common architectural theme reconfiguration 
despite designed deal faults entirely compatible actions taken conflict actions taken 
example fault widespread power failure occurs activity underway eliminate fault replacing software components necessary reconfigure system deal power loss higher priority ongoing software replacement 
willow architecture contains mechanisms deal conflicts 
security willow architecture data sources paramount importance compromised intruder immense damage 
various techniques developed support willow architecture described 
organized follows 
section characteristics applications interest discussed notion survivability reviewed 
special characteristics faults concerned summarized section section concepts willow architecture 
detailed discussion architecture section evaluation section 
review related briefly section section 
critical distributed applications survivability distributed information systems concerned arise context nation critical infrastructures 
transportation telecommunications power distribution financial services examples services essential normal activities society 
similarly systems defense department global command control system essential nation defense operations 
system service provides lost quickly certain faults arise information system 
societal dependence critical infrastructures considerable substantial concern dependability underlying information systems expressed particularly security 
critical information systems typically networks large numbers heterogeneous nodes distributed wide geographic areas 
usually case systems employ commodity hardware cots legacy software 
networks private implement point point connectivity full connectivity internet required associated applications 
structure different numbers different types node different types node provide different functionality 
nodes provide functionality far critical leading situation vulnerabilities information system tend associated critical nodes 
important architectural characteristic critical information systems provision service user frequently involves nodes operating sequence supplying part functionality 
composition function seen easily processing checks nation financial payment system transfer funds account involves user specific actions local banks transaction routing regional banks bulk funds transfer central banks complex signaling coordination assures fiscal integrity 
willow architecture designed enhance survivability critical information systems 
information system survivability defined detail merely review meaning term 
informally concept information system provide complete functionality possibly pre specified fraction time system meet pre defined reduced different requirements provide full functionality failures including security attacks sets different requirements stated permit useful limited functionality specified accommodate different degrees damage 
failures inevitable essential attention paid failures handled particular systems users served times 
note survivability different name existing term graceful degradation 
essential distinctions possibility different merely reduced functionality precise statement different functionalities user defined requirements 

types fault non local faults traditional fault avoidance fault elimination techniques programming languages strong type checking systematic inspection development individual components critical information systems 
similarly effect component node level fault tolerance designers employ traditional techniques modular redundancy processing communications data storage power supplies 
techniques cope wide variety faults research concerned faults affect single hardware software component complete application node 
refer faults local important assume local faults dealt extent possible existing techniques 
concerned need deal faults affect significant fractions network faults refer non local 
examples non local faults nodes having software components lacking essential security patches defective virus databases improperly configured operating systems extensive loss hardware widespread power failure failure application program coordinated security attacks forth 
non local faults difficult deal local faults obvious reasons 
complex faults critical information systems non local faults small part problem 
scale modern critical applications raises additional issues fault sequences necessary deal fault sequences new faults arising earlier faults dealt 
reason serious complication responses faults cases determined application state time fault manifested 
fault hierarchies non local fault dealt appropriately 
effects fault detected situation deteriorate information obtained leading subsequent diag serious fault requiring extensive action 
suggests notion fault hierar chy approach fault elimination fault tolerance take account 
interdependent application faults critical infrastructure applications depend 
example nation financial system depends commercial electric sources commercial telecommunications facilities 
faults resulting losses service electrical network cause losses financial ser vices electric supply interrupted protracted periods wrong financial system 

willow concepts approach dealing complex non local faults extended form particular system architecture referred survivability architecture information survivability control system 
survivability architecture characterised having basic structure control loop operates system execution monitor system analyze effect form response analysis reveals problem 
monitor analyze respond structure basis network intrusion detection systems example 
willow architecture generalizes control concept includes multiple inter operating separate loops 
addition execution critical application state operating environment monitored state application resulting integrated set state information analyzed 
necessary changes critical application system effected required 
environmental information intelligence monitor monitor monitor willow survivability architecture concept case willow architecture notions applied general sense 
application system state example includes detailed software configurations various nodes 
state operating environment includes intelligence information security threats details new releases software components system 
necessary changes include correcting defective operating system application configurations 
changes critical application system include software updates transparent system user modifications system functionality transparent 
functionality changes include reducing services initiating application services normally available basic emergency services 
monitoring change carried sensing software resides network elements interest 
analysis performed servers part application network communication monitored nodes servers independent communications channels 
willow architecture concept including multiple instances basic control loop illustrated 
necessary changes critical application effected reconfiguration 
willow analyze critical infrastructure application trust information respond respond respond architecture supports reconfiguration broad sense reconfiguration context refers scenario outside ongoing steady state operation 
example initial system deployment included intentionally definition system enhancements upgrades recovery hardware failure 
viewed merely special cases general notion reconfiguration 
refer reconfiguration effected system sustained damage proactive system sustained damage reactive 
proactive reconfiguration adds removes replaces components interconnections changes mode operation 
complementary fashion reactive reconfiguration adds removes replaces components interconnections restore integrity system bounded time damage intrusions taken place 
examples specific system reconfigurations supported willow application operating system updates including component replacement re parameterization 
initial application system deployment treated special case 
planned posture changes response anticipated threats 
planned fault tolerance response anticipated component failures 
systematic best efforts deal unanticipated failures 
reconfiguration means security attack input willow decision making process managed comprehensive trust mechanism 
addition extensive protection elements willow architecture 
willow concept derives realization system application configuration control application fault tolerance different aspects general problem control distributed systems 
utilize specialized knowledge applications resources available application state prepare react changing conditions distributed applications 
difference lies time frames aspects operate mechanisms detect respond circumstances needing action 
application fault tolerance time bounded needing prescribed responses anticipated faults 
software configuration management involves run time analysis application state determine necessary basic actions series prescribed facts newly available application elements new software versions operating system conditions willow system application system sensors intelligence input trust mediator application software legend admin workbench analysis analysis 
willow architecture control loops field dock willow communications substrate siena application specific communications workflow manager resource manager willow specific communications willow architecture showing major components execution time event communications major components major forms communication willow architecture illustrated 
top part shows majority willow system lower part shows distributed application willow supporting 
distributed application operates traditional network computation communication requirements met unspecified assumed large set nodes appropriate communications links 
willow system operates example separate network details network depend computational communication needs specific willow system application 
order hundreds thousands sensors application software field dock sensors application software field dock software depots trust mediator fundamental structure willow architecture set control loops sensing diagnosis synthesis coordination actuation components depicted 
control loops shared sensing capability shown application nodes 
sensors include reports applications application heartbeat monitors intrusion detection alarms means measuring actual application properties 
sensing events independent diagnosis synthesis components build models application state determine required application state changes 
current willow architecture components administrator workbench proactive reconfiguration reactive reconfiguration 
additional diagnosis synthesis components added easily illustrated analysis component 
synthesis components issue intended application changes workflow requests 
coordinated workflow resource managers ensure changes occur correctly smoothly application 
workflows allowed activate workflow events received field located application nodes result local system state changes 
field dock infrastructure provides single standard interface universal actuation application nodes 
actuation completes control loop cycle 
proactive control proactive controller administrative workbench interactive application allowing system administrators monitor system conditions remotely adjust system properties importantly cause propagation implementation proactive reconfigurations 
software depot represents external source information may required willow order complete reconfigurations 
general depots 
information may include models new applications components needed new configuration available locally affected application node components provide additional actuators example access built reconfiguration capabilities specific applications 
reactive control reactive controller known fully automatic structure organized set finite state machines 
detection erroneous state associated fault error detection carried state machine erroneous state just application system state interest 
effects fault manifest state changes 
changes input state machine form events state machine signals error enters state designated erroneous 
various states interest described predicates sets define part state 
general form specification erroneous state collection set definitions identify application objects concern predicates sets describe various states action needs taken lead states action needs taken 
operating application events occurring level individual application nodes recognized finite state machine amounts lowest level system 
adequate example fault wide area power failure 
dealing fault require action number affected nodes threshold 
threshold require certain critical application nodes respond limiting activities 
node power failures reported predefined set say nodes power modified cardinality passes threshold recognizer moves error state 
notion fault hierarchy requires complex fault circumstances recognized 
set nodes losing power west fault set losing power east second occurring close temporal proximity defined separate third fault significance indicate coordinated terrorist attack 
idea dealt hierarchy finite state machines 
compound events passed hierarchy collection local events recognized regional level regional event regional events passed recognize national events 
example widespread coordinated security attack defined attack short period time collections nodes separate administrative domain 
detection situation requires individual nodes recognize circumstances attack groups nodes collect events multiple low level nodes recognize wide area problem variety wide area problems simultaneity recognized coordinated attack 
dealing conflicting goals operation distributed application willow system reconfiguration initiated avoid fault eliminate fault classical reconfiguration set software component updated way correct problem tolerate fault physical damage security attack 
multiple sources initiation reconfiguration asynchronous 
clearly means initiated time case suspended determination interfere 
worse prospect new occur initiated reconfigurations underway 
reconfigurations important tolerating security attack detected example important eliminating minor fault piece application software reconfigurations underway suspended reversed 
sort comprehensive control exercised system quickly degenerate inconsistent state 
approach source determination 
complexity approach infeasible 
implementation cope fly determination state initiation asynchronous determination require resource locking network 
approach taken route requests reconfiguration resource manager priority enforcer called andrea 
prototype andrea implementation uses predefined prioritization reconfiguration requests dynamic resource management determine appropriate execution order reconfiguration requests distributed workflow model represent reconfiguration requests 
workflow model formally represents intentions reconfiguration request temporal ordering required operation resource usage 
combined specified resource model information input distributed scheduling algorithm produces executes partial order reconfiguration tasks network 
scheduling andrea preemptive allowing incoming tasks resources necessary important activities override important ones 
transactional semantics allow preempted failed activities support rollback failure depending capabilities actuators enacting reconfiguration 
andrea supports event driven interface adaptive systems easily interface observe willow reconfiguration protocol 
current andrea system demonstrates formal specification complex reconfiguration tasks multiple nodes distributed application system 
redundant application complex management tasks completely automated 
multiple administrators automated controllers engage proactive reactive management system resource conflicts potential interrupting important tasks initiated controller 
controller initiates high priority task guaranteed receive resources bounded time actuators current tasks compliant interruptible transaction semantics 
general current andrea system demonstrates asynchronous parallel control loops interact enhance degrade survivability application system 
communication communication challenges willow architecture considerable sensor information transmitted nodes analysis components control loops reconfiguration commands transmitted analysis components nodes replacement software components transmitted software depots 
significant challenge fact targets willow architecture large networks networks nodes 
approach communication willow takes reduce communication possible event notification highly efficient wide area event notification service communications substrate 
specific event notification service willow uses siena :10.1.1.100.2117
siena uses broad range techniques maximize efficiency communication service including high level router structure link various servers routing single copy notification far possible replicating necessary 
siena avoids explicitely solution central database approach scale degree willow requires severely limit applicability 
major communication service reduced event notification transmission files associated software bulk data distribution 
handled events define initiated file transfers allowing actual transfers software depots take place network communications services 
security pervasive notion control architecture risk adversary exploit willow infra structure distributed application 
defensive measures willow architecture deal major concerns 
securing mechanisms architecture second ensuring information system current accurate intact 
defend types adversaries seek directly subvert control mechanisms try indirectly tampering data control mechanisms 
securing mechanisms architecture breaks technical problems protecting willow servers conduct analysis 
protecting sensors actuators reside application nodes 
protecting communication various willow components 
problems solved conventional techniques physical security personnel authentication passwords bio metrics cryptography 
second problem harder solve 
sensors actuators operate large heterogeneous collection nodes located variety administrative domains 
require trusted components sensors actuators operate correctly continuously untrustworthy hosts application nodes 
sensor code tampered replaced example adversary arrange transmission erroneous data analysis force malicious control actions 
protecting trusted components achieved combination approaches 
possibility adversary understanding software analyzing binary statically reduced code obfuscation 
tamper resistance improved randomization observable behavior software employing temporal spatial diversity trusted code 
temporal diversity mean intentional replacement software periodic interval new version different observable behavior 
randomization technique produce various versions software trusted components know randomization 
spatial diversity mean intentionally diverse versions software functionality nominally identical sensors example system 
production diverse versions achieved specially modified compilers generate necessary diversity 
third problem list securing communication various willow compo nents solved partially encryption new challenge raised willow architecture securing publish subscribe communication service underlies infrastructure :10.1.1.100.2117
willow wide area publish subscribe service handle information dissemination distinct authoritative domains heterogeneous platforms large dynamic population publishers subscribers 
environment raises serious security concerns 
general security needs client publish subscribe service include confidentiality integrity availability security concerns publish subscribe infrastructure focus primarily system integrity availability 
detailed discussion aspects problem solved available separate publication 
second broad category security issues security services allow latest accurate trusted information effected secure mediator infrastructure smi 
design goals smi 
administrators precisely control coordinate data obtained centralized trust broker gathers meta data trustworthiness data sources 
second smi allows authentic data distribution line signing keys 
hashing primitives validate distributed data data signed infrequently line keys 
avoiding line keys stolen attacker enhance security reduce administrative burden 
data mediation allows translation data different sources selection data sources different criteria trust meta data smi design provides delegation separation concerns willow infrastructure obtain best information widest possible set sources security low administrative overhead 

evaluation willow architecture designed provide sophisticated service critical applications operating large complex networks 
evaluating architecture difficult scales parameters involved 
typically numbers nodes network large node types functions provided application sophisticated number users system large data maintained databases generally extensive 
ideally experimental evaluation willow architecture conducted full scale implementation supporting representative applications system characteristics just noted 
clearly infeasible approach taken 
approach evaluation parts 
part major elements architecture studied individually combination analysis small scale implementation simulation 
second part laboratory scale willow system developed case study evaluate feasibility 
section summarize briefly various evaluation efforts major elements review laboratory scale case study 
evaluation status components reconfiguration component willow architecture derived software dock system 
prototype software dock implemented part previous research project performance evaluated 
proactive control component administrator workbench developed layer top existing software dock 
connects internal event communication mechanism software dock provide network level control field 
operation directly tied software dock expect software dock performance carries workbench 
reactive reconfiguration mechanism evaluated models critical infrastructure applications 
model nation financial system second nation electric power grid 
cases models built implemented versions application including essential functionality complete implementation error detection error recovery mechanisms 
models realistic size involving thousands application nodes 
models executed network simulation system faults injected 
details results mechanism modified operate willow system provide desired fault tolerance capability 
andrea workflow system major component willow architecture evaluated easily outside context full scale implementation 
performance real time important aspect evaluation difficult measure depends elements complete implementation 
informal assessment performance current implementation completed significant reached presently designed andrea system suited scaling large networks workflow specifications location transparent 
generation andrea system currently implemented allow scaling compact workflow specifications networks larger scale allow run time multicast binding workflow commands actuation sites requiring explicit location specification 
aspects siena wide area event notification system studied 
prototype implementation built number trials downloaded implementation 
addition carried extensive simulation studies assess system performs terms scale detailed reports assessments reported carzaniga :10.1.1.100.2117
conclude studies anticipated workload imposed siena expected operating circumstances production willow implementation capacity provided required time bounds response dictated application scope system 
case study prototype willow system developed implements different aspects architecture mentioned certain aspects security mechanism 
system includes workbench error detection mechanism communications infrastructure siena publish subscribe system 
application chosen simple prototype implementation air force joint infosphere jbi concept 
instantiations jbi concept fully developed provide advanced information systems military 
heart jbi concept notion publish subscribe semantics different military information sources publish data network interested information subscribe parts wish see 
expectation large military information published jbi large numbers consumers commanders levels tailor information receive subscribing appropriately 
jbi implementation siena study implementation uses entirely separate publish subscribe systems provides willow architecture essential communication second implements core functionality jbi 
production jbi system require proper initial deployment configuration maintenance software elements updated quickly efficiently defects system observed 
addition jbi attractive target adversary reasons 
system attacked various ways hackers disabled battle damage physical terrorism software faults 
essential jbi survivable willow architecture candidate implementation platform 
siena jbi implementation includes information processing modules known synthetic publishers subscribers 
components system enhanced allow respond appropriately actions 
addition different elements implementation extended deliberately vulnerabilities permit demonstration evaluation reconfiguration capabilities willow 
operating willow architecture jbi implementation subjected preliminary evaluation fault injection 
initial deployment system test network entirely automatic system shown adopt new postures operator control desired 
system shown reconfigure automatically network faults injected 

related component technologies willow architecture subject research research conducted goal integrating components provide comprehensive approach dealing faults 
software deployment configuration management studied numerous researchers 
detailed information related technologies hall 
system level approaches fault tolerance described authors 
efforts significant right address non local faults tend address systems large complex critical informations systems 
reconfiguration studied systems conic darwin 
studied types reconfiguration possible applications requirements supporting reconfiguration 
details related event notification services carzaniga :10.1.1.100.2117

summarized major elements willow architecture 
architecture designed improve survivability critical distributed information systems providing range mechanisms deal faults 
unique contribution architecture combination fault avoidance fault elimination fault tolerance integrated system 
benefits approach include assurance certain types fault certain types removed properly certain types faults tolerated execution activities properly coordinated system 
cases way faults handled require intentional changes service supplied system users changes part notion survivability 
damage large distributed applications experience anticipate experience frequently permit complete functionality maintained 
essential dealing faults provision different functionalities 
willow architecture evaluated part research typical large scale production environment environments studied typical laboratory context 
development analysis different components willow carried separately analysis carried analytically small scale implementations simulation 
laboratory scale willow system developed case study 
results todate indicate willow architecture perform entirely satisfactorily production implementation 

supported part defense advanced research projects agency air force research laboratory 
views contained document authors interpreted necessarily representing official policies endorsements expressed implied darpa air force government 

alvisi marzullo 
support fault tolerance wide area object oriented systems proceedings nd information survivability workshop ieee computer society press los alamitos ca october pp 

bhatti schlichting chiu 
coyote system constructing fine grain configurable communication services acm transactions computer systems vol 
november pp 

birman process group approach reliable distributed computing communications acm vol 
december pp 

carzaniga rosenblum wolf design evaluation wide area event notification service acm transactions computer systems aug :10.1.1.100.2117
devanbu gertz martel stubblebine authentic third party data publication proceedings fourteenth ifip working conference database security august 
elder fault tolerance critical information systems ph dissertation department computer science university virginia may 
hall agent software configuration deployment university colorado ph thesis april 
hall heimbigner van der hoek wolf 
architecture post development configuration management wide area network proceedings international conference distributed computing systems pages 
ieee computer soci may 
hall heimbigner wolf evaluating software deployment languages schema proceedings international conference software maintenance pages 
ieee computer society november 
hall heimbigner wolf 
cooperative approach support software deployment software dock proceedings international conference software engineering pages 
association computer machinery may 
white 
surgeon dynamically reconfigurable distributed applications software engineering journal vol 
march pp 

knight elder fault tolerant distributed information systems international symposium software reliability engineering hong kong november 
knight elder flinn marx 
summaries critical infrastructure systems technical report cs department computer science university virginia november 
knight sullivan definition survivability university virginia department computer science technical report cs tr 
magee dulay eisenbach kramer 
specifying distributed software architectures lecture notes computer science vol 
september pp 

magee kramer 
darwin architectural description language www dse doc ic ac uk research darwin darwin html 
office defense acquisition technology 
report defense science board task force information warfare defense iw november 
porras neumann emerald event monitoring enabling responses anomalous live disturbances proceedings th national information systems security conference october 
president commission critical infrastructure protection 
critical foundations protecting america infrastructures report president commission critical infrastructure protection united states government printing office gpo october 
sullivan knight du geist 
information survivability control systems proceedings st international conference software engineering ieee computer society press los alamitos ca may pp 

summers payment system design management supervision international monetary fund washington dc 
united states air force joint infosphere home page www rl af mil programs jbi default cfm wang carzaniga evans wolf security issues requirements internet scale publish subscribe systems proceedings hawaii international conference system sciences hicss big island hawaii jan 
wang davidson hill knight protection software survivability mechanisms international conference dependable systems networks goteborg sweden july 
