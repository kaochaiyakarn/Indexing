june non commutativity mell calculus structures alessio guglielmi lutz stra burger technische universit dresden fakult informatik dresden germany alessio guglielmi inf tu dresden de lutz inf tu dresden de introduce calculus structures general sequent calculus allows cut elimination subformula property 
show simple extension multiplicative linear logic self dual noncommutative operator inspired ccs expressible sequent calculus 
show multiplicative exponential linear logic benefits presentation inthe calculus structures especially replace ordinary global promotion rule local version 
formal systems prove outline range techniques properties previously available 
contrarily happens sequent calculus cut elimination proof modular 
sequent calculus appropriate classical logic problems dealing refined logics linear logic 
observing certain logical relations impossible 
show calculus called calculus structures overcome difficulties 
call calculus natural deduction sequent calculus specifying logical systems 
say formal system indicate collection inference rules calculus 
composition instances inference rules proof derivation free hypotheses 
tree occurs premise rules 
branches statements proofs exist premises 
meta level say left branch proof right branch proof 
classical logic corresponds object level 
case logics linear logic 
founding property sequent calculus pivotal le main connectives 
main connective rule gives meaning saying provable subformulae obtained removing connective turn provable 
properties remarkable success making study systems independent semantics important semantics incomplete missing development happens computer science 
problem sequent calculus unnecessarily rigid logics 
relax branching premise trees abandon decomposing main connective formulae 
question keeping properties cut elimination especially 
calculus structures draws simple principle dangerous realised care 
inference rules kind premise structures formulae subject certain equivalences guglielmi stra burger associativity commutativity units 
structure structure context filled structure specifies structure matches specified context vice versa reasons top 
rule corresponds implementing formal system axiom stands implication model system 
danger lies words axiom 
fact rules axioms generic hilbert system special structural relation proof theoretical properties lost 
challenge design inference rules way conservative elimination possess subformula property 
liberal overcome problems rigidity mentioned 
important note calculus structures general sequent calculus logics de morgan rules 
system admits sided presentation ported trivially calculus structures 
wewant new expressive capabilities get new logics old logics better 
things paying big price 
rules come pairs version version negation stands context 
duality derives duality dispose rules affecting provability equivalent statements logics 
cut rule splits rules modular decomposition cut elimination argument get rid rules 
main achievements girard deems lack modularity sequent calculus 
derivations calculus structures chains instances rules 
contrarily happens sequent calculus derivations trees derivations top symmetry 
allows new manipulations derivations 
example permuting certain rules cut easier sequent calculus entire derivations may flipped upside negated valid derivations 
important consequence new symmetry cut rule top symmetric identity rule disjunction conjunctive disjunctive units 
possible reduce cut rule atomic variant just required atoms systems sequent calculus 
reduction cut atomic form simplifies cut elimination argument interaction cut principal formula structure proof 
believe development calculus driven systems 
develop systems inside calculus structures 
sect 
basic system 
linear logic plus mix extended anon commutative self dual operator 
system bv motivated desire grasp sequential operator ccs logical system especially proof search perspective 
logic obtained non commutativity mell calculus structures expressible sequent calculus certainly simple way calculus straightforward 
system bv just crucial step logical system encompassing languages distributed computation 
methodology designing systems induced calculus structures outlined section 
start simple observation 
basic reaction ccs parallel processes communicate rewrite empty process 
naturally corresponds identity axiom logic express complementation ccs negation parallel composition corresponds disjunction linear logic multiplicative disjunction corresponds remarkably see example 
consider sequential composition process dual process 


need self dual non commutative logical operator modelling sequential composition 
committing ccs just observe witnessed ccs way seeing parallel sequential compositions logical system 
sect 
system els multiplicative exponential linear logic calculus structures shown 
reason study system equivalent sequent calculus mell calculus performs system studied 
get surprising result promotion rule local sequent calculus 
reason studying mell calculus plan enrich bv contraction hope making turing equivalent 
purpose need exponentials control contraction want destroy behaviour multiplicative disjunction respect parallel composition known resource sensitivity 
systems bv els state decomposition theorems rearranged highly structured way impossible sequent calculus subsystems system applied sequence 
decomposition results allow greatly simplify cut elimination proofs linked features systems study 
theorems welcome proving cut elimination calculus structures harder sequent calculus due liberal applicability inference rules 
prove cut elimination systems argument quite different usual sequent calculus 
exploring new methodology interesting possibility characterising property cut elimination systematic way 
deals syntax sole purpose calculus structures properties 
mell course semantically known els 
discovered trace semantics 
non commutativity requires language structures 
sort intermediate expressions formulae sequents 
define language systems bv sbv bv intuitively sh corresponds sequent linear logic formulae connected pars associativity commutativity taken account 
structure sh corresponds times connection sh associative commutative 
structure guglielmi stra burger sh associative non commutative new logical relation introduce 
details section 
definition infinitely positive literals negative literals 
literals positive negative denoted 
structures denoted language bv generated sh structure sh isa times structure sh seq structure negation structure structures hole appear scope negation denoted 
structure substructure ands context 
simplify indication context cases structural parentheses fill hole exactly example stands 
structures come equational theories establishing basic decidable algebraic laws structures indistinguishable 
analogue laws associativity commutativity idempotency usually imposed sequents 
see laws inference rules 
possible course introduce equational laws inference rules 
having dropped connectives choice matters clearer 
step defining system giving inference rules 
definition general holds system just bv definition inference rule scheme name rule premise 
rule names denoted 
formal system denoted system finite infinite chain instances rules 
derivation consist just structure 
topmost structure derivation called premise structure called 
derivation premise denoted shape specifies step rewriting cation context contexts correspond case sequent calculus 
important note notion derivation top symmetric 
logical axioms systems separately rules 
induce concept proof way breaking symmetry observing usual proof theoretical properties cut elimination 
dealing proofs section 
see system deals new non commutative logical relation 
sub systems interaction structure 
interaction fragment deals negation duality 
corresponds identity cut sequent calculus 
calculus rules mutually top symmetric admit decompositions atomic counterparts 
structure fragment corresponds mainly logical rules sequent calculus defines logical relations 
differently sequent calculus logical relations need defined isolation complex contexts taken consideration 
system system section consider pairs logical relations inside 
associativity unit singleton non commutativity mell calculus structures commutativity negation rh rh rh rh rh rh contextual closure interaction structure core fig 
left syntactic equivalence bv right system sbv definition structures language bv equivalent modulo relation defined left fig 

stand finite non empty sequences structures sequences may contain separators appropriate context 
right system sbv shown symmetric basic system 
rules called respectively atomic interaction atomic cut atomic switch seq 
fragment sbv fragment 
negation involutive pushed directly atoms 
unit common logical relations 
may think convenient way expressing empty sequence 
course rules flexible presence unit 
example notable derivation valid derivation ccs reaction 
please note inter act 
reader may notice correspondence ccs truly straightforward 
instance rule expressed sequent calculus premises big problems cut elimination essentially strong principal connective considered mean similar logics expressed calculus 
example retor proof nets 
logic close guglielmi stra burger possibly exact correspondence unknown 
able define sequent calculus self dual non commutative relation lives commutative ones 
mention mix commutative non commutative relations sequent system self dual sequential connective mutually dual ones 
away understanding rule considering linear logic times rule mimicked ra ub ra ub ra ub ra ub correspond formulae multisets formulae 
instances swapped substructures par context brought inside times structure independently 
combinatorial explosion splitting times context depends impossibility sequent calculus representing middle structure derivation 
fact lazy splitting algorithm represented naturally simply 
system sbv designed ensure subformula property rule premises substructures 
ofcourse consistency arguments search 
definition rules called interaction cut called principal structures 
sequent calculus rule cut realised ra ra ra ra ra ra theorem states reduction interaction rules atomic form 
definition strongly admissible system instance exists derivation strongly equivalent derivation exists derivation 
theorem rules strongly admissible systems respectively 
proof structural induction principal structure 
show inductive cases non commutativity mell calculus structures definition call core set rules different atomic interaction ones appear reduction interaction cut atomic form 
rules interactions core called non core 
called sbv core rules sbv rule obtained swapping negating premise 
strongly admissible system instance replaced main idea getting decomposition cut elimination theorems studying permutability rules 
get decomposition theorem instances moved derivation certain scheme obtained 
get cut elimination evil rules corresponding cuts eliminated permuted proof reach logical disappear 
definition permutes exists system permutes 
sequent calculus identity rules leaves derivation trees course 
put top calculus dual true cuts driven effort 
decomposition theorem 
theorem derivation sbv derivation sbv structures proof rule permutes permutes sbv 
take topmost instance move upward reaches top 
proceed inductively downward moving instance instances 
perform dually 
derivations reduced phase ones creation phase middle phase atoms shuffled rules core destruction phase 
time break top symmetry making asymmetric observations want detect proofs 
inference rules premise called logical axioms 
definition logical axiom rule called unit fig 
called bv basic system 
guglielmi stra burger fig 
system bv definition proof denoted derivation instance logical axiom 
system proves written rule admissible system proof exists proof systems equivalent prove structures 
get cut elimination system rules enjoy subformula property just get rid admissibility rules 
fragment sbv belongs fragment admissible 
suggests modular scheme proving cut elimination matter fact scales complex case mell insect rules non core fragment system trivially admissible core plus interaction see prove admissibility rules core show admissibility 
decomposition rules beneficial systems extended cut elimination proof smaller system largely reused bigger relies mutual permutability rules 
non core rules sbv prove equivalence sbv bv step show admissibility 
theorem outlines typical technique uses super rules keep track context permuting rule eliminated 
theorem rule admissible bv 
proof rule generalised certain rule called derived semantics permutes 
transformed bv top instance called 
instance permuted disappears 
repeat inductively downward instances 
bv sbv step getting rid instances 
non commutativity mell calculus structures theorem rule admissible bv proof similar previous 
need fact bv replaces rule ds deep switch proper times structure non unit resulting system called bv bv argument trivial 
transform upper bv portion proof bv 
drive topmost instance permutes ds 
instances apply principal literals created instance permuted reach top proof 
proceed inductively downward 
completes proof cut elimination 
strategy followed completely deterministic procedure confluent 
comes consistency similar argument exploiting top symmetry hard sequent calculus due difficulty flipping derivations 
theorem provable bv provable provided 
proof bv get sbv flipping proof 
provable bv impossible 
restrict bv disallowing seq structures get system equivalent mll multiplicative linear logic plus mix nullary mix 
proof similar proof 
systems equivalent mll constants mix easily designed calculus extensible seq 
reasons collapsing constants come external semantic arguments see 
multiplicative exponential linear logic general notions sect 
apply 
changes systems mell defined 
main differences presentation sequent calculus rules apply deep structures switch rule replaces times promotion rule decomposed local variant 
details 
definition denote mell multiplicative exponential linear logic system sequent calculus formulae generated sequents expressions kind ah commas formulae stand multiset union rules shown fig 
formulae denoted multisets formulae 
negation obeys de morgan rules 
define language structures els multiplicative exponential linear logic calculus structures 
multiplicatives denoted sect 
exponentials 
structures els formulae mell trivial mutual correspondence 
guglielmi stra burger id wk cut ct dr fig 
system mell bh pr bh definition structures els generated units structure structure structure course structure negation definition functions vice versa follows rh rh rh rh 
function extends sequents ah ah entirely possible take mell transport trivially calculus structures 
point proof theory possible sequent calculus possible calculus 
collapse dereliction dr ct known easy trick peculiarities calculus structures deal differently times pr 
way get new properties 
definition structures els considered equivalent modulo relation defined left fig 

stand finite non empty sequences structures 
right system sels shown symmetric multiplicative exponential linear logic calculus structures 
rules called system sbv atomic interaction atomic cut atomic 
called respectively promotion weakening absorption get prefix name 
fragment sels fragment 
reader check equations fig 
equivalences mell 
definition rules interaction cut associativity units singleton exponentials non commutativity mell calculus structures commutativity negation rh rh rh rh contextual closure interaction structure core non core fig 
left syntactic equivalence els right system sels fig 
system els system sbv propositions say general interaction cut rules decomposed atomic forms cut rule powerful fragment system vice versa holds interaction rule respect fragment 
proposition rules strongly admissible systems respectively 
proof similar proof 
proposition rule system sels strongly admissible system 
proof see 
definition core sels system denoted 
definition logical axiom rule called sect 
put logical axiom fragment sels 
definition system els shown fig 

quick consequence get theorem els sels strongly equivalent 
guglielmi stra burger system sels equivalent mell theorem provable sels provable mell provable mell provable sels 
proof rule sels sequent provable mell 
sequent provable 
sels cut inductively proof conversely proof mell transform easy induction proceeding root proof sels 
case promotion derivation exists induction hypothesis sels bh bh bh argument lines shows cut free proof mell obtain proof els 
admissible els theorem mell 
words fragment sels admissible els 
obtain result calculus structures sequent calculus 
want calculus logics captured sequent calculus able prove cut elimination calculus detour 
step decomposition theorem 
theorem derivation sels derivation structures 
proof decomposition done steps instances separated 
step difficult see trivial 
just consider proofs derivations top instances trivial premises equal 
instances removed 
non commutativity mell calculus structures ds ns sp sa theorem proof ns sp sr ds sa ds sa fig 
cut elimination sels sels proof ds sa ds tures 
proof trivial variation 
decomposition theorem great value cut elimination proof instances instances eliminated 
means deal absorption contraction known problematic cut elimination proof 
theorem systems sels els equivalent 
proof proof similar bv order 
forw 
super rules sa need rule super sr sp sr struc non deep switch instances instances ds see 
fig 
shows steps transformation 
start decomposed proof produced 
replace instances ds ns instances sp sa respectively 
permuting rules ns sp ds step rules sr introduced 
steps rules ns sp sr rule eliminated 
step rule sa eliminated 
guglielmi stra burger shown calculus structures system bv mll multiplicative linear logic expressible sequent calculus known way 
research currently going prove impossible capture bv sequent calculus 
system bv interesting computer science models typical notion 
extended mll mell calculus got system promotion rule local opposed possible sequent calculus promotion global 
new system unnecessary non determinism dealing times connective 
question new calculus justified competition sequent calculus 
answer reasons simplicity structures general sequent calculus logics involutive negation complicated 
case multiplicative exponential linear logic shows simple system deeply different mell designed 
system bv yields simple means logic defeats sequent calculus 
power calculus structures properties possibilities analyses decomposition available sequent calculus 
modularity proving cut elimination modular enlarges system done smaller system bigger 
cut elimination argument system decomposed separate pieces 
stems possibility dealing cut way identity sequent calculus calculus new symmetry 
reason achievements applicability rules deeply structures allows lazy bookkeeping context 
example times rule sequent calculus early choice splitting context case calculus 
happens promotion pieces context brought inside scope course 
reason results dropping idea connective 
calculus structures defining connectives rules define mutual relations logical relations 
typical rules fragment system definable sequent calculus just simple duals ordinary sequent calculus rules 
complication decompose cut rule atomic form key modularity 
possible problem calculus rules apply deep structures proof search non deterministic 
research progress group focus proofs lines induced logical relations depth structures 
classical logic studied 
easily port additive rules calculus question get decomposition modular cut elimination proof 
preparation br nnler tiu shows classical logic enjoys presentation rules local cut admissible 
step bring exponentials contraction system bv experiment performed shows operation entirely practical calculus yield better results proof nets notorious difficulties exponentials 
resulting calculus turing equivalent 
hope mell proved decidable question non commutativity mell calculus structures open happened mean edge self dual non commutative logical relation tape turing machine 
prototype system inspired traces contraction rule atomic 
able prove cut elimination 
successful obtain totally distributed formalism sense computer science class proof theoretical system 
samson abramsky radha jagadeesan 
games full completeness multiplicative linear logic 
journal symbolic logic june 
michele paul 
non commutative logic multiplicative fragment 
annals pure applied logic 
jean marc andreoli 
logic programming focusing proofs linear logic 
journal logic computation 
kai br nnler tiu 
local system classical logic 
preparation 
gerhard gentzen 
investigations logical deduction 
szabo editor collected papers gerhard gentzen pages 
north holland amsterdam 
jean yves girard 
linear logic 
theoretical computer science 
jean yves girard 
proof theory logical complexity volume volume proof theory 
bibliopolis napoli 
distributed elsevier 
alessio guglielmi 
calculus order interaction 
technical report wv dresden university technology 
web www ki inf de research gug gug pdf 
joshua hodas dale miller 
logic programming fragment intuitionistic linear logic 
information computation may 
dale miller 
calculus theory linear logic preliminary results 
lamma mello editors workshop extensions logic programming volume lecture notes computer science pages 
springer verlag 
dale miller 
forum multiple specification logic 
theoretical computer science 
robin milner 
communication concurrency 
international series computer science 
prentice hall 
christian retor 
pomset logic non commutative extension classical linear logic 
ph 
de groote hindley editors tlca volume lecture notes computer science pages 
christian retor 
pomset logic calculus directed 
editors dynamic perspectives logic linguistics pages 
roma 
available inria rapport de recherche rr 
paul 
non commutative logic ii sequent calculus phase semantics 
mathematical structures computer science 
lutz stra burger 
mell calculus 
technical report wv dresden university technology 
web www ki inf de lutz els pdf 
