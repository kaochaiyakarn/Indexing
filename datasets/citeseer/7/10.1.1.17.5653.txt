li il ylj probabilistic algorithms jii fields blank age inserted mit lcs tr probabilistic algorithms finite fields michael rabin january massachusetts institute technology laboratory computer science cambridge massachusetts probabilistic algorithms finite fields michael rabin visiting professor applied mathematics mit professor mathematics hebrew university jerusalem israel 
probabilistic algorithms problems finding irreducible polynomial degree finite field finding roots polynomial factoring polynomial irreducible factors finite field 
problems importance algebraic coding theory algebraic symbol manipulation number theory 
algorithms transparent easy program structure 
finite fields large characteristic exhaustive search zp feasible algorithms lower order degrees polynomial fields question previously published algorithms 
research probabilistic algorithms finite fields conducted mit 
key words phrases 
computations finite fields root finding polynomials probabilistic algorithms 
probabilistic algorithms finite fields michael rabin utilize method probabilistic algorithms solve important computational problems pertaining finite fields 
questions deal 
prime integer perform arithmetical operations gf polynomial degree coef wish find root root exist 
root finding problem 
polynomial ix want find factorization fl fk irreducible factors fi 
factorization problem 
problems great significance algebraic coding theory see algebraic symbol manipulation computational number theory 
algorithms problems kemp completely important subject incorporates important ideas collins knuth welch 
berlekamp solves root problem gf pn deg reducing factorization problem polynomial zp zp gf field residues deg am 
problem factoring zp solved reducing finding roots zp polynomial zp 
reduced root finding root finding large zp case search feasible berlekamp proposes probabilistic algorithm random choice zp 
article contain proof validity algorithm 
starting point solve directly problem root finding gf polynomials ix probabilistic algorithm generalizes arbitrary finite fields berlekamp algorithm 
zp 
validity algorithm theorem surprisingly simple proof 
base factorization zp root finding ir reducible factors degree zp product hi factors readily computations zp 
roots gf root finding algorithm allows directly find root gf pm 
minimal zp degree methods section 
root hi degree hi irreducible factor 

process finds factors 
algorithm works ix finite field roots polynomial 
terms number zp ons additions mod numbers algorithms complexity proportional log feasible fields gf large exhaustive search zp possible 
leaving factor log factors order log og logn algorithms 
root gf deg zp operations 
polynomial zp deg factored rations 
operations field gf wired circuitry operation viewed unit root finding algorithm uses nm operation 
assumption fields gf operations 
root finding factorisation algorithms case large higher order root finding gf deq uses ore zp operations 
factorization zp ix deg uses zp operations 
small practicable find solution zp search careful comparison algorithms non probabilistic algorithms necessary 
algorithm factorisation run time factor 
algorithm run non preprocessed case factor ogp 
small exact comparisons depend numerical constants involved 
sufficiently fast cases justify small values probabilistic nature algorithms detract practical applicability 
basic probabilistic step choice element attempt split polynomial factors 
prove fixed finite field fixed probability 
success random choice half 
ex pected number steps leading success 
re algorithm involving steps probability run bad random choices leading significant deviation expected total number steps small 

arithmetic gf prime integer pn 
customary denote gf unique finite field elements 
particular gf zp field residues mod want compute elements zp simply addition multiplication mod zp irreducible polynomial degree pn zp ideal generated represented set tuples ele ments zp 
bn cn 
addition component wise 
multiply form bn cn find residue dn divided 
dn 
need method finding irreducible poly nomial 
test irreducibility 
lemma 
zl zk prime divisors denote 
polynomial zp degree irreducible zp lk denotes greatest common divisor proo 
assume irreducible root lies gf 
pn xmn 
multiple roots follows 
irreducible degree roots field gf assume conversely hold 
follows roots gf assume irreducible factor gl degree roots 
gf consequently lm maximal divisors roots gl lie gf 

divisible gl contradicting 
irreducible 
computing number operations required test polynomial primality count article terms arithmetical operations zp 
obtain bit operations count multiply results number bit operations required multiply divide numbers log bits 
known taken log lop 
order shorten subsequent formulas introduce notation log log log pn computation executed computing modulo 
known pn calculated log pn multiplications mod 
compute mod deal polynomials degree greater 
shown multiplying polynomials coefficients finite field done log log log field operations 
consequently division finding remainder done nl operations see ss 
basic step computing uses nl operations 
computation pn uses log operations 
test need type total number operations ol log search irreducible polynomial degree result weaker form suf purposes theorem 
give proof utilizing generating functions 
lemma 
denote re number different monic polynomials zp degree irreducible 
pn pn 
note pn number monic polynomials degree proo 
gl gk pair wise different irreducible monic polynomials degree element gf degree satisfies exactly equation gi equation exactly roots 
set elements degree zp 
tin ay proper maximal subfield gf maximal divisor see notation lemma 
cardinality subfield pn number maximal subfields smaller log pn pn log follow 
berlekamp remarks theorem means randomly chosen polynomial degree irreducible probability nearly suggesting base algorithm fact 
general spirit solve problem finding irreducible poly nomial randomization 
algorithm finding irreducible polynomial proceeds follows 
choose polynomial randomly test irreducibility continue irreducible polynomial degree 
ensures expected number polynomials tried irreducible expected number operations zp finding irreducible polynomial degree 
log 
root finding algorithm gf assumes arithmetic field question finding arise 
factorization polynomial degree may need computations fields gf hi operations including pre computation 
lemma 
ni satisfy 
expected number operations finding irreducible poly hi deg ni log 
proof 
ni log gf fixed finite field degree wish find roots 
give probabilistic algorithm problem generalization algorithm berlekamp prime fields zp arbitrary finite fields proof validity general algorithm course applies case zp essentially proof 
assume time pn odd 
shall indicate treat important case form fl xq 
fl roots general fl pairwise different roots natural step try fl xd 
satisfy satisfy true divisor advanced goal finding linear factor root 
general guaranteed different fl 
advantageous situation created randomization 
call nt theorem 
ice different type proof 
elements different type zero 
fl equation exactly solutions ul consider mapping ranges ranges 
exactly values 
implies 
corollary 
consider 
fl pt proof 
common roots fl fl 
theorem probability property vice versa 
entails 
probability nearly deg fl prove 
root finding algorithm 
degree compute fl 
choose randomly compute 
deg fl fl deg deg fl 
fl choose repeat previous step 
corollary expected number choices find 
degree halved step log steps find linear factor root 
number field arithmetical operations re quired finding fl nm log gf deg follows number operations finding half number operations finding similarly total number operations finding root just ml log 
terms operations zp operation re quires nl operations residues modulo total expected number zp operations root finding ml log 
factorization polynomials zp polynomial degree want factor irreducible factors 
may assume derivative zero 
pk readily 
example calculating reduced problem factoring polynomial repeated factors 
calculate gin lcm gf tm consists exactly elements degrees zp gm product irreducible factors degrees lm 
choose gm lowest index gin deg gm hi irreducible degree roots gin gf tm find root gm 
root root unique find form powers elements gf tm component vectors coordinates zp 
solve system linear equations bo bl lm bi coefficients 
hi xm bm 
way computing hi ben 
note hi irreducible degree automorphism gf field conjugates apm polynomial obtained calculation gf pm 
am methods irreducible factor gm ix 
find root gm hi factor hj gm 
proceeding factor gi choose gr lowest index gr product irreducible factors degree mir gr product factors 
factor gr gr irreducible factors degree methods 
general ml gini 
steps dl 
di dj product irreducible factors degree mj dj factored 
dj possible despite 
example may irreducible factors degrees irreducible factors degree 
case da 
dj 
gini mj imi di mi method 
deg di di irreducible degree mi exactly irreducible factor degree 

counting operations count number zp operations re quired factor polynomial ix degree cost getting rid multiple factors discovering factors di define section cost factoring confine estimating cost 
di dr deg di hi deg hij hij irreducible 
algorithm section seeks roots ki di factor hij hij 
operation count root finding gf pmi di di mi log finding root say find 
find root hil sure root belongs hij hil 
overestimating fact deg di hil di get kim di mi log total number zp operations find relevant ots kim 
md get di log bound operations di 
obtain summation manner deriving lemma log bound cost finding necessary roots di 
method finding hij root hij employs zp operations calculate sequence powers root 
solution system linear equations unknowns uses operations previous term 
summing hij estimating get zp operations finding hij estimate operations ben rs method computing hij roots 
notation root deg hi log gf pmi multiplications perform exponent counting operations get log operations computing sequence 
formation product computation polynomial roots uo um 

result account finite field require log operations multiply polynomials degree get 
mil log operations factor hij deg mik get zp form hij 
upper estimate nl log log operations ben find irreducible factors ki root factor computed 

summary results extensions root finding method section applicable ls gf 
small cation 
xq polynomial tr 
gf root 

theorem 
proo 
iff 
runs particular appropriate values roots obtained 
proves theorem 
theorem probabilistic root finding algorithm als ix completely analogous algorithm section polynomials zp section immediately generalizes coefficients general finite field gf 
operations count operations replacing zp operations 
summarize results follows 

cbl expected number steps finding ir reducible polynomial zp degree og log 
polynomial enables compute gf 

expected number zp operations find root gf degree log 
arithmetic gf directly wired circuitry arithmetical operation counted operation number operations root finding log 

factorization fat total number operations factoring polynomial zp degree og log log included necessary ir reducible polynomials gi needed arithmetics relevant fields gf term represents operations solve linear equations assume arithmetics fields gfp second method computing factors roots 
fol lows gf operation counted ration number operations factoring polynomial degree irreducible factors log nl log log 
term second term display reflects structure algorithm 
bibliography aho hopcroft ullman design analysis algorithms addison wesley pub 
reading mass 
berlekamp algebraic coding theory mcgraw hill pub 
new york 
berlekamp factoring polynomials large finite fields math 
computations vol 
pp 

yon uber der acta informatica vol 
pp 

