key words overview wos project web operating system software configuration eduction resource management operating system services global computing communication protocols 
discuss web operating system wos approach global computing 
show heterogeneous dynamic nature web internet impossible define fixed set operating system services usable services 
propose generalized software configuration techniques demand driven technique called eduction define versions web operating system built incremental manner 
net centric approach considers communication central issue opposed common notion central servers 
communication mechanisms wos node architecture components achieve 
rapid development networked mobile computing demonstrated growing internet web lead global infrastructure new functionality 
presently available tools essentially allow users download files execute remote pre defined scripts fetch mobile code run locally develop run distributed applications specialized metacomputing environments 
underlying model tools consists clientserver master slave setup network transport means 
role network evolving service delivering platform services offered delivery contracts 
service may understood context piece software hardware computation peter partement informatique universit laval qu bec canada email acm org storage capacity communication channels specialized drivers 
user point view service may kind world wide web conferencing auctions database search mail media scientific applications simply translation document format 
widely distributed computing resources motivated various reasons load sharing performance aggregation including exploitation workstation idle time reliability availability fault tolerance function sharing data sharing 
different imaginable applications open markets electronic commerce workflow management collaborative scientific computing tele immersion smart instrumentation exhibit different requirements 
example scientific computing encompasses massively parallel computing large data sets real time visualization 
workflow management automotive industry includes cad cae multiple data formats multiple programs 
take advantage global distributed infrastructure mechanisms efficient resource management access needed 
central problem resource management classical function operating system 
consequently imagine development new single operating system enabling global computing 
heterogeneous dynamic nature infrastructure ensure impossible provide complete catalog resources available 
overhead costs associated dominate savings questionable operating system useful considering different levels granularity service necessary provided 
new approaches needed take account inherently decentralized dynamic properties internet distributed systems general 
presents overview wos architecture components 
start describing general approach taken wos project define system services global computing 
briefly compared related 
scope ex depth analysis approaches global distributed computing 
section gives overview architecture wos node definition followed presentation communication protocols 
resource management functions illustrated load sharing load balancing mechanisms 
multiple versions discussed section 
presentation state brief discussion conclude 
concepts web operating system wos wos approach global computing ben aims provide solutions global ubiquitous computing develop service mechanisms meet requirements net centric view services processes 
account dynamic nature internet generalized software configuration techniques demand driven technique called eduction plaice ben 
developed wos 
kernel wos node general eduction engine reactive system responding requests users eduction engines 
wos node integrates client server broker trader functions 
nodes capable providing set services pass requests appropriate 
internet web dynamically changing directions attempt design single operating system offering fixed set resource management functions fore doomed 
wos designed distributed versioned system 
different versions services wos running simultaneously network 
warehouses associated wos nodes provide necessary information components fulfilling service requests 
node uses warehouses store continuously update information node available services resources 
approach allows interaction different warehouses offering different versions available services resource management techniques applications platforms hardware 
wos architecture relies decentralized eduction engines warehouses considers communication protocols centralized part 
communication protocols may seen glue wos architecture 
communication nodes realized simple discovery location protocol generic service protocol wosp 
wosp protocol fact protocol language corresponding parser serves easily configure service specific protocol instances 
example wosp instance implement interface xml cbl common business library giop iiop corba 
lower levels protocol stack assume usage tcp ip protocol family 
related approaches integrate computational resources available internet global computing resource 
closest approach wos jini architecture proposed sun microsystems sun 
jini allows build federations nodes distributed objects offering different services relying service protocol 
lookup services provide location discovery functions 
wos approach qualitatively different general federations subsets wos nodes defining specific environment context dynamically autonomously created 
achieved versioning powerful lookup discovery protocols generalized service communication protocols 
efforts exploit distributed resources wide area computing include linda pvm mpi netsolve casanova dongarra globe van steen webos vahdat legion grimshaw globus foster kesselman 
contrast wos approach systems require login privileges participating machines require operating system compiler modifications 
usually require architecture specific binaries 
java addresses issue number projects including atlas charlotte javelin christiansen popcorn 
projects aim provide java oriented programming models internet parallel computing 
approach orthogonal proposals java oriented programming models integrated wos gateway interfaces 
wos different require global centralized catalog resources example necessary javelin atlas globus 
wos approach wos framework consists sum total interactions nodes relying basic communication protocol multiple warehouses node 
designed completely open system user 
conceptually totality wos nodes constitute 
wos versioned system subnets easily defined collection wos nodes may defined particular version wos net 
example number servers intranet defined version including servers 
wos compliant system potentially contact servers version compatible 
way business traveler read mail traveling service hidden firewall 
connect wos compliant wireless pda local isp locate wos version connect mail service 
architecture wos node fig 
shows general architecture wos node fig 
corresponding layered structure 
list shared resources job control remote resource control application programming interface wosp network local host cpu time memory access services hardware software wosp user profiles host machine manager user manager eduction search engine warehouse network eduction search engine warehouse wosp wosp user interface execution control user resource control search evaluation architecture wos node 
users interact wos user interface 
interface provides unique gateway services available wos 
service requests interface 
user interface display execution status results search results come 
host machine manager handles service requests received node 
responsible responding resource search requests executing services approved 
user manager responsible coordination wos service required user 
requests allocates resources required service information stored local warehouses 
communication layers managers shown fig 
implement wosp 
protocol versioned 
question arises implement single infrastructure handle multi versioned protocol answer quite simple 
lookup different available wosp versions described 
second wosp versions differ semantics convey 
single open complete syntax defined handle transmission different universe discourse 
wosp parser handles conversion syntax 
different versions wosp implemented specializing wosp analyzer module 
run time warehouse lookup bind node appropriate instance wosp analyzer wosp version id host machine manager wos protocol wosp analyzer wos protocol wosp parser user interface eduction search engine wos request protocol network user manager wos protocol wosp analyzer wos protocol wosp parser functional layers wos node 
layer isolates wos node network 
provides basic services locating wos nodes understanding specific wosp versions connecting wos nodes specific wosp version 
detailed description wosp specification implementation 
bootstrap problem new wos node added knows initial list wosp versions understands knows nodes neighborhood 
order business node locate wos nodes neighborhood 
wosp version manager broadcast local network message requesting information wosp version 
answer received wos nodes located local network wosp versions manager worst case broadcasts network level 
process continues wos node machine internet visited 
approach flood internet proceed recursive waves broadcasting time 
wos node requests specific wosp versions may sent seen 
load sharing load balancing mechanisms results load sharing mechanisms resource management approaches efficient approach resource discovery large networks unger hme unger 
multiple independent search chains threads search resources 
method maximizes number nodes visited minimizing network traffic 
efficiency correctness method demonstrated stochastic simulation experimentally internet 
unger discuss requirements methods load management wos 
propose definition user space set resources different machines satisfy users service requests 
define user space suggest application statistical methods user resource usage 
mentioned steadily adapted updated information user spaces locally kept warehouse consulted deciding service request execution 
placement application service execution reserved user space done standard load sharing methods initial random placement sender receiver initiated 
versions noted wosp element may versioned wos node 
resource initial list needs defined 
may fact versioned 
eduction engine indispensable identify locate requested service identification scheme needs formally defined 
version management wos informally ben plaice 
follows previous software versioning plaice wadge intensional programming particular lucid programming language wadge ashcroft 
intensional programming system characterized operations lookup eval define interactions possibly multiple warehouses definition catalogs 
catalogs basically tagged objects denoting context value pairs represent identifiers 
operations general side effects cause explicit changes state updating warehouses catalogs way 
generalization application concepts wos allow dynamically changing contexts creating new contexts computation 
prototype application development various prototypes focusing different aspects wos currently developed 
prototype focuses search mechanisms load distribution sharing 
uses unix sockets communication simple resource description language html forms service requests 
altavista search engine serves locate resources cgi scripts emulate basic functions eduction engine 
second prototype allows transparent remote access resources java rmi technology known desktop metaphor user interface krone 
parallel development various components wos including implementation wosp protocols resource warehouse management security system unger agent distributed file service mechanism way 
explicit design choice try leverage possible existing services tcp ip including ipv 
java programming environment chosen implementation platform order allow maximal portability easy maintainability code maintained easy deployment 
furthermore choice may advantageous exploit interesting features introduced example system database jsd name spaces 
various pieces developed continuously integrated prototypes providing functions 
simple applications wos prototypes include tool services data format translators formatting typesetting services distributed document generation 
exists wide range possible application areas worthwhile explore long term creation virtual data centers contain data data manipulation analysis modeling visualization tools different domains interest environmental geographic marine information technology retailer groups banking integration distributed programming models specific application domains 
scientific computing multi media services 
application wos integrate heterogeneous incompatible applications 
development wos framework services open virtual marketplaces ecommerce general 
mentioned earlier particular wosp versions implement interfaces existing application service protocols 
similarly wos nodes may offer gateway functions computing models programming systems 
gateway service currently developed mpi unger 
current development wos concepts software going collaborative effort laval university canada university rostock germany university new south wales australia university north texas usa 
current projects way include development security models wos specification version identification eduction name spaces warehouse management development agent distributed file system mechanisms implementation resource management mechanisms consolidation developed concepts prototypes 
furthermore gateway mpi programming model implemented application wos concepts electronic commerce case auctions 
aim develop methods tools support development new wosp versions account service requirements new versions development system gateways wos compliant application components 
long term objective wos project define develop methods frameworks current interconnected systems contribute global information infrastructures technologies 
particular approach relying multiple simultaneous versions eduction engine aims provide better abstractions underlying complexity networked systems services allowing handling dynamically changing contexts environments 
researchers students enthusiastic participation realizing ambitious project plaice unger krone ben zhong yuen 
unger 

level communication protocol web operating system wos ieee euromicro workshop network computing ster sweden 
blumofe brewer 

atlas infrastructure global computing seventh acm sigops european workshop system support worldwide applications 
unger 

running scientific computations web operating system environment high performance computing symposium san diego ca usa ed scs international 
kedem 

charlotte metacomputing web th conference parallel distributed systems 
ben plaice 

simultaneous multiple versions key wos distributed computing web rostock germany 
ben plaice 

problems computing web high performance computing symposium atlanta ga ed scs international 
hme unger 

search distributed computing web rostock germany 
sandhu shan talbot 

world wide supercomputing seventh acm sigops european workshop system support worldwide applications 
london nisan regev 

popcorn project distributed computing internet java th international world wide web conference 
casanova dongarra 

netsolve network server solving computational science problems international journal supercomputer applications high performance computing 
christiansen schauser wu 

javelin internet parallel computing java acm workshop java science engineering computation 
foster kesselman 

globus metacomputing infrastructure toolkit international journal supercomputer applications 
grimshaw wulf french weaver reynolds 

legion vision worldwide virtual computer cacm 
krone 

web operating system 
kommunikation verteilten systemen darmstadt germany 
microsystems 
jini 

java sun com products jini whitepapers 


specification agent distributed file system wos high performance computing symposium san diego ca usa ed scs international 


intensional scientific programming 
ph thesis des sup universit laval qu bec canada 
plaice ben 

eduction general model computing 
intensional programming ii singapore world scientific 
plaice wadge 

new approach version control ieee transactions software engineering 


inside operating system 
addison wesley longman reading ma usa 
unger 

new security mechanism large distributed systems high performance computing symposium san diego ca usa ed scs international 
unger 

overview resource management web operating system wos distributed computing web rostock germany 
unger hme 

simulation search distribution methods jobs web operating system wos high performance computing symposium boston ma usa ed scs international 
vahdat anderson dahlin culler yoshikawa 

webos operating system services wide area applications proceedings seventh ieee symposium high performance distributed systems chicago il usa 
van steen tanenbaum 

architectural design globe wide area distributed system technical report ir 
vrije universiteit amsterdam 
wadge ashcroft 

lucid dataflow programming language 
academic press london 
zhong 

communication wos research report rr 
universit laval qu bec canada 
biography peter received sc 
ph degrees university bern switzerland 
working universit laval qu bec holds position associate professor 
carrying research parallel computing years including mapping load balancing algorithms application oriented projects 
research interests include internet computing distributed computing networking simulation 
