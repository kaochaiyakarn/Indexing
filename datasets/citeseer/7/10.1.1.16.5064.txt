proceedings th european simulation symposium ess oct passau germany physical modeling language modelica elmqvist ab research park se lund sweden mail elmqvist se new language called physical modeling developed international effort 
main objective easy exchange models model libraries 
design approach builds noncausal modeling true ordinary differential algebraic equations object oriented constructs facilitate reuse modeling knowledge 
modeling language ideas available universities small companies 
significant experience various applications 
aim modelica effort unify concepts design new uniform language model representation 
describes effort gives overview modelica 
mathematical modeling simulation emerging key technologies engineering 
relevant computerized tools suitable integration traditional design methods essential meet needs efficient engineering 
october international effort started design new language physical modeling 
language called modelica main objective easy exchange models model libraries allow users benefit advances objectoriented modeling methodology 
presents status modelica design august 
today simulation tools large amount simulation software market 
languages model representations proprietary developed certain tools 
general purpose tools simulink system build 
modeling methodology input output blocks previous standardization effort strauss ed 

domain oriented packages electronic programs spice multibody systems adams simpack chemical processes aspen plus speedup modelica trade mark modelica design group sven erik department automatic control lund institute technology box se lund sweden mail control lth se tions simulation packages strong domain capable modeling components domains reasonably 
major disadvantage technical systems heterogeneous components engineering domains 
state art techniques general purpose physical modeling developed decades receive attention simulation market 
modern approaches build non causal modeling true equations object oriented constructs facilitate reuse modeling knowledge 
modeling languages support available universities small companies 
examples modeling languages ascend 
dymola elmqvist 
barton nmf 
fritzson 

smile 

vhdl ams ieee 
significant experience languages various applications 
aim modelica effort unify concepts languages order introduce common basic syntax semantics design new unified modeling language model representation 
modelica effort started continuous time domain common mathematical framework form differential algebraic equation dae systems existing modeling languages similar ideas 
significant experience languages various applications 
appropriate collect knowledge experience order design new unified modeling language neutral format model representation 
short range goal design modeling language dae systems discrete event features handle discontinuities sampled systems 
design allow evolution multi formalism general purpose modeling language 
table active members modelica design group 
fabrice de france jan univ twente netherlands dag br ck ab lund sweden elmqvist ab lund sweden ernst gmd berlin germany peter fritzson link ping university sweden alexandre de france vtt finland matthias technical univ berlin sven erik lund university sweden martin otter dlr germany ab stockholm sweden dlr cologne germany hans university gent belgium members modelica design group listed table 
elmqvist chairman 
information modelica effort available www www se modelica 
activity started october effort esprit project simulation europe basic research working group sie wg 
information sie wg 
home page hobbes rug ac sie 
february modelica design effort technical committee federation european simulation societies 
modelica fundamentals order give modelica consider modeling simple electrical circuit defined 
system broken set connected electrical standard components 
voltage source resistors capacitor ground point 
models components typically available model libraries 
graphical model editor define model drawing object diagram shown positioning icons represent models components drawing connections 
simple electrical circuit 
corresponding modelica model looks model circuit resistor ac capacitor ground resistor equation connect ac capacitor circuit connect connect ac connect circuit connect connect connect ac circuit composite model specifies topology system modeled 
specifies components connections components 
statement resistor declares component class resistor sets default value resistance 
connections specify interactions components 
modeling languages connectors referred cuts ports terminals 
connector contain quantities needed describe interaction 
electrical components need quantities voltage current 
types declared type voltage real unit type current real unit real name predefined type 
real variable set attributes unit measure minimum value maximum value initial value 
simplify modelica support compatibility extensive standard library type definitions available modelica translator 
type definitions base library iso naming conventions physical quantities 
iso names long awkward practical modeling 
reason shorter alias names provided necessary 
name repeatedly model cumbersome voltage provided alternative 
connector class defined connector pin voltage flow current pin connection connect pin pin pin pin connector class pin connects pins form node 
implies equations pin pin pin pin 
equation indicates voltages branches connected second corresponds kirchhoff current law saying current sums zero node 
similar laws apply flow rates piping network forces torques mechanical system 
sum zero equations generated prefix flow connector declarations 
modelica assumed value positive current flow component 
defining set connector classes start developing model libraries new application domain 
promotes compatibility component models 
common property electrical components pins 
means useful define shell model class partial model shell model electrical pins pin voltage current equation pins quantity defines voltage drop component quantity defines current pin component pin equations define common relations quantities simple electrical component 
order useful constitutive equation added 
keyword partial indicates model class incomplete 
name class body string allowed 
treated comment attribute 
tools may display documentation special ways 
define model resistor exploit add definition parameter resistance ohm law define behavior model resistor ideal resistor extends parameter resistance equation resistor keyword parameter specifies quantity constant simulation experiment change values experiments 
parameter quantity simple user modify behavior model 
model electrical capacitor defined similar way model capacitor ideal capacitor extends parameter capacitance equation der capacitor der means time derivative model voltage source defined model sine wave voltage source extends parameter voltage va amplitude parameter frequency frequency hz protected constant real pi equation va sin pi time forget ground point 
model ground ground pin equation ground purpose ground model twofold 
defines value voltage levels 
secondly connections generate kirchhoff current law 
ground model handles introducing extra current quantity implicitly defined zero equations 
hybrid modeling realistic physical models typically contain discontinuities events changes structure 
examples phenomena relays switches friction impact sampled data systems modelica introduced special language constructs allowing simulator introduce efficient handling events 
special design emphasis synchronization propagation events possibility find consistent restarting conditions event 
possible build model libraries allowing efficient finite state machines petri nets 
modeling ac dc converter example discrete behavior occurs diodes studied 
consider ac dc converter 
circuit contains diodes 
pwm pwm dm circuit diagram ac dc converter 
condition invariant ideal diode equation active 
described follows equivalently simulator supporting modelica required support mixing algebraic equations boolean conditions ordinary numerical integration routines 
model rewritten boolean mode variable closed 
complete ideal diode model blow 
model diode ideal diode extends boolean closed start false equation closed new closed closed diode equation states voltage diode zero diode closed current zero 
second equation boolean stating diode closed current zero negative closed changed false 
hand closed false positive closed changed true 
special operator new introduce discrete state variables break direct dependencies algebraic boolean variables 
simulator perform fix point iteration boolean variables order find consistent restart conditions closing opening event 
tool supporting modelica typically extract information relations order generate zero crossing functions allowing root finder integration algorithm find exact time events 
relation crossing function similarly 
ideal model similar includes logic gate signal switching 
case controlled pulse width modulation 
details elmqvist 

typical simulation result 
current voltage source 
advanced modeling features modelica language introduced giving small examples 
model classes instantiation form basis hierarchical modeling connectors connections correspond physical connections components 
lowest level equations describe relation quantities model 
expressive modeling power modelica large 
powerful constructs summarized 
modeling example multi body systems control systems approximations partial differential equations done conveniently utilizing matrix equations 
multi dimensional matrices usual matrix operators matrix functions supported modelica 
possible arrays components define regular connection patterns 
typical usage modeling distillation column consists set connected series 
far discussed component parameters resistance value 
reuse model library components supported allowing model class parameters 
example controlled plant pid controllers replaced auto tuning controllers 
course possible just replace controllers graphical user environment create new model 
problem solution models maintained 
modelica capability just substitute model class certain components language construct highest hierarchical level version rest model needed 
algorithms functions supported modelica modeling parts system procedural programming style 
constructs including graphical annotations available order icons model diagrams portable 
extensive modelica base library contains standard variable connector types promotes reuse standardizing interfaces 
modeling applications modelica model various kinds systems 
otter 
describe modeling automatic purpose real time simulation 
models non trivial varying structure gear shift utilizing free wheels brakes 
discusses modeling heat 
class parameters modelica medium parametrization regular component structures discretization space heat 
ernst 
discuss flow oriented models 
describes modelica library bond graph model classes supporting bond graph modeling methodology 
modelica effort described overview modelica 
design evolving august 
version language definition scheduled available september 
ongoing write books modelica language modelica model libraries 
modelica tools development 
discussions extend modelica design example handling partial differential equations discrete event models 
information including modeling requirements rationale definition modelica language developments available www url www se modelica 
authors members modelica design group inspiring discussions contributions modelica design 
barton modeling combined discrete continuous processes aiche pp 

andj modeling systems language proceedings rd international conference bond graph modeling simulation simulation series vol pp 

society computer simulation international 
bond graph modeling modelica proceedings european simulation symposium ess 
society computer simulation passau germany 
elmqvist br ck otter dymola user manual 
ab research park lund sweden 
elmqvist cellier otter objectoriented modeling power electronic circuits dymola proceedings joint conference international simulation societies ciss 
society computer simulation eth zurich switzerland 
ernst modelica smile case study applying object oriented concepts multi facet modeling proceedings european simulation symposium ess 
computer simulation passau germany 
fritzson fritzson high level mathematical modeling programming ieee software 
ieee standard vhdl analog mixed signal extensions technical report ieee 
ieee 
un langage de mod modelling language proceedings cesa imacs multiconference 
imacs lille france 
friesen simons smile simulation environment energy systems ed proceedings th international imacs symposium systems analysis simulation sas vol 
systems analysis modelling simulation pp 

gordon breach publishers 
modeling heat modelica proceedings european simulation symposium ess 
society computer simulation passau germany 
andersson str object oriented modelling simulation ed cad control systems chapter pp 

marcel dekker new york 
otter schlegel elmqvist modeling realtime simulation automatic modelica proceedings european simulation symposium ess 
society computer simulation passau germany 
ascend object oriented computer environment modeling analysis modeling language computers chemical engineering pp 

bring neutral model format building simulation version technical report 
department building sciences royal institute technology stockholm sweden 
strauss ed 
sci continuous system simulation language simulation pp 

simulation progress esprit basic research working group eds proceedings european simulation symposium genoa pp 

society computer simulation international scs 
