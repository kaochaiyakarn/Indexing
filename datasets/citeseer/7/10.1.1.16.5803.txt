planning heuristic search new results bonet ector geffner 
de computaci universidad sim bol ivar 
usb 
aips planning competition hsp planner forward state search domain independent heuristic showed heuristic search planners competitive state art graphplan satisfiability planners 
hsp solved problems planners took time produced longer plans 
main bottleneck hsp computation heuristic new state 
computation may take processing time 
solution problem uses simple change direction search 
new planner call hspr ideas heuristic hsp searches backward goal forward initial state 
allows hspr compute heuristic estimates 
result hspr produce better plans time 
example hspr solves logistics problems kautz selman seconds 
orders magnitude faster blackbox 
time cases plans substantially smaller 
hspr robust hsp visits larger number states deterministic decisions relies single adjustable parameter fixed domains 
hspr better hsp domains particular blocks world hspr fails large instances hsp solve 
discuss relation hspr graphplan argue graphplan understood heuristic search planner precise heuristic function search algorithm 
years seen number promising new approaches planning 
prominent graphplan bf satplan ks 
stages building suitable structures searching 
graphplan structure graph satplan set clauses 
planners shown impressive performance attracted deal attention 
implementations significant extensions reported lf ks 
aips planning competition mcd planners strips track ipp stan lf blackbox ks ideas 
fourth planner hsp bg heuristic search nil pea 
hsp search assumed similar search problems puzzle sole difference heuristic problems puzzle heuristic normally sum manhattan distances planning extracted automatically representation problem 
hsp appeals simple scheme computing heuristic strips encodings uses heuristic guide search 
similar ideas mcd blg 
review heuristic search algorithm hsp discuss problem having compute heuristic scratch new state introduce reformulation hsp avoids problem 
analyze relation resulting planner graphplan argue graphplan understood heuristic search planner precise heuristic search algorithm 
hsp heuristic search planner hsp casts planning problems problems heuristic search 
strips problem ha gi tuple set atoms set operators encode initial goal situations 
operators op assumed grounded precondition add delete lists denoted rec op add op del op sets atoms strips problem ha gi defines state space hs sg delta ci 
states collections atoms 
initial state 
goal states sg 
actions operators op rec op 
transition function maps states states gamma del add 
hsp searches state space starting aid heuristic extracted strips representation problem see mcd blg 
heuristic heuristic function problem obtained considering relaxed problem delete lists ignored 
state optimal cost solving lower bound optimal cost solving heuristics set 
solving optimally relaxed problem obtaining exponentially hard 
settle approximation set estimate optimal value function relaxed problem 
estimate computed follows 
state atom compute measure provides estimate cost number steps achieving measures initialized 
time operator op preconditions rec op applicable atom add op added updated min stands cost achieving conjunction atoms see 
expansions updates continue measures change 
basically shortest path algorithm graph connects action preconditions effects 
hsp costs conjunctions atoms defined sum costs individual atoms def additive costs heuristic function provides estimate number steps required goal true defined def note measures depend state computed 
hsp measures recomputed scratch new state 
expensive may take processing time 
definition cost conjunctions assumes subgoals independent 
plans achieve subgoal effect plans achieve subgoals 
general true result heuristic function defined admissible may overestimate true optimal costs 
admissible heuristic function defined simply changing formula max max costs heuristic function result change call max heuristic admissible informative additive function defined 
reason hsp 
fact additive heuristic combines costs subgoals max heuristic focuses difficult subgoals ignoring 
sect 
see refined version max heuristic graphplan 
algorithm provided heuristic hsp approaches planning problem heuristic search 
standard search algorithms ida kor hsp uses variation hill climbing 
due reasons important computation new state expensive 
hsp tries get goal node evaluations possible 
surprisingly hill climbing search plus simple enhancements limited number plateau moves restarts memory past states performs relatively 
obtained similar results korf lrta kor place hill climbing blg 
probably due fact heuristic admissible informative tends drive search direction 
table mcd shows results strips track aips competition 
seen hsp solved problems planners took time produced longer plans see mcd details 
round planner avg 
time solved fastest shortest round blackbox hsp ipp stan round blackbox hsp ipp stan table 
results aips competition strips track 
columns show number problems solved planner number problems planner fastest produced shortest plans mcdermott hspr heuristic regression planning hsp main bottleneck computation heuristic new state 
main innovation hspr simple change direction search avoids problem 
result search proceeds faster states visited better plans time 
hspr searches backward goal forward initial state 
old idea planning known regression search nil wel 
regression search states thought subgoals application action goal yields situation execution action achieves goal 
crucial point hspr measures computed estimate cost achieving atom sect 
recomputation estimate heuristic state arising regression 
example fp rg state cost reaching regression estimated terms costs achieving applies state 
words hspr cost estimates computed define heuristic state 
key change hsp hspr formalized 
state space hspr hsp search different state spaces 
hsp searches progression space defined actions available strips operators 
hspr hand searches regression space actions correspond reverse application strips operators 
regression space associated strips problem ha gi defined analogy progression space defined tuple hs sg delta ci 
states sets atoms 
initial state goal 
goal states sg 
set actions applicable operators op relevant consistent add op del op 
state follows application gamma add rec 
solution state space solution space hs sg delta ci finite sequence actions 
sequence states 
sg solution progression regression spaces related obvious way inverse 
heuristic hspr searches regression space heuristic additive cost estimates described sect 
estimates computed initial state heuristic associated state defined hsp heuristic combines cost estimates fixed set goal atoms computed state hspr combines estimates computed fixed state set subgoals mutexes regression search leads states reachable initial state lead solution 
graphplan bf recognized problem showed way deal notion mutual exclusivity relations mutexes 
hspr idea slightly different formulation 
roughly atoms form mutex hp qi true state reachable example block problems atoms normally form mutex 
states containing mutex pairs safely pruned part solution 
interested recognizing mutexes possible 
tentative definition pair atoms hp qi mutex true action asserts deletes action asserts deletes definition sound weak 
particular recognize pair hon mutex actions move add atom delete second 
different definition pair hp qi recognized mutex actions add delete guarantee preconditions true action symmetrically actions add 
consider sets mutexes 
definition 
set atom pairs mutex set set operators initial state iff hp qi 
true 
op adds del op add op rec op hr qi 
op adds del op add op rec op hr pi easy verify hp qi belongs mutex set really mutually exclusive reachable state contain 
mutex sets mutex set definition single largest mutex set 
computing set difficult compute approximation follows 
say hp qi bad pair comply conditions 
procedure approximating largest mutex set starts set pairs iteratively removes bad pairs bad pair remains 
initial set chosen set pairs hp qi atoms practice speed computation losing mutexes considering smaller initial set defined union sets ma mb ma set pairs hp qi op add op del op mb set pairs hr qi hp qi ma op rec op add op structure definition mirrors def 

treat pairs symmetrically assume hq pi set hp qi vice versa implementation atoms ordered pair stored 
mutex hspr refers pair set obtained ma mb sequentially removing bad pairs 
analogous definition graphplan set capture actual mutexes computed fast domains considered appears prune obvious unreachable states 
difference graphplan definition identifies non temporal mutexes graphplan identifies time dependent mutexes 
hand fixed point construction identify mutexes graphplan 
example complete tsp domain lf pairs hat city city recognized mutex definition graphplan actions going different cities mutually exclusive graphplan 
algorithm search algorithm hspr uses heuristic guide search regression space mutex set prune states 
choice actual search algorithm follows considerations 
want hspr solve problems large state spaces spaces states uncommon 

node generation hspr faster hsp slow comparison domain specific search algorithms 

heuristic function quite informative admissible overestimates true optimal costs 

state spaces planning quite redundant paths leading states 
constraints common hsp node generation times slower computation heuristic 
slow node generation large state spaces practically rules optimal search algorithms ida visit states finding solution 
hsp uses hillclimbing search extensions memory past states limited number plateau moves multiple restarts 
hspr wanted take advantage faster node generation systematic algorithm 
experimentation settled simple algorithm call greedy best 
bfs algorithm uses cost function delta accumulated cost number steps estimated cost real parameter 
bfs algorithm maintains nodes expansion open list nodes expanded closed additional distinction graphplan focuses parallel macro actions focus sequential primitive actions 
see sect 

hspr generates nodes second korf algorithms rubik cube puzzle generate order nodes second kor kt 
confused cost measures defined sect 
atoms 
role bfs see kor 
list 
difference bfs selecting node minimum cost open checks see best children node expanded 
selects child selects open bfs 
hspr child node appears closer goal 
performs sort hill climbing search backtracks bfs mode heuristic improved 
explored schemes discrepancies counted control lds algorithm hg didn get results 
results reported hspr algorithm described 
small changes little effect hspr problems solved 
experiments report results domains widely body difficult solvable instances 
logistic instances largest block world instances included blackbox distribution refer log bw hard block world instances refer bw 
logistics compare hspr hsp blackbox tlplan 
tlplan bk domain independent planner uses control information tailored domain provides results achievable domain 
results shown table 
time column measures cpu time seconds steps displays number actions solutions 
table shows hspr solves logistics problems seconds 
faster erratic hsp orders magnitude faster blackbox 
time cases plans produced hspr substantially smaller produced blackbox hsp 
speed hspr comparable tlplan includes fine tuned knowledge domain 
plans obtained tlplan shorter exception 
hspr better hsp domains problems including number grid mystery instances aips logistics instances logistics strips directory block world instances prodigy bw directory contain blocks respectively 
results blackbox tlplan taken bk 
results blackbox bk compatible results distribution slightly detailed 
bk blackbox run sparc ultra mhz clock ram tlplan run pentium pro mhz clock ram 
results hsp hspr obtained sparc ultra running mhz ram 
case hsp hspr individual problems converted programs compiled run 
takes order couple seconds instance 
time included table 
time steps problem hspr hsp tlplan hspr hsp tlplan log log log log log log log log log log log log log log log log log log log log log log log log log log log log log log table 
performance logistics problems 
dash indicates planner able solve problem mins mb 
hspr hsp problem blocks time steps time steps bw bw bw bw bw bw bw bw bw bw table 
performance blocks world problems 
dash indicates planner able solve problem mins mb 
competition see mcd planner 
blocks world particular hsp appears better hspr hard instances bottom table 
appeared surprising hsp hspr similar heuristics hspr visit nodes hsp 
problem additive heuristic may hspr hsp due changes size states regression search 
defined sum costs means heuristics favors smaller states large states 
necessarily bad definition children greedy bfs algorithm inadequate 
perfectly children appear closer goal parents simply contain atoms 
currently exploring possible ways problem 
problem happen hsp forward search states size 
atoms safely assumed false 
true regression search 
related hspr hsp descendants real time planner asp reported blg 
planners perform planning heuristic search heuristic search different directions different algorithms 
planner similar ideas developed independently drew mcdermott mcd 
search hspr understood consisting phases 
forward propagation compute measures estimate cost achieving atoms initial state second regression search performed measures 
phases correspondence phases graphplan bf plan graph built forward phase searched backward second 
planners related mutexes hspr borrows graphplan 
rest hspr graphplan look quite different 
argue graphplan hspr understood heuristic search planner precise heuristic function search algorithm 
point view main innovation graphplan implementation search algorithm quite efficient derivation heuristic function making mutex information 
basically argue main features graphplan understood follows 
graph graph encodes admissible heuristic hg refined version max heuristic discussed sect 
hg iff index level graph contains set atoms mutex memoized note updates heuristic function see 

mutex mutexes prune states regression search hspr refine max heuristic hg 
algorithm search algorithm version iterative deepening ida kor sum accumulated cost estimated cost hg prune nodes cost exceed current threshold 
graphplan generates nodes 

memoization updates heuristic function hg see 
resulting algorithm memory extended version ida closely corresponds algorithm sb 
heuristic node updated stored hash table search children completes solution current threshold 

parallelism graphplan searches regression space slightly different actions macro actions parallel actions composed compatible primitive actions 
solutions costs number macro actions number time steps 
heuristic hg delta admissible space provides tighter lower bound branching factor high number macro actions applicable state graphplan smart information graph generate children relevant cost exceed current threshold 
interpretation tested extracting heuristic hg graph plugging suitable version ida running space care graphplan taken generating applicable parallel actions state avoiding redundant unnecessary effort 
claim performance resulting algorithm close basic graphplan system bf small constant factor 
haven done experiment hope may want 
account correct show graphplan hsp hspr best understood heuristic search planner 
provide different perspective evaluate strengths limitations graphplan may suggest ways graphplan improved 
perspective graphplan see 
discussion reformulation hsp planning heuristic search competitive state art planners 
number problem challenges remain open 
think important better heuristics additive heuristic hsp hspr simple overestimates widely true costs 
max heuristic simple direction focuses difficult subgoals ignoring 
better heuristics needed 
node generation node generation rates hsp hspr orders magnitude slower specialized search algorithms kt kor 
implementations need improved substantially domain independent planning approaches compete domain specific search algorithms 
memory hard problems hspr may run memory 
number approaches searching limited memory discussed literature currently incorporated planners discussed 
optimal search far concerned finding reasonable plans better admissible heuristics obtained node generation rates improved ll feasible standard optimal search algorithms ida modeling languages hsp hspr tied strips language ideas generalized expressive planning languages 
gef describe functional strips language extends strips class function symbols allows codification number problems hanoi puzzle way mimics specialized representations 
current implementation heuristic function user expect able exploit richer language extracting better heuristics 
modeling point rest issues common problems encountered application domain specific heuristic search methods js 
thing distinguishes planning heuristic search classical heuristic search general declarative language encoding problems getting heuristic information 
biggest challenge declarative approach competitive specialized methods general 
part done geffner visiting irit toulouse 
lang dubois prade hospitality making visit possible 
authors korf comments related 
partial funding due 
bonet currently ucla usb fellowship 
code hspr available www ldc usb hector 
anderson smith weld 
conditional effects graphplan 
proc 
aips 
aaai press 
bf blum furst 
fast planning planning graph analysis 
proceedings ijcai montreal canada 
bg bonet geffner 
hsp planning heuristic search 
www ldc usb hector 
bk bacchus kabanza 
temporal logics express search control knowledge planning 
submitted 
www uwaterloo ca 
blg bonet geffner 
robust fast action selection mechanism planning 
proceedings aaai 
gef geffner 
functional strips general language planning problem solving 
logic ai workshop washington june 
www ldc usb hector 
hg harvey ginsberg 
limited discrepancy search 
proc 
ijcai 
js schaeffer 
domain dependent single agent search enhancements 
proc 
ijcai 
morgan kaufmann 
kambhampati lambrecht parker 
understanding extending graphplan 
proc 
th european conf 
planning lnai 
springer 
koehler nebel hoffman dimopoulos 
extending planning graphs adl subset 
proc 
th european conf 
planning volume lnai 
springer 
kor korf 
real time heuristic search 
art 
intelligence 
kor korf 
linear space best search 
art 
intelligence 
kor korf 
finding optimal solutions rubik cube pattern databases 
proceedings aaai pages 
ks kautz selman 
pushing envelope planning propositional logic stochastic search 
proceedings aaai 
ks kautz selman 
unifying sat graph planning 
proceedings ijcai 
kt korf taylor 
finding optimal solutions puzzle 
proceedings aaai pages 
mit press 
lf long fox 
efficient implementation plan graph 
jair 
mcd mcdermott 
heuristic estimator means ends analysis planning 
proc 
third int 
conf 
ai planning systems aips 
mcd mcdermott 
aips planning competition results 
ftp cs 
yale edu mcdermott results html 
nil nilsson 
principles artificial intelligence 
tioga 
pea pearl 
heuristics 
morgan kaufmann 
sb sen bagchi 
fast recursive formulations bfs allow controlled memory 
proc 
ijcai pages 
wel weld 
commitment planning 
ai magazine 
