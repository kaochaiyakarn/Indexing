lisa robot driven logical subsumption eyal amir maynard reid ii computer science department stanford university stanford ca eyal amir cs 
stanford edu describes implemented robot control system brooks style subsumption logical theories 
implements brooks style subsumption layers nonmonotonic reasoning 
describe control reasoning algorithms experiments system running nomad robot set computers 
experimental study shows commonsense theories general purpose order logic theorem provers control real time agents robots particular 
system improves traditional subsumption systems ways 
allows user send new axioms layers robot running allowing user give advice robot correct behaviors runtime 
system voting scheme deciding behavior followed 
layers synergy provide compound behavior 
system improves systems logic allows full order expressivity fully declarative 
logic promising ai ability represent virtually domain problem humans intelligent beings may interested 
approach advocated ai researchers study logical approaches represent world computer view logical theories computer logical theories reason act world 
approach successes implementations :10.1.1.54.7045
logical theories semantics robot control systems specifying highlevel control 
suggested subsumption architecture may revisit point view 
layer subsumption architecture represent behavior layer logical theory 
real time theorem provers specialized reasoners theories control mobile robot 
report empirical validation suggestion 
shows real time commonsense control ai agent achieved architecture logical theories general purpose theorem provers subsumption 
report system follows ideas set experiments executed architecture mobile robot 
architecture uses layers logical theories theorem provers put brooks style subsumption system 
layer performs autonomous theorem proving pre specified goal sending result lower layers 
nonmonotonic reasoning layer implement subsumption assuming defaults may subsumed information arrives higher layers agent sensors 
architecture implemented tested mobile robot 
exhibits real time performance performs navigation control tasks 
layers receive incorporate new axioms user run time allowing user give advice robot correct behaviors erroneous 
architecture allows incorporating layers perform diagnosis layers remember experiences layers 
previous subsumption logical theories theorem provers shown time taken theorem provers prove needed assertions low promise real time control ai agents little empirical evidence control running system 
improves results golog system fully declarative full expressiveness fol :10.1.1.54.7045
provide detailed comparison related 
logic subsumption section describes implement principles discussed 
important idea architecture borrows brooks architecture decomposing domain behavioral lines simple layers 
systems followed brooks allows layers synergy produce compound behavior 
basic machinery logic subsumption architecture lsa built layers corresponding behaviors see 
layers concurrently asynchronously 
distinguish parts logical layer body layer sensory input latches output default assumptions 
body layer fixed axiomatization describing behavior layer 
latches accept input axioms sensors higher layers replace cycle accumulate input 
output fixed set goal sentences possibly free variables proof instantiation determine behavior sanctioned layer theory including latches axioms default assumptions implement idea subsumption layers 
assumptions implemented nonmonotonic reasoning methods describe detail section 
sensors theory effectors diagram lsa 
logic subsumption system comprised set layers equipped theorem prover concurrently running processing loop 
processing loop layer proceeds follows collect pertinent sensor data assert form logical axioms 
simultaneously assert inputs higher level theories 
theorem prover layer attempts prove layer goal theory including default assumptions 
proving goal layer transmits goal instantiation layer case lowest layer robot manipulators 
axiomatization layer usually smaller system cycle computationally expensive running theorem prover compound axiomatization 
brooks system lower layers controlling basic behaviors trusted autonomous need wait results higher layers assume default able respond situations 
typically include form nonmonotonicity computationally expensive fast approximation computationally heavy form nonmonotonicity 
fast form nonmonotonicity implementing default assumptions having lower layers typically having simpler axiomatizations cycle time compute layers outputs significantly shorter complex layers 
circumscription subsumption nonmonotonic reasoning introduce defaults layer 
nonmonotonicity layer goals proved input higher layers rejected new axioms arriving higher layers 
example suitable nonmonotonic reasoning system mccarthy circumscription formula circ vv says theory parameter relations function sequences minimal element holds allowed vary order allow smaller 
roughly speaking adding formula allows say predicate true elements true 
words false default 
state complicated defaults add axioms predicates 
example want say true default add new cate symbol axiom minimize circumscription formula 
take example theory block block circumscription block varying circ block vp bock equivalent vx block 
minimizing block concluded blocks world mentioned original theory lsa circumscription distinct tasks assuming defaults layers giving semantics system layers big logical system 
implement subsumption actual system influencing semantics implementation 
second needed giving semantics directional nature complete system messages layers go direction 
implement idea subsumption layer default assumptions inputs may adjusted higher level layers 
assumptions typically take form closed world assumption cwa minimizing predicate layer input language extended cwa generalization cwa shown equivalent circumscription 
formally set axioms set nonlogical symbols predicates functions constants appear fol language built symbols language set fol sentences built symbols 
combined theory layer combination body axioms sensory latch axioms input latch axioms 
set predicates wish assert cwa 
subsumption achieved layer parallel circumscription policy circ implemented formula substituted simple external logic mechanical interference determining value minimized predicates discuss issue section 
systems nonmonotonic reasoning circumscription depending intended behavior designer choice tradeoffs time versus expressivity 
putting case circumscription nonmonotonic assertions layer tries prove specified part defaults layer layer set axioms including body latches goal goal formula specified layer vector variables open goali 
proving goal layer transmits goal layer case lowest layer robot manipulators 
summarizes algorithm illustrates process 
procedure lsa goali layer 
request sensory data robot assert sensory latch scn 
combine axioms body theo input latch basel 

theorem prover layer attempt prove circ goali default assumptions 

goali proved assignment assert input latches layer lsa algorithm 
se output obstacles output detailed look layers 
description lsa hides issues happens layer prove 
second happens input latch receiving layer time passed 
question general assume theorem prover layer works interruptions finds proof 
theorem prover find proof timeout restart prover possibly different sub space search space new latch information 
alternatively assume sensory latch input latch refreshed asynchronously prover immediately takes new information account discarding old information latch consequences may basis old latches 
second question assume latch information disappears time 
layer prove goes seconds layer longer consider axiom sent previously layer valid 
logical layers mobile robot section describe logical theories control system implemented nomad mobile robot operating multi story office building 
theories layer significant extensions modifications 
nomad cylindrical robot sonar sensors perimeter wheels control motion encoders compute estimate robot position angular heading see 
system includes logical layers 
body theory seen having main parts categorize roughly goal focused 
include axioms describe domain dependent relationships world 
distinction parts reflected system behavior moment 
description uses upper case letters denote variables lower case letters constants 
describe nomad theories goals de faults taken 
similar specified 
layer wide range motion planning top layer layer responsible high level robot motion planning 
theory seen comprising main parts sensory focused goal focused spatial relationships world 
goal focused part represents effects robot motions situation calculus 
fluent robot location action schema moveto location variable 
simple situation calculus theory convenient consider actions having duration situations histories actions initial situation 
theory single effect axiom vl lo lo lo means line sight 
frame axioms explanation closure axioms needed effect axiom specifies value fluent theory 
considered situation robot layer receives sensory input axioms 
sensory focused part theory includes representation relationships landmarks world cartesian coordinates supplied robot odometry sensors 
things robot knows landmarks axiom curr loc cartesian pl cartesian pos ix current land mark pos considered close straight line passing 
axioms spatial relationships describe relationships rooms room entrances corridors floors elevators 
example rooms visually linked entrances locations cor visually connected 
axioms describe invariants domain commutativity fact position visually connected positions visually connected positions 
layer local action planning layer responsible translating target landmarks cartesian coordinates robot planning low level interaction control elevators 
ory seen comprising main parts motion focused elevator focused spatial relationships world 
motion focused subtheory uses map simple ax translate landmarks cartesian locations 
lower layer layer know existence floors move command executed lower layers include floor parameter 
move cmd elevator focused subtheory situation calculus theory main location robot loca tions elevators locations visu ally connected 
action schemas moveto moves robot location calls elevator floor commands elevator go floor effect axioms schemas 
example vf front elev floor ss temporally close result elevator floor says point calling elevator elevators come 
situation calculus theory need frame explanation closure assump tions 
number effect axioms fluents small harm specifying frame axioms vf front elev floor front elev floor result sensory focused spatially focused theories similar ones layer 
main difference layer property locations visually connected dependent situation elevators may connected entrances 
layer destination seeking layer supports simple movements goal location 
orientation robot distance direc tion goal location concludes existence object particular location close robot layer extra object guide robot particular direction 
theory seen main parts goal focused 
sensory focused part translates subjective odometry direction robot global view robot world 
goal focused part uses goal location distance goal set quadrants decide place pushing object 
example vx qd curr loc dest quadrant qd push object qd layer obstacle avoidance layer responsible deciding low level action robot perform 
theory main parts sensory focused control focused 
sensory focused part considers sensory input sonars 
takes input asserted form axiom schema sonar number dist physical sonars translates map objects recording distance direction relative robot 
control focused part decides actions perform summing forces different objects robot exert forces correlated distances objects robot 
uses resulting force determine robot turn move ward velocities maximally avoid objects 
va asp heading angle need turn heading speed need wd angle speed asp turn asp axiom uses heading speed need fwd prevent robot turning direction different direction due sensory noise need go particular place turn get 
layer halt go lowest layer layer responsible sending actions robot halting robot 
theory similar layer additional axioms check objects robot collide 
object obj distance obj dist dist direction obj dir dir dir lr object ahead li input output lay er 
input motion sen planning 
input domain sensors plan 
inp seek sensors 
input avoid sensors 
input halt robot pu sonar odometry robot diagrammatic view lsa system controlling robot 
implementation mobile robot software dynamics system implemented architecture theorem prover cluster sun sta tions running swi prolog quintus prolog underly ing interpreter 
system runs nomad robot 
prolog technology theorem prover theorem prover iterative deepening proof space 
theory clauses necessarily disjunctive quantifiers produces set prolog horn clauses ensures sound unification produced avoids negation failure proofs produced prolog inference algorithm 
sound complete refutation fol general order sentences translated clausal form usual way skolemization 
implementation written classes allow ing prover specific implementation layer superclass quintus prolog layer swi swi quintus prolog bug prevents running layers crashing 
layers faster swi 
implementation system www formal 
stanford edu eyal 
prolog layer input layer ex allows user send new axioms running layers 
executable consists layer object central piece executable objects communication tcp ip embedded theorem prover case means object file consisting prolog implementation compiled 
separate layer communication robot translates layer proven goals robot motion commands sends sensory information layers request 
time layer run whichever theorem prover implementation configuration file specifies theory initially load communication pattern layer 
communications part specifies layers accept axioms host port layer mode communication synchronous request data explicitly asynchronous data latch 
initializing communication initializes theorem prover loads body theory 
runs infinite loop layer reads messages ports asserts latest ones port theorem prover layer attempts prove goal successful sends result proof listening layers 
information layer reads ports overrides previous latch data 
information arrived specific port reuses information arrived previously 
allows layers different frequencies confusing delay communication computation directive overrides latest information layer 
avoid ambiguity layers prove layer failed failed prove goal depending defaults asserted layer 
case proved assertion sent listening layers message override previously received assertions 
lisa behavior ran experiments lisa goals traveling different rooms building 
presents average total time measurements layer experiments final adds statistics breakdown timing tasks scenarios 
shows current implementation somewhat slow truly reactive behavior 
currently working speeding components system 
plan report improved behavior final version 
experiment lisa starts running logical layers nomad layer input layer 
lisa map layers 
reset robot position heading matches map 
input layer tell robot goal navigate rooms lab 
takes seconds minute layer finds plan current location sends goal landmark layer 
layer instantaneously translates landmark goal location sends layer 
layer provides pushing object layer 
layer sends motion command layer layer executes direct obstacles front 
average time seconds cycle layers 
bars layer correspond total cpu time cycle cpu time proofs cycle total clock time cycle clock time proofs cycle order left right 
robot typically starts turning faces direction intends go proceeds forward target 
transition turning moving forward smooth delays 
experiments lisa took seconds minutes move landmark land marks approximately meters apart obstacles close path 
put obstacles chairs humans front robot managed go colliding 
earlier experiments improved theory layer lisa got lost 
obstacle put lisa path go time layer tried plan path goal know lisa close landmark may moved significantly away path landmark 
case able input layer send axiom lisa layer telling lisa landmarks 
currently lisa layer re uses proven goal landmark default sent layer layer fails 
problem consistent semantics theoretical layers memory state 
plan extend system semantics models belief update allow memory belief change consistent manner 
discrepancy measurements real time behavior system 
measurements system running logs registering advance proofs messages required collect statistics runs 
mechanisms typically slow system factor 
tuning system theorem provers notoriously slow main reasons usually time sensitive applications 
implementation able sidestep difficulty small simple theories fast approximation nonmonotonic reasoning conclude defaults 
attribute speed achieved system optimizations mention 
experiments clear bottleneck layers concluding proof 
layer terminate cycle start new cycle new sensory information new latch information 
reason layer associated limit depth search allowed proof goal 
proof depth conclude run time purpose proof 
depth limit determined experimentally specified goal formula 
depth limit implements rough approximation defaults 
example layer implements cwa objects aggregating objects find specified proof depth 
assumption consider depth limit proof goal default says goal false default 
mechanism allows provide islands search space prover 
example layer try prove robot currently particular location 
succeed add assertion temporary new axiom prover landmark robot 
cuts depth proof search space significant influence proof time cuts proof time cases factor approximately 
applying caching proof get force similar effect 
proof layer re proves get force times caching improved performance layer significantly approximately seconds seconds proof sun ultrasparc 
semantic attachment layer predicate get force 
embodied function re force vector strength direction 
calls prolog setof operator collect objects existence proofs computes sum forces contributed object 
cwa achieved limiting proofs longer specified constant described 
related compared approaches robot control logic lisa full fol theorem provers reasoning 
presentation robot control architecture built theorem provers suitable realizing complex tasks real time 
shanahan describes map building process abduction implements theory algorithm proved abductive semantics 
baral tran define control modules form stimulus response agents relating family action languages 
provide way check module correct respect action theory provide algorithm create agent action theory 
systems golog project planner computes plans golog program line letting robot execute nondeterministic golog program line 
logic situation calculus give semantics golog programs 
somewhat earlier line concentrated compilation logical description control languages 
compared system allow declarative representation reasoning real time enabling full power order logic 
able send logical formulae advice robot run time property seen knowledge shakey robot 
compared subsumption systems robot control system allows user send new axioms layers robot running 
allows user give advice robot correct behaviors runtime 
addition system voting scheme deciding behavior followed 
layers synergy sending messages providing compound behavior 
clearly solved age old problems theorem provers limitations approach 
proper tuning advances automated reasoning kind system support high level reasoning reactive offering major advantage robotic systems systems wish perform commonsense reasoning online 
shown theorem provers robot control employing layered architecture 
demonstrated architecture versatility theorem provers allow realize complex tasks keeping individual theories simple efficient theorem proving 
important avenues extending system 
memory state added system easily fit current semantics 
plan belief update semantics extend framework allow modifications defaults change beliefs robot diagnosis robot behavior whereabouts determining location 
wish create reactive systems automatically order theories describe intended behavior 
plan pursue goals near 
acknowledgments wish mark stickel allowing sources prolog lisp providing helpful answers inquiries regarding 
nils nilsson jean claude latombe allowing nomad robots ctor lot help advice occasionally fixing robots 
research supported afosr af national physical science consortium fellowship 
amir maynard reid 
logic tion architecture 
proc 
sixteenth international joint conference artificial intelligence ijcai pages 
tran 
relating theories actions reactive control 
electronic transactions artificial intelligence 
review 
brooks 
robust layered control system mobile robot 
ieee journal robotics automation ra march 
brooks 
elephants don play chess 
journal robotics autonomous systems june 
brooks flynn 
robot beings 
proceedings ieee rsj int conference intelligent robotics systems iros pages 
brooks stein 
building brains bod ies 
autonomous robots 
gelfond lifschitz 
representing actions change logic programs 
journal logic programming 
gelfond przymusinska przymusinski 
relationship circumscription negation failure 
artificial intelligence feb 
giacomo reiter soutchanski 
execution monitoring high level robot programs 
cohn schubert shapiro editors proceedings th international conference knowledge representation reasoning kr pages 
morgan kaufmann 
horswill 
polly vision artificial agent 
proceedings th national conference artificial intelligence pages menlo park ca usa july 
aaai press 
kaelbling 
rex symbolic language design parallel implementation embedded systems 
proceedings aiaa conference computers aerospace pages 
kaelbling 
architecture intelligent reactive systems 
allen hendler tate editors readings planning pages 
morgan kaufmann publishers san mateo ca usa 
kaelbling rosenschein 
action planning embedded agents 
robotics autonomous systems june 
levesque reiter lin :10.1.1.54.7045
golog logic programming language dynamic domains 
journal logic programming 

integration representation goal driven behavior robots 
ieee transactions robotics automation june 
mccarthy 
programs common sense 
mechanisation thought processes proceedings symposium national physics laboratory pages london 

reprinted mcc 
mccarthy 
applications circumscription formalizing common sense knowledge 
artificial intelligence 
reprinted 
mccarthy 
common sense papers john mccarthy edited lifschitz 
ablex 
mccarthy hayes 
philosophical problems standpoint artificial intelligence 
meltzer michie editors machine intelligence pages 
edinburgh university press 
nilsson 
shakey robot 
technical report sri international menlo park california 
shanahan 
robotics common sense infor matic situation 
proceedings ecai pages 
stickel 
prolog technology theorem prover new exposition implementation prolog 
theoretical computer science 
