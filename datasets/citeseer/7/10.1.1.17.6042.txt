methods metrics cold start recommendations andrew popescul lyle ungar university pennsylvania dept computer science south rd st philadelphia pa ais popescul ungar gradient cis upenn edu david pennock nec research institute independence way princeton nj usa research nj nec com general terms algorithms experimentation performance categories subject descriptors information systems models principals miscellaneous computing methodologies artificial intelligence learning mathematics computing probability statistics contingency table analysis developed method recommending items combines content collaborative data single probabilistic framework 
benchmark algorithm nave bayes classifier cold start problem wish recommend items community rated 
systematically explore testing methodologies publicly available data set explain methods apply specific real world applications 
advocate heuristic recommenders benchmarking give competent baseline performance 
introduce new performance metric croc curve demonstrate empirically various components testing strategy combine obtain deeper understanding performance characteristics recommender systems 
emphasis testing cold start recommending methods recommending evaluation general 
keywords recommender systems collaborative filtering content filtering information retrieval graphical models performance evaluation permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
sigir august tampere finland 
copyright acm 

recommender systems suggest items interest users explicit implicit preferences preferences users user item attributes 
example movie recommender combine explicit ratings data bob rates implicit data mary purchased natural user demographic information mary female movie content information scream marketed horror movie recommendations specific users 
pure collaborative filtering methods base recommendations community preferences user ratings purchase histories ignoring user item attributes demographics product descriptions :10.1.1.21.4665
hand pure content filtering information filtering methods typically match query words user data item attribute information ignoring data users :10.1.1.16.4348
hybrid algorithms combine techniques 
content usually refers descriptive words associated item term generally refer form item attribute information including example list actors movie 
di cult common problem recommender system cold start problem recommendations required items data set rated 
pure collaborative filtering help setting user preference information available form basis recommendations 
content information help bridge gap existing items new items inferring similarities 
recommendations new items appear similar recommended items 
evaluate performance machine learning algorithms cold start prediction 
probabilistic model combines content collaborative information phrase cold start describe situation known customer preferences start little purchase history 
problem making recommendations new users thought cold start problem 
concentrate new item problem new user problem symmetric access user attribute demographic data 
new user problem attribute data essentially falls framework pure information filtering information retrieval 
expectation maximization em learning fit model data 
perform benchmarking movie ratings data compare nave bayes method proposed task :10.1.1.16.6429
key questions evaluating recommender systems testbed data predict grade performance baseline compare 
identify useful components predict data set show past focussed 
deciding metric evaluating performance borrowed heavily literature addition developing tool croc curve 
baseline measures performance advocate heuristic recommenders algorithms trivial implement give performance random 
find heuristic recommenders surprisingly cases outperforming sophisticated methods 
testing goal uncover informative characterization performance method nave bayes algorithm 

background related early recommender systems pure collaborative filters computed pairwise similarities users recommended items similarity weighted average 
breese refer class algorithms memory algorithms :10.1.1.21.4665
subsequent authors employed variety techniques collaborative filtering including hard clustering users classes simultaneously hard clustering users items soft clustering users items singular value decomposition inferring item item similarities probabilistic modeling machine learning :10.1.1.38.6498:10.1.1.21.4665:10.1.1.21.8827
authors turned designing hybrid recommender systems combine collaborative content information various ways 
date comparisons algorithms empirical qualitative nature worst case performance bounds derived general principles advocated fundamental limitations explicated :10.1.1.38.5499
techniques suggested evaluating recommender system performance include mean average error receiver operator characteristic roc curves ranked list metrics variants precision recall statistics :10.1.1.21.4665
extend hybrid recommender system popescul average content data model fashion :10.1.1.21.8827
evaluating method introduce novel testing strategies metrics discover fine grain characterization performance leading actionable 

way aspect model predicting association person movie employ latent class variable framework called aspect model designed contingency table smoothing 
shows graphical model description aspect model person movie contingency table table explains notation graphical model descriptions movie recommendation task 
pure collaborative filtering model graphical model person movie aspect model person actor aspect model 
particular drawings vertically arrows point precisely bayesian belief networks graphs indicate belief network semantics 
random variable object interpretation person movie actor latent class table notation model descriptions 
aspect model encodes probability distribution person movie pair 
observations consist tuples recording person seen rated movie store observations count matrix contingency table rows ranging people columns ranging movies vice versa 
data may include multiple observations identical lyle saw memento twice 
observation increment count appropriate contingency table cell matrix entry 
nave probability estimate cell simply observed frequency events cell 
notice method assigning probabilities empty cell implies zero probability corresponding person seeing corresponding movie clearly unrealistic inference 
aspect model hypothesizes existence hidden latent cause nity particular style movies motivates person watch movie generative model semantics person chooses latent class turn determines movie watched 
choice movie assumed independent knowledge hidden sum possible choices define distribution 
parameters correspond processes stochastically choosing latent class stochastically choosing values thought smoothed estimates probability distribution contingency table 
latent variables perform smoothing manner maximizes model likelihood keeping estimates close empirical distribution model creates smoothed estimates values interpretations contingency table analysis 
parameters calculated tempered em algorithm described 
recommendations person 
source code fitting way aspect model available online 
training take minutes pentium ii computer mb ram 
trained method generate user recommendations fraction second 
adding content information recommender system described far pure collaborative filtering algorithm developed hofmann puzicha 
pure collaborative filtering aspect model wish experiment cold start problem 
person actor aspect model combines collaborative content data model 
model hope casts actors act surrogates movies 
recommend movies user similar cast movies user rated 
generate dataset collaborative filtering model collaborative observations creating set observations actor movie newly formed observations independent breaking assumption aspect model 
experiments person actor aspect model strengths set potential disadvantages broken independence assumptions example see :10.1.1.21.8827
folding notice person actor aspect model movie object event space 
order recommend movie create new movie object set actors appear movie 
pseudo movie placed latent space content information 
hofmann folding algorithm originally fold term queries document word aspect model 
example suppose fit person actor model want fold new movie 
create new set parameters actors movie evidence placing movie latent space manner maximizes likelihood movie 
original parameters held constant process 
exact em algorithm operates follows step step recommendations desire estimated value need estimate 
currently experimenting bayesian weighting movie queries computes average various actors movie 

naive bayes recommender alternative aspect model bag nave bayes text classifier developed applied person actor data 
person separate nave bayes classifier trained collaborative information 
pure content method capable cold start recommendation 
model trained laplace smoothing 
ratings prediction computed probability function class rating 
embedded formula belief movies data set rated 
words nave bayes generative model predict item won rated 
tried consistent experiments melville applied classifier movie dataset similar duplicate testing strategies adding :10.1.1.16.6429

testing methodology data primarily comes movielens data set assembled grouplens project consisting actual ratings group users 
core data set list movie ratings grouped person 
person rates movies 
movielens observations consist rating inclusive 
order obtain actor director information downloaded relevant pages internet movie database www imdb com 
speed model fitting considering actors top eliminating actors appear movie 
experiments randomly split movies training set test set 
manner create set movies observations training set 
test movies test set total movies data set 
people recommendations average observations person entire training set 
observed events test set movies possible total 
test set observations rating higher 
results reported come test set order facilitate comparison 
testing various recommender systems static data set movielens data important place test results proper context may want implement systems 
identified modes testing data set correspond di erent realworld applications 
statements performance recommender system sort recommendation task simulated testing 
di erences testing modes linked role rating versus purchase data recommendation problem 
may wish predict customer purchase item customer purchase item 
final task impute guess customer rating item purchased 
testing modes elaborated 

weak occurrence wo prediction wo prediction refers prediction data purchase history purchase necessarily indication satisfaction purchase indication implicit need desire item 
movielens data predict person rated movie task analogous predicting customer purchase 
consider rating events occur training set domains don recommend user owns rated 
wo prediction appropriate domains explicit rating information available satisfied recommend products user purchase 
past implicit evaluation includes :10.1.1.21.8827
refer movielens observations stripped rating component wo data 

rating prediction rating prediction wish predict wo rating components observation simultaneously 
movielens benchmarking classify person movie pair doesn occur training observations groups rated 
rate 
condition imply person rate movie 

rating imputation rating imputation prediction ratings items wo observations 
concrete terms ask person seen movie rate 
prior knowledge person seen means wo observation ect 
goal guess best rating 
implement rating imputation testing held observations movielens data predicting ratings set 
real world applications may data sets wo observations available large quantities rating component missing random 
rating imputation measures success filling missing values 
rating imputation previously evaluate recommender system performance :10.1.1.16.6429

evaluation metrics deploying actual recommender system need decide recommend 
instance application may need recommend products customer database number may choose desired false positive rate 
applications may permitted recommend greater number products customers understand better 
section identify metrics measure success mode recommending show results section metrics data uncovers fine grain recommender system characteristics 
herlocker recommend receiver operator characteristic roc curves measure evaluate recommender systems 
call method herlocker global roc groc curve order distinguish customer roc croc variation shortly 
roc curve curve showing hit rates di erent classification thresholds 
currently machine learning researchers roc curves evaluate binary classification algorithms 
employ roc curves context algorithm says person rated movie predicted positive outcome 
area roc curve performance measure perfect performance indicated area random guessing indicated area 
roc curves nearly equivalent precision recall curves information retrieval community lift curves marketing literature 
terms precision recall analogous specificity sensitivity respectively terms roc curves 
sensitivity hit rate equal percentage positive values threshold 
specificity rate equal fraction negative values threshold 
rate hit rate plotted axis respectively 
varying threshold generates series points forming curve 
connect points plots form curve order figures readable 
global roc groc curve measure performance allowed recommend users 
groc curves constructed manner 
order predictions pred list magnitude imposing ordering 
pick calculate hit rates caused predicting top magnitude plot point 
selecting di erent incrementing fixed amount draw curve graph 
customer roc croc curves measure performance recommender system constrained recommend number items user 
groc curve croc curve special case roc curve constructed analogous manner 
person order predictions pred list magnitude imposing ordering 
pick calculate global hit rates caused recommending top predicted movies person plot point 
vary groc case 
groc curve perfect recommender generate curve area 
croc curve case 
see imagine omniscient recommender data set people person sees movies person sees movies person sees movies 
recommend movies person false positives person lowering area curve 
particular data set plot curve calculate area omniscient recommender order facilitate comparison 
groc croc curves important focus attention left hand side graph 
portion graph focusing low false positive rate 
applications recommender systems desirable obtain best possible performance low false positive region curve 

results test person actor aspect model nave bayes method 
conduct wo ratings imputation methods commonly evaluate recommender systems previous literature :10.1.1.16.6429
preliminary experiments nave bayes confirmed earlier observations nave bayes sensitive sparsity rated movies type data results shown :10.1.1.16.6429
order better duplicate prior ratings imputation nave bayes best possible light perform ratings imputation users rated movies training set :10.1.1.16.6429
train models separately precedent aspect model trained wo data nave bayes method trained corresponding ratings data 
implicit groc croc curve performance random recommender degree line area underneath 
feel applications superior baseline developed 
instance recommend users average rate movies higher order obtain better random rating imputation groc performance 
call recommendation algorithms heuristic recommenders simple tricks obtain performance 
possible propose include heuristic recommenders analysis 
weak occurrence testing shows groc croc plots comparing person actor aspect model nave bayes recommender groc case heuristic recommender wo prediction task 
heuristic recommender groc plot created substituting total number movies seen person recommender output pair 
words list users relative activity rating movielens site recommend movies users order 
note heuristic recommender performs nearly aspect model region interest far left hand side graph 
shows croc plots comparing person actor aspect nave bayes methods wo prediction task heuristic recommender 
obvious heuristic recommender random recommendation due cold start problem 
note machine learning methods perform noticeably better area indicative random prediction croc groc metrics 
rating imputation testing shows groc croc plots comparing person actor aspect model nave bayes recommender groc case heuristic recommender rating imputation task 
predict user rate movie higher 
technique evaluation called roc 
heuristic recommender created mean rating person predicted rating surprisingly mean rating method outperforms methods groc standards 
wo prediction task obvious heuristic recommender deploy croc plot implicit random recommender area 
discussion aspect model performs better nave bayes method wo prediction task reverse true ratings imputation task 
surprising aspect model trained solely wo data nave bayes recommender designed wo prediction 
methods need altered order optimize performance alternative test 
re designing aspect model training test procedure ratings imputation ratings prediction subject 
current experiments test degree wo observations su cient prediction ratings imputation task benchmarking aspect model nave bayes 
addition test rating classification recommenders embodied nave bayes method predict wo observations proposed aspect model 
empirical evaluation methods point interesting subtleties occur benchmarking recommender systems 
groc plots simple methods competitive sophisticated aspect model nave bayes methods 
ratings imputation case mean rating user single best predictor ratings imputation groc criteria 
likewise number movies person rated method wo prediction groc plot 
intelligent heuristic recommenders ones described key ingredient interpreting performance groc curve 
past performance results movielens similar datasets employ groc curve including evaluated observation mind :10.1.1.16.6429
natural question ask groc croc curve needed evaluation 
hypothesis suitable heuristic recommender chosen relative performance groc curve graph su cient tell story recommender system performance characteristics 
results show case particular empirical results demonstrate groc croc curves predictive power give conflicting measures 
see compare relative performance user activity recommender aspect model recommender wo prediction task 
groc plot methods nearly identical characteristics 
groc croc metrics necessarily correlated expect similar behavior croc graph wo prediction task 
note croc graph wo prediction task include user activity recommender method produces perfectly random performance area croc standards 
contrast aspect model performance area random 
groc croc graphs point aspect model nearly identical global groc performance heuristic recommender recommending diverse group people 
similar situation visible ratings imputation groc croc plots 
say deciding heuristic recommender aspect model wo prediction 
greater customer coverage priority choose weak occurrence groc plot specificity sensitivity aspect model area nb content area user activity area weak occurrence croc plot specificity aspect model area nb content area perfect rating area groc croc plots comparing person actor aspect model nave bayes heuristic recommender weak occurrence wo prediction task 
generate groc plot points increment number predictions 
generate croc plot points increment number movies predicted person 
rating imputation groc plot specificity sensitivity aspect model area nb content area user mean rating area rating imputation croc plot specificity aspect model area nb content area perfect recommender area groc croc plots comparing person actor aspect model nave bayes heuristic recommender rating imputation task 
generate groc plot points increment number predictions 
generate croc plot points increment number movies predicted person 
model croc plot methods perform equivalently groc plot 
return groc plot determine decision threshold false positive rate calculated rate groc plot 

proposed aspect model latent variable method cold start recommending 
aspect model combines collaborative content information model fitting 
folding algorithm allows predictions unrated items content data averaging set content data actors associate item movie 
method tested nave bayes heuristic recommenders publicly available movie ratings data 
tested methods weak occurrence ratings imputation tasks evaluating performance di erent methods recommending embodied groc croc curve metrics 
surprising outcome empirical evaluation performance called heuristic recommenders groc curves 
methods ective feel groc curve plots include appropriate heuristic predictors order give perspective actual gain performance caused sophisticated machine learning techniques 
cases feasible include heuristic recommenders croc curves 
instance average rating movie training set rating prediction 
operating cold start sort information 
fortunately groc croc curves built baselines random recommender area 
combination groc croc testing heuristic recommenders tells sense deploy aspect model cold start task 
wo prediction task recommend aspect model heuristic recommender applications important recommend users possible 
real world success embodied exactly groc curve feel heuristic recommender job easiest implement 
ratings imputation task draw regarding ectiveness nave bayes method corresponding heuristic recommender 
results demonstrate value groc croc curves evaluating recommender system performance 
show aspect model recommender outperforms alternatives link testing performance real world problems 
groc croc curves measure performance specific real world task 
situations evaluation goal characterize performance recommender system generally groc croc curves needed conflicting measures recommender system performance 

acknowledgments andrew supported nih training computational genomics hg 
popescul supported part nec research institute 

basu hirsh cohen 
recommendation classification social content information recommendation 
proceedings fifteenth national conference artificial intelligence pages 
billsus pazzani 
learning collaborative information filters 
proceedings fifteenth international conference machine learning pages 
breese heckerman kadie :10.1.1.21.4665
empirical analysis predictive algorithms collaborative filtering 
proceedings fourteenth conference uncertainty artificial intelligence pages 
claypool gokhale miranda 
combining content collaborative filters online newspaper 
proceedings acm sigir workshop recommender systems implementation evaluation 
cohen schapire singer 
learning order things 
journal artificial intelligence research 
lewis madigan 
bayesian mixed ect models recommender systems 
acm sigir workshop recommender systems algorithms evaluation 
freund iyer schapire singer 
cient boosting algorithm combining preferences 
proceedings fifteenth international conference machine learning pages 
schafer konstan borchers sarwar herlocker riedl 
combining collaborative filtering personal agents better recommendations 
proceedings sixteenth national conference artificial intelligence pages 
guo 
soap live recommendations social agents 
fifth delos workshop filtering collaborative filtering budapest 
heckerman chickering meek kadie 
dependency networks collaborative filtering data visualization 
proceedings sixteenth conference uncertainty artificial intelligence pages 
herlocker konstan borchers riedl 
algorithmic framework performing collaborative filtering 
proceedings conference research development information retrieval 
hill stead rosenstein furnas 
recommending evaluating choices virtual community 
proceedings conference human factors computing systems pages 
hofmann 
probabilistic latent semantic indexing 
nd annual international acm sigir conference research development information retrieval pages 
hofmann puzicha 
latent class models collaborative filtering 
proceedings sixteenth international joint conference artificial intelligence pages 
konstan miller maltz herlocker gordon riedl 
grouplens applying collaborative filtering usenet news 
communications acm 
melville mooney nagarajan :10.1.1.16.6429
content boosted collaborative filtering 
proceedings sigir workshop recommender systems 
mooney roy 
content book recommending learning text categorization 
proceedings fifth acm conference digital libraries pages 
nakamura abe 
collaborative filtering weighted majority prediction algorithms 
proceedings fifteenth international conference machine learning pages 
pennock horvitz giles 
social choice theory recommender systems analysis axiomatic foundations collaborative filtering 
proceedings seventeenth national conference artificial intelligence pages 
pennock horvitz lawrence giles 
collaborative filtering personality diagnosis hybrid memory model approach 
proceedings sixteenth conference uncertainty artificial intelligence pages 
popescul ungar pennock lawrence :10.1.1.21.8827
probabilistic models unified collaborative content recommendation sparse data environments 
proceedings seventeenth conference uncertainty artificial intelligence 
resnick iacovou suchak bergstrom riedl 
grouplens open architecture collaborative filtering netnews 
proceedings acm conference computer supported cooperative pages 
resnick varian 
recommender systems 
communications acm 
salton mcgill 
modern information retrieval 
mcgraw hill 
sarwar karypis konstan riedl 
analysis recommender algorithms commerce 
proceedings nd acm conference electronic commerce pages 
sarwar karypis konstan riedl 
application dimensionality reduction recommender system case study 
acm webkdd web mining commerce workshop 
sarwar karypis konstan riedl 
item collaborative filtering recommendation algorithms 
proceedings tenth international world wide web conference pages 
popescul ungar 
way aspect model implementation 
technical report ms cis department computer information science university pennsylvania 
popescul ungar pennock 
generative models cold start recommendations 
proceedings sigir workshop recommender systems 
shardanand maes 
social information filtering algorithms automating word mouth 
proceedings conference human factors computing systems pages 
ungar foster 
clustering methods collaborative filtering 
workshop recommendation systems fifteenth national conference artificial intelligence 
