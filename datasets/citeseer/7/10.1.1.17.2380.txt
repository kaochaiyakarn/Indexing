need system level support ad hoc sensor networks barr john daniel du danny kim bing zhou emin sirer department computer science cornell university ithaca ny cs cornell edu ad hoc sensor networks important emerging niche poorly supported existing operating systems 
argue network wide energy management primary concern ad hoc networks functionality best provided systems layer 
currently designing implementing distributed power aware adaptive operating system called specifically targeting ad hoc sensor networks 
provides single system image unified java virtual machine nodes comprise ad hoc network 
automatically transparently partitioning applications components dynamically placing components nodes ad hoc network system reduces energy consumption avoids hotspots increases system longevity 
show systems approach automatic object placement ad hoc network increase system longevity factor 

motivation proliferation cheap increasingly powerful mobile devices sensors ad hoc networking emerged significant application domain 
ad hoc applications appear naturally mobile environments fixed networking infrastructure unavailable impractical 
examples ad hoc applications include large scale environmental data collection sensor networks coordinated battlefield operations involving mobile computers ubiquitous computing interactive smart environments 
despite importance emerging application domains developing applications ad hoc sensor networks remains difficult poorly supported existing operating systems 
inherent characteristics ad hoc computing environment developing applications ad hoc networks particularly difficult ad hoc networks limited resources battery capacity exhibit frequent drastic variation key system metrics bandwidth connectivity 
form factor limitations miniaturized devices place tight constraints available energy node hill 
addition network topology available power bandwidth vary rapidly orders magnitude satyanarayanan 
applications need adapt external changes resource constrained frequently varying ad hoc environment internal changes initiated applications 
instance sensor application tracking object moves time may need relocate event filtering component closer object reduce network communication 
addition application may change behavior transition defensive offensive mode application may modify communication pattern necessitate reorganization components deployed network optimal performance 
argue network wide energy management best provided distributed operating system 
describe operating system designed specifically support adaptation needs ad hoc applications 
motivation new system stems lack support ad hoc networking applications 
specifically current state art operating systems provide network wide adaptation mechanisms policies applications need order address resource limitations variations 
force ad hoc applications treat network system systems collection disparate autonomous supported part onr 
views contained authors interpreted necessarily representing official policies endorsements expressed implied organizations government 
computers provide unifying system abstraction 
absence unifying system applications need provide mechanisms policies adaptation separately independently 
consequently existing applications rely static assignment components nodes manual techniques migrate objects response change 
approaches ultimately lead inefficient energy usage premature system failure 
statically assigning node functionality results nonadaptive fragile energy inefficient systems 
application fail soon critical nodes dataflow path stall run power move communication range 
turn locally optimal manual policies object mobility pursued individual applications lead globally energy inefficient behavior multiple applications interact ad hoc network 
example local misuse battery central hub node relaying messages may disconnect large parts network adverse global effects 

operating system support ad hoc networks currently designing implementing distributed adaptive power aware operating system ad hoc networks 
goal provide unifying stand system ad hoc networks properties adaptive system adapt resource constraints changes underlying network rapid temporally stable manner 
particular adapt changes network topology application behavior available resources power node 
efficient policies mechanisms adaptation systems layer yield power utilization increase system longevity excessive communication power consumption 
general purpose system execute applications networks nodes heterogeneous resources capabilities ad hoc fixed nodes 
changes underlying hardware software choices network infrastructure protocols topology physical environmental characteristics require programmer involvement 
scalable system underlying algorithms optimization adaptation single node large ad hoc network 
achieves goals providing single system image ssi 
abstraction provide applications entire network single unified java virtual machine system comprised static dynamic component distributed virtual machine architecture sirer 
static partitioning service partitions regular java applications intended single jvm objects distributed network 
rewrites application byte code level injects necessary instructions retain original application semantics rewritten applications distributed nodes 
dynamic runtime component node provides services application monitoring object creation invocation migration 
single system image abstraction suited ad hoc networks provides advantages 
presents operating system great freedom object placement essential efficient adaptive scalable execution applications 
high level ssi interface separates object location program execution semantics enables move objects best suited nodes network 
example transparently migrate filter component node closest data sources reduce network communication 
second single system image operating system greatly simplifies application development 
manual techniques adapting applications changes environment hard develop error prone platform specific 
application needs re implement migration monitoring communication mechanisms correctly hardware platform 
contrast enables distributed execution ordinary monolithic java applications 
order ensure achieves performance better handwritten code auxiliary interface provided runtime allows programmers explicitly direct object placement overriding automatic object placement decisions 

automatic object migration system longevity core transparent network wide operating system consists algorithms deciding move application components 
uses practical online power aware algorithms called reduce application energy consumption increase system longevity 
consequently application components correspond java objects system terms interchangeably 
algorithms share basic approach shorten mean path length data packets sent components application automatically moving communicating objects nodes topologically closer 
process works profiling communication pattern applications discrete asynchronous epochs 
node decides locally independently move application components epoch 
profiles communication physical link level migrates components physical links hop time direction greatest communication 
operates network level migrates components multiple hops time directly host object communicates 
require knowledge regarding hop sender packet respectively 
shows automatic transparent object placement techniques improve system longevity reducing energy utilization 
simulation examine behavior ad hoc network consisting sensors randomly scattered field fast packet level large scale ad hoc network simulator developed 
graph shows number nodes run power function time different migration policies 
static corresponds static assignment objects nodes characteristic non adaptive applications 
random adaptive algorithm balances load network avoids early failures due communication hotspots moving components randomly chosen nodes epoch 
perform automatic object migration scheme outlined 
shows improve system longevity fold compared random fold compared static 
data points curves indicate ad hoc sensor network application fails migration policy 
failure defined occur area field longer sensed due lost network connectivity 
static placement strategy failure critical nodes results system failure static migrate components response loss 
random fares better avoids hotspots effectively distributes network load 
significantly outperform take application communication behavior network resource constraints account sirer 
power aware adaptation automatic transparent object placement lead significant gains system longevity 
node network packet node sensing data node running event processing component automatically migrating components closer data sources sensor network increases system longevity decreases power consumption reducing total network communication cost 
moves hop direction greatest communication moves directly host sending packets 
number sensors drained static random epoch migration policies improve system longevity energy utilization network connectivity scalability 

status current system provides image java virtual machine 
application partitioning service implemented rewriter sirer modifies object creation invocation field access instructions operate ad hoc network 
rely java rmi mechanisms invocation kernel aodv protocol perkins provides packet forwarding linux user level protocol implementation provides functionality windows 
addition developing native jvm resource limited devices 

related builds research ad hoc routing protocols node power conservation distributed object systems mobile computing 
prior research ad hoc networks focused multi hop routing algorithms dsdv dsr aodv zrp tora cedar perkins bhagwat broch perkins haas pearlman park corson sivakumar see royer toh survey 
algorithms move data source destinations efficiently possible presence underlying network topology changes 
focus optimizing route metrics latency hop count power leaving source destination endpoints fixed 
complements extracts additional significant power gains moving communication endpoints 
prior examined minimize power consumption independent host various mechanisms grunwald weiser farkas douglis helmbold stemm katz including low power processor modes disk spin policies adapting wireless transmission strength selectively turning unused devices 
mechanisms saving node power complementary network wide adaptation 
vahdat treat energy class system resource extend management entire ad hoc network 
mobile computing projects examined mobility toolkits frameworks code libraries facilitate construction mobile applications 
provide services disconnected mobile operation joseph quality service tradeoffs campbell synchronization data management mascolo 
shares goals projects differs offering complete operating system unifying system abstraction 
systems emerald jul thor liskov globe van steen pioneered efficient practical mechanisms object distribution 
object distribution extends mechanisms policies power aware adaptation targeted ad hoc network model 
directed diffusion heidemann proposes framework application specific labeling data gradient routing filtering packets network stateless components specified constrained language 
extends supporting components carry state enabling components written general purpose language 
consequently perform state requiring operations aggregation network 

summary advocate operating system support ad hoc sensor networks 
contend network wide power aware operating system efficiently fairly manage limited timevarying resources inherent ad hoc application environments 
describe ad hoc operating system provides single system abstraction ad hoc network applications 
works automatically partitioning applications networked components transparently migrating components nodes network 
shown automatic object placement policies reduce energy consumption increase system longevity 
large scale simulation results demonstrate wins factor compared energy oblivious techniques adaptation 
compared system systems model characterizes current state art single system image provides necessary unifying abstraction adaptive power efficient platform independent applications 
broch broch johnson maltz dynamic source routing protocol mobile ad hoc networks 
mobile computing 
campbell campbell 
liao 
toolkit programmable support adaptive mobile networking 
ieee personal magazine 
douglis fred douglis krishnan brian bershad 
adaptive disk spin policies mobile computers 
nd usenix symposium mobile location independent computing april 
ellis carla ellis 
case higher level power management 
proceedings th workshop hot topics oper ating systems rio rico az march 
farkas keith farkas jason flinn back dirk grunwald jennifer ann anderson 
quantifying energy consumption pocket computer java virtual machine 
measurement modeling computer systems pp 
grunwald grunwald levis farkas neufeld 
policies dynamic clock scheduling 
proceedings th osdi san diego ca october 
haas pearlman haas pearlman zone routing protocol zrp ad hoc networks internet draft 
mobile ad hoc network manet working group ietf aug 
heidemann john heidemann fabio silva intanagonwiwat ramesh govindan deborah estrin deepak ganesan 
building efficient wireless sensor networks low level naming 
proceedings th symposium operating systems principles lake louise alberta october 
helmbold helmbold long 
dynamic disk spin technique mobile computing 
proceedings acm international conference mobile computing nov 
hill jason hill robert szewczyk alec woo seth hollar david culler pister 
system architecture directions network sensors 
proceedings conference architecture support programming languages operating systems 
joseph anthony joseph alan de joshua tauber david gifford frans kaashoek rover toolkit mobile information access 
proceedings fifteenth symposium operating system principles december 
jul eric jul henry levy norman hutchinson andrew black 
fine grained mobility emerald system 
acm transactions computer systems feb 
liskov liskov adya castro day gruber maheshwari myers shrira 
safe efficient sharing persistent objects thor 
proceedings sigmod montreal canada june 
mascolo mascolo capra wolfgang emmerich 
xmiddle middleware ad hoc networks 
ucl cs research note 
park corson vincent park scott corson 
temporally ordered routing algorithm tora version functional specification 
internet draft draft ietf manet tora spec 
txt august 
perkins perkins ad hoc demand distance vector aodv routing 
ietf internet draft dec 
perkins bhagwat perkins bhagwat 
highly dynamic destination sequenced routing dsdv mobile computers 
proceedings acm sigcomm october 
royer toh elizabeth royer 
toh 
review current routing protocols ad hoc mobile wireless networks 
ieee personal communications magazine april 
satyanarayanan satyanarayanan 
fundamental challenges mobile computing 
proceedings acm symposium principles distributed computing 
philadelphia pa may 
sivakumar sivakumar sinha bharghavan 
cedar distributed ad hoc routing algorithm 
ieee journal selected areas communication august 
sirer emin sirer robert grimm arthur gregory brian bershad 
design implementation distributed virtual machine networked computers 
proceedings symposium operating systems principles kiawah island south carolina pp 
december 
sirer emin sirer barr danny kim ian yan fung 
automatic code placement alternatives ad hoc sensor networks 
computer science technical report cornell university october 
van steen van steen tanenbaum 
globe wide area distributed system 
ieee concurrency january march pp 

stemm katz mark stemm randy katz 
measuring reducing energy consumption network interfaces hand held devices 
proceedings rd international workshop mobile multimedia communications sept 
vahdat amin vahdat alvin lebeck carla ellis 
joule precious case revisiting operating system design energy efficiency 
th acm sigops european workshop september 
weiser mark weiser brent welch alan demers scott shenker 
scheduling reduced cpu energy 
proceedings symposium operating systems design implementation monterey ca nov 
