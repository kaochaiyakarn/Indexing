automatic instancing hierarchically organized objects schultz schumann university rostock instancing approved concept save space storage dimensional scenes 
propose algorithm automatically create instances objects organized hierarchical scene graph 
definition instancing derive algorithm 
discuss results tests done implementation algorithm give options development 
keywords efficient scene storage instancing automatic instancing order reduce memory consumption complex scenes important aspect rendering performance different techniques may 
example multiresolution techniques see instancing procedural objects see tool objects 
multiresolution techniques procedural objects tool objects scope 
instancing approved concept save space computer graphics 
scenes similar objects architectural scenes scenes vegetation desirable save just properties different similar objects save full geometric representation object 
instancing realizes desired behaviour 
commercially available modelling rendering packages maya studio max renderman offer functionality 
instancing computer graphics dates back sketchpad system introduced 
sutherland defined terms master object holds full geometric information instance transformed variant master object 
automatic generation instancing hierarchies plant models considered hart defanti 
additionally extended instancing paradigm hierarchical structures recursive self similar ones 
approach dealt exact instancing fachbereich informatik universitat rostock einstein str 
rostock germany mail informatik uni rostock de deussen new approach called approximate instancing render large models vegetation 
approach observation smith set random numbers stochastic algorithms create fractal mountains particle system trees reduced representative values affecting perceived visual complexity generated images 
deussen applied clustering algorithms sets vectors real numbers representing parameters procedural plant models find representative vectors masters instancing 
furthermore deussen points approach stated terms vector quantization colour image quantization algorithms 
snyder kay instancing paradigm successfully render large models ray tracing 
instancing improve radiosity rendering shown 
shared precomputed geometric information called re usable radiosity objects speed calculation form factors visibility proposed hierarchical instancing technique allowed radiosity solutions computed complex objects entire trees 
deussen automatic instantiation special objects automatic instantiation arbitrary objects currently unsolved problem 
propose algorithm automatically create instances static scenes objects organized scene graph 
define instancing instantiation sections show general solution problem experimental results implementation give concluding remarks 
instancing section discuss instancing general give formal definition instancing 
concept instancing introduced 
point way term instance conflicts terminology object oriented programming instance concrete representation class 
better seldom term type instancing computer graphics community referencing 
sections terms master instance follows master object object holds full information 
instance objects just point master object smaller master object share certain properties master property differs master 
commonly differing property affine transformations 
instance objects save storage speed rendering ease operations objects normally done objects separately 
amount saved memory high obviously depends highly scene 
objects share certain properties scene hardly instancing 
properties instance geometric information textures material descriptions 
give formal definition instancing 
fo set objects scene 
objects csg primitives objects resulting csg operations freeform curves surfaces procedural objects parameter objects procedural objects 
property vector pn assigned object describing properties order properties objects uniform 
consequently object types property vector 
introduce distance vector objects dn property identical objects zero value interval 
value describes amount difference computed differently depending type specific property compute value certain geometric properties difficult task solved general 
special cases comparison spheres radii normalized coordinates easier compute value sense introduce threshold vector elements describe tolerable difference objects regard certain property 
way instancing identical objects similar objects possible 
elements value values interval 
negative value means corresponding property comparison objects 
demand instancing objects instances master property differ 
call objects instantiable define function easier handling satisfy equation handle instances master object introduce set elements follows avoid redundancies state automatic instancing section algorithm automatic instancing hierarchically organized static scene ntree automatic instantiation useful improve rendering speed rendering large scenes 
example scene files film gb frame need distributed rendering farms 
introducing instantiation formally abstracted fact objects hierarchical structure csg tree scene graph 
algorithm works hierarchical scene description tree called scene tree 
identify leafs scene tree single objects nodes grouping objects 
grouping objects just group objects inherit transformation attributes objects carry csg operations complex geometric operations procedural objects 
algorithm automatic instancing algorithm traverses scene recursively searches object starting leafs scene graph instantiable objects 
finds instantiable objects converted instances 
try instantiate existing instances 
try find instantiable objects grouping object children grouping object 
approach demand scene contain instances algorithm runs 
algorithm works follows 
root object scene tree current object 

current object child objects instances put current object stack child instance current object go 

compare current object objects scene tree child objects current object 
comparison objects carried comparing difference vector objects threshold vector see equation 
objects instantiable transform second object instance current object 

sister object current object instance object current object go 
take object stack current object go 
objects stack algorithm terminates 
automatic instancing example section illustrate algorithm example 
shows simple example start step step step automatic instancing example algorithm 
top initial scene tree scene displayed 
identical letters nodes denote instantiable equation objects 
letter identify instance objects 
asterisks show objects instantiated respective steps algorithm 
numbers beneath nodes show order nodes processed 
start start scene objects 
objects exist object times grouping objects 
step object processed instantiable object second traversal transformed instance 
step object second traversal finds instantiable objects transformed instances 
step process grouping object 
case instantiable child objects instances child objects instances child objects deleted transformed instance candidate master objects instantiable objects algorithm terminates 
instantiating grouping objects section show grouping objects may instantiated 
grouping objects may put categories expect certain order child objects 
examples object expects certain order grouping object carries csg difference 
example object order matter group object just inherits transformation attributes 
shape grouping object depend eventually parameters child objects comparison grouping objects normally child objects compared 
necessary traverse scene hierarchy shown 
algorithm traverses scene starting leafs objects child objects clear process parent object objects child objects compared algorithm 
instances instances part scene find matching grouping object anyway 
means possible candidates instances grouping object need check 
check child objects current object instantiated objects instances 
current group object instantiable 
test done separately checking counters types child objects 
better solution check flag set trying instantiate child objects 
flag set object instantiated 

check child objects candidate group object instances child objects current object 
child objects current group object instances need check child objects instances master objects 
current group object instantiable 

furthermore check transformation attributes child objects objects 
attributes match current group object instantiable 
note grouping objects exact order child objects matter tests 

exact order child objects current candidate grouping object 
furthermore grouping objects object type specific properties procedural object parameters need compared 
note created instances may deleted instantiation process grouping objects 
complexity algorithm works scene trees objects levels instantiable grouping objects 
complexity depends values 
clear complexity 
grouping objects better instantiable grouping objects comparisons objects may saved 
due fact number objects gets smaller algorithm creates instances grouping objects 
furthermore instantiable objects grouping objects searched child objects object 
example instancing scene doap see consists objects just comparisons objects 
instantiating scenes existing instances section demanded instances exist algorithm starts 
existing instances influence algorithm ways 
instances instances result occurs existing master objects candidates instances transformed instances instances instances allowed target system 

grouping objects may instantiated instances master objects referencing see child objects candidate master candidate instance grouping object grouping objects may instantiated 
instantiating child objects solution problem transform existing master object instance redirect existing instances new master object 
redirection expensive operation including search complete scene depending implementation method instancing 
solve second problem swapping master objects child objects candidate master grouping object possibly aforementioned high costs redirecting existing instances necessary 
implementation implemented proposed algorithm modelling environment mops see free modeling environment renderman interface 
object object object refine shaders tags transform attributes object type specific data object data structure mops mops stores object properties hierarchically organized data structure 
top level hierarchy pointers objects scene tree common attributes type information counter renderman interface specific attributes pointers shaders tags object type specific properties see 
lot information reason instance objects save memory modeller wish 
due design data structures instance objects simply small 
despite show considerable amounts memory may saved 
different approach utilized scene graph apis java implement specialized smaller node types build scene graph 
instance objects realized putting pointer object master object type specific properties 
master objects carry counter prevent removal instances exist 
implemented recursive functions traverse scene mops 
function outer traversal looks potential master objects 
function tree root tree node integer 
var num integer 

num 
exists node 
exists node 
root node 
fi 
node type instance 
num num node 
root 
fi 
node node 
od 
num 
function inner traversal looks candidate objects instances object ref 
function tree ref tree node 
integer 
var num integer 

num 
exists node 
ref node 
exists node 
num num 
ref node 
fi 
instantiable ref node 
ref node 
num num 
fi 
fi 
node node 
od 
num 
function uses auxiliary functions instantiable 
function instantiable checks objects ref node instantiable see equation 
compares types properties stored main object data structure transformation attributes 
identical compares object type specific properties 
compare object type specific data structures store pointers functions proper type hash table 
concept places mops 
new object types may easily profit automatic instancing new object type specific compare functions stored hash table 
currently functions compare various properties calculate differences suggested equation return properties compare identical identical 
comparison shaders tags may turned globally implementation respective set 
simply removes object type specific data structures tags shaders object turned instance node 
type object changed instance refine pointer set point master ref counter master increased 
experimental results scene cactus spirit doap objects original size inst 
created inst 
left new size new size table experimental results automatic instancing see appendix rendered images scenes inst 
created total number instance objects created instantiation process inst 
left number instances left scene algorithm finished 
table shows experimental results achieved implementation automatic instancing modeling environment mops 
property turned comparison instantiation affine transformations 
memory savings differ considerably scenes unexpected instancing highly dependent scene 
cactus scene contains objects instances created 
final number instances differing number created stances means grouping objects instantiated 
cactus modelled cones organized hierarchies grouping objects 
unfortunately transformation attributes cones differ lowest level groups groups may instantiated 
temporarily disabled test transformation attributes instances achieved results instances created left new file size bytes 
course scene changed bit seen dramatically expect 
scene spirit see achieved better results reduction size 
lot detail modelled scene radial motor details seen clearly rendered image scene 
highly detailed identical cylinders exhaust pipes times instantiable number instances shows 
scene shows quite similar looking objects 
exactly third object bit different parts may instantiated 
leads best result 
grouping objects instantiated may derived difference number created instances instances left 
scene tested doap shows lot architectural details columns highly detailed capitals 
scene organized groups may instantiated original size 
examples algorithm instantiated scene far second doap sgi mhz 
table shows re random nurbs curves time table results instancing random nurbs curves sults achieved trying algorithm number small control points nurbs curves put single level instantiable control vectors filled random numbers 
configuration instantiable objects single level scene hierarchy algorithm quadratic complexity pointed section 
results show clearly algorithm applicable large sets polygons preprocessing execution times fast raise unacceptable levels 
clear grouping objects scene considerable memory savings may achieved 
tested impact instantiated scenes rendering times renderman context achieved just small differences rendering times 
resolve instances parsing profit instances rendering 
small size scenes parsing time scenes impact rendering time uses opengl rendering profit small parsing times 
gave formal definition instancing 
algorithm automatic creation instances hierarchically organized scenes 
experimental results showed organized grouping objects scenes may automatically instantiated fast 
number necessary object comparisons far worst case tested scenes 
done areas 
increasing efficiency decrease number comparisons order traverse scene tree limit search candidates instancing objects visit traversal 
faster comparisons md sums objects identified candidates instancing internal data structures compared 
may time consuming case complex big objects nurbs patches 
time needed comparison reduced md checksum created data object 
test check md sums identical need check data structures objects 

enhance instantiation exclusion single objects instantiation process especially useful conjunction approximate instancing user may identify certain objects important want subject approximate instancing 
finer control comparisons terms approximate instancing currently user may just leave tags shaders attributes comparisons implementation 
thresholds certain properties equation improve 
flexible comparison certain grouping objects implementation currently take advantage fact order child objects certain grouping objects influence shape grouping object 
applicability automatic test check applicability algorithm existence grouping objects relation number grouping non grouping objects numbers 

application fields implemented algorithm just context modelling system application fields worthwhile tested 
vrml java support instancing instances grouping objects automatic instancing 
scene graph scene tree leads problems applications may interconnect object nodes change object properties rely specific structure 
mechanisms automatic instantiation static geometry applicable tested 
authors implementation instantiation reviewers constructive suggestions 
john snyder generative modeling computer graphics cad academic press steve renderman companion addison wesley john hart object instancing paradigm linear fractal modeling proceedings graphics interfaces pp 
john hart defanti efficient rendering linear computer graphics proceedings siggraph weber penn creation rendering realistic trees computer graphics proceedings siggraph hoppe derose duchamp mcdonald stuetzle mesh optimization computer graphics proceedings siggraph eck derose duchamp hoppe stuetzle multiresolution analysis arbitrary meshes computer graphics proceedings siggraph cyril francois hierarchical instantiation radiosity eurographics workshop rendering chuang liang reusable radiosity objects computer graphics forum sutherland sketchpad man machine graphical communication system proceedings spring joint computer conference deussen hanrahan mech prusinkiewicz realistic modeling rendering plant ecosystems computer graphics proceedings siggraph smith plants fractals formal languages computer graphics proceedings siggraph snyder barr ray tracing complex models containing surface computer graphics proceedings siggraph kay kajiya ray tracing complex scenes computer graphics proceedings siggraph heckbert color quantization frame buffer display computer graphics proceedings siggraph schultz schumann efficient scene descriptions advanced modelling techniques renderman context proceedings spring conference computer graphics schultz mops home page www informatik uni rostock 
de mops studio max manual discreet www discreet com learning maya www com blue moon rendering tools www com images cactus cactus instantiated approximative instancing left spirit right pyramid doap 
